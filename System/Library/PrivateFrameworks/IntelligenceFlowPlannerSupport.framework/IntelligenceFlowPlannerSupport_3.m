uint64_t sub_23F7FFF5C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F7FFF90 + 4 * byte_23FB63151[a1]))(0x647261646E617473, 0xE800000000000000);
}

uint64_t sub_23F7FFF90()
{
  return 0x7972657571;
}

uint64_t sub_23F7FFFA4()
{
  return 0x79726F7369766461;
}

unint64_t sub_23F7FFFB8()
{
  return 0xD000000000000014;
}

uint64_t sub_23F7FFFD4()
{
  sub_23F83B8DC();
  return sub_23FB2FD10();
}

uint64_t sub_23F7FFFFC()
{
  sub_23F83B8DC();
  return sub_23FB2FD1C();
}

uint64_t sub_23F800024()
{
  sub_23F83B8A0();
  return sub_23FB2FD10();
}

uint64_t sub_23F80004C()
{
  sub_23F83B8A0();
  return sub_23FB2FD1C();
}

uint64_t sub_23F800074()
{
  unsigned __int8 *v0;

  return sub_23F7FFF5C(*v0);
}

uint64_t sub_23F80007C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F7FFDB8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F8000A0()
{
  sub_23F83B864();
  return sub_23FB2FD10();
}

uint64_t sub_23F8000C8()
{
  sub_23F83B864();
  return sub_23FB2FD1C();
}

uint64_t sub_23F8000F0()
{
  sub_23F83B918();
  return sub_23FB2FD10();
}

uint64_t sub_23F800118()
{
  sub_23F83B918();
  return sub_23FB2FD1C();
}

uint64_t sub_23F800140()
{
  sub_23F83B954();
  return sub_23FB2FD10();
}

uint64_t sub_23F800168()
{
  sub_23F83B954();
  return sub_23FB2FD1C();
}

void Session.Event.Payload.QueryTrackingBehavior.encode(to:)()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F6B5220();
  sub_23F6916B8(&qword_256EAB8A8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F6B5420(v2, v9);
  sub_23F6916B8(&qword_256EAB8B0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B57BC(v4, v10);
  sub_23F6916B8(&qword_256EAB8B8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F693EB0();
  sub_23F6916B8(&qword_256EAB8C0);
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B53AC();
  sub_23F6916B8(&qword_256EAB8C8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B5208();
  v8 = *v0;
  sub_23F8773E8();
  sub_23F83B864();
  sub_23FB2FCC8();
  __asm { BR              X9 }
}

void sub_23F8002C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 - 68) = 0;
  sub_23F83B954();
  sub_23F6B54D4();
  (*(void (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 168));
  sub_23F7B0A0C(*(_QWORD *)(v2 - 96));
  sub_23F6B5100();
}

void Session.Event.Payload.QueryTrackingBehavior.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_23F6B5220();
  v4 = v3;
  sub_23F6916B8(&qword_256EAB8F8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F70D7A4(v6, v28);
  sub_23F6916B8(&qword_256EAB900);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B5BD8(v8, v29);
  sub_23F6916B8(&qword_256EAB908);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B5420(v10, v30);
  sub_23F6916B8(&qword_256EAB910);
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F693EB0();
  sub_23F6916B8(&qword_256EAB918);
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B573C();
  sub_23F6B6280(v4);
  sub_23F83B864();
  sub_23F6B6DF4();
  if (!v0)
  {
    v32 = v1;
    sub_23F878AB4();
    sub_23F878164();
    if (v13)
    {
      sub_23F8794D4();
      v31 = v14;
      v15 = sub_23F70D968();
      sub_23F6B4E44(v15, v16, v17, v18, v19, v20);
      v22 = v21;
      v24 = v23;
      sub_23F6B6E44();
      if (v22 == v24 >> 1)
        __asm { BR              X9 }
    }
    sub_23F6B6334();
    sub_23F6B5AD4();
    v26 = v25;
    sub_23F6916B8(&qword_256EA1870);
    *v26 = &type metadata for Session.Event.Payload.QueryTrackingBehavior;
    sub_23FB2FA04();
    v27 = sub_23F6B56B8();
    sub_23F6B5DAC(v27, *MEMORY[0x24BEE26D0]);
    sub_23F87948C();
    sub_23F6B5770();
    sub_23F6B6420(v2, *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v4);
  sub_23F877A30();
  sub_23F6B5100();
}

void sub_23F800614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F879360();
  sub_23F876FD0();
  if (!v0)
  {
    sub_23F6B61D0();
    JUMPOUT(0x23F8006D0);
  }
  sub_23F6B5770();
  sub_23F6B563C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  JUMPOUT(0x23F800600);
}

void sub_23F800644()
{
  uint64_t v0;

  sub_23F87956C();
  sub_23F876FD0();
  if (v0)
    JUMPOUT(0x23F80066CLL);
  JUMPOUT(0x23F8006CCLL);
}

void sub_23F800688()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _QWORD);

  sub_23F879110();
  sub_23F876FD0();
  if (v0)
  {
    sub_23F6B5770();
    sub_23F6B563C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    JUMPOUT(0x23F800600);
  }
  v3 = sub_23F6B61D0();
  sub_23F878A08(v3, v4);
  sub_23F6B5770();
  sub_23F6B563C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  JUMPOUT(0x23F80071CLL);
}

void sub_23F800734()
{
  Session.Event.Payload.QueryTrackingBehavior.init(from:)();
}

void sub_23F800748()
{
  Session.Event.Payload.QueryTrackingBehavior.encode(to:)();
}

void static Session.Event.Payload.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  _QWORD v118[35];
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD v123[6];
  uint64_t v124;
  uint64_t v125;

  sub_23F6B50E8();
  v124 = v1;
  v125 = v2;
  v118[6] = sub_23F879A20();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v3);
  v118[33] = (char *)v118 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for QueryDecorationResult(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v5);
  v118[28] = (char *)v118 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TypeConversionResult(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  v118[27] = (char *)v118 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TypeConversionRequest(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v118[26] = (char *)v118 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ClientUndoRedoRequest(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  v118[25] = (char *)v118 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UndoRedoRequest(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  v118[24] = (char *)v118 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ToolResolution(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v15);
  v118[31] = (char *)v118 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118[5] = type metadata accessor for ExternalAgentOutcome(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v17);
  v19 = sub_23F70D434((uint64_t)v118 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for ExternalAgentRequest(v19);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v20);
  v22 = sub_23F70D434((uint64_t)v118 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for ExternalAgentSpeechQuery(v22);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v23);
  v118[23] = (char *)v118 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ExternalAgentTextQuery(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v25);
  v118[22] = (char *)v118 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F877994();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v27);
  v29 = sub_23F8789D8((uint64_t)v118 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23F6B53F8(v29, (uint64_t)v123);
  v121 = v30;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F6B51A4();
  v118[20] = v32;
  sub_23F877704();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F70D434((uint64_t)v118 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  v35 = sub_23FB2C938();
  sub_23F6B53F8(v35, (uint64_t)&v122);
  v120 = v36;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v37);
  v118[17] = (char *)v118 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118[3] = sub_23F8786E8();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F6B51A4();
  v118[18] = v40;
  sub_23F878238();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F6B51A4();
  v118[16] = v42;
  type metadata accessor for RequestContent.SystemPromptResolution(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v43);
  sub_23F70D434((uint64_t)v118 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  v119 = sub_23FB2C77C();
  v118[34] = *(_QWORD *)(v119 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v45);
  v118[15] = (char *)v118 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SessionError();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v47);
  v118[1] = sub_23F8789C8((uint64_t)v118 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v49);
  sub_23F6B51A4();
  v118[0] = sub_23F877ADC(v50);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v51);
  sub_23F6B51A4();
  v118[12] = v52;
  type metadata accessor for ClientAction(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v53);
  v118[11] = (char *)v118 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActionCancellation(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v55);
  sub_23F6B51A4();
  v118[10] = v56;
  type metadata accessor for Action(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v57);
  v59 = sub_23F70D434((uint64_t)v118 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for Request(v59);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v60);
  sub_23F6B51A4();
  v62 = sub_23F70D434(v61);
  type metadata accessor for TextQuery(v62);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v63);
  v65 = sub_23F70D434((uint64_t)v118 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0));
  v118[2] = type metadata accessor for SessionStart(v65);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v66);
  v68 = sub_23F70D434((uint64_t)v118 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0));
  v123[5] = type metadata accessor for Session.Event.Payload(v68);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v69);
  sub_23F693E0C();
  v123[4] = v70;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v71);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v72);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v73);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v74);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v75);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v76);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v77);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v78);
  sub_23F6D3D14();
  v123[3] = v79;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v80);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v81);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v82);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v83);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v84);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v85);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v86);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v87);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v88);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v89);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v90);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v91);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v92);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v93);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v94);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v95);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v96);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v97);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v98);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v99);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v100);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v101);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v102);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v103);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v104);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v105);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v106);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v107);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v108);
  sub_23F70D958();
  MEMORY[0x24BDAC7A8](v109);
  sub_23F876D18();
  MEMORY[0x24BDAC7A8](v110);
  sub_23F876BF0();
  MEMORY[0x24BDAC7A8](v111);
  sub_23F6D3BD8();
  v113 = MEMORY[0x24BDAC7A8](v112);
  MEMORY[0x24BDAC7A8](v113);
  sub_23F6B62F8();
  sub_23F6916B8(&qword_256EAB920);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v114);
  sub_23F6B5208();
  v116 = v0 + *(int *)(v115 + 48);
  sub_23F83A800(v124, v0, type metadata accessor for Session.Event.Payload);
  v124 = v116;
  sub_23F83A800(v125, v116, type metadata accessor for Session.Event.Payload);
  v125 = v0;
  v117 = (char *)sub_23F8011BC + 4 * word_23FB6315E[sub_23F72DF38()];
  __asm { BR              X10 }
}

void sub_23F8011BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;

  v4 = sub_23F8767E8();
  sub_23F83A800(v4, v1, v5);
  v6 = *(_QWORD *)(v3 - 232);
  if (sub_23F72DF38())
  {
    sub_23F83A7D4(v1, type metadata accessor for SessionStart);
    sub_23F7F6110(v2, &qword_256EAB920);
  }
  else
  {
    sub_23F8771D4(v6, type metadata accessor for SessionStart, v3 - 560);
    sub_23F6B69B8();
    if ((sub_23FB2C980() & 1) != 0)
    {
      sub_23F70DBB0();
      if ((sub_23FB2C8E4() & 1) != 0)
        sub_23F877F30();
    }
    sub_23F877068(v0);
    sub_23F877068(v1);
    sub_23F83A7D4(v2, type metadata accessor for Session.Event.Payload);
  }
  sub_23F693DDC();
}

void static SessionStart.== infix(_:_:)()
{
  uint64_t v0;

  sub_23F6B6B7C();
  if ((sub_23FB2C980() & 1) != 0)
  {
    v0 = type metadata accessor for SessionStart(0);
    sub_23F876D84(v0);
    if ((sub_23FB2C8E4() & 1) != 0)
      sub_23F8785DC();
  }
  sub_23F694C84();
}

void static TextQuery.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F877494(a1);
  v5 = v5 && v3 == v4;
  if (v5 || (sub_23F6B5280(), sub_23F7A01D0(), (v6 & 1) != 0))
  {
    if (*(unsigned __int8 *)(v2 + 16) == *(unsigned __int8 *)(v1 + 16))
    {
      sub_23F879A28();
      if ((sub_23F877B9C() & 1) != 0)
      {
        sub_23F8769C4();
        if (v9)
        {
          if (v7)
          {
            sub_23F6D3998(v8);
            if (!v5 || v10 != v11)
              sub_23F6B5280();
          }
        }
      }
    }
  }
  sub_23F694C84();
}

#error "23F802790: call analysis failed (funcsize=38)"

void static Request.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  int *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  char v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  int *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[2];
  char v64;
  _QWORD v65[2];
  char v66;

  sub_23F6B50E8();
  v7 = v6;
  v9 = v8;
  v10 = sub_23F72E034();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B53AC();
  v12 = sub_23F6916B8(&qword_256EA27A0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B52B0();
  sub_23F6916B8(&qword_256EA2798);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B5C9C();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F70DD48();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F878170();
  static RequestContent.== infix(_:_:)();
  if ((v17 & 1) == 0)
    goto LABEL_32;
  v18 = (int *)type metadata accessor for Request(0);
  if (*(unsigned __int8 *)(v9 + v18[5]) != *(unsigned __int8 *)(v7 + v18[5]))
    goto LABEL_32;
  v59 = v3;
  v60 = v1;
  v61 = v0;
  v62 = v10;
  v19 = v18[6];
  v21 = *(_QWORD *)(v9 + v19);
  v20 = *(_QWORD *)(v9 + v19 + 8);
  v22 = *(unsigned __int8 *)(v9 + v19 + 16);
  v23 = v7 + v19;
  v25 = *(_QWORD *)v23;
  v24 = *(_QWORD *)(v23 + 8);
  v26 = *(unsigned __int8 *)(v23 + 16);
  if (v22 > 0xFD)
  {
    if (v26 > 0xFD)
      goto LABEL_10;
LABEL_8:
    v29 = v24;
    v30 = v25;
    sub_23F83C1AC(v25, v24, v26);
    sub_23F878B6C();
    sub_23F78942C(v30, v29, v26);
    goto LABEL_32;
  }
  v65[0] = v21;
  v65[1] = v20;
  v66 = v22;
  if (v26 > 0xFD)
  {
    v27 = v24;
    v28 = v25;
    sub_23F83C1AC(v21, v20, v22);
    sub_23F878B4C();
    sub_23F878B5C();
    v25 = v28;
    v24 = v27;
    goto LABEL_8;
  }
  v63[0] = v25;
  v63[1] = v24;
  v64 = v26;
  v57 = (uint64_t)v18;
  sub_23F83C1AC(v21, v20, v22);
  sub_23F878B4C();
  v37 = static RequestPrescribedPlan.== infix(_:_:)((uint64_t)v65, (uint64_t)v63, v31, v32, v33, v34, v35, v36, v55, v57);
  sub_23F878B5C();
  sub_23F878B6C();
  v18 = v58;
  if ((v37 & 1) == 0)
    goto LABEL_32;
LABEL_10:
  v38 = v18;
  sub_23F878500(v9 + v18[7], v4);
  sub_23F878500(v7 + v38[7], v5);
  v39 = (uint64_t *)v61;
  v40 = v61 + *(int *)(v12 + 48);
  v41 = sub_23F6B6F88();
  sub_23F878500(v41, v42);
  sub_23F878500(v5, v40);
  sub_23F6B5164(v61, 1, v62);
  if (v47)
  {
    sub_23F877374(v5);
    sub_23F877374(v4);
    v43 = sub_23F6B5164(v40, 1, v62);
    if (v47)
    {
      sub_23F878508(v43, &qword_256EA2798);
      goto LABEL_20;
    }
LABEL_18:
    sub_23F878508(v43, &qword_256EA27A0);
    goto LABEL_32;
  }
  v44 = sub_23F6B7194();
  sub_23F7DCCDC(v44, v45, v46);
  sub_23F6B5164(v40, 1, v62);
  if (v47)
  {
    sub_23F876D70(v5);
    sub_23F876D70(v4);
    v48 = sub_23F7B0BC4();
    v43 = v49(v48);
    goto LABEL_18;
  }
  v50 = sub_23F7F64A8();
  sub_23F6B5EF0(v50, v51, v52);
  sub_23F6B4EEC((uint64_t)&qword_256EA27A8);
  sub_23F877F9C();
  v56 = sub_23FB2F11C();
  v40 = v61;
  v39 = *(uint64_t **)(v60 + 8);
  ((void (*)(uint64_t, uint64_t))v39)(v59, v62);
  sub_23F877374(v5);
  sub_23F877374(v4);
  v53 = sub_23F7B0BC4();
  ((void (*)(uint64_t))v39)(v53);
  sub_23F877374(v61);
  if ((v56 & 1) == 0)
    goto LABEL_32;
LABEL_20:
  sub_23F8782D8();
  if (!v40)
  {
    if (!v2)
      goto LABEL_32;
    goto LABEL_31;
  }
  if (!v2)
  {
    sub_23F876960();
LABEL_31:
    sub_23F87738C();
    sub_23F87737C();
    sub_23F87739C();
    goto LABEL_32;
  }
  v54 = &qword_256EA2798 == v39 && v40 == v2;
  if (v54 || (sub_23F6B5280() & 1) != 0)
  {
    sub_23F877D48();
    sub_23F876960();
    sub_23F6B5AB0();
    sub_23F693DFC();
  }
  else
  {
    sub_23F876960();
    sub_23F6B5AB0();
    sub_23F693DFC();
  }
LABEL_32:
  sub_23F693DDC();
}

uint64_t static Session.Plan.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t result;
  char v12;
  BOOL v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_23F8770E0();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = *(_QWORD *)(v1 + 40);
  v9 = *(_QWORD *)(v1 + 48);
  v10 = *(_QWORD *)v0 == *(_QWORD *)v1 && *(_QWORD *)(v0 + 8) == *(_QWORD *)(v1 + 8);
  LODWORD(v27) = *(unsigned __int8 *)(v1 + 56);
  HIDWORD(v27) = *(unsigned __int8 *)(v0 + 56);
  if (v10 || (sub_23F6B5280(), result = sub_23F7A01D0(), (v12 & 1) != 0))
  {
    v13 = v2 == v6 && v3 == v7;
    if (v13 || (sub_23F6B6224(), sub_23F6B5280(), result = sub_23F7A01D0(), (v14 & 1) != 0))
    {
      v15 = sub_23F6B7194();
      sub_23F6957B8(v15, v16, v17, v18, v19, v20, v21, v22, v26, v27, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38);
      if ((v23 & 1) != 0)
      {
        if (v4)
        {
          if (v9)
          {
            if (v5 != v8 || v4 != v9)
            {
              sub_23F6B5280();
              result = sub_23F7A01D0();
              if ((v25 & 1) == 0)
                return result;
            }
            return HIDWORD(v28) == (_DWORD)v28;
          }
        }
        else if (!v9)
        {
          return HIDWORD(v28) == (_DWORD)v28;
        }
      }
      return 0;
    }
  }
  return result;
}

void static Action.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if ((sub_23F70D678() & 1) != 0)
  {
    v0 = type metadata accessor for Action(0);
    sub_23F7A029C(*(int *)(v0 + 20));
    v3 = v3 && v1 == v2;
    if (v3 || (sub_23F6B5280(), sub_23F7A01D0(), (v4 & 1) != 0))
    {
      sub_23F8769C4();
      if (v7)
      {
        if (!v5)
          goto LABEL_35;
        sub_23F6D3998(v6);
        if (!v3 || v8 != v9)
        {
          sub_23F6B5280();
          sub_23F7A01D0();
          if ((v11 & 1) == 0)
            goto LABEL_35;
        }
      }
      else if (v5)
      {
        goto LABEL_35;
      }
      sub_23F8769C4();
      if (v14)
      {
        if (!v12)
          goto LABEL_35;
        sub_23F6D3998(v13);
        if (!v3 || v15 != v16)
        {
          sub_23F6B5280();
          sub_23F7A01D0();
          if ((v18 & 1) == 0)
            goto LABEL_35;
        }
      }
      else if (v12)
      {
        goto LABEL_35;
      }
      sub_23F878768();
      if (v3)
      {
        sub_23F8772C0(*(int *)(v0 + 36));
        sub_23F69AD78();
        if ((v19 & 1) != 0)
        {
          sub_23F8769C4();
          if (v22)
          {
            if (v20)
            {
              sub_23F6D3998(v21);
              if (!v3 || v23 != v24)
                sub_23F6B5280();
            }
          }
        }
      }
    }
  }
LABEL_35:
  sub_23F694C84();
}

void static ActionCancellation.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;

  sub_23F6B50E8();
  v6 = v5;
  v28 = *(_QWORD *)(sub_23F6B58C8() - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F693EB0();
  v8 = sub_23F6916B8(&qword_256EA49D0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B52B0();
  sub_23F6B5D90();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5C9C();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F77DA54();
  v13 = MEMORY[0x24BDAC7A8](v12);
  sub_23F876A30(v13, v14, v15, v16, v17, v18, v19, v20, v27);
  sub_23F876D58(v6, v4);
  sub_23F876C98();
  sub_23F876D58(v4, v8);
  v21 = sub_23F70D8B8(v0);
  if (!v24)
  {
    sub_23F877254(v21, v22, &qword_256EA49D8);
    sub_23F70D8B8(v8);
    if (!v24)
    {
      sub_23F6D3ECC(v1, v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 32));
      sub_23F6B4EEC((uint64_t)&unk_256EA27F0);
      v25 = sub_23F876A84();
      sub_23F877930(v1);
      sub_23F8767F4(v4);
      sub_23F8767F4(v3);
      sub_23F877930(v2);
      sub_23F8767F4(v0);
      if ((v25 & 1) != 0)
        goto LABEL_11;
LABEL_12:
      v26 = 0;
      goto LABEL_13;
    }
    sub_23F876D70(v4);
    sub_23F876D70(v3);
    v23 = sub_23F876A98();
LABEL_9:
    sub_23F876C50(v23, &qword_256EA49D0);
    goto LABEL_12;
  }
  sub_23F8767F4(v4);
  sub_23F8767F4(v3);
  v23 = sub_23F70D8B8(v8);
  if (!v24)
    goto LABEL_9;
  sub_23F876C50(v23, &qword_256EA49D8);
LABEL_11:
  sub_23F878248();
  v26 = _s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0();
LABEL_13:
  sub_23F8782B8(v26);
  sub_23F693DDC();
}

void static ClientAction.== infix(_:_:)()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;

  if ((sub_23F70D678() & 1) == 0)
    goto LABEL_26;
  v0 = (int *)type metadata accessor for ClientAction(0);
  sub_23F7A029C(v0[5]);
  v3 = v3 && v1 == v2;
  if (!v3 && (sub_23F6B5280() & 1) == 0)
    goto LABEL_26;
  sub_23F8772C0(v0[6]);
  sub_23F69D3C0();
  if ((v4 & 1) == 0)
    goto LABEL_26;
  sub_23F8769C4();
  if (v7)
  {
    if (!v5)
      goto LABEL_26;
    sub_23F6D3998(v6);
    v10 = v3 && v8 == v9;
    if (!v10 && (sub_23F6B5280() & 1) == 0)
      goto LABEL_26;
  }
  else if (v5)
  {
    goto LABEL_26;
  }
  sub_23F8769C4();
  if (v13)
  {
    if (v11)
    {
      sub_23F6D3998(v12);
      v16 = v3 && v14 == v15;
      if (v16 || (sub_23F6B5280() & 1) != 0)
        goto LABEL_24;
    }
  }
  else if (!v11)
  {
LABEL_24:
    sub_23F8772C0(v0[9]);
    sub_23F69E240();
    return;
  }
LABEL_26:
  sub_23F694C84();
}

void static QueryStep.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_23F803098(a1, a2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BE52120]);
}

void static VariableStep.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_23F803098(a1, a2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BE52120]);
}

void sub_23F803098(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  if ((sub_23F8782A4(a1, a2, a3) & 1) != 0)
  {
    v3 = sub_23F879A18();
    v4 = sub_23F8772C0(*(int *)(v3 + 20));
    sub_23F876FA8(v4, v5, v6);
  }
  else
  {
    sub_23F6B6664();
  }
}

void static ExecutionStepResults.== infix(_:_:)()
{
  sub_23F694FA4();
}

void static Session.RecoverableError.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  BOOL v12;

  sub_23F6D3A90();
  sub_23F876B9C(v8);
  v11 = v11 && v9 == v10;
  if (v11 || (sub_23F6B5280() & 1) != 0)
  {
    v12 = v4 == v6 && v5 == v7;
    if ((v12 || (sub_23F6B5280() & 1) != 0) && (v0 != v2 || v1 != v3))
      sub_23F6B5280();
  }
  sub_23F6B69E0();
}

void static RequestContent.SystemPromptResolution.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_23F6B50E8();
  v6 = v5;
  v38 = *(_QWORD *)(sub_23F72E034() - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F693EB0();
  v8 = sub_23F6916B8(&qword_256EA27A0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B52B0();
  sub_23F6B5D90();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5C9C();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F77DA54();
  v13 = MEMORY[0x24BDAC7A8](v12);
  sub_23F876A30(v13, v14, v15, v16, v17, v18, v19, v20, v35);
  sub_23F876D58(v6, v4);
  sub_23F876C98();
  sub_23F876D58(v4, v8);
  v21 = sub_23F70D8B8(v0);
  if (v24)
  {
    sub_23F8767F4(v4);
    sub_23F8767F4(v3);
    v23 = sub_23F70D8B8(v8);
    if (v24)
    {
      sub_23F876C50(v23, &qword_256EA2798);
      goto LABEL_11;
    }
LABEL_9:
    sub_23F876C50(v23, &qword_256EA27A0);
LABEL_15:
    v34 = 0;
    goto LABEL_16;
  }
  sub_23F877254(v21, v22, &qword_256EA2798);
  sub_23F70D8B8(v8);
  if (v24)
  {
    sub_23F876D70(v4);
    sub_23F876D70(v3);
    v23 = sub_23F876A98();
    goto LABEL_9;
  }
  sub_23F6D3ECC(v1, v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 32));
  sub_23F6B4EEC((uint64_t)&qword_256EA27A8);
  v25 = sub_23F876A84();
  sub_23F877930(v1);
  sub_23F8767F4(v4);
  sub_23F8767F4(v3);
  sub_23F877930(v2);
  sub_23F8767F4(v0);
  if ((v25 & 1) == 0)
    goto LABEL_15;
LABEL_11:
  v26 = sub_23F87798C();
  if ((sub_23FB2C4A0() & 1) == 0)
    goto LABEL_15;
  sub_23F878748();
  static RequestContent.SystemPromptResolution.UserAction.== infix(_:_:)();
  if ((v27 & 1) == 0 || (sub_23F877B9C() & 1) == 0)
    goto LABEL_15;
  v34 = static RequestContent.SystemPromptResolution.ResolutionInput.== infix(_:_:)(v37 + *(int *)(v26 + 32), v6 + *(int *)(v26 + 32), v28, v29, v30, v31, v32, v33, v36, v37, v6, v38);
LABEL_16:
  sub_23F8782B8(v34);
  sub_23F693DDC();
}

void static ActionStepResult.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  char v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36[4];

  sub_23F6B50E8();
  v6 = v5;
  sub_23F72E034();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B5208();
  v8 = sub_23F6916B8(&qword_256EA27A0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B52B0();
  sub_23F6B5D90();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v36[3] = (uint64_t)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F77DA54();
  v14 = MEMORY[0x24BDAC7A8](v13);
  sub_23F876A30(v14, v15, v16, v17, v18, v19, v20, v21, v36[0]);
  v36[2] = v6;
  sub_23F876D58(v6, v4);
  sub_23F876C98();
  sub_23F876D58(v4, v8);
  v22 = sub_23F70D8B8(v0);
  if (v25)
  {
    sub_23F8767F4(v4);
    sub_23F8767F4(v3);
    v24 = sub_23F70D8B8(v8);
    if (v25)
    {
      sub_23F876C50(v24, &qword_256EA2798);
      goto LABEL_11;
    }
LABEL_9:
    sub_23F876C50(v24, &qword_256EA27A0);
    goto LABEL_22;
  }
  sub_23F878B30(v22, v23, &qword_256EA2798);
  sub_23F70D8B8(v8);
  if (v25)
  {
    sub_23F876D70(v4);
    sub_23F876D70(v3);
    v24 = sub_23F7B0990((uint64_t)&qword_256EA2798, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    goto LABEL_9;
  }
  sub_23F6D3ECC(v2, v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32));
  sub_23F6B4EEC((uint64_t)&qword_256EA27A8);
  v26 = sub_23F6B5624();
  sub_23F877930(v2);
  sub_23F8767F4(v4);
  sub_23F8767F4(v3);
  sub_23F877930((uint64_t)&qword_256EA2798);
  sub_23F8767F4(v0);
  if ((v26 & 1) == 0)
    goto LABEL_22;
LABEL_11:
  sub_23F878238();
  sub_23F8767B0();
  if (v25)
    v29 = v27 == v28;
  else
    v29 = 0;
  if (v29 || (sub_23F6B5280(), v30 = sub_23F7A01D0(), (v31 & 1) != 0))
  {
    sub_23F878748();
    static ActionResult.== infix(_:_:)();
    if ((v32 & 1) != 0)
    {
      sub_23F8767B0();
      if (v25)
        v35 = v33 == v34;
      else
        v35 = 0;
      if (v35)
        v30 = 1;
      else
        v30 = sub_23F6B5280();
      goto LABEL_23;
    }
LABEL_22:
    v30 = 0;
  }
LABEL_23:
  sub_23F8782B8(v30);
  sub_23F693DDC();
}

void static QueryStepResults.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;

  sub_23F8799F0(a1);
  if ((sub_23F698B10() & 1) != 0
    && (v1 = sub_23F8786E8(),
        sub_23F876D84(v1),
        (_s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0() & 1) != 0))
  {
    sub_23F70D938(*(int *)(v1 + 24));
    sub_23FB2C4A0();
  }
  else
  {
    sub_23F694C84();
  }
}

void static ActionResolverRequest.== infix(_:_:)()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  if ((sub_23F70D678() & 1) != 0)
  {
    v0 = (int *)sub_23F877704();
    sub_23F7A029C(v0[5]);
    v3 = v3 && v1 == v2;
    if (v3 || (sub_23F6B5280() & 1) != 0)
    {
      sub_23F8772C0(v0[6]);
      sub_23F69DB94();
      if ((v4 & 1) != 0)
      {
        v5 = sub_23F8772C0(v0[7]);
        sub_23F7E0318(v5, v6);
        if ((v7 & 1) != 0)
        {
          sub_23F8772C0(v0[8]);
          sub_23F69E108();
          if ((v8 & 1) != 0)
          {
            sub_23F878768();
            if (v3)
            {
              sub_23F878768();
              if (v3)
                sub_23F8785DC();
            }
          }
        }
      }
    }
  }
  sub_23F694C84();
}

void static ResponseGenerationRequest.== infix(_:_:)()
{
  sub_23F695290();
}

uint64_t static ClientInitiatedClientAction.== infix(_:_:)(uint64_t a1)
{
  return sub_23F8042E4(a1);
}

uint64_t static SafetyModeException.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;

  v3 = a1[1];
  v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      v5 = *a1 == *a2 && v3 == v4;
      if (v5 || (sub_23F6B5280() & 1) != 0)
        return 1;
    }
  }
  else if (!v4)
  {
    return 1;
  }
  return 0;
}

void static ContextRetrieved.== infix(_:_:)()
{
  char v0;

  sub_23F6989C8();
  if ((v0 & 1) != 0)
  {
    sub_23F6B5994();
    sub_23F6989C8();
  }
  else
  {
    sub_23F694CC8();
  }
}

void static ToolRetrievalResponse.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  float v4;
  uint64_t v5;
  uint64_t v6;
  float v7;
  BOOL v8;
  BOOL v9;
  char v10;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(float *)(a1 + 32);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(float *)(a2 + 32);
  v8 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v8 || (sub_23F6B5280() & 1) != 0)
  {
    v9 = v2 == v5 && v3 == v6;
    if ((v9 || (sub_23F6B5280() & 1) != 0) && v4 == v7)
    {
      sub_23F6B5EE4();
      sub_23F6989AC();
      if ((v10 & 1) != 0)
      {
        sub_23F6B5994();
        sub_23F69D90C();
      }
    }
  }
}

void static EntitySpanMatchResult.== infix(_:_:)()
{
  sub_23F69579C();
}

void static StatementResult.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  char v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;

  sub_23F6B50E8();
  v6 = v5;
  sub_23F72E034();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B5208();
  v8 = sub_23F6916B8(&qword_256EA27A0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B52B0();
  sub_23F6B5D90();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v38 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F77DA54();
  v14 = MEMORY[0x24BDAC7A8](v13);
  sub_23F876A30(v14, v15, v16, v17, v18, v19, v20, v21, v35);
  v37 = v6;
  sub_23F876D58(v6, v4);
  sub_23F876C98();
  sub_23F876D58(v4, v8);
  v22 = sub_23F70D8B8(v0);
  if (v25)
  {
    sub_23F8767F4(v4);
    sub_23F8767F4(v3);
    v24 = sub_23F70D8B8(v8);
    if (v25)
    {
      sub_23F876C50(v24, &qword_256EA2798);
      goto LABEL_11;
    }
LABEL_9:
    sub_23F876C50(v24, &qword_256EA27A0);
    goto LABEL_24;
  }
  sub_23F878B30(v22, v23, &qword_256EA2798);
  sub_23F70D8B8(v8);
  if (v25)
  {
    sub_23F876D70(v4);
    sub_23F876D70(v3);
    v24 = sub_23F7B0990((uint64_t)&qword_256EA2798, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    goto LABEL_9;
  }
  sub_23F6D3ECC(v2, v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32));
  sub_23F6B4EEC((uint64_t)&qword_256EA27A8);
  v26 = sub_23F6B5624();
  sub_23F877930(v2);
  sub_23F8767F4(v4);
  sub_23F8767F4(v3);
  sub_23F877930((uint64_t)&qword_256EA2798);
  sub_23F8767F4(v0);
  if ((v26 & 1) == 0)
    goto LABEL_24;
LABEL_11:
  v27 = *(int *)(sub_23F877994() + 20);
  v28 = *(_QWORD *)(v37 + v27 + 8);
  if (!*(_QWORD *)(v36 + v27 + 8))
  {
    if (v28)
      goto LABEL_24;
LABEL_20:
    sub_23F878748();
    static StatementResultPayload.== infix(_:_:)();
    if ((v34 & 1) != 0 && (sub_23F877B9C() & 1) != 0 && (sub_23F877B9C() & 1) != 0)
    {
      v32 = sub_23F877B9C();
      goto LABEL_25;
    }
LABEL_24:
    v32 = 0;
    goto LABEL_25;
  }
  if (!v28)
    goto LABEL_24;
  sub_23F6D3998(v36 + v27);
  if (v25)
    v31 = v29 == v30;
  else
    v31 = 0;
  if (v31)
    goto LABEL_20;
  sub_23F6B5280();
  v32 = sub_23F7A01D0();
  if ((v33 & 1) != 0)
    goto LABEL_20;
LABEL_25:
  sub_23F8782B8(v32);
  sub_23F693DDC();
}

void static ExternalAgentTextQuery.== infix(_:_:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  BOOL v26;
  uint64_t v27;
  char v28;
  uint64_t v29;

  sub_23F6B50E8();
  v6 = v5;
  v8 = v7;
  v9 = sub_23F72E034();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F70D7A4(v11, v27);
  v12 = sub_23F6916B8(&qword_256EA27A0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B52B0();
  sub_23F6916B8(&qword_256EA2798);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B5C9C();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B62F8();
  v17 = *v8 == *v6 && v8[1] == v6[1];
  if (!v17 && (sub_23F6B5280() & 1) == 0)
    goto LABEL_28;
  v18 = sub_23F878EA4();
  sub_23F87869C((uint64_t)v8 + *(int *)(v18 + 20), v3);
  sub_23F87869C((uint64_t)v6 + *(int *)(v18 + 20), v4);
  v19 = (uint64_t)v0 + *(int *)(v12 + 48);
  v20 = sub_23F72E2E0();
  sub_23F87869C(v20, v21);
  sub_23F87869C(v4, v19);
  v22 = sub_23F70D8B8((uint64_t)v0);
  if (v17)
  {
    sub_23F8767F4(v4);
    sub_23F8767F4(v3);
    v24 = sub_23F70D8B8(v19);
    if (v17)
    {
      sub_23F876C50(v24, &qword_256EA2798);
      goto LABEL_16;
    }
LABEL_14:
    sub_23F876C50(v24, &qword_256EA27A0);
    goto LABEL_28;
  }
  sub_23F877254(v22, v23, &qword_256EA2798);
  sub_23F70D8B8(v19);
  if (v25)
  {
    sub_23F876D70(v4);
    sub_23F876D70(v3);
    v24 = sub_23F876A98();
    goto LABEL_14;
  }
  sub_23F6D3ECC(v29, v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32));
  sub_23F6B4EEC((uint64_t)&qword_256EA27A8);
  v28 = sub_23F876A84();
  sub_23F878E04(v29);
  sub_23F8767F4(v4);
  sub_23F8767F4(v3);
  sub_23F878E04(v2);
  sub_23F8767F4((uint64_t)v0);
  if ((v28 & 1) == 0)
    goto LABEL_28;
LABEL_16:
  sub_23F8782D8();
  if (!v9)
  {
    if (!v2)
      goto LABEL_28;
    goto LABEL_27;
  }
  if (!v2)
  {
    sub_23F6B54F8();
    sub_23F6B6254();
LABEL_27:
    sub_23F87738C();
    sub_23F87737C();
    sub_23F87739C();
    goto LABEL_28;
  }
  v26 = v0 == &qword_256EA2798 && v9 == v2;
  if (v26 || (sub_23F6B5280() & 1) != 0)
  {
    sub_23F877D48();
    sub_23F876960();
    sub_23F6B5AB0();
    sub_23F693DFC();
  }
  else
  {
    sub_23F876960();
    sub_23F6B5AB0();
    sub_23F693DFC();
  }
LABEL_28:
  sub_23F693DDC();
}

#error "23F803E38: call analysis failed (funcsize=154)"

void static ExternalAgentRequest.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  BOOL v24;

  sub_23F6B50E8();
  v7 = v6;
  v8 = sub_23F72E034();
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F693EB0();
  v10 = sub_23F6916B8(&qword_256EA27A0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B52B0();
  sub_23F6916B8(&qword_256EA2798);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5C9C();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F70DD48();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F878170();
  static RequestContent.== infix(_:_:)();
  if ((v15 & 1) == 0)
    goto LABEL_24;
  v16 = sub_23F878240();
  v17 = sub_23F879918(v16);
  sub_23F876C10(v17, v4);
  sub_23F876C10(v7 + *(int *)(v0 + 20), v5);
  v18 = (uint64_t)v1 + *(int *)(v10 + 48);
  sub_23F876C10(v4, (uint64_t)v1);
  sub_23F876C10(v5, v18);
  v19 = sub_23F70D8B8((uint64_t)v1);
  if (v22)
  {
    sub_23F8767F4(v5);
    sub_23F8767F4(v4);
    v21 = sub_23F70D8B8(v18);
    if (v22)
    {
      sub_23F876C50(v21, &qword_256EA2798);
      goto LABEL_12;
    }
LABEL_10:
    sub_23F876C50(v21, &qword_256EA27A0);
    goto LABEL_24;
  }
  sub_23F877254(v19, v20, &qword_256EA2798);
  sub_23F70D8B8(v18);
  if (v22)
  {
    sub_23F8768C0(v5);
    sub_23F8768C0(v4);
    v21 = sub_23F876A98();
    goto LABEL_10;
  }
  sub_23F6D3ECC(v2, v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 32));
  sub_23F6B4EEC((uint64_t)&qword_256EA27A8);
  v23 = sub_23F876A84();
  sub_23F6D39FC(v2);
  sub_23F8767F4(v5);
  sub_23F8767F4(v4);
  sub_23F6D39FC(v3);
  sub_23F8767F4((uint64_t)v1);
  if ((v23 & 1) == 0)
    goto LABEL_24;
LABEL_12:
  sub_23F87794C();
  if (!v8)
  {
    if (!v3)
      goto LABEL_24;
    goto LABEL_23;
  }
  if (!v3)
  {
    sub_23F6B54F8();
    sub_23F6B6254();
LABEL_23:
    sub_23F87738C();
    sub_23F87737C();
    sub_23F87739C();
    goto LABEL_24;
  }
  v24 = v1 == &qword_256EA2798 && v8 == v3;
  if (v24 || (sub_23F6B5280() & 1) != 0)
  {
    sub_23F877D48();
    sub_23F876960();
    sub_23F6B5AB0();
    sub_23F693DFC();
  }
  else
  {
    sub_23F876960();
    sub_23F6B5AB0();
    sub_23F693DFC();
  }
LABEL_24:
  sub_23F693DDC();
}

void static ExternalAgentOutcome.== infix(_:_:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  if ((sub_23F70D678() & 1) != 0
    && (v0 = type metadata accessor for ExternalAgentOutcome(0), sub_23F876D84(v0), (sub_23FB2D0D0() & 1) != 0))
  {
    v1 = (_QWORD *)sub_23F8772C0(*(int *)(v0 + 24));
    sub_23F878150(v1, v2);
  }
  else
  {
    sub_23F694C84();
  }
}

uint64_t static ExternalAgentRequestRewriteMetadata.== infix(_:_:)(uint64_t a1)
{
  return sub_23F8042E4(a1);
}

uint64_t sub_23F8042E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  BOOL v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);

  v1 = sub_23F878F78(a1);
  v4 = v1 == *v3 && v2 == v3[1];
  if (!v4 && (sub_23F6B5280() & 1) == 0)
    return 0;
  v5 = sub_23F6B5994();
  return v6(v5);
}

void static ToolResolution.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_23F804A9C(a1, a2, MEMORY[0x24BEB8FA0], (uint64_t)type metadata accessor for ToolResolution, (uint64_t (*)(uint64_t))MEMORY[0x24BE52120]);
}

void static UndoRedoRequest.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t, uint64_t);
  void (*v44)(uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  v8 = (int *)sub_23F6B58C8();
  v50 = *((_QWORD *)v8 - 1);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B5810(v10, v47);
  v52 = sub_23F6916B8(&qword_256EA49D0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B59E0();
  sub_23F6916B8(&qword_256EA49D8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F693E0C();
  v51 = v13;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6D3D14();
  v53 = v15;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B6580();
  v54 = v17;
  v56 = *(_QWORD *)(sub_23F72E034() - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B5C10(v19, v48);
  v20 = sub_23F6916B8(&qword_256EA27A0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B5298();
  sub_23F6916B8(&qword_256EA2798);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F693E0C();
  v57 = v23;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F876AD4();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F6B5F6C();
  v26 = *v7 == *v5 && v7[1] == v5[1];
  if (!v26)
  {
    sub_23F6B5280();
    sub_23F7A01D0();
    if ((v27 & 1) == 0)
      goto LABEL_28;
  }
  sub_23F8786D0();
  sub_23F878C38();
  sub_23F876D28((uint64_t)v7 + v28, v1);
  sub_23F876D28((uint64_t)v5 + v8[5], v2);
  v29 = v0 + *(int *)(v20 + 48);
  v30 = sub_23F7D29DC();
  sub_23F876D28(v30, v31);
  sub_23F876D28(v2, v29);
  sub_23F70D8B8(v0);
  if (!v26)
  {
    sub_23F7DCCDC(v0, v57, &qword_256EA2798);
    sub_23F70D8B8(v29);
    if (!v33)
    {
      sub_23F6D3ECC(v55, v29, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 32));
      sub_23F6B4EEC((uint64_t)&qword_256EA27A8);
      v49 = sub_23F6B5624();
      sub_23F878E04(v55);
      sub_23F8768C0(v2);
      sub_23F8768C0(v1);
      sub_23F878E04(v57);
      sub_23F8768C0(v0);
      if ((v49 & 1) == 0)
        goto LABEL_28;
      goto LABEL_17;
    }
    sub_23F8768C0(v2);
    sub_23F8768C0(v1);
    v34 = sub_23F7D2C3C();
    sub_23F7B0990(v34, v35);
LABEL_14:
    v36 = &qword_256EA27A0;
    v37 = v0;
LABEL_15:
    sub_23F7F6110(v37, v36);
    goto LABEL_28;
  }
  sub_23F8768C0(v2);
  sub_23F8768C0(v1);
  v32 = sub_23F70D8B8(v29);
  if (!v26)
    goto LABEL_14;
  sub_23F876B14(v32, &qword_256EA2798);
LABEL_17:
  if (*((unsigned __int8 *)v7 + v8[6]) == *((unsigned __int8 *)v5 + v8[6]) && (sub_23F877B9C() & 1) != 0)
  {
    sub_23F878D20((uint64_t)v7 + v8[8], v54);
    sub_23F878D20((uint64_t)v5 + v8[8], v53);
    v38 = v3 + *(int *)(v52 + 48);
    sub_23F878D20(v54, v3);
    sub_23F878D20(v53, v38);
    sub_23F6B5164(v3, 1, (uint64_t)v8);
    if (v26)
    {
      sub_23F87819C(v53);
      sub_23F87819C(v54);
      v39 = sub_23F6B5164(v38, 1, (uint64_t)v8);
      if (v26)
      {
        sub_23F878508(v39, &qword_256EA49D8);
        goto LABEL_28;
      }
    }
    else
    {
      sub_23F7DCCDC(v3, v51, &qword_256EA49D8);
      sub_23F6B5164(v38, 1, (uint64_t)v8);
      if (!v40)
      {
        v41 = sub_23F7D29DC();
        sub_23F6B633C(v41, v42, v43);
        sub_23F6B4EEC((uint64_t)&unk_256EA27F0);
        sub_23F6B6218();
        sub_23FB2F11C();
        v44 = *(void (**)(uint64_t))(v50 + 8);
        v45 = sub_23F6B6964();
        v44(v45);
        sub_23F87819C(v53);
        sub_23F87819C(v54);
        v46 = sub_23F72E2E0();
        v44(v46);
        sub_23F87819C(v3);
        goto LABEL_28;
      }
      sub_23F876D70(v53);
      sub_23F876D70(v54);
      sub_23F6B530C(v51, *(uint64_t (**)(uint64_t, uint64_t))(v50 + 8));
    }
    v36 = &qword_256EA49D0;
    v37 = v3;
    goto LABEL_15;
  }
LABEL_28:
  sub_23F693DDC();
}

void static ClientUndoRedoRequest.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;

  sub_23F6B50E8();
  v7 = v6;
  v9 = v8;
  sub_23F6B58C8();
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B6B5C();
  v11 = sub_23F6916B8(&qword_256EA49D0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5298();
  sub_23F6916B8(&qword_256EA49D8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B5C80();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F72E168();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F877908();
  if ((sub_23FB2C4A0() & 1) != 0)
  {
    v22 = v5;
    v16 = type metadata accessor for ClientUndoRedoRequest(0);
    if (*(unsigned __int8 *)(v9 + *(int *)(v16 + 20)) == *(unsigned __int8 *)(v7 + *(int *)(v16 + 20)))
    {
      v17 = v16;
      if ((_s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0() & 1) != 0)
      {
        sub_23F876D28(v9 + *(int *)(v17 + 28), v3);
        sub_23F876D28(v7 + *(int *)(v17 + 28), v4);
        v18 = v0 + *(int *)(v11 + 48);
        sub_23F876D28(v3, v0);
        sub_23F876D28(v4, v18);
        sub_23F70D8B8(v0);
        if (!v21)
        {
          sub_23F8795B0(v0, v19, &qword_256EA49D8);
          sub_23F70D8B8(v18);
          if (!v21)
          {
            sub_23F6D3ECC(v1, v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 32));
            sub_23F6B4EEC((uint64_t)&unk_256EA27F0);
            sub_23F6B5624();
            sub_23F8781A4(v1);
            sub_23F8768C0(v4);
            sub_23F8768C0(v3);
            sub_23F8781A4(v2);
            sub_23F8768C0(v0);
            goto LABEL_13;
          }
          sub_23F8768C0(v4);
          sub_23F8768C0(v3);
          v20 = sub_23F7B0990(v2, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
LABEL_12:
          sub_23F876B14(v20, &qword_256EA49D0);
          goto LABEL_13;
        }
        sub_23F8768C0(v4);
        sub_23F8768C0(v3);
        v20 = sub_23F70D8B8(v18);
        if (!v21)
          goto LABEL_12;
        sub_23F876B14(v20, &qword_256EA49D8);
      }
    }
  }
LABEL_13:
  sub_23F693DDC();
}

void static TypeConversionRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_23F804A9C(a1, a2, MEMORY[0x24BEB99D0], (uint64_t)type metadata accessor for TypeConversionRequest, MEMORY[0x24BEB9A80]);
}

void sub_23F804A9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  if ((a3() & 1) != 0 && (v6 = sub_23F879A30(), v7 = sub_23F876D84(v6), (a5(v7) & 1) != 0))
  {
    sub_23F70D938(*(int *)(v6 + 24));
    sub_23F877260();
  }
  else
  {
    sub_23F694C84();
  }
}

void static TypeConversionResult.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_23F804A9C(a1, a2, MEMORY[0x24BEB99D0], (uint64_t)type metadata accessor for TypeConversionResult, (uint64_t (*)(uint64_t))MEMORY[0x24BE52120]);
}

void static QueryDecorationResult.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t DecorationResult;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  void (*v27)(uint64_t, uint64_t);
  char v28;
  uint64_t v29;

  sub_23F6B50E8();
  sub_23F8774B0();
  v8 = sub_23FB2E354();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F693EB0();
  v10 = sub_23F6916B8(&qword_256EAB928);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B52B0();
  sub_23F6916B8(&qword_256EA71F8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5C9C();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B62F8();
  sub_23F69579C();
  if ((v15 & 1) == 0)
    goto LABEL_15;
  sub_23F6989C8();
  if ((v16 & 1) == 0)
    goto LABEL_15;
  sub_23F6989C8();
  if ((v17 & 1) == 0)
    goto LABEL_15;
  v29 = v7;
  DecorationResult = type metadata accessor for QueryDecorationResult(0);
  sub_23F7DCCDC(v1 + *(int *)(DecorationResult + 28), v5, &qword_256EA71F8);
  sub_23F877E74(v0 + *(int *)(DecorationResult + 28), v6);
  v19 = v2 + *(int *)(v10 + 48);
  v20 = sub_23F72E2E0();
  sub_23F877E74(v20, v21);
  sub_23F877E74(v6, v19);
  v22 = sub_23F70D8B8(v2);
  if (!v25)
  {
    sub_23F877254(v22, v23, &qword_256EA71F8);
    sub_23F70D8B8(v19);
    if (!v25)
    {
      sub_23F6D3ECC(v3, v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 32));
      sub_23F6B4EEC((uint64_t)&unk_256EAB930);
      v26 = sub_23F876A84();
      v27 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
      v27(v3, v8);
      sub_23F8767F4(v6);
      sub_23F8767F4(v5);
      v27(v4, v8);
      sub_23F8767F4(v2);
      if ((v26 & 1) != 0)
        goto LABEL_14;
LABEL_15:
      v28 = 0;
      goto LABEL_16;
    }
    sub_23F876D70(v6);
    sub_23F876D70(v5);
    v24 = sub_23F876A98();
LABEL_12:
    sub_23F876C50(v24, &qword_256EAB928);
    goto LABEL_15;
  }
  sub_23F8767F4(v6);
  sub_23F8767F4(v5);
  v24 = sub_23F70D8B8(v19);
  if (!v25)
    goto LABEL_12;
  sub_23F876C50(v24, &qword_256EA71F8);
LABEL_14:
  sub_23F6989DC();
LABEL_16:
  sub_23F8782B8(v28);
  sub_23F693DDC();
}

uint64_t static QueryDecorationPrePlannerResult.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  char v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v10;
  char v11;

  if ((sub_23F70D678() & 1) != 0)
  {
    v1 = sub_23F879A20();
    sub_23F7A029C(*(int *)(v1 + 20));
    v4 = v4 && v2 == v3;
    if (v4 || (sub_23F6B5280(), v5 = sub_23F7A01D0(), (v6 & 1) != 0))
    {
      v7 = *(int *)(v1 + 24);
      v8 = *(_BYTE *)(v0 + v7 + 8);
      v10 = *(_QWORD *)(v0 + v7);
      v11 = v8;
      sub_23F878CC4();
      static QueryDecorationPrePlannerResultPayload.== infix(_:_:)((uint64_t)&v10);
    }
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_23F804DF8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v7;

  v2 = a1 == 6775156 && a2 == 0xE300000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x800000023FB34970)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = sub_23FB2FB78();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F804F2C(char a1)
{
  if (!a1)
    return 6775156;
  if (a1 == 1)
    return 0x65756C6176;
  return 0xD000000000000010;
}

uint64_t sub_23F804F7C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;
  char v24;

  v2 = a1 == 0x536E6F6973736573 && a2 == 0xEC00000074726174;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7265755174786574 && a2 == 0xE900000000000079;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x7551686365657073 && a2 == 0xEB00000000797265;
      if (v7 || (sub_23FB2FB78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x74736575716572 && a2 == 0xE700000000000000;
        if (v8 || (sub_23FB2FB78() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x616572436E616C70 && a2 == 0xEB00000000646574;
          if (v9 || (sub_23FB2FB78() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x72436E6F69746361 && a2 == 0xED00006465746165;
            if (v10 || (sub_23FB2FB78() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 0x61436E6F69746361 && a2 == 0xEE0064656C65636ELL;
              if (v11 || (sub_23FB2FB78() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else if (a1 == 0xD000000000000013 && a2 == 0x800000023FB345D0 || (sub_23FB2FB78() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else
              {
                v12 = a1 == 0x4373656972657571 && a2 == 0xEE00646574616572;
                if (v12 || (sub_23FB2FB78() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else
                {
                  v13 = a1 == 0x656C626169726176 && a2 == 0xEC00000074655373;
                  if (v13 || (sub_23FB2FB78() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 9;
                  }
                  else
                  {
                    v14 = a1 == 0x6578457370657473 && a2 == 0xED00006465747563;
                    if (v14 || (sub_23FB2FB78() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 10;
                    }
                    else if (a1 == 0xD000000000000010 && a2 == 0x800000023FB345F0 || (sub_23FB2FB78() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 11;
                    }
                    else if (a1 == 0xD000000000000010 && a2 == 0x800000023FB33920 || (sub_23FB2FB78() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 12;
                    }
                    else if (a1 == 0xD000000000000010 && a2 == 0x800000023FB34610 || (sub_23FB2FB78() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 13;
                    }
                    else
                    {
                      v15 = a1 == 0x6C61636974697263 && a2 == 0xED0000726F727245;
                      if (v15 || (sub_23FB2FB78() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 14;
                      }
                      else
                      {
                        v16 = a1 == 0x7543746E65696C63 && a2 == 0xEC0000006D6F7473;
                        if (v16 || (sub_23FB2FB78() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 15;
                        }
                        else
                        {
                          v17 = a1 == 0x616C50664F646E65 && a2 == 0xE90000000000006ELL;
                          if (v17 || (sub_23FB2FB78() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 16;
                          }
                          else if (a1 == 0xD000000000000010 && a2 == 0x800000023FB34630
                                 || (sub_23FB2FB78() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 17;
                          }
                          else
                          {
                            v18 = a1 == 0x74616E696D726574 && a2 == 0xE900000000000065;
                            if (v18 || (sub_23FB2FB78() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 18;
                            }
                            else if (a1 == 0xD000000000000015 && a2 == 0x800000023FB34650
                                   || (sub_23FB2FB78() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 19;
                            }
                            else if (a1 == 0xD000000000000014 && a2 == 0x800000023FB34670
                                   || (sub_23FB2FB78() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 20;
                            }
                            else
                            {
                              v19 = a1 == 0x78456E6F69746361 && a2 == 0xEE00646574756365;
                              if (v19 || (sub_23FB2FB78() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 21;
                              }
                              else
                              {
                                v20 = a1 == 0x4573656972657571 && a2 == 0xEF64657475636578;
                                if (v20 || (sub_23FB2FB78() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 22;
                                }
                                else if (a1 == 0xD000000000000017 && a2 == 0x800000023FB34690
                                       || (sub_23FB2FB78() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 23;
                                }
                                else if (a1 == 0xD00000000000001CLL && a2 == 0x800000023FB346B0
                                       || (sub_23FB2FB78() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 24;
                                }
                                else if (a1 == 0xD000000000000020 && a2 == 0x800000023FB346D0
                                       || (sub_23FB2FB78() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 25;
                                }
                                else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023FB34700
                                       || (sub_23FB2FB78() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 26;
                                }
                                else if (a1 == 0xD000000000000015 && a2 == 0x800000023FB34720
                                       || (sub_23FB2FB78() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 27;
                                }
                                else if (a1 == 0xD000000000000017 && a2 == 0x800000023FB34740
                                       || (sub_23FB2FB78() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 28;
                                }
                                else if (a1 == 0xD000000000000011 && a2 == 0x800000023FB34760
                                       || (sub_23FB2FB78() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 29;
                                }
                                else if (a1 == 0xD000000000000013 && a2 == 0x800000023FB34780
                                       || (sub_23FB2FB78() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 30;
                                }
                                else if (a1 == 0xD000000000000010 && a2 == 0x800000023FB347A0
                                       || (sub_23FB2FB78() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 31;
                                }
                                else
                                {
                                  v21 = a1 == 0x746552736C6F6F74 && a2 == 0xEE00646576656972;
                                  if (v21 || (sub_23FB2FB78() & 1) != 0)
                                  {
                                    swift_bridgeObjectRelease();
                                    return 32;
                                  }
                                  else if (a1 == 0xD000000000000011 && a2 == 0x800000023FB347C0
                                         || (sub_23FB2FB78() & 1) != 0)
                                  {
                                    swift_bridgeObjectRelease();
                                    return 33;
                                  }
                                  else if (a1 == 0xD000000000000017 && a2 == 0x800000023FB347E0
                                         || (sub_23FB2FB78() & 1) != 0)
                                  {
                                    swift_bridgeObjectRelease();
                                    return 34;
                                  }
                                  else if (a1 == 0xD000000000000012 && a2 == 0x800000023FB34800
                                         || (sub_23FB2FB78() & 1) != 0)
                                  {
                                    swift_bridgeObjectRelease();
                                    return 35;
                                  }
                                  else if (a1 == 0xD000000000000016 && a2 == 0x800000023FB34820
                                         || (sub_23FB2FB78() & 1) != 0)
                                  {
                                    swift_bridgeObjectRelease();
                                    return 36;
                                  }
                                  else if (a1 == 0xD000000000000018 && a2 == 0x800000023FB34840
                                         || (sub_23FB2FB78() & 1) != 0)
                                  {
                                    swift_bridgeObjectRelease();
                                    return 37;
                                  }
                                  else if (a1 == 0xD000000000000014 && a2 == 0x800000023FB34860
                                         || (sub_23FB2FB78() & 1) != 0)
                                  {
                                    swift_bridgeObjectRelease();
                                    return 38;
                                  }
                                  else if (a1 == 0xD000000000000014 && a2 == 0x800000023FB34880
                                         || (sub_23FB2FB78() & 1) != 0)
                                  {
                                    swift_bridgeObjectRelease();
                                    return 39;
                                  }
                                  else if (a1 == 0xD000000000000023 && a2 == 0x800000023FB348A0
                                         || (sub_23FB2FB78() & 1) != 0)
                                  {
                                    swift_bridgeObjectRelease();
                                    return 40;
                                  }
                                  else
                                  {
                                    v22 = a1 == 0x6F7365526C6F6F74 && a2 == 0xEE006E6F6974756CLL;
                                    if (v22 || (sub_23FB2FB78() & 1) != 0)
                                    {
                                      swift_bridgeObjectRelease();
                                      return 41;
                                    }
                                    else
                                    {
                                      v23 = a1 == 0x6F6465526F646E75 && a2 == 0xEF74736575716552;
                                      if (v23 || (sub_23FB2FB78() & 1) != 0)
                                      {
                                        swift_bridgeObjectRelease();
                                        return 42;
                                      }
                                      else if (a1 == 0xD000000000000015 && a2 == 0x800000023FB348D0
                                             || (sub_23FB2FB78() & 1) != 0)
                                      {
                                        swift_bridgeObjectRelease();
                                        return 43;
                                      }
                                      else if (a1 == 0xD000000000000015 && a2 == 0x800000023FB348F0
                                             || (sub_23FB2FB78() & 1) != 0)
                                      {
                                        swift_bridgeObjectRelease();
                                        return 44;
                                      }
                                      else if (a1 == 0xD000000000000014 && a2 == 0x800000023FB34910
                                             || (sub_23FB2FB78() & 1) != 0)
                                      {
                                        swift_bridgeObjectRelease();
                                        return 45;
                                      }
                                      else if (a1 == 0xD000000000000015 && a2 == 0x800000023FB34930
                                             || (sub_23FB2FB78() & 1) != 0)
                                      {
                                        swift_bridgeObjectRelease();
                                        return 46;
                                      }
                                      else if (a1 == 0xD000000000000010 && a2 == 0x800000023FB30EB0
                                             || (sub_23FB2FB78() & 1) != 0)
                                      {
                                        swift_bridgeObjectRelease();
                                        return 47;
                                      }
                                      else if (a1 == 0xD00000000000001FLL && a2 == 0x800000023FB34950)
                                      {
                                        swift_bridgeObjectRelease();
                                        return 48;
                                      }
                                      else
                                      {
                                        v24 = sub_23FB2FB78();
                                        swift_bridgeObjectRelease();
                                        if ((v24 & 1) != 0)
                                          return 48;
                                        else
                                          return 49;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_23F806298()
{
  return 49;
}

uint64_t sub_23F8062A0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F8062DC + 4 * word_23FB631C0[a1]))(0x536E6F6973736573, 0xEC00000074726174);
}

uint64_t sub_23F8062DC()
{
  return 0x7265755174786574;
}

uint64_t sub_23F8062FC()
{
  return 0x7551686365657073;
}

uint64_t sub_23F80631C()
{
  return 0x74736575716572;
}

uint64_t sub_23F806334()
{
  return 0x616572436E616C70;
}

uint64_t sub_23F806354()
{
  return 0x72436E6F69746361;
}

uint64_t sub_23F806378()
{
  return 0x61436E6F69746361;
}

unint64_t sub_23F80639C()
{
  return 0xD000000000000013;
}

uint64_t sub_23F8067F0()
{
  sub_23F83CEE0();
  return sub_23FB2FD10();
}

uint64_t sub_23F806818()
{
  sub_23F83CEE0();
  return sub_23FB2FD1C();
}

uint64_t sub_23F806840()
{
  sub_23F83CF1C();
  return sub_23FB2FD10();
}

uint64_t sub_23F806868()
{
  sub_23F83CF1C();
  return sub_23FB2FD1C();
}

uint64_t sub_23F806890()
{
  sub_23F83CAE4();
  return sub_23FB2FD10();
}

uint64_t sub_23F8068B8()
{
  sub_23F83CAE4();
  return sub_23FB2FD1C();
}

uint64_t sub_23F8068E0()
{
  sub_23F83CA30();
  return sub_23FB2FD10();
}

uint64_t sub_23F806908()
{
  sub_23F83CA30();
  return sub_23FB2FD1C();
}

uint64_t sub_23F806930()
{
  sub_23F83CA6C();
  return sub_23FB2FD10();
}

uint64_t sub_23F806958()
{
  sub_23F83CA6C();
  return sub_23FB2FD1C();
}

uint64_t sub_23F806980()
{
  sub_23F83CEA4();
  return sub_23FB2FD10();
}

uint64_t sub_23F8069A8()
{
  sub_23F83CEA4();
  return sub_23FB2FD1C();
}

uint64_t sub_23F8069D0()
{
  char *v0;

  return sub_23F804F2C(*v0);
}

uint64_t sub_23F8069D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F804DF8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F8069FC()
{
  sub_23F83CC4C();
  return sub_23FB2FD10();
}

uint64_t sub_23F806A24()
{
  sub_23F83CC4C();
  return sub_23FB2FD1C();
}

uint64_t sub_23F806A4C()
{
  sub_23F83CD3C();
  return sub_23FB2FD10();
}

uint64_t sub_23F806A74()
{
  sub_23F83CD3C();
  return sub_23FB2FD1C();
}

uint64_t sub_23F806A9C()
{
  sub_23F83C940();
  return sub_23FB2FD10();
}

uint64_t sub_23F806AC4()
{
  sub_23F83C940();
  return sub_23FB2FD1C();
}

uint64_t sub_23F806AEC()
{
  sub_23F83C364();
  return sub_23FB2FD10();
}

uint64_t sub_23F806B14()
{
  sub_23F83C364();
  return sub_23FB2FD1C();
}

uint64_t sub_23F806B3C()
{
  unsigned __int8 *v0;

  return sub_23F8062A0(*v0);
}

uint64_t sub_23F806B44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F804F7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F806B68@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F806298();
  *a1 = result;
  return result;
}

uint64_t sub_23F806B8C()
{
  sub_23F83C1C0();
  return sub_23FB2FD10();
}

uint64_t sub_23F806BB4()
{
  sub_23F83C1C0();
  return sub_23FB2FD1C();
}

uint64_t sub_23F806BDC()
{
  sub_23F83C850();
  return sub_23FB2FD10();
}

uint64_t sub_23F806C04()
{
  sub_23F83C850();
  return sub_23FB2FD1C();
}

uint64_t sub_23F806C2C()
{
  sub_23F83C8C8();
  return sub_23FB2FD10();
}

uint64_t sub_23F806C54()
{
  sub_23F83C8C8();
  return sub_23FB2FD1C();
}

uint64_t sub_23F806C7C()
{
  sub_23F83C6E8();
  return sub_23FB2FD10();
}

uint64_t sub_23F806CA4()
{
  sub_23F83C6E8();
  return sub_23FB2FD1C();
}

uint64_t sub_23F806CCC()
{
  sub_23F83C238();
  return sub_23FB2FD10();
}

uint64_t sub_23F806CF4()
{
  sub_23F83C238();
  return sub_23FB2FD1C();
}

uint64_t sub_23F806D1C()
{
  sub_23F83CC88();
  return sub_23FB2FD10();
}

uint64_t sub_23F806D44()
{
  sub_23F83CC88();
  return sub_23FB2FD1C();
}

uint64_t sub_23F806D6C()
{
  sub_23F83CC10();
  return sub_23FB2FD10();
}

uint64_t sub_23F806D94()
{
  sub_23F83CC10();
  return sub_23FB2FD1C();
}

uint64_t sub_23F806DBC()
{
  sub_23F83C5F8();
  return sub_23FB2FD10();
}

uint64_t sub_23F806DE4()
{
  sub_23F83C5F8();
  return sub_23FB2FD1C();
}

uint64_t sub_23F806E0C()
{
  sub_23F83CD78();
  return sub_23FB2FD10();
}

uint64_t sub_23F806E34()
{
  sub_23F83CD78();
  return sub_23FB2FD1C();
}

uint64_t sub_23F806E5C()
{
  sub_23F83C490();
  return sub_23FB2FD10();
}

uint64_t sub_23F806E84()
{
  sub_23F83C490();
  return sub_23FB2FD1C();
}

uint64_t sub_23F806EAC()
{
  sub_23F83C4CC();
  return sub_23FB2FD10();
}

uint64_t sub_23F806ED4()
{
  sub_23F83C4CC();
  return sub_23FB2FD1C();
}

uint64_t sub_23F806EFC()
{
  sub_23F83C418();
  return sub_23FB2FD10();
}

uint64_t sub_23F806F24()
{
  sub_23F83C418();
  return sub_23FB2FD1C();
}

uint64_t sub_23F806F4C()
{
  sub_23F83C508();
  return sub_23FB2FD10();
}

uint64_t sub_23F806F74()
{
  sub_23F83C508();
  return sub_23FB2FD1C();
}

uint64_t sub_23F806F9C()
{
  sub_23F83C544();
  return sub_23FB2FD10();
}

uint64_t sub_23F806FC4()
{
  sub_23F83C544();
  return sub_23FB2FD1C();
}

uint64_t sub_23F806FEC()
{
  sub_23F83CE68();
  return sub_23FB2FD10();
}

uint64_t sub_23F807014()
{
  sub_23F83CE68();
  return sub_23FB2FD1C();
}

uint64_t sub_23F80703C()
{
  sub_23F83CAA8();
  return sub_23FB2FD10();
}

uint64_t sub_23F807064()
{
  sub_23F83CAA8();
  return sub_23FB2FD1C();
}

uint64_t sub_23F80708C()
{
  sub_23F83C1FC();
  return sub_23FB2FD10();
}

uint64_t sub_23F8070B4()
{
  sub_23F83C1FC();
  return sub_23FB2FD1C();
}

uint64_t sub_23F8070DC()
{
  sub_23F83C2B0();
  return sub_23FB2FD10();
}

uint64_t sub_23F807104()
{
  sub_23F83C2B0();
  return sub_23FB2FD1C();
}

uint64_t sub_23F80712C()
{
  sub_23F83CCC4();
  return sub_23FB2FD10();
}

uint64_t sub_23F807154()
{
  sub_23F83CCC4();
  return sub_23FB2FD1C();
}

uint64_t sub_23F80717C()
{
  sub_23F83CFD0();
  return sub_23FB2FD10();
}

uint64_t sub_23F8071A4()
{
  sub_23F83CFD0();
  return sub_23FB2FD1C();
}

uint64_t sub_23F8071CC()
{
  sub_23F83C9B8();
  return sub_23FB2FD10();
}

uint64_t sub_23F8071F4()
{
  sub_23F83C9B8();
  return sub_23FB2FD1C();
}

uint64_t sub_23F80721C()
{
  sub_23F83C760();
  return sub_23FB2FD10();
}

uint64_t sub_23F807244()
{
  sub_23F83C760();
  return sub_23FB2FD1C();
}

uint64_t sub_23F80726C()
{
  sub_23F83C7D8();
  return sub_23FB2FD10();
}

uint64_t sub_23F807294()
{
  sub_23F83C7D8();
  return sub_23FB2FD1C();
}

uint64_t sub_23F8072BC()
{
  sub_23F83D0C0();
  return sub_23FB2FD10();
}

uint64_t sub_23F8072E4()
{
  sub_23F83D0C0();
  return sub_23FB2FD1C();
}

uint64_t sub_23F80730C()
{
  sub_23F83CBD4();
  return sub_23FB2FD10();
}

uint64_t sub_23F807334()
{
  sub_23F83CBD4();
  return sub_23FB2FD1C();
}

uint64_t sub_23F80735C()
{
  sub_23F83C580();
  return sub_23FB2FD10();
}

uint64_t sub_23F807384()
{
  sub_23F83C580();
  return sub_23FB2FD1C();
}

uint64_t sub_23F8073AC()
{
  sub_23F83CDB4();
  return sub_23FB2FD10();
}

uint64_t sub_23F8073D4()
{
  sub_23F83CDB4();
  return sub_23FB2FD1C();
}

uint64_t sub_23F8073FC()
{
  sub_23F83CB5C();
  return sub_23FB2FD10();
}

uint64_t sub_23F807424()
{
  sub_23F83CB5C();
  return sub_23FB2FD1C();
}

uint64_t sub_23F80744C()
{
  sub_23F83CB20();
  return sub_23FB2FD10();
}

uint64_t sub_23F807474()
{
  sub_23F83CB20();
  return sub_23FB2FD1C();
}

uint64_t sub_23F80749C()
{
  sub_23F83C5BC();
  return sub_23FB2FD10();
}

uint64_t sub_23F8074C4()
{
  sub_23F83C5BC();
  return sub_23FB2FD1C();
}

uint64_t sub_23F8074EC()
{
  sub_23F83CB98();
  return sub_23FB2FD10();
}

uint64_t sub_23F807514()
{
  sub_23F83CB98();
  return sub_23FB2FD1C();
}

uint64_t sub_23F80753C()
{
  sub_23F83C3DC();
  return sub_23FB2FD10();
}

uint64_t sub_23F807564()
{
  sub_23F83C3DC();
  return sub_23FB2FD1C();
}

uint64_t sub_23F80758C()
{
  sub_23F83C670();
  return sub_23FB2FD10();
}

uint64_t sub_23F8075B4()
{
  sub_23F83C670();
  return sub_23FB2FD1C();
}

uint64_t sub_23F8075DC()
{
  sub_23F83C328();
  return sub_23FB2FD10();
}

uint64_t sub_23F807604()
{
  sub_23F83C328();
  return sub_23FB2FD1C();
}

uint64_t sub_23F80762C()
{
  sub_23F83C2EC();
  return sub_23FB2FD10();
}

uint64_t sub_23F807654()
{
  sub_23F83C2EC();
  return sub_23FB2FD1C();
}

uint64_t sub_23F80767C()
{
  sub_23F83C3A0();
  return sub_23FB2FD10();
}

uint64_t sub_23F8076A4()
{
  sub_23F83C3A0();
  return sub_23FB2FD1C();
}

uint64_t sub_23F8076CC()
{
  sub_23F83CE2C();
  return sub_23FB2FD10();
}

uint64_t sub_23F8076F4()
{
  sub_23F83CE2C();
  return sub_23FB2FD1C();
}

void Session.Event.Payload.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  char *v249;
  uint64_t v250[79];
  uint64_t v251;
  uint64_t v252;
  _QWORD v253[3];
  uint64_t v254;
  _QWORD v255[4];
  _QWORD v256[4];
  _QWORD v257[4];
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  _QWORD v261[5];
  uint64_t v262;
  uint64_t v263;
  uint64_t StepResults;
  uint64_t v265;
  _QWORD v266[5];
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  _QWORD v282[3];
  uint64_t v283;
  _QWORD v284[2];
  uint64_t v285;
  _QWORD v286[2];
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  _QWORD v296[4];
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t DecorationResult;
  uint64_t v301;
  char *v302;
  char *v303;
  uint64_t v304;
  uint64_t DecorationPrePlannerResult;
  char *v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;

  sub_23F878D48();
  v307 = sub_23F6916B8(&qword_256EAB938);
  v250[44] = *(_QWORD *)(v307 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v1);
  v306 = (char *)v250 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23F6D398C();
  DecorationPrePlannerResult = type metadata accessor for QueryDecorationPrePlannerResult(v3);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B658C(v5, v250[0]);
  v304 = sub_23F6916B8(&qword_256EAB940);
  v250[43] = *(_QWORD *)(v304 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  v303 = (char *)v250 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F6916B8(&qword_256EAB948);
  sub_23F8793EC(v8);
  v250[42] = v9;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v302 = (char *)v250 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F6D398C();
  DecorationResult = type metadata accessor for QueryDecorationResult(v12);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B5314((uint64_t)v250 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v301 = sub_23F6916B8(&qword_256EAB950);
  v250[41] = *(_QWORD *)(v301 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v15);
  v17 = sub_23F70D434((uint64_t)v250 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v298 = type metadata accessor for TypeConversionResult(v17);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B5314((uint64_t)v250 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v299 = sub_23F6916B8(&qword_256EAB958);
  v250[40] = *(_QWORD *)(v299 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v20);
  v22 = sub_23F70D434((uint64_t)v250 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v296[3] = type metadata accessor for TypeConversionRequest(v22);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F6B5314((uint64_t)v250 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v297 = sub_23F6916B8(&qword_256EAB960);
  v250[39] = *(_QWORD *)(v297 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v25);
  v27 = sub_23F70D434((uint64_t)v250 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v295 = type metadata accessor for ClientUndoRedoRequest(v27);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F6B5314((uint64_t)v250 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  v296[0] = sub_23F6916B8(&qword_256EAB968);
  v250[38] = *(_QWORD *)(v296[0] - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v30);
  v32 = sub_23F70D434((uint64_t)v250 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  v293 = type metadata accessor for UndoRedoRequest(v32);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F6B5314((uint64_t)v250 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  v294 = sub_23F6916B8(&qword_256EAB970);
  v250[37] = *(_QWORD *)(v294 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v35);
  v37 = sub_23F70D434((uint64_t)v250 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v292 = type metadata accessor for ToolResolution(v37);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F6B5314((uint64_t)v250 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  v291 = sub_23F6916B8(&qword_256EAB978);
  v250[36] = *(_QWORD *)(v291 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F6B5314((uint64_t)v250 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  v289 = sub_23F6916B8(&qword_256EAB980);
  v250[35] = *(_QWORD *)(v289 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v42);
  v44 = sub_23F70D434((uint64_t)v250 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  v286[1] = type metadata accessor for ExternalAgentOutcome(v44);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F6B5314((uint64_t)v250 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  v287 = sub_23F6916B8(&qword_256EAB988);
  v250[34] = *(_QWORD *)(v287 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v47);
  v49 = sub_23F70D434((uint64_t)v250 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  v284[1] = type metadata accessor for ExternalAgentRequest(v49);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v50);
  sub_23F6B5314((uint64_t)v250 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
  v285 = sub_23F6916B8(&qword_256EAB990);
  v250[33] = *(_QWORD *)(v285 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v52);
  v54 = sub_23F70D434((uint64_t)v250 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0));
  v282[2] = type metadata accessor for ExternalAgentSpeechQuery(v54);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v55);
  sub_23F6B5314((uint64_t)v250 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0));
  v283 = sub_23F6916B8(&qword_256EAB998);
  v250[32] = *(_QWORD *)(v283 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v57);
  v59 = sub_23F70D434((uint64_t)v250 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0));
  v280 = type metadata accessor for ExternalAgentTextQuery(v59);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v60);
  sub_23F6B5314((uint64_t)v250 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0));
  v281 = sub_23F6916B8(&qword_256EAB9A0);
  v250[31] = *(_QWORD *)(v281 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v62);
  v64 = sub_23F70D434((uint64_t)v250 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0));
  v278 = type metadata accessor for StatementResult(v64);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v65);
  sub_23F6B5314((uint64_t)v250 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0));
  v279 = sub_23F6916B8(&qword_256EAB9A8);
  v250[30] = *(_QWORD *)(v279 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v67);
  sub_23F70D434((uint64_t)v250 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0));
  v69 = sub_23FB2D004();
  sub_23F6B53F8(v69, (uint64_t)v296);
  v277 = v70;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v71);
  sub_23F6B5314((uint64_t)v250 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0));
  v276 = sub_23F6916B8(&qword_256EAB9B0);
  v250[29] = *(_QWORD *)(v276 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v73);
  sub_23F6B5314((uint64_t)v250 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0));
  v275 = sub_23F6916B8(&qword_256EAB9B8);
  v250[28] = *(_QWORD *)(v275 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v75);
  sub_23F6B5314((uint64_t)v250 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0));
  v273 = sub_23F6916B8(&qword_256EAB9C0);
  v250[27] = *(_QWORD *)(v273 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v77);
  sub_23F6B5314((uint64_t)v250 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0));
  v79 = sub_23F6916B8(&qword_256EAB9C8);
  sub_23F6B53F8(v79, (uint64_t)&v290);
  v250[26] = v80;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v81);
  sub_23F6B5314((uint64_t)v250 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0));
  v83 = sub_23F6916B8(&qword_256EAB9D0);
  sub_23F6B53F8(v83, (uint64_t)&v288);
  v250[25] = v84;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v85);
  sub_23F6B5314((uint64_t)v250 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0));
  v87 = sub_23F6916B8(&qword_256EAB9D8);
  sub_23F6B53F8(v87, (uint64_t)&v287);
  v250[24] = v88;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v89);
  sub_23F6B5314((uint64_t)v250 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0));
  v91 = sub_23F6916B8(&qword_256EAB9E0);
  sub_23F6B53F8(v91, (uint64_t)v286);
  v250[23] = v92;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v93);
  sub_23F6B5314((uint64_t)v250 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0));
  v95 = sub_23F6916B8(&qword_256EAB9E8);
  sub_23F6B53F8(v95, (uint64_t)&v285);
  v250[22] = v96;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v97);
  sub_23F6B5314((uint64_t)v250 - ((v98 + 15) & 0xFFFFFFFFFFFFFFF0));
  v99 = sub_23F6916B8(&qword_256EAB9F0);
  sub_23F6B53F8(v99, (uint64_t)v284);
  v250[21] = v100;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v101);
  sub_23F6B5314((uint64_t)v250 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0));
  v103 = sub_23F6916B8(&qword_256EAB9F8);
  sub_23F6B53F8(v103, (uint64_t)&v283);
  v250[20] = v104;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v105);
  sub_23F6B51A4();
  v107 = sub_23F70D434(v106);
  v266[4] = type metadata accessor for ActionResolverRequest(v107);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v108);
  sub_23F6B5314((uint64_t)v250 - ((v109 + 15) & 0xFFFFFFFFFFFFFFF0));
  v110 = sub_23F6916B8(&qword_256EABA00);
  sub_23F6B53F8(v110, (uint64_t)v282);
  v250[19] = v111;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v112);
  sub_23F6B51A4();
  sub_23F70D434(v113);
  v114 = sub_23FB2C938();
  sub_23F6B53F8(v114, (uint64_t)&v280);
  v266[1] = v115;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v116);
  sub_23F6B51A4();
  sub_23F6B5314(v117);
  v118 = sub_23F6916B8(&qword_256EABA08);
  sub_23F6B53F8(v118, (uint64_t)&v278);
  v250[18] = v119;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v120);
  sub_23F6B51A4();
  v122 = sub_23F70D434(v121);
  StepResults = type metadata accessor for QueryStepResults(v122);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v123);
  sub_23F6B51A4();
  sub_23F6B5314(v124);
  v125 = sub_23F6916B8(&qword_256EABA10);
  sub_23F6B53F8(v125, (uint64_t)&v277);
  v250[17] = v126;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v127);
  sub_23F6B51A4();
  v129 = sub_23F70D434(v128);
  v261[4] = type metadata accessor for ActionStepResult(v129);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v130);
  sub_23F6B51A4();
  sub_23F6B5314(v131);
  v132 = sub_23F6916B8(&qword_256EABA18);
  sub_23F6B53F8(v132, (uint64_t)&v274);
  v250[16] = v133;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v134);
  sub_23F6B51A4();
  v136 = sub_23F70D434(v135);
  v260 = type metadata accessor for RequestContent.SystemPromptResolution(v136);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v137);
  sub_23F6B51A4();
  sub_23F6B5314(v138);
  v139 = sub_23F6916B8(&qword_256EABA20);
  sub_23F6B53F8(v139, (uint64_t)&v271);
  v250[15] = v140;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v141);
  sub_23F6B51A4();
  sub_23F70D434(v142);
  v259 = sub_23FB2C77C();
  v257[3] = *(_QWORD *)(v259 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v143);
  sub_23F6B51A4();
  sub_23F6B5314(v144);
  v145 = sub_23F6916B8(&qword_256EABA28);
  sub_23F6B53F8(v145, (uint64_t)&v270);
  v257[0] = v146;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v147);
  sub_23F6B51A4();
  sub_23F6B5314(v148);
  v149 = sub_23F6916B8(&qword_256EABA30);
  sub_23F6B53F8(v149, (uint64_t)&v269);
  v256[1] = v150;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v151);
  sub_23F6B51A4();
  sub_23F6B5314(v152);
  v153 = sub_23F6916B8(&qword_256EABA38);
  sub_23F6B53F8(v153, (uint64_t)&v268);
  v255[1] = v154;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v155);
  sub_23F6B51A4();
  sub_23F6B5314(v156);
  v157 = sub_23F6916B8(&qword_256EABA40);
  sub_23F6B53F8(v157, (uint64_t)&v272);
  v250[14] = v158;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v159);
  sub_23F6B51A4();
  sub_23F6B5314(v160);
  v161 = sub_23F6916B8(&qword_256EABA48);
  sub_23F6B53F8(v161, (uint64_t)&v267);
  v250[13] = v162;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v163);
  sub_23F6B51A4();
  sub_23F70D434(v164);
  v253[2] = type metadata accessor for SessionError();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v165);
  sub_23F6B51A4();
  sub_23F6B5314(v166);
  v167 = sub_23F6916B8(&qword_256EABA50);
  sub_23F6B53F8(v167, (uint64_t)v266);
  v250[12] = v168;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v169);
  sub_23F6B51A4();
  sub_23F6B5314(v170);
  v171 = sub_23F6916B8(&qword_256EABA58);
  sub_23F6B53F8(v171, (uint64_t)&v265);
  v250[11] = v172;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v173);
  sub_23F6B51A4();
  sub_23F6B5314(v174);
  v175 = sub_23F6916B8(&qword_256EABA60);
  sub_23F6B53F8(v175, (uint64_t)&v263);
  v251 = v176;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v177);
  sub_23F6B51A4();
  sub_23F6B5314(v178);
  v179 = sub_23F6916B8(&qword_256EABA68);
  sub_23F6B53F8(v179, (uint64_t)&StepResults);
  v250[10] = v180;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v181);
  sub_23F6B51A4();
  sub_23F6B5314(v182);
  v183 = sub_23F6916B8(&qword_256EABA70);
  sub_23F6B53F8(v183, (uint64_t)&v262);
  v250[9] = v184;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v185);
  sub_23F6B51A4();
  v187 = sub_23F70D434(v186);
  v250[74] = type metadata accessor for VariableStep(v187);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v188);
  sub_23F6B51A4();
  sub_23F6B5314(v189);
  v190 = sub_23F6916B8(&qword_256EABA78);
  sub_23F6B53F8(v190, (uint64_t)v261);
  v250[8] = v191;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v192);
  sub_23F6B51A4();
  v194 = sub_23F70D434(v193);
  v250[70] = type metadata accessor for QueryStep(v194);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v195);
  sub_23F6B51A4();
  sub_23F6B5314(v196);
  v197 = sub_23F6916B8(&qword_256EABA80);
  sub_23F6B53F8(v197, (uint64_t)&v258);
  v250[7] = v198;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v199);
  sub_23F6B51A4();
  v201 = sub_23F70D434(v200);
  v250[66] = type metadata accessor for ClientAction(v201);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v202);
  sub_23F6B51A4();
  sub_23F6B5314(v203);
  v204 = sub_23F6916B8(&qword_256EABA88);
  sub_23F6B53F8(v204, (uint64_t)v257);
  v250[6] = v205;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v206);
  sub_23F6B51A4();
  v208 = sub_23F70D434(v207);
  v250[62] = type metadata accessor for ActionCancellation(v208);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v209);
  sub_23F6B51A4();
  sub_23F6B5314(v210);
  v211 = sub_23F6916B8(&qword_256EABA90);
  sub_23F6B53F8(v211, (uint64_t)v256);
  v250[5] = v212;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v213);
  sub_23F6B51A4();
  v215 = sub_23F70D434(v214);
  v250[58] = type metadata accessor for Action(v215);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v216);
  sub_23F6B51A4();
  sub_23F6B5314(v217);
  v218 = sub_23F6916B8(&qword_256EABA98);
  sub_23F6B53F8(v218, (uint64_t)v255);
  v250[4] = v219;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v220);
  sub_23F6B51A4();
  sub_23F6B5314(v221);
  v222 = sub_23F6916B8(&qword_256EABAA0);
  sub_23F6B53F8(v222, (uint64_t)&v254);
  v250[3] = v223;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v224);
  sub_23F6B51A4();
  v226 = sub_23F70D434(v225);
  v250[52] = type metadata accessor for Request(v226);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v227);
  sub_23F6B51A4();
  sub_23F6B5314(v228);
  v229 = sub_23F6916B8(&qword_256EABAA8);
  sub_23F6B53F8(v229, (uint64_t)v253);
  v250[2] = v230;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v231);
  sub_23F6B51A4();
  sub_23F6B5314(v232);
  v233 = sub_23F6916B8(&qword_256EABAB0);
  sub_23F6B53F8(v233, (uint64_t)&v252);
  v250[1] = v234;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v235);
  sub_23F6B51A4();
  v237 = sub_23F70D434(v236);
  v250[46] = type metadata accessor for TextQuery(v237);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v238);
  sub_23F6B51A4();
  sub_23F6B5314(v239);
  v240 = sub_23F6916B8(&qword_256EABAB8);
  sub_23F6B53F8(v240, (uint64_t)&v251);
  v250[0] = v241;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v242);
  sub_23F6B51A4();
  v244 = sub_23F70D434(v243);
  type metadata accessor for SessionStart(v244);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v245);
  v246 = sub_23F6B51D0();
  type metadata accessor for Session.Event.Payload(v246);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v247);
  sub_23F6B5298();
  v310 = sub_23F6916B8(&qword_256EABAC0);
  v308 = *(_QWORD *)(v310 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v248);
  sub_23F6B52B0();
  sub_23F8797FC();
  sub_23F87893C();
  sub_23F878C30();
  sub_23F83A800(v309, v0, type metadata accessor for Session.Event.Payload);
  sub_23F77E668();
  v249 = (char *)sub_23F80895C + 4 * word_23FB63222[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23F80895C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  v1 = sub_23F8781AC();
  sub_23F83A7A4(v1, v2, type metadata accessor for SessionStart);
  *(_BYTE *)(v0 - 152) = 0;
  sub_23F83D0C0();
  sub_23F878794();
  v3 = *(_QWORD *)(v0 - 160);
  sub_23F6B54D4();
  sub_23F6B4EEC((uint64_t)&unk_256EABD88);
  sub_23F70D59C();
  sub_23F876A0C();
  sub_23F8767C4();
  v4 = sub_23F7D2C3C();
  v6 = sub_23F6B530C(v4, v5);
  sub_23F879074(v6, type metadata accessor for SessionStart);
  v7 = sub_23F877EA4();
  v8(v7, v3);
  sub_23F8777E8();
  sub_23F70D684();
}

void sub_23F80A0DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD);

  *(_BYTE *)(v1 - 152) = 11;
  sub_23F83CD78();
  sub_23F876D00();
  v2 = sub_23F6B54C8();
  sub_23F6B6344(v2, v3);
  sub_23F6B56E0(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 192) + 8));
  JUMPOUT(0x23F80A0D0);
}

void Session.Event.Payload.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  char *v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  unint64_t v259;
  unint64_t v260;
  uint64_t v261;
  _QWORD *v262;
  _QWORD *v263;
  uint64_t v264;
  uint64_t v265;
  void (*v266)(char *, uint64_t);
  _QWORD v267[89];
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  _QWORD v319[26];
  uint64_t v320;
  uint64_t v321;
  char *v322;
  char *v323;

  sub_23F6B5220();
  a19 = v26;
  a20 = v27;
  v322 = v20;
  v29 = v28;
  sub_23F8789BC(v30);
  v31 = sub_23F6916B8(&qword_256EABD90);
  sub_23F6B53F8(v31, (uint64_t)v319);
  v319[20] = v32;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F6B5314((uint64_t)v267 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  v35 = sub_23F6916B8(&qword_256EABD98);
  sub_23F6B53F8(v35, (uint64_t)&v318);
  v267[65] = v36;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F6B5314((uint64_t)v267 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  v39 = sub_23F6916B8(&qword_256EABDA0);
  sub_23F6B53F8(v39, (uint64_t)&v317);
  v267[64] = v40;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F6B5314((uint64_t)v267 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  v43 = sub_23F6916B8(&qword_256EABDA8);
  sub_23F6B53F8(v43, (uint64_t)&v316);
  v267[63] = v44;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F6B5314((uint64_t)v267 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  v47 = sub_23F6916B8(&qword_256EABDB0);
  sub_23F6B53F8(v47, (uint64_t)&v315);
  v267[62] = v48;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v49);
  sub_23F6B5314((uint64_t)v267 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0));
  v51 = sub_23F6916B8(&qword_256EABDB8);
  sub_23F6B53F8(v51, (uint64_t)&v314);
  v267[61] = v52;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v53);
  sub_23F6B5314((uint64_t)v267 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
  v55 = sub_23F6916B8(&qword_256EABDC0);
  sub_23F6B53F8(v55, (uint64_t)&v313);
  v267[60] = v56;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v57);
  sub_23F6B5314((uint64_t)v267 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0));
  v59 = sub_23F6916B8(&qword_256EABDC8);
  sub_23F6B53F8(v59, (uint64_t)&v312);
  v267[59] = v60;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v61);
  sub_23F6B5314((uint64_t)v267 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0));
  v63 = sub_23F6916B8(&qword_256EABDD0);
  sub_23F6B53F8(v63, (uint64_t)&v311);
  v267[58] = v64;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v65);
  sub_23F6B51A4();
  sub_23F6B5314(v66);
  v67 = sub_23F6916B8(&qword_256EABDD8);
  sub_23F6B53F8(v67, (uint64_t)&v310);
  v267[57] = v68;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v69);
  sub_23F6B5314((uint64_t)v267 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0));
  v71 = sub_23F6916B8(&qword_256EABDE0);
  sub_23F6B53F8(v71, (uint64_t)&v309);
  v267[56] = v72;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v73);
  sub_23F6B5314((uint64_t)v267 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0));
  v75 = sub_23F6916B8(&qword_256EABDE8);
  sub_23F6B53F8(v75, (uint64_t)&v308);
  v267[55] = v76;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v77);
  sub_23F6B5314((uint64_t)v267 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0));
  v79 = sub_23F6916B8(&qword_256EABDF0);
  sub_23F6B53F8(v79, (uint64_t)&v307);
  v267[54] = v80;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v81);
  sub_23F6B5314((uint64_t)v267 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0));
  v83 = sub_23F6916B8(&qword_256EABDF8);
  sub_23F6B53F8(v83, (uint64_t)&v306);
  v267[53] = v84;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v85);
  sub_23F6B5314((uint64_t)v267 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0));
  v87 = sub_23F6916B8(&qword_256EABE00);
  sub_23F6B53F8(v87, (uint64_t)&v305);
  v267[52] = v88;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v89);
  sub_23F6B5314((uint64_t)v267 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0));
  v91 = sub_23F6916B8(&qword_256EABE08);
  sub_23F6B53F8(v91, (uint64_t)&v304);
  v267[51] = v92;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v93);
  sub_23F6B5314((uint64_t)v267 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0));
  v95 = sub_23F6916B8(&qword_256EABE10);
  sub_23F6B53F8(v95, (uint64_t)&v303);
  v267[50] = v96;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v97);
  sub_23F6B51A4();
  sub_23F6B5314(v98);
  v99 = sub_23F6916B8(&qword_256EABE18);
  sub_23F6B53F8(v99, (uint64_t)&v302);
  v267[49] = v100;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v101);
  sub_23F6B5314((uint64_t)v267 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0));
  v103 = sub_23F6916B8(&qword_256EABE20);
  sub_23F6B53F8(v103, (uint64_t)&v301);
  v267[48] = v104;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v105);
  sub_23F6B5314((uint64_t)v267 - ((v106 + 15) & 0xFFFFFFFFFFFFFFF0));
  v107 = sub_23F6916B8(&qword_256EABE28);
  sub_23F6B53F8(v107, (uint64_t)&v300);
  v267[47] = v108;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v109);
  sub_23F6B5314((uint64_t)v267 - ((v110 + 15) & 0xFFFFFFFFFFFFFFF0));
  v111 = sub_23F6916B8(&qword_256EABE30);
  sub_23F6B53F8(v111, (uint64_t)&v299);
  v267[46] = v112;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v113);
  sub_23F6B5314((uint64_t)v267 - ((v114 + 15) & 0xFFFFFFFFFFFFFFF0));
  v115 = sub_23F6916B8(&qword_256EABE38);
  sub_23F6B53F8(v115, (uint64_t)&v298);
  v267[45] = v116;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v117);
  sub_23F6B5314((uint64_t)v267 - ((v118 + 15) & 0xFFFFFFFFFFFFFFF0));
  v119 = sub_23F6916B8(&qword_256EABE40);
  sub_23F6B53F8(v119, (uint64_t)&v297);
  v267[44] = v120;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v121);
  sub_23F6B5314((uint64_t)v267 - ((v122 + 15) & 0xFFFFFFFFFFFFFFF0));
  v123 = sub_23F6916B8(&qword_256EABE48);
  sub_23F6B53F8(v123, (uint64_t)&v296);
  v267[43] = v124;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v125);
  sub_23F6B5314((uint64_t)v267 - ((v126 + 15) & 0xFFFFFFFFFFFFFFF0));
  v127 = sub_23F6916B8(&qword_256EABE50);
  sub_23F6B53F8(v127, (uint64_t)&v295);
  v267[42] = v128;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v129);
  sub_23F6B5314((uint64_t)v267 - ((v130 + 15) & 0xFFFFFFFFFFFFFFF0));
  v131 = sub_23F6916B8(&qword_256EABE58);
  sub_23F6B53F8(v131, (uint64_t)&v294);
  v267[41] = v132;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v133);
  sub_23F6B5314((uint64_t)v267 - ((v134 + 15) & 0xFFFFFFFFFFFFFFF0));
  v135 = sub_23F6916B8(&qword_256EABE60);
  sub_23F6B53F8(v135, (uint64_t)&v293);
  v267[40] = v136;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v137);
  sub_23F6B51A4();
  sub_23F6B5314(v138);
  v139 = sub_23F6916B8(&qword_256EABE68);
  sub_23F6B53F8(v139, (uint64_t)&v292);
  v267[39] = v140;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v141);
  sub_23F6B5314((uint64_t)v267 - ((v142 + 15) & 0xFFFFFFFFFFFFFFF0));
  v143 = sub_23F6916B8(&qword_256EABE70);
  sub_23F6B53F8(v143, (uint64_t)&v291);
  v267[38] = v144;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v145);
  sub_23F6B5314((uint64_t)v267 - ((v146 + 15) & 0xFFFFFFFFFFFFFFF0));
  v287 = sub_23F6916B8(&qword_256EABE78);
  v267[37] = *(_QWORD *)(v287 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v147);
  sub_23F6B51A4();
  sub_23F6B5314(v148);
  v149 = sub_23F6916B8(&qword_256EABE80);
  sub_23F6B53F8(v149, (uint64_t)&a18);
  v286 = v150;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v151);
  sub_23F6B5314((uint64_t)v267 - ((v152 + 15) & 0xFFFFFFFFFFFFFFF0));
  v153 = sub_23F6916B8(&qword_256EABE88);
  sub_23F6B53F8(v153, (uint64_t)&v289);
  v285 = v154;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v155);
  sub_23F6B5314((uint64_t)v267 - ((v156 + 15) & 0xFFFFFFFFFFFFFFF0));
  v157 = sub_23F6916B8(&qword_256EABE90);
  sub_23F6B53F8(v157, (uint64_t)&v288);
  v283 = v158;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v159);
  sub_23F6B51A4();
  sub_23F6B5314(v160);
  v161 = sub_23F6916B8(&qword_256EABE98);
  sub_23F6B53F8(v161, (uint64_t)&v290);
  v319[21] = v162;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v163);
  sub_23F6B51A4();
  sub_23F6B5314(v164);
  v284 = sub_23F6916B8(&qword_256EABEA0);
  v267[36] = *(_QWORD *)(v284 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v165);
  sub_23F6B51A4();
  sub_23F6B5314(v166);
  v282 = sub_23F6916B8(&qword_256EABEA8);
  v267[35] = *(_QWORD *)(v282 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v167);
  sub_23F6B5314((uint64_t)v267 - ((v168 + 15) & 0xFFFFFFFFFFFFFFF0));
  v281 = sub_23F6916B8(&qword_256EABEB0);
  v267[34] = *(_QWORD *)(v281 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v169);
  sub_23F6B5314((uint64_t)v267 - ((v170 + 15) & 0xFFFFFFFFFFFFFFF0));
  v278 = sub_23F6916B8(&qword_256EABEB8);
  v277 = *(_QWORD *)(v278 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v171);
  sub_23F6B5314((uint64_t)v267 - ((v172 + 15) & 0xFFFFFFFFFFFFFFF0));
  v280 = sub_23F6916B8(&qword_256EABEC0);
  v267[33] = *(_QWORD *)(v280 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v173);
  sub_23F6B51A4();
  sub_23F6B5314(v174);
  v279 = sub_23F6916B8(&qword_256EABEC8);
  v267[32] = *(_QWORD *)(v279 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v175);
  sub_23F6B5314((uint64_t)v267 - ((v176 + 15) & 0xFFFFFFFFFFFFFFF0));
  v276 = sub_23F6916B8(&qword_256EABED0);
  v267[31] = *(_QWORD *)(v276 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v177);
  sub_23F6B5314((uint64_t)v267 - ((v178 + 15) & 0xFFFFFFFFFFFFFFF0));
  v275 = sub_23F6916B8(&qword_256EABED8);
  v267[30] = *(_QWORD *)(v275 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v179);
  sub_23F6B5314((uint64_t)v267 - ((v180 + 15) & 0xFFFFFFFFFFFFFFF0));
  v274 = sub_23F6916B8(&qword_256EABEE0);
  v267[29] = *(_QWORD *)(v274 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v181);
  sub_23F6B5314((uint64_t)v267 - ((v182 + 15) & 0xFFFFFFFFFFFFFFF0));
  v273 = sub_23F6916B8(&qword_256EABEE8);
  v267[28] = *(_QWORD *)(v273 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v183);
  sub_23F6B5314((uint64_t)v267 - ((v184 + 15) & 0xFFFFFFFFFFFFFFF0));
  v272 = sub_23F6916B8(&qword_256EABEF0);
  v267[27] = *(_QWORD *)(v272 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v185);
  sub_23F6B5314((uint64_t)v267 - ((v186 + 15) & 0xFFFFFFFFFFFFFFF0));
  v271 = sub_23F6916B8(&qword_256EABEF8);
  v267[26] = *(_QWORD *)(v271 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v187);
  sub_23F6B5314((uint64_t)v267 - ((v188 + 15) & 0xFFFFFFFFFFFFFFF0));
  v270 = sub_23F6916B8(&qword_256EABF00);
  v267[25] = *(_QWORD *)(v270 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v189);
  sub_23F6B5314((uint64_t)v267 - ((v190 + 15) & 0xFFFFFFFFFFFFFFF0));
  v269 = sub_23F6916B8(&qword_256EABF08);
  v267[24] = *(_QWORD *)(v269 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v191);
  sub_23F6B5314((uint64_t)v267 - ((v192 + 15) & 0xFFFFFFFFFFFFFFF0));
  v268 = sub_23F6916B8(&qword_256EABF10);
  v267[23] = *(_QWORD *)(v268 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v193);
  sub_23F6B5314((uint64_t)v267 - ((v194 + 15) & 0xFFFFFFFFFFFFFFF0));
  v320 = sub_23F6916B8(&qword_256EABF18);
  v319[23] = *(_QWORD *)(v320 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v195);
  v323 = (char *)v267 - ((v196 + 15) & 0xFFFFFFFFFFFFFFF0);
  v197 = sub_23F879620();
  sub_23F8793EC(v197);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v198);
  sub_23F693E0C();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v199);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v200);
  sub_23F6D3D14();
  v319[25] = v201;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v202);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v203);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v204);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v205);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v206);
  sub_23F6D3D14();
  v319[24] = v207;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v208);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v209);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v210);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v211);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v212);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v213);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v214);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v215);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v216);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v217);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v218);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v219);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v220);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v221);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v222);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v223);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v224);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v225);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v226);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v227);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v228);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v229);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v230);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v231);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v232);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v233);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v234);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v235);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v236);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v237);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v238);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v239);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v240);
  sub_23F876BF0();
  MEMORY[0x24BDAC7A8](v241);
  sub_23F72E168();
  MEMORY[0x24BDAC7A8](v242);
  sub_23F70D958();
  MEMORY[0x24BDAC7A8](v243);
  sub_23F70DD48();
  MEMORY[0x24BDAC7A8](v244);
  sub_23F876AD4();
  MEMORY[0x24BDAC7A8](v245);
  v247 = (char *)v267 - v246;
  v321 = v29;
  sub_23F8797FC();
  v248 = v322;
  sub_23F6B6DF4();
  if (!v248)
  {
    v267[5] = v23;
    v267[6] = v24;
    v267[3] = v21;
    v267[7] = v22;
    v267[4] = v25;
    v322 = v247;
    v249 = v323;
    if (*(_QWORD *)(sub_23F878AB4() + 16))
    {
      v267[2] = 0;
      v250 = sub_23F877FF8();
      v256 = sub_23F6B4E44(v250, v251, v252, v253, v254, v255);
      v258 = v257;
      v260 = v259;
      sub_23F693E04();
      if (v258 == v260 >> 1)
      {
        v267[1] = v256;
        __asm { BR              X9 }
      }
    }
    v261 = v319[22];
    sub_23F6B6334();
    sub_23F6B5AD4();
    v263 = v262;
    sub_23F6916B8(&qword_256EA1870);
    *v263 = v261;
    v264 = v320;
    sub_23FB2FA04();
    v265 = sub_23F6B56B8();
    sub_23F6B5DAC(v265, *MEMORY[0x24BEE26D0]);
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_23F878900();
    v266(v249, v264);
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v321);
  sub_23F6B6CA0();
  sub_23F6B5100();
}

void sub_23F80B658()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v2 - 176) = 1;
  sub_23F83D084();
  v3 = *(_QWORD *)(v2 - 648);
  sub_23F876650();
  if (!v0)
  {
    v4 = type metadata accessor for TextQuery(0);
    sub_23F6B4EEC((uint64_t)&unk_256EAC048);
    v5 = *(_QWORD *)(v2 - 1744);
    sub_23F878BC8();
    sub_23F6B6CAC();
    sub_23F87691C();
    sub_23F6B530C(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 1600) + 8));
    sub_23F8766B4();
    sub_23F6B563C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    sub_23F878B7C();
    v6 = *(_QWORD *)(v2 - 192);
    sub_23F83A7A4(v5, v6, type metadata accessor for Session.Event.Payload);
    sub_23F83A7A4(v6, *(_QWORD *)(v2 - 272), type metadata accessor for Session.Event.Payload);
    JUMPOUT(0x23F80B648);
  }
  JUMPOUT(0x23F80B630);
}

void sub_23F80B6A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(v4 - 176) = 2;
  sub_23F83D00C();
  sub_23F87661C();
  if (!v1)
  {
    sub_23F83D444();
    sub_23F8766D4();
    sub_23F876F40();
    sub_23F6B56E0(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 1592) + 8));
    sub_23F8766B4();
    sub_23F6B530C(v3, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    v5 = *(_BYTE *)(v4 - 168);
    v6 = *(_QWORD *)(v4 - 1768);
    *(_QWORD *)v6 = *(_QWORD *)(v4 - 176);
    *(_BYTE *)(v6 + 8) = v5;
    *(_OWORD *)(v6 + 16) = *(_OWORD *)(v4 - 160);
    sub_23F876E60();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  sub_23F8783E8();
  JUMPOUT(0x23F80B640);
}

void sub_23F80B71C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v2 - 176) = 3;
  sub_23F83CFD0();
  sub_23F87661C();
  if (!v0)
  {
    v3 = type metadata accessor for Request(0);
    sub_23F6B4EEC((uint64_t)&unk_256EAC038);
    sub_23F8767A0();
    sub_23F87669C();
    sub_23F87691C();
    sub_23F8766C0(v2 - 1328);
    sub_23F8766B4();
    sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F8769B8();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  sub_23F8783E8();
  JUMPOUT(0x23F80B640);
}

void sub_23F80B7B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(v2 - 176) = 4;
  sub_23F83CF58();
  v3 = *(_QWORD *)(v2 - 208);
  sub_23F876650();
  if (!v0)
  {
    sub_23F83D408();
    sub_23F8766D4();
    sub_23F87691C();
    sub_23F87663C(v2 - 1320);
    sub_23F8766B4();
    (*(void (**)(uint64_t, _QWORD))(v3 + 8))(v1, *(_QWORD *)(v2 - 208));
    v4 = *(_QWORD *)(v2 - 160);
    v5 = *(_BYTE *)(v2 - 120);
    v6 = *(_QWORD *)(v2 - 1760);
    *(_OWORD *)v6 = *(_OWORD *)(v2 - 176);
    *(_QWORD *)(v6 + 16) = v4;
    *(_OWORD *)(v6 + 24) = *(_OWORD *)(v2 - 152);
    *(_OWORD *)(v6 + 40) = *(_OWORD *)(v2 - 136);
    *(_BYTE *)(v6 + 56) = v5;
    sub_23F876E60();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  sub_23F8783DC();
  JUMPOUT(0x23F80B640);
}

void sub_23F80B838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v2 - 176) = 5;
  sub_23F83CF1C();
  sub_23F87661C();
  if (!v0)
  {
    v3 = type metadata accessor for Action(0);
    sub_23F6B4EEC((uint64_t)&qword_256EA81A0);
    sub_23F8767A0();
    sub_23F87669C();
    sub_23F87691C();
    sub_23F8766C0(v2 - 1312);
    sub_23F8766B4();
    sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F8769B8();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  sub_23F8783E8();
  JUMPOUT(0x23F80B640);
}

void sub_23F80B8CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v2 - 176) = 6;
  sub_23F83CEE0();
  sub_23F87661C();
  if (!v0)
  {
    v3 = type metadata accessor for ActionCancellation(0);
    sub_23F6B4EEC((uint64_t)&unk_256EAC028);
    sub_23F8767A0();
    sub_23F87669C();
    sub_23F87691C();
    sub_23F8766C0(v2 - 1304);
    sub_23F8766B4();
    sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F8769B8();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  sub_23F8783E8();
  JUMPOUT(0x23F80B640);
}

void sub_23F80B960()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v2 - 176) = 7;
  sub_23F83CEA4();
  sub_23F87661C();
  if (!v0)
  {
    v3 = type metadata accessor for ClientAction(0);
    sub_23F6B4EEC((uint64_t)&unk_256EAC020);
    sub_23F8767A0();
    sub_23F87669C();
    sub_23F87691C();
    sub_23F8766C0(v2 - 1296);
    sub_23F8766B4();
    sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F8769B8();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  sub_23F8783E8();
  JUMPOUT(0x23F80B640);
}

void sub_23F80B9F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Step;

  *(_BYTE *)(v2 - 176) = 8;
  sub_23F83CE68();
  sub_23F87661C();
  if (!v0)
  {
    Step = type metadata accessor for QueryStep(0);
    sub_23F6B4EEC((uint64_t)&unk_256EAC018);
    sub_23F8767A0();
    sub_23F87669C();
    sub_23F87691C();
    sub_23F8766C0(v2 - 1288);
    sub_23F8766B4();
    sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(Step + 8));
    sub_23F8769B8();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  sub_23F8783E8();
  JUMPOUT(0x23F80B640);
}

void sub_23F80BA88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v2 - 176) = 9;
  sub_23F83CE2C();
  sub_23F87661C();
  if (!v0)
  {
    v3 = type metadata accessor for VariableStep(0);
    sub_23F6B4EEC((uint64_t)&unk_256EAC010);
    sub_23F8767A0();
    sub_23F87669C();
    sub_23F87691C();
    sub_23F8766C0(v2 - 1280);
    sub_23F8766B4();
    sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F8769B8();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  sub_23F8783E8();
  JUMPOUT(0x23F80B640);
}

void sub_23F80BB1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 - 176) = 10;
  sub_23F83CDB4();
  sub_23F876650();
  if (!v1)
  {
    sub_23F83D3CC();
    sub_23F8766D4();
    sub_23F876F40();
    sub_23F87663C(v3 - 1272);
    sub_23F8766B4();
    sub_23F6B56E0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    **(_QWORD **)(v3 - 1720) = *(_QWORD *)(v3 - 176);
    sub_23F876E60();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  JUMPOUT(0x23F80D1B8);
}

void sub_23F80BBBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, _QWORD);

  *(_BYTE *)(v3 - 176) = 11;
  sub_23F83CD78();
  sub_23F876650();
  if (!v1)
  {
    v4 = sub_23F6B54C8();
    sub_23F6B6344(v4, v5);
    sub_23F8766B4();
    sub_23F6B56E0(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 232) + 8));
    sub_23F877F0C();
    swift_storeEnumTagMultiPayload();
    sub_23F83A7A4(v0, *(_QWORD *)(v3 - 272), type metadata accessor for Session.Event.Payload);
    JUMPOUT(0x23F80B648);
  }
  sub_23F8766B4();
  sub_23F878900();
  JUMPOUT(0x23F80D1B8);
}

void sub_23F80BFB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v2 - 176) = 19;
  sub_23F83CB5C();
  sub_23F87661C();
  if (!v0)
  {
    v3 = sub_23FB2C77C();
    sub_23F6B4EEC((uint64_t)&unk_256EABFF8);
    sub_23F8767A0();
    sub_23F87669C();
    sub_23F87691C();
    sub_23F8766C0(v2 - 1240);
    sub_23F8766B4();
    sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F8769B8();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  sub_23F8783E8();
  JUMPOUT(0x23F80B640);
}

void sub_23F80C04C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v2 - 176) = 20;
  sub_23F83CB20();
  sub_23F87661C();
  if (!v0)
  {
    v3 = type metadata accessor for RequestContent.SystemPromptResolution(0);
    sub_23F6B4EEC((uint64_t)&unk_256EABFF0);
    sub_23F8767A0();
    sub_23F87669C();
    sub_23F87691C();
    sub_23F8766C0(v2 - 1232);
    sub_23F8766B4();
    sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F8769B8();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  sub_23F8783E8();
  JUMPOUT(0x23F80B640);
}

void sub_23F80C0E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v2 - 176) = 21;
  sub_23F83CAE4();
  sub_23F87661C();
  if (!v0)
  {
    v3 = type metadata accessor for ActionStepResult(0);
    sub_23F6B4EEC((uint64_t)&unk_256EABFE8);
    sub_23F8767A0();
    sub_23F87669C();
    sub_23F87691C();
    sub_23F8766C0(v2 - 1224);
    sub_23F8766B4();
    sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F8769B8();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  sub_23F8783E8();
  JUMPOUT(0x23F80B640);
}

void sub_23F80C174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t StepResults;

  *(_BYTE *)(v2 - 176) = 22;
  sub_23F83CAA8();
  sub_23F87661C();
  if (!v0)
  {
    StepResults = type metadata accessor for QueryStepResults(0);
    sub_23F6B4EEC((uint64_t)&unk_256EABFE0);
    sub_23F8767A0();
    sub_23F87669C();
    sub_23F87691C();
    sub_23F8766C0(v2 - 1216);
    sub_23F8766B4();
    sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(StepResults + 8));
    sub_23F8769B8();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  sub_23F8783E8();
  JUMPOUT(0x23F80B640);
}

void sub_23F80C208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v2 - 176) = 23;
  sub_23F83CA6C();
  sub_23F87661C();
  if (!v0)
  {
    v3 = sub_23FB2C938();
    sub_23F6B4EEC((uint64_t)&unk_256EABFD8);
    sub_23F8767A0();
    sub_23F87669C();
    sub_23F87691C();
    sub_23F8766C0(v2 - 1208);
    sub_23F8766B4();
    sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F8769B8();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  sub_23F8783E8();
  JUMPOUT(0x23F80B640);
}

void sub_23F80C29C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v2 - 176) = 24;
  sub_23F83CA30();
  sub_23F87661C();
  if (!v0)
  {
    v3 = sub_23F878ED8();
    sub_23F6B4EEC((uint64_t)&unk_256EABFD0);
    sub_23F8767A0();
    sub_23F87669C();
    sub_23F87691C();
    sub_23F8766C0(v2 - 1200);
    sub_23F8766B4();
    sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F8769B8();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  sub_23F8783E8();
  JUMPOUT(0x23F80B640);
}

void sub_23F80C32C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 - 176) = 25;
  sub_23F83C9B8();
  sub_23F876650();
  if (!v1)
  {
    sub_23F83D354();
    sub_23F8766D4();
    sub_23F876F40();
    sub_23F87663C(v3 - 1192);
    sub_23F8766B4();
    sub_23F6B56E0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    **(_QWORD **)(v3 - 1696) = *(_QWORD *)(v3 - 176);
    sub_23F876E60();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  JUMPOUT(0x23F80D1B8);
}

void sub_23F80C3CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 - 176) = 26;
  sub_23F83C940();
  sub_23F876650();
  if (!v1)
  {
    sub_23F83D318();
    sub_23F8766D4();
    sub_23F876F40();
    sub_23F87663C(v3 - 1184);
    sub_23F8766B4();
    sub_23F6B56E0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    v4 = *(_QWORD *)(v3 - 1688);
    *(_QWORD *)v4 = *(_QWORD *)(v3 - 176);
    *(_OWORD *)(v4 + 8) = *(_OWORD *)(v3 - 168);
    sub_23F876E60();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  JUMPOUT(0x23F80D1B8);
}

void sub_23F80C474()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_BYTE *)(v3 - 176) = 27;
  sub_23F83C8C8();
  sub_23F876650();
  if (!v1)
  {
    sub_23F83D2DC();
    sub_23F8766D4();
    sub_23F876F40();
    sub_23F87663C(v3 - 1176);
    sub_23F8766B4();
    sub_23F6B56E0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    v4 = *(_QWORD *)(v3 - 168);
    v5 = *(_QWORD **)(v3 - 1680);
    *v5 = *(_QWORD *)(v3 - 176);
    v5[1] = v4;
    sub_23F876E60();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  JUMPOUT(0x23F80D1B8);
}

void sub_23F80C514()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_BYTE *)(v3 - 176) = 28;
  sub_23F83C850();
  sub_23F876650();
  if (!v1)
  {
    sub_23F83D2A0();
    sub_23F8766D4();
    sub_23F876F40();
    sub_23F87663C(v3 - 1168);
    sub_23F8766B4();
    sub_23F6B56E0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    v4 = *(_QWORD *)(v3 - 168);
    v5 = *(_QWORD **)(v3 - 1672);
    *v5 = *(_QWORD *)(v3 - 176);
    v5[1] = v4;
    sub_23F876E60();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  JUMPOUT(0x23F80D1B8);
}

void sub_23F80C5B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 - 176) = 29;
  sub_23F83C7D8();
  sub_23F876650();
  if (!v1)
  {
    sub_23F83D264();
    sub_23F8766D4();
    sub_23F876F40();
    sub_23F87663C(v3 - 1160);
    sub_23F8766B4();
    sub_23F6B56E0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    sub_23F876E60();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  JUMPOUT(0x23F80D1B8);
}

void sub_23F80C648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 - 176) = 30;
  sub_23F83C760();
  sub_23F876650();
  if (!v1)
  {
    sub_23F83D228();
    sub_23F8766D4();
    sub_23F876F40();
    sub_23F87663C(v3 - 1152);
    sub_23F8766B4();
    sub_23F6B56E0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    *(_OWORD *)*(_QWORD *)(v3 - 1656) = *(_OWORD *)(v3 - 176);
    sub_23F876E60();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  JUMPOUT(0x23F80D1B8);
}

void sub_23F80C6E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 - 176) = 31;
  sub_23F83C6E8();
  sub_23F876650();
  if (!v1)
  {
    sub_23F83D1EC();
    sub_23F8766D4();
    sub_23F876F40();
    sub_23F87663C(v3 - 1144);
    sub_23F8766B4();
    sub_23F6B56E0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    *(_OWORD *)*(_QWORD *)(v3 - 1648) = *(_OWORD *)(v3 - 176);
    sub_23F876E60();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  JUMPOUT(0x23F80D1B8);
}

void sub_23F80C788()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  *(_BYTE *)(v3 - 176) = 32;
  sub_23F83C670();
  sub_23F876650();
  if (!v1)
  {
    sub_23F83D1B0();
    sub_23F8766D4();
    sub_23F876F40();
    sub_23F87663C(v3 - 1136);
    sub_23F8766B4();
    sub_23F6B56E0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    v4 = *(_QWORD *)(v3 - 160);
    v5 = *(_QWORD *)(v3 - 152);
    v6 = *(_DWORD *)(v3 - 144);
    v7 = *(_QWORD *)(v3 - 1632);
    *(_OWORD *)v7 = *(_OWORD *)(v3 - 176);
    *(_QWORD *)(v7 + 16) = v4;
    *(_QWORD *)(v7 + 24) = v5;
    *(_DWORD *)(v7 + 32) = v6;
    *(_OWORD *)(v7 + 40) = *(_OWORD *)(v3 - 136);
    sub_23F876E60();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  JUMPOUT(0x23F80D1B8);
}

void sub_23F80C840()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 - 176) = 33;
  sub_23F83C5F8();
  sub_23F876650();
  if (!v1)
  {
    sub_23F83D174();
    sub_23F8766D4();
    sub_23F876F40();
    sub_23F87663C(v3 - 1128);
    sub_23F8766B4();
    sub_23F6B56E0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    **(_QWORD **)(v3 - 1640) = *(_QWORD *)(v3 - 176);
    sub_23F876E60();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  JUMPOUT(0x23F80D1B8);
}

void sub_23F80C8E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v2 - 176) = 34;
  sub_23F83C5BC();
  sub_23F87661C();
  if (!v0)
  {
    v3 = sub_23FB2D004();
    sub_23F6B4EEC((uint64_t)&qword_256EA7320);
    sub_23F8767A0();
    sub_23F87669C();
    sub_23F87691C();
    sub_23F8766C0(v2 - 1120);
    sub_23F8766B4();
    sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F8769B8();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  sub_23F8783E8();
  JUMPOUT(0x23F80B640);
}

void sub_23F80C974()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v2 - 176) = 35;
  sub_23F83C580();
  sub_23F87661C();
  if (!v0)
  {
    v3 = type metadata accessor for StatementResult(0);
    sub_23F6B4EEC((uint64_t)&qword_256EA81A8);
    sub_23F8767A0();
    sub_23F87669C();
    sub_23F87691C();
    sub_23F8766C0(v2 - 1112);
    sub_23F8766B4();
    sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F8769B8();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  sub_23F8783E8();
  JUMPOUT(0x23F80B640);
}

void sub_23F80CA08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v2 - 176) = 36;
  sub_23F83C544();
  sub_23F87661C();
  if (!v0)
  {
    v3 = type metadata accessor for ExternalAgentTextQuery(0);
    sub_23F6B4EEC((uint64_t)&unk_256EABF80);
    sub_23F8767A0();
    sub_23F87669C();
    sub_23F87691C();
    sub_23F8766C0(v2 - 1104);
    sub_23F8766B4();
    sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F8769B8();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  sub_23F8783E8();
  JUMPOUT(0x23F80B640);
}

void sub_23F80CA9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v2 - 176) = 37;
  sub_23F83C508();
  sub_23F87661C();
  if (!v0)
  {
    v3 = type metadata accessor for ExternalAgentSpeechQuery(0);
    sub_23F6B4EEC((uint64_t)&unk_256EABF78);
    sub_23F8767A0();
    sub_23F87669C();
    sub_23F87691C();
    sub_23F8766C0(v2 - 1096);
    sub_23F8766B4();
    sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F8769B8();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  sub_23F8783E8();
  JUMPOUT(0x23F80B640);
}

void sub_23F80CB30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v2 - 176) = 38;
  sub_23F83C4CC();
  sub_23F87661C();
  if (!v0)
  {
    v3 = type metadata accessor for ExternalAgentRequest(0);
    sub_23F6B4EEC((uint64_t)&unk_256EABF70);
    sub_23F8767A0();
    sub_23F87669C();
    sub_23F87691C();
    sub_23F8766C0(v2 - 1088);
    sub_23F8766B4();
    sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F8769B8();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  sub_23F8783E8();
  JUMPOUT(0x23F80B640);
}

void sub_23F80CBC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v2 - 176) = 39;
  sub_23F83C490();
  sub_23F87661C();
  if (!v0)
  {
    v3 = type metadata accessor for ExternalAgentOutcome(0);
    sub_23F6B4EEC((uint64_t)&unk_256EABF68);
    sub_23F8767A0();
    sub_23F87669C();
    sub_23F87691C();
    sub_23F8766C0(v2 - 1080);
    sub_23F8766B4();
    sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F8769B8();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  sub_23F8783E8();
  JUMPOUT(0x23F80B640);
}

void sub_23F80CC58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 - 176) = 40;
  sub_23F83C418();
  sub_23F876650();
  if (!v1)
  {
    sub_23F83D138();
    sub_23F8766D4();
    sub_23F876F40();
    sub_23F87663C(v3 - 1072);
    sub_23F8766B4();
    sub_23F6B56E0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    v4 = *(_QWORD *)(v3 - 1624);
    *(_QWORD *)v4 = *(_QWORD *)(v3 - 176);
    *(_OWORD *)(v4 + 8) = *(_OWORD *)(v3 - 168);
    sub_23F876E60();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  JUMPOUT(0x23F80D1B8);
}

void sub_23F80CD00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 - 176) = 41;
  sub_23F83C3DC();
  sub_23F87661C();
  if (!v0)
  {
    v4 = type metadata accessor for ToolResolution(0);
    sub_23F6B4EEC((uint64_t)&unk_256EABF58);
    sub_23F87669C();
    sub_23F87691C();
    sub_23F8766C0(v3 - 1064);
    sub_23F8766B4();
    sub_23F6B530C(v2, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    swift_storeEnumTagMultiPayload();
    v5 = *(_QWORD *)(v3 - 192);
    sub_23F83A7A4(v1, v5, type metadata accessor for Session.Event.Payload);
    sub_23F83A7A4(v5, *(_QWORD *)(v3 - 272), type metadata accessor for Session.Event.Payload);
    JUMPOUT(0x23F80B648);
  }
  sub_23F8766B4();
  sub_23F878900();
  sub_23F8783E8();
  JUMPOUT(0x23F80B640);
}

void sub_23F80CD98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v2 - 176) = 42;
  sub_23F83C3A0();
  sub_23F87661C();
  if (!v0)
  {
    v3 = type metadata accessor for UndoRedoRequest(0);
    sub_23F6B4EEC((uint64_t)&unk_256EABF50);
    sub_23F8767A0();
    sub_23F87669C();
    sub_23F87691C();
    sub_23F8766C0(v2 - 1056);
    sub_23F8766B4();
    sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F8769B8();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  sub_23F8783E8();
  JUMPOUT(0x23F80B640);
}

void sub_23F80CE2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v2 - 176) = 43;
  sub_23F83C364();
  sub_23F87661C();
  if (!v0)
  {
    v3 = type metadata accessor for ClientUndoRedoRequest(0);
    sub_23F6B4EEC((uint64_t)&unk_256EABF48);
    sub_23F8767A0();
    sub_23F87669C();
    sub_23F87691C();
    sub_23F8766C0(v2 - 1048);
    sub_23F8766B4();
    sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F8769B8();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  sub_23F8783E8();
  JUMPOUT(0x23F80B640);
}

void sub_23F80CEC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v2 - 176) = 44;
  sub_23F83C328();
  sub_23F87661C();
  if (!v0)
  {
    v3 = type metadata accessor for TypeConversionRequest(0);
    sub_23F6B4EEC((uint64_t)&unk_256EABF40);
    sub_23F8767A0();
    sub_23F87669C();
    sub_23F87691C();
    sub_23F8766C0(v2 - 1040);
    sub_23F8766B4();
    sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F8769B8();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  sub_23F8783E8();
  JUMPOUT(0x23F80B640);
}

void sub_23F80CF54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v2 - 176) = 45;
  sub_23F83C2EC();
  sub_23F87661C();
  if (!v0)
  {
    v3 = type metadata accessor for TypeConversionResult(0);
    sub_23F6B4EEC((uint64_t)&unk_256EABF38);
    sub_23F8767A0();
    sub_23F87669C();
    sub_23F87691C();
    sub_23F8766C0(v2 - 1032);
    sub_23F8766B4();
    sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F8769B8();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F80D3F8);
  }
  sub_23F8766B4();
  sub_23F878900();
  sub_23F8783E8();
  JUMPOUT(0x23F80B640);
}

void sub_23F80CFE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t DecorationResult;

  *(_BYTE *)(v2 - 176) = 46;
  sub_23F83C2B0();
  sub_23F87661C();
  if (!v0)
  {
    DecorationResult = type metadata accessor for QueryDecorationResult(0);
    sub_23F6B4EEC((uint64_t)&unk_256EABF30);
    sub_23F876928();
    sub_23F87669C();
    sub_23F87691C();
    sub_23F8766C0(v2 - 1024);
    sub_23F8766B4();
    sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(DecorationResult + 8));
    sub_23F8769B8();
    JUMPOUT(0x23F80D374);
  }
  sub_23F8766B4();
  sub_23F878900();
  sub_23F8783E8();
  JUMPOUT(0x23F80B640);
}

void sub_23F80D070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 - 176) = 47;
  sub_23F83C238();
  sub_23F876650();
  if (v1)
    JUMPOUT(0x23F80D0ACLL);
  sub_23F83D0FC();
  sub_23F8766D4();
  sub_23F876F40();
  sub_23F87663C(v3 - 1016);
  sub_23F8766B4();
  sub_23F6B56E0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23F876E60();
  JUMPOUT(0x23F80D3E8);
}

void sub_23F80D0B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t DecorationPrePlannerResult;

  *(_BYTE *)(v3 - 176) = 48;
  sub_23F83C1FC();
  v4 = *(_QWORD *)(v3 - 280);
  sub_23F876650();
  if (v0)
    JUMPOUT(0x23F80D0F4);
  DecorationPrePlannerResult = type metadata accessor for QueryDecorationPrePlannerResult(0);
  sub_23F6B4EEC((uint64_t)&unk_256EABF20);
  sub_23F6B6CAC();
  sub_23F87691C();
  sub_23F6B51EC(v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F8766B4();
  sub_23F6B530C(v2, *(uint64_t (**)(uint64_t, uint64_t))(DecorationPrePlannerResult + 8));
  JUMPOUT(0x23F80D450);
}

#error "23F80D528: call analysis failed (funcsize=5)"

void sub_23F80D534()
{
  Session.Event.Payload.encode(to:)();
}

void static Session.Event.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  char v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  char v66;
  uint64_t v67;
  _QWORD *v68;
  char v69;
  _QWORD *v70;
  int v71;
  int *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  sub_23F6B50E8();
  v6 = v5;
  v8 = v7;
  sub_23F72E034();
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B5208();
  v10 = sub_23F6916B8(&qword_256EA27A0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F693EB0();
  sub_23F6916B8(&qword_256EA2798);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F876AD4();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F70DD48();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v72 - v15;
  sub_23F6B5EE4();
  if ((sub_23FB2C4A0() & 1) == 0)
    goto LABEL_50;
  v75 = v0;
  v17 = sub_23F7E52BC();
  if ((sub_23FB2C4A0() & 1) == 0)
    goto LABEL_50;
  v18 = *(int *)(v17 + 24);
  v73 = v8;
  sub_23F876C10(v8 + v18, (uint64_t)v16);
  v72 = (int *)v17;
  v19 = *(int *)(v17 + 24);
  v74 = v6;
  sub_23F876C10(v6 + v19, v4);
  v20 = v1 + *(int *)(v10 + 48);
  v21 = sub_23F6B6F88();
  sub_23F876C10(v21, v22);
  sub_23F876C10(v4, v20);
  sub_23F70D8B8(v1);
  if (v27)
  {
    sub_23F877374(v4);
    sub_23F877374((uint64_t)v16);
    v23 = sub_23F70D8B8(v20);
    if (v27)
    {
      sub_23F878508(v23, &qword_256EA2798);
      goto LABEL_13;
    }
LABEL_11:
    sub_23F878508(v23, &qword_256EA27A0);
    goto LABEL_50;
  }
  v24 = sub_23F7D260C();
  sub_23F7DCCDC(v24, v25, v26);
  sub_23F70D8B8(v20);
  if (v27)
  {
    sub_23F8768C0(v4);
    sub_23F8768C0((uint64_t)v16);
    v23 = sub_23F7B0990(v3, *(uint64_t (**)(uint64_t, uint64_t))(v75 + 8));
    goto LABEL_11;
  }
  v28 = sub_23F877F9C();
  sub_23F6D3ECC(v28, v29, v30);
  sub_23F6B4EEC((uint64_t)&qword_256EA27A8);
  sub_23F6B6218();
  v31 = sub_23F6B5624();
  sub_23F6D39FC(v2);
  sub_23F7F6110(v4, &qword_256EA2798);
  sub_23F7F6110((uint64_t)v16, &qword_256EA2798);
  sub_23F6D39FC(v3);
  v32 = sub_23F6B7194();
  sub_23F7F6110(v32, v33);
  if ((v31 & 1) == 0)
    goto LABEL_50;
LABEL_13:
  v35 = v72;
  v34 = v73;
  sub_23F8783BC();
  v36 = v74;
  static Session.Event.Payload.== infix(_:_:)();
  if ((v37 & 1) == 0)
    goto LABEL_50;
  sub_23F7A029C(v35[8]);
  if (v27)
    v40 = v38 == v39;
  else
    v40 = 0;
  if (v40 || (sub_23F6B5280(), v41 = sub_23F7A01D0(), (v42 & 1) != 0))
  {
    sub_23F7A029C(v35[9]);
    v45 = v27 && v43 == v44;
    if (v45 || (sub_23F6B5280(), v41 = sub_23F7A01D0(), (v46 & 1) != 0))
    {
      sub_23F7A029C(v35[10]);
      v49 = v27 && v47 == v48;
      if (v49 || (sub_23F6B5280(), v41 = sub_23F7A01D0(), (v50 & 1) != 0))
      {
        sub_23F8769C4();
        if (v53)
        {
          if (!v51)
            goto LABEL_50;
          sub_23F6D3998(v52);
          if (v27)
            v56 = v54 == v55;
          else
            v56 = 0;
          if (!v56)
          {
            sub_23F6B5280();
            v41 = sub_23F7A01D0();
            if ((v57 & 1) == 0)
              goto LABEL_51;
          }
        }
        else if (v51)
        {
          goto LABEL_50;
        }
        v58 = sub_23F70D938(v35[12]);
        if ((static Timepoint.== infix(_:_:)(v58, v59) & 1) != 0)
        {
          sub_23F8769C4();
          if (v62)
          {
            if (v60)
            {
              sub_23F6D3998(v61);
              if (v27)
                v65 = v63 == v64;
              else
                v65 = 0;
              if (!v65)
              {
                sub_23F6B5280();
                v41 = sub_23F7A01D0();
                if ((v66 & 1) == 0)
                  goto LABEL_51;
              }
LABEL_48:
              v67 = v35[14];
              v68 = (_QWORD *)(v34 + v67);
              v69 = *(_BYTE *)(v34 + v67 + 8);
              v70 = (_QWORD *)(v36 + v67);
              v71 = *(unsigned __int8 *)(v36 + v67 + 8);
              if ((v69 & 1) != 0)
              {
                if (!v71)
                  goto LABEL_50;
              }
              else
              {
                if (*v68 != *v70)
                  LOBYTE(v71) = 1;
                if ((v71 & 1) != 0)
                  goto LABEL_50;
              }
              sub_23F8772C0(v35[15]);
              sub_23F69A9D4();
              goto LABEL_51;
            }
          }
          else if (!v60)
          {
            goto LABEL_48;
          }
        }
LABEL_50:
        v41 = 0;
      }
    }
  }
LABEL_51:
  sub_23F8782B8(v41);
  sub_23F693DDC();
}

uint64_t sub_23F80D8C0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  char v16;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6576457972657571 && a2 == 0xEC0000006449746ELL;
      if (v7 || (sub_23FB2FB78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x64616F6C796170 && a2 == 0xE700000000000000;
        if (v8 || (sub_23FB2FB78() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x6552746E65696C63 && a2 == 0xEF64497473657571;
          if (v9 || (sub_23FB2FB78() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x6553746E65696C63 && a2 == 0xEF64496E6F697373;
            if (v10 || (sub_23FB2FB78() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0xD000000000000013 && a2 == 0x800000023FB330B0 || (sub_23FB2FB78() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              v11 = a1 == 0x7247746E65696C63 && a2 == 0xED0000644970756FLL;
              if (v11 || (sub_23FB2FB78() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else
              {
                v12 = a1 == 0x6E696F70656D6974 && a2 == 0xE900000000000074;
                if (v12 || (sub_23FB2FB78() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else
                {
                  v13 = a1 == 0x7265646E6573 && a2 == 0xE600000000000000;
                  if (v13 || (sub_23FB2FB78() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 9;
                  }
                  else
                  {
                    v14 = a1 == 0x53676E6974736F70 && a2 == 0xEB000000006E6170;
                    if (v14 || (sub_23FB2FB78() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 10;
                    }
                    else if (a1 == 0x6574616974696E69 && a2 == 0xEE00736E61705364)
                    {
                      swift_bridgeObjectRelease();
                      return 11;
                    }
                    else
                    {
                      v16 = sub_23FB2FB78();
                      swift_bridgeObjectRelease();
                      if ((v16 & 1) != 0)
                        return 11;
                      else
                        return 12;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_23F80DE18()
{
  return 12;
}

uint64_t sub_23F80DE20(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F80DE48 + 4 * byte_23FB632E6[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_23F80DE48()
{
  return 0x496E6F6973736573;
}

uint64_t sub_23F80DE64()
{
  return 0x6576457972657571;
}

uint64_t sub_23F80DE84()
{
  return 0x64616F6C796170;
}

uint64_t sub_23F80DE9C()
{
  return 0x6552746E65696C63;
}

uint64_t sub_23F80DEC0()
{
  return 0x6553746E65696C63;
}

unint64_t sub_23F80DEE4()
{
  return 0xD000000000000013;
}

uint64_t sub_23F80DF00()
{
  return 0x7247746E65696C63;
}

uint64_t sub_23F80DF24()
{
  return 0x6E696F70656D6974;
}

uint64_t sub_23F80DF44()
{
  return 0x7265646E6573;
}

uint64_t sub_23F80DF58()
{
  return 0x53676E6974736F70;
}

uint64_t sub_23F80DF78()
{
  return 0x6574616974696E69;
}

uint64_t sub_23F80DF9C()
{
  unsigned __int8 *v0;

  return sub_23F80DE20(*v0);
}

uint64_t sub_23F80DFA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F80D8C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F80DFC8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F80DE18();
  *a1 = result;
  return result;
}

uint64_t sub_23F80DFEC()
{
  sub_23F83D480();
  return sub_23FB2FD10();
}

uint64_t sub_23F80E014()
{
  sub_23F83D480();
  return sub_23FB2FD1C();
}

void Session.Event.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  __int128 v12;

  sub_23F6B5220();
  sub_23F876CB0();
  sub_23F6916B8(&qword_256EAC058);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F70D4B8();
  sub_23F83D480();
  sub_23F6B63A4();
  LOBYTE(v12) = 0;
  sub_23F72E034();
  sub_23F6B4EEC((uint64_t)&qword_256EA6620);
  sub_23F70D78C();
  if (!v0)
  {
    v6 = type metadata accessor for Session.Event(0);
    LOBYTE(v12) = 1;
    sub_23F70D78C();
    LOBYTE(v12) = 2;
    sub_23F77178C();
    sub_23F878898();
    LOBYTE(v12) = v7;
    type metadata accessor for Session.Event.Payload(0);
    sub_23F6B4EEC((uint64_t)&unk_256EAC068);
    sub_23F70D78C();
    sub_23F877ED8();
    LOBYTE(v12) = v8;
    sub_23F70D90C();
    LOBYTE(v12) = 5;
    sub_23F70D90C();
    sub_23F878FE4();
    LOBYTE(v12) = v9;
    sub_23F70D90C();
    LOBYTE(v12) = 7;
    sub_23F876B6C();
    LOBYTE(v12) = 8;
    type metadata accessor for Timepoint();
    sub_23F6B4EEC((uint64_t)&qword_256EA90C0);
    sub_23F70D78C();
    v12 = *(_OWORD *)(v1 + *(int *)(v6 + 52));
    sub_23F79AD74();
    sub_23F77178C();
    sub_23F8796E4();
    *(_QWORD *)&v12 = v10;
    BYTE8(v12) = v11;
    sub_23F79ADB0();
    sub_23F77178C();
    *(_QWORD *)&v12 = *(_QWORD *)(v1 + *(int *)(v6 + 60));
    sub_23F6916B8(&qword_256EAC070);
    sub_23F83D4BC();
    sub_23F70D78C();
  }
  sub_23F6B56E0((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F876B60();
  sub_23F6B5100();
}

void Session.Event.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int *v33;
  void (*v34)(uint64_t);
  uint64_t v35;
  int v36;
  void (*v37)(uint64_t);
  uint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65[9];
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  int *v75;
  uint64_t v76;
  uint64_t v77;

  sub_23F6B5220();
  v72 = v0;
  v7 = v6;
  v65[2] = v8;
  v65[3] = type metadata accessor for Timepoint();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v65[4] = (uint64_t)v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65[5] = sub_23F879620();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B5848(v12, v65[0]);
  sub_23F6916B8(&qword_256EA2798);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B5560(v14, v65[0]);
  sub_23F72E034();
  sub_23F8792C8();
  v67 = v15;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F876D18();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B6580();
  v68 = v18;
  v65[8] = sub_23F6916B8(&qword_256EAC080);
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8](v19);
  v20 = sub_23F78F260();
  v21 = (int *)type metadata accessor for Session.Event(v20);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6B573C();
  v74 = v5 + *(int *)(v23 + 24);
  sub_23F87732C(v74);
  v24 = (uint64_t *)(v5 + v21[11]);
  *v24 = 0;
  v24[1] = 0;
  v73 = v24;
  v25 = (_QWORD *)(v5 + v21[13]);
  *v25 = 0;
  v25[1] = 0;
  v70 = v25;
  v71 = v5;
  v75 = v21;
  v26 = v5 + v21[14];
  *(_QWORD *)v26 = 0;
  *(_BYTE *)(v26 + 8) = 1;
  v69 = v7;
  sub_23F70D6E4(v7);
  sub_23F83D480();
  v66 = v4;
  sub_23F878788();
  v27 = v72;
  sub_23F7A02FC();
  if (v27)
  {
    v28 = v71;
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v69);
    v29 = 0;
    v30 = 0;
    v31 = 0;
    v32 = 0;
    v72 = v27;
    v33 = v75;
    LODWORD(v68) = 0;
  }
  else
  {
    v65[0] = v26;
    v65[1] = v3;
    LOBYTE(v76) = 0;
    sub_23F6B4EEC((uint64_t)&qword_256EA6700);
    sub_23F876AE4();
    v37 = *(void (**)(uint64_t))(v67 + 32);
    v38 = v71;
    v39 = sub_23F8781AC();
    v37(v39);
    sub_23F87936C();
    sub_23F876AE4();
    v40 = v75;
    ((void (*)(uint64_t, uint64_t, uint64_t))v37)(v38 + v75[5], v1, v2);
    LOBYTE(v76) = 2;
    v41 = v65[7];
    sub_23F877F7C();
    sub_23F840E4C(v41, v74, &qword_256EA2798);
    LOBYTE(v76) = 3;
    sub_23F6B4EEC((uint64_t)&unk_256EAC088);
    sub_23F878340();
    v43 = v2;
    v42 = sub_23F876AE4();
    sub_23F87907C(v42, v38 + v40[7], type metadata accessor for Session.Event.Payload);
    v44 = sub_23F8774EC(4);
    sub_23F878CB8(v44, v45, v40[8]);
    v46 = sub_23F8774EC(5);
    sub_23F878CB8(v46, v47, v40[9]);
    v48 = sub_23F8774EC(6);
    sub_23F878CB8(v48, v49, v40[10]);
    LOBYTE(v76) = 7;
    v50 = sub_23FB2FA10();
    v52 = v51;
    v53 = v73;
    sub_23F878C90();
    *v53 = v50;
    v53[1] = v52;
    LOBYTE(v76) = 8;
    sub_23F6B4EEC((uint64_t)&qword_256EA90E8);
    sub_23F878340();
    v54 = sub_23F876AE4();
    LODWORD(v68) = 1;
    sub_23F87907C(v54, v38 + v40[12], (uint64_t (*)(_QWORD))type metadata accessor for Timepoint);
    sub_23F79ADEC();
    sub_23F878FB0();
    sub_23F87945C();
    v72 = 0;
    v55 = v76;
    v56 = v77;
    v57 = v70;
    swift_bridgeObjectRelease();
    *v57 = v55;
    v57[1] = v56;
    sub_23F79AE28();
    sub_23F878FB0();
    v58 = v72;
    sub_23FB2FA34();
    v72 = v58;
    if (!v58)
    {
      v59 = v77;
      v60 = v65[0];
      *(_QWORD *)v65[0] = v76;
      *(_BYTE *)(v60 + 8) = v59;
      sub_23F6916B8(&qword_256EAC070);
      sub_23F83D4BC();
      sub_23F879188();
      v61 = v72;
      sub_23FB2FA7C();
      v72 = v61;
      if (!v61)
      {
        sub_23F878834();
        v62 = v71;
        *(_QWORD *)(v71 + v75[15]) = v76;
        v63 = sub_23F876E60();
        sub_23F876818(v63, v64);
        _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v69);
        sub_23F876820(v62);
        goto LABEL_17;
      }
    }
    sub_23F878834();
    v33 = v75;
    v28 = v71;
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v69);
    v29 = 1;
    v30 = 1;
    v31 = 1;
    v32 = 1;
    v34 = *(void (**)(uint64_t))(v67 + 8);
    v35 = sub_23F7B0E48();
    v34(v35);
    ((void (*)(uint64_t, uint64_t))v34)(v28 + v33[5], v43);
  }
  sub_23F7F6110(v74, &qword_256EA2798);
  if (v29)
    sub_23F83A7D4(v28 + v33[7], type metadata accessor for Session.Event.Payload);
  if (v30)
    sub_23F7A01C8();
  v36 = v68;
  if (v31)
    sub_23F7A01C8();
  if (v32)
    sub_23F7A01C8();
  sub_23F7A01C8();
  if (v36)
    sub_23F83A7D4(v28 + v33[12], (uint64_t (*)(_QWORD))type metadata accessor for Timepoint);
  sub_23F7A01C8();
LABEL_17:
  sub_23F876B60();
  sub_23F6B5100();
}

void sub_23F80EA40()
{
  Session.Event.init(from:)();
}

void sub_23F80EA54()
{
  Session.Event.encode(to:)();
}

void Session.Plan.init(prompt:promptResponse:statements:overrideId:source:program:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  sub_23F6B50E8();
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  sub_23F876AEC();
  swift_bridgeObjectRelease();
  v13 = *v6;
  *(_QWORD *)v4 = v3;
  *(_QWORD *)(v4 + 8) = v2;
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v0;
  *(_QWORD *)(v4 + 32) = v12;
  *(_QWORD *)(v4 + 40) = v10;
  *(_QWORD *)(v4 + 48) = v8;
  *(_BYTE *)(v4 + 56) = v13;
  sub_23F693DDC();
}

void __swiftcall Session.Plan.init(prompt:promptResponse:statements:overrideId:)(IntelligenceFlowPlannerSupport::Session::Plan *__return_ptr retstr, Swift::String prompt, Swift::String promptResponse, Swift::OpaquePointer statements, Swift::String_optional overrideId)
{
  retstr->prompt = prompt;
  retstr->promptResponse = promptResponse;
  retstr->statements = statements;
  retstr->overrideId = overrideId;
  retstr->source = IntelligenceFlowPlannerSupport_Session_Plan_Source_notSet;
}

void __swiftcall Session.Plan.init(prompt:promptResponse:statements:)(IntelligenceFlowPlannerSupport::Session::Plan *__return_ptr retstr, Swift::String prompt, Swift::String promptResponse, Swift::OpaquePointer statements)
{
  retstr->prompt = prompt;
  retstr->promptResponse = promptResponse;
  retstr->overrideId.value._countAndFlagsBits = 0;
  retstr->overrideId.value._object = 0;
  retstr->statements = statements;
  retstr->source = IntelligenceFlowPlannerSupport_Session_Plan_Source_notSet;
}

void Session.Plan.init(prompt:promptResponse:statements:decompositionResult:decomposedQueries:program:expressions:tools:types:overrideId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_23F87743C();
  v34 = v33;
  v37 = v35;
  v38 = v36;
  sub_23F879A04();
  swift_bridgeObjectRelease();
  sub_23F6B5AB0();
  sub_23F6B6E44();
  sub_23F756640();
  swift_bridgeObjectRelease();
  sub_23F83D52C(*v34, v34[1], v34[2]);
  *(_QWORD *)v32 = v31;
  *(_QWORD *)(v32 + 8) = v30;
  *(_QWORD *)(v32 + 16) = v29;
  *(_QWORD *)(v32 + 24) = v37;
  *(_QWORD *)(v32 + 32) = v38;
  *(_QWORD *)(v32 + 40) = a28;
  *(_QWORD *)(v32 + 48) = a29;
  *(_BYTE *)(v32 + 56) = 0;
  sub_23F6F09E8();
}

void Session.Plan.init(prompt:promptResponse:statements:decompositionResult:decomposedQueries:program:expressions:tools:types:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F8770E0();
  v5 = v4;
  v12 = v6;
  v8 = v7;
  sub_23F879A04();
  swift_bridgeObjectRelease();
  sub_23F6B5AB0();
  sub_23F6B6E44();
  sub_23F756640();
  v9 = *v5;
  v10 = v5[1];
  v11 = v5[2];
  swift_bridgeObjectRelease();
  sub_23F83D52C(v9, v10, v11);
  *(_QWORD *)v3 = v2;
  *(_QWORD *)(v3 + 8) = v1;
  *(_QWORD *)(v3 + 16) = v0;
  *(_QWORD *)(v3 + 24) = v8;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 32) = v12;
  *(_BYTE *)(v3 + 56) = 0;
  sub_23F877098();
}

void Session.Plan.init(decompositionResult:decomposedQueries:prompt:promptResponse:program:expressions:tools:types:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F6B50E8();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  swift_bridgeObjectRelease();
  sub_23F693E04();
  sub_23F6B6E44();
  sub_23F756640();
  swift_bridgeObjectRelease();
  sub_23F83D52C(*v9, v9[1], v9[2]);
  *(_QWORD *)v11 = v7;
  *(_QWORD *)(v11 + 8) = v5;
  *(_QWORD *)(v11 + 16) = v3;
  *(_QWORD *)(v11 + 24) = v1;
  v12 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v11 + 40) = 0;
  *(_QWORD *)(v11 + 48) = 0;
  *(_QWORD *)(v11 + 32) = v12;
  *(_BYTE *)(v11 + 56) = 0;
  sub_23F693DDC();
}

void Session.Plan.Source.hash(into:)()
{
  sub_23F70D9B8();
  sub_23F694CC8();
}

BOOL static Session.Plan.Source.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23F80ECAC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x746553746F6ELL && a2 == 0xE600000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023FB34990 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = a1 == 0x616C50796D6D7564 && a2 == 0xEC00000072656E6ELL;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = a1 == 0x7265764F6E616C70 && a2 == 0xEC00000065646972;
      if (v7 || (sub_23FB2FB78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0x6E616C506C6C7566 && a2 == 0xEB0000000072656ELL)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v9 = sub_23FB2FB78();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 4;
        else
          return 5;
      }
    }
  }
}

uint64_t sub_23F80EEF4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F80EF24 + 4 * byte_23FB632F2[a1]))(0x746553746F6ELL, 0xE600000000000000);
}

unint64_t sub_23F80EF24()
{
  return 0xD000000000000017;
}

uint64_t sub_23F80EF40()
{
  return 0x616C50796D6D7564;
}

uint64_t sub_23F80EF60()
{
  return 0x7265764F6E616C70;
}

uint64_t sub_23F80EF80()
{
  return 0x6E616C506C6C7566;
}

uint64_t sub_23F80EFA0()
{
  unsigned __int8 *v0;

  return sub_23F80EEF4(*v0);
}

uint64_t sub_23F80EFA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F80ECAC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F80EFCC()
{
  sub_23F83D55C();
  return sub_23FB2FD10();
}

uint64_t sub_23F80EFF4()
{
  sub_23F83D55C();
  return sub_23FB2FD1C();
}

uint64_t sub_23F80F01C()
{
  sub_23F83D610();
  return sub_23FB2FD10();
}

uint64_t sub_23F80F044()
{
  sub_23F83D610();
  return sub_23FB2FD1C();
}

uint64_t sub_23F80F06C()
{
  sub_23F83D598();
  return sub_23FB2FD10();
}

uint64_t sub_23F80F094()
{
  sub_23F83D598();
  return sub_23FB2FD1C();
}

uint64_t sub_23F80F0BC()
{
  sub_23F83D688();
  return sub_23FB2FD10();
}

uint64_t sub_23F80F0E4()
{
  sub_23F83D688();
  return sub_23FB2FD1C();
}

uint64_t sub_23F80F10C()
{
  sub_23F83D5D4();
  return sub_23FB2FD10();
}

uint64_t sub_23F80F134()
{
  sub_23F83D5D4();
  return sub_23FB2FD1C();
}

uint64_t sub_23F80F15C()
{
  sub_23F83D64C();
  return sub_23FB2FD10();
}

uint64_t sub_23F80F184()
{
  sub_23F83D64C();
  return sub_23FB2FD1C();
}

void Session.Plan.Source.encode(to:)()
{
  unsigned __int8 *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_23F6B5220();
  v2 = v1;
  sub_23F6916B8(&qword_256EAC098);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B537C(v4, v14);
  sub_23F6916B8(&qword_256EAC0A0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B5598(v6, v15);
  sub_23F6916B8(&qword_256EAC0A8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B57A0(v8, v16);
  sub_23F6916B8(&qword_256EAC0B0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B5560(v10, v17);
  sub_23F6916B8(&qword_256EAC0B8);
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B573C();
  sub_23F6916B8(&qword_256EAC0C0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F693EB0();
  v13 = *v0;
  sub_23F876A18(v2);
  sub_23F83D55C();
  sub_23F87902C();
  sub_23FB2FCC8();
  __asm { BR              X9 }
}

void sub_23F80F300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);

  *(_BYTE *)(v2 - 69) = 0;
  sub_23F83D688();
  sub_23F6B5610();
  sub_23F6B56E0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  v3 = sub_23F6B6098();
  v4(v3);
  sub_23F6B5100();
}

void Session.Plan.Source.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  sub_23F6B5220();
  sub_23F879054();
  sub_23F6916B8(&qword_256EAC0F8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B57BC(v4, v30);
  v5 = sub_23F6916B8(&qword_256EAC100);
  sub_23F879048(v5);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B5598(v7, v31);
  sub_23F6916B8(&qword_256EAC108);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5810(v9, v32);
  sub_23F6916B8(&qword_256EAC110);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5404(v11, v33);
  sub_23F6916B8(&qword_256EAC118);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EAC120);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B52B0();
  sub_23F876BD8(v0);
  sub_23F83D55C();
  sub_23F87893C();
  sub_23F878688();
  if (!v35)
  {
    v14 = v1;
    sub_23FB2FA94();
    sub_23F878164();
    if (v15)
    {
      v34 = v1;
      v16 = *(unsigned __int8 *)(v2 + 32);
      v17 = sub_23F70D968();
      sub_23F6B4E44(v17, v18, v19, v20, v21, v22);
      v24 = v23;
      v26 = v25;
      sub_23F6B6E44();
      if (v24 == v26 >> 1)
        __asm { BR              X9 }
      v14 = v34;
    }
    sub_23F6B6334();
    sub_23F6B5AD4();
    v28 = v27;
    sub_23F6916B8(&qword_256EA1870);
    sub_23F878828();
    *v28 = &type metadata for Session.Plan.Source;
    sub_23FB2FA04();
    v29 = sub_23F6B56B8();
    sub_23F6B5DAC(v29, *MEMORY[0x24BEE26D0]);
    swift_willThrow();
    sub_23F6B5770();
    sub_23F6B5900(v14, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }
  sub_23F72E47C();
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23F80F6D0()
{
  uint64_t v0;

  sub_23F8793C8();
  sub_23F876730();
  if (!v0)
  {
    sub_23F6B61DC();
    JUMPOUT(0x23F80F7CCLL);
  }
  JUMPOUT(0x23F80F6ACLL);
}

void sub_23F80F70C()
{
  uint64_t v0;

  sub_23F87953C();
  sub_23F876730();
  if (!v0)
    JUMPOUT(0x23F80F744);
  JUMPOUT(0x23F80F6ACLL);
}

void sub_23F80F74C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);

  sub_23F8790F8();
  v2 = *(_QWORD *)(v1 - 216);
  sub_23F876730();
  if (!v0)
  {
    v3 = sub_23F6B5FE0();
    v4(v3);
    sub_23F6B5770();
    sub_23F6B5900(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 96) + 8));
    **(_BYTE **)(v1 - 136) = *(_QWORD *)(v1 - 248);
    JUMPOUT(0x23F80F6C0);
  }
  JUMPOUT(0x23F80F6ACLL);
}

void sub_23F80F790()
{
  uint64_t v0;

  sub_23F879090();
  sub_23F876730();
  if (!v0)
  {
    sub_23F72E144();
    JUMPOUT(0x23F80F7CCLL);
  }
  JUMPOUT(0x23F80F6ACLL);
}

void sub_23F80F7F4()
{
  Session.Plan.Source.init(from:)();
}

void sub_23F80F808()
{
  Session.Plan.Source.encode(to:)();
}

void Session.Plan.DecompositionResult.prompt.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void static Session.Plan.DecompositionResult.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  _QWORD *v6;
  _QWORD *v7;

  v3 = a1[1];
  v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      v5 = *a1 == *a2 && v3 == v4;
      if (v5 || (sub_23F6B5280() & 1) != 0)
        goto LABEL_8;
    }
  }
  else if (!v4)
  {
LABEL_8:
    v6 = (_QWORD *)sub_23F6B5994();
    sub_23F6957CC(v6, v7);
    return;
  }
  sub_23F694CC8();
}

uint64_t sub_23F80F89C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x74706D6F7270 && a2 == 0xE600000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73656972657571 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F80F980(char a1)
{
  if ((a1 & 1) != 0)
    return 0x73656972657571;
  else
    return 0x74706D6F7270;
}

uint64_t sub_23F80F9B4()
{
  char *v0;

  return sub_23F80F980(*v0);
}

uint64_t sub_23F80F9BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F80F89C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F80F9E0()
{
  sub_23F83D6C4();
  return sub_23FB2FD10();
}

uint64_t sub_23F80FA08()
{
  sub_23F83D6C4();
  return sub_23FB2FD1C();
}

void Session.Plan.DecompositionResult.encode(to:)()
{
  sub_23F834FB8();
}

void Session.Plan.DecompositionResult.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[2];

  sub_23F6B5220();
  sub_23F87733C();
  sub_23F6916B8(&qword_256EAC138);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v0[3];
  v8 = v0[4];
  sub_23F876754(v0);
  sub_23F83D6C4();
  sub_23F6B5DA0();
  if (v1)
  {
    sub_23F6B6E68();
  }
  else
  {
    sub_23F878C10();
    sub_23F879860();
    sub_23F6916B8(&qword_256EA1918);
    sub_23F6B6360();
    sub_23F6AEB70((uint64_t)&qword_256EA1930);
    v10 = v9;
    sub_23F77E600();
    sub_23F8769F0();
    sub_23F6B563C((uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    if (v10)
    {
      sub_23F6B6A48();
      sub_23F6B6E68();
    }
    else
    {
      v11 = v12[1];
      *v2 = v8;
      v2[1] = v7;
      v2[2] = v11;
      sub_23F6B54F8();
      sub_23F876C80();
    }
    sub_23F6B6A48();
  }
  sub_23F876FC4();
  sub_23F6B5100();
}

void sub_23F80FBB0()
{
  Session.Plan.DecompositionResult.init(from:)();
}

void sub_23F80FBC4()
{
  Session.Plan.DecompositionResult.encode(to:)();
}

void Session.Plan.prompt.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void Session.Plan.promptResponse.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

uint64_t Session.Plan.statements.getter()
{
  return swift_bridgeObjectRetain();
}

void Session.Plan.overrideId.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void Session.Plan.source.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 56);
}

void Session.Plan.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_23FB2F7AC();
  sub_23F87975C();
  v0 = sub_23F878E84();
  v1 = sub_23F6B5F1C();
  MEMORY[0x242674058](v1, v0);
  sub_23F6B68F8();
  sub_23F6B5908();
  sub_23F6B6090();
  sub_23F876D94();
  sub_23F6B5508();
  sub_23F877298();
  sub_23F693E04();
  sub_23F876D94();
  sub_23FB2F17C();
  sub_23F6B68F8();
  sub_23F693E04();
  sub_23F8784D0();
}

uint64_t sub_23F80FD3C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 0x74706D6F7270 && a2 == 0xE600000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x655274706D6F7270 && a2 == 0xEE0065736E6F7073;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6E656D6574617473 && a2 == 0xEA00000000007374;
      if (v7 || (sub_23FB2FB78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x656469727265766FLL && a2 == 0xEA00000000006449;
        if (v8 || (sub_23FB2FB78() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x656372756F73 && a2 == 0xE600000000000000)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v10 = sub_23FB2FB78();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_23F80FF6C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F80FF9C + 4 * byte_23FB63301[a1]))(0x74706D6F7270, 0xE600000000000000);
}

uint64_t sub_23F80FF9C()
{
  return 0x655274706D6F7270;
}

uint64_t sub_23F80FFC0()
{
  return 0x6E656D6574617473;
}

uint64_t sub_23F80FFE0()
{
  return 0x656469727265766FLL;
}

uint64_t sub_23F80FFFC()
{
  return 0x656372756F73;
}

uint64_t sub_23F81000C()
{
  unsigned __int8 *v0;

  return sub_23F80FF6C(*v0);
}

uint64_t sub_23F810014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F80FD3C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F810038()
{
  sub_23F83D700();
  return sub_23FB2FD10();
}

uint64_t sub_23F810060()
{
  sub_23F83D700();
  return sub_23FB2FD1C();
}

void Session.Plan.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  sub_23F6B5220();
  v4 = v3;
  sub_23F6916B8(&qword_256EAC140);
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F877C00();
  sub_23F876754(v4);
  sub_23F83D700();
  sub_23F876F84();
  sub_23F7D260C();
  sub_23FB2FADC();
  if (!v0)
  {
    sub_23F8789A4();
    sub_23F70D90C();
    sub_23F877210();
    sub_23F6916B8(&qword_256EAC150);
    sub_23F83D73C();
    sub_23F70D78C();
    sub_23F77E608();
    sub_23F876B6C();
    sub_23F83D7B8();
    sub_23F70D78C();
  }
  sub_23F6B56E0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F876B60();
  sub_23F6B5100();
}

void Session.Plan.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10, char a11, char a12)
{
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  sub_23F6B5220();
  v15 = v14;
  v17 = v16;
  sub_23F6916B8(&qword_256EAC170);
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F876BD8(v15);
  sub_23F83D700();
  sub_23F877870();
  if (v12)
  {
    sub_23F6B6E68();
    goto LABEL_4;
  }
  sub_23F8791E8();
  v41 = sub_23F87734C();
  sub_23F6B6360();
  v22 = v21;
  sub_23F740050();
  v23 = sub_23F87734C();
  v42 = v24;
  v39 = v23;
  sub_23F6916B8(&qword_256EAC150);
  sub_23F877210();
  v25 = sub_23F83D7F4();
  sub_23F6B5F1C();
  v40 = 0;
  sub_23F7839F0();
  if (v25)
  {
    sub_23F6B5900((uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
    sub_23F6B644C();
    sub_23F693DFC();
    v26 = 0;
    v27 = 0;
  }
  else
  {
    v28 = v43;
    sub_23F6B6548();
    v37 = sub_23FB2FA10();
    v38 = v28;
    v30 = v29;
    v31 = sub_23F83D870();
    sub_23F6B6548();
    sub_23F8769F0();
    if (!v31)
    {
      sub_23F6B5900((uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
      v33 = v42;
      *(_QWORD *)v17 = v41;
      *(_QWORD *)(v17 + 8) = v22;
      v34 = v38;
      *(_QWORD *)(v17 + 16) = v39;
      *(_QWORD *)(v17 + 24) = v33;
      v35 = v37;
      *(_QWORD *)(v17 + 32) = v34;
      *(_QWORD *)(v17 + 40) = v35;
      *(_QWORD *)(v17 + 48) = v30;
      *(_BYTE *)(v17 + 56) = a12;
      _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v15);
      sub_23F6B6090();
      sub_23F6B644C();
      sub_23F693DFC();
      goto LABEL_15;
    }
    sub_23F6B5900((uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
    sub_23F6B644C();
    sub_23F7D2F10();
    sub_23F6B6A48();
    sub_23F6B6090();
    v26 = 1;
    v27 = 1;
  }
  v32 = v40;
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v15);
  sub_23F6B644C();
  if (v32)
  {
    if (v26)
      goto LABEL_11;
    goto LABEL_14;
  }
  sub_23F7D2F10();
  if (!v26)
  {
LABEL_14:
    if (!v27)
      goto LABEL_4;
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
LABEL_11:
  sub_23F6B6A48();
  if (v27)
    goto LABEL_15;
LABEL_4:
  sub_23F876FC4();
  sub_23F6B5100();
}

void sub_23F8104D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  int vars8;

  Session.Plan.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SBYTE2(vars8), SHIBYTE(vars8));
}

void sub_23F8104E4()
{
  Session.Plan.encode(to:)();
}

void static Session.PlanGenerationError.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  BOOL v12;

  sub_23F6D3A90();
  sub_23F876B9C(v8);
  v11 = v11 && v9 == v10;
  if (v11 || (sub_23F6B5280() & 1) != 0)
  {
    v12 = v4 == v6 && v5 == v7;
    if ((v12 || (sub_23F6B5280() & 1) != 0) && (v0 != v2 || v1 != v3))
      sub_23F6B5280();
  }
  sub_23F6B69E0();
}

uint64_t sub_23F810584(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000013 && a2 == 0x800000023FB349B0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_23F810608()
{
  return 0xD000000000000013;
}

uint64_t sub_23F810628@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F810584(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F810650()
{
  sub_23F83D8AC();
  return sub_23FB2FD10();
}

uint64_t sub_23F810678()
{
  sub_23F83D8AC();
  return sub_23FB2FD1C();
}

uint64_t sub_23F8106A0()
{
  sub_23F83D8E8();
  return sub_23FB2FD10();
}

uint64_t sub_23F8106C8()
{
  sub_23F83D8E8();
  return sub_23FB2FD1C();
}

void Session.RecoverableError.encode(to:)()
{
  __int128 *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  _QWORD v9[2];
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  sub_23F6B5220();
  v3 = v2;
  v13 = *(_QWORD *)(sub_23F6916B8(&qword_256EAC190) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F693EB0();
  v12 = *(_QWORD *)(sub_23F6916B8(&qword_256EAC198) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v0;
  v10 = v0[1];
  v11 = v8;
  v9[1] = *((_QWORD *)v0 + 5);
  sub_23F876A18(v3);
  sub_23F83D8AC();
  sub_23F877A60();
  sub_23F83D8E8();
  sub_23F876FB8();
  sub_23F878D28();
  sub_23F83D924();
  sub_23F8778C4();
  sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
  sub_23F6B563C((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  sub_23F77DB18();
  sub_23F6B5100();
}

void Session.RecoverableError.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_23F6B5220();
  v3 = v2;
  v26 = v4;
  v27 = sub_23F6916B8(&qword_256EAC1B8);
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B573C();
  sub_23F6916B8(&qword_256EAC1C0);
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v3[3];
  sub_23F876754(v3);
  sub_23F83D8AC();
  sub_23F8779C0();
  if (!v0)
  {
    v10 = *(_QWORD *)(sub_23F878034() + 16);
    v25 = v9;
    if (v10
      && (v11 = sub_23F877FD8(),
          sub_23F6B4E44(v11, v12, v13, v14, v15, v16),
          v18 = v17,
          v20 = v19,
          sub_23F6B5908(),
          v18 == v20 >> 1))
    {
      sub_23F83D8E8();
      sub_23F876730();
      sub_23F83D960();
      sub_23F7839F0();
      v9 = v25;
      sub_23F6B56E0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
      sub_23F6F756C();
      sub_23F6B6420((uint64_t)v8, MEMORY[8]);
      sub_23F878CDC();
    }
    else
    {
      sub_23F6B6334();
      sub_23F6B5AD4();
      sub_23F6916B8(&qword_256EA1870);
      sub_23F878D04((uint64_t)&type metadata for Session.RecoverableError);
      v21 = sub_23F6B56B8();
      sub_23F8785F8(v21, *MEMORY[0x24BEE26D0]);
      sub_23F87948C();
      sub_23F6F756C();
      v22 = sub_23F877F9C();
      v23(v22);
      v9 = v25;
    }
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v9);
  sub_23F876B60();
  sub_23F6B5100();
}

void sub_23F810A64()
{
  Session.RecoverableError.init(from:)();
}

void sub_23F810A78()
{
  Session.RecoverableError.encode(to:)();
}

void static Session.PlanGenerationModelOutputError.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  char v12;
  BOOL v13;
  char v14;
  BOOL v15;

  sub_23F6D3A90();
  sub_23F876B9C(v8);
  v11 = v11 && v9 == v10;
  if ((v11 || (sub_23F6B5280(), sub_23F7A01D0(), (v12 & 1) != 0))
    && (v4 == v6 ? (v13 = v5 == v7) : (v13 = 0),
        (v13 || (sub_23F6B5280(), sub_23F7A01D0(), (v14 & 1) != 0)) && (v0 == v2 ? (v15 = v1 == v3) : (v15 = 0), !v15)))
  {
    sub_23FB2FB78();
  }
  else
  {
    sub_23F6B69E0();
  }
}

uint64_t sub_23F810B28(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x800000023FB349D0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_23F810BAC()
{
  return 0xD000000000000010;
}

uint64_t sub_23F810BCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F810B28(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F810BF4()
{
  sub_23F83D99C();
  return sub_23FB2FD10();
}

uint64_t sub_23F810C1C()
{
  sub_23F83D99C();
  return sub_23FB2FD1C();
}

uint64_t sub_23F810C44()
{
  sub_23F83D9D8();
  return sub_23FB2FD10();
}

uint64_t sub_23F810C6C()
{
  sub_23F83D9D8();
  return sub_23FB2FD1C();
}

void Session.PlanGenerationError.encode(to:)()
{
  __int128 *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  _QWORD v9[2];
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  sub_23F6B5220();
  v3 = v2;
  v13 = *(_QWORD *)(sub_23F6916B8(&qword_256EAC1D0) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F693EB0();
  v12 = *(_QWORD *)(sub_23F6916B8(&qword_256EAC1D8) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v0;
  v10 = v0[1];
  v11 = v8;
  v9[1] = *((_QWORD *)v0 + 5);
  sub_23F876A18(v3);
  sub_23F83D99C();
  sub_23F877A60();
  sub_23F83D9D8();
  sub_23F876FB8();
  sub_23F878D28();
  sub_23F83DA14();
  sub_23F8778C4();
  sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
  sub_23F6B563C((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  sub_23F77DB18();
  sub_23F6B5100();
}

void Session.PlanGenerationError.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_23F6B5220();
  v3 = v2;
  v26 = v4;
  v27 = sub_23F6916B8(&qword_256EAC1F8);
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B573C();
  sub_23F6916B8(&qword_256EAC200);
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v3[3];
  sub_23F876754(v3);
  sub_23F83D99C();
  sub_23F8779C0();
  if (!v0)
  {
    v10 = *(_QWORD *)(sub_23F878034() + 16);
    v25 = v9;
    if (v10
      && (v11 = sub_23F877FD8(),
          sub_23F6B4E44(v11, v12, v13, v14, v15, v16),
          v18 = v17,
          v20 = v19,
          sub_23F6B5908(),
          v18 == v20 >> 1))
    {
      sub_23F83D9D8();
      sub_23F876730();
      sub_23F83DA50();
      sub_23F7839F0();
      v9 = v25;
      sub_23F6B56E0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
      sub_23F6F756C();
      sub_23F6B6420((uint64_t)v8, MEMORY[8]);
      sub_23F878CDC();
    }
    else
    {
      sub_23F6B6334();
      sub_23F6B5AD4();
      sub_23F6916B8(&qword_256EA1870);
      sub_23F878D04((uint64_t)&type metadata for Session.PlanGenerationError);
      v21 = sub_23F6B56B8();
      sub_23F8785F8(v21, *MEMORY[0x24BEE26D0]);
      sub_23F87948C();
      sub_23F6F756C();
      v22 = sub_23F877F9C();
      v23(v22);
      v9 = v25;
    }
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v9);
  sub_23F876B60();
  sub_23F6B5100();
}

void sub_23F811008()
{
  Session.PlanGenerationError.init(from:)();
}

void sub_23F81101C()
{
  Session.PlanGenerationError.encode(to:)();
}

void Session.PlanGenerationModelOutputError.rawModelOutput.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void Session.PlanGenerationModelOutputError.rawModelOutput.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  sub_23F6F09A8();
  *v2 = a1;
  v2[1] = a2;
  sub_23F694C84();
}

uint64_t (*Session.PlanGenerationModelOutputError.rawModelOutput.modify())()
{
  return nullsub_1;
}

void Session.PlanGenerationModelOutputError.prompt.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void Session.PlanGenerationModelOutputError.prompt.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6F0C58();
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v0;
  sub_23F694C84();
}

uint64_t (*Session.PlanGenerationModelOutputError.prompt.modify())()
{
  return nullsub_1;
}

void Session.PlanGenerationModelOutputError.errorDescription.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void Session.PlanGenerationModelOutputError.errorDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  sub_23F694C84();
}

uint64_t (*Session.PlanGenerationModelOutputError.errorDescription.modify())()
{
  return nullsub_1;
}

void __swiftcall Session.PlanGenerationModelOutputError.init(rawModelOutput:prompt:errorDescription:)(IntelligenceFlowPlannerSupport::Session::PlanGenerationModelOutputError *__return_ptr retstr, Swift::String rawModelOutput, Swift::String prompt, Swift::String errorDescription)
{
  retstr->rawModelOutput = rawModelOutput;
  retstr->prompt = prompt;
  retstr->errorDescription = errorDescription;
}

uint64_t sub_23F811148(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v7;

  v2 = a1 == 0x6C65646F4D776172 && a2 == 0xEE0074757074754FLL;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x74706D6F7270 && a2 == 0xE600000000000000;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x800000023FB349F0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = sub_23FB2FB78();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F8112B0(char a1)
{
  if (!a1)
    return 0x6C65646F4D776172;
  if (a1 == 1)
    return 0x74706D6F7270;
  return 0xD000000000000010;
}

uint64_t sub_23F811314()
{
  char *v0;

  return sub_23F8112B0(*v0);
}

uint64_t sub_23F81131C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F811148(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F811340()
{
  sub_23F83DA8C();
  return sub_23FB2FD10();
}

uint64_t sub_23F811368()
{
  sub_23F83DA8C();
  return sub_23FB2FD1C();
}

void Session.PlanGenerationModelOutputError.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  sub_23F6B5220();
  v4 = v3;
  sub_23F6916B8(&qword_256EAC210);
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F877C00();
  sub_23F876754(v4);
  sub_23F83DA8C();
  sub_23F876F84();
  sub_23F7D260C();
  sub_23FB2FADC();
  if (!v1)
  {
    sub_23F8789A4();
    sub_23F876828();
    sub_23F6B6224();
    sub_23F876828();
  }
  sub_23F6B563C(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23F876B60();
  sub_23F6B5100();
}

void Session.PlanGenerationModelOutputError.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_23F6B5220();
  sub_23F87733C();
  sub_23F6916B8(&qword_256EAC220);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B59E0();
  sub_23F70D508(v0);
  sub_23F83DA8C();
  sub_23F878788();
  sub_23F7A02FC();
  if (v1)
  {
    sub_23F6B6E68();
  }
  else
  {
    v6 = sub_23F87734C();
    v8 = v7;
    v18 = v6;
    sub_23F877ACC();
    v9 = sub_23F87734C();
    v11 = v10;
    v16 = v9;
    sub_23F877210();
    sub_23F6B54F8();
    v17 = v11;
    v12 = sub_23F879724();
    v14 = v13;
    v15 = v12;
    sub_23F6B563C(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    sub_23F6B90D8();
    sub_23F6B54F8();
    sub_23F717D54();
    *v2 = v18;
    v2[1] = v8;
    v2[2] = v16;
    v2[3] = v17;
    v2[4] = v15;
    v2[5] = v14;
    sub_23F876C80();
    sub_23F6B644C();
    swift_bridgeObjectRelease();
  }
  sub_23F876FC4();
  sub_23F6B5100();
}

void sub_23F811608()
{
  Session.PlanGenerationModelOutputError.init(from:)();
}

void sub_23F81161C()
{
  Session.PlanGenerationModelOutputError.encode(to:)();
}

uint64_t static SaltedLoggingIDScope.session(_:)()
{
  uint64_t v0;

  sub_23F8785D0();
  sub_23F87861C();
  if (v0)
    sub_23F6B54F8();
  else
    sub_23FB2C488();
  sub_23F878718();
  return sub_23F6B5A3C();
}

{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23F6F0920();
  type metadata accessor for Session.Transcript(v0);
  sub_23F87861C();
  if (v1)
    sub_23F6B54F8();
  else
    sub_23FB2C488();
  sub_23F878718();
  return sub_23F6B5A3C();
}

uint64_t SessionStart.initialLocaleSettings.setter(uint64_t a1)
{
  return sub_23F839B28(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE52660]);
}

uint64_t (*SessionStart.initialLocaleSettings.modify())()
{
  return nullsub_1;
}

uint64_t SessionStart.originatingDevice.getter()
{
  return sub_23F811704(type metadata accessor for SessionStart);
}

uint64_t sub_23F811704(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_23F6F08D8(a1);
  sub_23F8770FC();
  v1 = sub_23F70DC34();
  return sub_23F876AAC(v1, v2, v3, v4);
}

uint64_t SessionStart.originatingDevice.setter(uint64_t a1)
{
  return sub_23F811750(a1, type metadata accessor for SessionStart);
}

uint64_t sub_23F811750(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_23F876B7C(a1, a2);
  sub_23F8770FC();
  v2 = sub_23F6B68CC();
  return sub_23F876AAC(v2, v3, v4, v5);
}

uint64_t (*SessionStart.originatingDevice.modify())()
{
  sub_23F878EAC();
  sub_23F6F099C();
  return nullsub_1;
}

uint64_t SessionStart.originatingDeviceWasLocal.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SessionStart(0) + 24));
}

void SessionStart.originatingDeviceWasLocal.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(type metadata accessor for SessionStart(0) + 24)) = a1;
  sub_23F694CC8();
}

uint64_t (*SessionStart.originatingDeviceWasLocal.modify())()
{
  type metadata accessor for SessionStart(0);
  sub_23F6F09C4();
  return nullsub_1;
}

void SessionStart.init(initialLocaleSettings:originatingDevice:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;

  sub_23F6B50E8();
  v4 = v3;
  v6 = v5;
  sub_23F6F0920();
  sub_23FB2C908();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B5C2C();
  v8 = *(_QWORD *)(sub_23FB2C998() - 8);
  sub_23F77DD54(v0, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
  sub_23F878EAC();
  sub_23F87843C();
  sub_23F72E0C8(v0 + v9, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  sub_23FB2C8FC();
  v10 = sub_23FB2C8E4();
  v11 = *(void (**)(uint64_t))(v2 + 8);
  v12 = sub_23F78F478();
  v11(v12);
  sub_23F6B563C(v6, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  v13 = sub_23F878BD4();
  v11(v13);
  *(_BYTE *)(v0 + *(int *)(v1 + 24)) = v10 & 1;
  sub_23F693DDC();
}

void SessionStart.init(initialLocaleSettings:originatingDevice:originatingDeviceWasLocal:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  sub_23F876E44();
  v7 = sub_23FB2C998();
  sub_23F70D6B4(v7);
  type metadata accessor for SessionStart(0);
  sub_23F87813C();
  v8 = sub_23FB2C908();
  sub_23F7B0990(v5, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32));
  *(_BYTE *)(v4 + *(int *)(v3 + 24)) = a3;
  sub_23F6B5F7C();
}

void SessionStart.init(config:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  void (*v31)(uint64_t);
  uint64_t v32;

  sub_23F6B50E8();
  v7 = v6;
  v32 = v8;
  sub_23F6916B8(&qword_256EAC228);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F78F27C();
  v10 = sub_23FB2C908();
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B5C80();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F878D94();
  sub_23F6916B8(&qword_256EAB7F0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F70D7F8();
  v14 = sub_23FB2C998();
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B59E0();
  sub_23FB2D3E8();
  sub_23F6B5164(v4, 1, v14);
  if (v16)
  {
    sub_23FB2C98C();
    sub_23F7F6110(v4, &qword_256EAB7F0);
  }
  else
  {
    v17 = sub_23F77E608();
    sub_23F6B5EF0(v17, v18, v19);
  }
  sub_23FB2D3DC();
  sub_23F6B5164(v2, 1, v10);
  if (v16)
  {
    v20 = sub_23FB2C8FC();
    sub_23F879440(v20, &qword_256EAC228);
  }
  else
  {
    v21 = sub_23F6B7194();
    sub_23F72E0C8(v21, v22, v23);
  }
  sub_23F6B5EF0(v32, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16));
  v24 = sub_23F878EAC();
  sub_23F72E0C8(v32 + *(int *)(v24 + 20), v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  sub_23FB2C8FC();
  sub_23F6B6098();
  v25 = sub_23FB2C8E4();
  v26 = *(void (**)(uint64_t))(v5 + 8);
  v27 = sub_23F878BD4();
  v26(v27);
  v28 = sub_23F7A1280();
  v29(v28);
  v30 = sub_23F78F478();
  v26(v30);
  *(_BYTE *)(v32 + *(int *)(v24 + 24)) = v25 & 1;
  sub_23FB2D3F4();
  sub_23F877770();
  v31(v7);
  sub_23F693DDC();
}

uint64_t sub_23F811AF8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x800000023FB34A10 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023FB34A30 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000023FB34A50)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_23F811C34(char a1)
{
  if (!a1)
    return 0xD000000000000015;
  if (a1 == 1)
    return 0xD000000000000011;
  return 0xD000000000000019;
}

unint64_t sub_23F811C90()
{
  char *v0;

  return sub_23F811C34(*v0);
}

uint64_t sub_23F811C98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F811AF8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F811CBC()
{
  sub_23F83DAC8();
  return sub_23FB2FD10();
}

uint64_t sub_23F811CE4()
{
  sub_23F83DAC8();
  return sub_23FB2FD1C();
}

void SessionStart.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE v5[16];

  sub_23F6D3DC4();
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EAC230);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v5[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F70D4B8();
  sub_23F83DAC8();
  sub_23F6B63A4();
  sub_23F878390();
  sub_23FB2C998();
  sub_23F6B4EEC((uint64_t)&unk_256EAC240);
  sub_23F876660();
  if (!v0)
  {
    type metadata accessor for SessionStart(0);
    sub_23F876854();
    sub_23FB2C908();
    sub_23F6B4EEC((uint64_t)&unk_256EAC248);
    sub_23F70D4F0();
    v5[13] = 2;
    sub_23F877474();
  }
  sub_23F6B56E0((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F70D9D8();
  sub_23F6D3710();
}

void SessionStart.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_23F6B5220();
  v5 = v4;
  v24 = v6;
  v7 = sub_23FB2C908();
  v26 = *(_QWORD *)(v7 - 8);
  v27 = v7;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  v25 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6D398C();
  v28 = sub_23FB2C998();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5C10(v11, v21);
  v30 = sub_23F6916B8(&qword_256EAC250);
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23F70D7F8();
  v14 = type metadata accessor for SessionStart(v13);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6ADC98(v5, v5[3]);
  sub_23F83DAC8();
  v31 = v3;
  sub_23F877128();
  if (v1)
  {
    sub_23F878890();
  }
  else
  {
    v32 = v0;
    v22 = v14;
    v23 = v2;
    v19 = (uint64_t)v25;
    v18 = v26;
    sub_23F6B4EEC((uint64_t)&unk_256EAC258);
    sub_23F879160();
    sub_23F6B6E1C();
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v17, v29, v2);
    sub_23F6B6360();
    sub_23F6B4EEC((uint64_t)&unk_256EAC260);
    sub_23F877EEC();
    sub_23F6B6E1C();
    sub_23F6B633C((uint64_t)&v17[*(int *)(v22 + 20)], v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32));
    sub_23F87780C();
    v20 = sub_23FB2FA4C();
    sub_23F877D38();
    v17[*(int *)(v22 + 24)] = v20 & 1;
    sub_23F876818((uint64_t)v17, v24);
    sub_23F877780();
    sub_23F876820((uint64_t)v17);
  }
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23F8120B4()
{
  SessionStart.init(from:)();
}

void sub_23F8120C8()
{
  SessionStart.encode(to:)();
}

uint64_t (*Request.content.modify())()
{
  return nullsub_1;
}

void Request.safetyMode.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(type metadata accessor for Request(0) + 20)) = a1;
  sub_23F694CC8();
}

uint64_t (*Request.safetyMode.modify())()
{
  type metadata accessor for Request(0);
  sub_23F6F099C();
  return nullsub_1;
}

uint64_t Request.prescribedPlan.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v2 = v1 + *(int *)(sub_23F879744() + 24);
  v3 = *(_QWORD *)v2;
  v4 = *(_QWORD *)(v2 + 8);
  *(_QWORD *)v0 = *(_QWORD *)v2;
  *(_QWORD *)(v0 + 8) = v4;
  v5 = *(_BYTE *)(v2 + 16);
  *(_BYTE *)(v0 + 16) = v5;
  return sub_23F83C1AC(v3, v4, v5);
}

void Request.prescribedPlan.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  v5 = v1 + *(int *)(type metadata accessor for Request(0) + 24);
  sub_23F78942C(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_BYTE *)(v5 + 16));
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = v3;
  *(_BYTE *)(v5 + 16) = v4;
  sub_23F694C84();
}

uint64_t (*Request.prescribedPlan.modify())()
{
  type metadata accessor for Request(0);
  sub_23F6F09C4();
  return nullsub_1;
}

void Request.rewriteMetadataEventID.getter()
{
  sub_23F8121EC(type metadata accessor for Request);
}

void sub_23F8121EC(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = sub_23F6F08D8(a1);
  sub_23F877DD0(*(int *)(v1 + 28));
  sub_23F694C84();
}

void Request.rewriteMetadataEventID.setter(uint64_t a1)
{
  sub_23F812224(a1, type metadata accessor for Request);
}

void sub_23F812224(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F876B7C(a1, a2);
  sub_23F6F0A54();
  sub_23F840E4C(v3, v4, v2);
  sub_23F694C84();
}

uint64_t (*Request.rewriteMetadataEventID.modify())()
{
  sub_23F878EF8();
  sub_23F6F0A54();
  return nullsub_1;
}

uint64_t Request.rewriteMetadataInlined.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_23F879744();
  v1 = sub_23F878B94(*(int *)(v0 + 32));
  return sub_23F878638(v1, v2);
}

__n128 Request.rewriteMetadataInlined.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = v1 + *(int *)(type metadata accessor for Request(0) + 32);
  sub_23F87828C();
  *(_OWORD *)v3 = v5;
  *(_QWORD *)(v3 + 16) = v2;
  sub_23F6F5A08();
  return result;
}

uint64_t (*Request.rewriteMetadataInlined.modify())()
{
  type metadata accessor for Request(0);
  sub_23F6F0B5C();
  return nullsub_1;
}

void Request.init(query:safetyMode:statementId:clientQueryId:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;

  sub_23F6B50E8();
  v4 = v3;
  v25 = v5;
  v24 = v6;
  v8 = v7;
  v26 = v9;
  v10 = (int *)sub_23F878EF8();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B52B0();
  sub_23F6916B8(&qword_256EA2798);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F877BE4();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B53AC();
  sub_23F756640();
  type metadata accessor for RequestContent.TextContent(0);
  v14 = sub_23F6B58C8();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = sub_23F879688();
  v17(v16);
  *v1 = v8;
  v1[1] = v24;
  sub_23F6B69B8();
  swift_storeEnumTagMultiPayload();
  sub_23F72E034();
  sub_23F87731C(v2);
  v18 = v0 + v10[6];
  sub_23F87731C(v0 + v10[7]);
  v19 = (_QWORD *)(v0 + v10[8]);
  *v19 = 0;
  v19[1] = 0;
  v19[2] = 0;
  v20 = sub_23F72E2E0();
  sub_23F83A7A4(v20, v21, type metadata accessor for RequestContent);
  *(_BYTE *)(v0 + v10[5]) = v25;
  *(_QWORD *)v18 = 0;
  *(_QWORD *)(v18 + 8) = 0;
  *(_BYTE *)(v18 + 16) = -2;
  v22 = sub_23F8790C8();
  sub_23F840E4C(v22, v23, &qword_256EA2798);
  sub_23F87828C();
  *v19 = 0;
  v19[1] = 0;
  v19[2] = 0;
  sub_23F83A7A4(v0, v26, type metadata accessor for Request);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v4, v14);
  sub_23F693DDC();
}

void Request.init(speechCandidates:safetyMode:clientQueryId:)()
{
  uint64_t v0;
  _QWORD *v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  sub_23F6B50E8();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  sub_23F6916B8(&qword_256EA2798);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23F6B5864();
  type metadata accessor for RequestContent(v9);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5268();
  sub_23F6B644C();
  *v1 = v5;
  sub_23F878D40();
  sub_23F72E034();
  sub_23F87732C(v0);
  v11 = (int *)sub_23F878EF8();
  v12 = v7 + v11[6];
  sub_23F87732C(v7 + v11[7]);
  v13 = (uint64_t *)(v7 + v11[8]);
  *v13 = 0;
  v13[1] = 0;
  v13[2] = 0;
  sub_23F83A7A4((uint64_t)v1, v7, type metadata accessor for RequestContent);
  *(_BYTE *)(v7 + v11[5]) = v3;
  *(_QWORD *)v12 = 0;
  *(_QWORD *)(v12 + 8) = 0;
  *(_BYTE *)(v12 + 16) = -2;
  v14 = sub_23F878B40();
  sub_23F840E4C(v14, v15, &qword_256EA2798);
  sub_23F77D90C(*v13, v13[1]);
  *v13 = 0;
  v13[1] = 0;
  v13[2] = 0;
  sub_23F693DDC();
}

void static RequestContent.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD v16[2];

  sub_23F6B50E8();
  v2 = v1;
  v4 = v3;
  type metadata accessor for RequestContent.SystemPromptResolution(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_23F6B5864();
  v16[0] = type metadata accessor for RequestContent.TextContent(v6);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  v16[1] = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RequestContent(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F876AD4();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6D3BD8();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F878D94();
  sub_23F6916B8(&qword_256EAC268);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F7A0184();
  v14 = v0 + v13;
  sub_23F83A800(v4, v0, type metadata accessor for RequestContent);
  sub_23F83A800(v2, v14, type metadata accessor for RequestContent);
  sub_23F7D2F98();
  v15 = (char *)sub_23F8126C0 + 4 * byte_23FB63306[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23F8126C0()
{
  uint64_t v0;

  v0 = sub_23F877A7C();
  if ((_DWORD)v0)
    sub_23F876B14(v0, &qword_256EAC268);
  else
    sub_23F876A50(v0, type metadata accessor for RequestContent);
  sub_23F6B5694();
  sub_23F693DDC();
}

uint64_t sub_23F812858(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v8;

  v2 = a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6F4D797465666173 && a2 == 0xEA00000000006564;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6269726373657270 && a2 == 0xEE006E616C506465;
      if (v7 || (sub_23FB2FB78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000016 && a2 == 0x800000023FB34A70 || (sub_23FB2FB78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000016 && a2 == 0x800000023FB34A90)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v8 = sub_23FB2FB78();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 4;
        else
          return 5;
      }
    }
  }
}

uint64_t sub_23F812A90(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F812AC4 + 4 * byte_23FB6330A[a1]))(0x746E65746E6F63, 0xE700000000000000);
}

uint64_t sub_23F812AC4()
{
  return 0x6F4D797465666173;
}

uint64_t sub_23F812AE0()
{
  return 0x6269726373657270;
}

unint64_t sub_23F812B04()
{
  return 0xD000000000000016;
}

uint64_t sub_23F812B2C()
{
  unsigned __int8 *v0;

  return sub_23F812A90(*v0);
}

uint64_t sub_23F812B34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F812858(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F812B58()
{
  sub_23F83DB04();
  return sub_23FB2FD10();
}

uint64_t sub_23F812B80()
{
  sub_23F83DB04();
  return sub_23FB2FD1C();
}

void Request.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 *v7;
  char v8;
  char v9;
  __int128 *v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char v14;

  sub_23F6D3DC4();
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EAC270);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F70D4B8();
  sub_23F83DB04();
  sub_23F6B63A4();
  LOBYTE(v12) = 0;
  type metadata accessor for RequestContent(0);
  sub_23F6B4EEC((uint64_t)&unk_256EAC280);
  sub_23F70D4F0();
  if (!v0)
  {
    type metadata accessor for Request(0);
    sub_23F87843C();
    LOBYTE(v12) = 1;
    sub_23F877474();
    v7 = (__int128 *)(v1 + *(int *)(v2 + 24));
    v8 = *((_BYTE *)v7 + 16);
    v12 = *v7;
    LOBYTE(v13) = v8;
    sub_23F879578();
    sub_23F83DB40();
    sub_23F876834();
    sub_23F8788A8();
    LOBYTE(v12) = v9;
    sub_23F72E034();
    sub_23F6B4EEC((uint64_t)&qword_256EA6620);
    sub_23F876834();
    v10 = (__int128 *)(v1 + *(int *)(v2 + 32));
    v11 = *((_QWORD *)v10 + 2);
    v12 = *v10;
    v13 = v11;
    v14 = 4;
    sub_23F83C454();
    sub_23F876834();
  }
  sub_23F6B56E0((uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23F70D9D8();
  sub_23F6D3710();
}

void Request.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  __int128 v26;
  uint64_t v27;

  sub_23F6B5220();
  v6 = v5;
  v22 = v7;
  sub_23F6916B8(&qword_256EA2798);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  v10 = sub_23F877164(v9, v20);
  type metadata accessor for RequestContent(v10);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B57A0(v12, v21);
  sub_23F6916B8(&qword_256EAC290);
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v13);
  v14 = sub_23F77DB24();
  v15 = type metadata accessor for Request(v14);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F87808C();
  *(_QWORD *)v2 = 0;
  *(_QWORD *)(v2 + 8) = 0;
  *(_BYTE *)(v2 + 16) = -2;
  v18 = v3 + *(int *)(v17 + 28);
  sub_23F72E034();
  sub_23F878A28(v18);
  v19 = (_QWORD *)(v3 + *(int *)(v15 + 32));
  *v19 = 0;
  v19[1] = 0;
  v25 = v19;
  v19[2] = 0;
  sub_23F87735C(v6);
  sub_23F83DB04();
  sub_23F878958();
  sub_23F8783C8();
  if (v0)
  {
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v6);
    sub_23F78942C(*(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(_BYTE *)(v2 + 16));
    sub_23F7F6110(v18, &qword_256EA2798);
    sub_23F877D88();
  }
  else
  {
    sub_23F6B4EEC((uint64_t)&unk_256EAC298);
    sub_23F8769F0();
    sub_23F83A7A4(v24, v3, type metadata accessor for RequestContent);
    LOBYTE(v26) = 1;
    *(_BYTE *)(v3 + *(int *)(v15 + 20)) = sub_23FB2FA4C() & 1;
    sub_23F879578();
    sub_23F83DB7C();
    sub_23F878AA4();
    *(_OWORD *)v2 = v26;
    *(_BYTE *)(v2 + 16) = v27;
    LOBYTE(v26) = 3;
    sub_23F6B4EEC((uint64_t)&qword_256EA6700);
    sub_23F878AA4();
    sub_23F840E4C(v23, v18, &qword_256EA2798);
    sub_23F83D138();
    sub_23F878AA4();
    sub_23F6B5900(v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    sub_23F877D88();
    *(_OWORD *)v25 = v26;
    v25[2] = v27;
    sub_23F876818(v3, v22);
    sub_23F878434();
    sub_23F876820(v3);
  }
  sub_23F876FC4();
  sub_23F6B5100();
}

void sub_23F8130AC()
{
  Request.init(from:)();
}

void sub_23F8130C0()
{
  Request.encode(to:)();
}

void static RequestContent.TextContent.== infix(_:_:)(uint64_t a1)
{
  sub_23F82C6E8(a1);
}

void static RequestContent.SpeechContent.== infix(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_23F6986A4(*a1, *a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_23F8130F4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v8;

  v2 = a1 == 1886352499 && a2 == 0xE400000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1954047348 && a2 == 0xE400000000000000;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x686365657073 && a2 == 0xE600000000000000;
      if (v7 || (sub_23FB2FB78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000010 && a2 == 0x800000023FB34AB0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = sub_23FB2FB78();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_23F813280(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F8132AC + 4 * byte_23FB6330F[a1]))(1886352499, 0xE400000000000000);
}

uint64_t sub_23F8132AC()
{
  return 1954047348;
}

uint64_t sub_23F8132B8()
{
  return 0x686365657073;
}

unint64_t sub_23F8132CC()
{
  return 0xD000000000000010;
}

uint64_t sub_23F8132E8()
{
  unsigned __int8 *v0;

  return sub_23F813280(*v0);
}

uint64_t sub_23F8132F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F8130F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F813314()
{
  sub_23F83DBB8();
  return sub_23FB2FD10();
}

uint64_t sub_23F81333C()
{
  sub_23F83DBB8();
  return sub_23FB2FD1C();
}

uint64_t sub_23F813364()
{
  sub_23F83DBF4();
  return sub_23FB2FD10();
}

uint64_t sub_23F81338C()
{
  sub_23F83DBF4();
  return sub_23FB2FD1C();
}

uint64_t sub_23F8133B4()
{
  sub_23F83DC30();
  return sub_23FB2FD10();
}

uint64_t sub_23F8133DC()
{
  sub_23F83DC30();
  return sub_23FB2FD1C();
}

uint64_t sub_23F813404()
{
  sub_23F83DCE4();
  return sub_23FB2FD10();
}

uint64_t sub_23F81342C()
{
  sub_23F83DCE4();
  return sub_23FB2FD1C();
}

uint64_t sub_23F813454()
{
  sub_23F83DCA8();
  return sub_23FB2FD10();
}

uint64_t sub_23F81347C()
{
  sub_23F83DCA8();
  return sub_23FB2FD1C();
}

void RequestContent.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19[18];

  sub_23F6B5220();
  v1 = sub_23F6916B8(&qword_256EAC2A8);
  v19[11] = *(_QWORD *)(v1 - 8);
  v19[12] = v1;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v2);
  v19[10] = (uint64_t)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[8] = sub_23F878EB4();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B5598(v5, v19[0]);
  v6 = sub_23F6916B8(&qword_256EAC2B0);
  v19[6] = *(_QWORD *)(v6 - 8);
  v19[7] = v6;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B582C(v8, v19[0]);
  v9 = sub_23F6916B8(&qword_256EAC2B8);
  v19[3] = *(_QWORD *)(v9 - 8);
  v19[4] = v9;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v19[2] = (uint64_t)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = sub_23F878E94();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B53AC();
  v19[0] = *(_QWORD *)(sub_23F6916B8(&qword_256EAC2C0) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  v14 = sub_23F78F27C();
  type metadata accessor for RequestContent(v14);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B573C();
  v16 = sub_23F6916B8(&qword_256EAC2C8);
  v19[13] = *(_QWORD *)(v16 - 8);
  v19[14] = v16;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F693EB0();
  sub_23F8797E0();
  sub_23F87902C();
  sub_23FB2FCC8();
  sub_23F83A800(v19[16], v0, type metadata accessor for RequestContent);
  sub_23F8783E8();
  v18 = (char *)sub_23F813674 + 4 * byte_23FB63313[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23F813674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  *(_BYTE *)(v1 - 68) = 0;
  sub_23F83DCE4();
  sub_23F6B5610();
  sub_23F83DD20();
  sub_23FB2FB18();
  sub_23F6B5900(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 224) + 8));
  v2 = sub_23F7D2958();
  v3(v2);
  sub_23F8778A8();
  sub_23F6B5100();
}

void RequestContent.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_23F6B5220();
  sub_23F8799E4(v3);
  sub_23F6916B8(&qword_256EAC310);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B5810(v5, v32);
  sub_23F6916B8(&qword_256EAC318);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B5404(v7, v33);
  sub_23F6916B8(&qword_256EAC320);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B57A0(v9, v34);
  sub_23F6916B8(&qword_256EAC328);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B582C(v11, v35);
  sub_23F6916B8(&qword_256EAC330);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23F70D7F8();
  v36 = type metadata accessor for RequestContent(v13);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F876D18();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F72E168();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F876AD4();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B6B3C();
  v19 = *(uint64_t **)(v0 + 32);
  sub_23F8797E0();
  sub_23F877128();
  if (!v1)
  {
    sub_23FB2FA94();
    sub_23F878164();
    if (v20)
    {
      v21 = *(unsigned __int8 *)(v2 + 32);
      v22 = sub_23F70D968();
      sub_23F6B4E44(v22, v23, v24, v25, v26, v27);
      sub_23F877084();
      sub_23F8795C4();
      if (v28)
        __asm { BR              X9 }
    }
    v29 = sub_23F6B6334();
    sub_23F6B5AD4();
    sub_23F8783F4();
    sub_23F6916B8(&qword_256EA1870);
    sub_23F878828();
    *v19 = v36;
    sub_23FB2FA04();
    sub_23F6B56B8();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v19, *MEMORY[0x24BEE26D0], v29);
    sub_23F87774C();
    sub_23F6B5770();
    v30 = sub_23F6B6854();
    v31(v30);
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v0);
  sub_23F77DB18();
  sub_23F6B5100();
}

void sub_23F813E90()
{
  RequestContent.init(from:)();
}

void sub_23F813EA4()
{
  RequestContent.encode(to:)();
}

uint64_t sub_23F813EBC()
{
  sub_23F83DDD4();
  return sub_23FB2FD10();
}

uint64_t sub_23F813EE4()
{
  sub_23F83DDD4();
  return sub_23FB2FD1C();
}

void RequestContent.StopContent.encode(to:)()
{
  sub_23F83A4FC();
}

void RequestContent.StopContent.init(from:)(uint64_t a1)
{
  sub_23F878C68(a1);
  sub_23F878AAC();
}

void sub_23F813F50(uint64_t a1)
{
  RequestContent.StopContent.init(from:)(a1);
}

void sub_23F813F64()
{
  RequestContent.StopContent.encode(to:)();
}

uint64_t (*RequestContent.TextContent.text.modify())()
{
  return nullsub_1;
}

uint64_t RequestContent.TextContent.statementId.getter()
{
  return sub_23F811704(type metadata accessor for RequestContent.TextContent);
}

uint64_t sub_23F813F9C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 1954047348 && a2 == 0xE400000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F814090(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E656D6574617473;
  else
    return 1954047348;
}

uint64_t sub_23F8140C8()
{
  char *v0;

  return sub_23F814090(*v0);
}

uint64_t sub_23F8140D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F813F9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F8140F4()
{
  sub_23F83DE10();
  return sub_23FB2FD10();
}

uint64_t sub_23F81411C()
{
  sub_23F83DE10();
  return sub_23FB2FD1C();
}

void RequestContent.TextContent.encode(to:)()
{
  sub_23F82C940();
}

void RequestContent.TextContent.init(from:)()
{
  sub_23F82CA8C();
}

void sub_23F8141AC()
{
  RequestContent.TextContent.init(from:)();
}

void sub_23F8141C0()
{
  RequestContent.TextContent.encode(to:)();
}

uint64_t (*RequestContent.SpeechContent.candidates.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F8141EC()
{
  sub_23F83DE4C();
  return sub_23FB2FD10();
}

uint64_t sub_23F814214()
{
  sub_23F83DE4C();
  return sub_23FB2FD1C();
}

void RequestContent.SpeechContent.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;

  sub_23F6B5220();
  a19 = v23;
  a20 = v24;
  sub_23F878C5C();
  sub_23F6916B8(&qword_256EAC378);
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *v20;
  sub_23F70D508(v21);
  sub_23F83DE4C();
  sub_23F6F33A0();
  a10 = v28;
  sub_23F6916B8(&qword_256EAB790);
  sub_23F8799C0();
  sub_23F87693C();
  sub_23F6B530C((uint64_t)v27, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  sub_23F77DB18();
  sub_23F6B5100();
}

void RequestContent.SpeechContent.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F6B5220();
  sub_23F877118();
  sub_23F6916B8(&qword_256EAC398);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F876754(v0);
  sub_23F83DE4C();
  sub_23F75B598();
  if (!v1)
  {
    sub_23F6916B8(&qword_256EAB790);
    sub_23F83DF04();
    sub_23F6B6E1C();
    sub_23F6F1CB8(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    sub_23F878D14();
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v0);
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23F8143B0()
{
  RequestContent.SpeechContent.init(from:)();
}

#error "23F8143CC: call analysis failed (funcsize=5)"

void RequestContent.SystemPromptResolution.actionEventId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23F6F0D58();
  sub_23F7DCCDC(v0, v1, &qword_256EA2798);
}

void RequestContent.SystemPromptResolution.actionEventId.setter(uint64_t a1)
{
  uint64_t v1;

  sub_23F840E4C(a1, v1, &qword_256EA2798);
}

uint64_t (*RequestContent.SystemPromptResolution.actionEventId.modify())()
{
  return nullsub_1;
}

uint64_t RequestContent.SystemPromptResolution.systemResponseEventId.getter()
{
  return sub_23F811704(type metadata accessor for RequestContent.SystemPromptResolution);
}

uint64_t RequestContent.SystemPromptResolution.systemResponseEventId.setter(uint64_t a1)
{
  return sub_23F811750(a1, type metadata accessor for RequestContent.SystemPromptResolution);
}

uint64_t (*RequestContent.SystemPromptResolution.systemResponseEventId.modify())()
{
  sub_23F87798C();
  sub_23F6F099C();
  return nullsub_1;
}

void RequestContent.SystemPromptResolution.userAction.getter()
{
  sub_23F826FB4(type metadata accessor for RequestContent.SystemPromptResolution);
}

void RequestContent.SystemPromptResolution.userAction.setter(uint64_t a1)
{
  sub_23F826FEC(a1, type metadata accessor for RequestContent.SystemPromptResolution);
}

uint64_t (*RequestContent.SystemPromptResolution.userAction.modify())()
{
  sub_23F87798C();
  sub_23F6F09C4();
  return nullsub_1;
}

uint64_t RequestContent.SystemPromptResolution.statementId.getter()
{
  return sub_23F827D50();
}

uint64_t RequestContent.SystemPromptResolution.statementId.setter(uint64_t a1)
{
  return sub_23F827D98(a1, type metadata accessor for RequestContent.SystemPromptResolution);
}

uint64_t (*RequestContent.SystemPromptResolution.statementId.modify())()
{
  sub_23F87798C();
  sub_23F6F0A54();
  return nullsub_1;
}

void RequestContent.SystemPromptResolution.input.getter(uint64_t a1@<X8>)
{
  sub_23F814510((uint64_t)type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput, (void (*)(uint64_t, uint64_t, uint64_t))sub_23F83A800, a1);
}

void sub_23F814510(uint64_t a1@<X1>, void (*a2)(uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;

  v7 = sub_23F8772B8();
  a2(v3 + *(int *)(v7 + 32), a3, a1);
  sub_23F694C84();
}

void RequestContent.SystemPromptResolution.input.setter(uint64_t a1)
{
  sub_23F81456C(a1, type metadata accessor for RequestContent.SystemPromptResolution, (uint64_t)type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput, (void (*)(uint64_t))sub_23F83B7F8);
}

void sub_23F81456C(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3, void (*a4)(uint64_t))
{
  sub_23F6F0918(a1, a2);
  sub_23F6F0B5C();
  a4(a1);
  sub_23F694C84();
}

uint64_t (*RequestContent.SystemPromptResolution.input.modify())()
{
  sub_23F87798C();
  sub_23F6F0B5C();
  return nullsub_1;
}

void RequestContent.SystemPromptResolution.ResolutionInput.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  char *v5;
  uint64_t v6;

  type metadata accessor for RequestContent.TextContent(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_23F7A00C8();
  type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(v1);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F877828(v3, v4, v6);
  v5 = (char *)sub_23F81465C + 4 * byte_23FB6331B[sub_23F7A02B4()];
  __asm { BR              X10 }
}

void sub_23F81465C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);

  v0 = sub_23F7D2958();
  sub_23F83A7A4(v0, v1, type metadata accessor for RequestContent.TextContent);
  sub_23F876BC8();
  sub_23FB2F254();
  sub_23FB2F8FC();
  sub_23F8767CC();
  v2 = sub_23F7D2F98();
  sub_23F83A7D4(v2, v3);
  sub_23F6B6AB8();
  sub_23F6B5F7C();
}

uint64_t static RequestContent.SystemPromptResolution.ResolutionInput.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_23F6B50E8();
  type metadata accessor for RequestContent.TextContent(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23F77E1CC();
  type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(v13);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F878DA4();
  sub_23F6916B8(&qword_256EAC3B0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v16);
  v17 = sub_23F877848();
  sub_23F8778CC(v17, v18);
  v19 = sub_23F7B0BC4();
  sub_23F8778CC(v19, v20);
  v21 = sub_23F714010();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)sub_23F81480C + 4 * byte_23FB6331F[v21]))(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10, a11, a12);
}

void sub_23F81480C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  BOOL v9;
  uint64_t v10;

  sub_23F876B04(v2, a2, type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput);
  if (sub_23F714010())
  {
    sub_23F83A7D4((uint64_t)v4, type metadata accessor for RequestContent.TextContent);
    sub_23F876B14(v5, &qword_256EAC3B0);
  }
  else
  {
    v6 = sub_23F6B69B8();
    sub_23F83A7A4(v6, v7, v8);
    v9 = *v4 == *v3 && v4[1] == v3[1];
    if (v9 || (sub_23F6B5280() & 1) != 0)
      _s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0();
    sub_23F87715C((uint64_t)v3);
    sub_23F87715C((uint64_t)v4);
    sub_23F876A50(v10, type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput);
  }
  sub_23F6B5694();
  sub_23F693DDC();
}

uint64_t sub_23F81495C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x6863756F74 && a2 == 0xE500000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7473654764616568 && a2 == 0xEB00000000657275;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 1954047348 && a2 == 0xE400000000000000;
      if (v7 || (sub_23FB2FB78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x686365657073 && a2 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_23FB2FB78();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_23F814B00(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F814B30 + 4 * byte_23FB63323[a1]))(0x6863756F74, 0xE500000000000000);
}

uint64_t sub_23F814B30()
{
  return 0x7473654764616568;
}

uint64_t sub_23F814B50()
{
  return 1954047348;
}

uint64_t sub_23F814B60()
{
  return 0x686365657073;
}

uint64_t sub_23F814B74()
{
  unsigned __int8 *v0;

  return sub_23F814B00(*v0);
}

uint64_t sub_23F814B7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F81495C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F814BA0()
{
  sub_23F83DF80();
  return sub_23FB2FD10();
}

uint64_t sub_23F814BC8()
{
  sub_23F83DF80();
  return sub_23FB2FD1C();
}

uint64_t sub_23F814BF0()
{
  sub_23F83E034();
  return sub_23FB2FD10();
}

uint64_t sub_23F814C18()
{
  sub_23F83E034();
  return sub_23FB2FD1C();
}

uint64_t sub_23F814C40()
{
  sub_23F83DFBC();
  return sub_23FB2FD10();
}

uint64_t sub_23F814C68()
{
  sub_23F83DFBC();
  return sub_23FB2FD1C();
}

uint64_t sub_23F814C90()
{
  sub_23F83DFF8();
  return sub_23FB2FD10();
}

uint64_t sub_23F814CB8()
{
  sub_23F83DFF8();
  return sub_23FB2FD1C();
}

uint64_t sub_23F814CE0()
{
  sub_23F83E070();
  return sub_23FB2FD10();
}

uint64_t sub_23F814D08()
{
  sub_23F83E070();
  return sub_23FB2FD1C();
}

void RequestContent.SystemPromptResolution.ResolutionInput.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_23F6B5220();
  v20 = v0;
  v3 = v2;
  sub_23F6916B8(&qword_256EAC3B8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B5404(v5, v17);
  sub_23F6916B8(&qword_256EAC3C0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  v8 = sub_23F877164(v7, v18);
  v19 = type metadata accessor for RequestContent.TextContent(v8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B5560(v10, v19);
  sub_23F6916B8(&qword_256EAC3C8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B59E0();
  sub_23F6916B8(&qword_256EAC3D0);
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23F6B51D0();
  type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(v13);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B5268();
  sub_23F6916B8(&qword_256EAC3D8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B5208();
  sub_23F876BD8(v3);
  sub_23F83DF80();
  sub_23F879040();
  sub_23F83A800(v20, v1, type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput);
  sub_23F8795B8();
  v16 = (char *)sub_23F814EB8 + 4 * byte_23FB63327[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23F814EB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 - 200);
  sub_23F877BA4(v0);
  sub_23F879554();
  v3 = *(_QWORD *)(v1 - 192);
  sub_23F6B54D4();
  sub_23F70D58C((uint64_t)&unk_256EAC2F8);
  sub_23F879154();
  sub_23F8771A4();
  sub_23F6B51EC(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 184) + 8));
  sub_23F877068(v2);
  sub_23F7B0A0C(*(_QWORD *)(v1 - 120));
  sub_23F8778A8();
  sub_23F6B5100();
}

void RequestContent.SystemPromptResolution.ResolutionInput.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t);
  uint64_t v38[11];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;

  sub_23F6B5220();
  v5 = v4;
  v43 = v6;
  v7 = sub_23F6916B8(&qword_256EAC408);
  v38[9] = *(_QWORD *)(v7 - 8);
  v38[10] = v7;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5810(v9, v38[0]);
  v10 = sub_23F6916B8(&qword_256EAC410);
  v38[7] = *(_QWORD *)(v10 - 8);
  v38[8] = v10;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B5404(v12, v38[0]);
  v13 = sub_23F6916B8(&qword_256EAC418);
  v40 = *(_QWORD *)(v13 - 8);
  v41 = v13;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B57A0(v15, v38[0]);
  v39 = sub_23F6916B8(&qword_256EAC420);
  v38[6] = *(_QWORD *)(v39 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B582C(v17, v38[0]);
  sub_23F6916B8(&qword_256EAC428);
  sub_23F7F68B0();
  v42 = v18;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v19);
  v20 = sub_23F70D7F8();
  v21 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(v20);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6B5C80();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F876BF0();
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)v38 - v25;
  v44 = v5;
  sub_23F70D508(v5);
  sub_23F83DF80();
  sub_23F877870();
  if (!v0)
  {
    v38[2] = v1;
    v38[3] = v3;
    v38[4] = (uint64_t)v26;
    v27 = sub_23F879414();
    if (*(_QWORD *)(v27 + 16))
    {
      v38[5] = v2;
      v38[1] = 0;
      sub_23F8794C8();
      v1 = *(unsigned __int8 *)(v27 + 32);
      sub_23F6B4E44(1, v28, v27, v27 + 32, 0, v29);
      v31 = v30;
      v33 = v32;
      sub_23F6B6A48();
      v34 = v21;
      if (v31 == v33 >> 1)
        __asm { BR              X9 }
    }
    else
    {
      v34 = v21;
    }
    sub_23F6B6334();
    sub_23F6B5AD4();
    sub_23F8783F4();
    sub_23F6916B8(&qword_256EA1870);
    *(_QWORD *)v1 = v34;
    sub_23F879060();
    v35 = sub_23F6B56B8();
    sub_23F6B5DAC(v35, *MEMORY[0x24BEE26D0]);
    sub_23F87774C();
    sub_23F8772DC();
    v36 = sub_23F87770C();
    v37(v36);
  }
  sub_23F877354();
  sub_23F877A30();
  sub_23F6B5100();
}

void sub_23F815328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F879354();
  v3 = *(_QWORD *)(v2 - 176);
  v4 = *(_QWORD *)(v2 - 104);
  sub_23F876B8C();
  if (v0)
  {
    sub_23F8772DC();
    sub_23F7D243C();
    JUMPOUT(0x23F815314);
  }
  sub_23F6B530C(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F8772DC();
  sub_23F6B56E0(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 128) + 8));
  JUMPOUT(0x23F8154C4);
}

void sub_23F8155A4()
{
  RequestContent.SystemPromptResolution.ResolutionInput.init(from:)();
}

void sub_23F8155B8()
{
  RequestContent.SystemPromptResolution.ResolutionInput.encode(to:)();
}

void RequestContent.SystemPromptResolution.UserAction.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  char *v5;
  uint64_t v6;

  sub_23F6B6634();
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_23F876970();
  type metadata accessor for RequestContent.SystemPromptResolution.UserAction(v1);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F877828(v3, v4, v6);
  v5 = (char *)sub_23F815674 + 4 * byte_23FB6332F[sub_23F7A02B4()];
  __asm { BR              X10 }
}

void sub_23F815674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F876BC8();
  sub_23FB2F7AC();
  sub_23F87899C();
  sub_23F8798B8();
  *(_QWORD *)(v0 - 64) = v2;
  *(_QWORD *)(v0 - 56) = v1;
  sub_23FB2F254();
  sub_23F693E04();
  sub_23F8767CC();
  sub_23F6B619C();
  sub_23F6B5F7C();
}

void sub_23F815844()
{
  JUMPOUT(0x23F815834);
}

void static RequestContent.SystemPromptResolution.UserAction.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD v16[3];
  uint64_t v17;

  sub_23F6B50E8();
  v17 = v1;
  v2 = sub_23F6B6634();
  v16[1] = *(_QWORD *)(v2 - 8);
  v16[2] = v2;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v3);
  v16[0] = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F6D398C();
  type metadata accessor for RequestContent.SystemPromptResolution.UserAction(v5);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F876AD4();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F876BF0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6D3BD8();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F876D18();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F70DD48();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B5F6C();
  sub_23F6916B8(&qword_256EAC430);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F8780CC();
  v13 = sub_23F878320();
  sub_23F83A800(v13, v14, type metadata accessor for RequestContent.SystemPromptResolution.UserAction);
  sub_23F83A800(v17, v0, type metadata accessor for RequestContent.SystemPromptResolution.UserAction);
  v15 = (char *)sub_23F8159A8 + 4 * byte_23FB63337[sub_23F876E58()];
  __asm { BR              X10 }
}

void sub_23F8159A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;

  v0 = sub_23F7D2F98();
  sub_23F83A800(v0, v1, v2);
  v3 = sub_23F8769F8();
  if ((_DWORD)v3)
    sub_23F876B14(v3, &qword_256EAC430);
  else
    sub_23F876A50(v3, type metadata accessor for RequestContent.SystemPromptResolution.UserAction);
  sub_23F6B5694();
  sub_23F693DDC();
}

uint64_t sub_23F815B34(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6F436E6F69746361 && a2 == 0xEF64656D7269666ELL;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6E55656369766564 && a2 == 0xEE0064656B636F6CLL;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000016 && a2 == 0x800000023FB34AD0 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x800000023FB34AF0 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD000000000000015 && a2 == 0x800000023FB34B10 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023FB34B30 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else if (a1 == 0xD000000000000014 && a2 == 0x800000023FB34B50 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 6;
    }
    else if (a1 == 0x61436E6F69746361 && a2 == 0xEE0064656C65636ELL)
    {
      swift_bridgeObjectRelease();
      return 7;
    }
    else
    {
      v8 = sub_23FB2FB78();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 7;
      else
        return 8;
    }
  }
}

uint64_t sub_23F815EAC()
{
  return 8;
}

uint64_t sub_23F815EB4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F815EF4 + 4 * byte_23FB6333F[a1]))(0x6F436E6F69746361, 0xEF64656D7269666ELL);
}

uint64_t sub_23F815EF4()
{
  return 0x6E55656369766564;
}

unint64_t sub_23F815F18()
{
  return 0xD000000000000016;
}

uint64_t sub_23F815FA0()
{
  return 0x61436E6F69746361;
}

uint64_t sub_23F815FC4()
{
  sub_23F83E0E8();
  return sub_23FB2FD10();
}

uint64_t sub_23F815FEC()
{
  sub_23F83E0E8();
  return sub_23FB2FD1C();
}

uint64_t sub_23F816014()
{
  sub_23F83E304();
  return sub_23FB2FD10();
}

uint64_t sub_23F81603C()
{
  sub_23F83E304();
  return sub_23FB2FD1C();
}

uint64_t sub_23F816064()
{
  unsigned __int8 *v0;

  return sub_23F815EB4(*v0);
}

uint64_t sub_23F81606C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F815B34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F816090@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F815EAC();
  *a1 = result;
  return result;
}

uint64_t sub_23F8160B4()
{
  sub_23F83E0AC();
  return sub_23FB2FD10();
}

uint64_t sub_23F8160DC()
{
  sub_23F83E0AC();
  return sub_23FB2FD1C();
}

uint64_t sub_23F816104()
{
  sub_23F83E2C8();
  return sub_23FB2FD10();
}

uint64_t sub_23F81612C()
{
  sub_23F83E2C8();
  return sub_23FB2FD1C();
}

uint64_t sub_23F816154()
{
  sub_23F83E1D8();
  return sub_23FB2FD10();
}

uint64_t sub_23F81617C()
{
  sub_23F83E1D8();
  return sub_23FB2FD1C();
}

uint64_t sub_23F8161A4()
{
  sub_23F83E250();
  return sub_23FB2FD10();
}

uint64_t sub_23F8161CC()
{
  sub_23F83E250();
  return sub_23FB2FD1C();
}

uint64_t sub_23F8161F4()
{
  sub_23F83E214();
  return sub_23FB2FD10();
}

uint64_t sub_23F81621C()
{
  sub_23F83E214();
  return sub_23FB2FD1C();
}

uint64_t sub_23F816244()
{
  sub_23F83E28C();
  return sub_23FB2FD10();
}

uint64_t sub_23F81626C()
{
  sub_23F83E28C();
  return sub_23FB2FD1C();
}

uint64_t sub_23F816294()
{
  sub_23F83E160();
  return sub_23FB2FD10();
}

uint64_t sub_23F8162BC()
{
  sub_23F83E160();
  return sub_23FB2FD1C();
}

void RequestContent.SystemPromptResolution.UserAction.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54[11];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  sub_23F6B5220();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v25 = sub_23F6916B8(&qword_256EAC438);
  v62 = *(_QWORD *)(v25 - 8);
  v63 = v25;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F6B5810(v27, v54[0]);
  v28 = sub_23F6916B8(&qword_256EAC440);
  v60 = *(_QWORD *)(v28 - 8);
  v61 = v28;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F6B582C(v30, v54[0]);
  v31 = sub_23F6916B8(&qword_256EAC448);
  v58 = *(_QWORD *)(v31 - 8);
  v59 = v31;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F6B5848(v33, v54[0]);
  v34 = sub_23F6916B8(&qword_256EAC450);
  v56 = *(_QWORD *)(v34 - 8);
  v57 = v34;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F6B57D8(v36, v54[0]);
  v55 = sub_23F6916B8(&qword_256EAC458);
  sub_23F8789BC(*(_QWORD *)(v55 - 8));
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F6B5314((uint64_t)v54 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  v39 = sub_23F6916B8(&qword_256EAC460);
  sub_23F8793EC(v39);
  v54[10] = v40;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F70D434((uint64_t)v54 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  v43 = sub_23FB2ED38();
  sub_23F6B53F8(v43, (uint64_t)&a18);
  v54[6] = v44;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F6B5314((uint64_t)v54 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  v47 = sub_23F6916B8(&qword_256EAC468);
  sub_23F6B53F8(v47, (uint64_t)&a12);
  v54[2] = v48;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v49);
  sub_23F6B5298();
  v54[1] = *(_QWORD *)(sub_23F6916B8(&qword_256EAC470) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v50);
  sub_23F877C80();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v51);
  sub_23F6B52B0();
  v65 = sub_23F6916B8(&qword_256EAC478);
  v64 = *(_QWORD *)(v65 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v52);
  sub_23F6B53AC();
  sub_23F876BD8(v24);
  sub_23F83E0AC();
  sub_23F8787A0();
  sub_23F878C30();
  sub_23F83A800(v66, v20, type metadata accessor for RequestContent.SystemPromptResolution.UserAction);
  sub_23F878B40();
  v53 = (char *)sub_23F816568 + 4 * byte_23FB63347[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23F816568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  *(_BYTE *)(v0 - 89) = 0;
  sub_23F83E304();
  v1 = *(_QWORD *)(v0 - 128);
  sub_23F6B5610();
  sub_23FB2FAE8();
  v2 = sub_23F877E94();
  v3(v2);
  sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 136) + 8));
  sub_23F77DB18();
  sub_23F6B5100();
}

void sub_23F816814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD);

  sub_23F879324();
  v1 = *(_QWORD *)(v0 - 128);
  sub_23FB2FAA0();
  v2 = sub_23F6B61DC();
  sub_23F6B6344(v2, v3);
  sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 136) + 8));
  JUMPOUT(0x23F816808);
}

void RequestContent.SystemPromptResolution.UserAction.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t);
  uint64_t v83[20];
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;

  sub_23F6B5220();
  a19 = v27;
  a20 = v28;
  v94 = v21;
  sub_23F8799E4(v29);
  v30 = sub_23F6916B8(&qword_256EAC4D8);
  sub_23F8793EC(v30);
  v89 = v31;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F6B582C(v33, v83[0]);
  v85 = sub_23F6916B8(&qword_256EAC4E0);
  v88 = *(_QWORD *)(v85 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F6B537C(v35, v83[0]);
  v84 = sub_23F6916B8(&qword_256EAC4E8);
  v83[19] = *(_QWORD *)(v84 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F6B5544(v37, v83[0]);
  v38 = sub_23F6916B8(&qword_256EAC4F0);
  sub_23F6B53F8(v38, (uint64_t)&a17);
  v83[17] = v39;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F6B5560(v41, v83[0]);
  v42 = sub_23F6916B8(&qword_256EAC4F8);
  sub_23F6B53F8(v42, (uint64_t)&a14);
  v83[13] = v43;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v44);
  sub_23F6B658C(v45, v83[0]);
  v46 = sub_23F6916B8(&qword_256EAC500);
  sub_23F6B53F8(v46, (uint64_t)&a15);
  v83[14] = v47;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v48);
  sub_23F6B5848(v49, v83[0]);
  v87 = sub_23F6916B8(&qword_256EAC508);
  v83[11] = *(_QWORD *)(v87 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v50);
  sub_23F6B57D8(v51, v83[0]);
  v52 = sub_23F6916B8(&qword_256EAC510);
  sub_23F6B53F8(v52, (uint64_t)&a11);
  v83[10] = v53;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v54);
  v86 = (char *)v83 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_23F6916B8(&qword_256EAC518);
  v91 = *(_QWORD *)(v92 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v56);
  v90 = sub_23F877C80();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v57);
  sub_23F693E0C();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v58);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v59);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v60);
  sub_23F876D18();
  MEMORY[0x24BDAC7A8](v61);
  sub_23F72E168();
  MEMORY[0x24BDAC7A8](v62);
  sub_23F70D958();
  MEMORY[0x24BDAC7A8](v63);
  sub_23F70DD48();
  MEMORY[0x24BDAC7A8](v64);
  v66 = (char *)v83 - v65;
  v93 = v20;
  sub_23F70D508(v20);
  sub_23F83E0AC();
  sub_23F8792B4();
  sub_23F6B6DF4();
  if (!v21)
  {
    v83[2] = v25;
    v83[3] = v24;
    v83[4] = v23;
    v83[5] = v22;
    v83[6] = (uint64_t)v66;
    if (*(_QWORD *)(sub_23F878AB4() + 16))
    {
      v94 = v26;
      v83[1] = 0;
      v67 = sub_23F877FF8();
      sub_23F6B4E44(v67, v68, v69, v70, v71, v72);
      v74 = v73;
      v76 = v75;
      sub_23F693E04();
      if (v74 == v76 >> 1)
        __asm { BR              X9 }
    }
    v77 = v90;
    sub_23F6B6334();
    sub_23F6B5AD4();
    v79 = v78;
    sub_23F6916B8(&qword_256EA1870);
    sub_23F878828();
    *v79 = v77;
    sub_23FB2FA04();
    v80 = sub_23F6B56B8();
    sub_23F6B5DAC(v80, *MEMORY[0x24BEE26D0]);
    swift_willThrow();
    sub_23F8772DC();
    v81 = sub_23F877E94();
    v82(v81);
  }
  sub_23F877354();
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23F816CB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F879324();
  v3 = *(_QWORD *)(v2 - 232);
  sub_23F8767FC();
  if (!v1)
  {
    sub_23F6B530C(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 328) + 8));
    sub_23F72DFBC();
    sub_23F6B56E0(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 136) + 8));
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F81719CLL);
  }
  sub_23F72DFBC();
  sub_23F6B6190();
  JUMPOUT(0x23F816CA4);
}

void sub_23F816D20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F879518();
  v2 = *(_QWORD *)(v1 - 208);
  sub_23F8767FC();
  if (!v0)
  {
    sub_23F6B6634();
    sub_23F6B4EEC((uint64_t)&qword_256EA7188);
    sub_23F878BC8();
    sub_23F6B6E1C();
    v3 = *(_QWORD *)(v1 - 136);
    sub_23F6B530C(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 304) + 8));
    sub_23F72DFBC();
    sub_23F876DA0(*(_QWORD *)(v1 - 104), *(uint64_t (**)(uint64_t, _QWORD))(v3 + 8));
    sub_23F878B7C();
    JUMPOUT(0x23F817190);
  }
  sub_23F72DFBC();
  sub_23F6B6190();
  JUMPOUT(0x23F816CA4);
}

void sub_23F816DAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);

  sub_23F8790EC();
  v2 = *(_QWORD *)(v1 - 216);
  sub_23F8767FC();
  if (!v0)
  {
    v3 = sub_23F8779E4();
    sub_23F6B530C(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 312) + 8));
    sub_23F72DFBC();
    sub_23F876DA0(*(_QWORD *)(v1 - 104), *(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 136) + 8));
    sub_23F877E50(v3 & 1);
    swift_storeEnumTagMultiPayload();
    sub_23F877D94(v3, v4, type metadata accessor for RequestContent.SystemPromptResolution.UserAction);
    v5 = sub_23F77E668();
    sub_23F83A7A4(v5, v6, v7);
    JUMPOUT(0x23F816CA8);
  }
  sub_23F72DFBC();
  sub_23F6B6190();
  JUMPOUT(0x23F816CA4);
}

void sub_23F816E00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);

  sub_23F87909C();
  v2 = *(_QWORD *)(v1 - 200);
  sub_23FB2F9F8();
  if (v0)
  {
    sub_23F72DFBC();
    sub_23F6B619C();
    JUMPOUT(0x23F816CA4);
  }
  v3 = sub_23F879674();
  sub_23F6B56E0(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 280) + 8));
  sub_23F72DFBC();
  sub_23F876DA0(*(_QWORD *)(v1 - 104), *(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 136) + 8));
  v4 = *(uint64_t **)(v1 - 384);
  *v4 = v3;
  swift_storeEnumTagMultiPayload();
  sub_23F877D94((uint64_t)v4, v5, type metadata accessor for RequestContent.SystemPromptResolution.UserAction);
  v6 = sub_23F77E668();
  sub_23F83A7A4(v6, v7, v8);
  JUMPOUT(0x23F816CA8);
}

void sub_23F816E50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F879650();
  v2 = *(_QWORD *)(v1 - 192);
  sub_23F8767FC();
  if (!v0)
  {
    v3 = sub_23F879674();
    v4 = *(_QWORD *)(v1 - 136);
    v5 = v3;
    sub_23F6B530C(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 264) + 8));
    sub_23F72DFBC();
    sub_23F876DA0(*(_QWORD *)(v1 - 104), *(uint64_t (**)(uint64_t, _QWORD))(v4 + 8));
    **(_QWORD **)(v1 - 360) = v5;
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F817190);
  }
  sub_23F72DFBC();
  sub_23F6B6190();
  JUMPOUT(0x23F816CA4);
}

void sub_23F816EAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);

  sub_23F879638();
  sub_23F8767FC();
  if (!v0)
  {
    sub_23F83E37C();
    sub_23F6B6E1C();
    v4 = *(_QWORD *)(v3 - 136);
    sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    sub_23F72DFBC();
    sub_23F876DA0(*(_QWORD *)(v3 - 104), *(uint64_t (**)(uint64_t, _QWORD))(v4 + 8));
    sub_23F877E50(*(_BYTE *)(v3 - 67));
    swift_storeEnumTagMultiPayload();
    sub_23F877D94(v4, v5, type metadata accessor for RequestContent.SystemPromptResolution.UserAction);
    v6 = sub_23F77E668();
    sub_23F83A7A4(v6, v7, v8);
    JUMPOUT(0x23F816CA8);
  }
  sub_23F72DFBC();
  sub_23F6B6190();
  JUMPOUT(0x23F816CA4);
}

void sub_23F816F08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F87962C();
  v3 = *(_QWORD *)(v2 - 184);
  sub_23F8767FC();
  if (v0)
    JUMPOUT(0x23F816F2CLL);
  sub_23F83E340();
  sub_23F6B6E1C();
  v4 = *(_QWORD *)(v2 - 136);
  sub_23F6B530C(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F72DFBC();
  sub_23F876DA0(*(_QWORD *)(v2 - 104), *(uint64_t (**)(uint64_t, _QWORD))(v4 + 8));
  JUMPOUT(0x23F817180);
}

#error "23F8171B8: call analysis failed (funcsize=5)"

#error "23F8171CC: call analysis failed (funcsize=5)"

uint64_t RequestContent.SystemPromptResolution.RequirementResolution.isRequirementSatisfied.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t RequestContent.SystemPromptResolution.RequirementResolution.isRequirementSatisfied.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*RequestContent.SystemPromptResolution.RequirementResolution.isRequirementSatisfied.modify())()
{
  return nullsub_1;
}

void RequestContent.SystemPromptResolution.RequirementResolution.description.getter()
{
  sub_23F876CF0();
  sub_23FB2F7AC();
  swift_bridgeObjectRelease();
  sub_23F8798B8();
  sub_23F877298();
  sub_23F693E04();
  sub_23F8767CC();
  sub_23F6F5A08();
}

uint64_t sub_23F817288(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000016 && a2 == 0x800000023FB34B70)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_23F81730C()
{
  return 0xD000000000000016;
}

uint64_t sub_23F81732C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F817288(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F817354()
{
  sub_23F83E3B8();
  return sub_23FB2FD10();
}

uint64_t sub_23F81737C()
{
  sub_23F83E3B8();
  return sub_23FB2FD1C();
}

void RequestContent.SystemPromptResolution.RequirementResolution.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_23F6B5220();
  v2 = v1;
  sub_23F6916B8(&qword_256EAC530);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B5208();
  sub_23F6ADC98(v2, v2[3]);
  sub_23F83E3B8();
  sub_23F876F84();
  sub_23FB2FAE8();
  sub_23F6F1CB8(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23F77DB18();
  sub_23F6B5100();
}

void RequestContent.SystemPromptResolution.RequirementResolution.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  sub_23F6B5220();
  sub_23F877118();
  sub_23F6916B8(&qword_256EAC540);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6ADC98(v0, v0[3]);
  sub_23F83E3B8();
  sub_23F75B598();
  if (!v1)
  {
    v5 = sub_23F8779E4();
    sub_23F6F1CB8(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    *v2 = v5 & 1;
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v0);
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23F8174F8()
{
  RequestContent.SystemPromptResolution.RequirementResolution.init(from:)();
}

void sub_23F81750C()
{
  RequestContent.SystemPromptResolution.RequirementResolution.encode(to:)();
}

uint64_t sub_23F817528()
{
  sub_23F83E3F4();
  return sub_23FB2FD10();
}

uint64_t sub_23F817550()
{
  sub_23F83E3F4();
  return sub_23FB2FD1C();
}

void RequestContent.SystemPromptResolution.ActionCancellation.encode(to:)()
{
  sub_23F83A4FC();
}

void RequestContent.SystemPromptResolution.ActionCancellation.init(from:)(uint64_t a1)
{
  sub_23F878C68(a1);
  sub_23F878AAC();
}

uint64_t sub_23F8175BC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x76456E6F69746361 && a2 == 0xED00006449746E65;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023FB34B90 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = a1 == 0x6974634172657375 && a2 == 0xEA00000000006E6FLL;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
      if (v7 || (sub_23FB2FB78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0x7475706E69 && a2 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v9 = sub_23FB2FB78();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 4;
        else
          return 5;
      }
    }
  }
}

uint64_t sub_23F817804(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F817844 + 4 * byte_23FB63357[a1]))(0x76456E6F69746361, 0xED00006449746E65);
}

unint64_t sub_23F817844()
{
  return 0xD000000000000015;
}

uint64_t sub_23F817860()
{
  return 0x6974634172657375;
}

uint64_t sub_23F81787C()
{
  return 0x6E656D6574617473;
}

uint64_t sub_23F81789C()
{
  return 0x7475706E69;
}

void sub_23F8178B0()
{
  RequestContent.SystemPromptResolution.ActionCancellation.encode(to:)();
}

uint64_t sub_23F8178C4()
{
  unsigned __int8 *v0;

  return sub_23F817804(*v0);
}

uint64_t sub_23F8178CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F8175BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F8178F0()
{
  sub_23F83E430();
  return sub_23FB2FD10();
}

uint64_t sub_23F817918()
{
  sub_23F83E430();
  return sub_23FB2FD1C();
}

void RequestContent.SystemPromptResolution.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10, char a11, char a12, char a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char v33;

  sub_23F6B5220();
  a25 = v28;
  a26 = v29;
  sub_23F876CB0();
  sub_23F6916B8(&qword_256EAC558);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&a9 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F70D4B8();
  sub_23F83E430();
  sub_23F6B63A4();
  a16 = 0;
  sub_23F72E034();
  sub_23F6B4EEC((uint64_t)&qword_256EA6620);
  sub_23F77178C();
  if (!v26)
  {
    sub_23F878EB4();
    a15 = 1;
    sub_23F70D78C();
    a14 = 2;
    type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
    sub_23F6B4EEC((uint64_t)&unk_256EAC568);
    sub_23F70D78C();
    sub_23F878898();
    a13 = v33;
    sub_23F6B58C8();
    sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
    sub_23F8791BC();
    sub_23F70D78C();
    a12 = 4;
    type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
    sub_23F6B4EEC((uint64_t)&unk_256EAC570);
    sub_23F70D78C();
  }
  sub_23F6B56E0((uint64_t)v32, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
  sub_23F876B60();
  sub_23F6B5100();
}

void RequestContent.SystemPromptResolution.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;

  sub_23F6B5220();
  v7 = v6;
  v38 = v8;
  v9 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v39 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F6B58C8();
  v44 = *(_QWORD *)(v12 - 8);
  v45 = v12;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  v40 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23F6D398C();
  v42 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(v15);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B57A0(v17, v37);
  v18 = sub_23F72E034();
  v46 = *(_QWORD *)(v18 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F6B5268();
  sub_23F6916B8(&qword_256EA2798);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B59E0();
  v43 = sub_23F6916B8(&qword_256EAC578);
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v21);
  v22 = sub_23F6B5864();
  v23 = type metadata accessor for RequestContent.SystemPromptResolution(v22);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F693EB0();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v2, 1, 1, v18);
  v50 = (int *)v23;
  v51 = v2;
  v48 = v2 + *(int *)(v23 + 32);
  swift_storeEnumTagMultiPayload();
  v25 = *(_QWORD *)(v7 + 24);
  v49 = v7;
  sub_23F8773E8();
  sub_23F83E430();
  v47 = v1;
  sub_23F70D990();
  if (v0)
  {
    v26 = sub_23F879004();
    v29 = v50;
    v28 = v51;
    v30 = v48;
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v26);
    sub_23F7F6110(v28, &qword_256EA2798);
    if ((_DWORD)v1)
    {
      sub_23F6B6178(v28 + v29[5], *(uint64_t (**)(uint64_t, uint64_t))(v46 + 8));
      if (!(_DWORD)v7)
        goto LABEL_6;
    }
    else if (!(_DWORD)v7)
    {
LABEL_6:
      if (!(_DWORD)v25)
      {
LABEL_8:
        v36 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput;
        v35 = v30;
        goto LABEL_9;
      }
LABEL_7:
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v28 + v29[7], v45);
      goto LABEL_8;
    }
    sub_23F83A7D4(v28 + v29[6], type metadata accessor for RequestContent.SystemPromptResolution.UserAction);
    if (!(_DWORD)v25)
      goto LABEL_8;
    goto LABEL_7;
  }
  v52 = v3;
  v37 = v9;
  sub_23F6B4EEC((uint64_t)&qword_256EA6700);
  sub_23F878A84();
  v27 = v18;
  v31 = v51;
  sub_23F840E4C(v4, v51, &qword_256EA2798);
  sub_23F877F84();
  sub_23F7839F0();
  v32 = v50;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 32))(v31 + v50[5], v5, v27);
  sub_23F877210();
  sub_23F6B4EEC((uint64_t)&unk_256EAC580);
  sub_23F87834C();
  v33 = v41;
  sub_23F878728();
  sub_23F7839F0();
  sub_23F83A7A4(v33, v31 + v32[6], type metadata accessor for RequestContent.SystemPromptResolution.UserAction);
  sub_23F6B4EEC((uint64_t)&unk_256EA1900);
  sub_23F8791B0();
  sub_23F878BC8();
  sub_23F7839F0();
  sub_23F8789F8(v31 + v32[7], v44);
  sub_23F6B4EEC((uint64_t)&unk_256EAC588);
  v34 = (uint64_t)v39;
  sub_23F7839F0();
  sub_23F6B530C(v47, *(uint64_t (**)(uint64_t, uint64_t))(v52 + 8));
  sub_23F83B7F8(v34, v48, type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput);
  sub_23F878194(v31, v38);
  sub_23F877354();
  v35 = sub_23F7D29DC();
LABEL_9:
  sub_23F83A7D4(v35, v36);
  sub_23F876B60();
  sub_23F6B5100();
}

void sub_23F817FF8()
{
  RequestContent.SystemPromptResolution.init(from:)();
}

#error "23F818014: call analysis failed (funcsize=5)"

void ExternalAgentRequest.content.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23F6F0D58();
  sub_23F83A800(v0, v1, type metadata accessor for RequestContent);
}

void ExternalAgentRequest.content.setter(uint64_t a1)
{
  uint64_t v1;

  sub_23F83B7F8(a1, v1, type metadata accessor for RequestContent);
}

uint64_t (*ExternalAgentRequest.content.modify())()
{
  return nullsub_1;
}

void ExternalAgentRequest.rewriteMetadataEventID.getter()
{
  sub_23F81D874(type metadata accessor for ExternalAgentRequest);
}

void ExternalAgentRequest.rewriteMetadataEventID.setter(uint64_t a1)
{
  sub_23F81D8AC(a1, type metadata accessor for ExternalAgentRequest);
}

uint64_t (*ExternalAgentRequest.rewriteMetadataEventID.modify())()
{
  sub_23F878240();
  sub_23F6F099C();
  return nullsub_1;
}

uint64_t ExternalAgentRequest.rewriteMetadataInlined.getter()
{
  return sub_23F833468();
}

double ExternalAgentRequest.rewriteMetadataInlined.setter(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = sub_23F83349C(a1, type metadata accessor for ExternalAgentRequest).n128_u64[0];
  return result;
}

uint64_t (*ExternalAgentRequest.rewriteMetadataInlined.modify())()
{
  sub_23F878240();
  sub_23F6F09C4();
  return nullsub_1;
}

void ExternalAgentRequest.init(query:statementId:queryRewriteMetadataEventId:queryRewriteMetadataInlined:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_23F6B50E8();
  v19 = v4;
  v20 = v3;
  v6 = v5;
  v18 = v7;
  v9 = v8;
  v10 = sub_23F878240();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA2798);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F877BE4();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B59F8();
  sub_23F878648();
  v14 = (uint64_t)v0 + *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
  v15 = *(_QWORD *)(sub_23F6B58C8() - 8);
  sub_23F6B633C(v14, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 16));
  *v0 = v9;
  v0[1] = v18;
  sub_23F6B68CC();
  swift_storeEnumTagMultiPayload();
  sub_23F72E034();
  sub_23F6F0BEC(v2);
  sub_23F6F0BEC(v1 + *(int *)(v10 + 20));
  sub_23F879254();
  sub_23F83A7A4((uint64_t)v0, v1, type metadata accessor for RequestContent);
  v16 = sub_23F6B6F88();
  sub_23F840E4C(v16, v17, &qword_256EA2798);
  sub_23F878F08();
  sub_23F879254();
  sub_23F83A7A4(v1, v19, type metadata accessor for ExternalAgentRequest);
  sub_23F87819C(v20);
  sub_23F6B530C(v6, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
  sub_23F693DDC();
}

void ExternalAgentRequest.init(speechCandidates:queryRewriteMetadataEventId:queryRewriteMetadataInlined:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_23F6B50E8();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v11 = sub_23F878240();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F693EB0();
  sub_23F6B6088();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  v14 = sub_23F6B51D0();
  type metadata accessor for RequestContent(v14);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B5268();
  sub_23F77D90C(*v4, v4[1]);
  *v2 = v8;
  sub_23F878D40();
  v16 = sub_23F72E034();
  v17 = sub_23F8772CC();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, v18, v19, v16);
  v20 = v0 + *(int *)(v11 + 20);
  sub_23F6F0BEC(v20);
  sub_23F879254();
  v21 = sub_23F6B6848();
  sub_23F83A7A4(v21, v22, type metadata accessor for RequestContent);
  sub_23F840E4C(v1, v20, &qword_256EA2798);
  sub_23F878F08();
  sub_23F879254();
  sub_23F83A7A4(v0, v10, type metadata accessor for ExternalAgentRequest);
  sub_23F877374(v6);
  sub_23F693DDC();
}

uint64_t sub_23F81837C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023FB34A70 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023FB34A90)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23F8184C4(char a1)
{
  if (a1)
    return 0xD000000000000016;
  else
    return 0x746E65746E6F63;
}

uint64_t sub_23F818524()
{
  char *v0;

  return sub_23F8184C4(*v0);
}

uint64_t sub_23F81852C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F81837C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F818550()
{
  sub_23F83E46C();
  return sub_23FB2FD10();
}

uint64_t sub_23F818578()
{
  sub_23F83E46C();
  return sub_23FB2FD1C();
}

void ExternalAgentRequest.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char v6;

  sub_23F6D3DC4();
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EAC590);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F70D4B8();
  sub_23F83E46C();
  sub_23F6B63A4();
  v6 = 0;
  type metadata accessor for RequestContent(0);
  sub_23F6B4EEC((uint64_t)&unk_256EAC280);
  sub_23F70D4F0();
  if (!v0)
  {
    type metadata accessor for ExternalAgentRequest(0);
    v6 = 1;
    sub_23F72E034();
    sub_23F6B4EEC((uint64_t)&qword_256EA6620);
    sub_23F876834();
    sub_23F877520();
    sub_23F876834();
  }
  sub_23F6B56E0((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F70D9D8();
  sub_23F6D3710();
}

void ExternalAgentRequest.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;

  sub_23F6B5220();
  v5 = v4;
  v25 = v6;
  sub_23F6916B8(&qword_256EA2798);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  v26 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for RequestContent(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B5598(v10, v25);
  v30 = sub_23F6916B8(&qword_256EAC5A0);
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v11);
  v12 = sub_23F77DB24();
  v13 = type metadata accessor for ExternalAgentRequest(v12);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F8773BC();
  v16 = v2 + v15;
  v17 = sub_23F72E034();
  *(_QWORD *)&v31 = v16;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v16, 1, 1, v17);
  v18 = (_QWORD *)(v2 + *(int *)(v13 + 24));
  *v18 = 0;
  v18[1] = 0;
  v18[2] = 0;
  sub_23F876754(v5);
  sub_23F83E46C();
  v29 = v3;
  sub_23F878958();
  sub_23F878688();
  if (v0)
  {
    sub_23F877638();
    sub_23F7F6110(v31, &qword_256EA2798);
    sub_23F877D88();
  }
  else
  {
    v32 = v2;
    v19 = (uint64_t)v26;
    v20 = v1;
    LOBYTE(v33) = 0;
    sub_23F6B4EEC((uint64_t)&unk_256EAC298);
    sub_23F878340();
    v21 = v28;
    sub_23F6B6E1C();
    sub_23F83A7A4(v21, v32, type metadata accessor for RequestContent);
    sub_23F87936C();
    sub_23F6B4EEC((uint64_t)&qword_256EA6700);
    sub_23F878340();
    sub_23F878318();
    sub_23F840E4C(v19, v31, &qword_256EA2798);
    sub_23F878464();
    sub_23F878FB0();
    v22 = v29;
    sub_23F878318();
    sub_23F6B6178(v22, *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
    v31 = v33;
    v23 = v34;
    sub_23F877D88();
    *(_OWORD *)v18 = v31;
    v18[2] = v23;
    v24 = v32;
    sub_23F876818(v32, v25);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v5);
    sub_23F876820(v24);
  }
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23F8189B0()
{
  ExternalAgentRequest.init(from:)();
}

void sub_23F8189C4()
{
  ExternalAgentRequest.encode(to:)();
}

uint64_t static RequestPrescribedPlan.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_23F6D3A90();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)sub_23F818A1C + 4 * byte_23FB6335C[*(unsigned __int8 *)(v10 + 16) >> 5]))(v10, v11, v12, v13, v14, v15, v16, v17, a9, a10);
}

void sub_23F818A1C()
{
  unsigned int v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (v0 < 0x20)
  {
    if (v3 == v5 && v2 == v4)
    {
      sub_23F73515C(v3, v2, v0);
      sub_23F73515C(v3, v2, v1);
      sub_23F735FE8(v3, v2, v1);
      sub_23F735FE8(v3, v2, v0);
    }
    else
    {
      sub_23F6B5280();
      sub_23F8768C8();
    }
  }
  else
  {
    sub_23F8768C8();
  }
  sub_23F6B69E0();
}

uint64_t _s30IntelligenceFlowPlannerSupport21ContextPrewarmRequestV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return _s16IntelligenceFlow3ASTO0aB14PlannerSupportE7BuiltinO14NoMatchingToolV2eeoiySbAH_AHtFZ_0();
  else
    return sub_23FB2FB78();
}

uint64_t sub_23F818B88(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 0x6F54686372616573 && a2 == 0xEA00000000006C6FLL;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023FB34BB0 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = a1 == 0x6C6F6F5474786574 && a2 == 0xE800000000000000;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = a1 == 0x54747265766E6F63 && a2 == 0xEB000000006C6F6FLL;
      if (v7 || (sub_23FB2FB78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = a1 == 0x5479616C70736964 && a2 == 0xEB000000006C6F6FLL;
        if (v8 || (sub_23FB2FB78() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0x6764656C776F6E6BLL && a2 == 0xED00006C6F6F5465)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          v10 = sub_23FB2FB78();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 5;
          else
            return 6;
        }
      }
    }
  }
}

uint64_t sub_23F818E4C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F818E84 + 4 * byte_23FB63362[a1]))(0x6F54686372616573, 0xEA00000000006C6FLL);
}

unint64_t sub_23F818E84()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_23F818EA0()
{
  return 0x6C6F6F5474786574;
}

uint64_t sub_23F818EB8()
{
  return 0x54747265766E6F63;
}

uint64_t sub_23F818EEC()
{
  return 0x6764656C776F6E6BLL;
}

uint64_t sub_23F818F10()
{
  unsigned __int8 *v0;

  return sub_23F818E4C(*v0);
}

uint64_t sub_23F818F18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F818B88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F818F3C()
{
  sub_23F83E4A8();
  return sub_23FB2FD10();
}

uint64_t sub_23F818F64()
{
  sub_23F83E4A8();
  return sub_23FB2FD1C();
}

uint64_t sub_23F818F8C()
{
  sub_23F83E5D4();
  return sub_23FB2FD10();
}

uint64_t sub_23F818FB4()
{
  sub_23F83E5D4();
  return sub_23FB2FD1C();
}

uint64_t sub_23F818FDC()
{
  sub_23F83E55C();
  return sub_23FB2FD10();
}

uint64_t sub_23F819004()
{
  sub_23F83E55C();
  return sub_23FB2FD1C();
}

uint64_t sub_23F81902C()
{
  sub_23F83E4E4();
  return sub_23FB2FD10();
}

uint64_t sub_23F819054()
{
  sub_23F83E4E4();
  return sub_23FB2FD1C();
}

uint64_t sub_23F81907C()
{
  sub_23F83E6C4();
  return sub_23FB2FD10();
}

uint64_t sub_23F8190A4()
{
  sub_23F83E6C4();
  return sub_23FB2FD1C();
}

uint64_t sub_23F8190CC()
{
  sub_23F83E73C();
  return sub_23FB2FD10();
}

uint64_t sub_23F8190F4()
{
  sub_23F83E73C();
  return sub_23FB2FD1C();
}

uint64_t sub_23F81911C()
{
  sub_23F83E64C();
  return sub_23FB2FD10();
}

uint64_t sub_23F819144()
{
  sub_23F83E64C();
  return sub_23FB2FD1C();
}

void RequestPrescribedPlan.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23[24];

  sub_23F6B5220();
  v2 = v1;
  v3 = sub_23F6916B8(&qword_256EAC5A8);
  v23[14] = *(_QWORD *)(v3 - 8);
  v23[15] = v3;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B5404(v5, v23[0]);
  v6 = sub_23F6916B8(&qword_256EAC5B0);
  v23[11] = *(_QWORD *)(v6 - 8);
  v23[12] = v6;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B5544(v8, v23[0]);
  v9 = sub_23F6916B8(&qword_256EAC5B8);
  v23[8] = *(_QWORD *)(v9 - 8);
  v23[9] = v9;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B658C(v11, v23[0]);
  v12 = sub_23F6916B8(&qword_256EAC5C0);
  v23[5] = *(_QWORD *)(v12 - 8);
  v23[6] = v12;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  v23[4] = (uint64_t)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23F6916B8(&qword_256EAC5C8);
  v23[2] = *(_QWORD *)(v15 - 8);
  v23[3] = v15;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B5268();
  sub_23F6916B8(&qword_256EAC5D0);
  sub_23F879854();
  v23[1] = v17;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F693EB0();
  v19 = sub_23F6916B8(&qword_256EAC5D8);
  v23[18] = *(_QWORD *)(v19 - 8);
  v23[19] = v19;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B53AC();
  v21 = *(_QWORD *)(v0 + 8);
  v23[16] = *(_QWORD *)v0;
  v23[17] = v21;
  v22 = *(unsigned __int8 *)(v0 + 16);
  sub_23F6B6280(v2);
  sub_23F83E4A8();
  sub_23F8787A0();
  sub_23FB2FCC8();
  __asm { BR              X10 }
}

void sub_23F819318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  *(_BYTE *)(v0 - 112) = 0;
  sub_23F83E73C();
  v1 = *(_QWORD *)(v0 - 120);
  sub_23F876910();
  sub_23F877130();
  sub_23F83E778();
  sub_23F8778C4();
  v2 = sub_23F6B61D0();
  sub_23F6B6178(v2, v3);
  v4 = sub_23F6B54C8();
  v5(v4, v1);
  sub_23F8778A8();
  sub_23F6B5100();
}

void RequestPrescribedPlan.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_23F6B5220();
  v3 = v2;
  sub_23F6916B8(&qword_256EAC648);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B5598(v5, v28);
  sub_23F6916B8(&qword_256EAC650);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B537C(v7, v29);
  sub_23F6916B8(&qword_256EAC658);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B57F4(v9, v30);
  sub_23F6916B8(&qword_256EAC660);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5810(v11, v31);
  sub_23F6916B8(&qword_256EAC668);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5404(v13, v32);
  sub_23F6916B8(&qword_256EAC670);
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B59E0();
  sub_23F6916B8(&qword_256EAC678);
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B573C();
  sub_23F87735C(v3);
  sub_23F83E4A8();
  sub_23F878958();
  sub_23F8783C8();
  if (!v0)
  {
    sub_23F878AB4();
    sub_23F878164();
    if (v16)
    {
      v17 = *(unsigned __int8 *)(v1 + 32);
      v18 = sub_23F70D968();
      sub_23F6B4E44(v18, v19, v20, v21, v22, v23);
      sub_23F877084();
      sub_23F8795C4();
      if (v24)
        __asm { BR              X9 }
    }
    v25 = sub_23F6B6334();
    sub_23F6B5AD4();
    sub_23F8783F4();
    sub_23F6916B8(&qword_256EA1870);
    sub_23F878828();
    MEMORY[0] = &type metadata for RequestPrescribedPlan;
    sub_23FB2FA04();
    sub_23F6B56B8();
    sub_23F759774(0, *MEMORY[0x24BEE26D0], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104));
    sub_23F87774C();
    sub_23F6B5770();
    v26 = sub_23F87770C();
    v27(v26);
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v3);
  sub_23F876FC4();
  sub_23F6B5100();
}

void sub_23F819BCC()
{
  RequestPrescribedPlan.init(from:)();
}

void sub_23F819BE0()
{
  RequestPrescribedPlan.encode(to:)();
}

void RequestPrescribedPlan.SearchTool.query.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void RequestPrescribedPlan.SearchTool.query.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  sub_23F6F09A8();
  *v2 = a1;
  v2[1] = a2;
  sub_23F694C84();
}

uint64_t (*RequestPrescribedPlan.SearchTool.query.modify())()
{
  return nullsub_1;
}

uint64_t RequestPrescribedPlan.SearchTool.isLowConfidenceKnowledge.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t RequestPrescribedPlan.SearchTool.isLowConfidenceKnowledge.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*RequestPrescribedPlan.SearchTool.isLowConfidenceKnowledge.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F819C70(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7972657571 && a2 == 0xE500000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023FB30ED0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F819D54(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000018;
  else
    return 0x7972657571;
}

uint64_t sub_23F819D8C()
{
  char *v0;

  return sub_23F819D54(*v0);
}

uint64_t sub_23F819D94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F819C70(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F819DB8()
{
  sub_23F83E91C();
  return sub_23FB2FD10();
}

uint64_t sub_23F819DE0()
{
  sub_23F83E91C();
  return sub_23FB2FD1C();
}

void RequestPrescribedPlan.SearchTool.encode(to:)()
{
  sub_23F81A750();
}

void RequestPrescribedPlan.SearchTool.init(from:)()
{
  sub_23F81A824();
}

void sub_23F819E60()
{
  RequestPrescribedPlan.SearchTool.init(from:)();
}

void sub_23F819E74()
{
  RequestPrescribedPlan.SearchTool.encode(to:)();
}

uint64_t (*RequestPrescribedPlan.LowConfidenceKnowledgeTool.query.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F819E9C()
{
  sub_23F83E958();
  return sub_23FB2FD10();
}

uint64_t sub_23F819EC4()
{
  sub_23F83E958();
  return sub_23FB2FD1C();
}

void RequestPrescribedPlan.LowConfidenceKnowledgeTool.encode(to:)()
{
  sub_23F8317D4();
}

void RequestPrescribedPlan.LowConfidenceKnowledgeTool.init(from:)()
{
  sub_23F8313B8();
}

void sub_23F819F4C()
{
  RequestPrescribedPlan.LowConfidenceKnowledgeTool.init(from:)();
}

void sub_23F819F60()
{
  RequestPrescribedPlan.LowConfidenceKnowledgeTool.encode(to:)();
}

uint64_t (*RequestPrescribedPlan.GenerateRichContentTool.query.modify())()
{
  return nullsub_1;
}

uint64_t (*RequestPrescribedPlan.GenerateRichContentTool.isExplicit.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F819F9C()
{
  sub_23F83E994();
  return sub_23FB2FD10();
}

uint64_t sub_23F819FC4()
{
  sub_23F83E994();
  return sub_23FB2FD1C();
}

void RequestPrescribedPlan.GenerateRichContentTool.encode(to:)()
{
  sub_23F81A750();
}

void RequestPrescribedPlan.GenerateRichContentTool.init(from:)()
{
  sub_23F81A824();
}

void sub_23F81A044()
{
  RequestPrescribedPlan.GenerateRichContentTool.init(from:)();
}

void sub_23F81A058()
{
  RequestPrescribedPlan.GenerateRichContentTool.encode(to:)();
}

uint64_t (*RequestPrescribedPlan.GenerateRichContentFromMediaIntentTool.query.modify())()
{
  return nullsub_1;
}

uint64_t (*RequestPrescribedPlan.GenerateRichContentFromMediaIntentTool.isExplicit.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F81A090()
{
  sub_23F83E9D0();
  return sub_23FB2FD10();
}

uint64_t sub_23F81A0B8()
{
  sub_23F83E9D0();
  return sub_23FB2FD1C();
}

void RequestPrescribedPlan.GenerateRichContentFromMediaIntentTool.encode(to:)()
{
  sub_23F81A750();
}

void RequestPrescribedPlan.GenerateRichContentFromMediaIntentTool.init(from:)()
{
  sub_23F81A824();
}

void sub_23F81A138()
{
  RequestPrescribedPlan.GenerateRichContentFromMediaIntentTool.init(from:)();
}

void sub_23F81A14C()
{
  RequestPrescribedPlan.GenerateRichContentFromMediaIntentTool.encode(to:)();
}

uint64_t (*RequestPrescribedPlan.GenerateImageIntentTool.query.modify())()
{
  return nullsub_1;
}

uint64_t (*RequestPrescribedPlan.GenerateImageIntentTool.isExplicit.modify())()
{
  return nullsub_1;
}

void _s30IntelligenceFlowPlannerSupport21RequestPrescribedPlanO10SearchToolV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1])
  {
    sub_23F6B5280();
    sub_23F7A01D0();
  }
  sub_23F694CC8();
}

uint64_t sub_23F81A1D4()
{
  sub_23F83EA0C();
  return sub_23FB2FD10();
}

uint64_t sub_23F81A1FC()
{
  sub_23F83EA0C();
  return sub_23FB2FD1C();
}

void RequestPrescribedPlan.GenerateImageIntentTool.encode(to:)()
{
  sub_23F81A750();
}

void RequestPrescribedPlan.GenerateImageIntentTool.init(from:)()
{
  sub_23F81A824();
}

void sub_23F81A27C()
{
  RequestPrescribedPlan.GenerateImageIntentTool.init(from:)();
}

void sub_23F81A290()
{
  RequestPrescribedPlan.GenerateImageIntentTool.encode(to:)();
}

uint64_t (*RequestPrescribedPlan.TextTool.query.modify())()
{
  return nullsub_1;
}

uint64_t (*RequestPrescribedPlan.TextTool.isExplicit.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F81A2C4()
{
  sub_23F83EA48();
  return sub_23FB2FD10();
}

uint64_t sub_23F81A2EC()
{
  sub_23F83EA48();
  return sub_23FB2FD1C();
}

void RequestPrescribedPlan.TextTool.encode(to:)()
{
  sub_23F81A750();
}

void RequestPrescribedPlan.TextTool.init(from:)()
{
  sub_23F81A824();
}

void sub_23F81A36C()
{
  RequestPrescribedPlan.TextTool.init(from:)();
}

void sub_23F81A380()
{
  RequestPrescribedPlan.TextTool.encode(to:)();
}

uint64_t (*RequestPrescribedPlan.ConvertTool.query.modify())()
{
  return nullsub_1;
}

uint64_t (*RequestPrescribedPlan.ConvertTool.isExplicit.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F81A3B4(char a1)
{
  if ((a1 & 1) != 0)
    return 0x63696C7078457369;
  else
    return 0x7972657571;
}

uint64_t sub_23F81A3EC()
{
  char *v0;

  return sub_23F81A3B4(*v0);
}

void sub_23F81A3F4(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23F81A5F8(a1, a2);
  *a3 = v4;
}

uint64_t sub_23F81A418()
{
  sub_23F83EA84();
  return sub_23FB2FD10();
}

uint64_t sub_23F81A440()
{
  sub_23F83EA84();
  return sub_23FB2FD1C();
}

void RequestPrescribedPlan.ConvertTool.encode(to:)()
{
  sub_23F81A750();
}

void RequestPrescribedPlan.ConvertTool.init(from:)()
{
  sub_23F81A824();
}

void sub_23F81A4C0()
{
  RequestPrescribedPlan.ConvertTool.init(from:)();
}

void sub_23F81A4D4()
{
  RequestPrescribedPlan.ConvertTool.encode(to:)();
}

uint64_t (*RequestPrescribedPlan.DisplayTool.query.modify())()
{
  return nullsub_1;
}

uint64_t (*RequestPrescribedPlan.DisplayTool.isExplicit.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F81A508()
{
  sub_23F83EAC0();
  return sub_23FB2FD10();
}

uint64_t sub_23F81A530()
{
  sub_23F83EAC0();
  return sub_23FB2FD1C();
}

void RequestPrescribedPlan.DisplayTool.encode(to:)()
{
  sub_23F81A750();
}

void RequestPrescribedPlan.DisplayTool.init(from:)()
{
  sub_23F81A824();
}

void sub_23F81A5B0()
{
  RequestPrescribedPlan.DisplayTool.init(from:)();
}

void sub_23F81A5C4()
{
  RequestPrescribedPlan.DisplayTool.encode(to:)();
}

uint64_t (*RequestPrescribedPlan.KnowledgeTool.query.modify())()
{
  return nullsub_1;
}

uint64_t (*RequestPrescribedPlan.KnowledgeTool.isExplicit.modify())()
{
  return nullsub_1;
}

void sub_23F81A5F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  BOOL v5;

  v4 = a1 == 0x7972657571 && a2 == 0xE500000000000000;
  if (v4
    || (sub_23F6B6B7C(), (sub_23F6B5280() & 1) != 0)
    || (v3 == 0x63696C7078457369 ? (v5 = v2 == 0xEA00000000007469) : (v5 = 0), v5))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F6B5280();
    sub_23F693E04();
  }
  sub_23F694CC8();
}

uint64_t sub_23F81A6D4()
{
  sub_23F83EAFC();
  return sub_23FB2FD10();
}

uint64_t sub_23F81A6FC()
{
  sub_23F83EAFC();
  return sub_23FB2FD1C();
}

void RequestPrescribedPlan.KnowledgeTool.encode(to:)()
{
  sub_23F81A750();
}

void sub_23F81A750()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_QWORD *);
  uint64_t v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  void (*v8)(_QWORD *);
  uint64_t v9;

  sub_23F6B5220();
  v8 = v2;
  v4 = (_QWORD *)v3;
  v9 = *(_QWORD *)(sub_23F6B63B8(v3, v5) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F878548();
  v7 = sub_23F876754(v4);
  v8(v7);
  sub_23F877D9C();
  sub_23F878374();
  sub_23FB2FADC();
  if (!v0)
  {
    sub_23F877F84();
    sub_23F877474();
  }
  sub_23F6B56E0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  sub_23F877A30();
  sub_23F6B5100();
}

void RequestPrescribedPlan.KnowledgeTool.init(from:)()
{
  sub_23F81A824();
}

void sub_23F81A824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(_QWORD *);
  void (*v4)(_QWORD *);
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  sub_23F6B5220();
  v4 = v3;
  v6 = (_QWORD *)v5;
  v15 = v7;
  sub_23F6B63B8(v5, v8);
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B53AC();
  v10 = sub_23F876A18(v6);
  v4(v10);
  sub_23F878478();
  if (v0)
  {
    sub_23F6B6E68();
  }
  else
  {
    v11 = sub_23F876CD8();
    v13 = v12;
    sub_23F877ACC();
    v14 = sub_23F878C00();
    sub_23F6B563C(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    *(_QWORD *)v15 = v11;
    *(_QWORD *)(v15 + 8) = v13;
    *(_BYTE *)(v15 + 16) = v14 & 1;
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v6);
    sub_23F6B6A48();
  }
  sub_23F876FC4();
  sub_23F6B5100();
}

void sub_23F81A92C()
{
  RequestPrescribedPlan.KnowledgeTool.init(from:)();
}

void sub_23F81A940()
{
  RequestPrescribedPlan.KnowledgeTool.encode(to:)();
}

uint64_t ProgramStatement.id.getter()
{
  return sub_23F839AEC();
}

uint64_t ProgramStatement.id.setter(uint64_t a1)
{
  return sub_23F839B28(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

uint64_t (*ProgramStatement.id.modify())()
{
  return nullsub_1;
}

void ProgramStatement.expression.getter()
{
  sub_23F822134(type metadata accessor for ProgramStatement);
}

void ProgramStatement.expression.setter(uint64_t a1)
{
  sub_23F82216C(a1, type metadata accessor for ProgramStatement);
}

uint64_t (*ProgramStatement.expression.modify())()
{
  sub_23F878E84();
  sub_23F6F099C();
  return nullsub_1;
}

void ProgramStatement.targetType.getter()
{
  sub_23F81A9D8(type metadata accessor for ProgramStatement);
}

void sub_23F81A9D8(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = sub_23F6F08D8(a1);
  sub_23F877DD0(*(int *)(v1 + 24));
  sub_23F694C84();
}

void ProgramStatement.targetType.setter(uint64_t a1)
{
  sub_23F81AA10(a1, type metadata accessor for ProgramStatement);
}

void sub_23F81AA10(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = sub_23F876B7C(a1, a2);
  sub_23F877B70(*(int *)(v2 + 24));
  sub_23F694C84();
}

uint64_t (*ProgramStatement.targetType.modify())()
{
  sub_23F878E84();
  sub_23F6F09C4();
  return nullsub_1;
}

uint64_t sub_23F81AA54(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6973736572707865 && a2 == 0xEA00000000006E6FLL;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x7954746567726174 && a2 == 0xEA00000000006570)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23FB2FB78();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F81AB98(char a1)
{
  if (!a1)
    return 25705;
  if (a1 == 1)
    return 0x6973736572707865;
  return 0x7954746567726174;
}

uint64_t sub_23F81ABF0()
{
  char *v0;

  return sub_23F81AB98(*v0);
}

uint64_t sub_23F81ABF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F81AA54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F81AC1C()
{
  sub_23F83EB38();
  return sub_23FB2FD10();
}

uint64_t sub_23F81AC44()
{
  sub_23F83EB38();
  return sub_23FB2FD1C();
}

void ProgramStatement.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE v6[16];

  sub_23F6D3DC4();
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EAC788);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v6[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F70D4B8();
  sub_23F83EB38();
  sub_23F6B63A4();
  v6[15] = 0;
  sub_23F6B58C8();
  sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
  sub_23F876660();
  if (!v0)
  {
    type metadata accessor for ProgramStatement(0);
    v5 = sub_23F876854();
    type metadata accessor for Expression(v5);
    sub_23F6B4EEC((uint64_t)&unk_256EAC798);
    sub_23F70D4F0();
    sub_23F877144();
    sub_23FB2ED5C();
    sub_23F6B4EEC((uint64_t)&unk_256EAC7A0);
    sub_23F876834();
  }
  sub_23F6B56E0((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F70D9D8();
  sub_23F6D3710();
}

void ProgramStatement.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_23F6B5220();
  v40 = v1;
  v30 = v4;
  sub_23F6916B8(&qword_256EA6550);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v5);
  v31 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F6D398C();
  v34 = type metadata accessor for Expression(v7);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  v33 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_23F6B58C8();
  v32 = *(_QWORD *)(v35 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5420(v11, v27);
  v37 = sub_23F6916B8(&qword_256EAC7A8);
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23F6B5C2C();
  v14 = type metadata accessor for ProgramStatement(v13);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B52B0();
  v17 = v2 + *(int *)(v16 + 24);
  v18 = sub_23FB2ED5C();
  v39 = v17;
  v19 = sub_23F8778B4();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v19, v20, v21, v18);
  sub_23F877B38();
  sub_23F83EB38();
  v38 = v3;
  sub_23F877EB0();
  sub_23F7A02FC();
  if (v1)
  {
    sub_23F877804();
    sub_23F7F6110(v39, &qword_256EA6550);
  }
  else
  {
    v27 = v18;
    v28 = v14;
    v22 = (uint64_t)v33;
    v40 = v0;
    v29 = v2;
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    sub_23F876F6C();
    v23 = v36;
    sub_23F7839F0();
    sub_23F75E68C(v29, v23, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 32));
    sub_23F6B6360();
    sub_23F6B4EEC((uint64_t)&unk_256EAC7B0);
    sub_23F878B0C();
    sub_23F7839F0();
    v24 = v29;
    sub_23F83A7A4(v22, v29 + *(int *)(v28 + 20), type metadata accessor for Expression);
    sub_23F877210();
    sub_23F6B4EEC((uint64_t)&unk_256EAC7B8);
    sub_23F87834C();
    sub_23F87945C();
    v25 = sub_23F876F34(v40);
    sub_23F879984(v25, v26, &qword_256EA6550);
    sub_23F876818(v24, v30);
    sub_23F877780();
    sub_23F876820(v24);
  }
  sub_23F876B60();
  sub_23F6B5100();
}

void sub_23F81B0D4()
{
  ProgramStatement.init(from:)();
}

void sub_23F81B0E8()
{
  ProgramStatement.encode(to:)();
}

uint64_t ProgramStatement.hash(into:)()
{
  sub_23F6B58C8();
  sub_23F6B4EEC((uint64_t)&qword_256EA15A8);
  sub_23F6B63F4();
  return sub_23FB2F074();
}

void ProgramStatement.hashValue.getter()
{
  sub_23F6B53C4();
  sub_23F6B58C8();
  sub_23F6B4EEC((uint64_t)&qword_256EA15A8);
  sub_23FB2F074();
  sub_23F6B5608();
  sub_23F6B5398();
}

uint64_t sub_23F81B1B0()
{
  sub_23FB2FC5C();
  sub_23FB2C764();
  sub_23F6B4EEC((uint64_t)&qword_256EA15A8);
  sub_23FB2F074();
  return sub_23FB2FC8C();
}

void SpeechQuery.candidates.setter()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23F877DB8();
  *v1 = v0;
  sub_23F694CC8();
}

uint64_t (*SpeechQuery.candidates.modify())()
{
  return nullsub_1;
}

uint64_t SpeechQuery.safetyMode.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

uint64_t (*SpeechQuery.safetyMode.modify())()
{
  return nullsub_1;
}

void SpeechQuery.clientQueryId.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void SpeechQuery.clientQueryId.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6F0C58();
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v0;
  sub_23F694C84();
}

uint64_t (*SpeechQuery.clientQueryId.modify())()
{
  return nullsub_1;
}

IntelligenceFlowPlannerSupport::SpeechQuery __swiftcall SpeechQuery.init(candidates:safetyMode:clientQueryId:)(Swift::OpaquePointer candidates, Swift::Bool safetyMode, Swift::String_optional clientQueryId)
{
  uint64_t v3;
  IntelligenceFlowPlannerSupport::SpeechQuery result;

  *(Swift::OpaquePointer *)v3 = candidates;
  *(_BYTE *)(v3 + 8) = safetyMode;
  *(Swift::String_optional *)(v3 + 16) = clientQueryId;
  result.clientQueryId = clientQueryId;
  result.candidates = candidates;
  result.safetyMode = safetyMode;
  return result;
}

IntelligenceFlowPlannerSupport::SpeechQuery __swiftcall SpeechQuery.init(candidates:safetyMode:)(IntelligenceFlowPlannerSupport::SpeechQuery candidates, Swift::Bool safetyMode)
{
  uint64_t v2;

  *(_QWORD *)v2 = candidates.candidates._rawValue;
  *(_BYTE *)(v2 + 8) = safetyMode;
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = 0;
  candidates.safetyMode = safetyMode;
  return candidates;
}

uint64_t sub_23F81B2CC(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  BOOL v6;
  char v8;

  v3 = a1 == 0x74616469646E6163 && a2 == 0xEA00000000007365;
  if (v3 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6F4D797465666173 && a2 == 0xEA00000000006564;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x7551746E65696C63 && a2 == 0xED00006449797265)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23FB2FB78();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F81B44C(char a1)
{
  if (!a1)
    return 0x74616469646E6163;
  if (a1 == 1)
    return 0x6F4D797465666173;
  return 0x7551746E65696C63;
}

uint64_t sub_23F81B4B4()
{
  char *v0;

  return sub_23F81B44C(*v0);
}

uint64_t sub_23F81B4BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F81B2CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F81B4E0()
{
  sub_23F83EB74();
  return sub_23FB2FD10();
}

uint64_t sub_23F81B508()
{
  sub_23F83EB74();
  return sub_23FB2FD1C();
}

void SpeechQuery.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  sub_23F6B5220();
  v4 = v3;
  sub_23F6916B8(&qword_256EAC7C0);
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B52B0();
  sub_23F70D6E4(v4);
  sub_23F83EB74();
  sub_23F87893C();
  sub_23F70DD2C();
  sub_23F6916B8(&qword_256EAB790);
  sub_23F8799C0();
  sub_23F877754();
  sub_23F879288();
  if (!v0)
  {
    sub_23F8793D4();
    sub_23FB2FAE8();
    sub_23F87781C();
    sub_23FB2FAAC();
  }
  sub_23F6B56E0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F6B6834();
  sub_23F6B5100();
}

void SpeechQuery.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  _BYTE v23[16];

  sub_23F6B5220();
  sub_23F87733C();
  sub_23F6916B8(&qword_256EAC7D0);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v14);
  v16 = &v23[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F876754(v10);
  sub_23F83EB74();
  sub_23F6B5DA0();
  if (v11)
  {
    sub_23F6B6E68();
  }
  else
  {
    sub_23F6916B8(&qword_256EAB790);
    v23[15] = 0;
    sub_23F83DF04();
    sub_23F876DA8();
    sub_23F8769F0();
    sub_23F8793D4();
    sub_23F77E600();
    v17 = sub_23F878C00();
    v23[13] = 2;
    v18 = sub_23F878C10();
    v20 = v19;
    v21 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
    v22 = v18;
    sub_23F6B563C((uint64_t)v16, v21);
    sub_23F6B54F8();
    swift_bridgeObjectRelease();
    *(_QWORD *)v12 = a10;
    *(_BYTE *)(v12 + 8) = v17 & 1;
    *(_QWORD *)(v12 + 16) = v22;
    *(_QWORD *)(v12 + 24) = v20;
    sub_23F876C80();
  }
  swift_bridgeObjectRelease();
  sub_23F876FC4();
  sub_23F6B5100();
}

void sub_23F81B7BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  SpeechQuery.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F81B7D0()
{
  SpeechQuery.encode(to:)();
}

uint64_t (*TextQuery.query.modify())()
{
  return nullsub_1;
}

uint64_t TextQuery.safetyMode.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*TextQuery.safetyMode.modify())()
{
  return nullsub_1;
}

uint64_t TextQuery.statementId.getter()
{
  return sub_23F825F6C(type metadata accessor for TextQuery);
}

uint64_t TextQuery.statementId.setter(uint64_t a1)
{
  return sub_23F825FB8(a1, type metadata accessor for TextQuery);
}

uint64_t (*TextQuery.statementId.modify())()
{
  sub_23F879A28();
  sub_23F6F09C4();
  return nullsub_1;
}

void TextQuery.clientQueryId.getter()
{
  sub_23F81B864(type metadata accessor for TextQuery);
}

void sub_23F81B864(uint64_t (*a1)(_QWORD))
{
  sub_23F876C04(a1);
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void TextQuery.clientQueryId.setter(uint64_t a1, uint64_t a2)
{
  sub_23F81CF9C(a1, a2, type metadata accessor for TextQuery);
}

uint64_t (*TextQuery.clientQueryId.modify())()
{
  type metadata accessor for TextQuery(0);
  sub_23F6F0A54();
  return nullsub_1;
}

void TextQuery.init(query:safetyMode:statementId:clientQueryId:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  sub_23F6D3A90();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = sub_23F8795F0();
  v10 = (_QWORD *)(v2 + *(int *)(type metadata accessor for TextQuery(v9) + 28));
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = v0;
  *(_BYTE *)(v2 + 16) = v8;
  v11 = sub_23F6B58C8();
  sub_23F70D6B4(v11);
  *v10 = v6;
  v10[1] = v4;
  sub_23F6B69E0();
}

void TextQuery.init(query:safetyMode:statementId:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void (*v10)(uint64_t);

  v7 = sub_23F877104();
  v8 = (_QWORD *)(v5 + *(int *)(type metadata accessor for TextQuery(v7) + 28));
  *(_QWORD *)v5 = v4;
  *(_QWORD *)(v5 + 8) = v3;
  *(_BYTE *)(v5 + 16) = a3;
  sub_23F6B58C8();
  v9 = sub_23F6B6190();
  v10(v9);
  *v8 = 0;
  v8[1] = 0;
  sub_23F6B5F7C();
}

void TextQuery.init(query:safetyMode:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD *v8;

  v7 = sub_23F876E44();
  v8 = (_QWORD *)(v5 + *(int *)(type metadata accessor for TextQuery(v7) + 28));
  *(_QWORD *)v5 = v4;
  *(_QWORD *)(v5 + 8) = v3;
  *(_BYTE *)(v5 + 16) = a3;
  sub_23F8773AC();
  *v8 = 0;
  v8[1] = 0;
  sub_23F6B5F7C();
}

uint64_t sub_23F81B9C0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x7972657571 && a2 == 0xE500000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6F4D797465666173 && a2 == 0xEA00000000006564;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
      if (v7 || (sub_23FB2FB78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x7551746E65696C63 && a2 == 0xED00006449797265)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_23FB2FB78();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_23F81BBAC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F81BBDC + 4 * byte_23FB63374[a1]))(0x7972657571, 0xE500000000000000);
}

uint64_t sub_23F81BBDC()
{
  return 0x6F4D797465666173;
}

uint64_t sub_23F81BBF8()
{
  return 0x6E656D6574617473;
}

uint64_t sub_23F81BC18()
{
  return 0x7551746E65696C63;
}

uint64_t sub_23F81BC3C()
{
  unsigned __int8 *v0;

  return sub_23F81BBAC(*v0);
}

uint64_t sub_23F81BC44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F81B9C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F81BC68()
{
  sub_23F83EBB0();
  return sub_23FB2FD10();
}

uint64_t sub_23F81BC90()
{
  sub_23F83EBB0();
  return sub_23FB2FD1C();
}

void TextQuery.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE v5[16];

  sub_23F6D3DC4();
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EAC7D8);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v5[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F70D4B8();
  sub_23F83EBB0();
  sub_23F6B63A4();
  v5[15] = 0;
  sub_23F87698C();
  if (!v0)
  {
    v5[14] = 1;
    sub_23F877474();
    type metadata accessor for TextQuery(0);
    v5[13] = 2;
    sub_23F6B58C8();
    sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
    sub_23F70D4F0();
    sub_23F8772F4();
  }
  sub_23F6B56E0((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F70D9D8();
  sub_23F6D3710();
}

void TextQuery.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;

  sub_23F6B5220();
  v6 = v5;
  v21 = v7;
  v22 = *(_QWORD *)(sub_23F6B58C8() - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EAC7E8);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F6B5C2C();
  v11 = type metadata accessor for TextQuery(v10);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B59E0();
  v14 = (uint64_t *)(v3 + *(int *)(v13 + 28));
  *v14 = 0;
  v14[1] = 0;
  v23 = v14;
  sub_23F87735C(v6);
  sub_23F83EBB0();
  sub_23F877EB0();
  sub_23F878688();
  if (v0)
  {
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = v4;
    v16 = v3;
    *(_QWORD *)v3 = sub_23F878A8C();
    *(_QWORD *)(v3 + 8) = v17;
    sub_23F70DD04();
    *(_BYTE *)(v3 + 16) = sub_23FB2FA4C() & 1;
    sub_23F877210();
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    sub_23F87834C();
    sub_23F7839F0();
    sub_23F6B633C(v3 + *(int *)(v11 + 24), v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 32));
    sub_23F8772E4();
    v18 = sub_23FB2FA10();
    v20 = v19;
    sub_23F876EF8(v1, *(uint64_t (**)(uint64_t, _QWORD))(v15 + 8));
    sub_23F878F8C();
    *v23 = v18;
    v23[1] = v20;
    sub_23F876818(v16, v21);
    sub_23F72E47C();
    sub_23F876820(v16);
  }
  sub_23F876B60();
  sub_23F6B5100();
}

void sub_23F81C01C()
{
  TextQuery.init(from:)();
}

void sub_23F81C030()
{
  TextQuery.encode(to:)();
}

uint64_t (*ExecutionStepResults.results.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F81C058(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x73746C75736572 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F81C0DC()
{
  return 0x73746C75736572;
}

uint64_t sub_23F81C0F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F81C058(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F81C120()
{
  sub_23F83EBEC();
  return sub_23FB2FD10();
}

uint64_t sub_23F81C148()
{
  sub_23F83EBEC();
  return sub_23FB2FD1C();
}

void ExecutionStepResults.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;

  sub_23F6B5220();
  a19 = v23;
  a20 = v24;
  sub_23F878C5C();
  sub_23F6916B8(&qword_256EAC7F0);
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *v20;
  sub_23F70D508(v21);
  sub_23F83EBEC();
  sub_23F6F33A0();
  a10 = v28;
  sub_23F6916B8(&qword_256EAC800);
  sub_23F83EC28();
  sub_23F87693C();
  sub_23F6B530C((uint64_t)v27, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  sub_23F77DB18();
  sub_23F6B5100();
}

void ExecutionStepResults.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F6B5220();
  sub_23F877118();
  sub_23F6916B8(&qword_256EAC818);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F876754(v0);
  sub_23F83EBEC();
  sub_23F75B598();
  if (!v1)
  {
    sub_23F6916B8(&qword_256EAC800);
    sub_23F83ECB8();
    sub_23F6B6E1C();
    sub_23F6F1CB8(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    sub_23F878D14();
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v0);
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23F81C2E8()
{
  ExecutionStepResults.init(from:)();
}

#error "23F81C304: call analysis failed (funcsize=5)"

void static ToolParameterValue.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  uint64_t v48;

  sub_23F6B50E8();
  a19 = v23;
  a20 = v24;
  v26 = v25;
  v27 = sub_23F6B6634();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v29 = sub_23F876970();
  type metadata accessor for ToolParameterValue(v29);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F6B5C80();
  MEMORY[0x24BDAC7A8](v31);
  v33 = (uint64_t *)((char *)&a9 - v32);
  sub_23F6916B8(&qword_256EA2760);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v34);
  v35 = sub_23F877848();
  sub_23F83A800(v35, v36, type metadata accessor for ToolParameterValue);
  sub_23F83A800(v26, (uint64_t)v22, type metadata accessor for ToolParameterValue);
  v37 = sub_23F714010();
  if ((_DWORD)v37 == 1)
  {
    sub_23F876B04(v20, v38, type metadata accessor for ToolParameterValue);
    if (sub_23F714010() == 1)
    {
      sub_23F77DB9C(v21, (uint64_t)v22, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 32));
      sub_23F78F478();
      sub_23FB2ED14();
      v39 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
      v39(v21, v27);
      v40 = sub_23F879614();
      v41 = ((uint64_t (*)(uint64_t))v39)(v40);
      sub_23F876A50(v41, type metadata accessor for ToolParameterValue);
      goto LABEL_15;
    }
    v45 = sub_23F879614();
    v44 = v46(v45);
LABEL_7:
    sub_23F876B14(v44, &qword_256EA2760);
    goto LABEL_15;
  }
  sub_23F877DE0(v37, v38, type metadata accessor for ToolParameterValue);
  v43 = *v33;
  v42 = v33[1];
  if (sub_23F714010() == 1)
  {
    v44 = sub_23F693DFC();
    goto LABEL_7;
  }
  if (v43 == *v22 && v42 == v22[1])
  {
    v48 = sub_23F6B6740();
  }
  else
  {
    sub_23F70DC34();
    sub_23F6B5280();
    sub_23F6B5908();
    v48 = sub_23F693DFC();
  }
  sub_23F876A50(v48, type metadata accessor for ToolParameterValue);
LABEL_15:
  sub_23F693DDC();
}

uint64_t sub_23F81C4E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x636E657265666572 && a2 == 0xE900000000000065;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F81C5D8(char a1)
{
  if ((a1 & 1) != 0)
    return 0x65756C6176;
  else
    return 0x636E657265666572;
}

uint64_t sub_23F81C610(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x656C626169726176 && a2 == 0xEC000000656D614ELL)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F81C6AC()
{
  return 0x656C626169726176;
}

uint64_t sub_23F81C6CC()
{
  char *v0;

  return sub_23F81C5D8(*v0);
}

uint64_t sub_23F81C6D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F81C4E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F81C6F8()
{
  sub_23F83ED48();
  return sub_23FB2FD10();
}

uint64_t sub_23F81C720()
{
  sub_23F83ED48();
  return sub_23FB2FD1C();
}

uint64_t sub_23F81C74C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F81C610(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F81C774()
{
  sub_23F83EDC0();
  return sub_23FB2FD10();
}

uint64_t sub_23F81C79C()
{
  sub_23F83EDC0();
  return sub_23FB2FD1C();
}

uint64_t sub_23F81C7C4()
{
  sub_23F83ED84();
  return sub_23FB2FD10();
}

uint64_t sub_23F81C7EC()
{
  sub_23F83ED84();
  return sub_23FB2FD1C();
}

void ToolParameterValue.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_23F6B5220();
  v31 = v1;
  v29 = v0;
  v4 = v3;
  v28 = sub_23F6916B8(&qword_256EAC830);
  v26 = *(_QWORD *)(v28 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v5);
  v25 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_23F6B6634();
  v24 = *(_QWORD *)(v27 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B5598(v8, v22);
  sub_23F6916B8(&qword_256EAC838);
  sub_23F879854();
  v22 = v9;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_23F7A00C8();
  type metadata accessor for ToolParameterValue(v11);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F693EB0();
  v30 = sub_23F6916B8(&qword_256EAC840);
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B53AC();
  sub_23F876754(v4);
  sub_23F83ED48();
  sub_23F876F84();
  sub_23F83A800(v29, v2, type metadata accessor for ToolParameterValue);
  sub_23F6B7194();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = v23;
    v14 = v24;
    sub_23F75E710(v23, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 32));
    sub_23F879398();
    sub_23F876FB8();
    sub_23F6B4EEC((uint64_t)&qword_256EA7170);
    sub_23F7B0D3C();
    v16 = sub_23F7D2C3C();
    sub_23F6B56E0(v16, v17);
    sub_23F6B51EC(v15, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
    v18 = sub_23F6B6218();
  }
  else
  {
    sub_23F83EDC0();
    sub_23F876FB8();
    sub_23F72E3F8();
    sub_23FB2FADC();
    sub_23F6B6090();
    v20 = sub_23F6B61DC();
    sub_23F6B6178(v20, v21);
    v18 = sub_23F6B6224();
  }
  v19(v18);
  sub_23F8778A8();
  sub_23F6B5100();
}

void ToolParameterValue.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;

  sub_23F6B5220();
  v6 = v5;
  v42 = v7;
  v44 = *(_QWORD *)(sub_23F6916B8(&qword_256EAC860) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5C10(v9, v38);
  v43 = *(_QWORD *)(sub_23F6916B8(&qword_256EAC868) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5420(v11, v39);
  v47 = *(_QWORD *)(sub_23F6916B8(&qword_256EAC870) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23F6B5C2C();
  v14 = type metadata accessor for ToolParameterValue(v13);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F876BF0();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B5F6C();
  sub_23F876A18(v6);
  sub_23F83ED48();
  sub_23F877EB0();
  sub_23F6B6DF4();
  if (v1)
    goto LABEL_7;
  v40 = v3;
  v41 = v14;
  v48 = v6;
  v18 = sub_23FB2FA94();
  if (!*(_QWORD *)(v18 + 16)
    || (sub_23F8794C8(),
        v19 = *(_BYTE *)(v18 + 32),
        sub_23F6B4E44(1, v20, v18, v18 + 32, 0, v21),
        v23 = v22,
        v25 = v24,
        sub_23F6B644C(),
        v23 != v25 >> 1))
  {
    sub_23F6B6334();
    sub_23F6B5AD4();
    v28 = v27;
    sub_23F6916B8(&qword_256EA1870);
    *v28 = v41;
    sub_23FB2FA04();
    v29 = sub_23F6B56B8();
    sub_23F6B6650(v29, *MEMORY[0x24BEE26D0]);
    swift_willThrow();
    sub_23F72DFBC();
    v30 = sub_23F879688();
    v31(v30);
    v6 = v48;
LABEL_7:
    v32 = (uint64_t)v6;
    goto LABEL_8;
  }
  if ((v19 & 1) != 0)
  {
    sub_23F879398();
    sub_23F878A68();
    v26 = v40;
    sub_23F6B6634();
    sub_23F6B4EEC((uint64_t)&qword_256EA7188);
    sub_23F7717EC();
    sub_23F70D728(v46, *(uint64_t (**)(uint64_t, uint64_t))(v44 + 8));
    sub_23F72DFBC();
    sub_23F6B530C(v2, *(uint64_t (**)(uint64_t, uint64_t))(v47 + 8));
    sub_23F878B7C();
    v33 = v0;
    v34 = v42;
  }
  else
  {
    sub_23F83EDC0();
    sub_23F878A68();
    v35 = sub_23F879724();
    v37 = v36;
    sub_23F6B530C(v45, *(uint64_t (**)(uint64_t, uint64_t))(v43 + 8));
    sub_23F72DFBC();
    sub_23F87896C();
    *v4 = v35;
    v4[1] = v37;
    swift_storeEnumTagMultiPayload();
    v33 = (uint64_t)v4;
    v34 = v42;
    v26 = v40;
  }
  sub_23F87815C(v33, v26);
  sub_23F87815C(v26, v34);
  v32 = (uint64_t)v6;
LABEL_8:
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v32);
  sub_23F8785C4();
  sub_23F6B5100();
}

void sub_23F81CE50()
{
  ToolParameterValue.init(from:)();
}

void sub_23F81CE64()
{
  ToolParameterValue.encode(to:)();
}

uint64_t Action.statementId.getter()
{
  return sub_23F839AEC();
}

uint64_t Action.statementId.setter(uint64_t a1)
{
  return sub_23F839B28(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

uint64_t (*Action.statementId.modify())()
{
  return nullsub_1;
}

void Action.toolId.getter()
{
  sub_23F81CEB0(type metadata accessor for Action);
}

void sub_23F81CEB0(uint64_t (*a1)(_QWORD))
{
  sub_23F876C04(a1);
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void Action.toolId.setter(uint64_t a1, uint64_t a2)
{
  sub_23F81F314(a1, a2, type metadata accessor for Action);
}

uint64_t (*Action.toolId.modify())()
{
  sub_23F878E9C();
  sub_23F6F099C();
  return nullsub_1;
}

void Action.bundleId.getter()
{
  type metadata accessor for Action(0);
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void Action.bundleId.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_23F878E48();
  sub_23F6F096C();
  *v1 = v2;
  v1[1] = v0;
  sub_23F694C84();
}

uint64_t (*Action.bundleId.modify())()
{
  type metadata accessor for Action(0);
  sub_23F6F09C4();
  return nullsub_1;
}

void Action.deviceId.getter()
{
  sub_23F81B864(type metadata accessor for Action);
}

void Action.deviceId.setter(uint64_t a1, uint64_t a2)
{
  sub_23F81CF9C(a1, a2, type metadata accessor for Action);
}

void sub_23F81CF9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;

  sub_23F6B60B4(a1, a2, a3);
  sub_23F6F096C();
  *v3 = a1;
  v3[1] = a2;
  sub_23F694C84();
}

uint64_t (*Action.deviceId.modify())()
{
  sub_23F878E9C();
  sub_23F6F0A54();
  return nullsub_1;
}

uint64_t Action.isConfirmed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Action(0) + 32));
}

void Action.isConfirmed.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(type metadata accessor for Action(0) + 32)) = a1;
  sub_23F694CC8();
}

uint64_t (*Action.isConfirmed.modify())()
{
  type metadata accessor for Action(0);
  sub_23F6F0B5C();
  return nullsub_1;
}

uint64_t Action.parameterValues.getter()
{
  return sub_23F81F460(type metadata accessor for Action);
}

void Action.parameterValues.setter(uint64_t a1)
{
  sub_23F81F488(a1, type metadata accessor for Action);
}

uint64_t (*Action.parameterValues.modify())()
{
  type metadata accessor for Action(0);
  sub_23F6F0D38();
  return nullsub_1;
}

void Action.planEventId.getter()
{
  type metadata accessor for Action(0);
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void Action.planEventId.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_23F878E48();
  sub_23F6F096C();
  *v1 = v2;
  v1[1] = v0;
  sub_23F694C84();
}

uint64_t (*Action.planEventId.modify())()
{
  type metadata accessor for Action(0);
  return nullsub_1;
}

void Action.parameters.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for Action(0);
  sub_23F878FF8(*(int *)(v0 + 36));
}

uint64_t sub_23F81D144()
{
  swift_bridgeObjectRetain();
  return Action.parameters.setter();
}

uint64_t Action.parameters.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  sub_23F83BC6C();
  v2 = v1;
  sub_23F693E04();
  v3 = *(int *)(sub_23F878E9C() + 36);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + v3) = v2;
  return result;
}

void Action.ParameterValue.init(value:promptSelection:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;

  v2 = sub_23F6F0AE8();
  v3 = v1 + *(int *)(type metadata accessor for Action.ParameterValue(v2) + 20);
  v4 = sub_23FB2D040();
  sub_23F6B5A8C(v3, v5, v6, v4);
  sub_23F877F94(v0, v7, type metadata accessor for ToolParameterValue);
  v8 = sub_23F6B5FE0();
  sub_23F840E4C(v8, v9, v10);
  sub_23F694C84();
}

void Action.parameters.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 8) = v1;
  v4 = *(int *)(type metadata accessor for Action(0) + 36);
  *(_DWORD *)(a1 + 24) = v4;
  sub_23F878FF8(v4);
  *(_QWORD *)(a1 + 16) = v2;
  *(_QWORD *)a1 = v5;
  sub_23F6B6664();
}

void sub_23F81D264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F877640();
  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(int *)(v0 + 24);
  if ((v3 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_23F83BC6C();
    v5 = v4;
    sub_23F693E04();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + v2) = v5;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F83BC6C();
    v7 = v6;
    sub_23F693E04();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + v2) = v7;
    sub_23F6B647C();
  }
}

void Action.init(statementId:toolId:bundleId:deviceId:parameterValues:isConfirmed:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_23F87743C();
  v39 = v29;
  v40 = v30;
  v38 = v31;
  v33 = v32;
  sub_23F876AEC();
  v34 = type metadata accessor for Action(0);
  sub_23F8798EC();
  v36 = (_QWORD *)(v28 + v35);
  v37 = sub_23F6B58C8();
  *v36 = 0;
  v36[1] = 0;
  sub_23F877000(v37);
  sub_23F878C4C();
  *v25 = v27;
  v25[1] = v33;
  *v26 = v38;
  v26[1] = v39;
  *(_QWORD *)(v28 + *(int *)(v34 + 36)) = v40;
  *(_BYTE *)(v28 + *(int *)(v34 + 32)) = a25;
  sub_23F6F09E8();
}

void Action.init(statementId:toolId:bundleId:deviceId:parameterValues:isConfirmed:planEventId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29)
{
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  sub_23F877B80();
  v42 = v31;
  v43 = v32;
  v41 = v33;
  v40 = v34;
  sub_23F876AEC();
  v35 = (int *)type metadata accessor for Action(0);
  v36 = (_QWORD *)(v30 + v35[6]);
  v37 = (_QWORD *)(v30 + v35[7]);
  v38 = (_QWORD *)(v30 + v35[10]);
  v39 = sub_23F6B58C8();
  sub_23F877000(v39);
  sub_23F878C4C();
  *v36 = v29;
  v36[1] = v40;
  *v37 = v41;
  v37[1] = v42;
  *(_QWORD *)(v30 + v35[9]) = v43;
  *(_BYTE *)(v30 + v35[8]) = a27;
  *v38 = a28;
  v38[1] = a29;
  sub_23F6BC434();
}

void Action.init(exprId:toolId:bundleId:deviceId:parameterValues:isConfirmed:clientQueryId:planEventId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_23F87880C();
  v45 = v35;
  v46 = v36;
  v43 = v37;
  v44 = v38;
  sub_23F876AEC();
  swift_bridgeObjectRelease();
  v39 = (int *)type metadata accessor for Action(0);
  v40 = (_QWORD *)(v34 + v39[6]);
  v41 = (_QWORD *)(v34 + v39[7]);
  v42 = (_QWORD *)(v34 + v39[10]);
  sub_23F877A00();
  sub_23F8794BC(v39[5]);
  *v40 = v43;
  v40[1] = v44;
  *v41 = v45;
  v41[1] = v46;
  *(_QWORD *)(v34 + v39[9]) = a29;
  *(_BYTE *)(v34 + v39[8]) = a30;
  *v42 = a33;
  v42[1] = a34;
  sub_23F8770B4();
}

void Action.init(exprId:toolId:bundleId:deviceId:parameterValues:isConfirmed:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  int *v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F877B80();
  v40 = v28;
  v41 = v29;
  v39 = v30;
  v37 = v31;
  sub_23F878448();
  v38 = v32;
  v33 = (int *)type metadata accessor for Action(0);
  v34 = (_QWORD *)(v27 + v33[6]);
  v35 = (_QWORD *)(v27 + v33[7]);
  v36 = (_QWORD *)(v27 + v33[10]);
  sub_23F877A00();
  sub_23F8794BC(v33[5]);
  *v34 = v37;
  v34[1] = v39;
  *v35 = v40;
  v35[1] = v41;
  *(_QWORD *)(v27 + v33[9]) = a27;
  *(_BYTE *)(v27 + v33[8]) = v38;
  *v36 = 0;
  v36[1] = 0;
  sub_23F6BC434();
}

void Action.init(exprId:toolId:bundleId:deviceId:parameters:isConfirmed:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[92];

  sub_23F877B80();
  v15 = v3;
  v16 = v4;
  v13 = v5;
  v14 = v6;
  sub_23F878448();
  v17[0] = v7;
  v8 = (int *)sub_23F878E9C();
  sub_23F8798EC();
  v10 = (_QWORD *)(v2 + v9);
  sub_23F877A00();
  sub_23F8794BC(v8[5]);
  *v0 = v13;
  v0[1] = v14;
  *v1 = v15;
  v1[1] = v16;
  sub_23F83BC6C();
  v12 = v11;
  sub_23F6B6E44();
  *(_QWORD *)(v2 + v8[9]) = v12;
  *(_BYTE *)(v2 + v8[8]) = v17[0];
  *v10 = 0;
  v10[1] = 0;
  sub_23F6BC434();
}

void Action.init(id:variableName:variableDependencies:toolId:bundleId:deviceId:parameters:isConfirmed:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  _QWORD *v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  sub_23F87880C();
  v47 = v34;
  v45 = v35;
  v46 = v36;
  v48 = v37;
  v39 = v38;
  sub_23F878DB4();
  v40 = type metadata accessor for Action(0);
  sub_23F87726C(v40);
  v41 = (_QWORD *)(v39 + v33[5]);
  *v41 = v45;
  v41[1] = v46;
  sub_23F878278(v47);
  v43 = v42;
  sub_23F756640();
  sub_23F72E034();
  sub_23F877770();
  v44(v48);
  *(_QWORD *)(v39 + v33[9]) = v43;
  *(_BYTE *)(v39 + v33[8]) = a32;
  swift_bridgeObjectRelease();
  *v32 = 0;
  v32[1] = 0;
  sub_23F8770B4();
}

void Action.init(id:variableName:variableDependencies:toolId:bundleId:deviceId:parameters:)()
{
  _QWORD *v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_23F877B80();
  v15 = v2;
  v13 = v3;
  v14 = v4;
  v16 = v5;
  v7 = v6;
  sub_23F878DB4();
  v8 = type metadata accessor for Action(0);
  sub_23F87726C(v8);
  v9 = (_QWORD *)(v7 + v1[5]);
  *v9 = v13;
  v9[1] = v14;
  sub_23F878278(v15);
  v11 = v10;
  sub_23F756640();
  sub_23F72E034();
  sub_23F877770();
  v12(v16);
  *(_QWORD *)(v7 + v1[9]) = v11;
  *(_BYTE *)(v7 + v1[8]) = 0;
  swift_bridgeObjectRelease();
  *v0 = 0;
  v0[1] = 0;
  sub_23F6BC434();
}

void Action.id.modify(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = sub_23F72E034();
  *a1 = v2;
  v3 = *(_QWORD *)(v2 - 8);
  a1[1] = v3;
  v4 = sub_23F877D80(v3);
  sub_23F878E38((uint64_t)v4);
  sub_23F694CC8();
}

void Action.variableName.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_23F877DC4();
  *v0 = v2;
  v2[2] = v1;
  v3 = sub_23F6B58C8();
  v2[3] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[4] = v4;
  v2[5] = sub_23F877D80(v4);
  *v2 = StatementID.asExprId.getter();
  v2[1] = v5;
  sub_23F694C84();
}

void Action.variableDependencies.modify(uint64_t *a1)
{
  sub_23F6B6634();
  *a1 = sub_23FB2F050();
  sub_23F694CC8();
}

void Action.ParameterValue.value.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23F6F0D58();
  sub_23F83A800(v0, v1, type metadata accessor for ToolParameterValue);
}

void Action.ParameterValue.value.setter(uint64_t a1)
{
  uint64_t v1;

  sub_23F83B7F8(a1, v1, type metadata accessor for ToolParameterValue);
}

uint64_t (*Action.ParameterValue.value.modify())()
{
  return nullsub_1;
}

void Action.ParameterValue.promptSelection.getter()
{
  sub_23F81D874(type metadata accessor for Action.ParameterValue);
}

void sub_23F81D874(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = sub_23F6F08D8(a1);
  sub_23F877DD0(*(int *)(v1 + 20));
  sub_23F694C84();
}

void Action.ParameterValue.promptSelection.setter(uint64_t a1)
{
  sub_23F81D8AC(a1, type metadata accessor for Action.ParameterValue);
}

void sub_23F81D8AC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = sub_23F876B7C(a1, a2);
  sub_23F877B70(*(int *)(v2 + 20));
  sub_23F694C84();
}

uint64_t (*Action.ParameterValue.promptSelection.modify())()
{
  type metadata accessor for Action.ParameterValue(0);
  sub_23F6F099C();
  return nullsub_1;
}

#error "23F81D9A4: call analysis failed (funcsize=132)"

uint64_t sub_23F81DB2C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x655374706D6F7270 && a2 == 0xEF6E6F697463656CLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F81DC34(char a1)
{
  if ((a1 & 1) != 0)
    return 0x655374706D6F7270;
  else
    return 0x65756C6176;
}

uint64_t sub_23F81DC74()
{
  char *v0;

  return sub_23F81DC34(*v0);
}

uint64_t sub_23F81DC7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F81DB2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F81DCA0()
{
  sub_23F83EDFC();
  return sub_23FB2FD10();
}

uint64_t sub_23F81DCC8()
{
  sub_23F83EDFC();
  return sub_23FB2FD1C();
}

void Action.ParameterValue.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6D3DC4();
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EAC878);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F70D4B8();
  sub_23F83EDFC();
  sub_23F6B63A4();
  v5 = sub_23F878390();
  type metadata accessor for ToolParameterValue(v5);
  sub_23F6B4EEC((uint64_t)&unk_256EAC888);
  sub_23F876660();
  if (!v0)
  {
    type metadata accessor for Action.ParameterValue(0);
    sub_23F876854();
    sub_23FB2D040();
    sub_23F6B4EEC((uint64_t)&unk_256EAC890);
    sub_23F876834();
  }
  sub_23F6B56E0((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F70D9D8();
  sub_23F6D3710();
}

void Action.ParameterValue.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_23F6B5220();
  v3 = v2;
  v24 = v4;
  sub_23F6916B8(&qword_256EA2750);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v5);
  v25 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ToolParameterValue(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B5C10(v8, v24);
  v27 = sub_23F6916B8(&qword_256EAC898);
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F77DB24();
  type metadata accessor for Action.ParameterValue(v10);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F693EB0();
  v13 = v1 + *(int *)(v12 + 20);
  v14 = sub_23FB2D040();
  v29 = v13;
  v15 = sub_23F8778B4();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v15, v16, v17, v14);
  sub_23F876A18(v3);
  sub_23F83EDFC();
  sub_23F6B6DF4();
  if (v0)
  {
    v20 = sub_23F6B6E68();
    sub_23F879400(v20, &qword_256EA2750);
  }
  else
  {
    v28 = v14;
    v18 = (uint64_t)v25;
    sub_23F6B4EEC((uint64_t)&unk_256EAC8A0);
    sub_23F876F6C();
    v19 = v26;
    sub_23F7717EC();
    sub_23F83A7A4(v19, v1, type metadata accessor for ToolParameterValue);
    sub_23F6B6360();
    sub_23F6B4EEC((uint64_t)&unk_256EAC8A8);
    sub_23F87950C();
    v21 = sub_23F879468();
    sub_23F6B51EC(v21, v22);
    sub_23F8794B4(v18, v23, &qword_256EA2750);
    sub_23F876818(v1, v24);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v3);
    sub_23F876820(v1);
  }
  sub_23F8785C4();
  sub_23F6B5100();
}

uint64_t sub_23F81E034(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  char v12;

  v2 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x64496C6F6F74 && a2 == 0xE600000000000000;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6449656C646E7562 && a2 == 0xE800000000000000;
      if (v7 || (sub_23FB2FB78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6449656369766564 && a2 == 0xE800000000000000;
        if (v8 || (sub_23FB2FB78() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x7269666E6F437369 && a2 == 0xEB0000000064656DLL;
          if (v9 || (sub_23FB2FB78() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x6574656D61726170 && a2 == 0xEF7365756C615672;
            if (v10 || (sub_23FB2FB78() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0x6E6576456E616C70 && a2 == 0xEB00000000644974)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              v12 = sub_23FB2FB78();
              swift_bridgeObjectRelease();
              if ((v12 & 1) != 0)
                return 6;
              else
                return 7;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_23F81E360(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F81E39C + 4 * byte_23FB63378[a1]))(0x6E656D6574617473, 0xEB00000000644974);
}

uint64_t sub_23F81E39C()
{
  return 0x64496C6F6F74;
}

uint64_t sub_23F81E3B0()
{
  return 0x6449656C646E7562;
}

uint64_t sub_23F81E3DC()
{
  return 0x7269666E6F437369;
}

uint64_t sub_23F81E3FC()
{
  return 0x6574656D61726170;
}

uint64_t sub_23F81E420()
{
  return 0x6E6576456E616C70;
}

void sub_23F81E434()
{
  Action.ParameterValue.init(from:)();
}

void sub_23F81E448()
{
  Action.ParameterValue.encode(to:)();
}

uint64_t sub_23F81E460()
{
  unsigned __int8 *v0;

  return sub_23F81E360(*v0);
}

uint64_t sub_23F81E468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F81E034(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F81E48C()
{
  sub_23F83EE38();
  return sub_23FB2FD10();
}

uint64_t sub_23F81E4B4()
{
  sub_23F83EE38();
  return sub_23FB2FD1C();
}

void Action.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  char v7;
  _BYTE v8[16];
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;

  sub_23F6D3DC4();
  sub_23F876CB0();
  sub_23F6916B8(&qword_256EAC8B0);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F70D4B8();
  sub_23F83EE38();
  sub_23F6B63A4();
  v13 = 0;
  sub_23F6B58C8();
  sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
  sub_23F876F6C();
  sub_23F70D78C();
  if (!v0)
  {
    v6 = type metadata accessor for Action(0);
    v12 = 1;
    sub_23F70D90C();
    v11 = 2;
    sub_23F876B6C();
    v10 = 3;
    sub_23F876B6C();
    sub_23F8790A8();
    sub_23FB2FAE8();
    v9 = *(_QWORD *)(v1 + *(int *)(v6 + 36));
    v8[15] = 5;
    sub_23F6916B8(&qword_256EAC8C0);
    sub_23F83EE74();
    sub_23F70D78C();
    sub_23F878FE4();
    v8[14] = v7;
    sub_23F876B6C();
  }
  sub_23F6B56E0((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F878A78();
  sub_23F6D3710();
}

void Action.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  int *v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;

  sub_23F6B5220();
  v4 = v3;
  sub_23F6B58C8();
  sub_23F7F68B0();
  v24 = v5;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B59E0();
  sub_23F6916B8(&qword_256EAC8D8);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_23F6B5864();
  type metadata accessor for Action(v8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B5298();
  v11 = (uint64_t *)(v0 + v10[6]);
  *v11 = 0;
  v11[1] = 0;
  v29 = v11;
  v12 = (_QWORD *)(v0 + v10[7]);
  *v12 = 0;
  v12[1] = 0;
  v27 = v10;
  v28 = v12;
  v13 = (uint64_t *)(v0 + v10[10]);
  *v13 = 0;
  v13[1] = 0;
  v25 = (uint64_t)v4;
  v26 = v13;
  sub_23F6B6280(v4);
  sub_23F83EE38();
  sub_23F87893C();
  sub_23F7A02FC();
  if (v1)
  {
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v4);
    sub_23F7A01C8();
    sub_23F7A01C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    sub_23F876F6C();
    sub_23F6B6E1C();
    sub_23F78F5D0(v0, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 32));
    v14 = sub_23F70D944();
    sub_23F878CB8(v14, v15, v27[5]);
    sub_23F87780C();
    *v29 = sub_23F8779EC();
    v29[1] = v16;
    sub_23F8772E4();
    v17 = sub_23F8779EC();
    sub_23F879884(v17, v18, v28);
    *(_BYTE *)(v0 + v27[8]) = sub_23F8779E4() & 1;
    sub_23F6916B8(&qword_256EAC8C0);
    sub_23F83EEF8();
    sub_23F6B6E1C();
    *(_QWORD *)(v0 + v27[9]) = v30;
    v19 = sub_23F8779EC();
    v21 = v20;
    sub_23F877198();
    sub_23F878F8C();
    *v26 = v19;
    v26[1] = v21;
    v22 = sub_23F7D2F98();
    sub_23F876818(v22, v23);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v25);
    sub_23F876820(v0);
  }
  sub_23F6B6834();
  sub_23F6B5100();
}

uint64_t sub_23F81E9C8()
{
  return ClientAction.id.getter();
}

uint64_t sub_23F81E9E0()
{
  return ClientAction.variableDependencies.getter();
}

void sub_23F81E9F8()
{
  Action.init(from:)();
}

void sub_23F81EA0C()
{
  Action.encode(to:)();
}

void ActionCancellation.statementId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23F6F0D58();
  sub_23F7DCCDC(v0, v1, &qword_256EA49D8);
}

void ActionCancellation.statementId.setter(uint64_t a1)
{
  uint64_t v1;

  sub_23F840E4C(a1, v1, &qword_256EA49D8);
}

uint64_t (*ActionCancellation.statementId.modify())()
{
  return nullsub_1;
}

uint64_t ActionCancellation.cancelledActionStatementId.getter()
{
  return sub_23F811704(type metadata accessor for ActionCancellation);
}

uint64_t ActionCancellation.cancelledActionStatementId.setter(uint64_t a1)
{
  return sub_23F811750(a1, type metadata accessor for ActionCancellation);
}

uint64_t (*ActionCancellation.cancelledActionStatementId.modify())()
{
  type metadata accessor for ActionCancellation(0);
  sub_23F6F099C();
  return nullsub_1;
}

void ActionCancellation.exprId.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  void (*v6)(uint64_t);

  sub_23F6B6244();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F6B59F8();
  sub_23F876C10(v0, v0);
  v2 = sub_23F6B58C8();
  v3 = sub_23F6B5164(v0, 1, v2);
  if (v4)
  {
    sub_23F8797D0(v3, &qword_256EA49D8);
  }
  else
  {
    StatementID.asExprId.getter();
    v5 = sub_23F6B6190();
    v6(v5);
  }
  sub_23F6B5EE4();
  sub_23F694C84();
}

uint64_t ActionCancellation.init(statementId:cancelledActionStatementId:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;

  v4 = sub_23F6B58C8();
  v5 = sub_23F877898();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v5, v6, v7, v4);
  v8 = sub_23F6B68CC();
  sub_23F840E4C(v8, v9, v10);
  sub_23F878248();
  return sub_23F876AAC(a2 + v11, a1, v4, *(uint64_t (**)(void))(*(_QWORD *)(v4 - 8) + 32));
}

void ActionCancellation.init(statementId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(_QWORD);
  uint64_t v43;
  uint64_t *v44;

  sub_23F6B50E8();
  a19 = v24;
  a20 = v25;
  v27 = v26;
  v28 = type metadata accessor for ActionCancellation(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&a9 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_23F6B58C8();
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F6B5208();
  sub_23F6B5D68();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F6B62F8();
  v36 = sub_23F8772CC();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v36, v37, v38, v32);
  sub_23F877E74(v27, v22);
  sub_23F6B5164(v22, 1, v32);
  if (v39)
  {
    sub_23FB2C728();
    sub_23F7F6110(v22, &qword_256EA49D8);
  }
  else
  {
    sub_23F75E710(v20, v22, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 32));
  }
  sub_23F77E598((uint64_t)v31, 1);
  sub_23F840E4C(v21, (uint64_t)v31, &qword_256EA49D8);
  sub_23F75E710((uint64_t)&v31[*(int *)(v28 + 20)], v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 32));
  v40 = sub_23F70DC34();
  sub_23F83A7A4(v40, v41, v42);
  v43 = sub_23F77E668();
  sub_23F7F6110(v43, v44);
  sub_23F693DDC();
}

void ActionCancellation.init(exprId:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F6D3A90();
  v3 = v2;
  v4 = sub_23F6B58C8();
  sub_23F70D9A8();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F693EB0();
  sub_23F878A54();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23F8772CC();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v7, v8, v9, v4);
  sub_23F78F478();
  StatementID.init(fromExprId:)();
  sub_23F87731C(v3);
  v10 = sub_23F87886C();
  sub_23F840E4C(v10, v11, &qword_256EA49D8);
  sub_23F878248();
  sub_23F6D3ECC(v3 + v12, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32));
  sub_23F6B69E0();
}

uint64_t sub_23F81EDE4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023FB34BD0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F81EEE8(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD00000000000001ALL;
  else
    return 0x6E656D6574617473;
}

uint64_t sub_23F81EF2C()
{
  char *v0;

  return sub_23F81EEE8(*v0);
}

uint64_t sub_23F81EF34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F81EDE4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F81EF58()
{
  sub_23F83EF7C();
  return sub_23FB2FD10();
}

uint64_t sub_23F81EF80()
{
  sub_23F83EF7C();
  return sub_23FB2FD1C();
}

void ActionCancellation.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE v5[16];

  sub_23F6D3DC4();
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EAC8F0);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v5[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F70D4B8();
  sub_23F83EF7C();
  sub_23F6B63A4();
  v5[15] = 0;
  sub_23F6B58C8();
  sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
  sub_23F876834();
  if (!v0)
  {
    type metadata accessor for ActionCancellation(0);
    v5[14] = 1;
    sub_23F70D4F0();
  }
  sub_23F6B56E0((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F70D9D8();
  sub_23F6D3710();
}

void ActionCancellation.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[3];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_23F6B5220();
  v3 = v2;
  v22[1] = v4;
  v5 = sub_23F6B58C8();
  v22[0] = *(_QWORD *)(v5 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA49D8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B5C10(v8, v22[0]);
  v24 = sub_23F6916B8(&qword_256EAC900);
  sub_23F70D9A8();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F77DB24();
  v11 = type metadata accessor for ActionCancellation(v10);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23F8772CC();
  v23 = v5;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v15, v16, v17, v5);
  sub_23F87735C(v3);
  sub_23F83EF7C();
  sub_23F7A02FC();
  if (v0)
  {
    sub_23F6B6E68();
    sub_23F7F6110((uint64_t)v14, &qword_256EA49D8);
  }
  else
  {
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    sub_23F87950C();
    sub_23F840E4C(v22[2], (uint64_t)v14, &qword_256EA49D8);
    sub_23F877F84();
    v25 = v1;
    sub_23F7717EC();
    v18 = sub_23F879468();
    sub_23F6B563C(v18, v19);
    (*(void (**)(char *, uint64_t, uint64_t))(v22[0] + 32))(&v14[*(int *)(v11 + 20)], v25, v23);
    v20 = sub_23F72E2E0();
    sub_23F876818(v20, v21);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v3);
    sub_23F876820((uint64_t)v14);
  }
  sub_23F8785C4();
  sub_23F6B5100();
}

void sub_23F81F2A4()
{
  ActionCancellation.init(from:)();
}

void sub_23F81F2B8()
{
  ActionCancellation.encode(to:)();
}

uint64_t ClientAction.statementId.getter()
{
  return sub_23F839AEC();
}

uint64_t ClientAction.statementId.setter(uint64_t a1)
{
  return sub_23F839B28(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

uint64_t (*ClientAction.statementId.modify())()
{
  return nullsub_1;
}

void ClientAction.toolId.getter()
{
  sub_23F81CEB0(type metadata accessor for ClientAction);
}

void ClientAction.toolId.setter(uint64_t a1, uint64_t a2)
{
  sub_23F81F314(a1, a2, type metadata accessor for ClientAction);
}

void sub_23F81F314(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;

  sub_23F6B60B4(a1, a2, a3);
  sub_23F6F096C();
  *v3 = a1;
  v3[1] = a2;
  sub_23F694C84();
}

uint64_t (*ClientAction.toolId.modify())()
{
  sub_23F878270();
  sub_23F6F099C();
  return nullsub_1;
}

uint64_t ClientAction.parameters.getter()
{
  return sub_23F8221BC(type metadata accessor for ClientAction);
}

void ClientAction.parameters.setter(uint64_t a1)
{
  sub_23F8221E4(a1, type metadata accessor for ClientAction);
}

uint64_t (*ClientAction.parameters.modify())()
{
  sub_23F878270();
  sub_23F6F09C4();
  return nullsub_1;
}

void ClientAction.clientQueryId.getter()
{
  sub_23F81B864(type metadata accessor for ClientAction);
}

void ClientAction.clientQueryId.setter(uint64_t a1, uint64_t a2)
{
  sub_23F81CF9C(a1, a2, type metadata accessor for ClientAction);
}

uint64_t (*ClientAction.clientQueryId.modify())()
{
  sub_23F878270();
  sub_23F6F0A54();
  return nullsub_1;
}

void ClientAction.planEventId.getter()
{
  type metadata accessor for ClientAction(0);
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void ClientAction.planEventId.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = sub_23F8774B0();
  type metadata accessor for ClientAction(v3);
  sub_23F6F096C();
  *v1 = v2;
  v1[1] = v0;
  sub_23F694C84();
}

uint64_t (*ClientAction.planEventId.modify())()
{
  type metadata accessor for ClientAction(0);
  sub_23F6F0B5C();
  return nullsub_1;
}

uint64_t ClientAction.shimParameterResolution.getter()
{
  return sub_23F81F460(type metadata accessor for ClientAction);
}

uint64_t sub_23F81F460(uint64_t (*a1)(_QWORD))
{
  sub_23F876C04(a1);
  return swift_bridgeObjectRetain();
}

void ClientAction.shimParameterResolution.setter(uint64_t a1)
{
  sub_23F81F488(a1, type metadata accessor for ClientAction);
}

void sub_23F81F488(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(int *)(sub_23F6F0918(a1, a2) + 36);
  sub_23F8779DC();
  *(_QWORD *)(v2 + v4) = a1;
  sub_23F694C84();
}

uint64_t (*ClientAction.shimParameterResolution.modify())()
{
  sub_23F878270();
  sub_23F6F0D38();
  return nullsub_1;
}

void ClientAction.init(statementId:toolId:parameters:clientQueryId:planEventId:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  int *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_23F6B50E8();
  v30 = v1;
  v31 = v2;
  v28 = v3;
  v29 = v4;
  v6 = v5;
  v27 = v7;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  sub_23F6B58C8();
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B59F8();
  v15 = sub_23F77E19C();
  sub_23F759774(v15, v16, v17);
  sub_23F83BF30();
  v19 = v18;
  sub_23F6B56E0(v11, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  v20 = (int *)type metadata accessor for ClientAction(0);
  v21 = (_QWORD *)(v13 + v20[7]);
  v22 = (_QWORD *)(v13 + v20[8]);
  v23 = sub_23F6B69B8();
  sub_23F759774(v23, v24, v25);
  v26 = (_QWORD *)(v13 + v20[5]);
  *v26 = v9;
  v26[1] = v27;
  *(_QWORD *)(v13 + v20[6]) = v6;
  *(_QWORD *)(v13 + v20[9]) = v19;
  *v21 = v28;
  v21[1] = v29;
  *v22 = v30;
  v22[1] = v31;
  sub_23F693DDC();
}

void ClientAction.init(statementId:toolId:parameters:shimParameterResolution:clientQueryId:planEventId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_23F87743C();
  v39 = v25;
  v40 = v26;
  v38 = v27;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v34 = (int *)type metadata accessor for ClientAction(0);
  v35 = (_QWORD *)(v33 + v34[7]);
  v36 = (_QWORD *)(v33 + v34[8]);
  v37 = sub_23F6B58C8();
  sub_23F877000(v37);
  sub_23F878C4C();
  *(_QWORD *)(v33 + v34[6]) = v31;
  *(_QWORD *)(v33 + v34[9]) = v29;
  *v35 = v38;
  v35[1] = v39;
  *v36 = v40;
  v36[1] = a25;
  sub_23F6F09E8();
}

void ClientAction.init(statementId:toolId:shimParameterResolution:clientQueryId:planEventId:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  _QWORD *v18;
  _QWORD *v19;
  void (*v20)(uint64_t, uint64_t);
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_23F87743C();
  v23 = v0;
  v24 = v1;
  v22 = v2;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;
  sub_23F81F6E4(v5);
  v16 = v15;
  v17 = (int *)sub_23F878270();
  v18 = (_QWORD *)(v14 + v17[7]);
  v19 = (_QWORD *)(v14 + v17[8]);
  sub_23F6B58C8();
  sub_23F70D880();
  v20(v14, v12);
  v21 = (_QWORD *)(v14 + v17[5]);
  *v21 = v10;
  v21[1] = v8;
  *(_QWORD *)(v14 + v17[6]) = v16;
  *(_QWORD *)(v14 + v17[9]) = v6;
  *v18 = v4;
  v18[1] = v22;
  *v19 = v23;
  v19[1] = v24;
  sub_23F6F09E8();
}

void sub_23F81F6E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  unint64_t v52;
  BOOL v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD v56[2];
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  int64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int64_t v72;
  uint64_t v73;
  _QWORD v74[2];
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;

  v2 = type metadata accessor for ClientAction.ShimParameterResolution(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_23FB2ED38();
  v69 = *(_QWORD *)(v66 - 8);
  v6 = MEMORY[0x24BDAC7A8](v66);
  v65 = (char *)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v62 = (char *)v56 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v61 = (char *)v56 - v10;
  v11 = &qword_256EA2748;
  v70 = sub_23F6916B8(&qword_256EA2748);
  v12 = MEMORY[0x24BDAC7A8](v70);
  v60 = (_QWORD *)((char *)v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = MEMORY[0x24BDAC7A8](v12);
  v68 = (_QWORD *)((char *)v56 - v15);
  MEMORY[0x24BDAC7A8](v14);
  v67 = (char *)v56 - v16;
  v78 = MEMORY[0x24BEE4B00];
  sub_23F78F084(a1, v74);
  v71 = v74[0];
  v63 = v74[1];
  v72 = v76;
  v17 = v77;
  v56[0] = v75;
  v64 = (unint64_t)(v75 + 64) >> 6;
  swift_bridgeObjectRetain();
  v59 = v2;
  v58 = v3;
  v57 = v5;
  while (1)
  {
    while (1)
    {
      if (v17)
      {
        v73 = (v17 - 1) & v17;
        v18 = __clz(__rbit64(v17)) | (v72 << 6);
      }
      else
      {
        v19 = v72 + 1;
        if (__OFADD__(v72, 1))
          goto LABEL_37;
        if (v19 >= v64)
          goto LABEL_35;
        v20 = *(_QWORD *)(v63 + 8 * v19);
        v21 = v72 + 1;
        if (!v20)
        {
          v21 = v72 + 2;
          if (v72 + 2 >= v64)
            goto LABEL_35;
          v20 = *(_QWORD *)(v63 + 8 * v21);
          if (!v20)
          {
            v21 = v72 + 3;
            if (v72 + 3 >= v64)
              goto LABEL_35;
            v20 = *(_QWORD *)(v63 + 8 * v21);
            if (!v20)
            {
              v21 = v72 + 4;
              if (v72 + 4 >= v64)
                goto LABEL_35;
              v20 = *(_QWORD *)(v63 + 8 * v21);
              if (!v20)
              {
                v21 = v72 + 5;
                if (v72 + 5 >= v64)
                  goto LABEL_35;
                v20 = *(_QWORD *)(v63 + 8 * v21);
                if (!v20)
                {
                  v22 = v72 + 6;
                  while (v22 < v64)
                  {
                    v20 = *(_QWORD *)(v63 + 8 * v22++);
                    if (v20)
                    {
                      v21 = v22 - 1;
                      goto LABEL_19;
                    }
                  }
LABEL_35:
                  sub_23F6BC278();
                  return;
                }
              }
            }
          }
        }
LABEL_19:
        v72 = v21;
        v73 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      v23 = v70;
      v24 = (uint64_t *)(*(_QWORD *)(v71 + 48) + 16 * v18);
      v26 = *v24;
      v25 = v24[1];
      v27 = v67;
      sub_23F83A800(*(_QWORD *)(v71 + 56) + *(_QWORD *)(v3 + 72) * v18, (uint64_t)&v67[*(int *)(v70 + 48)], type metadata accessor for ClientAction.ShimParameterResolution);
      *v27 = v26;
      v27[1] = v25;
      v28 = (uint64_t)v27;
      v29 = v68;
      sub_23F7AE8D8(v28, (uint64_t)v68, v11);
      v30 = v11;
      v31 = (uint64_t)v29 + *(int *)(v23 + 48);
      sub_23F83A800(v31, (uint64_t)v5, type metadata accessor for ClientAction.ShimParameterResolution);
      if (swift_getEnumCaseMultiPayload() != 1)
        break;
      swift_bridgeObjectRetain();
      sub_23F83A7D4((uint64_t)v5, type metadata accessor for ClientAction.ShimParameterResolution);
      sub_23F7F6110((uint64_t)v29, v30);
      v11 = v30;
      v17 = v73;
    }
    v32 = *(void (**)(char *, char *, uint64_t))(v69 + 32);
    v33 = v62;
    v34 = v5;
    v35 = v66;
    v32(v62, v34, v66);
    v36 = v61;
    v32(v61, v33, v35);
    v37 = *(int *)(v23 + 48);
    v38 = v60;
    v39 = (uint64_t)v60 + v37;
    v40 = *v29;
    v41 = v29[1];
    *v60 = v40;
    v38[1] = v41;
    v42 = (uint64_t)v38 + v37;
    sub_23F83A7A4(v31, v39, type metadata accessor for ClientAction.ShimParameterResolution);
    v32(v65, v36, v35);
    v43 = v78;
    if (*(_QWORD *)(v78 + 24) <= *(_QWORD *)(v78 + 16))
    {
      swift_bridgeObjectRetain();
      sub_23FB1FFAC();
      v43 = v78;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    sub_23FB2FC5C();
    sub_23FB2F200();
    v44 = sub_23FB2FC8C();
    v45 = v43 + 64;
    v46 = -1 << *(_BYTE *)(v43 + 32);
    v47 = v44 & ~v46;
    v48 = v47 >> 6;
    v49 = v69;
    if (((-1 << v47) & ~*(_QWORD *)(v43 + 64 + 8 * (v47 >> 6))) == 0)
      break;
    v50 = __clz(__rbit64((-1 << v47) & ~*(_QWORD *)(v43 + 64 + 8 * (v47 >> 6)))) | v47 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(_QWORD *)(v45 + ((v50 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v50;
    v55 = (_QWORD *)(*(_QWORD *)(v43 + 48) + 16 * v50);
    *v55 = v40;
    v55[1] = v41;
    v32((char *)(*(_QWORD *)(v43 + 56) + *(_QWORD *)(v49 + 72) * v50), v65, v66);
    ++*(_QWORD *)(v43 + 16);
    sub_23F83A7D4(v42, type metadata accessor for ClientAction.ShimParameterResolution);
    v3 = v58;
    v5 = v57;
    v11 = &qword_256EA2748;
    v17 = v73;
  }
  v51 = 0;
  v52 = (unint64_t)(63 - v46) >> 6;
  while (++v48 != v52 || (v51 & 1) == 0)
  {
    v53 = v48 == v52;
    if (v48 == v52)
      v48 = 0;
    v51 |= v53;
    v54 = *(_QWORD *)(v45 + 8 * v48);
    if (v54 != -1)
    {
      v50 = __clz(__rbit64(~v54)) + (v48 << 6);
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
}

void ClientAction.init(statementId:toolId:parameters:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  int *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v9 = sub_23F877104();
  v10 = (int *)type metadata accessor for ClientAction(v9);
  v11 = (_QWORD *)(v6 + v10[7]);
  *v11 = 0;
  v11[1] = 0;
  v12 = (_QWORD *)(v6 + v10[8]);
  v13 = sub_23F6B58C8();
  *v12 = 0;
  v12[1] = 0;
  v14 = *(_QWORD *)(v13 - 8);
  v15 = sub_23F6B6098();
  sub_23F6B5EF0(v15, v16, v17);
  v18 = (_QWORD *)(v6 + v10[5]);
  *v18 = v4;
  v18[1] = a3;
  *(_QWORD *)(v6 + v10[6]) = a4;
  sub_23F6B5508();
  sub_23F83BF30();
  v20 = v19;
  sub_23F693E04();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v5, v13);
  *(_QWORD *)(v6 + v10[9]) = v20;
  sub_23F87804C();
}

void ClientAction.init(exprId:toolId:parameters:clientQueryId:planEventId:)()
{
  uint64_t v0;

  sub_23F6B50E8();
  sub_23F876AEC();
  sub_23F6B58C8();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F6B5298();
  sub_23F877A00();
  sub_23F7D2F98();
  ClientAction.init(statementId:toolId:parameters:clientQueryId:planEventId:)();
  sub_23F693DDC();
}

void ClientAction.init(exprId:toolId:parameters:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F6D3A90();
  sub_23F6B58C8();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F878580();
  sub_23F6B6098();
  StatementID.init(fromExprId:)();
  sub_23F8789E8(v0);
  sub_23F6B69E0();
}

void ClientAction.init(id:variableName:variableDependencies:toolId:parameters:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);

  sub_23F6B50E8();
  v2 = v1;
  sub_23F6B58C8();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B5268();
  sub_23F6B5908();
  sub_23F72E3F8();
  StatementID.init(fromExprId:)();
  sub_23F8789E8(v0);
  sub_23F72E034();
  sub_23F877770();
  v4(v2);
  sub_23F693DDC();
}

void sub_23F81FF04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  sub_23F72E034();
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B6B5C();
  sub_23F7B0990(v5, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 16));
  a5(v5);
  sub_23F694C84();
}

uint64_t _s30IntelligenceFlowPlannerSupport6ActionV2id10Foundation4UUIDVvs_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23F72E034();
  v0 = sub_23F87922C();
  return sub_23F8776C4(v0, v1, v2);
}

void ClientAction.id.modify(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = sub_23F72E034();
  *a1 = v2;
  v3 = *(_QWORD *)(v2 - 8);
  a1[1] = v3;
  v4 = sub_23F877D80(v3);
  sub_23F878E38((uint64_t)v4);
  sub_23F694CC8();
}

void sub_23F81FFB8(uint64_t a1)
{
  void *v1;

  v1 = *(void **)(a1 + 16);
  sub_23F759768(*(_QWORD *)(a1 + 8));
  free(v1);
}

uint64_t sub_23F81FFE4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return ClientAction.variableName.setter(v1, v2);
}

void _s30IntelligenceFlowPlannerSupport6ActionV12variableNameSSvs_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  sub_23F6B58C8();
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F693EB0();
  StatementID.init(fromExprId:)();
  v1 = sub_23F6B689C();
  sub_23F6B633C(v1, v2, v3);
  sub_23F6B5F7C();
}

void ClientAction.variableName.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_23F877DC4();
  *v0 = v2;
  v2[2] = v1;
  v3 = sub_23F6B58C8();
  v2[3] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[4] = v4;
  v2[5] = sub_23F877D80(v4);
  *v2 = StatementID.asExprId.getter();
  v2[1] = v5;
  sub_23F694C84();
}

void sub_23F8200D8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  sub_23F6D3A90();
  v1 = *(void **)v0;
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  v2 = *(void **)(*(_QWORD *)v0 + 40);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if ((v5 & 1) != 0)
  {
    sub_23F77DCD4();
    sub_23F878CA8();
    sub_23F72E0C8(v4, (uint64_t)v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 40));
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F878CA8();
    sub_23F72E0C8(v4, (uint64_t)v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 40));
  }
  free(v2);
  sub_23F8778F4(v1);
}

uint64_t ClientAction.variableDependencies.getter()
{
  sub_23F6B6634();
  return sub_23FB2F050();
}

uint64_t sub_23F82017C()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return ClientAction.variableDependencies.setter(v0);
}

void ClientAction.variableDependencies.modify(uint64_t *a1)
{
  sub_23F6B6634();
  *a1 = sub_23FB2F050();
  sub_23F694CC8();
}

uint64_t destroy for QueryDecorationPrePlannerResultPayload()
{
  return swift_bridgeObjectRelease();
}

void static ClientAction.ShimParameterResolution.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  void (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_23F6B50E8();
  v27 = v5;
  v28 = v6;
  type metadata accessor for ClientAction.UnresolvedParameterValue(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F77DB24();
  sub_23FB2ED38();
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23F78F260();
  type metadata accessor for ClientAction.ShimParameterResolution(v9);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F876D18();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B62F8();
  sub_23F6916B8(&qword_256EA2738);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F7A0184();
  v14 = v0 + v13;
  sub_23F83A800(v27, v0, type metadata accessor for ClientAction.ShimParameterResolution);
  sub_23F83A800(v28, v14, type metadata accessor for ClientAction.ShimParameterResolution);
  v15 = sub_23F72DF38();
  if ((_DWORD)v15 != 1)
  {
    sub_23F877DEC(v15, v16, type metadata accessor for ClientAction.ShimParameterResolution);
    if (sub_23F72DF38() != 1)
    {
      v19 = sub_23F8790C8();
      sub_23F6D3ECC(v19, v20, v21);
      sub_23F6B6224();
      sub_23FB2ED14();
      v22 = *(void (**)(uint64_t))(v1 + 8);
      v23 = sub_23F6B6F88();
      v22(v23);
      v24 = sub_23F72E430();
      v25 = ((uint64_t (*)(uint64_t))v22)(v24);
      sub_23F876A50(v25, type metadata accessor for ClientAction.ShimParameterResolution);
      goto LABEL_11;
    }
    v18 = sub_23F7B0990(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    goto LABEL_8;
  }
  sub_23F877BB0(v0, v16, type metadata accessor for ClientAction.ShimParameterResolution);
  v17 = sub_23F72DF38();
  if ((_DWORD)v17 != 1)
  {
    sub_23F879680(v17, type metadata accessor for ClientAction.UnresolvedParameterValue);
LABEL_8:
    sub_23F876B14(v18, &qword_256EA2738);
    goto LABEL_11;
  }
  sub_23F83A7A4(v14, v4, type metadata accessor for ClientAction.UnresolvedParameterValue);
  sub_23F879688();
  if ((sub_23FB2ED14() & 1) != 0)
    sub_23F695888();
  sub_23F876820(v4);
  sub_23F876820(v2);
  sub_23F876A50(v26, type metadata accessor for ClientAction.ShimParameterResolution);
LABEL_11:
  sub_23F6B5694();
  sub_23F693DDC();
}

void static ClientAction.UnresolvedParameterValue.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_23F803098(a1, a2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEB99D0]);
}

uint64_t sub_23F820444(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6465766C6F736572 && a2 == 0xE800000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x766C6F7365726E75 && a2 == 0xEA00000000006465)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F82053C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x766C6F7365726E75;
  else
    return 0x6465766C6F736572;
}

uint64_t sub_23F820578()
{
  char *v0;

  return sub_23F82053C(*v0);
}

uint64_t sub_23F820580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F820444(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F8205A4()
{
  sub_23F83EFE0();
  return sub_23FB2FD10();
}

uint64_t sub_23F8205CC()
{
  sub_23F83EFE0();
  return sub_23FB2FD1C();
}

uint64_t sub_23F8205F4()
{
  sub_23F83F058();
  return sub_23FB2FD10();
}

uint64_t sub_23F82061C()
{
  sub_23F83F058();
  return sub_23FB2FD1C();
}

uint64_t sub_23F820644()
{
  sub_23F83F01C();
  return sub_23FB2FD10();
}

uint64_t sub_23F82066C()
{
  sub_23F83F01C();
  return sub_23FB2FD1C();
}

void ClientAction.ShimParameterResolution.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  uint64_t (*v26)(uint64_t, uint64_t);
  uint64_t v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  sub_23F6B5220();
  v37 = v1;
  v34 = v0;
  v7 = v6;
  v8 = sub_23F6916B8(&qword_256EAC908);
  v32 = *(_QWORD *)(v8 - 8);
  v33 = v8;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v31 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F6D398C();
  v27[1] = type metadata accessor for ClientAction.UnresolvedParameterValue(v11);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B57BC(v13, v27[0]);
  v29 = sub_23F6916B8(&qword_256EAC910);
  v27[0] = *(_QWORD *)(v29 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F7A00C8();
  v28 = sub_23FB2ED38();
  v35 = *(_QWORD *)(v28 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F877C40();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B5268();
  v36 = sub_23F6916B8(&qword_256EAC918);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F693EB0();
  sub_23F87735C(v7);
  sub_23F83EFE0();
  sub_23F87902C();
  sub_23FB2FCC8();
  sub_23F83A800(v34, v4, type metadata accessor for ClientAction.ShimParameterResolution);
  sub_23F6B6854();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = v30;
    sub_23F877BA4(v4);
    sub_23F8793B0();
    sub_23F6B5610();
    sub_23F70D58C((uint64_t)&unk_256EAC930);
    sub_23F879154();
    sub_23F7B0D3C();
    v19 = sub_23F877E64();
    sub_23F6B563C(v19, v20);
    sub_23F877068(v18);
  }
  else
  {
    v21 = sub_23F878A5C();
    sub_23F75E68C(v21, v22, v23);
    sub_23F83F058();
    sub_23F6B5610();
    sub_23F6B4EEC((uint64_t)&qword_256EA7170);
    sub_23F7B0D3C();
    v24 = sub_23F6B61DC();
    sub_23F70D728(v24, v25);
    sub_23F878B00();
    sub_23F6B5900(v3, v26);
  }
  sub_23F6B530C(v2, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_23F8778A8();
  sub_23F6B5100();
}

void ClientAction.ShimParameterResolution.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;

  sub_23F6B5220();
  v3 = v2;
  v35 = v4;
  v37 = *(_QWORD *)(sub_23F6916B8(&qword_256EAC940) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B5C10(v6, v30);
  v36 = *(_QWORD *)(sub_23F6916B8(&qword_256EAC948) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B5420(v8, v31);
  v38 = *(_QWORD *)(sub_23F6916B8(&qword_256EAC950) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F877C40();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F876AD4();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F876754(v3);
  sub_23F83EFE0();
  sub_23F6B5DA0();
  if (v0)
    goto LABEL_8;
  v13 = sub_23F877878();
  v14 = v1;
  if (!*(_QWORD *)(v13 + 16)
    || (v15 = *(_BYTE *)(v13 + 32),
        v16 = sub_23F70D968(),
        sub_23F6B4E44(v16, v17, v18, v19, v20, v21),
        v23 = v22,
        v25 = v24,
        sub_23F6B6E44(),
        v23 != v25 >> 1))
  {
    sub_23F6B6334();
    sub_23F6B5AD4();
    sub_23F6916B8(&qword_256EA1870);
    sub_23F877E7C();
    v28 = sub_23F6B56B8();
    sub_23F6B6650(v28, *MEMORY[0x24BEE26D0]);
    sub_23F87774C();
    sub_23F6B5770();
    sub_23F6B56E0(v14, *(uint64_t (**)(uint64_t, uint64_t))(v38 + 8));
    v3 = v39;
LABEL_8:
    v29 = (uint64_t)v3;
    goto LABEL_9;
  }
  if ((v15 & 1) != 0)
  {
    sub_23F8793B0();
    sub_23F7B0AA8();
    v26 = type metadata accessor for ClientAction.UnresolvedParameterValue(0);
    sub_23F6B4EEC((uint64_t)&unk_256EAC958);
    v27 = v33;
    sub_23F8766D4();
    sub_23F879018();
    sub_23F7B0A0C(v37);
  }
  else
  {
    sub_23F83F058();
    sub_23F7B0AA8();
    v26 = sub_23F6B6634();
    sub_23F6B4EEC((uint64_t)&qword_256EA7188);
    v27 = v34;
    sub_23F8766D4();
    sub_23F879018();
    sub_23F7B0A0C(v36);
  }
  sub_23F6B5770();
  sub_23F6B56E0(v14, *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
  swift_storeEnumTagMultiPayload();
  sub_23F87815C(v27, v32);
  sub_23F87815C(v32, v35);
  v29 = (uint64_t)v39;
LABEL_9:
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v29);
  sub_23F6B6CA0();
  sub_23F6B5100();
}

void sub_23F820CB0()
{
  ClientAction.ShimParameterResolution.init(from:)();
}

void sub_23F820CC4()
{
  ClientAction.ShimParameterResolution.encode(to:)();
}

uint64_t ClientAction.UnresolvedParameterValue.raw.getter()
{
  return sub_23F839AEC();
}

uint64_t ClientAction.UnresolvedParameterValue.raw.setter(uint64_t a1)
{
  return sub_23F839B28(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18]);
}

uint64_t (*ClientAction.UnresolvedParameterValue.raw.modify())()
{
  return nullsub_1;
}

uint64_t ClientAction.UnresolvedParameterValue.candidates.getter()
{
  return sub_23F821B50(type metadata accessor for ClientAction.UnresolvedParameterValue);
}

void ClientAction.UnresolvedParameterValue.candidates.setter(uint64_t a1)
{
  sub_23F821B78(a1, type metadata accessor for ClientAction.UnresolvedParameterValue);
}

uint64_t (*ClientAction.UnresolvedParameterValue.candidates.modify())()
{
  type metadata accessor for ClientAction.UnresolvedParameterValue(0);
  sub_23F6F099C();
  return nullsub_1;
}

void ClientAction.UnresolvedParameterValue.init(raw:candidates:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23F821BDC(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18], a3);
}

uint64_t sub_23F820D50(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 7823730 && a2 == 0xE300000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74616469646E6163 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F820E38(char a1)
{
  if ((a1 & 1) != 0)
    return 0x74616469646E6163;
  else
    return 7823730;
}

uint64_t sub_23F820E6C()
{
  char *v0;

  return sub_23F820E38(*v0);
}

uint64_t sub_23F820E74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F820D50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F820E98()
{
  sub_23F83F094();
  return sub_23FB2FD10();
}

uint64_t sub_23F820EC0()
{
  sub_23F83F094();
  return sub_23FB2FD1C();
}

void ClientAction.UnresolvedParameterValue.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE v6[32];

  sub_23F6D3DC4();
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EAC960);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v6[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F70D4B8();
  sub_23F83F094();
  sub_23F6B63A4();
  v6[31] = 0;
  sub_23F6B6634();
  sub_23F6B4EEC((uint64_t)&qword_256EA7170);
  sub_23F876660();
  if (!v0)
  {
    v5 = type metadata accessor for ClientAction.UnresolvedParameterValue(0);
    sub_23F877974(v5);
    sub_23F6916B8(&qword_256EA9260);
    sub_23F83F0D0();
    sub_23F70D4F0();
  }
  sub_23F6B56E0((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F70D9D8();
  sub_23F6D3710();
}

void ClientAction.UnresolvedParameterValue.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_23F6B5220();
  v3 = v2;
  v14 = v4;
  sub_23F6B6634();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B5C10(v6, v11);
  sub_23F6916B8(&qword_256EAC970);
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_23F6B5C2C();
  type metadata accessor for ClientAction.UnresolvedParameterValue(v8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v10 = v3[4];
  sub_23F70D6E4(v3);
  sub_23F83F094();
  sub_23F8771B0();
  if (v0)
  {
    sub_23F6B6E34();
  }
  else
  {
    sub_23F878128();
    sub_23F6B4EEC((uint64_t)&qword_256EA7188);
    sub_23F6B6E1C();
    sub_23F877500();
    sub_23F6916B8(&qword_256EA9260);
    sub_23F6B6360();
    sub_23F83F14C();
    sub_23F6B6E1C();
    sub_23F6B563C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
    sub_23F878BE0();
    sub_23F876818(v10, v14);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v12);
    sub_23F876820(v10);
  }
  sub_23F6B6834();
  sub_23F6B5100();
}

uint64_t sub_23F8211B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v10;

  v2 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x64496C6F6F74 && a2 == 0xE600000000000000;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6574656D61726170 && a2 == 0xEA00000000007372;
      if (v7 || (sub_23FB2FB78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x7551746E65696C63 && a2 == 0xED00006449797265;
        if (v8 || (sub_23FB2FB78() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x6E6576456E616C70 && a2 == 0xEB00000000644974;
          if (v9 || (sub_23FB2FB78() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0xD000000000000017 && a2 == 0x800000023FB34BF0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v10 = sub_23FB2FB78();
            swift_bridgeObjectRelease();
            if ((v10 & 1) != 0)
              return 5;
            else
              return 6;
          }
        }
      }
    }
  }
}

uint64_t sub_23F821474(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F8214B0 + 4 * byte_23FB6337F[a1]))(0x6E656D6574617473, 0xEB00000000644974);
}

uint64_t sub_23F8214B0()
{
  return 0x64496C6F6F74;
}

uint64_t sub_23F8214C4()
{
  return 0x6574656D61726170;
}

uint64_t sub_23F8214E0()
{
  return 0x7551746E65696C63;
}

uint64_t sub_23F821504()
{
  return 0x6E6576456E616C70;
}

unint64_t sub_23F821518()
{
  return 0xD000000000000017;
}

void sub_23F821538()
{
  ClientAction.UnresolvedParameterValue.init(from:)();
}

void sub_23F82154C()
{
  ClientAction.UnresolvedParameterValue.encode(to:)();
}

uint64_t sub_23F821560()
{
  unsigned __int8 *v0;

  return sub_23F821474(*v0);
}

uint64_t sub_23F821568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F8211B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F82158C()
{
  sub_23F83F1C8();
  return sub_23FB2FD10();
}

uint64_t sub_23F8215B4()
{
  sub_23F83F1C8();
  return sub_23FB2FD1C();
}

void ClientAction.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  char v7;
  _BYTE v8[8];
  uint64_t v9;

  sub_23F6D3DC4();
  sub_23F876CB0();
  sub_23F6916B8(&qword_256EAC978);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F70D4B8();
  sub_23F83F1C8();
  sub_23F6B63A4();
  LOBYTE(v9) = 0;
  sub_23F6B58C8();
  sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
  sub_23F70D78C();
  if (!v0)
  {
    v6 = type metadata accessor for ClientAction(0);
    LOBYTE(v9) = 1;
    sub_23F70D90C();
    sub_23F8788B8();
    sub_23F6916B8(&qword_256EA7160);
    sub_23F8799C8();
    sub_23F70D78C();
    sub_23F8790D4();
    sub_23F876B6C();
    sub_23F877ED8();
    LOBYTE(v9) = v7;
    sub_23F876B6C();
    v9 = *(_QWORD *)(v1 + *(int *)(v6 + 36));
    v8[7] = 5;
    sub_23F6916B8(&qword_256EAC988);
    sub_23F83F204();
    sub_23F70D78C();
  }
  sub_23F6B56E0((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F878A78();
  sub_23F6D3710();
}

void ClientAction.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t *v36;
  uint64_t *v37;

  sub_23F6B5220();
  v13 = v12;
  v34 = v14;
  sub_23F6B58C8();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B59E0();
  sub_23F6916B8(&qword_256EAC9A0);
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v16);
  v17 = sub_23F77DB24();
  type metadata accessor for ClientAction(v17);
  sub_23F693E20();
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = sub_23F877C5C(v19, v20, v33);
  v36 = v22;
  v35 = (int *)v21;
  v23 = (uint64_t *)(v11 + *(int *)(v21 + 32));
  *v23 = 0;
  v23[1] = 0;
  v37 = v23;
  sub_23F8773E8();
  sub_23F83F1C8();
  sub_23F878958();
  sub_23F7A02FC();
  if (v10)
  {
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v13);
    sub_23F878C90();
    sub_23F7A01C8();
  }
  else
  {
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    sub_23F8791DC();
    sub_23F6B6E1C();
    v24 = sub_23F87781C();
    sub_23F78F5D0(v24, v25, v26);
    LOBYTE(a10) = 1;
    v27 = sub_23F70D944();
    sub_23F87949C(v27, v28, v35[5]);
    sub_23F6916B8(&qword_256EA7160);
    sub_23F878018();
    sub_23F7323F0();
    sub_23F6B6E1C();
    *(_QWORD *)(v11 + v35[6]) = a10;
    sub_23F8790D4();
    *v36 = sub_23F8779EC();
    v36[1] = v29;
    LOBYTE(a10) = 4;
    *v37 = sub_23F8779EC();
    v37[1] = v30;
    sub_23F6916B8(&qword_256EAC988);
    sub_23F83F288();
    sub_23F6B6E1C();
    v31 = sub_23F877F1C();
    v32(v31);
    *(_QWORD *)(v11 + v35[9]) = a10;
    sub_23F878194(v11, v34);
    sub_23F877354();
    sub_23F877068(v11);
  }
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23F821AF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  ClientAction.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F821B04()
{
  ClientAction.encode(to:)();
}

uint64_t QueryStep.statementId.getter()
{
  return sub_23F839AEC();
}

uint64_t QueryStep.statementId.setter(uint64_t a1)
{
  return sub_23F839B28(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

uint64_t (*QueryStep.statementId.modify())()
{
  return nullsub_1;
}

uint64_t QueryStep.queries.getter()
{
  return sub_23F821B50(type metadata accessor for QueryStep);
}

uint64_t sub_23F821B50(uint64_t (*a1)(_QWORD))
{
  sub_23F876C04(a1);
  return swift_bridgeObjectRetain();
}

void QueryStep.queries.setter(uint64_t a1)
{
  sub_23F821B78(a1, type metadata accessor for QueryStep);
}

void sub_23F821B78(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(int *)(sub_23F6F0918(a1, a2) + 20);
  sub_23F8779DC();
  *(_QWORD *)(v2 + v4) = a1;
  sub_23F694C84();
}

uint64_t (*QueryStep.queries.modify())()
{
  type metadata accessor for QueryStep(0);
  sub_23F6F099C();
  return nullsub_1;
}

void QueryStep.init(statementId:queries:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23F821BDC(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140], a3);
}

void sub_23F821BDC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;

  v6 = sub_23F6B60B4(a1, a2, a3);
  sub_23F70D6B4(v6);
  *(_QWORD *)(a4 + *(int *)(sub_23F8770FC() + 20)) = a2;
  sub_23F694C84();
}

uint64_t sub_23F821C18(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73656972657571 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F821D1C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x73656972657571;
  else
    return 0x6E656D6574617473;
}

uint64_t sub_23F821D5C()
{
  char *v0;

  return sub_23F821D1C(*v0);
}

uint64_t sub_23F821D64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F821C18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F821D88()
{
  sub_23F83F30C();
  return sub_23FB2FD10();
}

uint64_t sub_23F821DB0()
{
  sub_23F83F30C();
  return sub_23FB2FD1C();
}

void QueryStep.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t Step;
  _BYTE v6[32];

  sub_23F6D3DC4();
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EAC9B8);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v6[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F70D4B8();
  sub_23F83F30C();
  sub_23F6B63A4();
  v6[31] = 0;
  sub_23F6B58C8();
  sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
  sub_23F876660();
  if (!v0)
  {
    Step = type metadata accessor for QueryStep(0);
    sub_23F877974(Step);
    sub_23F6916B8(&qword_256EAC9C8);
    sub_23F83F348();
    sub_23F70D4F0();
  }
  sub_23F6B56E0((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F70D9D8();
  sub_23F6D3710();
}

void QueryStep.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_23F6B5220();
  v3 = v2;
  v14 = v4;
  sub_23F6B58C8();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B5C10(v6, v11);
  sub_23F6916B8(&qword_256EAC9E0);
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_23F6B5C2C();
  type metadata accessor for QueryStep(v8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v10 = v3[4];
  sub_23F70D6E4(v3);
  sub_23F83F30C();
  sub_23F8771B0();
  if (v0)
  {
    sub_23F6B6E34();
  }
  else
  {
    sub_23F878128();
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    sub_23F6B6E1C();
    sub_23F877500();
    sub_23F6916B8(&qword_256EAC9C8);
    sub_23F6B6360();
    sub_23F83F3C4();
    sub_23F6B6E1C();
    sub_23F6B563C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
    sub_23F878BE0();
    sub_23F876818(v10, v14);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v12);
    sub_23F876820(v10);
  }
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23F8220A4()
{
  QueryStep.init(from:)();
}

void sub_23F8220B8()
{
  QueryStep.encode(to:)();
}

void ParameterQuery.context.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23F6F0D58();
  sub_23F83A800(v0, v1, type metadata accessor for ActionParameterContext);
}

void ParameterQuery.context.setter(uint64_t a1)
{
  uint64_t v1;

  sub_23F83B7F8(a1, v1, type metadata accessor for ActionParameterContext);
}

uint64_t (*ParameterQuery.context.modify())()
{
  return nullsub_1;
}

void ParameterQuery.data.getter()
{
  sub_23F822134(type metadata accessor for ParameterQuery);
}

void sub_23F822134(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = sub_23F6F08D8(a1);
  sub_23F878DF4(*(int *)(v1 + 20));
  sub_23F694C84();
}

void ParameterQuery.data.setter(uint64_t a1)
{
  sub_23F82216C(a1, type metadata accessor for ParameterQuery);
}

void sub_23F82216C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = sub_23F876B7C(a1, a2);
  sub_23F878AF0(*(int *)(v2 + 20));
  sub_23F694C84();
}

uint64_t (*ParameterQuery.data.modify())()
{
  sub_23F8786F8();
  sub_23F6F099C();
  return nullsub_1;
}

uint64_t ParameterQuery.dependencies.getter()
{
  return sub_23F8221BC(type metadata accessor for ParameterQuery);
}

uint64_t sub_23F8221BC(uint64_t (*a1)(_QWORD))
{
  sub_23F876C04(a1);
  return swift_bridgeObjectRetain();
}

void ParameterQuery.dependencies.setter(uint64_t a1)
{
  sub_23F8221E4(a1, type metadata accessor for ParameterQuery);
}

void sub_23F8221E4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(int *)(sub_23F6F0918(a1, a2) + 24);
  sub_23F8779DC();
  *(_QWORD *)(v2 + v4) = a1;
  sub_23F694C84();
}

uint64_t (*ParameterQuery.dependencies.modify())()
{
  sub_23F8786F8();
  sub_23F6F09C4();
  return nullsub_1;
}

void ParameterQuery.deviceId.getter()
{
  sub_23F81B864(type metadata accessor for ParameterQuery);
}

void ParameterQuery.deviceId.setter(uint64_t a1, uint64_t a2)
{
  sub_23F81CF9C(a1, a2, type metadata accessor for ParameterQuery);
}

uint64_t (*ParameterQuery.deviceId.modify())()
{
  sub_23F8786F8();
  sub_23F6F0A54();
  return nullsub_1;
}

void ParameterQuery.init(context:data:dependencies:deviceId:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);

  sub_23F6D3A90();
  v4 = v3;
  v6 = v5;
  v7 = sub_23F877788();
  v8 = (int *)type metadata accessor for ParameterQuery(v7);
  v9 = (_QWORD *)(v2 + v8[7]);
  v10 = sub_23F6B7194();
  sub_23F83A7A4(v10, v11, v12);
  sub_23F83A7A4(v1, v2 + v8[5], type metadata accessor for QueryData);
  *(_QWORD *)(v2 + v8[6]) = v0;
  *v9 = v6;
  v9[1] = v4;
  sub_23F6B69E0();
}

void ParameterQuery.description.getter()
{
  sub_23F877640();
  sub_23F876CF0();
  sub_23FB2F7AC();
  sub_23F877940();
  sub_23F87841C();
  sub_23F876ACC();
  type metadata accessor for ActionParameterContext(0);
  sub_23F87929C();
  sub_23F878D70();
  sub_23FB2F254();
  type metadata accessor for ParameterQuery(0);
  type metadata accessor for QueryData(0);
  sub_23F87929C();
  sub_23F877404();
  sub_23F876B94();
  sub_23F6B58C8();
  sub_23F6B6634();
  sub_23F6B4EEC((uint64_t)&qword_256EA15A8);
  sub_23F6B5F1C();
  sub_23FB2F044();
  sub_23F876ACC();
  sub_23F6B5908();
  sub_23F6B6090();
  sub_23F8776CC();
  swift_bridgeObjectRetain();
  sub_23F877298();
  sub_23F693E04();
  sub_23F8767CC();
  sub_23F6B647C();
}

void static ParameterQuery.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if ((sub_23F70D678() & 1) != 0)
  {
    v0 = type metadata accessor for ActionParameterContext(0);
    sub_23F7A029C(*(int *)(v0 + 20));
    v3 = v3 && v1 == v2;
    if (v3 || (sub_23F6B5280(), sub_23F7A01D0(), (v4 & 1) != 0))
    {
      sub_23F7A029C(*(int *)(v0 + 24));
      v7 = v3 && v5 == v6;
      if (v7 || (sub_23F6B5280(), sub_23F7A01D0(), (v8 & 1) != 0))
      {
        v9 = type metadata accessor for ParameterQuery(0);
        sub_23F876D84(v9);
        static QueryData.== infix(_:_:)();
        if ((v10 & 1) != 0)
        {
          sub_23F8772C0(*(int *)(v9 + 24));
          sub_23F69AAE8();
          if ((v11 & 1) != 0)
          {
            sub_23F8769C4();
            if (v14)
            {
              if (v12)
              {
                sub_23F6D3998(v13);
                if (!v3 || v15 != v16)
                  sub_23F6B5280();
              }
            }
          }
        }
      }
    }
  }
  sub_23F694C84();
}

void static QueryData.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD v13[2];

  sub_23F6B50E8();
  type metadata accessor for PropertyQuery(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v0);
  v13[1] = (char *)v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_23F6D398C();
  type metadata accessor for QueryData(v2);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F876D18();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F876BF0();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6916B8(&qword_256EAC9F8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F8780CC();
  v8 = sub_23F87886C();
  sub_23F83A800(v8, v9, type metadata accessor for QueryData);
  v10 = sub_23F6B6964();
  sub_23F83A800(v10, v11, type metadata accessor for QueryData);
  v12 = (char *)sub_23F822630 + 4 * byte_23FB63385[sub_23F876E58()];
  __asm { BR              X10 }
}

void sub_23F822630(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F8775E8(v2, a2, type metadata accessor for QueryData);
  if (sub_23F8769F8())
  {
    v4 = sub_23F6B5AB0();
    sub_23F876B14(v4, &qword_256EAC9F8);
  }
  else
  {
    sub_23F879718();
    sub_23F6B5908();
    v3 = sub_23F6B5AB0();
    sub_23F876A50(v3, type metadata accessor for QueryData);
  }
  sub_23F6B5694();
  sub_23F693DDC();
}

uint64_t sub_23F82278C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x747865746E6F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1635017060 && a2 == 0xE400000000000000;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6E65646E65706564 && a2 == 0xEC00000073656963;
      if (v7 || (sub_23FB2FB78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x6449656369766564 && a2 == 0xE800000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_23FB2FB78();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_23F822940(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F822974 + 4 * byte_23FB63389[a1]))(0x747865746E6F63, 0xE700000000000000);
}

uint64_t sub_23F822974()
{
  return 1635017060;
}

uint64_t sub_23F822984()
{
  return 0x6E65646E65706564;
}

uint64_t sub_23F8229A4()
{
  return 0x6449656369766564;
}

uint64_t sub_23F8229BC()
{
  unsigned __int8 *v0;

  return sub_23F822940(*v0);
}

uint64_t sub_23F8229C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F82278C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F8229E8()
{
  sub_23F83F468();
  return sub_23FB2FD10();
}

uint64_t sub_23F822A10()
{
  sub_23F83F468();
  return sub_23FB2FD1C();
}

void ParameterQuery.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[16];
  uint64_t v10;

  sub_23F6D3DC4();
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EACA00);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F70D4B8();
  sub_23F83F468();
  sub_23F6B63A4();
  v6 = sub_23F878390();
  type metadata accessor for ActionParameterContext(v6);
  sub_23F6B4EEC((uint64_t)&qword_256EA91B0);
  sub_23F876660();
  if (!v0)
  {
    v7 = type metadata accessor for ParameterQuery(0);
    v8 = sub_23F876854();
    type metadata accessor for QueryData(v8);
    sub_23F6B4EEC((uint64_t)&unk_256EACA10);
    sub_23F70D4F0();
    v10 = *(_QWORD *)(v1 + *(int *)(v7 + 24));
    sub_23F878018();
    sub_23F6916B8(&qword_256EACA18);
    sub_23F83F4A4();
    sub_23F70D4F0();
    v9[14] = 3;
    sub_23F8773D8();
  }
  sub_23F6B56E0((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F70D9D8();
  sub_23F6D3710();
}

void ParameterQuery.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;

  sub_23F6B5220();
  v6 = v5;
  v28 = v7;
  type metadata accessor for QueryData(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23F78F27C();
  type metadata accessor for ActionParameterContext(v9);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B537C(v11, v26);
  sub_23F6916B8(&qword_256EACA28);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23F78F260();
  v14 = type metadata accessor for ParameterQuery(v13);
  sub_23F693E20();
  v16 = MEMORY[0x24BDAC7A8](v15);
  sub_23F877C5C(v16, v17, v27);
  v29 = v18;
  sub_23F6ADC98(v6, v6[3]);
  sub_23F83F468();
  sub_23F878788();
  sub_23F877128();
  if (v0)
  {
    sub_23F6B6E34();
    sub_23F7A01C8();
  }
  else
  {
    sub_23F6B4EEC((uint64_t)&qword_256EA91C0);
    sub_23F876F6C();
    sub_23F6B6CAC();
    v19 = sub_23F6B6854();
    sub_23F83A7A4(v19, v20, v21);
    sub_23F6B6360();
    sub_23F6B4EEC((uint64_t)&unk_256EACA30);
    sub_23F6B6CAC();
    sub_23F83A7A4(v2, v1 + *(int *)(v14 + 20), type metadata accessor for QueryData);
    sub_23F6916B8(&qword_256EACA18);
    sub_23F877210();
    sub_23F83F540();
    sub_23F7717EC();
    *(_QWORD *)(v1 + *(int *)(v14 + 24)) = v30;
    sub_23F8772E4();
    v22 = sub_23FB2FA10();
    v24 = v23;
    v25 = v22;
    sub_23F6B51EC(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    sub_23F878F8C();
    *v29 = v25;
    v29[1] = v24;
    sub_23F876818(v1, v28);
    sub_23F87897C();
    sub_23F876820(v1);
  }
  sub_23F6B6CA0();
  sub_23F6B5100();
}

void sub_23F822E90()
{
  ParameterQuery.init(from:)();
}

void sub_23F822EA4()
{
  ParameterQuery.encode(to:)();
}

uint64_t VariableStep.statementId.getter()
{
  return sub_23F839AEC();
}

uint64_t VariableStep.statementId.setter(uint64_t a1)
{
  return sub_23F839B28(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

uint64_t (*VariableStep.statementId.modify())()
{
  return nullsub_1;
}

uint64_t VariableStep.setters.getter()
{
  return sub_23F821B50(type metadata accessor for VariableStep);
}

void VariableStep.setters.setter(uint64_t a1)
{
  sub_23F821B78(a1, type metadata accessor for VariableStep);
}

uint64_t (*VariableStep.setters.modify())()
{
  type metadata accessor for VariableStep(0);
  sub_23F6F099C();
  return nullsub_1;
}

void VariableStep.init(statementId:setters:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23F821BDC(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140], a3);
}

uint64_t sub_23F822F38(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73726574746573 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F82303C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x73726574746573;
  else
    return 0x6E656D6574617473;
}

uint64_t sub_23F82307C()
{
  char *v0;

  return sub_23F82303C(*v0);
}

uint64_t sub_23F823084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F822F38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F8230A8()
{
  sub_23F83F5DC();
  return sub_23FB2FD10();
}

uint64_t sub_23F8230D0()
{
  sub_23F83F5DC();
  return sub_23FB2FD1C();
}

void VariableStep.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE v6[32];

  sub_23F6D3DC4();
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EACA40);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v6[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F70D4B8();
  sub_23F83F5DC();
  sub_23F6B63A4();
  v6[31] = 0;
  sub_23F6B58C8();
  sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
  sub_23F876660();
  if (!v0)
  {
    v5 = type metadata accessor for VariableStep(0);
    sub_23F877974(v5);
    sub_23F6916B8(&qword_256EACA50);
    sub_23F83F618();
    sub_23F70D4F0();
  }
  sub_23F6B56E0((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F70D9D8();
  sub_23F6D3710();
}

void VariableStep.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_23F6B5220();
  v3 = v2;
  v14 = v4;
  sub_23F6B58C8();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B5C10(v6, v11);
  sub_23F6916B8(&qword_256EACA68);
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_23F6B5C2C();
  type metadata accessor for VariableStep(v8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v10 = v3[4];
  sub_23F70D6E4(v3);
  sub_23F83F5DC();
  sub_23F8771B0();
  if (v0)
  {
    sub_23F6B6E34();
  }
  else
  {
    sub_23F878128();
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    sub_23F6B6E1C();
    sub_23F877500();
    sub_23F6916B8(&qword_256EACA50);
    sub_23F6B6360();
    sub_23F83F694();
    sub_23F6B6E1C();
    sub_23F6B563C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
    sub_23F878BE0();
    sub_23F876818(v10, v14);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v12);
    sub_23F876820(v10);
  }
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23F8233C4()
{
  VariableStep.init(from:)();
}

void sub_23F8233D8()
{
  VariableStep.encode(to:)();
}

uint64_t ExecutionStepResult.stepId.getter()
{
  return sub_23F839AEC();
}

uint64_t ExecutionStepResult.stepId.setter(uint64_t a1)
{
  return sub_23F839B28(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t (*ExecutionStepResult.stepId.modify())()
{
  return nullsub_1;
}

void ExecutionStepResult.result.getter()
{
  sub_23F822134(type metadata accessor for ExecutionStepResult);
}

void ExecutionStepResult.result.setter(uint64_t a1)
{
  sub_23F82216C(a1, type metadata accessor for ExecutionStepResult);
}

uint64_t (*ExecutionStepResult.result.modify())()
{
  type metadata accessor for ExecutionStepResult(0);
  sub_23F6F099C();
  return nullsub_1;
}

void ExecutionStepResult.init(stepId:result:)(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_23F72E034();
  sub_23F7B0990(a2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32));
  v5 = type metadata accessor for ExecutionStepResult(0);
  sub_23F83A7A4(a1, a2 + *(int *)(v5 + 20), type metadata accessor for ActionResult);
  sub_23F694C84();
}

void static ExecutionStepResult.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_23F831D94(a1, a2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDCE9E0]);
}

void static ActionResult.== infix(_:_:)()
{
  sub_23F8234F0();
}

void sub_23F8234F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t (*v7)(uint64_t);
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t (*v33)(_QWORD);
  uint64_t v34;

  sub_23F6B50E8();
  v33 = v6;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v34 = sub_23F8776FC();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B52B0();
  v14 = sub_23F6916B8(&qword_256EA2788);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B5298();
  sub_23F6916B8(&qword_256EA2780);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F77DC18();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F72E168();
  MEMORY[0x24BDAC7A8](v18);
  v19 = sub_23F877908();
  if ((v8(v19) & 1) != 0)
  {
    v20 = v33(0);
    sub_23F876D28(v12 + *(int *)(v20 + 20), v3);
    sub_23F876D28(v10 + *(int *)(v20 + 20), v4);
    v21 = v0 + *(int *)(v14 + 48);
    sub_23F876D28(v3, v0);
    sub_23F876D28(v4, v21);
    sub_23F6B5164(v0, 1, v34);
    if (!v26)
    {
      sub_23F8795B0(v0, v22, &qword_256EA2780);
      sub_23F70D8B8(v21);
      if (!v26)
      {
        sub_23F6D3ECC(v2, v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
        sub_23F6B4EEC((uint64_t)&unk_256EA2790);
        sub_23F6B5624();
        sub_23F8781A4(v2);
        v27 = sub_23F7B0BC4();
        sub_23F7F6110(v27, v28);
        v29 = sub_23F7D260C();
        sub_23F7F6110(v29, v30);
        sub_23F8781A4(v1);
        v31 = sub_23F8781AC();
        sub_23F7F6110(v31, v32);
        goto LABEL_11;
      }
      sub_23F8768C0(v4);
      sub_23F8768C0(v3);
      v25 = sub_23F7B0990(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
LABEL_10:
      sub_23F876B14(v25, &qword_256EA2788);
      goto LABEL_11;
    }
    sub_23F877374(v4);
    v23 = sub_23F6B6098();
    sub_23F7F6110(v23, v24);
    v25 = sub_23F70D8B8(v21);
    if (!v26)
      goto LABEL_10;
    sub_23F876B14(v25, &qword_256EA2780);
  }
LABEL_11:
  sub_23F693DDC();
}

uint64_t sub_23F823744(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x644970657473 && a2 == 0xE600000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746C75736572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F823828(char a1)
{
  if ((a1 & 1) != 0)
    return 0x746C75736572;
  else
    return 0x644970657473;
}

uint64_t sub_23F823850()
{
  char *v0;

  return sub_23F823828(*v0);
}

uint64_t sub_23F823858@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F823744(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F82387C()
{
  sub_23F83F724();
  return sub_23FB2FD10();
}

uint64_t sub_23F8238A4()
{
  sub_23F83F724();
  return sub_23FB2FD1C();
}

void ExecutionStepResult.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE v6[16];

  sub_23F6D3DC4();
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EACA80);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v6[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F70D4B8();
  sub_23F83F724();
  sub_23F6B63A4();
  v6[15] = 0;
  sub_23F72E034();
  sub_23F6B4EEC((uint64_t)&qword_256EA6620);
  sub_23F876660();
  if (!v0)
  {
    type metadata accessor for ExecutionStepResult(0);
    v5 = sub_23F876854();
    type metadata accessor for ActionResult(v5);
    sub_23F6B4EEC((uint64_t)&unk_256EACA90);
    sub_23F70D4F0();
  }
  sub_23F6B56E0((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F70D9D8();
  sub_23F6D3710();
}

void ExecutionStepResult.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_23F6B5220();
  v5 = v4;
  v20 = v6;
  v21 = sub_23F878260();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  v23 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_23F72E034();
  v22 = *(_QWORD *)(v25 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v26 = (uint64_t)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_23F6916B8(&qword_256EACA98);
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v11);
  v12 = sub_23F77DB24();
  v13 = type metadata accessor for ExecutionStepResult(v12);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B5298();
  sub_23F876A18(v5);
  sub_23F83F724();
  sub_23F878958();
  sub_23F70D990();
  if (v1)
  {
    sub_23F87906C();
  }
  else
  {
    v18 = v2;
    v19 = v5;
    v15 = v22;
    sub_23F6B4EEC((uint64_t)&qword_256EA6700);
    sub_23F876F6C();
    sub_23F6B6CAC();
    sub_23F78F5D0(v0, v26, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 32));
    sub_23F6B6360();
    sub_23F6B4EEC((uint64_t)&unk_256EACAA0);
    sub_23F6B6CAC();
    v16 = sub_23F6B56E0(v3, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
    sub_23F87907C(v16, v0 + *(int *)(v13 + 20), type metadata accessor for ActionResult);
    sub_23F876818(v0, v20);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v19);
    sub_23F876820(v0);
  }
  sub_23F6B6CA0();
  sub_23F6B5100();
}

void sub_23F823C14()
{
  ExecutionStepResult.init(from:)();
}

void sub_23F823C28()
{
  ExecutionStepResult.encode(to:)();
}

void static PropertyQuery.== infix(_:_:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  uint64_t v21;
  uint64_t v22;

  sub_23F6B50E8();
  v22 = v3;
  type metadata accessor for QueryPredicate(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_23F876970();
  type metadata accessor for PropertyQuery(v5);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F876BF0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B62F8();
  sub_23F6916B8(&qword_256EACAA8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F7A0184();
  v11 = v0 + v10;
  v12 = sub_23F878320();
  sub_23F83A800(v12, v13, type metadata accessor for PropertyQuery);
  sub_23F83A800(v22, v11, type metadata accessor for PropertyQuery);
  v14 = sub_23F714010();
  if ((_DWORD)v14)
  {
    if ((_DWORD)v14 == 1)
    {
      sub_23F8786C4(v14, v15, type metadata accessor for PropertyQuery);
      if (sub_23F714010() == 1)
      {
LABEL_4:
        sub_23F6B5EE4();
        sub_23F698E80();
        sub_23F6B5908();
        v16 = sub_23F6B5AB0();
        sub_23F876A50(v16, type metadata accessor for PropertyQuery);
        goto LABEL_10;
      }
    }
    else
    {
      sub_23F877DE0(v14, v15, type metadata accessor for PropertyQuery);
      if (sub_23F714010() == 2)
        goto LABEL_4;
    }
    v18 = sub_23F6B5AB0();
LABEL_9:
    sub_23F876B14(v18, &qword_256EACAA8);
    goto LABEL_10;
  }
  sub_23F877DEC(v14, v15, type metadata accessor for PropertyQuery);
  if (sub_23F714010())
  {
    sub_23F83A7D4(v2, type metadata accessor for QueryPredicate);
    goto LABEL_9;
  }
  sub_23F877F94(v11, v17, type metadata accessor for QueryPredicate);
  v19 = *(_QWORD *)v2 == *v1 && *(_QWORD *)(v2 + 8) == v1[1];
  if (v19 || (sub_23F6B5280() & 1) != 0)
  {
    sub_23F6BE588(*(_BYTE *)(v2 + 16));
    if ((v20 & 1) != 0)
      sub_23FB2ED14();
  }
  sub_23F87715C((uint64_t)v1);
  sub_23F87715C(v2);
  sub_23F876A50(v21, type metadata accessor for PropertyQuery);
LABEL_10:
  sub_23F6B5694();
  sub_23F693DDC();
}

uint64_t sub_23F823E70(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEF79726575517265;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7551676E69727473 && a2 == 0xEB00000000797265;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x79747265706F7270 && a2 == 0xED00007972657551;
      if (v7 || (sub_23FB2FB78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x75516D6574737973 && a2 == 0xEB00000000797265)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_23FB2FB78();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_23F824090(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F8240D0 + 4 * byte_23FB6338D[a1]))(0x696669746E656469, 0xEF79726575517265);
}

uint64_t sub_23F8240D0()
{
  return 0x7551676E69727473;
}

uint64_t sub_23F824124()
{
  unsigned __int8 *v0;

  return sub_23F824090(*v0);
}

uint64_t sub_23F82412C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F823E70(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F824150()
{
  sub_23F83F774();
  return sub_23FB2FD10();
}

uint64_t sub_23F824178()
{
  sub_23F83F774();
  return sub_23FB2FD1C();
}

uint64_t sub_23F8241A0()
{
  sub_23F83F864();
  return sub_23FB2FD10();
}

uint64_t sub_23F8241C8()
{
  sub_23F83F864();
  return sub_23FB2FD1C();
}

uint64_t sub_23F8241F0()
{
  sub_23F83F7EC();
  return sub_23FB2FD10();
}

uint64_t sub_23F824218()
{
  sub_23F83F7EC();
  return sub_23FB2FD1C();
}

uint64_t sub_23F824240()
{
  sub_23F83F828();
  return sub_23FB2FD10();
}

uint64_t sub_23F824268()
{
  sub_23F83F828();
  return sub_23FB2FD1C();
}

uint64_t sub_23F824290()
{
  sub_23F83F7B0();
  return sub_23FB2FD10();
}

uint64_t sub_23F8242B8()
{
  sub_23F83F7B0();
  return sub_23FB2FD1C();
}

void QueryData.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20[16];

  sub_23F6B5220();
  v2 = v1;
  v3 = sub_23F6916B8(&qword_256EACAB0);
  v20[9] = *(_QWORD *)(v3 - 8);
  v20[10] = v3;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B57BC(v5, v20[0]);
  v6 = sub_23F6916B8(&qword_256EACAB8);
  v20[6] = *(_QWORD *)(v6 - 8);
  v20[7] = v6;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  v20[5] = (uint64_t)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F6D398C();
  v20[3] = type metadata accessor for PropertyQuery(v9);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B57A0(v11, v20[0]);
  v12 = sub_23F6916B8(&qword_256EACAC0);
  v20[1] = *(_QWORD *)(v12 - 8);
  v20[2] = v12;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B5298();
  v20[0] = *(_QWORD *)(sub_23F6916B8(&qword_256EACAC8) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v14);
  v15 = sub_23F6B51D0();
  type metadata accessor for QueryData(v15);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B5268();
  v17 = sub_23F6916B8(&qword_256EACAD0);
  v20[11] = *(_QWORD *)(v17 - 8);
  v20[12] = v17;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F693EB0();
  sub_23F70D6E4(v2);
  sub_23F83F774();
  sub_23F87902C();
  sub_23F878C30();
  sub_23F83A800(v20[14], v0, type metadata accessor for QueryData);
  v19 = (char *)sub_23F824484 + 4 * byte_23FB63391[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23F824484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *v2;
  *(_BYTE *)(v3 - 68) = 0;
  sub_23F83F864();
  sub_23F6B5610();
  *(_QWORD *)(v3 - 88) = v4;
  sub_23F6916B8(&qword_256EA1918);
  sub_23F6AEB70((uint64_t)&qword_256EA1920);
  sub_23F8771A4();
  sub_23F6B5900(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 208) + 8));
  sub_23F6B530C(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 120) + 8));
  sub_23F693E04();
  sub_23F8778A8();
  sub_23F6B5100();
}

void QueryData.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t);
  uint64_t v40[8];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t Data;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;

  sub_23F6B5220();
  v52 = v0;
  v6 = v5;
  v47 = v7;
  v46 = sub_23F6916B8(&qword_256EACB08);
  v44 = *(_QWORD *)(v46 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5810(v9, v40[0]);
  v45 = sub_23F6916B8(&qword_256EACB10);
  v43 = *(_QWORD *)(v45 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B57A0(v11, v40[0]);
  v42 = sub_23F6916B8(&qword_256EACB18);
  v40[7] = *(_QWORD *)(v42 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B582C(v13, v40[0]);
  v41 = sub_23F6916B8(&qword_256EACB20);
  v40[6] = *(_QWORD *)(v41 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B5404(v15, v40[0]);
  v50 = sub_23F6916B8(&qword_256EACB28);
  v48 = *(_QWORD *)(v50 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v16);
  v17 = sub_23F70D7F8();
  Data = type metadata accessor for QueryData(v17);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F876AD4();
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)v40 - v21;
  MEMORY[0x24BDAC7A8](v20);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F72E168();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6B6B3C();
  v25 = (uint64_t *)v6[4];
  v51 = v6;
  sub_23F876BD8(v6);
  sub_23F83F774();
  sub_23F879694();
  sub_23F877128();
  if (!v0)
  {
    v40[1] = v3;
    v40[2] = v1;
    v40[3] = v2;
    v40[4] = (uint64_t)v22;
    v40[5] = v4;
    v26 = Data;
    sub_23F879414();
    sub_23F878164();
    if (v27)
    {
      v40[0] = 0;
      v28 = *(unsigned __int8 *)(v4 + 32);
      v29 = sub_23F70D968();
      sub_23F6B4E44(v29, v30, v31, v32, v33, v34);
      sub_23F877084();
      sub_23F8795C4();
      v35 = v26;
      if (v36)
        __asm { BR              X9 }
    }
    else
    {
      v35 = v26;
    }
    sub_23F6B6334();
    sub_23F6B5AD4();
    sub_23F8783F4();
    sub_23F6916B8(&qword_256EA1870);
    *v25 = v35;
    sub_23F879060();
    v37 = sub_23F6B56B8();
    sub_23F6B5DAC(v37, *MEMORY[0x24BEE26D0]);
    sub_23F87774C();
    sub_23F6B5770();
    v38 = sub_23F87770C();
    v39(v38);
  }
  sub_23F877354();
  sub_23F876B60();
  sub_23F6B5100();
}

void sub_23F824A8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;

  sub_23F87911C();
  sub_23F878728();
  sub_23F876B44();
  if (v1)
  {
    sub_23F6B5770();
    sub_23F7D243C();
    JUMPOUT(0x23F824A74);
  }
  v3 = sub_23F878A8C();
  v4 = v0;
  v5 = *(_QWORD *)(v2 - 136);
  v6 = v3;
  v8 = v7;
  sub_23F6B5900(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 200) + 8));
  sub_23F6B5770();
  sub_23F6B530C(*(_QWORD *)(v2 - 104), *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  v9 = *(uint64_t **)(v2 - 264);
  *v9 = v6;
  v9[1] = v8;
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x23F824C98);
}

void sub_23F824CB4()
{
  QueryData.init(from:)();
}

void sub_23F824CC8()
{
  QueryData.encode(to:)();
}

void static QueryPredicate.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  char v5;
  uint64_t Predicate;

  sub_23F877494(a1);
  v4 = v4 && v2 == v3;
  if ((v4 || (sub_23F6B5280() & 1) != 0) && (sub_23F6BE588(*(_BYTE *)(v1 + 16)), (v5 & 1) != 0))
  {
    Predicate = type metadata accessor for QueryPredicate(0);
    sub_23F70D938(*(int *)(Predicate + 24));
    sub_23F878640();
  }
  else
  {
    sub_23F694CC8();
  }
}

uint64_t sub_23F824D34(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x657261706D6F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 6581857 && a2 == 0xE300000000000000;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 29295 && a2 == 0xE200000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23FB2FB78();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F824E58(char a1)
{
  if (!a1)
    return 0x657261706D6F63;
  if (a1 == 1)
    return 6581857;
  return 29295;
}

uint64_t sub_23F824E9C()
{
  sub_23F83F994();
  return sub_23FB2FD10();
}

uint64_t sub_23F824EC4()
{
  sub_23F83F994();
  return sub_23FB2FD1C();
}

uint64_t sub_23F824EEC()
{
  char *v0;

  return sub_23F824E58(*v0);
}

uint64_t sub_23F824EF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F824D34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F824F18()
{
  sub_23F83F8A0();
  return sub_23FB2FD10();
}

uint64_t sub_23F824F40()
{
  sub_23F83F8A0();
  return sub_23FB2FD1C();
}

uint64_t sub_23F824F68()
{
  sub_23F83F9D0();
  return sub_23FB2FD10();
}

uint64_t sub_23F824F90()
{
  sub_23F83F9D0();
  return sub_23FB2FD1C();
}

uint64_t sub_23F824FB8()
{
  sub_23F83F8DC();
  return sub_23FB2FD10();
}

uint64_t sub_23F824FE0()
{
  sub_23F83F8DC();
  return sub_23FB2FD1C();
}

void PropertyQuery.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t (*v20)(_QWORD);
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;

  sub_23F6B5220();
  v26 = v0;
  v4 = v3;
  sub_23F6916B8(&qword_256EACB38);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B57F4(v6, v25);
  sub_23F6916B8(&qword_256EACB40);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B5268();
  sub_23F6916B8(&qword_256EACB48);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23F7A00C8();
  type metadata accessor for QueryPredicate(v9);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_23F78F27C();
  type metadata accessor for PropertyQuery(v11);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B573C();
  sub_23F6916B8(&qword_256EACB50);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F693EB0();
  sub_23F876754(v4);
  sub_23F83F8A0();
  sub_23F879040();
  sub_23F83A800(v26, v2, type metadata accessor for PropertyQuery);
  v14 = sub_23F8792A8();
  if (v14)
  {
    if (v14 == 1)
    {
      sub_23F879330();
      sub_23F6B5610();
      sub_23F6916B8(&qword_256EACB68);
      sub_23F83F918();
      sub_23F877754();
      sub_23F7B0D3C();
      v15 = sub_23F6B640C();
    }
    else
    {
      sub_23F879524();
      sub_23F6B5610();
      sub_23F6916B8(&qword_256EACB68);
      sub_23F83F918();
      sub_23F877754();
      sub_23F7B0D3C();
      v15 = sub_23F877E64();
    }
    sub_23F6B563C(v15, v16);
    v23 = sub_23F878024();
    sub_23F6B530C(v23, v24);
    sub_23F693E04();
  }
  else
  {
    sub_23F876934(v2, v1);
    sub_23F83F9D0();
    sub_23F6B5610();
    sub_23F876958((uint64_t)&unk_256EACB78);
    sub_23F7B0D3C();
    v17 = sub_23F6B61DC();
    sub_23F6B5900(v17, v18);
    v19 = sub_23F6B6964();
    sub_23F83A7D4(v19, v20);
    v21 = sub_23F878024();
    sub_23F70D728(v21, v22);
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void PropertyQuery.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t);
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  char *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;

  sub_23F6B5220();
  sub_23F8799E4(v16);
  v68 = sub_23F6916B8(&qword_256EACB90);
  v65 = *(_QWORD *)(v68 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B537C(v18, v56);
  v67 = sub_23F6916B8(&qword_256EACB98);
  v64 = *(_QWORD *)(v67 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F6B57F4(v20, v56);
  v66 = sub_23F6916B8(&qword_256EACBA0);
  v63 = *(_QWORD *)(v66 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B57BC(v22, v56);
  v23 = sub_23F6916B8(&qword_256EACBA8);
  v73 = *(_QWORD *)(v23 - 8);
  v74 = v23;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v24);
  v25 = sub_23F7A00C8();
  v26 = (_QWORD *)type metadata accessor for PropertyQuery(v25);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F876AD4();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F876D18();
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&v56 - v31;
  v75 = v11;
  sub_23F6B6280(v11);
  sub_23F83F8A0();
  sub_23F878478();
  if (!v12)
  {
    v59 = v15;
    v60 = v13;
    v58 = v14;
    v61 = v32;
    v62 = v26;
    v33 = (_QWORD *)v74;
    v76 = v10;
    v34 = sub_23FB2FA94();
    if (*(_QWORD *)(v34 + 16))
    {
      v26 = v33;
      v57 = 0;
      sub_23F8794C8();
      v35 = *(unsigned __int8 *)(v34 + 32);
      sub_23F6B4E44(1, v36, v34, v34 + 32, 0, v37);
      v39 = v38;
      v41 = v40;
      sub_23F756640();
      if (v39 == v41 >> 1)
      {
        if (v35)
        {
          if (v35 == 1)
          {
            sub_23F879330();
            v42 = v71;
            v43 = v76;
            v44 = v57;
            sub_23FB2F9F8();
            if (v44)
            {
              sub_23F780740();
              v45 = sub_23F72E430();
LABEL_9:
              v46(v45);
              goto LABEL_10;
            }
            sub_23F6916B8(&qword_256EACB68);
            sub_23F83FA0C();
            sub_23F72E2F8();
            sub_23F878BC8();
            sub_23F87762C();
            sub_23F6B530C(v42, *(uint64_t (**)(uint64_t, uint64_t))(v64 + 8));
            sub_23F780740();
            sub_23F6B51EC(v43, *(uint64_t (**)(uint64_t, uint64_t))(v73 + 8));
            v50 = v58;
            *v58 = a10;
            sub_23F878E1C();
          }
          else
          {
            sub_23F879524();
            v52 = v72;
            sub_23F877A94();
            sub_23F6916B8(&qword_256EACB68);
            sub_23F83FA0C();
            sub_23F878358();
            sub_23F87762C();
            sub_23F70D728(v52, *(uint64_t (**)(uint64_t, uint64_t))(v65 + 8));
            sub_23F780740();
            sub_23F6B530C(v13, *(uint64_t (**)(uint64_t, uint64_t))(v73 + 8));
            v50 = v59;
            *v59 = a10;
            sub_23F878E1C();
          }
        }
        else
        {
          sub_23F83F9D0();
          v49 = v70;
          sub_23F877A94();
          type metadata accessor for QueryPredicate(0);
          sub_23F6B4EEC((uint64_t)&unk_256EACBB8);
          v50 = (_QWORD *)v60;
          sub_23F87762C();
          v51 = v73;
          sub_23F70D728(v49, *(uint64_t (**)(uint64_t, uint64_t))(v63 + 8));
          sub_23F780740();
          sub_23F6B530C(v13, *(uint64_t (**)(uint64_t, uint64_t))(v51 + 8));
          sub_23F878E1C();
        }
        swift_storeEnumTagMultiPayload();
        v53 = (uint64_t)v50;
        v54 = (uint64_t)v61;
        sub_23F877D94(v53, v55, type metadata accessor for PropertyQuery);
        sub_23F83A7A4(v54, v69, type metadata accessor for PropertyQuery);
        goto LABEL_10;
      }
    }
    v47 = v62;
    sub_23F6B6334();
    sub_23F6B5AD4();
    sub_23F8783F4();
    sub_23F6916B8(&qword_256EA1870);
    *v26 = v47;
    sub_23FB2FA04();
    v48 = sub_23F6B56B8();
    sub_23F6B5DAC(v48, *MEMORY[0x24BEE26D0]);
    sub_23F87774C();
    sub_23F780740();
    v45 = sub_23F77E19C();
    goto LABEL_9;
  }
LABEL_10:
  sub_23F878890();
  sub_23F877A30();
  sub_23F6B5100();
}

void sub_23F825804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  PropertyQuery.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F825818()
{
  PropertyQuery.encode(to:)();
}

void VariableSetter.dependencies.setter()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23F877DB8();
  *v1 = v0;
  sub_23F694CC8();
}

uint64_t (*VariableSetter.dependencies.modify())()
{
  return nullsub_1;
}

uint64_t VariableSetter.value.getter()
{
  return sub_23F811704(type metadata accessor for VariableSetter);
}

uint64_t VariableSetter.value.setter(uint64_t a1)
{
  return sub_23F811750(a1, type metadata accessor for VariableSetter);
}

uint64_t (*VariableSetter.value.modify())()
{
  type metadata accessor for VariableSetter(0);
  sub_23F6F099C();
  return nullsub_1;
}

uint64_t VariableSetter.init(dependencies:value:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  *a2 = a1;
  type metadata accessor for VariableSetter(0);
  sub_23F6B6634();
  v2 = sub_23F8769D8();
  return sub_23F6B64B0(v2, v3, v4, v5);
}

void VariableSetter.description.getter()
{
  sub_23F877640();
  sub_23F876CF0();
  sub_23FB2F7AC();
  sub_23F877940();
  sub_23F876B94();
  sub_23F6B58C8();
  sub_23F6B6634();
  sub_23F6B4EEC((uint64_t)&qword_256EA15A8);
  sub_23F6B6254();
  sub_23FB2F044();
  sub_23F876ACC();
  sub_23F6B5AB0();
  sub_23F6B5908();
  sub_23F878D70();
  sub_23F8798AC();
  type metadata accessor for VariableSetter(0);
  sub_23FB2F8FC();
  sub_23F8767CC();
  sub_23F6B647C();
}

void static VariableSetter.== infix(_:_:)(uint64_t a1)
{
  char v1;
  uint64_t v2;

  sub_23F8799F0(a1);
  sub_23F69AAE8();
  if ((v1 & 1) != 0)
  {
    v2 = type metadata accessor for VariableSetter(0);
    sub_23F876D84(v2);
    sub_23F878640();
  }
  else
  {
    sub_23F694CC8();
  }
}

uint64_t sub_23F825A10(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6E65646E65706564 && a2 == 0xEC00000073656963;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F825B0C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x65756C6176;
  else
    return 0x6E65646E65706564;
}

uint64_t sub_23F825B48()
{
  char *v0;

  return sub_23F825B0C(*v0);
}

uint64_t sub_23F825B50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F825A10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F825B74()
{
  sub_23F83FA88();
  return sub_23FB2FD10();
}

uint64_t sub_23F825B9C()
{
  sub_23F83FA88();
  return sub_23FB2FD1C();
}

void VariableSetter.encode(to:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  _BYTE v6[8];
  uint64_t v7;

  sub_23F6D3DC4();
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EACBC0);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v6[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F70D4B8();
  sub_23F83FA88();
  sub_23F6B63A4();
  v7 = *v1;
  v6[7] = 0;
  sub_23F6916B8(&qword_256EACA18);
  sub_23F83F4A4();
  sub_23F70D4F0();
  if (!v0)
  {
    type metadata accessor for VariableSetter(0);
    v6[6] = 1;
    sub_23F6B6634();
    sub_23F6B4EEC((uint64_t)&qword_256EA7170);
    sub_23F87919C();
    sub_23F70D4F0();
  }
  sub_23F6B56E0((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F70D9D8();
  sub_23F6D3710();
}

void VariableSetter.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_23F6B5220();
  v15 = v14;
  v25 = v16;
  v24 = *(_QWORD *)(sub_23F6B6634() - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B5C10(v18, v23);
  sub_23F6916B8(&qword_256EACBD0);
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v19);
  v20 = sub_23F70D7F8();
  v21 = type metadata accessor for VariableSetter(v20);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6B5298();
  sub_23F6B6280(v15);
  sub_23F83FA88();
  sub_23F70D990();
  if (v11)
  {
    sub_23F878890();
  }
  else
  {
    sub_23F6916B8(&qword_256EACA18);
    sub_23F83F540();
    sub_23F876DA8();
    sub_23F6B6E1C();
    *v10 = a10;
    sub_23F8793D4();
    sub_23F6B4EEC((uint64_t)&qword_256EA7188);
    sub_23F6B6E1C();
    sub_23F6B56E0(v13, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
    sub_23F77DD54((uint64_t)v10 + *(int *)(v21 + 20), v26, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 32));
    sub_23F876818((uint64_t)v10, v25);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v15);
    sub_23F876820((uint64_t)v10);
  }
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23F825EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  VariableSetter.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F825EBC()
{
  VariableSetter.encode(to:)();
}

void QueryPredicate.parameterId.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void QueryPredicate.parameterId.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  sub_23F6F09A8();
  *v2 = a1;
  v2[1] = a2;
  sub_23F694C84();
}

uint64_t (*QueryPredicate.parameterId.modify())()
{
  return nullsub_1;
}

void QueryPredicate.op.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *QueryPredicate.op.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*QueryPredicate.op.modify())()
{
  return nullsub_1;
}

uint64_t QueryPredicate.value.getter()
{
  return sub_23F825F6C(type metadata accessor for QueryPredicate);
}

uint64_t sub_23F825F6C(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_23F6F08D8(a1);
  sub_23F8770FC();
  v1 = sub_23F70DC34();
  return sub_23F876AAC(v1, v2, v3, v4);
}

uint64_t QueryPredicate.value.setter(uint64_t a1)
{
  return sub_23F825FB8(a1, type metadata accessor for QueryPredicate);
}

uint64_t sub_23F825FB8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_23F876B7C(a1, a2);
  sub_23F8770FC();
  v2 = sub_23F6B68CC();
  return sub_23F876AAC(v2, v3, v4, v5);
}

uint64_t (*QueryPredicate.value.modify())()
{
  type metadata accessor for QueryPredicate(0);
  sub_23F6F09C4();
  return nullsub_1;
}

uint64_t QueryPredicate.init(parameterId:op:value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  v5 = *a3;
  *(_QWORD *)a4 = a1;
  *(_QWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 16) = v5;
  type metadata accessor for QueryPredicate(0);
  sub_23F6B6634();
  v6 = sub_23F8769D8();
  return sub_23F6B64B0(v6, v7, v8, v9);
}

void QueryPredicate.description.getter()
{
  uint64_t v0;

  sub_23F876CF0();
  sub_23F6B5A54();
  sub_23F6B5F1C();
  sub_23F876E38();
  sub_23F6B5908();
  sub_23F6B5A54();
  sub_23F7F8798(*(_BYTE *)(v0 + 16));
  sub_23F6B5A54();
  type metadata accessor for QueryPredicate(0);
  sub_23F6B6634();
  sub_23F879834();
  sub_23F8767CC();
  sub_23F6B6664();
}

uint64_t sub_23F8260F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6574656D61726170 && a2 == 0xEB00000000644972;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 28783 && a2 == 0xE200000000000000;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23FB2FB78();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F826234(char a1)
{
  if (!a1)
    return 0x6574656D61726170;
  if (a1 == 1)
    return 28783;
  return 0x65756C6176;
}

uint64_t sub_23F826284()
{
  char *v0;

  return sub_23F826234(*v0);
}

uint64_t sub_23F82628C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F8260F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F8262B0()
{
  sub_23F83FAC4();
  return sub_23FB2FD10();
}

uint64_t sub_23F8262D8()
{
  sub_23F83FAC4();
  return sub_23FB2FD1C();
}

void QueryPredicate.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  _BYTE v6[16];

  sub_23F6D3DC4();
  sub_23F876CB0();
  sub_23F6916B8(&qword_256EACBD8);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v6[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F70D4B8();
  sub_23F83FAC4();
  sub_23F6B63A4();
  v6[15] = 0;
  sub_23F70D90C();
  if (!v0)
  {
    v6[14] = *(_BYTE *)(v1 + 16);
    sub_23F878428();
    sub_23F83FB00();
    sub_23F70D78C();
    type metadata accessor for QueryPredicate(0);
    v6[12] = 2;
    sub_23F6B6634();
    sub_23F6B4EEC((uint64_t)&qword_256EA7170);
    sub_23F8791BC();
    sub_23F70D78C();
  }
  sub_23F6B56E0((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F878A78();
  sub_23F6D3710();
}

void QueryPredicate.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t Predicate;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_23F6B5220();
  v18 = v17;
  v27 = v19;
  v26 = *(_QWORD *)(sub_23F6B6634() - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5268();
  sub_23F6916B8(&qword_256EACBF0);
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8](v21);
  v22 = sub_23F78F260();
  Predicate = type metadata accessor for QueryPredicate(v22);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6B5298();
  sub_23F876BD8(v18);
  sub_23F83FAC4();
  sub_23F877870();
  if (v13)
  {
    sub_23F877780();
  }
  else
  {
    sub_23F8791E8();
    *(_QWORD *)v12 = sub_23F8783D4();
    *(_QWORD *)(v12 + 8) = v25;
    sub_23F878428();
    sub_23F83FB3C();
    sub_23F6B6CAC();
    *(_BYTE *)(v12 + 16) = a12;
    sub_23F878AE4();
    sub_23F6B4EEC((uint64_t)&qword_256EA7188);
    sub_23F8791B0();
    sub_23F6B6CAC();
    sub_23F6B56E0(v15, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
    sub_23F77DD54(v12 + *(int *)(Predicate + 24), v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 32));
    sub_23F876818(v12, v27);
    sub_23F877780();
    sub_23F876820(v12);
  }
  sub_23F6B6CA0();
  sub_23F6B5100();
}

void sub_23F826620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  _BYTE vars8[7];

  QueryPredicate.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, *(__int16 *)&vars8[4], vars8[6]);
}

void sub_23F826634()
{
  QueryPredicate.encode(to:)();
}

uint64_t QueryOperator.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F826674 + 4 * byte_23FB63399[*v0]))(61, 0xE100000000000000);
}

uint64_t sub_23F826678()
{
  return 62;
}

uint64_t sub_23F826684()
{
  return 60;
}

void sub_23F826694()
{
  sub_23F8794A8();
}

uint64_t sub_23F8266BC()
{
  return 0x65777465625F7369;
}

uint64_t QueryOperator.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F826700 + 4 * byte_23FB633A3[*v0]))(61, 0xE100000000000000);
}

uint64_t sub_23F826704()
{
  return 62;
}

uint64_t sub_23F826710()
{
  return 60;
}

void sub_23F826720()
{
  sub_23F8794A8();
}

uint64_t sub_23F826748()
{
  return 0x65777465625F7369;
}

IntelligenceFlowPlannerSupport::QueryOperator_optional __swiftcall QueryOperator.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  char v4;
  IntelligenceFlowPlannerSupport::QueryOperator_optional result;

  v2 = v1;
  v3 = sub_23F694CF8();
  sub_23F693E04();
  v4 = 10;
  if (v3 < 0xA)
    v4 = v3;
  *v2 = v4;
  sub_23F694C84();
  return result;
}

void sub_23F8267B0()
{
  sub_23F7F6F48();
}

void sub_23F8267D0(uint64_t a1)
{
  char *v1;

  sub_23F7F74DC(a1, *v1);
}

void sub_23F8267D8()
{
  sub_23F7F7E18();
}

IntelligenceFlowPlannerSupport::QueryOperator_optional sub_23F8267F8(Swift::String *a1)
{
  return QueryOperator.init(rawValue:)(*a1);
}

void sub_23F826804(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = QueryOperator.rawValue.getter();
  a1[1] = v2;
  sub_23F694CC8();
}

uint64_t sub_23F826824()
{
  sub_23F8763E4();
  return sub_23FB2F38C();
}

uint64_t sub_23F826880()
{
  sub_23F8763E4();
  return sub_23FB2F374();
}

void sub_23F8268D0(char *a1)
{
  sub_23F6BE588(*a1);
}

uint64_t ActionParameterContext.statementId.getter()
{
  return sub_23F839AEC();
}

uint64_t ActionParameterContext.statementId.setter(uint64_t a1)
{
  return sub_23F839B28(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

uint64_t (*ActionParameterContext.statementId.modify())()
{
  return nullsub_1;
}

void ActionParameterContext.toolId.getter()
{
  sub_23F81CEB0(type metadata accessor for ActionParameterContext);
}

void ActionParameterContext.toolId.setter(uint64_t a1, uint64_t a2)
{
  sub_23F81F314(a1, a2, type metadata accessor for ActionParameterContext);
}

uint64_t (*ActionParameterContext.toolId.modify())()
{
  type metadata accessor for ActionParameterContext(0);
  sub_23F6F099C();
  return nullsub_1;
}

void ActionParameterContext.parameterId.getter()
{
  sub_23F82694C(type metadata accessor for ActionParameterContext);
}

void sub_23F82694C(uint64_t (*a1)(_QWORD))
{
  sub_23F876C04(a1);
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void ActionParameterContext.parameterId.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = sub_23F8774B0();
  type metadata accessor for ActionParameterContext(v3);
  sub_23F6F096C();
  *v1 = v2;
  v1[1] = v0;
  sub_23F694C84();
}

uint64_t (*ActionParameterContext.parameterId.modify())()
{
  type metadata accessor for ActionParameterContext(0);
  sub_23F6F09C4();
  return nullsub_1;
}

void ActionParameterContext.init(statementId:toolId:parameterId:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  sub_23F6B58C8();
  sub_23F70D880();
  v10 = sub_23F72E3F8();
  v11(v10);
  v12 = type metadata accessor for ActionParameterContext(0);
  v13 = (_QWORD *)(a5 + *(int *)(v12 + 20));
  *v13 = a1;
  v13[1] = a2;
  v14 = (_QWORD *)(a5 + *(int *)(v12 + 24));
  *v14 = a3;
  v14[1] = a4;
  sub_23F6B5F7C();
}

uint64_t sub_23F826A2C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  BOOL v6;
  char v8;

  v3 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
  if (v3 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x64496C6F6F74 && a2 == 0xE600000000000000;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6574656D61726170 && a2 == 0xEB00000000644972)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23FB2FB78();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F826B8C(char a1)
{
  if (!a1)
    return 0x6E656D6574617473;
  if (a1 == 1)
    return 0x64496C6F6F74;
  return 0x6574656D61726170;
}

uint64_t sub_23F826BE8()
{
  char *v0;

  return sub_23F826B8C(*v0);
}

uint64_t sub_23F826BF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F826A2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F826C14()
{
  sub_23F83FB78();
  return sub_23FB2FD10();
}

uint64_t sub_23F826C3C()
{
  sub_23F83FB78();
  return sub_23FB2FD1C();
}

void ActionParameterContext.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE v5[16];

  sub_23F6D3DC4();
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EACC00);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v5[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F70D4B8();
  sub_23F83FB78();
  sub_23F6B63A4();
  v5[15] = 0;
  sub_23F6B58C8();
  sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
  sub_23F876660();
  if (!v0)
  {
    type metadata accessor for ActionParameterContext(0);
    sub_23F87686C();
    v5[13] = 2;
    sub_23F87698C();
  }
  sub_23F6B56E0((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F70D9D8();
  sub_23F6D3710();
}

void ActionParameterContext.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_23F6B5220();
  v19 = v3;
  sub_23F6B58C8();
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B5C10(v5, v19);
  v22 = sub_23F6916B8(&qword_256EACC10);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23F78F260();
  v8 = type metadata accessor for ActionParameterContext(v7);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F693EB0();
  sub_23F877B38();
  sub_23F83FB78();
  sub_23F878F64();
  sub_23F7A02FC();
  if (v0)
  {
    sub_23F877804();
  }
  else
  {
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    sub_23F876F6C();
    sub_23F7717EC();
    sub_23F75E68C(v2, v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32));
    sub_23F879384();
    v10 = sub_23F879724();
    v11 = (uint64_t *)(v2 + *(int *)(v8 + 20));
    *v11 = v10;
    v11[1] = v12;
    sub_23F87780C();
    v13 = sub_23F878A8C();
    v14 = sub_23F7D243C();
    v16 = v15;
    v17(v14, v22);
    v18 = (uint64_t *)*(int *)(v8 + 24);
    *v18 = v13;
    v18[1] = v16;
    sub_23F876818(0, v20);
    sub_23F877804();
    sub_23F876820(0);
  }
  sub_23F8785C4();
  sub_23F6B5100();
}

void sub_23F826F2C()
{
  ActionParameterContext.init(from:)();
}

void sub_23F826F40()
{
  ActionParameterContext.encode(to:)();
}

uint64_t (*ActionStepResult.actionEventId.modify())()
{
  return nullsub_1;
}

void ActionStepResult.exprId.getter()
{
  sub_23F81CEB0(type metadata accessor for ActionStepResult);
}

void ActionStepResult.exprId.setter(uint64_t a1, uint64_t a2)
{
  sub_23F81F314(a1, a2, type metadata accessor for ActionStepResult);
}

uint64_t (*ActionStepResult.exprId.modify())()
{
  sub_23F878238();
  sub_23F6F099C();
  return nullsub_1;
}

void ActionStepResult.result.getter()
{
  sub_23F826FB4(type metadata accessor for ActionStepResult);
}

void sub_23F826FB4(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = sub_23F6F08D8(a1);
  sub_23F878DF4(*(int *)(v1 + 24));
  sub_23F694C84();
}

void ActionStepResult.result.setter(uint64_t a1)
{
  sub_23F826FEC(a1, type metadata accessor for ActionStepResult);
}

void sub_23F826FEC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = sub_23F876B7C(a1, a2);
  sub_23F878AF0(*(int *)(v2 + 24));
  sub_23F694C84();
}

uint64_t (*ActionStepResult.result.modify())()
{
  sub_23F878238();
  sub_23F6F09C4();
  return nullsub_1;
}

void ActionStepResult.toolId.getter()
{
  sub_23F81B864(type metadata accessor for ActionStepResult);
}

void ActionStepResult.toolId.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = sub_23F8774B0();
  type metadata accessor for ActionStepResult(v3);
  sub_23F6F096C();
  *v1 = v2;
  v1[1] = v0;
  sub_23F694C84();
}

uint64_t (*ActionStepResult.toolId.modify())()
{
  type metadata accessor for ActionStepResult(0);
  sub_23F6F0A54();
  return nullsub_1;
}

void ActionStepResult.init(actionEventId:exprId:result:toolId:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  sub_23F6D3A90();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = sub_23F72E034();
  sub_23F6B5A8C(v9, v11, v12, v10);
  v13 = sub_23F7B0BC4();
  sub_23F840E4C(v13, v14, v15);
  v16 = type metadata accessor for ActionStepResult(0);
  sub_23F878400(v16);
  sub_23F83A7A4(v5, v17, type metadata accessor for ActionResult);
  v18 = (_QWORD *)(v9 + *(int *)(v7 + 28));
  *v18 = v3;
  v18[1] = v1;
  sub_23F6B69E0();
}

void ActionStepResult.init(eventId:exprId:result:toolId:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  sub_23F6D3A90();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = sub_23F72E034();
  v11 = sub_23F8772CC();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v11, v12, v13, v10);
  sub_23F7F6110(v9, &qword_256EA2798);
  v14 = sub_23F6B6218();
  v15(v14);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v9, 0, 1, v10);
  v16 = type metadata accessor for ActionStepResult(0);
  sub_23F878400(v16);
  sub_23F83A7A4(v5, v17, type metadata accessor for ActionResult);
  v18 = (_QWORD *)(v9 + *(int *)(v7 + 28));
  *v18 = v3;
  v18[1] = v1;
  sub_23F6B69E0();
}

void ActionStepResult.init(eventId:exprId:result:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  _QWORD *v18;

  sub_23F6D3A90();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  sub_23F72E034();
  v9 = sub_23F87732C(v8);
  sub_23F876B14(v9, &qword_256EA2798);
  v10 = sub_23F7B0E48();
  sub_23F77DD54(v10, v11, v12);
  sub_23F878CF4(v8);
  sub_23F878238();
  sub_23F87843C();
  v14 = (_QWORD *)(v8 + v13);
  *v14 = v6;
  v14[1] = v4;
  sub_23F83A7A4(v2, v8 + *(int *)(v15 + 24), type metadata accessor for ActionResult);
  v16 = sub_23F6B7194();
  v17(v16);
  v18 = (_QWORD *)(v8 + *(int *)(v0 + 28));
  *v18 = 0;
  v18[1] = 0xE000000000000000;
  sub_23F6B69E0();
}

void ActionStepResult.stepId.modify()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  char v10;
  uint64_t v11;

  sub_23F6D3A90();
  v4 = sub_23F877DC4();
  *v0 = v4;
  *v4 = v1;
  v5 = sub_23F878A54();
  v6 = sub_23F877D80(*(_QWORD *)(v5 - 8));
  v4[1] = v6;
  v7 = sub_23F72E034();
  v8 = sub_23F877D54(v7);
  v9 = sub_23F879480((uint64_t)v8);
  sub_23F8781B8((uint64_t)v9);
  sub_23F6B5164((uint64_t)v6, 1, v2);
  if (v10)
  {
    v11 = _s30IntelligenceFlowPlannerSupport20PlatformPnRTelemetryC7startedy10Foundation4UUIDVAA12StartedStateO_0aE7Library0aB11IdentifiersVSgAGtFZfA1__0();
    sub_23F876B14(v11, &qword_256EA2798);
  }
  else
  {
    sub_23F72E0C8(v1, (uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
  }
  sub_23F6B69E0();
}

void _s30IntelligenceFlowPlannerSupport16ActionStepResultV6stepId10Foundation4UUIDVvg_0(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F6B6088();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F70DC34();
  sub_23F878500(v5, v6);
  v7 = sub_23F72E034();
  sub_23F6B5164((uint64_t)v4, 1, v7);
  if (v8)
  {
    v9 = _s30IntelligenceFlowPlannerSupport20PlatformPnRTelemetryC7startedy10Foundation4UUIDVAA12StartedStateO_0aE7Library0aB11IdentifiersVSgAGtFZfA1__0();
    sub_23F8797D0(v9, &qword_256EA2798);
  }
  else
  {
    sub_23F72E0C8(a1, (uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32));
  }
  sub_23F694C84();
}

uint64_t _s30IntelligenceFlowPlannerSupport16ActionStepResultV6stepId10Foundation4UUIDVvs_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_23F8797D0(a1, &qword_256EA2798);
  v3 = sub_23F72E034();
  sub_23F72E0C8(v1, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  return sub_23F6F07C4(v1, 0, 1, v3);
}

void ActionStepResult.eventId.modify()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  char v10;
  uint64_t v11;

  sub_23F6D3A90();
  v4 = sub_23F877DC4();
  *v0 = v4;
  *v4 = v1;
  v5 = sub_23F878A54();
  v6 = sub_23F877D80(*(_QWORD *)(v5 - 8));
  v4[1] = v6;
  v7 = sub_23F72E034();
  v8 = sub_23F877D54(v7);
  v9 = sub_23F879480((uint64_t)v8);
  sub_23F8781B8((uint64_t)v9);
  sub_23F6B5164((uint64_t)v6, 1, v2);
  if (v10)
  {
    v11 = _s30IntelligenceFlowPlannerSupport20PlatformPnRTelemetryC7startedy10Foundation4UUIDVAA12StartedStateO_0aE7Library0aB11IdentifiersVSgAGtFZfA1__0();
    sub_23F876B14(v11, &qword_256EA2798);
  }
  else
  {
    sub_23F72E0C8(v1, (uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
  }
  sub_23F6B69E0();
}

void sub_23F8274B8()
{
  uint64_t **v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);

  sub_23F6D3A90();
  v1 = *v0;
  v2 = (void *)(*v0)[4];
  v3 = (void *)(*v0)[5];
  v4 = (*v0)[3];
  v6 = **v0;
  v5 = (void *)(*v0)[1];
  if ((v7 & 1) != 0)
  {
    v8 = sub_23F6B68CC();
    v11 = sub_23F75E710(v8, v9, v10);
    sub_23F879440(v11, &qword_256EA2798);
    sub_23F75E710(v6, (uint64_t)v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
    sub_23F77E598(v6, 0);
    v12 = sub_23F7D2D5C();
    v13(v12);
  }
  else
  {
    sub_23F879440((uint64_t)v0, &qword_256EA2798);
    sub_23F75E710(v6, (uint64_t)v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
    sub_23F77E598(v6, 0);
  }
  free(v3);
  free(v2);
  free(v5);
  sub_23F8778F4(v1);
}

uint64_t sub_23F827570(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x76456E6F69746361 && a2 == 0xED00006449746E65;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x644972707865 && a2 == 0xE600000000000000;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x746C75736572 && a2 == 0xE600000000000000;
      if (v7 || (sub_23FB2FB78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x64496C6F6F74 && a2 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_23FB2FB78();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_23F82772C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F82776C + 4 * byte_23FB633AD[a1]))(0x76456E6F69746361, 0xED00006449746E65);
}

uint64_t sub_23F82776C()
{
  return 0x644972707865;
}

uint64_t sub_23F827780()
{
  return 0x746C75736572;
}

uint64_t sub_23F827794()
{
  return 0x64496C6F6F74;
}

uint64_t sub_23F8277A8()
{
  unsigned __int8 *v0;

  return sub_23F82772C(*v0);
}

uint64_t sub_23F8277B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F827570(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F8277D4()
{
  sub_23F83FBB4();
  return sub_23FB2FD10();
}

uint64_t sub_23F8277FC()
{
  sub_23F83FBB4();
  return sub_23FB2FD1C();
}

void ActionStepResult.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE v6[16];

  sub_23F6D3DC4();
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EACC18);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v6[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F70D4B8();
  sub_23F83FBB4();
  sub_23F6B63A4();
  v6[15] = 0;
  sub_23F72E034();
  sub_23F6B4EEC((uint64_t)&qword_256EA6620);
  sub_23F876834();
  if (!v0)
  {
    type metadata accessor for ActionStepResult(0);
    sub_23F87686C();
    v5 = sub_23F877144();
    type metadata accessor for ActionResult(v5);
    sub_23F6B4EEC((uint64_t)&unk_256EACA90);
    sub_23F70D4F0();
    v6[12] = 3;
    sub_23F87698C();
  }
  sub_23F6B56E0((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F70D9D8();
  sub_23F6D3710();
}

void ActionStepResult.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;

  sub_23F6B5220();
  v5 = v4;
  v21 = v6;
  sub_23F878260();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B52B0();
  sub_23F6916B8(&qword_256EA2798);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B573C();
  sub_23F6916B8(&qword_256EACC28);
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F6B51D0();
  v22 = (int *)type metadata accessor for ActionStepResult(v10);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B5C2C();
  sub_23FB2C4B8();
  sub_23F87732C(v2);
  sub_23F876BD8(v5);
  sub_23F83FBB4();
  sub_23F8787A0();
  sub_23F6B6DF4();
  if (v0)
  {
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v5);
    sub_23F7F6110(v2, &qword_256EA2798);
  }
  else
  {
    sub_23F6B4EEC((uint64_t)&qword_256EA6700);
    sub_23F876F6C();
    sub_23F878318();
    sub_23F840E4C(v3, v2, &qword_256EA2798);
    v13 = sub_23F70D944();
    v14 = (uint64_t *)(v2 + v22[5]);
    *v14 = v13;
    v14[1] = v15;
    sub_23F877210();
    sub_23F6B4EEC((uint64_t)&unk_256EACAA0);
    sub_23F87834C();
    sub_23F6B6E1C();
    sub_23F83A7A4(v1, v2 + v22[6], type metadata accessor for ActionResult);
    sub_23F8772E4();
    v16 = sub_23F70D944();
    v18 = v17;
    sub_23F878F9C();
    v19 = (uint64_t *)(v2 + v22[7]);
    *v19 = v16;
    v19[1] = v18;
    sub_23F876818(v2, v21);
    sub_23F877354();
    v20 = sub_23F7F64A8();
    sub_23F83A7D4(v20, v12);
  }
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23F827C40()
{
  ActionStepResult.init(from:)();
}

void sub_23F827C54()
{
  ActionStepResult.encode(to:)();
}

uint64_t (*StatementResult.actionEventId.modify())()
{
  return nullsub_1;
}

void StatementResult.toolId.getter()
{
  type metadata accessor for StatementResult(0);
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void StatementResult.toolId.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = sub_23F8774B0();
  type metadata accessor for StatementResult(v3);
  sub_23F6F096C();
  *v1 = v2;
  v1[1] = v0;
  sub_23F694C84();
}

uint64_t (*StatementResult.toolId.modify())()
{
  type metadata accessor for StatementResult(0);
  sub_23F6F099C();
  return nullsub_1;
}

void StatementResult.payload.getter()
{
  sub_23F826FB4(type metadata accessor for StatementResult);
}

void StatementResult.payload.setter(uint64_t a1)
{
  sub_23F826FEC(a1, type metadata accessor for StatementResult);
}

uint64_t (*StatementResult.payload.modify())()
{
  sub_23F877994();
  sub_23F6F09C4();
  return nullsub_1;
}

uint64_t StatementResult.resultStatementId.getter()
{
  return sub_23F827D50();
}

uint64_t sub_23F827D50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F8772B8();
  sub_23F6B58C8();
  v0 = sub_23F6B5994();
  return sub_23F6B64B0(v0, v1, v2, v3);
}

uint64_t StatementResult.resultStatementId.setter(uint64_t a1)
{
  return sub_23F827D98(a1, type metadata accessor for StatementResult);
}

uint64_t sub_23F827D98(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_23F6F0918(a1, a2);
  sub_23F6B58C8();
  v2 = sub_23F6B6190();
  return sub_23F6B64B0(v2, v3, v4, v5);
}

uint64_t (*StatementResult.resultStatementId.modify())()
{
  sub_23F877994();
  sub_23F6F0A54();
  return nullsub_1;
}

uint64_t StatementResult.originProgramStatementId.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F879738();
  sub_23F6B58C8();
  v0 = sub_23F6B5994();
  return sub_23F6B64B0(v0, v1, v2, v3);
}

uint64_t StatementResult.originProgramStatementId.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F87992C();
  sub_23F6B58C8();
  v0 = sub_23F6B6190();
  return sub_23F6B64B0(v0, v1, v2, v3);
}

uint64_t (*StatementResult.originProgramStatementId.modify())()
{
  type metadata accessor for StatementResult(0);
  sub_23F6F0B5C();
  return nullsub_1;
}

uint64_t StatementResult.originTaskStatementId.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F879738();
  sub_23F6B58C8();
  v0 = sub_23F6B5994();
  return sub_23F6B64B0(v0, v1, v2, v3);
}

uint64_t StatementResult.originTaskStatementId.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F87992C();
  sub_23F6B58C8();
  v0 = sub_23F6B6190();
  return sub_23F6B64B0(v0, v1, v2, v3);
}

uint64_t (*StatementResult.originTaskStatementId.modify())()
{
  type metadata accessor for StatementResult(0);
  sub_23F6F0D38();
  return nullsub_1;
}

#error "23F827FA8: call analysis failed (funcsize=50)"

void static StatementResultPayload.== infix(_:_:)()
{
  sub_23F8234F0();
}

uint64_t sub_23F827FEC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v8;

  v2 = a1 == 0x76456E6F69746361 && a2 == 0xED00006449746E65;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x64496C6F6F74 && a2 == 0xE600000000000000;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x64616F6C796170 && a2 == 0xE700000000000000;
      if (v7 || (sub_23FB2FB78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000011 && a2 == 0x800000023FB34C10 || (sub_23FB2FB78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000018 && a2 == 0x800000023FB34C30 || (sub_23FB2FB78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else if (a1 == 0xD000000000000015 && a2 == 0x800000023FB34C50)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        v8 = sub_23FB2FB78();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 5;
        else
          return 6;
      }
    }
  }
}

uint64_t sub_23F828268(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F8282A8 + 4 * byte_23FB633B1[a1]))(0x76456E6F69746361, 0xED00006449746E65);
}

uint64_t sub_23F8282A8()
{
  return 0x64496C6F6F74;
}

uint64_t sub_23F8282BC()
{
  return 0x64616F6C796170;
}

unint64_t sub_23F8282D4()
{
  return 0xD000000000000011;
}

unint64_t sub_23F8282F0()
{
  return 0xD000000000000018;
}

uint64_t sub_23F828328()
{
  unsigned __int8 *v0;

  return sub_23F828268(*v0);
}

uint64_t sub_23F828330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F827FEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F828354()
{
  sub_23F83FBF0();
  return sub_23FB2FD10();
}

uint64_t sub_23F82837C()
{
  sub_23F83FBF0();
  return sub_23FB2FD1C();
}

void StatementResult.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10, char a11, char a12, char a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char v34;

  sub_23F6B5220();
  a25 = v28;
  a26 = v29;
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EACC30);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&a9 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F70D4B8();
  sub_23F83FBF0();
  sub_23F6B63A4();
  a16 = 0;
  sub_23F72E034();
  sub_23F6B4EEC((uint64_t)&qword_256EA6620);
  sub_23F876834();
  if (!v26)
  {
    type metadata accessor for StatementResult(0);
    a15 = 1;
    sub_23F8773D8();
    v33 = sub_23F877144();
    type metadata accessor for StatementResultPayload(v33);
    sub_23F6B4EEC((uint64_t)&unk_256EACC40);
    sub_23F70D4F0();
    sub_23F8788A8();
    a13 = v34;
    sub_23F6B58C8();
    sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
    sub_23F70D4F0();
    sub_23F8790A8();
    sub_23F70D4F0();
    a11 = 5;
    sub_23F70D4F0();
  }
  sub_23F6B56E0((uint64_t)v32, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
  sub_23F877A30();
  sub_23F6B5100();
}

void StatementResult.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;

  sub_23F6B5220();
  sub_23F879054();
  v27 = v5;
  v6 = sub_23F6B58C8();
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F693E0C();
  v28 = v8;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6D3D14();
  v29 = v10;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B6580();
  v30 = v12;
  v13 = sub_23F6D398C();
  type metadata accessor for StatementResultPayload(v13);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B5268();
  sub_23F6916B8(&qword_256EA2798);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B5598(v16, v26);
  sub_23F6916B8(&qword_256EACC48);
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v17);
  v18 = sub_23F6B51D0();
  v19 = type metadata accessor for StatementResult(v18);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5864();
  v21 = sub_23FB2C4B8();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v2, 1, 1, v21);
  v36 = (int *)v19;
  v22 = (uint64_t *)(v2 + *(int *)(v19 + 20));
  *v22 = 0;
  v22[1] = 0;
  v33 = v22;
  v23 = *(_QWORD *)(v0 + 24);
  sub_23F8773E8();
  sub_23F83FBF0();
  sub_23F8787AC();
  sub_23F877128();
  if (v1)
  {
    v24 = sub_23F878854();
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v24);
    sub_23F7F6110(v2, &qword_256EA2798);
    sub_23F878C90();
    if ((_DWORD)v1)
    {
      sub_23F83A7D4(v2 + v36[6], type metadata accessor for StatementResultPayload);
      if (!(_DWORD)v0)
        goto LABEL_5;
    }
    else if (!(_DWORD)v0)
    {
LABEL_5:
      if (!(_DWORD)v23)
        goto LABEL_10;
      goto LABEL_9;
    }
    sub_23F70D728(v2 + v36[7], *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
    if (!(_DWORD)v23)
      goto LABEL_10;
LABEL_9:
    sub_23F70D728(v2 + v36[8], *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
    goto LABEL_10;
  }
  sub_23F6B4EEC((uint64_t)&qword_256EA6700);
  sub_23F876F6C();
  sub_23F878AA4();
  sub_23F840E4C(v32, v2, &qword_256EA2798);
  sub_23F70DD04();
  sub_23FB2FA10();
  sub_23F879860();
  sub_23F878C90();
  *v33 = v32;
  v33[1] = v21;
  sub_23F877210();
  sub_23F6B4EEC((uint64_t)&unk_256EACC50);
  sub_23F87834C();
  sub_23F876928();
  sub_23F878BC8();
  sub_23F876AE4();
  sub_23F83A7A4(v4, v2 + v36[6], type metadata accessor for StatementResultPayload);
  sub_23F6B4EEC((uint64_t)&unk_256EA1900);
  sub_23F8791B0();
  v25 = v30;
  sub_23F876AE4();
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32);
  v31(v2 + v36[7], v25, v35);
  sub_23F8769F0();
  v31(v2 + v36[8], v29, v35);
  sub_23F8769F0();
  sub_23F8776B8(*(uint64_t (**)(uint64_t, _QWORD))(v3 + 8));
  v31(v2 + v36[9], v28, v35);
  sub_23F878194(v2, v27);
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v0);
  sub_23F877068(v2);
LABEL_10:
  sub_23F8777E8();
  sub_23F6B5100();
}

void sub_23F828A0C()
{
  StatementResult.init(from:)();
}

#error "23F828A28: call analysis failed (funcsize=5)"

uint64_t StatementResultPayload.outcome.getter()
{
  return sub_23F839AEC();
}

uint64_t StatementResultPayload.outcome.setter(uint64_t a1)
{
  return sub_23F839B28(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE53330]);
}

uint64_t (*StatementResultPayload.outcome.modify())()
{
  return nullsub_1;
}

void StatementResultPayload.response.getter()
{
  sub_23F81D874(type metadata accessor for StatementResultPayload);
}

void StatementResultPayload.response.setter(uint64_t a1)
{
  sub_23F81D8AC(a1, type metadata accessor for StatementResultPayload);
}

uint64_t (*StatementResultPayload.response.modify())()
{
  type metadata accessor for StatementResultPayload(0);
  sub_23F6F099C();
  return nullsub_1;
}

uint64_t sub_23F828AAC()
{
  sub_23F83FC2C();
  return sub_23FB2FD10();
}

uint64_t sub_23F828AD4()
{
  sub_23F83FC2C();
  return sub_23FB2FD1C();
}

void StatementResultPayload.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  sub_23F6D3DC4();
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EACC58);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F70D4B8();
  sub_23F83FC2C();
  sub_23F6B63A4();
  sub_23F878390();
  sub_23FB2D0DC();
  sub_23F6B4EEC((uint64_t)&unk_256EACC68);
  sub_23F876660();
  if (!v0)
  {
    type metadata accessor for StatementResultPayload(0);
    sub_23F878208();
    sub_23F6B4EEC((uint64_t)&unk_256EACC70);
    sub_23F876834();
  }
  sub_23F6B56E0((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F70D9D8();
  sub_23F6D3710();
}

void StatementResultPayload.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_23F6B5220();
  v4 = v3;
  v17 = v5;
  sub_23F6916B8(&qword_256EA2780);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  v19 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6D398C();
  v20 = sub_23FB2D0DC();
  v18 = *(_QWORD *)(v20 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5BD8(v9, v16);
  v22 = sub_23F6916B8(&qword_256EACC78);
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_23F78F260();
  type metadata accessor for StatementResultPayload(v11);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23F877668();
  sub_23F8775F0(v13);
  sub_23F83FC2C();
  sub_23F7A02FC();
  if (v1)
  {
    v14 = sub_23F877638();
    sub_23F879400(v14, &qword_256EA2780);
  }
  else
  {
    sub_23F879420();
    sub_23F6B4EEC((uint64_t)&unk_256EACC80);
    sub_23F876AE4();
    sub_23F78F5D0(v2, v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
    sub_23F6B6360();
    sub_23F6B4EEC((uint64_t)&unk_256EACC88);
    sub_23F877544();
    sub_23F876D60();
    sub_23F8794B4(v0, v15, &qword_256EA2780);
    sub_23F876818(v2, v17);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v16);
    sub_23F876820(v2);
  }
  sub_23F8777E8();
  sub_23F6B5100();
}

void sub_23F828DE4()
{
  StatementResultPayload.init(from:)();
}

void sub_23F828DF8()
{
  StatementResultPayload.encode(to:)();
}

uint64_t (*ResponseGenerationRequest.statementResults.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F828E20(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x800000023FB34C70)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_23F828EA4()
{
  return 0xD000000000000010;
}

uint64_t sub_23F828EC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F828E20(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F828EEC()
{
  sub_23F83FC68();
  return sub_23FB2FD10();
}

uint64_t sub_23F828F14()
{
  sub_23F83FC68();
  return sub_23FB2FD1C();
}

void ResponseGenerationRequest.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;

  sub_23F6B5220();
  a19 = v23;
  a20 = v24;
  sub_23F878C5C();
  sub_23F6916B8(&qword_256EACC90);
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *v20;
  sub_23F70D508(v21);
  sub_23F83FC68();
  sub_23F6F33A0();
  a10 = v28;
  sub_23F6916B8(&qword_256EACCA0);
  sub_23F83FCA4();
  sub_23F87693C();
  sub_23F6B530C((uint64_t)v27, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  sub_23F77DB18();
  sub_23F6B5100();
}

void ResponseGenerationRequest.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F6B5220();
  sub_23F877118();
  sub_23F6916B8(&qword_256EACCB0);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F876754(v0);
  sub_23F83FC68();
  sub_23F75B598();
  if (!v1)
  {
    sub_23F6916B8(&qword_256EACCA0);
    sub_23F83FD20();
    sub_23F6B6E1C();
    sub_23F6F1CB8(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    sub_23F878D14();
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v0);
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23F8290B4()
{
  ResponseGenerationRequest.init(from:)();
}

#error "23F8290D0: call analysis failed (funcsize=5)"

uint64_t (*QueryStepResults.queryResults.modify())()
{
  return nullsub_1;
}

uint64_t QueryStepResults.originStatementId.getter()
{
  return sub_23F811704(type metadata accessor for QueryStepResults);
}

uint64_t QueryStepResults.originStatementId.setter(uint64_t a1)
{
  return sub_23F811750(a1, type metadata accessor for QueryStepResults);
}

uint64_t (*QueryStepResults.originStatementId.modify())()
{
  sub_23F8786E8();
  sub_23F6F099C();
  return nullsub_1;
}

uint64_t QueryStepResults.queryEventId.getter()
{
  return sub_23F825F6C(type metadata accessor for QueryStepResults);
}

uint64_t QueryStepResults.queryEventId.setter(uint64_t a1)
{
  return sub_23F825FB8(a1, type metadata accessor for QueryStepResults);
}

uint64_t (*QueryStepResults.queryEventId.modify())()
{
  sub_23F8786E8();
  sub_23F6F09C4();
  return nullsub_1;
}

uint64_t QueryStepResults.init(queryResults:originStatementId:queryEventId:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  sub_23F879900();
  *v1 = v0;
  v2 = (uint64_t)v1 + *(int *)(sub_23F8786E8() + 20);
  v3 = sub_23F6B58C8();
  sub_23F7B0990(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_23F72E034();
  v4 = sub_23F8769D8();
  return sub_23F876B50(v4, v5, v6, v7);
}

uint64_t sub_23F8291E0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x7365527972657571 && a2 == 0xEC00000073746C75;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023FB34C90 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6576457972657571 && a2 == 0xEC0000006449746ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v7 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23F829358(char a1)
{
  if (!a1)
    return 0x7365527972657571;
  if (a1 == 1)
    return 0xD000000000000011;
  return 0x6576457972657571;
}

uint64_t sub_23F8293C4()
{
  char *v0;

  return sub_23F829358(*v0);
}

uint64_t sub_23F8293CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F8291E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F8293F0()
{
  sub_23F83FD9C();
  return sub_23FB2FD10();
}

uint64_t sub_23F829418()
{
  sub_23F83FD9C();
  return sub_23FB2FD1C();
}

void QueryStepResults.encode(to:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  _BYTE v6[8];
  uint64_t v7;

  sub_23F6D3DC4();
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EACCC0);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v6[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F70D4B8();
  sub_23F83FD9C();
  sub_23F6B63A4();
  v7 = *v1;
  v6[7] = 0;
  sub_23F8797D8();
  sub_23F879968((uint64_t)&unk_256EACCD8);
  sub_23F879140();
  sub_23F70D4F0();
  if (!v0)
  {
    type metadata accessor for QueryStepResults(0);
    v6[6] = 1;
    sub_23F6B58C8();
    sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
    sub_23F87919C();
    sub_23F70D4F0();
    v6[5] = 2;
    sub_23F72E034();
    sub_23F6B4EEC((uint64_t)&qword_256EA6620);
    sub_23F70D4F0();
  }
  sub_23F6B56E0((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F70D9D8();
  sub_23F6D3710();
}

void QueryStepResults.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t StepResults;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  char v35;
  char v36;

  sub_23F6B5220();
  sub_23F8799E4(v17);
  v28 = sub_23F72E034();
  v27[0] = *(_QWORD *)(v28 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v18);
  v29 = (char *)v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_23F6B58C8();
  sub_23F70D9A8();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B53AC();
  v31 = sub_23F6916B8(&qword_256EACCE8);
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v21);
  v22 = sub_23F77DB24();
  StepResults = type metadata accessor for QueryStepResults(v22);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6B52B0();
  v33 = v10;
  sub_23F876BD8(v10);
  sub_23F83FD9C();
  v32 = v16;
  sub_23F7A02FC();
  if (v11)
  {
    sub_23F72E47C();
  }
  else
  {
    v34 = v13;
    v25 = (uint64_t)v12;
    sub_23F8797D8();
    v36 = 0;
    sub_23F879968((uint64_t)&unk_256EACCF0);
    sub_23F8788E0();
    sub_23F7717EC();
    *v12 = a10;
    sub_23F8793D4();
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    sub_23F7717EC();
    sub_23F75E710((uint64_t)v12 + *(int *)(StepResults + 20), v14, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 32));
    v35 = 2;
    sub_23F6B4EEC((uint64_t)&qword_256EA6700);
    v26 = (uint64_t)v29;
    sub_23FB2FA7C();
    sub_23F878B84();
    sub_23F6B5EF0(v25 + *(int *)(StepResults + 24), v26, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27[0] + 32));
    sub_23F876818(v25, v27[1]);
    sub_23F72E47C();
    sub_23F876820(v25);
  }
  sub_23F8785C4();
  sub_23F6B5100();
}

void sub_23F829868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  QueryStepResults.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F82987C()
{
  QueryStepResults.encode(to:)();
}

void QueryResults.candidates.setter()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23F877DB8();
  *v1 = v0;
  sub_23F694CC8();
}

uint64_t (*QueryResults.candidates.modify())()
{
  return nullsub_1;
}

IntelligenceFlowPlannerSupport::QueryResults __swiftcall QueryResults.init(candidates:)(IntelligenceFlowPlannerSupport::QueryResults candidates)
{
  IntelligenceFlowPlannerSupport::QueryResults *v1;

  v1->candidates._rawValue = candidates.candidates._rawValue;
  return candidates;
}

void static QueryResults.== infix(_:_:)()
{
  sub_23F698BA0();
}

void sub_23F8298D8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x74616469646E6163 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F6B5280();
    sub_23F693E04();
  }
  sub_23F694CC8();
}

void sub_23F82995C(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23F8298D8(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_23F829984()
{
  sub_23F83FE50();
  return sub_23FB2FD10();
}

uint64_t sub_23F8299AC()
{
  sub_23F83FE50();
  return sub_23FB2FD1C();
}

void QueryResults.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;

  sub_23F6B5220();
  a19 = v23;
  a20 = v24;
  sub_23F878C5C();
  sub_23F6916B8(&qword_256EACD00);
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *v20;
  sub_23F70D508(v21);
  sub_23F83FE50();
  sub_23F6F33A0();
  a10 = v28;
  sub_23F6916B8(&qword_256EACD10);
  sub_23F83FE8C();
  sub_23F87693C();
  sub_23F6B530C((uint64_t)v27, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  sub_23F77DB18();
  sub_23F6B5100();
}

void QueryResults.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F6B5220();
  sub_23F877118();
  sub_23F6916B8(&qword_256EACD28);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F876754(v0);
  sub_23F83FE50();
  sub_23F75B598();
  if (!v1)
  {
    sub_23F6916B8(&qword_256EACD10);
    sub_23F83FF08();
    sub_23F6B6E1C();
    sub_23F6F1CB8(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    sub_23F878D14();
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v0);
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23F829B4C()
{
  QueryResults.init(from:)();
}

#error "23F829B68: call analysis failed (funcsize=5)"

uint64_t Candidate.value.getter()
{
  return sub_23F839AEC();
}

uint64_t Candidate.value.setter(uint64_t a1)
{
  return sub_23F839B28(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18]);
}

uint64_t (*Candidate.value.modify())()
{
  return nullsub_1;
}

void Candidate.source.getter()
{
  _BYTE *v0;
  uint64_t v1;

  *v0 = *(_BYTE *)(v1 + *(int *)(sub_23F879750() + 20));
  sub_23F694CC8();
}

void Candidate.source.setter(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  *(_BYTE *)(v1 + *(int *)(type metadata accessor for Candidate(0) + 20)) = v2;
  sub_23F694CC8();
}

uint64_t (*Candidate.source.modify())()
{
  type metadata accessor for Candidate(0);
  sub_23F6F099C();
  return nullsub_1;
}

void Candidate.promptStatus.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F879750();
  sub_23F8796E4();
  *(_QWORD *)v0 = v1;
  *(_BYTE *)(v0 + 8) = v2;
  sub_23F694CC8();
}

void Candidate.promptStatus.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = v1 + *(int *)(type metadata accessor for Candidate(0) + 24);
  *(_QWORD *)v4 = v2;
  *(_BYTE *)(v4 + 8) = v3;
  sub_23F694C84();
}

uint64_t (*Candidate.promptStatus.modify())()
{
  type metadata accessor for Candidate(0);
  sub_23F6F09C4();
  return nullsub_1;
}

uint64_t Candidate.statementId.getter()
{
  return sub_23F827D50();
}

uint64_t Candidate.statementId.setter(uint64_t a1)
{
  return sub_23F827D98(a1, type metadata accessor for Candidate);
}

uint64_t (*Candidate.statementId.modify())()
{
  sub_23F878700();
  sub_23F6F0A54();
  return nullsub_1;
}

void Candidate.init(value:source:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);

  sub_23F6B50E8();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  sub_23F6B58C8();
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F693EB0();
  v9 = *v3;
  v10 = (int *)sub_23F878700();
  v11 = v7 + v10[6];
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = 1;
  v12 = *(_QWORD *)(sub_23F6B6634() - 8);
  v13 = sub_23F6B63F4();
  sub_23F77DD54(v13, v14, v15);
  *(_BYTE *)(v7 + v10[5]) = v9;
  sub_23F8773AC();
  sub_23F6B563C(v5, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  sub_23F6B633C(v7 + v10[7], v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32));
  sub_23F693DDC();
}

uint64_t Candidate.init(value:source:statementId:)@<X0>(char *a1@<X1>, uint64_t a2@<X8>)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  v3 = *a1;
  v4 = type metadata accessor for Candidate(0);
  v5 = a2 + *(int *)(v4 + 24);
  *(_QWORD *)v5 = 0;
  *(_BYTE *)(v5 + 8) = 1;
  v6 = sub_23F6B6634();
  sub_23F7B0990(a2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32));
  *(_BYTE *)(a2 + *(int *)(v4 + 20)) = v3;
  sub_23F6B58C8();
  v7 = sub_23F8769D8();
  return sub_23F876B50(v7, v8, v9, v10);
}

void Candidate.init(value:source:promptStatus:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;

  sub_23F6B50E8();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = sub_23F6B58C8();
  v20 = *(_QWORD *)(v9 - 8);
  v21 = v9;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5208();
  v11 = *v4;
  v12 = *v2;
  v13 = *((_BYTE *)v2 + 8);
  v14 = (int *)type metadata accessor for Candidate(0);
  v15 = v8 + v14[6];
  v16 = *(_QWORD *)(sub_23F6B6634() - 8);
  v17 = sub_23F8781AC();
  sub_23F6B633C(v17, v18, v19);
  *(_BYTE *)(v8 + v14[5]) = v11;
  *(_QWORD *)v15 = v12;
  *(_BYTE *)(v15 + 8) = v13;
  sub_23F8773AC();
  sub_23F6B530C(v6, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v8 + v14[7], v0, v21);
  sub_23F693DDC();
}

uint64_t Candidate.init(value:source:promptStatus:statementId:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  char v3;
  uint64_t *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);

  sub_23F6D3A90();
  v1 = v0;
  v3 = *v2;
  v5 = *v4;
  v6 = *((_BYTE *)v4 + 8);
  v7 = type metadata accessor for Candidate(0);
  v8 = v1 + *(int *)(v7 + 24);
  v9 = sub_23F6B6634();
  sub_23F7B0990(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32));
  *(_BYTE *)(v1 + *(int *)(v7 + 20)) = v3;
  *(_QWORD *)v8 = v5;
  *(_BYTE *)(v8 + 8) = v6;
  sub_23F6B58C8();
  v10 = sub_23F8769D8();
  return v11(v10);
}

uint64_t Candidate.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_23FB2F7AC();
  sub_23F87841C();
  sub_23FB2F254();
  sub_23F6B6634();
  sub_23FB2F8FC();
  sub_23F876D94();
  v1 = type metadata accessor for Candidate(0);
  sub_23F7F8594(*(_BYTE *)(v0 + *(int *)(v1 + 20)));
  sub_23F876B94();
  if (*(_BYTE *)(v0 + *(int *)(v1 + 24) + 8) != 1)
  {
    sub_23F877F5C();
    sub_23FB2FB48();
    sub_23F6B68F8();
    sub_23F6B5908();
    sub_23F8767CC();
  }
  sub_23F750320();
  sub_23F6B5908();
  sub_23F876774();
  sub_23F6B58C8();
  sub_23F6B4EEC((uint64_t)&unk_256EA1E40);
  sub_23F877A70();
  sub_23FB2F254();
  sub_23F693E04();
  return 0;
}

uint64_t Candidate.Source.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23F8794E8();
  return ((uint64_t (*)(uint64_t))((char *)sub_23F82A12C + 4 * byte_23FB633B7[v1]))(v0);
}

unint64_t sub_23F82A130()
{
  return sub_23F878654();
}

uint64_t sub_23F82A14C()
{
  return 0x72616573696E6D6FLL;
}

uint64_t Candidate.Source.rawValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23F8794E8();
  return ((uint64_t (*)(uint64_t))((char *)sub_23F82A18C + 4 * byte_23FB633BF[v1]))(v0);
}

unint64_t sub_23F82A190()
{
  return sub_23F878654();
}

uint64_t sub_23F82A1AC()
{
  return 0x72616573696E6D6FLL;
}

IntelligenceFlowPlannerSupport::Candidate::Source_optional __swiftcall Candidate.Source.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  char v4;
  IntelligenceFlowPlannerSupport::Candidate::Source_optional result;

  v2 = v1;
  v3 = sub_23F694CF8();
  sub_23F693E04();
  v4 = 8;
  if (v3 < 8)
    v4 = v3;
  *v2 = v4;
  sub_23F694C84();
  return result;
}

IntelligenceFlowPlannerSupport::Candidate::Source_optional sub_23F82A210(Swift::String *a1)
{
  return Candidate.Source.init(rawValue:)(*a1);
}

void sub_23F82A21C(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = Candidate.Source.rawValue.getter();
  a1[1] = v2;
  sub_23F694CC8();
}

uint64_t sub_23F82A23C()
{
  sub_23F8763A8();
  return sub_23FB2F38C();
}

uint64_t sub_23F82A298()
{
  sub_23F8763A8();
  return sub_23FB2F374();
}

void sub_23F82A2E4(char *a1)
{
  sub_23F6BDE70(*a1);
}

void sub_23F82A2F4()
{
  sub_23F7F6F48();
}

void sub_23F82A314(uint64_t a1)
{
  char *v1;

  sub_23F7F70F0(a1, *v1);
}

void sub_23F82A31C()
{
  sub_23F7F7E18();
}

void Candidate.PromptStatus.description.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) != 1)
  {
    sub_23F877F5C();
    sub_23FB2FB48();
    sub_23F6B68F8();
    sub_23F693E04();
    sub_23F8767CC();
  }
  sub_23F8774C0();
}

uint64_t static Candidate.PromptStatus.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;

  v2 = *(unsigned __int8 *)(a2 + 8);
  v3 = (*(_QWORD *)a1 == *(_QWORD *)a2) & ~v2;
  if (*(_QWORD *)a2)
    v4 = *(unsigned __int8 *)(a2 + 8);
  else
    v4 = 0;
  if (*(_QWORD *)a2)
    v2 = 0;
  if (*(_QWORD *)a1)
    v5 = v4;
  else
    v5 = v2;
  if (*(_BYTE *)(a1 + 8) == 1)
    return v5;
  else
    return v3;
}

void Candidate.PromptStatus.hash(into:)()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) != 1)
    sub_23FB2FC68();
  sub_23FB2FC68();
  sub_23F694CC8();
}

uint64_t sub_23F82A454(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656D7269666E6F63 && a2 == 0xE900000000000064;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x64656B636970 && a2 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23FB2FB78();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F82A594(char a1)
{
  if (!a1)
    return 1701736302;
  if (a1 == 1)
    return 0x656D7269666E6F63;
  return 0x64656B636970;
}

uint64_t sub_23F82A5E4()
{
  char *v0;

  return sub_23F82A594(*v0);
}

uint64_t sub_23F82A5EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F82A454(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F82A610()
{
  sub_23F83FF84();
  return sub_23FB2FD10();
}

uint64_t sub_23F82A638()
{
  sub_23F83FF84();
  return sub_23FB2FD1C();
}

uint64_t sub_23F82A660()
{
  sub_23F83FFFC();
  return sub_23FB2FD10();
}

uint64_t sub_23F82A688()
{
  sub_23F83FFFC();
  return sub_23FB2FD1C();
}

uint64_t sub_23F82A6B0()
{
  sub_23F840038();
  return sub_23FB2FD10();
}

uint64_t sub_23F82A6D8()
{
  sub_23F840038();
  return sub_23FB2FD1C();
}

uint64_t sub_23F82A700()
{
  sub_23F83FFC0();
  return sub_23FB2FD10();
}

uint64_t sub_23F82A728()
{
  sub_23F83FFC0();
  return sub_23FB2FD1C();
}

void Candidate.PromptStatus.encode(to:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_23F6B5220();
  v3 = v0;
  v5 = v4;
  v19 = *(_QWORD *)(sub_23F6916B8(&qword_256EACD40) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B5C10(v7, v16);
  sub_23F6916B8(&qword_256EACD48);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B57F4(v9, v17);
  sub_23F6916B8(&qword_256EACD50);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5298();
  sub_23F6916B8(&qword_256EACD58);
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F693EB0();
  v12 = *v3;
  v13 = *((unsigned __int8 *)v3 + 8);
  sub_23F876754(v5);
  sub_23F83FF84();
  sub_23F878C30();
  if (v13 == 1)
  {
    if (v12)
    {
      sub_23F879378();
      sub_23F6B5610();
      v14 = sub_23F7D2C3C();
    }
    else
    {
      sub_23F840038();
      sub_23F6B5610();
      v14 = sub_23F6B61DC();
    }
    v15(v14);
    sub_23F70D728(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  else
  {
    sub_23F879584();
    sub_23F6B5610();
    sub_23FB2FB0C();
    sub_23F6B563C(v18, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
    sub_23F70D728(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  sub_23F77DB18();
  sub_23F6B5100();
}

void Candidate.PromptStatus.hashValue.getter()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_23F6B53C4();
  if (v1 != 1)
    sub_23FB2FC68();
  sub_23F6B5A48();
  sub_23F6B5608();
  sub_23F6B5398();
}

void Candidate.PromptStatus.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  sub_23F6B5220();
  v4 = v3;
  v36 = v5;
  v34 = *(_QWORD *)(sub_23F6916B8(&qword_256EACD80) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F70D7A4(v7, v31);
  sub_23F6916B8(&qword_256EACD88);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5BD8(v9, v32);
  v35 = sub_23F6916B8(&qword_256EACD90);
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5268();
  sub_23F6916B8(&qword_256EACD98);
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F693EB0();
  sub_23F70D6E4(v4);
  sub_23F83FF84();
  sub_23F877EB0();
  sub_23FB2FCB0();
  if (!v0)
  {
    v33 = v2;
    v12 = v1;
    v13 = sub_23FB2FA94();
    if (*(_QWORD *)(v13 + 16))
    {
      sub_23F8794C8();
      v14 = *(unsigned __int8 *)(v13 + 32);
      sub_23F6B4E44(1, v15, v13, v13 + 32, 0, v16);
      v18 = v17;
      v20 = v19;
      sub_23F717D54();
      if (v18 == v20 >> 1)
      {
        if (v14)
        {
          if (v14 != 1)
          {
            sub_23F879584();
            sub_23FB2F9F8();
            v23 = sub_23FB2FA70();
            sub_23F6B530C(v37, *(uint64_t (**)(uint64_t, uint64_t))(v34 + 8));
            sub_23F6B51C8();
            sub_23F6B563C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v33 + 8));
            v30 = 0;
LABEL_15:
            *(_QWORD *)v36 = v23;
            *(_BYTE *)(v36 + 8) = v30;
            v27 = (uint64_t)v4;
            goto LABEL_11;
          }
          sub_23F879378();
          sub_23F878B0C();
          sub_23F87848C();
          v21 = sub_23F6B640C();
          v22(v21);
          sub_23F6B51C8();
          sub_23F6B563C(v18, *(uint64_t (**)(uint64_t, uint64_t))(v33 + 8));
          v23 = 1;
        }
        else
        {
          sub_23F840038();
          sub_23F87848C();
          v28 = sub_23F6B61DC();
          v29(v28, v35);
          sub_23F6B51C8();
          sub_23F6B563C(v18, *(uint64_t (**)(uint64_t, uint64_t))(v33 + 8));
          v23 = 0;
        }
        v30 = 1;
        goto LABEL_15;
      }
      v12 = v1;
    }
    v24 = sub_23F6B6334();
    sub_23F6B5AD4();
    v26 = v25;
    sub_23F6916B8(&qword_256EA1870);
    *v26 = &type metadata for Candidate.PromptStatus;
    sub_23FB2FA04();
    sub_23F6B56B8();
    sub_23F759774((uint64_t)v26, *MEMORY[0x24BEE26D0], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104));
    swift_willThrow();
    sub_23F780740();
    sub_23F6B563C(v12, *(uint64_t (**)(uint64_t, uint64_t))(v33 + 8));
  }
  v27 = (uint64_t)v4;
LABEL_11:
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v27);
  sub_23F8777E8();
  sub_23F6B5100();
}

void sub_23F82AD1C()
{
  Candidate.PromptStatus.init(from:)();
}

void sub_23F82AD30()
{
  Candidate.PromptStatus.encode(to:)();
}

uint64_t sub_23F82AD54()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_23FB2FC5C();
  if (v1 != 1)
    sub_23FB2FC68();
  sub_23FB2FC68();
  return sub_23FB2FC8C();
}

void static Candidate.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  sub_23F6B6B7C();
  if ((sub_23FB2ED14() & 1) == 0
    || (v1 = type metadata accessor for Candidate(0), sub_23F6BDE70(*(_BYTE *)(v0 + *(int *)(v1 + 20))), (v2 & 1) == 0))
  {
LABEL_8:
    sub_23F694C84();
    return;
  }
  sub_23F8796E4();
  if (v6 == 1)
  {
    if (v5)
    {
      if (!v4)
        v3 = 0;
      if ((v3 & 1) == 0)
        goto LABEL_8;
    }
    else
    {
      if (v4)
        v3 = 0;
      if ((v3 & 1) == 0)
        goto LABEL_8;
    }
  }
  else
  {
    if (v5 != v4)
      v3 = 1;
    if ((v3 & 1) != 0)
      goto LABEL_8;
  }
  sub_23F70D938(*(int *)(v1 + 28));
  sub_23F877260();
}

void Candidate.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_23F6B6634();
  sub_23F6B4EEC((uint64_t)&unk_256EA26F8);
  sub_23F6B5FE0();
  sub_23FB2F074();
  type metadata accessor for Candidate(0);
  sub_23F878C38();
  sub_23F7F70F0(a1, *(_BYTE *)(v1 + v4));
  if (*(_BYTE *)(v1 + *(int *)(v3 + 24) + 8) != 1)
    sub_23FB2FC68();
  sub_23FB2FC68();
  sub_23F6B58C8();
  sub_23F6B4EEC((uint64_t)&qword_256EA15A8);
  sub_23F6B63F4();
  sub_23FB2F074();
  sub_23F6B5F7C();
}

uint64_t sub_23F82AF38(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656372756F73 && a2 == 0xE600000000000000;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x745374706D6F7270 && a2 == 0xEC00000073757461;
      if (v7 || (sub_23FB2FB78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_23FB2FB78();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_23F82B104(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F82B134 + 4 * byte_23FB633C7[a1]))(0x65756C6176, 0xE500000000000000);
}

uint64_t sub_23F82B134()
{
  return 0x656372756F73;
}

uint64_t sub_23F82B148()
{
  return 0x745374706D6F7270;
}

uint64_t sub_23F82B168()
{
  return 0x6E656D6574617473;
}

uint64_t sub_23F82B188()
{
  unsigned __int8 *v0;

  return sub_23F82B104(*v0);
}

uint64_t sub_23F82B190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F82AF38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F82B1B4()
{
  sub_23F840074();
  return sub_23FB2FD10();
}

uint64_t sub_23F82B1DC()
{
  sub_23F840074();
  return sub_23FB2FD1C();
}

void Candidate.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  char v6;
  _BYTE v7[32];

  sub_23F6D3DC4();
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EACDA0);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F70D4B8();
  sub_23F840074();
  sub_23F6B63A4();
  v7[31] = 0;
  sub_23F6B6634();
  sub_23F6B4EEC((uint64_t)&qword_256EA7170);
  sub_23F876660();
  if (!v0)
  {
    v7[30] = *(_BYTE *)(v1 + *(int *)(sub_23F878700() + 20));
    sub_23F878428();
    sub_23F8400B0();
    sub_23F70D4F0();
    sub_23F877A0C();
    sub_23F8400EC();
    sub_23F70D4F0();
    sub_23F8788A8();
    v7[14] = v6;
    sub_23F6B58C8();
    sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
    sub_23F70D4F0();
  }
  sub_23F6B56E0((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F70D9D8();
  sub_23F6D3710();
}

void Candidate.hashValue.getter()
{
  _BYTE v0[72];

  sub_23F6B53C4();
  Candidate.hash(into:)((uint64_t)v0);
  sub_23F6B5608();
  sub_23F6B5398();
}

void Candidate.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;

  sub_23F6B5220();
  v42 = v13;
  v18 = v17;
  v34 = v19;
  v37 = sub_23F6B58C8();
  v33 = *(_QWORD *)(v37 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v20);
  v35 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_23F6B6634();
  v36 = *(_QWORD *)(v38 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6B5420(v23, (uint64_t)v31);
  v39 = sub_23F6916B8(&qword_256EACDC0);
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v24);
  v25 = sub_23F70D7F8();
  v26 = type metadata accessor for Candidate(v25);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F87808C();
  *v14 = 0;
  *((_BYTE *)v14 + 8) = 1;
  sub_23F876BD8(v18);
  sub_23F840074();
  v41 = v16;
  sub_23F879694();
  sub_23F878478();
  if (v13)
  {
    sub_23F877638();
  }
  else
  {
    v31 = v14;
    v32 = v26;
    v42 = v12;
    v28 = v36;
    sub_23F6B4EEC((uint64_t)&qword_256EA7188);
    sub_23F876F6C();
    sub_23F876AE4();
    sub_23F75E68C(v15, v40, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 32));
    sub_23F878428();
    sub_23F840128();
    sub_23F876AE4();
    *(_BYTE *)(v15 + *(int *)(v32 + 20)) = a12;
    sub_23F878AE4();
    sub_23F840164();
    sub_23F876AE4();
    v29 = v44;
    v30 = v31;
    *v31 = v43;
    *((_BYTE *)v30 + 8) = v29;
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    sub_23F876AE4();
    sub_23F878A08(v41, *(uint64_t (**)(uint64_t, _QWORD))(v42 + 8));
    sub_23F8789F8(v15 + *(int *)(v32 + 28), v33);
    sub_23F876818(v15, v34);
    sub_23F877638();
    sub_23F876820(v15);
  }
  sub_23F8777E8();
  sub_23F6B5100();
}

void sub_23F82B670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  _BYTE vars8[7];

  Candidate.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, *(__int16 *)&vars8[4], vars8[6]);
}

void sub_23F82B684()
{
  Candidate.encode(to:)();
}

uint64_t sub_23F82B6A8()
{
  _BYTE v1[72];

  sub_23FB2FC5C();
  Candidate.hash(into:)((uint64_t)v1);
  return sub_23FB2FC8C();
}

void Session.Event.createNewEvent(from:)()
{
  uint64_t v0;

  sub_23F878DD4();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F877C24();
  sub_23F878738();
  sub_23F694C84();
}

void Session.Event.formingResponse(_:)()
{
  uint64_t v0;

  sub_23F878DD4();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F877C24();
  sub_23F878738();
  sub_23F694C84();
}

void Session.Event.formingResponse(id:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  __uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  sub_23F6B50E8();
  v59 = v3;
  v5 = v4;
  v62 = v6;
  v7 = sub_23F7A3510();
  v60 = *(_QWORD *)(v7 - 8);
  v61 = v7;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F70D7F8();
  v9 = (int *)type metadata accessor for Timepoint();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_23F876970();
  type metadata accessor for Session.Event.Payload(v11);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F693EB0();
  sub_23F6916B8(&qword_256EA2798);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23F72E034();
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F878C20();
  v20 = v18 - v19;
  v22 = MEMORY[0x24BDAC7A8](v21);
  v56 = sub_23F878184(v22, v23, v24, v25, v26, v27, v28, v29, v50);
  v63 = v5;
  sub_23F7A0304((uint64_t)v56, v5);
  v30 = (int *)sub_23F7E52BC();
  sub_23F6F099C();
  v57 = v20;
  sub_23F7A0304(v20, v31);
  v32 = v0 + v30[6];
  v58 = v15;
  sub_23F7DCCDC(v32, (uint64_t)v15, &qword_256EA2798);
  v33 = v59;
  v59 = v2;
  sub_23F83A800(v33, v2, type metadata accessor for Session.Event.Payload);
  v34 = (uint64_t *)(v0 + v30[8]);
  v35 = *v34;
  v36 = v34[1];
  v37 = (uint64_t *)(v0 + v30[9]);
  v38 = *v37;
  v39 = v37[1];
  v54 = v35;
  v55 = v38;
  v40 = (uint64_t *)(v0 + v30[10]);
  v41 = *v40;
  v42 = v40[1];
  v43 = (uint64_t *)(v0 + v30[11]);
  v44 = v43[1];
  v51 = *v43;
  v52 = v41;
  sub_23F6B54F8();
  v53 = v36;
  sub_23F6B6548();
  sub_23F77E1FC();
  sub_23F77DCD4();
  sub_23FB2C44C();
  sub_23F8789B4();
  v45 = sub_23F87859C();
  if (qword_256EA0AC8 != -1)
    swift_once();
  v46 = sub_23F6BF1A4(v16, (uint64_t)qword_256F5C778);
  sub_23F7A0304(v1 + v9[7], v46);
  v47 = sub_23F7D2D5C();
  v48(v47);
  *(_QWORD *)(v1 + v9[5]) = v30;
  *(_QWORD *)(v1 + v9[6]) = v45;
  sub_23F83B688();
  v49 = sub_23FB2F050();
  Session.Event.init(id:sessionId:queryEventId:payload:clientRequestId:clientSessionId:clientApplicationId:clientGroupId:timepoint:sender:postingSpan:initiatedSpans:)(v57, (uint64_t)v58, v59, v54, v53, v55, v39, v62, v52, v42, v51, v44, v1, 0, 0, 0, 1, v49);
  sub_23F83A7D4(v63, (uint64_t (*)(_QWORD))type metadata accessor for PreassignedEventID);
  sub_23F693DDC();
}

void Session.Transcript.init(mockTranscript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  char v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  unint64_t v32;
  __int128 *v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  __int128 *v66;

  sub_23F6B5220();
  v3 = v1;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  sub_23FB2C14C();
  sub_23F879854();
  v61 = v10;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B51D0();
  v12 = sub_23FB2C4B8();
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F77DC18();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B6580();
  v60 = v15;
  _s30IntelligenceFlowPlannerSupport20PlatformPnRTelemetryC7startedy10Foundation4UUIDVAA12StartedStateO_0aE7Library0aB11IdentifiersVSgAGtFZfA1__0();
  _s30IntelligenceFlowPlannerSupport20PlatformPnRTelemetryC7startedy10Foundation4UUIDVAA12StartedStateO_0aE7Library0aB11IdentifiersVSgAGtFZfA1__0();
  v55 = sub_23FB2C488();
  v56 = v2;
  v58 = v16;
  v59 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v59(v0, v12);
  type metadata accessor for Session.StatementIdCounter();
  swift_allocObject();
  v57 = Session.StatementIdCounter.init(baseStatementIdIndex:)(1);
  *(_QWORD *)&v63 = v7;
  *((_QWORD *)&v63 + 1) = v5;
  sub_23F731C2C();
  v17 = sub_23FB2F6EC();
  sub_23F6B644C();
  v18 = *(_QWORD *)(v17 + 16);
  if (v18)
  {
    v52 = v1;
    v53 = v12;
    v54 = v9;
    v66 = (__int128 *)MEMORY[0x24BEE4AF8];
    sub_23F711194(0, v18, 0);
    v51 = v17;
    v19 = (uint64_t *)(v17 + 56);
    do
    {
      v20 = *(v19 - 1);
      v21 = *v19;
      v63 = *(_OWORD *)(v19 - 3);
      v64 = v20;
      v65 = v21;
      sub_23F77E584();
      sub_23FB2C128();
      sub_23F8401A0();
      v22 = &v63;
      v23 = sub_23FB2F6B0();
      v25 = v24;
      v26 = sub_23F877E64();
      sub_23F6B6178(v26, v27);
      sub_23F756640();
      if ((sub_23F77D93C() & 1) == 0)
      {
        v28 = sub_23F7D2A58();
        sub_23F711194(v28, v29, v30);
        v22 = v66;
      }
      v32 = *((_QWORD *)v22 + 2);
      v31 = *((_QWORD *)v22 + 3);
      if (v32 >= v31 >> 1)
      {
        v34 = sub_23F78F598(v31);
        sub_23F711194(v34, v32 + 1, 1);
        v22 = v66;
      }
      *((_QWORD *)v22 + 2) = v32 + 1;
      v33 = &v22[v32];
      *((_QWORD *)v33 + 4) = v23;
      *((_QWORD *)v33 + 5) = v25;
      v19 += 4;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
    v12 = v53;
    v9 = v54;
    v3 = v52;
  }
  else
  {
    sub_23F693E04();
    v22 = (__int128 *)MEMORY[0x24BEE4AF8];
  }
  swift_retain();
  v35 = sub_23F7F8404((uint64_t)v22, v57);
  if (v3)
  {
    swift_release();
    sub_23F693DFC();
    swift_bridgeObjectRelease();
    v36 = v60;
  }
  else
  {
    v37 = v35;
    v38 = sub_23F693DFC();
    v61 = &v51;
    MEMORY[0x24BDAC7A8](v38);
    v39 = v60;
    v40 = v55;
    *(&v51 - 8) = v60;
    *(&v51 - 7) = v40;
    v41 = v58;
    *(&v51 - 6) = v58;
    *(&v51 - 5) = 0;
    *(&v51 - 3) = 0;
    *(&v51 - 2) = 0;
    *(&v51 - 4) = 0xE000000000000000;
    v42 = sub_23F70E200((void (*)(uint64_t))sub_23F8401DC, (uint64_t)(&v51 - 10), v37, (uint64_t)&v62);
    sub_23F6B5908();
    swift_release();
    v43 = sub_23F7A1280();
    sub_23F78F5D0(v43, v44, v45);
    v46 = type metadata accessor for Session.Transcript(0);
    v47 = (uint64_t *)(v9 + *(int *)(v46 + 20));
    *v47 = v40;
    v47[1] = v41;
    sub_23F878A94((_QWORD *)(v9 + *(int *)(v46 + 24)));
    v49 = (_QWORD *)(v9 + v48);
    *v49 = 0;
    v49[1] = 0;
    *(_QWORD *)(v9 + *(int *)(v50 + 32)) = v42;
    v36 = v39;
  }
  v59(v36, v12);
  sub_23F77DB18();
  sub_23F6B5100();
}

uint64_t sub_23F82BD1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v51 = a1;
  v52 = a2;
  sub_23F731C2C();
  v7 = (_QWORD *)sub_23FB2F6EC();
  v8 = v7;
  v9 = v7[2];
  if (v9)
  {
    v50 = a4;
    v11 = v7[4];
    v10 = v7[5];
    v13 = v7[6];
    v12 = v7[7];
    if ((sub_23F83A844(0x7265755174786574, 0xE900000000000079, v11, v10, v13, v12) & 1) != 0)
    {
      if (v9 >= 2)
      {
        v14 = v8[8];
        v15 = v8[9];
        v16 = v8[10];
        v17 = v8[11];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v18 = MEMORY[0x242673E24](v14, v15, v16, v17);
        v20 = v19;
        swift_bridgeObjectRelease();
        v21 = (unsigned int *)(a3 + 16);
        do
          v22 = __ldxr(v21);
        while (__stxr(v22 + 1, v21));
        v23 = type metadata accessor for TextQuery(0);
        sub_23FB2C74C();
        v24 = (_QWORD *)(v50 + *(int *)(v23 + 28));
        *(_QWORD *)v50 = v18;
        *(_QWORD *)(v50 + 8) = v20;
        *(_BYTE *)(v50 + 16) = 0;
        type metadata accessor for Session.Event.Payload(0);
        *v24 = 0;
        v24[1] = 0;
        return swift_storeEnumTagMultiPayload();
      }
      goto LABEL_13;
    }
    if ((sub_23F83A844(0x616572436E616C70, 0xEB00000000646574, v11, v10, v13, v12) & 1) != 0)
    {
      if (v9 >= 2)
      {
        v27 = v8[8];
        v28 = v8[9];
        v30 = v8[10];
        v29 = v8[11];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v31 = MEMORY[0x242673E24](v27, v28, v30, v29);
        static Parser.parse(string:)(v31, v32, &v51);
        if (v4)
        {
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        v41 = v51;
        v51 = MEMORY[0x24BEE4AF8];
        v52 = MEMORY[0x24BEE4B00];
        v53 = a3;
        v54 = v41;
        swift_retain();
        v42 = ExpressionFlattener.flatten(program:)(&v54);
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v44 = MEMORY[0x242673E24](v27, v28, v30, v29);
        v46 = v45;
        swift_bridgeObjectRelease();
        *(_QWORD *)v50 = 0;
        *(_QWORD *)(v50 + 8) = 0xE000000000000000;
        *(_QWORD *)(v50 + 16) = v44;
        *(_QWORD *)(v50 + 24) = v46;
        *(_QWORD *)(v50 + 32) = v42;
        type metadata accessor for Session.Event.Payload(0);
        *(_QWORD *)(v50 + 40) = 0;
        *(_QWORD *)(v50 + 48) = 0;
        *(_BYTE *)(v50 + 56) = 0;
        return swift_storeEnumTagMultiPayload();
      }
LABEL_13:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v33 = MEMORY[0x242673E24](v11, v10, v13, v12);
      v35 = v34;
      swift_bridgeObjectRelease();
      sub_23F876420();
      swift_allocError();
      *(_QWORD *)v36 = v33;
      *(_QWORD *)(v36 + 8) = v35;
      *(_QWORD *)(v36 + 16) = 1;
      *(_BYTE *)(v36 + 24) = 1;
      return swift_willThrow();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if ((sub_23F83A844(0x74616E696D726574, 0xE900000000000065, v11, v10, v13, v12) & 1) != 0)
    {
      swift_bridgeObjectRelease();
      type metadata accessor for Session.Event.Payload(0);
      return swift_storeEnumTagMultiPayload();
    }
    if ((sub_23F83A844(0xD000000000000015, 0x800000023FB34E90, v11, v10, v13, v12) & 1) != 0
      || (sub_23F83A844(0x6365784570657473, 0xEC00000064657475, v11, v10, v13, v12) & 1) != 0
      || (sub_23F83A844(0xD000000000000010, 0x800000023FB345F0, v11, v10, v13, v12) & 1) != 0
      || (sub_23F83A844(0x6C61636974697263, 0xED0000726F727245, v11, v10, v13, v12) & 1) != 0)
    {
      v37 = MEMORY[0x242673E24](v11, v10, v13, v12);
      v39 = v38;
      swift_bridgeObjectRelease();
      sub_23F876420();
      swift_allocError();
      *(_QWORD *)v40 = v37;
      *(_QWORD *)(v40 + 8) = v39;
      *(_QWORD *)(v40 + 16) = 0;
      *(_BYTE *)(v40 + 24) = 0;
      return swift_willThrow();
    }
    v47 = MEMORY[0x242673E24](v11, v10, v13, v12);
    v49 = v48;
    swift_bridgeObjectRelease();
    sub_23F876420();
    swift_allocError();
    *(_QWORD *)v25 = v47;
    *(_QWORD *)(v25 + 8) = v49;
    *(_QWORD *)(v25 + 16) = 0;
    v26 = 2;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23F876420();
    swift_allocError();
    *(_QWORD *)(v25 + 8) = 0;
    *(_QWORD *)(v25 + 16) = 0;
    *(_QWORD *)v25 = 0;
    v26 = 3;
  }
  *(_BYTE *)(v25 + 24) = v26;
  return swift_willThrow();
}

void sub_23F82C2A4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(void);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __uint64_t v34;
  __uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v48 = a8;
  *(_QWORD *)&v45 = a7;
  *((_QWORD *)&v45 + 1) = a3;
  v49 = a6;
  v46 = a5;
  v50 = a4;
  v41 = (char *)a2;
  *(_QWORD *)&v42 = a1;
  v44 = a9;
  v9 = sub_23FB2C470();
  *((_QWORD *)&v42 + 1) = *(_QWORD *)(v9 - 8);
  v43 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for Timepoint();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Session.Event.Payload(0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23F6916B8(&qword_256EA2798);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23FB2C4B8();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v26 = *(void (**)(void))(v22 + 16);
  v40 = (uint64_t)&v40 - v27;
  v26();
  v41 = v20;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v20, 1, 1, v21);
  v28 = v42;
  *(_QWORD *)&v42 = v17;
  v29 = (uint64_t)v17;
  v30 = v11;
  sub_23F83A800(v28, v29, type metadata accessor for Session.Event.Payload);
  _s30IntelligenceFlowPlannerSupport20PlatformPnRTelemetryC7startedy10Foundation4UUIDVAA12StartedStateO_0aE7Library0aB11IdentifiersVSgAGtFZfA1__0();
  v31 = sub_23FB2C488();
  v33 = v32;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23FB2C44C();
  v34 = clock_gettime_nsec_np(_CLOCK_UPTIME_RAW);
  v35 = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
  if (qword_256EA0AC8 != -1)
    swift_once();
  v36 = sub_23F6BF1A4(v21, (uint64_t)qword_256F5C778);
  ((void (*)(char *, uint64_t, uint64_t))v26)(&v14[v12[7]], v36, v21);
  (*(void (**)(char *, char *, uint64_t))(*((_QWORD *)&v42 + 1) + 32))(v14, v30, v43);
  *(_QWORD *)&v14[v12[5]] = v34;
  *(_QWORD *)&v14[v12[6]] = v35;
  sub_23F83B688();
  v37 = sub_23FB2F050();
  LOBYTE(v38) = 1;
  Session.Event.init(sessionId:queryEventId:payload:clientRequestId:clientSessionId:clientApplicationId:clientGroupId:timepoint:sender:postingSpan:initiatedSpans:)(v40, (uint64_t)v41, v42, v31, v33, *((uint64_t *)&v45 + 1), v50, v46, v49, v45, v48, (uint64_t)v14, 0, 0, 0, v38, v37, v39, v40,
    (uint64_t)v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48);
}

uint64_t SpeechRequestCandidate.statementId.getter()
{
  return sub_23F811704(type metadata accessor for SpeechRequestCandidate);
}

void SpeechRequestCandidate.init(_:nextStatementIdIndex:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F6B6B7C();
  v3 = v2;
  sub_23F6B58C8();
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F693EB0();
  *v3 = sub_23FB2C9A4();
  v3[1] = v5;
  sub_23FB2C74C();
  v6 = sub_23FB2C9B0();
  sub_23F78F1B0(v6);
  v7 = type metadata accessor for SpeechRequestCandidate(0);
  sub_23F6B633C((uint64_t)v3 + *(int *)(v7 + 20), v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32));
  sub_23F6B5F7C();
}

void SpeechRequestCandidate.init(_:)(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F6B58C8();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B52B0();
  *a1 = sub_23FB2C7A0();
  a1[1] = v5;
  sub_23FB2CC44();
  v6 = sub_23FB2CC50();
  sub_23F78F1B0(v6);
  v7 = type metadata accessor for SpeechRequestCandidate(0);
  sub_23F72E0C8((uint64_t)a1 + *(int *)(v7 + 20), v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
  sub_23F6B5F7C();
}

void static SpeechRequestCandidate.== infix(_:_:)(uint64_t a1)
{
  sub_23F82C6E8(a1);
}

void sub_23F82C6E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  sub_23F877494(a1);
  v3 = v3 && v1 == v2;
  if (v3 || (sub_23F6B5280() & 1) != 0)
  {
    v4 = sub_23F879A18();
    sub_23F876D84(v4);
    sub_23F877260();
  }
  else
  {
    sub_23F694C84();
  }
}

uint64_t sub_23F82C72C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x74696E676F636572 && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F82C848(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E656D6574617473;
  else
    return 0x74696E676F636572;
}

uint64_t sub_23F82C890()
{
  char *v0;

  return sub_23F82C848(*v0);
}

uint64_t sub_23F82C898@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F82C72C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F82C8BC()
{
  sub_23F840210();
  return sub_23FB2FD10();
}

uint64_t sub_23F82C8E4()
{
  sub_23F840210();
  return sub_23FB2FD1C();
}

void SpeechRequestCandidate.encode(to:)()
{
  sub_23F82C940();
}

void sub_23F82C940()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  void (*v3)(_QWORD *);
  void (*v4)(_QWORD *);
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;

  sub_23F6B5220();
  v10 = v2;
  v4 = v3;
  v6 = (_QWORD *)v5;
  v11 = *(_QWORD *)(sub_23F6B63B8(v5, v7) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B52B0();
  v9 = sub_23F70D6E4(v6);
  v4(v9);
  sub_23F70DD2C();
  sub_23FB2FADC();
  if (!v0)
  {
    v10(0);
    sub_23F6B58C8();
    sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
    sub_23F879288();
  }
  sub_23F6B56E0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  sub_23F6B6834();
  sub_23F6B5100();
}

void SpeechRequestCandidate.init(from:)()
{
  sub_23F82CA8C();
}

void sub_23F82CA8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(_QWORD);
  void (*v6)(_QWORD);
  uint64_t *v7;
  uint64_t *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_QWORD);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  sub_23F6B5220();
  v28 = v4;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v23 = v11;
  v26 = sub_23F6B58C8();
  v22 = *(_QWORD *)(v26 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5420(v13, v22);
  v27 = sub_23F6916B8(v8);
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8](v14);
  v15 = sub_23F78F260();
  v24 = v6;
  v6(v15);
  sub_23F7F68B0();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (uint64_t *)((char *)&v22 - v17);
  sub_23F8796BC(v10);
  v28 = v3;
  sub_23F877128();
  if (v0)
  {
    sub_23F877780();
  }
  else
  {
    v29 = v10;
    v19 = v25;
    sub_23F8791E8();
    v20 = v28;
    *v18 = sub_23F8783D4();
    v18[1] = v21;
    sub_23F6B6360();
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    sub_23F878B0C();
    sub_23F6B6CAC();
    sub_23F6B6178(v20, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    sub_23F77DD54((uint64_t)v18 + *(int *)(v1 + 20), v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 32));
    sub_23F876818((uint64_t)v18, v23);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v29);
    sub_23F876820((uint64_t)v18);
  }
  sub_23F6B6CA0();
  sub_23F6B5100();
}

void sub_23F82CC40()
{
  SpeechRequestCandidate.init(from:)();
}

void sub_23F82CC54()
{
  SpeechRequestCandidate.encode(to:)();
}

uint64_t ClientEffectInvocation.stepId.getter()
{
  return sub_23F839AEC();
}

uint64_t ClientEffectInvocation.sessionId.getter()
{
  return sub_23F811704(type metadata accessor for ClientEffectInvocation);
}

void ClientEffectInvocation.clientRequestId.getter()
{
  sub_23F82694C(type metadata accessor for ClientEffectInvocation);
}

void ClientEffectInvocation.clientSessionId.getter()
{
  sub_23F81B864(type metadata accessor for ClientEffectInvocation);
}

void ClientEffectInvocation.toolName.getter()
{
  sub_23F82CCB0(type metadata accessor for ClientEffectInvocation);
}

void sub_23F82CCB0(uint64_t (*a1)(_QWORD))
{
  sub_23F876C04(a1);
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

uint64_t ClientEffectInvocation.parameters.getter()
{
  return sub_23F81F460(type metadata accessor for ClientEffectInvocation);
}

void ClientEffectInvocation.init(stepId:sessionId:clientRequestId:clientSessionId:toolName:parameters:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  int *v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;

  sub_23F8770E0();
  v41 = v24;
  v42 = v25;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v35 = v34;
  sub_23F72E034();
  sub_23F879854();
  v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32);
  v37(v35, v33, v23);
  v38 = (int *)sub_23F879A38();
  v37(v35 + v38[5], v31, v23);
  sub_23F8794BC(v38[6]);
  v39 = (_QWORD *)(v35 + v38[7]);
  *v39 = v29;
  v39[1] = v27;
  v40 = (_QWORD *)(v35 + v38[8]);
  *v40 = v41;
  v40[1] = v42;
  *(_QWORD *)(v35 + v38[9]) = a23;
  sub_23F877098();
}

void static ClientEffectInvocation.== infix(_:_:)()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  sub_23F6B6B7C();
  if ((sub_23FB2C4A0() & 1) == 0)
    goto LABEL_19;
  v0 = (int *)sub_23F879A38();
  sub_23F876D84((uint64_t)v0);
  if ((sub_23FB2C4A0() & 1) == 0)
    goto LABEL_19;
  sub_23F7A029C(v0[6]);
  v3 = v3 && v1 == v2;
  if ((v3 || (sub_23F6B5280() & 1) != 0)
    && ((sub_23F7A029C(v0[7]), v3) ? (v6 = v4 == v5) : (v6 = 0),
        (v6 || (sub_23F6B5280() & 1) != 0)
     && ((sub_23F7A029C(v0[8]), v3) ? (v9 = v7 == v8) : (v9 = 0), v9 || (sub_23F6B5280() & 1) != 0)))
  {
    sub_23F8772C0(v0[9]);
    sub_23F69D3C0();
  }
  else
  {
LABEL_19:
    sub_23F694C84();
  }
}

uint64_t sub_23F82CE2C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v2 = a1 == 0x644970657473 && a2 == 0xE600000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6552746E65696C63 && a2 == 0xEF64497473657571;
      if (v7 || (sub_23FB2FB78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6553746E65696C63 && a2 == 0xEF64496E6F697373;
        if (v8 || (sub_23FB2FB78() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x656D614E6C6F6F74 && a2 == 0xE800000000000000;
          if (v9 || (sub_23FB2FB78() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0x6574656D61726170 && a2 == 0xEA00000000007372)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v11 = sub_23FB2FB78();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 5;
            else
              return 6;
          }
        }
      }
    }
  }
}

uint64_t sub_23F82D0F0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F82D120 + 4 * byte_23FB633CB[a1]))(0x644970657473, 0xE600000000000000);
}

uint64_t sub_23F82D120()
{
  return 0x496E6F6973736573;
}

uint64_t sub_23F82D13C()
{
  return 0x6552746E65696C63;
}

uint64_t sub_23F82D160()
{
  return 0x6553746E65696C63;
}

uint64_t sub_23F82D184()
{
  return 0x656D614E6C6F6F74;
}

uint64_t sub_23F82D19C()
{
  return 0x6574656D61726170;
}

uint64_t sub_23F82D1B8()
{
  unsigned __int8 *v0;

  return sub_23F82D0F0(*v0);
}

uint64_t sub_23F82D1C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F82CE2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F82D1E4()
{
  sub_23F840260();
  return sub_23FB2FD10();
}

uint64_t sub_23F82D20C()
{
  sub_23F840260();
  return sub_23FB2FD1C();
}

void ClientEffectInvocation.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD v7[2];

  sub_23F6B5220();
  sub_23F876CB0();
  sub_23F6916B8(&qword_256EACDF8);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F70D4B8();
  sub_23F840260();
  sub_23F6B63A4();
  sub_23F72E034();
  sub_23F6B4EEC((uint64_t)&qword_256EA6620);
  sub_23F70D78C();
  if (!v0)
  {
    v6 = type metadata accessor for ClientEffectInvocation(0);
    sub_23F70D78C();
    sub_23F70D90C();
    sub_23F70D90C();
    sub_23F877ED8();
    sub_23F70D90C();
    v7[1] = *(_QWORD *)(v1 + *(int *)(v6 + 36));
    sub_23F6916B8(&qword_256EA7160);
    sub_23F8799C8();
    sub_23F70D78C();
  }
  sub_23F6B56E0((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F876B60();
  sub_23F6B5100();
}

void ClientEffectInvocation.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_23F6B5220();
  v22 = v4;
  v5 = sub_23F72E034();
  v24 = *(_QWORD *)(v5 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B65E0();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F878D94();
  sub_23F6916B8(&qword_256EACE08);
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23F78F260();
  v23 = (int *)type metadata accessor for ClientEffectInvocation(v9);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B51A4();
  v25 = v11;
  sub_23F8773E8();
  sub_23F840260();
  sub_23F878788();
  sub_23F877128();
  if (v0)
  {
    sub_23F72E47C();
  }
  else
  {
    sub_23F6B4EEC((uint64_t)&qword_256EA6700);
    sub_23F879448();
    sub_23F6B6E1C();
    v12 = *(void (**)(uint64_t))(v24 + 32);
    v13 = sub_23F6B6848();
    v12(v13);
    sub_23F877F84();
    sub_23F879448();
    sub_23F6B6E1C();
    ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v25 + v23[5], v3, v5);
    sub_23F87780C();
    v14 = sub_23F70D944();
    v15 = (uint64_t *)(v25 + v23[6]);
    *v15 = v14;
    v15[1] = v16;
    sub_23F8772E4();
    v17 = sub_23F70D944();
    sub_23F879884(v17, v18, (_QWORD *)(v25 + v23[7]));
    v19 = sub_23F70D944();
    v20 = (uint64_t *)(v25 + v23[8]);
    *v20 = v19;
    v20[1] = v21;
    sub_23F6916B8(&qword_256EA7160);
    sub_23F7323F0();
    sub_23F6B6E1C();
    sub_23F876EF8(v1, *(uint64_t (**)(uint64_t, _QWORD))(v2 + 8));
    *(_QWORD *)(v25 + v23[9]) = v26;
    sub_23F878194(v25, v22);
    sub_23F72E47C();
    sub_23F877068(v25);
  }
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23F82D774()
{
  ClientEffectInvocation.init(from:)();
}

void sub_23F82D788()
{
  ClientEffectInvocation.encode(to:)();
}

uint64_t sub_23F82D79C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6574656C706D6F63 && a2 == 0xE800000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F82D880(char a1)
{
  if ((a1 & 1) != 0)
    return 0x726F727265;
  else
    return 0x6574656C706D6F63;
}

uint64_t sub_23F82D8B4(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x74757074756FLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F82D930()
{
  return 0x74757074756FLL;
}

uint64_t sub_23F82D944()
{
  char *v0;

  return sub_23F82D880(*v0);
}

uint64_t sub_23F82D94C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F82D79C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F82D970()
{
  sub_23F8402B0();
  return sub_23FB2FD10();
}

uint64_t sub_23F82D998()
{
  sub_23F8402B0();
  return sub_23FB2FD1C();
}

uint64_t sub_23F82D9C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F82D8B4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F82D9EC()
{
  sub_23F840328();
  return sub_23FB2FD10();
}

uint64_t sub_23F82DA14()
{
  sub_23F840328();
  return sub_23FB2FD1C();
}

uint64_t sub_23F82DA3C()
{
  sub_23F8402EC();
  return sub_23FB2FD10();
}

uint64_t sub_23F82DA64()
{
  sub_23F8402EC();
  return sub_23FB2FD1C();
}

void ClientEffectResult.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  uint64_t v31[2];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  sub_23F6B5220();
  v42 = v0;
  v43 = v1;
  v5 = v4;
  v40 = sub_23F6916B8(&qword_256EACE10);
  v38 = *(_QWORD *)(v40 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  v37 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6D398C();
  v39 = sub_23FB2C6F8();
  v36 = *(_QWORD *)(v39 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5598(v9, v31[0]);
  v34 = sub_23F6916B8(&qword_256EACE18);
  v32 = *(_QWORD *)(v34 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F78F27C();
  v33 = sub_23FB2ED38();
  v31[1] = *(_QWORD *)(v33 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  v12 = sub_23F6B5864();
  type metadata accessor for ClientEffectResult(v12);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B573C();
  v41 = *(_QWORD *)(sub_23F6916B8(&qword_256EACE20) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F693EB0();
  sub_23F6ADC98(v5, v5[3]);
  sub_23F8402B0();
  sub_23F876F84();
  sub_23F83A800(v42, v3, type metadata accessor for ClientEffectResult);
  if (sub_23F8792A8() == 1)
  {
    v16 = v35;
    v15 = v36;
    v17 = sub_23F8795B8();
    v18 = v39;
    sub_23F77DD54(v17, v19, v20);
    sub_23F8793BC();
    sub_23F6B5610();
    sub_23F6B4EEC((uint64_t)&qword_256EA48B8);
    sub_23F8791D0();
    sub_23F7B0D3C();
    v21 = sub_23F877E64();
    sub_23F6B530C(v21, v22);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v18);
  }
  else
  {
    v23 = sub_23F879614();
    sub_23F75E68C(v23, v24, v25);
    sub_23F840328();
    sub_23F6B5610();
    sub_23F6B4EEC((uint64_t)&qword_256EA7170);
    sub_23F7B0D3C();
    sub_23F70D728(v2, *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
    v26 = sub_23F878B40();
    v28(v26, v27);
  }
  v29 = sub_23F878024();
  sub_23F6B56E0(v29, v30);
  sub_23F8778A8();
  sub_23F6B5100();
}

void ClientEffectResult.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;

  sub_23F6B5220();
  v3 = v2;
  v36 = v4;
  v38 = *(_QWORD *)(sub_23F6916B8(&qword_256EACE40) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B5C10(v6, v31);
  v37 = *(_QWORD *)(sub_23F6916B8(&qword_256EACE48) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B5420(v8, v32);
  v39 = *(_QWORD *)(sub_23F6916B8(&qword_256EACE50) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F78F27C();
  type metadata accessor for ClientEffectResult(v10);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F876AD4();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6ADC98(v3, v3[3]);
  sub_23F8402B0();
  sub_23F6B5DA0();
  if (v0)
    goto LABEL_8;
  v14 = sub_23F877878();
  v15 = v1;
  if (!*(_QWORD *)(v14 + 16)
    || (v16 = *(_BYTE *)(v14 + 32),
        v17 = sub_23F70D968(),
        sub_23F6B4E44(v17, v18, v19, v20, v21, v22),
        v24 = v23,
        v26 = v25,
        sub_23F6B6E44(),
        v24 != v26 >> 1))
  {
    sub_23F6B6334();
    sub_23F6B5AD4();
    sub_23F6916B8(&qword_256EA1870);
    sub_23F877E7C();
    v29 = sub_23F6B56B8();
    sub_23F6B6650(v29, *MEMORY[0x24BEE26D0]);
    sub_23F87774C();
    sub_23F6B5770();
    sub_23F6B56E0(v15, *(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
    v3 = v40;
LABEL_8:
    v30 = (uint64_t)v3;
    goto LABEL_9;
  }
  if ((v16 & 1) != 0)
  {
    sub_23F8793BC();
    sub_23F7B0AA8();
    v27 = sub_23FB2C6F8();
    sub_23F6B4EEC((uint64_t)&qword_256EA48D8);
    v28 = v34;
    sub_23F8766D4();
    sub_23F879018();
    sub_23F7B0A0C(v38);
  }
  else
  {
    sub_23F840328();
    sub_23F7B0AA8();
    v27 = sub_23F6B6634();
    sub_23F6B4EEC((uint64_t)&qword_256EA7188);
    v28 = v35;
    sub_23F8766D4();
    sub_23F879018();
    sub_23F7B0A0C(v37);
  }
  sub_23F6B5770();
  sub_23F6B56E0(v15, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
  swift_storeEnumTagMultiPayload();
  sub_23F87815C(v28, v33);
  sub_23F87815C(v33, v36);
  v30 = (uint64_t)v40;
LABEL_9:
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v30);
  sub_23F6B6CA0();
  sub_23F6B5100();
}

void sub_23F82E0B0()
{
  ClientEffectResult.init(from:)();
}

void sub_23F82E0C4()
{
  ClientEffectResult.encode(to:)();
}

uint64_t ClientEffectResult.init(_:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void);

  sub_23F6F0920();
  v3 = *(_QWORD *)(sub_23FB2CAB8() - 8);
  v4 = sub_23F6B68CC();
  v6 = v5(v4);
  if (v6 == *MEMORY[0x24BE529D8])
  {
    sub_23F78F1E4(a1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 96));
    v7 = sub_23F6B6634();
    sub_23F7B0990((uint64_t)v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32));
    type metadata accessor for ClientEffectResult(0);
    return swift_storeEnumTagMultiPayload();
  }
  if (v6 == *MEMORY[0x24BE529D0])
  {
    sub_23F78F1E4(a1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 96));
    v8 = sub_23FB2C6F8();
    sub_23F7B0990((uint64_t)v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32));
    type metadata accessor for ClientEffectResult(0);
    return swift_storeEnumTagMultiPayload();
  }
  v10 = sub_23FB2ECE4();
  v11 = swift_allocBox();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v12, *MEMORY[0x24BEB9940], v10);
  *v1 = v11;
  v13 = *MEMORY[0x24BEB9A00];
  v14 = sub_23F6B6634();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v1, v13, v14);
  type metadata accessor for ClientEffectResult(0);
  swift_storeEnumTagMultiPayload();
  v15 = sub_23F6B68CC();
  return sub_23F877AEC(v15, v16, v17);
}

void MessagePayload.ClientEffectInvocation.init(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[2];

  sub_23F6B50E8();
  v1 = v0;
  v13[1] = v2;
  v3 = sub_23F72E034();
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F878C20();
  v7 = (char *)(v5 - v6);
  MEMORY[0x24BDAC7A8](v8);
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v10((char *)v13 - v11, v1, v3);
  v12 = sub_23F879A38();
  v10(v7, v1 + *(int *)(v12 + 20), v3);
  sub_23F77E600();
  sub_23F77E1FC();
  sub_23F6B90D8();
  sub_23F6B54F8();
  sub_23F878BD4();
  sub_23FB2CC20();
  sub_23F83A7D4(v1, type metadata accessor for ClientEffectInvocation);
  sub_23F693DDC();
}

uint64_t ActionResult.outcome.getter()
{
  return sub_23F839AEC();
}

uint64_t ActionResult.outcome.setter(uint64_t a1)
{
  return sub_23F839B28(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE523C8]);
}

uint64_t (*ActionResult.outcome.modify())()
{
  return nullsub_1;
}

void ActionResult.response.getter()
{
  sub_23F81D874(type metadata accessor for ActionResult);
}

void ActionResult.response.setter(uint64_t a1)
{
  sub_23F81D8AC(a1, type metadata accessor for ActionResult);
}

uint64_t (*ActionResult.response.modify())()
{
  type metadata accessor for ActionResult(0);
  sub_23F6F099C();
  return nullsub_1;
}

void ActionResult.init(outcome:response:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23F82E3DC(a1, a2, type metadata accessor for ActionResult, a3);
}

void sub_23F82E3DC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;

  v4 = a4 + *(int *)(sub_23F6B60B4(a1, a2, a3) + 20);
  v5 = sub_23F8776FC();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v4, 1, 1, v5);
  v6 = sub_23F8770FC();
  sub_23F70D6B4(v6);
  v7 = sub_23F6B689C();
  sub_23F840E4C(v7, v8, v9);
  sub_23F6B5F7C();
}

void ActionResult.init(returnValue:appLaunched:response:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;

  sub_23F6B50E8();
  v6 = v5;
  v24 = v8;
  v25 = v7;
  v9 = v8;
  sub_23F6916B8(&qword_256EA8560);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B51D0();
  sub_23FB2ED38();
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F70D7F8();
  v12 = sub_23FB2C80C();
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v13);
  v14 = sub_23F78F260();
  v15 = v9 + *(int *)(type metadata accessor for ActionResult(v14) + 20);
  v16 = sub_23F8776FC();
  sub_23F6B5A8C(v15, v17, v18, v16);
  sub_23F840364(v6, v15);
  sub_23F75E710(v4, v25, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  v19 = sub_23FB2C848();
  sub_23F6B5A8C(v2, v20, v21, v19);
  sub_23FB2C860();
  sub_23F7F6110(v6, &qword_256EA2780);
  v22 = sub_23F6B689C();
  v23(v22);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 104))(v3, *MEMORY[0x24BE523C0], v12);
  sub_23F77DD54(v24, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 32));
  sub_23F693DDC();
}

void sub_23F82E580(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  BOOL v5;

  v4 = a1 == 0x656D6F6374756FLL && a2 == 0xE700000000000000;
  if (v4
    || (sub_23F6B6B7C(), (sub_23F6B5280() & 1) != 0)
    || (v3 == 0x65736E6F70736572 ? (v5 = v2 == 0xE800000000000000) : (v5 = 0), v5))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F6B5280();
    sub_23F693E04();
  }
  sub_23F694CC8();
}

uint64_t sub_23F82E658(char a1)
{
  if ((a1 & 1) != 0)
    return 0x65736E6F70736572;
  else
    return 0x656D6F6374756FLL;
}

uint64_t sub_23F82E690()
{
  char *v0;

  return sub_23F82E658(*v0);
}

void sub_23F82E698(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23F82E580(a1, a2);
  *a3 = v4;
}

uint64_t sub_23F82E6BC()
{
  sub_23F8403AC();
  return sub_23FB2FD10();
}

uint64_t sub_23F82E6E4()
{
  sub_23F8403AC();
  return sub_23FB2FD1C();
}

void ActionResult.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  sub_23F6D3DC4();
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EACE58);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F70D4B8();
  sub_23F8403AC();
  sub_23F6B63A4();
  sub_23F878390();
  sub_23FB2C80C();
  sub_23F6B4EEC((uint64_t)&unk_256EACE68);
  sub_23F876660();
  if (!v0)
  {
    sub_23F878260();
    sub_23F878208();
    sub_23F6B4EEC((uint64_t)&unk_256EACC70);
    sub_23F876834();
  }
  sub_23F6B56E0((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F70D9D8();
  sub_23F6D3710();
}

void ActionResult.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_23F6B5220();
  v4 = v3;
  v17 = v5;
  sub_23F6916B8(&qword_256EA2780);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  v19 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6D398C();
  v20 = sub_23FB2C80C();
  v18 = *(_QWORD *)(v20 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5BD8(v9, v16);
  v22 = sub_23F6916B8(&qword_256EACE70);
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_23F78F260();
  type metadata accessor for ActionResult(v11);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23F877668();
  sub_23F8775F0(v13);
  sub_23F8403AC();
  sub_23F7A02FC();
  if (v1)
  {
    v14 = sub_23F877638();
    sub_23F879400(v14, &qword_256EA2780);
  }
  else
  {
    sub_23F879420();
    sub_23F6B4EEC((uint64_t)&unk_256EACE78);
    sub_23F876AE4();
    sub_23F78F5D0(v2, v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
    sub_23F6B6360();
    sub_23F6B4EEC((uint64_t)&unk_256EACC88);
    sub_23F877544();
    sub_23F876D60();
    sub_23F8794B4(v0, v15, &qword_256EA2780);
    sub_23F876818(v2, v17);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v16);
    sub_23F876820(v2);
  }
  sub_23F8777E8();
  sub_23F6B5100();
}

void sub_23F82E9F0()
{
  ActionResult.init(from:)();
}

void sub_23F82EA04()
{
  ActionResult.encode(to:)();
}

uint64_t ActionResolverRequest.statementId.getter()
{
  return sub_23F839AEC();
}

uint64_t ActionResolverRequest.statementId.setter(uint64_t a1)
{
  return sub_23F839B28(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

uint64_t (*ActionResolverRequest.statementId.modify())()
{
  return nullsub_1;
}

void ActionResolverRequest.toolId.getter()
{
  sub_23F81CEB0(type metadata accessor for ActionResolverRequest);
}

void ActionResolverRequest.toolId.setter(uint64_t a1, uint64_t a2)
{
  sub_23F81F314(a1, a2, type metadata accessor for ActionResolverRequest);
}

uint64_t (*ActionResolverRequest.toolId.modify())()
{
  sub_23F877704();
  sub_23F6F099C();
  return nullsub_1;
}

uint64_t ActionResolverRequest.resolvedParameters.getter()
{
  return sub_23F8221BC(type metadata accessor for ActionResolverRequest);
}

void ActionResolverRequest.resolvedParameters.setter(uint64_t a1)
{
  sub_23F8221E4(a1, type metadata accessor for ActionResolverRequest);
}

uint64_t (*ActionResolverRequest.resolvedParameters.modify())()
{
  sub_23F877704();
  sub_23F6F09C4();
  return nullsub_1;
}

uint64_t ActionResolverRequest.unresolvedParameterSets.getter()
{
  type metadata accessor for ActionResolverRequest(0);
  return swift_bridgeObjectRetain();
}

void ActionResolverRequest.unresolvedParameterSets.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(sub_23F877704() + 28);
  sub_23F8779DC();
  *(_QWORD *)(v1 + v3) = a1;
  sub_23F694C84();
}

uint64_t (*ActionResolverRequest.unresolvedParameterSets.modify())()
{
  type metadata accessor for ActionResolverRequest(0);
  sub_23F6F0A54();
  return nullsub_1;
}

uint64_t ActionResolverRequest.userSpecifiedParameters.getter()
{
  return sub_23F82EB30(type metadata accessor for ActionResolverRequest);
}

uint64_t sub_23F82EB30(uint64_t (*a1)(_QWORD))
{
  sub_23F876C04(a1);
  return swift_bridgeObjectRetain();
}

void ActionResolverRequest.userSpecifiedParameters.setter(uint64_t a1)
{
  sub_23F82EB58(a1, type metadata accessor for ActionResolverRequest);
}

void sub_23F82EB58(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(int *)(sub_23F6F0918(a1, a2) + 32);
  sub_23F8779DC();
  *(_QWORD *)(v2 + v4) = a1;
  sub_23F694C84();
}

uint64_t (*ActionResolverRequest.userSpecifiedParameters.modify())()
{
  sub_23F877704();
  sub_23F6F0B5C();
  return nullsub_1;
}

uint64_t ActionResolverRequest.isClientAction.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ActionResolverRequest(0) + 36));
}

void ActionResolverRequest.isClientAction.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(sub_23F8782C4() + 36)) = v0;
  sub_23F694CC8();
}

uint64_t (*ActionResolverRequest.isClientAction.modify())()
{
  type metadata accessor for ActionResolverRequest(0);
  sub_23F6F0D38();
  return nullsub_1;
}

uint64_t ActionResolverRequest.isConfirmed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ActionResolverRequest(0) + 40));
}

void ActionResolverRequest.isConfirmed.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(sub_23F8782C4() + 40)) = v0;
  sub_23F694CC8();
}

uint64_t (*ActionResolverRequest.isConfirmed.modify())()
{
  type metadata accessor for ActionResolverRequest(0);
  return nullsub_1;
}

uint64_t ActionResolverRequest.isAuthenticated.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ActionResolverRequest(0) + 44));
}

void ActionResolverRequest.isAuthenticated.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(sub_23F8782C4() + 44)) = v0;
  sub_23F694CC8();
}

uint64_t (*ActionResolverRequest.isAuthenticated.modify())()
{
  type metadata accessor for ActionResolverRequest(0);
  return nullsub_1;
}

void ActionResolverRequest.init(statementId:toolId:resolvedParameters:unresolvedParameterSets:userSpecifiedParameters:isClientAction:isConfirmed:isAuthenticated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t);
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;

  sub_23F87880C();
  v53 = v29;
  v54 = v30;
  v51 = v31;
  v52 = v32;
  v50 = v33;
  v48 = v34;
  v49 = v35;
  v37 = v36;
  v38 = (int *)sub_23F877704();
  v47 = v38[6];
  sub_23F878700();
  sub_23F691800();
  sub_23FB2F050();
  v39 = v38[7];
  v40 = v38[8];
  type metadata accessor for AST.FlatValue(0);
  sub_23FB2F050();
  v41 = v38[9];
  v42 = v38[10];
  v43 = v38[11];
  sub_23F6B58C8();
  v44 = sub_23F879688();
  v45(v44);
  sub_23F693DFC();
  sub_23F693E04();
  v46 = (_QWORD *)(v37 + v38[5]);
  *v46 = v48;
  v46[1] = v49;
  *(_QWORD *)(v37 + v47) = v50;
  *(_QWORD *)(v37 + v39) = v51;
  *(_QWORD *)(v37 + v40) = v52;
  *(_BYTE *)(v37 + v41) = v53;
  *(_BYTE *)(v37 + v42) = v54;
  *(_BYTE *)(v37 + v43) = a29;
  sub_23F8770B4();
}

void ActionResolverRequest.init(statementId:toolId:resolvedParameters:unresolvedParameterSets:userSpecifiedParameters:isClientAction:isConfirmed:clientQueryId:isAuthenticated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  uint64_t *v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  char v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char v92;
  unint64_t v93;
  char v94;
  unint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  _QWORD *v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t (*v141)(_QWORD);
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  char v147;
  unint64_t v148;
  char v149;
  unint64_t v150;
  char v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char v165;
  char v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  int64_t v172;
  uint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  uint64_t *v176;
  uint64_t v177;
  uint64_t v178;
  _QWORD *v179;
  uint64_t *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t *v190;
  uint64_t v191;
  _QWORD *v192;
  uint64_t v193;
  uint64_t v194[5];
  _QWORD v195[6];

  sub_23F6B50E8();
  v166 = v24;
  v165 = v25;
  v164 = v26;
  v170 = v27;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v37 = v36;
  v185 = *(_QWORD *)(type metadata accessor for Candidate(0) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F693E0C();
  v191 = v39;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F6B6580();
  v188 = v41;
  v184 = sub_23F6916B8(&qword_256EACE80);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F693E0C();
  v180 = v43;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v44);
  sub_23F6D3D14();
  v190 = v45;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v46);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v47);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v48);
  sub_23F6D3D14();
  v183 = v49;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v50);
  sub_23F876D18();
  MEMORY[0x24BDAC7A8](v51);
  sub_23F6B6580();
  sub_23F6B5314(v52);
  sub_23F717D54();
  v53 = (int *)sub_23F877704();
  v54 = v53[6];
  sub_23F691800();
  v168 = v54;
  *(_QWORD *)(v37 + v54) = sub_23FB2F050();
  v161 = v53[7];
  *(_QWORD *)(v37 + v161) = MEMORY[0x24BEE4B08];
  v55 = v53[8];
  type metadata accessor for AST.FlatValue(0);
  v162 = v55;
  *(_QWORD *)(v37 + v55) = sub_23FB2F050();
  v160 = v53[9];
  *(_BYTE *)(v37 + v160) = 0;
  v159 = v53[10];
  *(_BYTE *)(v37 + v159) = 0;
  v158 = v53[11];
  *(_BYTE *)(v37 + v158) = 0;
  v56 = sub_23F6B58C8();
  v156 = *(_QWORD *)(v56 - 8);
  v163 = v35;
  v157 = v56;
  (*(void (**)(uint64_t, uint64_t))(v156 + 16))(v37, v35);
  v167 = v37;
  v57 = (_QWORD *)(v37 + v53[5]);
  *v57 = v33;
  v57[1] = v31;
  sub_23F78F084(v29, v194);
  sub_23F8789BC(v194[0]);
  v171 = v194[1];
  v181 = v194[3];
  v58 = v194[4];
  v172 = (unint64_t)(v194[2] + 64) >> 6;
  sub_23F77E584();
  v59 = (_QWORD *)MEMORY[0x24BEE4B00];
  if (!v58)
    goto LABEL_3;
LABEL_2:
  sub_23F878F50();
  v186 = v58;
  v61 = v60 | (v181 << 6);
  while (1)
  {
    v74 = (uint64_t *)(*(_QWORD *)(v178 + 48) + 16 * v61);
    v76 = *v74;
    v75 = v74[1];
    v77 = *(_QWORD *)(v185 + 72);
    sub_23F8778CC(*(_QWORD *)(v178 + 56) + v77 * v61, (uint64_t)v174 + *(int *)(v184 + 48));
    *v174 = v76;
    v174[1] = v75;
    v78 = sub_23F72E3F8();
    sub_23F7AE8D8(v78, v79, &qword_256EACE80);
    v80 = *(int *)(v184 + 48);
    v81 = (uint64_t)v183 + v80;
    v82 = (uint64_t)v23 + v80;
    v84 = *v23;
    v83 = v23[1];
    *v183 = *v23;
    v183[1] = v83;
    v85 = sub_23F7A1280();
    sub_23F8778CC(v85, v86);
    sub_23F6B5508();
    sub_23F6B6254();
    sub_23F83A7D4(v81, type metadata accessor for Candidate);
    v87 = (uint64_t)v176 + *(int *)(v184 + 48);
    v88 = v23[1];
    *v176 = *v23;
    v176[1] = v88;
    sub_23F8778CC(v82, v87);
    v89 = sub_23F878E1C();
    sub_23F83A7A4(v89, v90, type metadata accessor for Candidate);
    swift_isUniquelyReferenced_nonNull_native();
    v195[0] = v59;
    v91 = sub_23F877B18(v84);
    if (__OFADD__(v59[2], (v92 & 1) == 0))
      goto LABEL_101;
    v93 = v91;
    v94 = v92;
    sub_23F6916B8(&qword_256EACE88);
    if ((sub_23FB2F914() & 1) != 0)
    {
      v95 = sub_23F877B18(v84);
      if ((v94 & 1) != (v96 & 1))
        goto LABEL_106;
      v93 = v95;
    }
    v59 = (_QWORD *)v195[0];
    if ((v94 & 1) != 0)
    {
      sub_23F83B7F8(v188, *(_QWORD *)(v195[0] + 56) + v93 * v77, type metadata accessor for Candidate);
    }
    else
    {
      *(_QWORD *)(v195[0] + 8 * (v93 >> 6) + 64) |= 1 << v93;
      v97 = v59[6] + 32 * v93;
      *(_QWORD *)v97 = v84;
      *(_QWORD *)(v97 + 8) = v83;
      *(_QWORD *)(v97 + 16) = 0;
      *(_BYTE *)(v97 + 24) = 1;
      sub_23F83A7A4(v188, v59[7] + v93 * v77, type metadata accessor for Candidate);
      v98 = v59[2];
      v64 = __OFADD__(v98, 1);
      v99 = v98 + 1;
      if (v64)
        goto LABEL_102;
      v59[2] = v99;
      sub_23F6B6254();
    }
    sub_23F6B5AB0();
    swift_bridgeObjectRelease();
    sub_23F7F6110((uint64_t)v23, &qword_256EACE80);
    v58 = v186;
    if (v186)
      goto LABEL_2;
LABEL_3:
    v62 = v181 + 1;
    if (__OFADD__(v181, 1))
      goto LABEL_103;
    if (v62 >= v172)
      goto LABEL_35;
    if (!*(_QWORD *)(v171 + 8 * v62))
    {
      sub_23F8779A8();
      if (v63 == v64)
        goto LABEL_35;
      sub_23F87799C();
      if (!v65)
      {
        sub_23F8779A8();
        if (v63 == v64)
          goto LABEL_35;
        sub_23F87799C();
        if (!v66)
        {
          sub_23F8779A8();
          if (v63 == v64)
            goto LABEL_35;
          sub_23F87799C();
          if (!v67)
          {
            sub_23F8779A8();
            if (v63 == v64)
              goto LABEL_35;
            sub_23F87799C();
            if (!v68)
            {
              sub_23F878298();
              if (v63 == v64)
                goto LABEL_35;
              if (!*(_QWORD *)(v171 + 8 * v69))
                break;
            }
          }
        }
      }
    }
LABEL_24:
    sub_23F878F20();
    v186 = v71;
    v61 = v73 + (v72 << 6);
    v181 = v72;
  }
  while (1)
  {
    sub_23F878298();
    if (v63 == v64)
      break;
    if (*(_QWORD *)(v171 + 8 * v70))
      goto LABEL_24;
  }
LABEL_35:
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v167 + v168) = v59;
  v193 = MEMORY[0x24BEE4B08];
  v169 = v170 + 56;
  sub_23F6B5754();
  v102 = v101 & v100;
  swift_bridgeObjectRetain();
  v103 = 0;
  if (!v102)
    goto LABEL_37;
LABEL_36:
  sub_23F878F50();
  v173 = v102;
  v175 = v104;
  v106 = v105 | (v104 << 6);
LABEL_61:
  sub_23F78F084(*(_QWORD *)(*(_QWORD *)(v170 + 48) + 8 * v106), v195);
  v182 = v195[0];
  v177 = v195[1];
  v187 = v195[3];
  v119 = v195[4];
  sub_23F8789BC((unint64_t)(v195[2] + 64) >> 6);
  swift_bridgeObjectRetain_n();
  v120 = (_QWORD *)MEMORY[0x24BEE4B00];
  if (v119)
  {
LABEL_62:
    v189 = (v119 - 1) & v119;
    v121 = __clz(__rbit64(v119)) | (v187 << 6);
    goto LABEL_85;
  }
  while (1)
  {
    v122 = v187 + 1;
    if (__OFADD__(v187, 1))
      goto LABEL_100;
    if (v122 >= v178)
      goto LABEL_95;
    if (!*(_QWORD *)(v177 + 8 * v122))
    {
      sub_23F8779A8();
      if (v63 == v64)
        goto LABEL_95;
      sub_23F87799C();
      if (!v123)
      {
        sub_23F8779A8();
        if (v63 == v64)
          goto LABEL_95;
        sub_23F87799C();
        if (!v124)
        {
          sub_23F8779A8();
          if (v63 == v64)
            goto LABEL_95;
          sub_23F87799C();
          if (!v125)
          {
            sub_23F8779A8();
            if (v63 == v64)
              goto LABEL_95;
            sub_23F87799C();
            if (!v126)
            {
              sub_23F878298();
              if (v63 == v64)
                goto LABEL_95;
              if (!*(_QWORD *)(v177 + 8 * v127))
              {
                while (1)
                {
                  sub_23F878298();
                  if (v63 == v64)
                    break;
                  if (*(_QWORD *)(v177 + 8 * v128))
                    goto LABEL_84;
                }
LABEL_95:
                swift_release();
                sub_23F7F10C0(&v192, (uint64_t)v120);
                swift_bridgeObjectRelease();
                sub_23F693E04();
                v103 = v175;
                v102 = v173;
                if (!v173)
                {
LABEL_37:
                  if (__OFADD__(v103, 1))
                    goto LABEL_104;
                  sub_23F878298();
                  if (v63 == v64)
                    goto LABEL_98;
                  if (!*(_QWORD *)(v169 + 8 * v107))
                  {
                    sub_23F8777F4();
                    if (v63 == v64)
                    {
LABEL_98:
                      swift_release();
                      v155 = v193;
                      (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v163, v157);
                      sub_23F693DFC();
                      sub_23F8779DC();
                      *(_QWORD *)(v167 + v161) = v155;
                      swift_bridgeObjectRelease();
                      *(_QWORD *)(v167 + v162) = v164;
                      *(_BYTE *)(v167 + v160) = v165 & 1;
                      *(_BYTE *)(v167 + v159) = v166 & 1;
                      *(_BYTE *)(v167 + v158) = a23 & 1;
                      sub_23F693DDC();
                      return;
                    }
                    sub_23F8777D8();
                    if (!v108)
                    {
                      sub_23F8777F4();
                      if (v63 == v64)
                        goto LABEL_98;
                      sub_23F8777D8();
                      if (!v109)
                      {
                        sub_23F8777F4();
                        if (v63 == v64)
                          goto LABEL_98;
                        sub_23F8777D8();
                        if (!v110)
                        {
                          sub_23F8777F4();
                          if (v63 == v64)
                            goto LABEL_98;
                          sub_23F8777D8();
                          if (!v111)
                          {
                            sub_23F878298();
                            if (v63 == v64)
                              goto LABEL_98;
                            if (!*(_QWORD *)(v169 + 8 * v112))
                            {
                              while (!__OFADD__(v112, 1))
                              {
                                sub_23F8777F4();
                                if (v63 == v64)
                                  goto LABEL_98;
                                sub_23F8777D8();
                                v112 = v113 + 1;
                                if (v114)
                                  goto LABEL_60;
                              }
                              goto LABEL_105;
                            }
                          }
                        }
                      }
                    }
                  }
LABEL_60:
                  sub_23F7F6744();
                  v173 = v116 & v115;
                  v175 = v117;
                  v106 = v118 + (v117 << 6);
                  goto LABEL_61;
                }
                goto LABEL_36;
              }
            }
          }
        }
      }
    }
LABEL_84:
    sub_23F878F20();
    v187 = v129;
    v189 = v130;
    v121 = v131 + (v129 << 6);
LABEL_85:
    v132 = (uint64_t *)(*(_QWORD *)(v182 + 48) + 16 * v121);
    v134 = *v132;
    v133 = v132[1];
    v135 = *(_QWORD *)(v185 + 72);
    sub_23F8778CC(*(_QWORD *)(v182 + 56) + v135 * v121, (uint64_t)v179 + *(int *)(v184 + 48));
    *v179 = v134;
    v179[1] = v133;
    sub_23F7AE8D8((uint64_t)v179, (uint64_t)v190, &qword_256EACE80);
    v137 = *v190;
    v136 = v190[1];
    *v183 = *v190;
    v183[1] = v136;
    v138 = sub_23F6B69B8();
    sub_23F8778CC(v138, v139);
    sub_23F6B5508();
    sub_23F6B6254();
    v140 = sub_23F77E19C();
    sub_23F83A7D4(v140, v141);
    v142 = (uint64_t)v180 + *(int *)(v184 + 48);
    v143 = v190[1];
    *v180 = *v190;
    v180[1] = v143;
    v144 = sub_23F87886C();
    sub_23F8778CC(v144, v145);
    sub_23F83A7A4(v142, v191, type metadata accessor for Candidate);
    swift_isUniquelyReferenced_nonNull_native();
    v192 = v120;
    v146 = sub_23F78C7B0(v137, v136, 0, 1);
    if (__OFADD__(v120[2], (v147 & 1) == 0))
    {
      __break(1u);
      goto LABEL_98;
    }
    v148 = v146;
    v149 = v147;
    sub_23F6916B8(&qword_256EACE88);
    if ((sub_23FB2F914() & 1) != 0)
    {
      v150 = sub_23F877B18(v137);
      if ((v149 & 1) != (v151 & 1))
        goto LABEL_106;
      v148 = v150;
    }
    v120 = v192;
    if ((v149 & 1) == 0)
      break;
    sub_23F83B7F8(v191, v192[7] + v148 * v135, type metadata accessor for Candidate);
LABEL_93:
    sub_23F6B5AB0();
    swift_bridgeObjectRelease();
    sub_23F7F6110((uint64_t)v190, &qword_256EACE80);
    v119 = v189;
    if (v189)
      goto LABEL_62;
  }
  v192[(v148 >> 6) + 8] |= 1 << v148;
  v152 = v120[6] + 32 * v148;
  *(_QWORD *)v152 = v137;
  *(_QWORD *)(v152 + 8) = v136;
  *(_QWORD *)(v152 + 16) = 0;
  *(_BYTE *)(v152 + 24) = 1;
  sub_23F83A7A4(v191, v120[7] + v148 * v135, type metadata accessor for Candidate);
  v153 = v120[2];
  v64 = __OFADD__(v153, 1);
  v154 = v153 + 1;
  if (!v64)
  {
    v120[2] = v154;
    sub_23F6B6254();
    goto LABEL_93;
  }
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  sub_23FB2FBD8();
  __break(1u);
}

IntelligenceFlowPlannerSupport::ParameterPath __swiftcall ParameterPath.init(key:arrayIndex:)(Swift::String key, Swift::Int_optional arrayIndex)
{
  uint64_t v2;
  IntelligenceFlowPlannerSupport::ParameterPath result;

  *(Swift::String *)v2 = key;
  *(_QWORD *)(v2 + 16) = arrayIndex.value;
  *(_BYTE *)(v2 + 24) = arrayIndex.is_nil;
  result.key = key;
  result.collectionIndex = arrayIndex;
  return result;
}

uint64_t sub_23F82F9B8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x64496C6F6F74 && a2 == 0xE600000000000000;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x800000023FB34CB0 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000017 && a2 == 0x800000023FB34CD0 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD000000000000017 && a2 == 0x800000023FB34CF0 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else
    {
      v7 = a1 == 0x746E65696C437369 && a2 == 0xEE006E6F69746341;
      if (v7 || (sub_23FB2FB78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        v8 = a1 == 0x7269666E6F437369 && a2 == 0xEB0000000064656DLL;
        if (v8 || (sub_23FB2FB78() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else if (a1 == 0x6E65687475417369 && a2 == 0xEF64657461636974)
        {
          swift_bridgeObjectRelease();
          return 7;
        }
        else
        {
          v10 = sub_23FB2FB78();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 7;
          else
            return 8;
        }
      }
    }
  }
}

uint64_t sub_23F82FD44(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F82FD80 + 4 * byte_23FB633D1[a1]))(0x6E656D6574617473, 0xEB00000000644974);
}

uint64_t sub_23F82FD80()
{
  return 0x64496C6F6F74;
}

unint64_t sub_23F82FD94()
{
  return 0xD000000000000012;
}

unint64_t sub_23F82FDB4()
{
  return 0xD000000000000017;
}

uint64_t sub_23F82FDDC()
{
  return 0x746E65696C437369;
}

uint64_t sub_23F82FE00()
{
  return 0x7269666E6F437369;
}

uint64_t sub_23F82FE20()
{
  return 0x6E65687475417369;
}

uint64_t sub_23F82FE44()
{
  unsigned __int8 *v0;

  return sub_23F82FD44(*v0);
}

uint64_t sub_23F82FE4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F82F9B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F82FE70()
{
  sub_23F8403E8();
  return sub_23FB2FD10();
}

uint64_t sub_23F82FE98()
{
  sub_23F8403E8();
  return sub_23FB2FD1C();
}

void ActionResolverRequest.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE v7[8];
  uint64_t v8;

  sub_23F6D3DC4();
  sub_23F876CB0();
  sub_23F6916B8(&qword_256EACE90);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F70D4B8();
  sub_23F8403E8();
  sub_23F6B63A4();
  LOBYTE(v8) = 0;
  sub_23F6B58C8();
  sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
  sub_23F70D78C();
  if (!v0)
  {
    v6 = sub_23F878ED8();
    LOBYTE(v8) = 1;
    sub_23F70D90C();
    sub_23F8788B8();
    sub_23F6916B8(&qword_256EA98F8);
    sub_23F840424();
    sub_23F70D78C();
    v8 = *(_QWORD *)(v1 + *(int *)(v6 + 28));
    v7[7] = 3;
    sub_23F8797D8();
    sub_23F879968((uint64_t)&unk_256EACEB8);
    sub_23F879140();
    sub_23F70D78C();
    sub_23F878878();
    sub_23F6916B8(&qword_256EA6648);
    sub_23F722828();
    sub_23F70D78C();
    sub_23F8771E0(5);
    sub_23F8771E0(6);
    sub_23F8771E0(7);
  }
  sub_23F6B56E0((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F878A78();
  sub_23F6D3710();
}

void ActionResolverRequest.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;

  sub_23F6B5220();
  v13 = v12;
  v14 = sub_23F6B58C8();
  sub_23F879048(v14);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B582C(v16, v35);
  sub_23F6916B8(&qword_256EACEC0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F70D7A4(v18, v36);
  v19 = (int *)sub_23F878ED8();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B53AC();
  v22 = *(int *)(v21 + 24);
  sub_23F878700();
  sub_23F691800();
  *(_QWORD *)(v11 + v22) = sub_23FB2F050();
  v38 = v19[7];
  *(_QWORD *)(v11 + v38) = MEMORY[0x24BEE4B08];
  v23 = v19[8];
  type metadata accessor for AST.FlatValue(0);
  *(_QWORD *)(v11 + v23) = sub_23FB2F050();
  v24 = v19[9];
  *(_BYTE *)(v11 + v24) = 0;
  v25 = v19[10];
  *(_BYTE *)(v11 + v25) = 0;
  v37 = v19;
  v26 = v19[11];
  *(_BYTE *)(v11 + v26) = 0;
  sub_23F876A18(v13);
  sub_23F8403E8();
  sub_23F877128();
  if (v10)
  {
    sub_23F878434();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    sub_23F8791DC();
    sub_23F6B6E1C();
    v27 = sub_23F7B0E48();
    sub_23F78F5D0(v27, v28, v29);
    LOBYTE(a10) = 1;
    v30 = sub_23F70D944();
    sub_23F878CB8(v30, v31, v37[5]);
    sub_23F6916B8(&qword_256EA98F8);
    sub_23F878018();
    sub_23F8404E4();
    sub_23F876DA8();
    sub_23F6B6E1C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v11 + v22) = a10;
    sub_23F6916B8(&qword_256EACEB0);
    sub_23F8405A4((uint64_t)&unk_256EACED8);
    sub_23F8788E0();
    sub_23F6B6E1C();
    *(_QWORD *)(v11 + v38) = a10;
    sub_23F6916B8(&qword_256EA6648);
    sub_23F722A90();
    sub_23F876DA8();
    sub_23F6B6E1C();
    sub_23F879038();
    *(_QWORD *)(v11 + v23) = a10;
    *(_BYTE *)(v11 + v24) = sub_23F8771F8(5) & 1;
    *(_BYTE *)(v11 + v25) = sub_23F8771F8(6) & 1;
    v32 = sub_23F8771F8(7);
    sub_23F877D70();
    *(_BYTE *)(v11 + v26) = v32 & 1;
    v33 = sub_23F878E1C();
    sub_23F876818(v33, v34);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v13);
    sub_23F876820(v11);
  }
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23F830510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  ActionResolverRequest.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F830524()
{
  ActionResolverRequest.encode(to:)();
}

void ParameterPath.key.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void ParameterPath.key.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  sub_23F6F09A8();
  *v2 = a1;
  v2[1] = a2;
  sub_23F694C84();
}

uint64_t (*ParameterPath.key.modify())()
{
  return nullsub_1;
}

uint64_t ParameterPath.collectionIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t ParameterPath.collectionIndex.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*ParameterPath.collectionIndex.modify())()
{
  return nullsub_1;
}

void static ParameterPath.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = sub_23F878F78(a1);
  if (v1 != *v3 || v2 != v3[1])
  {
    sub_23F6B5280();
    sub_23F7A01D0();
  }
  sub_23F694C84();
}

void ParameterPath.hash(into:)()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 24);
  sub_23F6B6548();
  sub_23FB2F200();
  sub_23F6B6090();
  sub_23FB2FC74();
  if (v1 != 1)
    sub_23FB2FC68();
  sub_23F6B5F7C();
}

uint64_t sub_23F830694(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 7955819 && a2 == 0xE300000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697463656C6C6F63 && a2 == 0xEF7865646E496E6FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F830794(char a1)
{
  if ((a1 & 1) != 0)
    return 0x697463656C6C6F63;
  else
    return 7955819;
}

uint64_t sub_23F8307D0()
{
  char *v0;

  return sub_23F830794(*v0);
}

uint64_t sub_23F8307D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F830694(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F8307FC()
{
  sub_23F8405F4();
  return sub_23FB2FD10();
}

uint64_t sub_23F830824()
{
  sub_23F8405F4();
  return sub_23FB2FD1C();
}

void ParameterPath.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6B5220();
  v3 = v2;
  v5 = *(_QWORD *)(sub_23F6916B8(&qword_256EACEE0) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F878564();
  sub_23F6B6280(v3);
  sub_23F8405F4();
  sub_23F879218();
  sub_23FB2FCC8();
  sub_23F8795B8();
  sub_23F70D90C();
  if (!v0)
  {
    sub_23F8789A4();
    sub_23FB2FAC4();
  }
  sub_23F6B56E0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_23F876B60();
  sub_23F6B5100();
}

void ParameterPath.hashValue.getter()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 24);
  sub_23F6B53C4();
  sub_23F6B5F1C();
  sub_23F878E0C();
  sub_23F6B5908();
  if (v1 == 1)
  {
    sub_23F87995C();
  }
  else
  {
    sub_23F879944();
    sub_23F6B5A48();
  }
  sub_23F6B5608();
  sub_23F6B5B30();
}

void ParameterPath.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  sub_23F6B5220();
  a19 = v24;
  a20 = v25;
  sub_23F87733C();
  sub_23F6916B8(&qword_256EACEF0);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&a9 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F876754(v20);
  sub_23F8405F4();
  sub_23F6B5DA0();
  if (v21)
  {
    sub_23F6B6E68();
  }
  else
  {
    v29 = sub_23F876CD8();
    v31 = v30;
    sub_23F877ACC();
    v32 = sub_23FB2FA28();
    v33 = (uint64_t)v28;
    v35 = v34;
    sub_23F6B563C(v33, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
    *(_QWORD *)v22 = v29;
    *(_QWORD *)(v22 + 8) = v31;
    *(_QWORD *)(v22 + 16) = v32;
    *(_BYTE *)(v22 + 24) = v35 & 1;
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v20);
    sub_23F6B6A48();
  }
  sub_23F876FC4();
  sub_23F6B5100();
}

#error "23F830A98: call analysis failed (funcsize=5)"

void sub_23F830AA4()
{
  ParameterPath.encode(to:)();
}

void sub_23F830AC0()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 24);
  sub_23F6B63E0();
  sub_23F6B5F1C();
  sub_23F878E0C();
  sub_23F6B5908();
  if (v1 == 1)
  {
    sub_23F87995C();
  }
  else
  {
    sub_23F879944();
    sub_23F6B5A48();
  }
  sub_23F6B5608();
  sub_23F6B5B30();
}

void ClientInitiatedClientAction.toolId.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void ClientInitiatedClientAction.toolId.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  sub_23F6F09A8();
  *v2 = a1;
  v2[1] = a2;
  sub_23F694C84();
}

uint64_t (*ClientInitiatedClientAction.toolId.modify())()
{
  return nullsub_1;
}

void ClientInitiatedClientAction.parameters.setter()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F879938();
  *(_QWORD *)(v1 + 16) = v0;
  sub_23F694CC8();
}

uint64_t (*ClientInitiatedClientAction.parameters.modify())()
{
  return nullsub_1;
}

void ClientInitiatedClientAction.description.getter()
{
  sub_23F876CF0();
  sub_23FB2F7AC();
  sub_23F877940();
  sub_23F877404();
  sub_23F876B94();
  sub_23F6B5F1C();
  sub_23F876E38();
  sub_23F6B5908();
  sub_23F877414();
  sub_23F6B6634();
  sub_23F6B5508();
  sub_23F879818();
  sub_23F876ACC();
  sub_23F693E04();
  sub_23F6B5AB0();
  sub_23F8767CC();
  sub_23F6B6664();
}

uint64_t sub_23F830C38(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x64496C6F6F74 && a2 == 0xE600000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574656D61726170 && a2 == 0xEA00000000007372)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F830D28(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6574656D61726170;
  else
    return 0x64496C6F6F74;
}

uint64_t sub_23F830D60()
{
  char *v0;

  return sub_23F830D28(*v0);
}

uint64_t sub_23F830D68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F830C38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F830D8C()
{
  sub_23F840630();
  return sub_23FB2FD10();
}

uint64_t sub_23F830DB4()
{
  sub_23F840630();
  return sub_23FB2FD1C();
}

void ClientInitiatedClientAction.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6B5220();
  v3 = v2;
  v5 = *(_QWORD *)(sub_23F6916B8(&qword_256EACEF8) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B52B0();
  sub_23F876A18(v3);
  sub_23F840630();
  sub_23F877A60();
  sub_23F6B6224();
  sub_23F70D90C();
  if (!v0)
  {
    sub_23F6B6360();
    sub_23F6916B8(&qword_256EA7160);
    sub_23F8799C8();
    sub_23F70D78C();
  }
  sub_23F6B56E0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_23F876B60();
  sub_23F6B5100();
}

void ClientInitiatedClientAction.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD v11[2];

  sub_23F6B5220();
  sub_23F87733C();
  sub_23F6916B8(&qword_256EACF08);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v0[3];
  v8 = v0[4];
  sub_23F876754(v0);
  sub_23F840630();
  sub_23F6B5DA0();
  if (v1)
  {
    sub_23F6B6E68();
  }
  else
  {
    sub_23F876CD8();
    sub_23F879860();
    sub_23F6916B8(&qword_256EA7160);
    sub_23F6B6360();
    v9 = sub_23F7323F0();
    sub_23F77E600();
    sub_23F8769F0();
    sub_23F6B563C((uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    if (v9)
    {
      sub_23F6B6A48();
      sub_23F6B6E68();
    }
    else
    {
      v10 = v11[1];
      *v2 = v8;
      v2[1] = v7;
      v2[2] = v10;
      sub_23F6B54F8();
      sub_23F876C80();
    }
    sub_23F6B6A48();
  }
  sub_23F876FC4();
  sub_23F6B5100();
}

void sub_23F831000()
{
  ClientInitiatedClientAction.init(from:)();
}

void sub_23F831014()
{
  ClientInitiatedClientAction.encode(to:)();
}

void ContextPrewarmRequest.prewarmRequestId.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void ContextPrewarmRequest.prewarmRequestId.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  sub_23F6F09A8();
  *v2 = a1;
  v2[1] = a2;
  sub_23F694C84();
}

uint64_t (*ContextPrewarmRequest.prewarmRequestId.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F831084(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x800000023FB34D10)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_23F831108()
{
  return 0xD000000000000010;
}

uint64_t sub_23F831128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F831084(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F831150()
{
  sub_23F84066C();
  return sub_23FB2FD10();
}

uint64_t sub_23F831178()
{
  sub_23F84066C();
  return sub_23FB2FD1C();
}

void ContextPrewarmRequest.encode(to:)()
{
  sub_23F8317D4();
}

void ContextPrewarmRequest.init(from:)()
{
  sub_23F8313B8();
}

void sub_23F831204()
{
  ContextPrewarmRequest.init(from:)();
}

void sub_23F831218()
{
  ContextPrewarmRequest.encode(to:)();
}

uint64_t (*ContextPrewarmCompleted.originatingPrewarmRequestId.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F83123C(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD00000000000001BLL && a2 == 0x800000023FB34D30)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_23F8312C0()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_23F8312E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F83123C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F831308()
{
  sub_23F8406A8();
  return sub_23FB2FD10();
}

uint64_t sub_23F831330()
{
  sub_23F8406A8();
  return sub_23FB2FD1C();
}

void ContextPrewarmCompleted.encode(to:)()
{
  sub_23F8317D4();
}

void ContextPrewarmCompleted.init(from:)()
{
  sub_23F8313B8();
}

void sub_23F8313B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(_QWORD *);
  void (*v4)(_QWORD *);
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;

  sub_23F6B5220();
  v4 = v3;
  v6 = (_QWORD *)v5;
  v14 = v7;
  sub_23F6B63B8(v5, v8);
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B5208();
  v10 = sub_23F876A18(v6);
  v4(v10);
  sub_23F878478();
  if (!v0)
  {
    v11 = sub_23F70D944();
    v13 = v12;
    sub_23F6B6420(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    *v14 = v11;
    v14[1] = v13;
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v6);
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23F83148C()
{
  ContextPrewarmCompleted.init(from:)();
}

void sub_23F8314A0()
{
  ContextPrewarmCompleted.encode(to:)();
}

unint64_t SafetyModeRelease.description.getter()
{
  sub_23F878D64();
  return 0xD000000000000013;
}

uint64_t sub_23F8314D8()
{
  sub_23F8406E4();
  return sub_23FB2FD10();
}

uint64_t sub_23F831500()
{
  sub_23F8406E4();
  return sub_23FB2FD1C();
}

void SafetyModeRelease.encode(to:)()
{
  sub_23F83A4FC();
}

void SafetyModeRelease.init(from:)(uint64_t a1)
{
  sub_23F878C68(a1);
  sub_23F878AAC();
}

void sub_23F83156C()
{
  SafetyModeRelease.encode(to:)();
}

void SafetyModeException.clientQueryId.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void SafetyModeException.clientQueryId.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  sub_23F6F09A8();
  *v2 = a1;
  v2[1] = a2;
  sub_23F694C84();
}

uint64_t (*SafetyModeException.clientQueryId.modify())()
{
  return nullsub_1;
}

void SafetyModeException.description.getter()
{
  sub_23F876CF0();
  sub_23FB2F7AC();
  swift_bridgeObjectRelease();
  sub_23F6B5508();
  sub_23F876E38();
  sub_23F6B5908();
  sub_23F6B6664();
}

uint64_t sub_23F831658(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7551746E65696C63 && a2 == 0xED00006449797265)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F831700()
{
  return 0x7551746E65696C63;
}

uint64_t sub_23F831728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F831658(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F831750()
{
  sub_23F840720();
  return sub_23FB2FD10();
}

uint64_t sub_23F831778()
{
  sub_23F840720();
  return sub_23FB2FD1C();
}

void SafetyModeException.encode(to:)()
{
  sub_23F8317D4();
}

void sub_23F8317D4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  sub_23F6B5220();
  v10 = v3;
  v5 = (_QWORD *)v4;
  sub_23F6B63B8(v4, v6);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B5268();
  v8 = v0[1];
  v9 = *v0;
  sub_23F8796BC(v5);
  sub_23F70DD2C();
  v10(v9, v8);
  sub_23F6B5900(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F77DB18();
  sub_23F6B5100();
}

void SafetyModeException.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F6B5220();
  sub_23F877118();
  sub_23F6916B8(&qword_256EACF60);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F876754(v0);
  sub_23F840720();
  sub_23F75B598();
  if (!v1)
  {
    v5 = sub_23F8779EC();
    v7 = v6;
    sub_23F6F1CB8(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    *v2 = v5;
    v2[1] = v7;
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v0);
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23F83193C()
{
  SafetyModeException.init(from:)();
}

void sub_23F831950()
{
  SafetyModeException.encode(to:)();
}

void ContextRetrieved.requiredContext.setter()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23F877DB8();
  *v1 = v0;
  sub_23F694CC8();
}

uint64_t (*ContextRetrieved.requiredContext.modify())()
{
  return nullsub_1;
}

void ContextRetrieved.utteranceContext.setter(uint64_t a1)
{
  uint64_t v1;

  sub_23F6F09A8();
  *(_QWORD *)(v1 + 8) = a1;
  sub_23F694CC8();
}

uint64_t (*ContextRetrieved.utteranceContext.modify())()
{
  return nullsub_1;
}

void ContextRetrieved.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F877640();
  sub_23F876CF0();
  sub_23FB2F7AC();
  sub_23F877940();
  sub_23F876ACC();
  v0 = type metadata accessor for RetrievedContextStatement(0);
  v1 = sub_23F6B6254();
  MEMORY[0x242674058](v1, v0);
  sub_23F876ACC();
  sub_23F6B5AB0();
  sub_23F6B6090();
  sub_23F877404();
  sub_23F876B94();
  v2 = sub_23F6B5508();
  MEMORY[0x242674058](v2, v0);
  sub_23F876ACC();
  sub_23F693E04();
  sub_23F6B5AB0();
  sub_23F8767CC();
  sub_23F6B647C();
}

uint64_t sub_23F831A80()
{
  sub_23F84075C();
  return sub_23FB2FD10();
}

uint64_t sub_23F831AA8()
{
  sub_23F84075C();
  return sub_23FB2FD1C();
}

void ContextRetrieved.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  sub_23F6B5220();
  v4 = v3;
  sub_23F6916B8(&qword_256EACF68);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B52B0();
  sub_23F70D508(v4);
  sub_23F84075C();
  sub_23F6B63A4();
  sub_23F6916B8(&qword_256EACF78);
  sub_23F840798();
  sub_23F70D78C();
  if (!v0)
    sub_23F70D78C();
  sub_23F6B56E0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F876B60();
  sub_23F6B5100();
}

void ContextRetrieved.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  _QWORD *v20;
  char v21;

  sub_23F6B5220();
  v13 = v12;
  v15 = v14;
  sub_23F6916B8(&qword_256EACF90);
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F876754(v13);
  sub_23F84075C();
  sub_23F6B5DA0();
  if (v10)
  {
    sub_23F6B6E68();
  }
  else
  {
    v20 = v15;
    sub_23F6916B8(&qword_256EACF78);
    v21 = 0;
    sub_23F840814();
    sub_23F8769F0();
    v21 = 1;
    sub_23F77E600();
    sub_23F8769F0();
    sub_23F6B563C((uint64_t)v18, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
    v19 = v20;
    *v20 = a10;
    v19[1] = a10;
    sub_23F6B54F8();
    sub_23F876C80();
    sub_23F6B6A48();
  }
  sub_23F876FC4();
  sub_23F6B5100();
}

void sub_23F831D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  ContextRetrieved.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F831D30()
{
  ContextRetrieved.encode(to:)();
}

uint64_t RetrievedContextStatement.statementId.getter()
{
  return sub_23F839AEC();
}

uint64_t RetrievedContextStatement.retrievedContext.getter()
{
  return sub_23F811704(type metadata accessor for RetrievedContextStatement);
}

uint64_t RetrievedContextStatement.init(statementId:retrievedContext:)(uint64_t a1, uint64_t a2)
{
  return sub_23F8322E4(a1, a2, (void (*)(_QWORD))type metadata accessor for RetrievedContextStatement);
}

void static RetrievedContextStatement.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_23F831D94(a1, a2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BE52120]);
}

void sub_23F831D94(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  if ((sub_23F8782A4(a1, a2, a3) & 1) != 0)
  {
    v3 = sub_23F879A18();
    v4 = sub_23F876D84(v3);
    sub_23F876FA8(v4, v5, v6);
  }
  else
  {
    sub_23F6B6664();
  }
}

uint64_t sub_23F831DD0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023FB34D50)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F831ED4(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000010;
  else
    return 0x6E656D6574617473;
}

uint64_t sub_23F831F18()
{
  char *v0;

  return sub_23F831ED4(*v0);
}

uint64_t sub_23F831F20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F831DD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F831F44()
{
  sub_23F840890();
  return sub_23FB2FD10();
}

uint64_t sub_23F831F6C()
{
  sub_23F840890();
  return sub_23FB2FD1C();
}

void RetrievedContextStatement.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE v5[16];

  sub_23F6D3DC4();
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EACFA8);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v5[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F70D4B8();
  sub_23F840890();
  sub_23F6B63A4();
  v5[15] = 0;
  sub_23F6B58C8();
  sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
  sub_23F876660();
  if (!v0)
  {
    type metadata accessor for RetrievedContextStatement(0);
    sub_23F876854();
    sub_23FB2DE08();
    sub_23F6B4EEC((uint64_t)&qword_256EA4528);
    sub_23F70D4F0();
  }
  sub_23F6B56E0((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F70D9D8();
  sub_23F6D3710();
}

void RetrievedContextStatement.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14[4];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_23F6B5220();
  sub_23F8795DC(v3);
  v15 = sub_23FB2DE08();
  v14[1] = *(_QWORD *)(v15 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v4);
  v14[3] = (uint64_t)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23F6B58C8();
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B5420(v7, v14[0]);
  v18 = sub_23F6916B8(&qword_256EACFB8);
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23F78F260();
  type metadata accessor for RetrievedContextStatement(v9);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F876A18(v1);
  sub_23F840890();
  v17 = v2;
  v13 = v19;
  sub_23F877870();
  if (v13)
  {
    sub_23F87906C();
  }
  else
  {
    sub_23F878A10();
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    sub_23F6B6CAC();
    sub_23F878220();
    sub_23F6B6360();
    sub_23F6B4EEC((uint64_t)&qword_256EA4540);
    sub_23F6B6CAC();
    sub_23F8771C8();
    sub_23F877AFC();
    sub_23F876818(v0, v14[2]);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v12);
    sub_23F876820(v0);
  }
  sub_23F6B6CA0();
  sub_23F6B5100();
}

void sub_23F832284()
{
  RetrievedContextStatement.init(from:)();
}

void sub_23F832298()
{
  RetrievedContextStatement.encode(to:)();
}

uint64_t DynamicEnumerationEntityStatement.statementId.getter()
{
  return sub_23F839AEC();
}

uint64_t DynamicEnumerationEntityStatement.dynamicEnumerationEntity.getter()
{
  return sub_23F811704(type metadata accessor for DynamicEnumerationEntityStatement);
}

uint64_t DynamicEnumerationEntityStatement.init(statementId:dynamicEnumerationEntity:)(uint64_t a1, uint64_t a2)
{
  return sub_23F8322E4(a1, a2, (void (*)(_QWORD))type metadata accessor for DynamicEnumerationEntityStatement);
}

uint64_t sub_23F8322E4(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  v4 = sub_23F6B58C8();
  sub_23F8772A0(v4);
  a3(0);
  sub_23F8770FC();
  v5 = sub_23F6B68CC();
  return sub_23F876B50(v5, v6, v7, v8);
}

void static DynamicEnumerationEntityStatement.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_23F831D94(a1, a2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BE52120]);
}

uint64_t sub_23F83235C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023FB34D70)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F832460(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000018;
  else
    return 0x6E656D6574617473;
}

uint64_t sub_23F8324A4()
{
  char *v0;

  return sub_23F832460(*v0);
}

uint64_t sub_23F8324AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F83235C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F8324D0()
{
  sub_23F8408CC();
  return sub_23FB2FD10();
}

uint64_t sub_23F8324F8()
{
  sub_23F8408CC();
  return sub_23FB2FD1C();
}

void DynamicEnumerationEntityStatement.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE v5[16];

  sub_23F6D3DC4();
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EACFC0);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v5[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F70D4B8();
  sub_23F8408CC();
  sub_23F6B63A4();
  v5[15] = 0;
  sub_23F6B58C8();
  sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
  sub_23F876660();
  if (!v0)
  {
    type metadata accessor for DynamicEnumerationEntityStatement(0);
    sub_23F876854();
    sub_23FB2E2DC();
    sub_23F6B4EEC((uint64_t)&unk_256EACFD0);
    sub_23F70D4F0();
  }
  sub_23F6B56E0((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F70D9D8();
  sub_23F6D3710();
}

void DynamicEnumerationEntityStatement.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14[4];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_23F6B5220();
  sub_23F8795DC(v3);
  v15 = sub_23FB2E2DC();
  v14[1] = *(_QWORD *)(v15 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v4);
  v14[3] = (uint64_t)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23F6B58C8();
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B5420(v7, v14[0]);
  v18 = sub_23F6916B8(&qword_256EACFD8);
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23F78F260();
  type metadata accessor for DynamicEnumerationEntityStatement(v9);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F876A18(v1);
  sub_23F8408CC();
  v17 = v2;
  v13 = v19;
  sub_23F877870();
  if (v13)
  {
    sub_23F87906C();
  }
  else
  {
    sub_23F878A10();
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    sub_23F6B6CAC();
    sub_23F878220();
    sub_23F6B6360();
    sub_23F6B4EEC((uint64_t)&unk_256EACFE0);
    sub_23F6B6CAC();
    sub_23F8771C8();
    sub_23F877AFC();
    sub_23F876818(v0, v14[2]);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v12);
    sub_23F876820(v0);
  }
  sub_23F6B6CA0();
  sub_23F6B5100();
}

void sub_23F832810()
{
  DynamicEnumerationEntityStatement.init(from:)();
}

void sub_23F832824()
{
  DynamicEnumerationEntityStatement.encode(to:)();
}

uint64_t sub_23F83283C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7365697469746E65 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F8328C0()
{
  return 0x7365697469746E65;
}

uint64_t sub_23F8328DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F83283C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F832904()
{
  sub_23F840908();
  return sub_23FB2FD10();
}

uint64_t sub_23F83292C()
{
  sub_23F840908();
  return sub_23FB2FD1C();
}

void EntitySpanMatchResult.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;

  sub_23F6B5220();
  a19 = v23;
  a20 = v24;
  sub_23F878C5C();
  sub_23F6916B8(&qword_256EACFE8);
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *v20;
  sub_23F70D508(v21);
  sub_23F840908();
  sub_23F6F33A0();
  a10 = v28;
  sub_23F6916B8(&qword_256EA46E0);
  sub_23F8799D0();
  sub_23F87693C();
  sub_23F6B530C((uint64_t)v27, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  sub_23F77DB18();
  sub_23F6B5100();
}

void EntitySpanMatchResult.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F6B5220();
  sub_23F877118();
  sub_23F6916B8(&qword_256EACFF8);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F876754(v0);
  sub_23F840908();
  sub_23F75B598();
  if (!v1)
  {
    sub_23F6916B8(&qword_256EA46E0);
    sub_23F8409C0();
    sub_23F6B6E1C();
    sub_23F6F1CB8(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    sub_23F878D14();
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v0);
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23F832ACC()
{
  EntitySpanMatchResult.init(from:)();
}

#error "23F832AE8: call analysis failed (funcsize=5)"

void ToolRetrievalResponse.originalSubQuery.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void ToolRetrievalResponse.originalSubQuery.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  sub_23F6F09A8();
  *v2 = a1;
  v2[1] = a2;
  sub_23F694C84();
}

uint64_t (*ToolRetrievalResponse.originalSubQuery.modify())()
{
  return nullsub_1;
}

void ToolRetrievalResponse.rewrittenQuery.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void ToolRetrievalResponse.rewrittenQuery.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6F0C58();
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v0;
  sub_23F694C84();
}

uint64_t (*ToolRetrievalResponse.rewrittenQuery.modify())()
{
  return nullsub_1;
}

float ToolRetrievalResponse.confidence.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 32);
}

void ToolRetrievalResponse.confidence.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 32) = a1;
}

uint64_t (*ToolRetrievalResponse.confidence.modify())()
{
  return nullsub_1;
}

uint64_t ToolRetrievalResponse.retrievedTools.getter()
{
  return swift_bridgeObjectRetain();
}

void ToolRetrievalResponse.retrievedTools.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = a1;
  sub_23F694CC8();
}

uint64_t (*ToolRetrievalResponse.retrievedTools.modify())()
{
  return nullsub_1;
}

uint64_t ToolRetrievalResponse.types.getter()
{
  return swift_bridgeObjectRetain();
}

void ToolRetrievalResponse.types.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = a1;
  sub_23F694CC8();
}

uint64_t (*ToolRetrievalResponse.types.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F832C34(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  BOOL v6;
  BOOL v7;
  char v9;

  if (a1 == 0xD000000000000010 && a2 == 0x800000023FB31440 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x6574746972776572 && a2 == 0xEE0079726575516ELL;
    if (v5 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v6 = a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563;
      if (v6 || (sub_23FB2FB78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v7 = a1 == 0x6576656972746572 && a2 == 0xEE00736C6F6F5464;
        if (v7 || (sub_23FB2FB78() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x7365707974 && a2 == 0xE500000000000000)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v9 = sub_23FB2FB78();
          swift_bridgeObjectRelease();
          if ((v9 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_23F832E88(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23F832EC0 + 4 * byte_23FB633D9[a1]))(0xD000000000000010, 0x800000023FB31440);
}

uint64_t sub_23F832EC0()
{
  return 0x6574746972776572;
}

uint64_t sub_23F832EE4()
{
  return 0x6E656469666E6F63;
}

uint64_t sub_23F832F00()
{
  return 0x6576656972746572;
}

uint64_t sub_23F832F24()
{
  return 0x7365707974;
}

uint64_t sub_23F832F38()
{
  unsigned __int8 *v0;

  return sub_23F832E88(*v0);
}

uint64_t sub_23F832F40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F832C34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F832F64()
{
  sub_23F840A3C();
  return sub_23FB2FD10();
}

uint64_t sub_23F832F8C()
{
  sub_23F840A3C();
  return sub_23FB2FD1C();
}

void ToolRetrievalResponse.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  sub_23F878D48();
  v4 = v3;
  sub_23F6916B8(&qword_256EAD000);
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F878564();
  sub_23F6B6280(v4);
  sub_23F840A3C();
  sub_23F879218();
  sub_23FB2FCC8();
  sub_23F8795B8();
  sub_23F87997C();
  if (!v1)
  {
    sub_23F876828();
    sub_23FB2FB00();
    sub_23F6916B8(&qword_256EAD010);
    sub_23F840A78();
    sub_23F70D78C();
    sub_23F6916B8(&qword_256EAD028);
    sub_23F840AF4();
    sub_23F70D78C();
  }
  sub_23F70D728(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23F876B60();
  sub_23F70D684();
}

void ToolRetrievalResponse.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;

  sub_23F878D48();
  v3 = v2;
  v5 = v4;
  sub_23F6916B8(&qword_256EAD048);
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F876BD8(v3);
  sub_23F840A3C();
  sub_23F877870();
  if (v0)
  {
    sub_23F6B6E68();
  }
  else
  {
    LOBYTE(v29) = 0;
    v9 = sub_23F87734C();
    v11 = v10;
    v26 = v9;
    LOBYTE(v29) = 1;
    sub_23F740050();
    v12 = sub_23F87734C();
    v27 = v13;
    v24 = v12;
    LOBYTE(v29) = 2;
    sub_23F740050();
    v25 = 0;
    sub_23FB2FA64();
    v15 = v14;
    sub_23F6916B8(&qword_256EAD010);
    v28 = 3;
    sub_23F840B90();
    sub_23F878984();
    sub_23F8769F0();
    v16 = v29;
    sub_23F6916B8(&qword_256EAD028);
    v28 = 4;
    v17 = sub_23F840C0C();
    v23 = v16;
    sub_23F77DCD4();
    sub_23F878984();
    sub_23F8769F0();
    v18 = v25;
    if (v17)
    {
      sub_23F6B5900((uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
      sub_23F6B6090();
      sub_23F879038();
      sub_23F717D54();
      _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v3);
      sub_23F6B6090();
      if (!v18)
        sub_23F879038();
    }
    else
    {
      sub_23F6B5900((uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
      v19 = v29;
      sub_23F6B6548();
      v20 = v27;
      sub_23F77DCD4();
      sub_23F6B54F8();
      sub_23F6B6090();
      sub_23F6B644C();
      *(_QWORD *)v5 = v26;
      *(_QWORD *)(v5 + 8) = v11;
      v21 = v23;
      *(_QWORD *)(v5 + 16) = v24;
      *(_QWORD *)(v5 + 24) = v20;
      *(_DWORD *)(v5 + 32) = v15;
      *(_QWORD *)(v5 + 40) = v21;
      *(_QWORD *)(v5 + 48) = v19;
      sub_23F876C80();
      sub_23F6B6A48();
      sub_23F6B644C();
    }
    swift_bridgeObjectRelease();
  }
  sub_23F876FC4();
  sub_23F70D684();
}

void sub_23F8333D8()
{
  ToolRetrievalResponse.init(from:)();
}

void sub_23F8333EC()
{
  ToolRetrievalResponse.encode(to:)();
}

uint64_t (*ExternalAgentTextQuery.query.modify())()
{
  return nullsub_1;
}

void ExternalAgentTextQuery.queryRewriteMetadataEventId.getter()
{
  sub_23F81D874(type metadata accessor for ExternalAgentTextQuery);
}

void ExternalAgentTextQuery.queryRewriteMetadataEventId.setter(uint64_t a1)
{
  sub_23F81D8AC(a1, type metadata accessor for ExternalAgentTextQuery);
}

uint64_t (*ExternalAgentTextQuery.queryRewriteMetadataEventId.modify())()
{
  sub_23F878EA4();
  sub_23F6F099C();
  return nullsub_1;
}

uint64_t ExternalAgentTextQuery.queryRewriteMetadataInlined.getter()
{
  return sub_23F833468();
}

uint64_t sub_23F833468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_23F8772B8();
  v1 = sub_23F878B94(*(int *)(v0 + 24));
  return sub_23F878638(v1, v2);
}

double ExternalAgentTextQuery.queryRewriteMetadataInlined.setter(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = sub_23F83349C(a1, type metadata accessor for ExternalAgentTextQuery).n128_u64[0];
  return result;
}

__n128 sub_23F83349C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;

  v6 = *(_OWORD *)a1;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = v2 + *(int *)(sub_23F6F0918(a1, a2) + 24);
  sub_23F87828C();
  *(_OWORD *)v4 = v6;
  *(_QWORD *)(v4 + 16) = v3;
  sub_23F6F5A08();
  return result;
}

uint64_t (*ExternalAgentTextQuery.queryRewriteMetadataInlined.modify())()
{
  sub_23F878EA4();
  sub_23F6F09C4();
  return nullsub_1;
}

__n128 ExternalAgentTextQuery.init(query:queryRewriteMetadataEventId:queryRewriteMetadataInlined:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  __int128 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  __n128 result;
  __int128 v17;

  sub_23F87972C();
  v17 = *v7;
  v8 = *((_QWORD *)v7 + 2);
  v9 = sub_23F878EA4();
  v10 = (uint64_t)v4 + *(int *)(v9 + 20);
  v11 = sub_23F72E034();
  sub_23F6B5A8C(v10, v12, v13, v11);
  v14 = (_QWORD *)((char *)v4 + *(int *)(v9 + 24));
  *v14 = 0;
  v14[1] = 0;
  v14[2] = 0;
  *v4 = v3;
  v4[1] = a2;
  sub_23F878540(a3, v15, &qword_256EA2798);
  sub_23F77D90C(*v14, v14[1]);
  *(_OWORD *)v14 = v17;
  v14[2] = v8;
  sub_23F87804C();
  return result;
}

uint64_t sub_23F833594(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7972657571 && a2 == 0xE500000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023FB34D90 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023FB34DB0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23F8336D4(char a1)
{
  if (a1)
    return 0xD00000000000001BLL;
  else
    return 0x7972657571;
}

uint64_t sub_23F833730()
{
  char *v0;

  return sub_23F8336D4(*v0);
}

uint64_t sub_23F833738@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F833594(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F83375C()
{
  sub_23F840CA8();
  return sub_23FB2FD10();
}

uint64_t sub_23F833784()
{
  sub_23F840CA8();
  return sub_23FB2FD1C();
}

void ExternalAgentTextQuery.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char v6;

  sub_23F6D3DC4();
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EAD078);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F70D4B8();
  sub_23F840CA8();
  sub_23F6B63A4();
  v6 = 0;
  sub_23F87698C();
  if (!v0)
  {
    type metadata accessor for ExternalAgentTextQuery(0);
    v6 = 1;
    sub_23F72E034();
    sub_23F6B4EEC((uint64_t)&qword_256EA6620);
    sub_23F876834();
    sub_23F877520();
    sub_23F876834();
  }
  sub_23F6B56E0((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F70D9D8();
  sub_23F6D3710();
}

void ExternalAgentTextQuery.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;

  sub_23F6B5220();
  v5 = v4;
  v20 = v6;
  sub_23F6916B8(&qword_256EA2798);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B57BC(v8, v19);
  v21 = *(_QWORD *)(sub_23F6916B8(&qword_256EAD088) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F6B51D0();
  type metadata accessor for ExternalAgentTextQuery(v10);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F8773BC();
  v13 = (uint64_t)v3 + v12;
  v14 = sub_23F72E034();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v13, 1, 1, v14);
  sub_23F878F3C();
  sub_23F70D6E4(v5);
  sub_23F840CA8();
  sub_23F8787A0();
  sub_23F877870();
  if (v0)
  {
    v15 = sub_23F877638();
    sub_23F876C50(v15, &qword_256EA2798);
    sub_23F877D2C();
  }
  else
  {
    LOBYTE(v22) = 0;
    *v3 = sub_23F70D944();
    v3[1] = v16;
    sub_23F87936C();
    sub_23F6B4EEC((uint64_t)&qword_256EA6700);
    sub_23F878340();
    v17 = sub_23F878318();
    sub_23F878E28(v17, v18, &qword_256EA2798);
    sub_23F878464();
    sub_23F878FBC();
    sub_23F878318();
    sub_23F6B6178(v1, *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
    sub_23F877D2C();
    *(_OWORD *)v2 = v22;
    *(_QWORD *)(v2 + 16) = v23;
    sub_23F876818((uint64_t)v3, v20);
    sub_23F6B6E68();
    sub_23F876820((uint64_t)v3);
  }
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23F833B0C()
{
  ExternalAgentTextQuery.init(from:)();
}

void sub_23F833B20()
{
  ExternalAgentTextQuery.encode(to:)();
}

uint64_t (*ExternalAgentSpeechQuery.candidates.modify())()
{
  return nullsub_1;
}

void ExternalAgentSpeechQuery.queryRewriteMetadataEventId.getter()
{
  sub_23F81D874(type metadata accessor for ExternalAgentSpeechQuery);
}

void ExternalAgentSpeechQuery.queryRewriteMetadataEventId.setter(uint64_t a1)
{
  sub_23F81D8AC(a1, type metadata accessor for ExternalAgentSpeechQuery);
}

uint64_t (*ExternalAgentSpeechQuery.queryRewriteMetadataEventId.modify())()
{
  sub_23F878F00();
  sub_23F6F099C();
  return nullsub_1;
}

uint64_t ExternalAgentSpeechQuery.queryRewriteMetadataInlined.getter()
{
  return sub_23F833468();
}

double ExternalAgentSpeechQuery.queryRewriteMetadataInlined.setter(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = sub_23F83349C(a1, type metadata accessor for ExternalAgentSpeechQuery).n128_u64[0];
  return result;
}

uint64_t (*ExternalAgentSpeechQuery.queryRewriteMetadataInlined.modify())()
{
  sub_23F878F00();
  sub_23F6F09C4();
  return nullsub_1;
}

__n128 ExternalAgentSpeechQuery.init(candidates:queryRewriteMetadataEventId:queryRewriteMetadataInlined:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 result;

  sub_23F877640();
  v12 = sub_23F8781D0();
  v13 = type metadata accessor for ExternalAgentSpeechQuery(v12);
  v14 = sub_23F72E034();
  v15 = sub_23F877FA8(v14);
  *v10 = v9;
  sub_23F879990(v15, v16, &qword_256EA2798);
  sub_23F878648();
  *(_OWORD *)v13 = a9;
  *(_QWORD *)(v13 + 16) = v11;
  sub_23F6B647C();
  return result;
}

uint64_t sub_23F833C20(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x74616469646E6163 && a2 == 0xEA00000000007365;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023FB34D90 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023FB34DB0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23F833D74(char a1)
{
  if (a1)
    return 0xD00000000000001BLL;
  else
    return 0x74616469646E6163;
}

uint64_t sub_23F833DD8()
{
  char *v0;

  return sub_23F833D74(*v0);
}

uint64_t sub_23F833DE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F833C20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F833E04()
{
  sub_23F840CE4();
  return sub_23FB2FD10();
}

uint64_t sub_23F833E2C()
{
  sub_23F840CE4();
  return sub_23FB2FD1C();
}

void ExternalAgentSpeechQuery.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char v11;

  sub_23F6D3DC4();
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EAD090);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F70D4B8();
  sub_23F840CE4();
  sub_23F6B63A4();
  *(_QWORD *)&v9 = *v1;
  v11 = 0;
  sub_23F6916B8(&qword_256EAB790);
  sub_23F8799C0();
  sub_23F70D4F0();
  if (!v0)
  {
    v6 = type metadata accessor for ExternalAgentSpeechQuery(0);
    LOBYTE(v9) = 1;
    sub_23F72E034();
    sub_23F6B4EEC((uint64_t)&qword_256EA6620);
    sub_23F876834();
    v7 = (char *)v1 + *(int *)(v6 + 24);
    v8 = *((_QWORD *)v7 + 2);
    v9 = *(_OWORD *)v7;
    v10 = v8;
    sub_23F879578();
    sub_23F83C454();
    sub_23F876834();
  }
  sub_23F6B56E0((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F70D9D8();
  sub_23F6D3710();
}

void ExternalAgentSpeechQuery.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;

  sub_23F6B5220();
  v6 = v5;
  v18 = v7;
  sub_23F6916B8(&qword_256EA2798);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5598(v9, v18);
  sub_23F6916B8(&qword_256EAD0A0);
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_23F7A00C8();
  type metadata accessor for ExternalAgentSpeechQuery(v11);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F8773BC();
  v14 = (uint64_t)v4 + v13;
  sub_23F72E034();
  sub_23F87732C(v14);
  sub_23F878F3C();
  sub_23F70D6E4(v6);
  sub_23F840CE4();
  sub_23F70D990();
  if (v1)
  {
    v15 = _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v6);
    sub_23F876C50(v15, &qword_256EA2798);
    sub_23F877D2C();
  }
  else
  {
    sub_23F6916B8(&qword_256EAB790);
    sub_23F83DF04();
    sub_23F879188();
    sub_23F7839F0();
    *v4 = v20;
    sub_23F87936C();
    sub_23F6B4EEC((uint64_t)&qword_256EA6700);
    sub_23F878340();
    v16 = sub_23F878A84();
    sub_23F878E28(v16, v17, &qword_256EA2798);
    sub_23F878464();
    sub_23F878FBC();
    sub_23F878A84();
    sub_23F6B6178(v0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    sub_23F877D2C();
    *(_OWORD *)v3 = v20;
    *(_QWORD *)(v3 + 16) = v21;
    sub_23F876818((uint64_t)v4, v19);
    sub_23F878434();
    sub_23F876820((uint64_t)v4);
  }
  sub_23F876B60();
  sub_23F6B5100();
}

void sub_23F8341F4()
{
  ExternalAgentSpeechQuery.init(from:)();
}

void sub_23F834208()
{
  ExternalAgentSpeechQuery.encode(to:)();
}

uint64_t ExternalAgentOutcome.statementId.getter()
{
  return sub_23F839AEC();
}

uint64_t ExternalAgentOutcome.statementId.setter(uint64_t a1)
{
  return sub_23F839B28(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

uint64_t (*ExternalAgentOutcome.statementId.modify())()
{
  return nullsub_1;
}

uint64_t ExternalAgentOutcome.statementOutcome.getter()
{
  return sub_23F811704(type metadata accessor for ExternalAgentOutcome);
}

uint64_t ExternalAgentOutcome.statementOutcome.setter(uint64_t a1)
{
  return sub_23F811750(a1, type metadata accessor for ExternalAgentOutcome);
}

uint64_t (*ExternalAgentOutcome.statementOutcome.modify())()
{
  type metadata accessor for ExternalAgentOutcome(0);
  sub_23F6F099C();
  return nullsub_1;
}

uint64_t ExternalAgentOutcome.responseText.getter()
{
  return sub_23F8221BC(type metadata accessor for ExternalAgentOutcome);
}

void ExternalAgentOutcome.responseText.setter(uint64_t a1)
{
  sub_23F8221E4(a1, type metadata accessor for ExternalAgentOutcome);
}

uint64_t (*ExternalAgentOutcome.responseText.modify())()
{
  type metadata accessor for ExternalAgentOutcome(0);
  sub_23F6F09C4();
  return nullsub_1;
}

void sub_23F8342D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(char *))
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v7 = a5(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v11 - v8;
  sub_23F78F1E4((uint64_t)&v11 - v8, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 16));
  a6(v9);
  sub_23F694C84();
}

void ExternalAgentOutcome.outcome.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F877DF8();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FB2C7F4();
  v5 = sub_23F878268();
  sub_23F78F1B0(v5);
  v6 = type metadata accessor for ExternalAgentOutcome(0);
  sub_23F72E0C8(v0 + *(int *)(v6 + 20), (uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 40));
  sub_23F6B5F7C();
}

void ExternalAgentOutcome.outcome.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_23F877DF8();
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v3[3] = sub_23F877D80(v5);
  v6 = sub_23F878268();
  v3[4] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[5] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[6] = malloc(v8);
  v3[7] = malloc(v8);
  *((_DWORD *)v3 + 16) = *(_DWORD *)(type metadata accessor for ExternalAgentOutcome(0) + 20);
  sub_23F87986C();
  sub_23F694C84();
}

void sub_23F834458()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  void (*v13)(void *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);

  sub_23F6B50E8();
  v1 = *(void **)v0;
  v2 = *(void **)(*(_QWORD *)v0 + 48);
  v3 = *(void **)(*(_QWORD *)v0 + 56);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  v5 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v7 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  v6 = *(void **)(*(_QWORD *)v0 + 24);
  v8 = **(_QWORD **)v0 + *(int *)(*(_QWORD *)v0 + 64);
  if ((v9 & 1) != 0)
  {
    v10 = sub_23F6B5EE4();
    sub_23F77DD54(v10, v11, v12);
    sub_23FB2C7F4();
    v13 = *(void (**)(void *, uint64_t))(v5 + 8);
    v13(v2, v4);
    sub_23F6B5EF0(v8, (uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 40));
    v14 = sub_23F78F534();
    ((void (*)(uint64_t))v13)(v14);
  }
  else
  {
    sub_23FB2C7F4();
    v15 = sub_23F78F534();
    v16(v15);
    sub_23F6B5EF0(v8, (uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 40));
  }
  free(v3);
  free(v2);
  free(v6);
  free(v1);
}

void ExternalAgentOutcome.init(statementId:statementOutcome:responseText:)(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_23F6B58C8();
  sub_23F70D6B4(v4);
  v5 = type metadata accessor for ExternalAgentOutcome(0);
  v6 = a2 + *(int *)(v5 + 20);
  v7 = sub_23F877DF8();
  sub_23F7B0990(v6, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32));
  *(_QWORD *)(a2 + *(int *)(v5 + 24)) = a1;
  sub_23F6B5F7C();
}

void ExternalAgentOutcome.init(outcome:responseText:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F0AE8();
  sub_23FB2D0DC();
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F693EB0();
  sub_23F8773AC();
  sub_23FB2C7F4();
  v5 = sub_23F878268();
  sub_23F78F1B0(v5);
  v6 = type metadata accessor for ExternalAgentOutcome(0);
  sub_23F6B633C(v1 + *(int *)(v6 + 20), v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
  *(_QWORD *)(v1 + *(int *)(v6 + 24)) = v0;
  sub_23F6B5F7C();
}

void ExternalAgentOutcome.init(statementId:outcome:responseText:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t);
  uint64_t v35;

  sub_23F6B50E8();
  a19 = v22;
  a20 = v23;
  sub_23F879900();
  v25 = v24;
  sub_23F877DF8();
  sub_23F70D9A8();
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&a9 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B58C8();
  v29 = sub_23F7D2D5C();
  sub_23F6B5EF0(v29, v30, v31);
  sub_23FB2C7F4();
  v32 = sub_23F878268();
  sub_23F78F1B0(v32);
  v33 = sub_23F7D260C();
  v34(v33);
  v35 = type metadata accessor for ExternalAgentOutcome(0);
  sub_23F6B633C(v25 + *(int *)(v35 + 20), (uint64_t)v28, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 32));
  *(_QWORD *)(v25 + *(int *)(v35 + 24)) = v20;
  sub_23F693DDC();
}

uint64_t sub_23F8346CC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023FB34DD0 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65736E6F70736572 && a2 == 0xEC00000074786554)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v7 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23F834844(char a1)
{
  if (!a1)
    return 0x6E656D6574617473;
  if (a1 == 1)
    return 0xD000000000000010;
  return 0x65736E6F70736572;
}

uint64_t sub_23F8348B0()
{
  char *v0;

  return sub_23F834844(*v0);
}

uint64_t sub_23F8348B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F8346CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F8348DC()
{
  sub_23F840D20();
  return sub_23FB2FD10();
}

uint64_t sub_23F834904()
{
  sub_23F840D20();
  return sub_23FB2FD1C();
}

void ExternalAgentOutcome.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD v7[3];
  char v8;

  sub_23F6D3DC4();
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EAD0A8);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F70D4B8();
  sub_23F840D20();
  sub_23F6B63A4();
  v8 = 0;
  sub_23F6B58C8();
  sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
  sub_23F876660();
  if (!v0)
  {
    v6 = type metadata accessor for ExternalAgentOutcome(0);
    sub_23F876854();
    sub_23FB2D0DC();
    sub_23F6B4EEC((uint64_t)&unk_256EACC68);
    sub_23F70D4F0();
    v7[2] = *(_QWORD *)(v1 + *(int *)(v6 + 24));
    sub_23F878018();
    sub_23F6916B8(&qword_256EA1918);
    sub_23F6AEB70((uint64_t)&qword_256EA1920);
    sub_23F70D4F0();
  }
  sub_23F6B56E0((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F70D9D8();
  sub_23F6D3710();
}

void ExternalAgentOutcome.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_23F6B5220();
  v5 = v4;
  v23 = v6;
  v7 = sub_23FB2D0DC();
  v25 = *(_QWORD *)(v7 - 8);
  v26 = v7;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  v24 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_23F6B58C8();
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5420(v11, v21);
  v29 = sub_23F6916B8(&qword_256EAD0B8);
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23F70D7F8();
  v14 = type metadata accessor for ExternalAgentOutcome(v13);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6ADC98(v5, v5[3]);
  sub_23F840D20();
  v30 = v2;
  sub_23F877128();
  if (v1)
  {
    sub_23F878890();
  }
  else
  {
    v31 = v0;
    v21 = v14;
    v22 = v3;
    v19 = (uint64_t)v24;
    v18 = v25;
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    sub_23F876F6C();
    v20 = v27;
    sub_23F6B6E1C();
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(v17, v28, v20);
    sub_23F6B6360();
    sub_23F6B4EEC((uint64_t)&unk_256EACC80);
    sub_23F877EEC();
    sub_23F6B6E1C();
    sub_23F6B633C((uint64_t)&v17[*(int *)(v21 + 20)], v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32));
    sub_23F6916B8(&qword_256EA1918);
    sub_23F877210();
    sub_23F6AEB70((uint64_t)&qword_256EA1930);
    sub_23F6B6CAC();
    sub_23F876EF8(v30, *(uint64_t (**)(uint64_t, _QWORD))(v31 + 8));
    *(_QWORD *)&v17[*(int *)(v21 + 24)] = v32;
    sub_23F876818((uint64_t)v17, v23);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(0);
    sub_23F876820((uint64_t)v17);
  }
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23F834D68()
{
  ExternalAgentOutcome.init(from:)();
}

void sub_23F834D7C()
{
  ExternalAgentOutcome.encode(to:)();
}

uint64_t (*ExternalAgentRequestRewriteMetadata.originalRequest.modify())()
{
  return nullsub_1;
}

uint64_t (*ExternalAgentRequestRewriteMetadata.rewrites.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F834DB4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6C616E696769726FLL && a2 == 0xEF74736575716552;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365746972776572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F834EC4(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7365746972776572;
  else
    return 0x6C616E696769726FLL;
}

uint64_t sub_23F834F08()
{
  char *v0;

  return sub_23F834EC4(*v0);
}

uint64_t sub_23F834F10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F834DB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F834F34()
{
  sub_23F840D5C();
  return sub_23FB2FD10();
}

uint64_t sub_23F834F5C()
{
  sub_23F840D5C();
  return sub_23FB2FD1C();
}

void ExternalAgentRequestRewriteMetadata.encode(to:)()
{
  sub_23F834FB8();
}

void sub_23F834FB8()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  void (*v3)(_QWORD *);
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void (*v10)(_QWORD *);
  void (*v11)(uint64_t);
  uint64_t v12;

  sub_23F6B5220();
  v11 = v2;
  v10 = v3;
  v5 = (_QWORD *)v4;
  v12 = *(_QWORD *)(sub_23F6B63B8(v4, v6) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F878548();
  v8 = sub_23F876754(v5);
  v10(v8);
  sub_23F877D9C();
  v9 = sub_23F878374();
  v11(v9);
  if (!v0)
  {
    sub_23F6B6360();
    sub_23F6916B8(&qword_256EA1918);
    sub_23F6AEB70((uint64_t)&qword_256EA1920);
    sub_23F70D78C();
  }
  sub_23F6B56E0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  sub_23F876B60();
  sub_23F6B5100();
}

void ExternalAgentRequestRewriteMetadata.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[2];

  sub_23F6B5220();
  sub_23F87733C();
  sub_23F6916B8(&qword_256EAD0D0);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v0[3];
  v8 = v0[4];
  sub_23F876754(v0);
  sub_23F840D5C();
  sub_23F6B5DA0();
  if (v1)
  {
    sub_23F6B6E68();
  }
  else
  {
    sub_23F876CD8();
    sub_23F879860();
    sub_23F6916B8(&qword_256EA1918);
    sub_23F6B6360();
    sub_23F6AEB70((uint64_t)&qword_256EA1930);
    v10 = v9;
    sub_23F77E600();
    sub_23F8769F0();
    sub_23F6B563C((uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    if (v10)
    {
      sub_23F6B6A48();
      sub_23F6B6E68();
    }
    else
    {
      v11 = v12[1];
      *v2 = v8;
      v2[1] = v7;
      v2[2] = v11;
      sub_23F6B54F8();
      sub_23F876C80();
    }
    sub_23F6B6A48();
  }
  sub_23F876FC4();
  sub_23F6B5100();
}

void sub_23F8351F8()
{
  ExternalAgentRequestRewriteMetadata.init(from:)();
}

void sub_23F83520C()
{
  ExternalAgentRequestRewriteMetadata.encode(to:)();
}

uint64_t ToolResolution.tool.getter()
{
  return sub_23F839AEC();
}

uint64_t ToolResolution.tool.setter(uint64_t a1)
{
  return sub_23F839B28(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEB8FE0]);
}

uint64_t (*ToolResolution.tool.modify())()
{
  return nullsub_1;
}

uint64_t ToolResolution.statementId.getter()
{
  return sub_23F811704(type metadata accessor for ToolResolution);
}

uint64_t ToolResolution.statementId.setter(uint64_t a1)
{
  return sub_23F811750(a1, type metadata accessor for ToolResolution);
}

uint64_t (*ToolResolution.statementId.modify())()
{
  sub_23F878E7C();
  sub_23F6F099C();
  return nullsub_1;
}

uint64_t ToolResolution.originProgramStatementId.getter()
{
  return sub_23F825F6C(type metadata accessor for ToolResolution);
}

uint64_t ToolResolution.originProgramStatementId.setter(uint64_t a1)
{
  return sub_23F825FB8(a1, type metadata accessor for ToolResolution);
}

uint64_t (*ToolResolution.originProgramStatementId.modify())()
{
  sub_23F878E7C();
  sub_23F6F09C4();
  return nullsub_1;
}

uint64_t ToolResolution.init(tool:statementId:originProgramStatementId:)()
{
  return sub_23F836178();
}

uint64_t sub_23F8352F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v7;

  v2 = a1 == 1819242356 && a2 == 0xE400000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000018 && a2 == 0x800000023FB34C30)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = sub_23FB2FB78();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F835444(char a1)
{
  if (!a1)
    return 1819242356;
  if (a1 == 1)
    return 0x6E656D6574617473;
  return 0xD000000000000018;
}

uint64_t sub_23F8354A0()
{
  char *v0;

  return sub_23F835444(*v0);
}

uint64_t sub_23F8354A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F8352F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F8354CC()
{
  sub_23F840D98();
  return sub_23FB2FD10();
}

uint64_t sub_23F8354F4()
{
  sub_23F840D98();
  return sub_23FB2FD1C();
}

void ToolResolution.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;

  sub_23F6B5220();
  a22 = v25;
  a23 = v26;
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EAD0D8);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&a9 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F70D4B8();
  sub_23F840D98();
  sub_23F6B63A4();
  sub_23F878390();
  sub_23FB2E8D0();
  sub_23F6B4EEC((uint64_t)&qword_256EA8168);
  sub_23F876660();
  if (!v23)
  {
    type metadata accessor for ToolResolution(0);
    a13 = 1;
    sub_23F6B58C8();
    sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
    sub_23F70D4F0();
    a12 = 2;
    sub_23F70D4F0();
  }
  sub_23F6B56E0((uint64_t)v29, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
  sub_23F877A30();
  sub_23F6B5100();
}

void ToolResolution.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17[4];
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_23F6B5220();
  v3 = v2;
  v18 = v4;
  v5 = sub_23F6B58C8();
  v21 = *(_QWORD *)(v5 - 8);
  v22 = v5;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  v19 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v8);
  v20 = (char *)v17 - v9;
  sub_23F6D398C();
  v23 = sub_23FB2E8D0();
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5420(v11, v17[0]);
  v24 = sub_23F6916B8(&qword_256EAD0E8);
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23F7A00C8();
  type metadata accessor for ToolResolution(v13);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F876754(v3);
  sub_23F840D98();
  v25 = v0;
  sub_23F877128();
  if (v1)
  {
    sub_23F6B6E34();
  }
  else
  {
    sub_23F8784B4();
    sub_23F6B4EEC((uint64_t)&qword_256EA8198);
    sub_23F6B6CAC();
    sub_23F8784A0();
    sub_23F6B6360();
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    v16 = v15;
    sub_23F6B6CAC();
    sub_23F8775C4();
    sub_23F87721C();
    sub_23F87718C();
    sub_23F877AB0();
    sub_23F876818(v16, v18);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v26);
    sub_23F876820(v16);
  }
  sub_23F6B6CA0();
  sub_23F6B5100();
}

void sub_23F8358C0()
{
  ToolResolution.init(from:)();
}

#error "23F8358DC: call analysis failed (funcsize=5)"

uint64_t TypeConversionRequest.value.getter()
{
  return sub_23F839AEC();
}

uint64_t TypeConversionRequest.value.setter(uint64_t a1)
{
  return sub_23F839B28(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18]);
}

uint64_t (*TypeConversionRequest.value.modify())()
{
  return nullsub_1;
}

uint64_t TypeConversionRequest.target.getter()
{
  return sub_23F811704(type metadata accessor for TypeConversionRequest);
}

uint64_t TypeConversionRequest.target.setter(uint64_t a1)
{
  return sub_23F811750(a1, type metadata accessor for TypeConversionRequest);
}

uint64_t (*TypeConversionRequest.target.modify())()
{
  sub_23F878708();
  sub_23F6F099C();
  return nullsub_1;
}

uint64_t TypeConversionRequest.statementId.getter()
{
  return sub_23F825F6C(type metadata accessor for TypeConversionRequest);
}

uint64_t TypeConversionRequest.statementId.setter(uint64_t a1)
{
  return sub_23F825FB8(a1, type metadata accessor for TypeConversionRequest);
}

uint64_t (*TypeConversionRequest.statementId.modify())()
{
  sub_23F878708();
  sub_23F6F09C4();
  return nullsub_1;
}

uint64_t TypeConversionRequest.init(value:target:statementId:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  v1 = sub_23F6B6634();
  sub_23F70D6B4(v1);
  sub_23F878708();
  sub_23F87813C();
  v2 = sub_23FB2ED5C();
  sub_23F7B0990(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32));
  sub_23F6B58C8();
  v3 = sub_23F8769D8();
  return sub_23F876B50(v3, v4, v5, v6);
}

uint64_t sub_23F835A0C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x746567726174 && a2 == 0xE600000000000000;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23FB2FB78();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F835B60(char a1)
{
  if (!a1)
    return 0x65756C6176;
  if (a1 == 1)
    return 0x746567726174;
  return 0x6E656D6574617473;
}

uint64_t sub_23F835BB8()
{
  char *v0;

  return sub_23F835B60(*v0);
}

uint64_t sub_23F835BC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F835A0C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F835BE4()
{
  sub_23F840DD4();
  return sub_23FB2FD10();
}

uint64_t sub_23F835C0C()
{
  sub_23F840DD4();
  return sub_23FB2FD1C();
}

void TypeConversionRequest.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE v5[16];

  sub_23F6D3DC4();
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EAD0F0);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v5[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F70D4B8();
  sub_23F840DD4();
  sub_23F6B63A4();
  v5[15] = 0;
  sub_23F6B6634();
  sub_23F6B4EEC((uint64_t)&qword_256EA7170);
  sub_23F876660();
  if (!v0)
  {
    type metadata accessor for TypeConversionRequest(0);
    sub_23F876854();
    sub_23FB2ED5C();
    sub_23F6B4EEC((uint64_t)&unk_256EAC7A0);
    sub_23F70D4F0();
    v5[13] = 2;
    sub_23F6B58C8();
    sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
    sub_23F70D4F0();
  }
  sub_23F6B56E0((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F70D9D8();
  sub_23F6D3710();
}

void TypeConversionRequest.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(_QWORD);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_23F6B5220();
  v6 = v5;
  v30 = v7;
  v31 = sub_23F6B58C8();
  v29 = *(_QWORD *)(v31 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  v32 = (uint64_t)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6D398C();
  v10 = sub_23FB2ED5C();
  sub_23F879048(v10);
  v33 = v11;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  v34 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_23F6B6634();
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B5C10(v15, v27);
  v37 = sub_23F6916B8(&qword_256EAD100);
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8](v16);
  v17 = sub_23F78F27C();
  v18 = type metadata accessor for TypeConversionRequest(v17);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F6B59E0();
  v20 = v6[4];
  sub_23F876A18(v6);
  sub_23F840DD4();
  v38 = v1;
  sub_23F70D990();
  if (v0)
  {
    sub_23F6B6E68();
  }
  else
  {
    v28 = v3;
    v39 = v4;
    v21 = (uint64_t)v34;
    sub_23F6B4EEC((uint64_t)&qword_256EA7188);
    sub_23F879160();
    sub_23F7717EC();
    v22 = v20;
    v23 = v28;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32))(v28, v36, v22);
    sub_23F6B6360();
    sub_23F6B4EEC((uint64_t)&unk_256EAC7B8);
    sub_23F7717EC();
    v36 = v18;
    sub_23F75E68C(v23 + *(int *)(v18 + 20), v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 32));
    sub_23F877210();
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    sub_23F87834C();
    sub_23F876AE4();
    v24 = v28;
    sub_23F8776B0(*(uint64_t (**)(_QWORD, _QWORD))(v2 + 8));
    sub_23F6B633C(v24 + *(int *)(v36 + 24), v32, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 32));
    sub_23F878194(v24, v30);
    sub_23F877804();
    v25 = sub_23F6B6190();
    sub_23F83A7D4(v25, v26);
  }
  sub_23F8785C4();
  sub_23F6B5100();
}

void sub_23F83607C()
{
  TypeConversionRequest.init(from:)();
}

void sub_23F836090()
{
  TypeConversionRequest.encode(to:)();
}

uint64_t TypeConversionResult.value.getter()
{
  return sub_23F839AEC();
}

uint64_t TypeConversionResult.value.setter(uint64_t a1)
{
  return sub_23F839B28(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18]);
}

uint64_t (*TypeConversionResult.value.modify())()
{
  return nullsub_1;
}

uint64_t TypeConversionResult.statementId.getter()
{
  return sub_23F811704(type metadata accessor for TypeConversionResult);
}

uint64_t TypeConversionResult.statementId.setter(uint64_t a1)
{
  return sub_23F811750(a1, type metadata accessor for TypeConversionResult);
}

uint64_t (*TypeConversionResult.statementId.modify())()
{
  sub_23F878E8C();
  sub_23F6F099C();
  return nullsub_1;
}

uint64_t TypeConversionResult.originStatementId.getter()
{
  return sub_23F825F6C(type metadata accessor for TypeConversionResult);
}

uint64_t TypeConversionResult.originStatementId.setter(uint64_t a1)
{
  return sub_23F825FB8(a1, type metadata accessor for TypeConversionResult);
}

uint64_t (*TypeConversionResult.originStatementId.modify())()
{
  sub_23F878E8C();
  sub_23F6F09C4();
  return nullsub_1;
}

uint64_t TypeConversionResult.init(value:statementId:originStatementId:)()
{
  return sub_23F836178();
}

uint64_t sub_23F836178()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t);

  sub_23F877640();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v9 = sub_23F876A04(v7, v3, v1, v8);
  sub_23F8772A0(v9);
  v10 = sub_23F8770FC();
  v11 = v6 + *(int *)(v10 + 20);
  v12 = sub_23F6B58C8();
  sub_23F8792D4(v12);
  sub_23F878480(v11, v4, v13, v14, v15, v16, v17, v18, v20, v21);
  return v22(v6 + *(int *)(v10 + 24), v2, v0);
}

uint64_t sub_23F8361F8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v7;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x800000023FB34C90)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = sub_23FB2FB78();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F836354(char a1)
{
  if (!a1)
    return 0x65756C6176;
  if (a1 == 1)
    return 0x6E656D6574617473;
  return 0xD000000000000011;
}

uint64_t sub_23F8363B4()
{
  char *v0;

  return sub_23F836354(*v0);
}

uint64_t sub_23F8363BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F8361F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F8363E0()
{
  sub_23F840E10();
  return sub_23FB2FD10();
}

uint64_t sub_23F836408()
{
  sub_23F840E10();
  return sub_23FB2FD1C();
}

void TypeConversionResult.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, char a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;

  sub_23F6B5220();
  a23 = v26;
  a24 = v27;
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EAD108);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&a9 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F70D4B8();
  sub_23F840E10();
  sub_23F6B63A4();
  a14 = 0;
  sub_23F6B6634();
  sub_23F6B4EEC((uint64_t)&qword_256EA7170);
  sub_23F876660();
  if (!v24)
  {
    type metadata accessor for TypeConversionResult(0);
    a13 = 1;
    sub_23F6B58C8();
    sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
    sub_23F70D4F0();
    a12 = 2;
    sub_23F70D4F0();
  }
  sub_23F6B56E0((uint64_t)v30, *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8));
  sub_23F877A30();
  sub_23F6B5100();
}

void TypeConversionResult.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17[4];
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_23F6B5220();
  v3 = v2;
  v18 = v4;
  v5 = sub_23F6B58C8();
  v21 = *(_QWORD *)(v5 - 8);
  v22 = v5;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  v19 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v8);
  v20 = (char *)v17 - v9;
  v23 = sub_23F6B6634();
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5420(v11, v17[0]);
  v24 = sub_23F6916B8(&qword_256EAD118);
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23F7A00C8();
  type metadata accessor for TypeConversionResult(v13);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F876754(v3);
  sub_23F840E10();
  v25 = v0;
  sub_23F877128();
  if (v1)
  {
    sub_23F6B6E34();
  }
  else
  {
    sub_23F8784B4();
    sub_23F6B4EEC((uint64_t)&qword_256EA7188);
    sub_23F6B6CAC();
    sub_23F8784A0();
    sub_23F6B6360();
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    v16 = v15;
    sub_23F6B6CAC();
    sub_23F8775C4();
    sub_23F87721C();
    sub_23F87718C();
    sub_23F877AB0();
    sub_23F876818(v16, v18);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v26);
    sub_23F876820(v16);
  }
  sub_23F6B6CA0();
  sub_23F6B5100();
}

void sub_23F8367D4()
{
  TypeConversionResult.init(from:)();
}

#error "23F8367F0: call analysis failed (funcsize=5)"

uint64_t (*QueryDecorationResult.spans.modify())()
{
  return nullsub_1;
}

void QueryDecorationResult.requiredContext.setter(uint64_t a1)
{
  uint64_t v1;

  sub_23F6F09A8();
  *(_QWORD *)(v1 + 8) = a1;
  sub_23F694CC8();
}

uint64_t (*QueryDecorationResult.requiredContext.modify())()
{
  return nullsub_1;
}

void QueryDecorationResult.utteranceContext.setter()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F879938();
  *(_QWORD *)(v1 + 16) = v0;
  sub_23F694CC8();
}

uint64_t (*QueryDecorationResult.utteranceContext.modify())()
{
  return nullsub_1;
}

void QueryDecorationResult.toolRetrievalResponse.getter()
{
  sub_23F8121EC(type metadata accessor for QueryDecorationResult);
}

void QueryDecorationResult.toolRetrievalResponse.setter(uint64_t a1)
{
  sub_23F812224(a1, type metadata accessor for QueryDecorationResult);
}

uint64_t (*QueryDecorationResult.toolRetrievalResponse.modify())()
{
  type metadata accessor for QueryDecorationResult(0);
  sub_23F6F0A54();
  return nullsub_1;
}

uint64_t QueryDecorationResult.dynamicEnumerationEntities.getter()
{
  return sub_23F82EB30(type metadata accessor for QueryDecorationResult);
}

void QueryDecorationResult.init(spans:requiredContext:utteranceContext:toolRetrievalResponse:dynamicEnumerationEntities:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t DecorationResult;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_23F6D3A90();
  v5 = v4;
  v7 = v6;
  v8 = sub_23F877788();
  DecorationResult = type metadata accessor for QueryDecorationResult(v8);
  v10 = (uint64_t)v3 + *(int *)(DecorationResult + 28);
  v11 = sub_23FB2E354();
  sub_23F6B5A8C(v10, v12, v13, v11);
  *v3 = v2;
  v3[1] = v1;
  v3[2] = v0;
  sub_23F840E4C(v7, v10, &qword_256EA71F8);
  *(_QWORD *)((char *)v3 + *(int *)(DecorationResult + 32)) = v5;
  sub_23F6B69E0();
}

uint64_t sub_23F836940(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v7;

  v2 = a1 == 0x736E617073 && a2 == 0xE500000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6465726975716572 && a2 == 0xEF747865746E6F43;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x800000023FB31650 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000015 && a2 == 0x800000023FB31830 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023FB31850)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else
    {
      v7 = sub_23FB2FB78();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 4;
      else
        return 5;
    }
  }
}

uint64_t sub_23F836B5C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F836B8C + 4 * byte_23FB633DE[a1]))(0x736E617073, 0xE500000000000000);
}

uint64_t sub_23F836B8C()
{
  return 0x6465726975716572;
}

unint64_t sub_23F836BB0()
{
  return 0xD000000000000010;
}

unint64_t sub_23F836BCC()
{
  return 0xD000000000000015;
}

uint64_t sub_23F836C0C()
{
  unsigned __int8 *v0;

  return sub_23F836B5C(*v0);
}

uint64_t sub_23F836C14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F836940(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F836C38()
{
  sub_23F840E7C();
  return sub_23FB2FD10();
}

uint64_t sub_23F836C60()
{
  sub_23F840E7C();
  return sub_23FB2FD1C();
}

void QueryDecorationResult.encode(to:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F6D3DC4();
  sub_23F876CB0();
  sub_23F6916B8(&qword_256EAD120);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F70D4B8();
  sub_23F840E7C();
  sub_23F6B63A4();
  v7 = *v1;
  HIBYTE(v6) = 0;
  sub_23F6916B8(&qword_256EA46E0);
  sub_23F8799D0();
  sub_23F70D78C();
  if (!v0)
  {
    v7 = v1[1];
    HIBYTE(v6) = 1;
    sub_23F6916B8(&qword_256EACF78);
    sub_23F840798();
    sub_23F70D78C();
    v7 = v1[2];
    HIBYTE(v6) = 2;
    sub_23F70D78C();
    type metadata accessor for QueryDecorationResult(0);
    sub_23F8790D4();
    sub_23FB2E354();
    sub_23F6B4EEC((uint64_t)&unk_256EAD130);
    sub_23F8791DC();
    sub_23F77178C();
    sub_23F878878();
    sub_23F6916B8(&qword_256EAD138);
    sub_23F840EB8();
    sub_23F70D78C();
  }
  sub_23F6B56E0((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F878A78();
  sub_23F6D3710();
}

void QueryDecorationResult.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t DecorationResult;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;

  sub_23F6B5220();
  v15 = v14;
  v32 = v16;
  sub_23F6916B8(&qword_256EA71F8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B537C(v18, v31);
  sub_23F6916B8(&qword_256EAD150);
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8](v19);
  v20 = sub_23F6B5C2C();
  DecorationResult = type metadata accessor for QueryDecorationResult(v20);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6B5208();
  v23 = sub_23FB2E354();
  v24 = sub_23F8778B4();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v24, v25, v26, v23);
  sub_23F87735C(v15);
  sub_23F840E7C();
  sub_23F6B6DF4();
  if (v10)
  {
    v27 = _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v15);
    sub_23F876C50(v27, &qword_256EA71F8);
  }
  else
  {
    sub_23F6916B8(&qword_256EA46E0);
    sub_23F8409C0();
    sub_23F876DA8();
    sub_23F7839F0();
    *v12 = a10;
    sub_23F6916B8(&qword_256EACF78);
    sub_23F840814();
    sub_23F8788E0();
    sub_23F7839F0();
    v12[1] = a10;
    sub_23F878018();
    sub_23F876AE4();
    v12[2] = a10;
    sub_23F8790D4();
    sub_23F6B4EEC((uint64_t)&unk_256EAD158);
    sub_23F8791DC();
    sub_23F878A84();
    v28 = sub_23F72E2E0();
    sub_23F840E4C(v28, v29, v30);
    sub_23F6916B8(&qword_256EAD138);
    sub_23F840F34();
    sub_23F876DA8();
    sub_23F7839F0();
    sub_23F876DA0(v11, *(uint64_t (**)(uint64_t, _QWORD))(v13 + 8));
    *(_QWORD *)((char *)v12 + *(int *)(DecorationResult + 32)) = a10;
    sub_23F876818((uint64_t)v12, v32);
    sub_23F877354();
    sub_23F876820((uint64_t)v12);
  }
  sub_23F876B60();
  sub_23F6B5100();
}

void sub_23F837160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  QueryDecorationResult.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F837174()
{
  QueryDecorationResult.encode(to:)();
}

uint64_t QueryDecorationPrePlannerResult.statementId.getter()
{
  return sub_23F839AEC();
}

uint64_t QueryDecorationPrePlannerResult.statementId.setter(uint64_t a1)
{
  return sub_23F839B28(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

uint64_t (*QueryDecorationPrePlannerResult.statementId.modify())()
{
  return nullsub_1;
}

void QueryDecorationPrePlannerResult.dataSource.getter()
{
  sub_23F81CEB0(type metadata accessor for QueryDecorationPrePlannerResult);
}

void QueryDecorationPrePlannerResult.dataSource.setter(uint64_t a1, uint64_t a2)
{
  sub_23F81F314(a1, a2, type metadata accessor for QueryDecorationPrePlannerResult);
}

uint64_t (*QueryDecorationPrePlannerResult.dataSource.modify())()
{
  type metadata accessor for QueryDecorationPrePlannerResult(0);
  sub_23F6F099C();
  return nullsub_1;
}

uint64_t QueryDecorationPrePlannerResult.payload.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  v2 = sub_23F6F0920();
  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for QueryDecorationPrePlannerResult(v2) + 24));
  v4 = *v3;
  LOBYTE(v3) = *((_BYTE *)v3 + 8);
  *(_QWORD *)v0 = v4;
  *(_BYTE *)(v0 + 8) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

void QueryDecorationPrePlannerResult.payload.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = v1 + *(int *)(type metadata accessor for QueryDecorationPrePlannerResult(0) + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)v4 = v2;
  *(_BYTE *)(v4 + 8) = v3;
  sub_23F694C84();
}

uint64_t (*QueryDecorationPrePlannerResult.payload.modify())()
{
  type metadata accessor for QueryDecorationPrePlannerResult(0);
  sub_23F6F09C4();
  return nullsub_1;
}

void QueryDecorationPrePlannerResult.init(statementId:dataSource:payload:)()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t DecorationPrePlannerResult;
  uint64_t v5;

  sub_23F87972C();
  v1 = *v0;
  v2 = *((_BYTE *)v0 + 8);
  v3 = sub_23F6B58C8();
  sub_23F70D6B4(v3);
  DecorationPrePlannerResult = type metadata accessor for QueryDecorationPrePlannerResult(0);
  sub_23F878E64(DecorationPrePlannerResult);
  *(_QWORD *)v5 = v1;
  *(_BYTE *)(v5 + 8) = v2;
  sub_23F6B5F7C();
}

void static QueryDecorationPrePlannerResultPayload.== infix(_:_:)(uint64_t a1)
{
  __asm { BR              X11 }
}

void sub_23F837314(int a1@<W8>)
{
  _QWORD *v1;
  _QWORD *v2;

  if (a1)
  {
    sub_23F694C84();
  }
  else
  {
    v1 = (_QWORD *)sub_23F6B5994();
    sub_23F878150(v1, v2);
  }
}

uint64_t sub_23F8373CC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x72756F5361746164 && a2 == 0xEA00000000006563;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x64616F6C796170 && a2 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23FB2FB78();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F83753C(char a1)
{
  if (!a1)
    return 0x6E656D6574617473;
  if (a1 == 1)
    return 0x72756F5361746164;
  return 0x64616F6C796170;
}

uint64_t sub_23F8375A0()
{
  char *v0;

  return sub_23F83753C(*v0);
}

uint64_t sub_23F8375A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F8373CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F8375CC()
{
  sub_23F840FB0();
  return sub_23FB2FD10();
}

uint64_t sub_23F8375F4()
{
  sub_23F840FB0();
  return sub_23FB2FD1C();
}

void QueryDecorationPrePlannerResult.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE v5[32];

  sub_23F6D3DC4();
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EAD170);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v5[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F70D4B8();
  sub_23F840FB0();
  sub_23F6B63A4();
  v5[31] = 0;
  sub_23F6B58C8();
  sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
  sub_23F876660();
  if (!v0)
  {
    type metadata accessor for QueryDecorationPrePlannerResult(0);
    sub_23F87686C();
    sub_23F877A0C();
    sub_23F840FEC();
    sub_23F70D4F0();
  }
  sub_23F6B56E0((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F70D9D8();
  sub_23F6D3710();
}

void QueryDecorationPrePlannerResult.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t DecorationPrePlannerResult;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  sub_23F6B5220();
  v4 = v3;
  v16 = v5;
  sub_23F6B58C8();
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B537C(v7, v16);
  sub_23F6916B8(&qword_256EAD188);
  sub_23F70D9A8();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23F77DB24();
  DecorationPrePlannerResult = type metadata accessor for QueryDecorationPrePlannerResult(v9);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F693EB0();
  sub_23F6ADC98(v4, v4[3]);
  sub_23F840FB0();
  sub_23F8792B4();
  sub_23F877870();
  if (v0)
  {
    sub_23F6B6E34();
  }
  else
  {
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    sub_23F876F6C();
    sub_23F876AE4();
    sub_23F75E68C(v2, v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32));
    sub_23F879384();
    v12 = sub_23FB2FA40();
    v13 = (uint64_t *)(v2 + *(int *)(DecorationPrePlannerResult + 20));
    *v13 = v12;
    v13[1] = v14;
    sub_23F877210();
    sub_23F841028();
    sub_23F7839F0();
    sub_23F87830C();
    v15 = *(int *)(DecorationPrePlannerResult + 24);
    *(_QWORD *)v15 = v19;
    *(_BYTE *)(v15 + 8) = v20;
    sub_23F876818(0, v17);
    sub_23F6B6E34();
    sub_23F876820(0);
  }
  sub_23F8777E8();
  sub_23F6B5100();
}

uint64_t sub_23F83790C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v8;

  v2 = a1 == 0x73676E69727473 && a2 == 0xE700000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6C61566465707974 && a2 == 0xEB00000000736575;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x800000023FB34DF0 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000016 && a2 == 0x800000023FB34E10 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      v7 = a1 == 0x6576656972746572 && a2 == 0xEE00736C6F6F5464;
      if (v7 || (sub_23FB2FB78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else if (a1 == 0xD000000000000010 && a2 == 0x800000023FB34E30)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        v8 = sub_23FB2FB78();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 5;
        else
          return 6;
      }
    }
  }
}

uint64_t sub_23F837BA8()
{
  return 6;
}

uint64_t sub_23F837BB0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F837BE4 + 4 * byte_23FB633E9[a1]))(0x73676E69727473, 0xE700000000000000);
}

uint64_t sub_23F837BE4()
{
  return 0x6C61566465707974;
}

unint64_t sub_23F837C04()
{
  return 0xD000000000000011;
}

uint64_t sub_23F837C3C()
{
  return 0x6576656972746572;
}

unint64_t sub_23F837C60()
{
  return 0xD000000000000010;
}

void sub_23F837C7C()
{
  QueryDecorationPrePlannerResult.init(from:)();
}

void sub_23F837C90()
{
  QueryDecorationPrePlannerResult.encode(to:)();
}

uint64_t sub_23F837CAC()
{
  unsigned __int8 *v0;

  return sub_23F837BB0(*v0);
}

uint64_t sub_23F837CB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F83790C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F837CD8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F837BA8();
  *a1 = result;
  return result;
}

uint64_t sub_23F837CFC()
{
  sub_23F841064();
  return sub_23FB2FD10();
}

uint64_t sub_23F837D24()
{
  sub_23F841064();
  return sub_23FB2FD1C();
}

uint64_t sub_23F837D4C()
{
  sub_23F841194();
  return sub_23FB2FD10();
}

uint64_t sub_23F837D74()
{
  sub_23F841194();
  return sub_23FB2FD1C();
}

uint64_t sub_23F837D9C()
{
  sub_23F8411D0();
  return sub_23FB2FD10();
}

uint64_t sub_23F837DC4()
{
  sub_23F8411D0();
  return sub_23FB2FD1C();
}

uint64_t sub_23F837DEC()
{
  sub_23F841158();
  return sub_23FB2FD10();
}

uint64_t sub_23F837E14()
{
  sub_23F841158();
  return sub_23FB2FD1C();
}

uint64_t sub_23F837E3C()
{
  sub_23F8412C4();
  return sub_23FB2FD10();
}

uint64_t sub_23F837E64()
{
  sub_23F8412C4();
  return sub_23FB2FD1C();
}

uint64_t sub_23F837E8C()
{
  sub_23F8410A0();
  return sub_23FB2FD10();
}

uint64_t sub_23F837EB4()
{
  sub_23F8410A0();
  return sub_23FB2FD1C();
}

uint64_t sub_23F837EDC()
{
  sub_23F841288();
  return sub_23FB2FD10();
}

uint64_t sub_23F837F04()
{
  sub_23F841288();
  return sub_23FB2FD1C();
}

void QueryDecorationPrePlannerResultPayload.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_23F6B5220();
  v1 = v0;
  v3 = v2;
  sub_23F6916B8(&qword_256EAD198);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B57BC(v5, v16);
  sub_23F6916B8(&qword_256EAD1A0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B5404(v7, v17);
  sub_23F6916B8(&qword_256EAD1A8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5544(v9, v18);
  sub_23F6916B8(&qword_256EAD1B0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B658C(v11, v19);
  sub_23F6916B8(&qword_256EAD1B8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5268();
  sub_23F6916B8(&qword_256EAD1C0);
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F693EB0();
  sub_23F6916B8(&qword_256EAD1C8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B59E0();
  v15 = *(unsigned __int8 *)(v1 + 8);
  sub_23F6B6280(v3);
  sub_23F841064();
  sub_23F878788();
  sub_23F879040();
  __asm { BR              X9 }
}

void sub_23F8380B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  *(_BYTE *)(v2 - 72) = 0;
  sub_23F8412C4();
  v3 = *(_QWORD *)(v2 - 96);
  sub_23F6B54D4();
  sub_23F87839C();
  sub_23F6916B8(&qword_256EA1918);
  sub_23F6AEB70((uint64_t)&qword_256EA1920);
  sub_23F877754();
  sub_23F7B0D3C();
  sub_23F6B6178(v1, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  v4 = sub_23F877EA4();
  v5(v4, v3);
  sub_23F8778A8();
  sub_23F6B5100();
}

void QueryDecorationPrePlannerResultPayload.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_23F6B5220();
  sub_23F879054();
  sub_23F6916B8(&qword_256EAD220);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F6B57F4(v3, v26);
  sub_23F6916B8(&qword_256EAD228);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B5420(v5, v27);
  sub_23F6916B8(&qword_256EAD230);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B537C(v7, v28);
  sub_23F6916B8(&qword_256EAD238);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B57BC(v9, v29);
  sub_23F6916B8(&qword_256EAD240);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5598(v11, v30);
  sub_23F6916B8(&qword_256EAD248);
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B59E0();
  sub_23F6916B8(&qword_256EAD250);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B53AC();
  sub_23F87735C(v0);
  sub_23F841064();
  sub_23F8787AC();
  sub_23F8783C8();
  if (!v1)
  {
    sub_23FB2FA94();
    sub_23F878164();
    if (v14)
    {
      sub_23F8794D4();
      v31 = v15;
      v16 = sub_23F70D968();
      sub_23F6B4E44(v16, v17, v18, v19, v20, v21);
      sub_23F877084();
      sub_23F8795C4();
      if (v22)
        __asm { BR              X9 }
    }
    v23 = sub_23F6B6334();
    sub_23F6B5AD4();
    sub_23F8783F4();
    sub_23F6916B8(&qword_256EA1870);
    sub_23F878828();
    MEMORY[0] = &type metadata for QueryDecorationPrePlannerResultPayload;
    sub_23FB2FA04();
    sub_23F6B56B8();
    sub_23F759774(0, *MEMORY[0x24BEE26D0], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104));
    sub_23F87774C();
    sub_23F6B5770();
    v24 = sub_23F87770C();
    v25(v24);
  }
  sub_23F72E47C();
  sub_23F876FC4();
  sub_23F6B5100();
}

void sub_23F838924()
{
  QueryDecorationPrePlannerResultPayload.init(from:)();
}

void sub_23F838938()
{
  QueryDecorationPrePlannerResultPayload.encode(to:)();
}

void UndoOperation.hash(into:)()
{
  sub_23F70D9B8();
  sub_23F694CC8();
}

uint64_t sub_23F83896C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v7;

  v3 = a1 == 1868852853 && a2 == 0xE400000000000000;
  if (v3 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1868850546 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F838A34(char a1)
{
  if ((a1 & 1) != 0)
    return 1868850546;
  else
    return 1868852853;
}

uint64_t sub_23F838A50()
{
  char *v0;

  return sub_23F838A34(*v0);
}

uint64_t sub_23F838A58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F83896C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F838A7C()
{
  sub_23F8413F8();
  return sub_23FB2FD10();
}

uint64_t sub_23F838AA4()
{
  sub_23F8413F8();
  return sub_23FB2FD1C();
}

uint64_t sub_23F838ACC()
{
  sub_23F841434();
  return sub_23FB2FD10();
}

uint64_t sub_23F838AF4()
{
  sub_23F841434();
  return sub_23FB2FD1C();
}

uint64_t sub_23F838B1C()
{
  sub_23F841470();
  return sub_23FB2FD10();
}

uint64_t sub_23F838B44()
{
  sub_23F841470();
  return sub_23FB2FD1C();
}

void UndoOperation.encode(to:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_23F6B5220();
  v2 = sub_23F6916B8(&qword_256EAD268);
  v12 = *(_QWORD *)(v2 - 8);
  v13 = v2;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B53AC();
  sub_23F6916B8(&qword_256EAD270);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B5268();
  v14 = *(_QWORD *)(sub_23F6916B8(&qword_256EAD278) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B5208();
  v6 = *v0;
  v7 = (_QWORD *)sub_23F8783DC();
  sub_23F6ADC98(v7, v8);
  sub_23F8413F8();
  sub_23F70DD2C();
  if ((v6 & 1) != 0)
  {
    sub_23F8793A4();
    sub_23F6B54D4();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v1, v13);
  }
  else
  {
    sub_23F841470();
    sub_23F878B0C();
    sub_23F6B54D4();
    v9 = sub_23F6B640C();
    v11(v9, v10);
  }
  sub_23F7B0A0C(v14);
  sub_23F6B5100();
}

void UndoOperation.hashValue.getter()
{
  sub_23F6B53C4();
  sub_23F6B5A48();
  sub_23F6B5608();
  sub_23F6B5398();
}

void UndoOperation.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _BYTE *v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;

  sub_23F6B5220();
  v6 = v5;
  v38 = v7;
  v8 = sub_23F6916B8(&qword_256EAD298);
  sub_23F879048(v8);
  v40 = v9;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5BD8(v11, v35);
  sub_23F6916B8(&qword_256EAD2A0);
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5298();
  v13 = sub_23F6916B8(&qword_256EAD2A8);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B52B0();
  sub_23F876754(v6);
  sub_23F8413F8();
  sub_23F6B5DA0();
  if (v1)
    goto LABEL_9;
  v36 = v0;
  v37 = v6;
  sub_23FB2FA94();
  sub_23F878164();
  v15 = v13;
  if (!v16)
  {
LABEL_8:
    sub_23F6B6334();
    sub_23F6B5AD4();
    v30 = v29;
    sub_23F6916B8(&qword_256EA1870);
    *v30 = &type metadata for UndoOperation;
    sub_23FB2FA04();
    v31 = sub_23F6B56B8();
    sub_23F6B6650(v31, *MEMORY[0x24BEE26D0]);
    swift_willThrow();
    sub_23F6B5770();
    v32 = sub_23F7D243C();
    v33(v32, v15);
    v6 = v37;
LABEL_9:
    v34 = (uint64_t)v6;
    goto LABEL_10;
  }
  v17 = *(_BYTE *)(v4 + 32);
  v18 = sub_23F70D968();
  sub_23F6B4E44(v18, v19, v20, v21, v22, v23);
  v25 = v24;
  v27 = v26;
  sub_23F6B6E44();
  if (v25 != v27 >> 1)
  {
    v15 = v13;
    goto LABEL_8;
  }
  if ((v17 & 1) != 0)
  {
    sub_23F8793A4();
    sub_23FB2F9F8();
    v28 = v38;
    sub_23F878A08(v39, *(uint64_t (**)(uint64_t, _QWORD))(v40 + 8));
    sub_23F6B5770();
    sub_23F6B530C(v2, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  }
  else
  {
    sub_23F841470();
    sub_23F877E28();
    sub_23FB2F9F8();
    v28 = v38;
    sub_23F876DA0(v36, *(uint64_t (**)(uint64_t, _QWORD))(v3 + 8));
    sub_23F6B5770();
    sub_23F70D728(v2, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  }
  *v28 = v17;
  v34 = (uint64_t)v37;
LABEL_10:
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v34);
  sub_23F6B6CA0();
  sub_23F6B5100();
}

void sub_23F838FC0()
{
  UndoOperation.init(from:)();
}

void sub_23F838FD4()
{
  UndoOperation.encode(to:)();
}

uint64_t (*UndoRedoRequest.bundleIdentifier.modify())()
{
  return nullsub_1;
}

void UndoRedoRequest.token.getter()
{
  sub_23F81D874(type metadata accessor for UndoRedoRequest);
}

void UndoRedoRequest.token.setter(uint64_t a1)
{
  sub_23F81D8AC(a1, type metadata accessor for UndoRedoRequest);
}

uint64_t (*UndoRedoRequest.token.modify())()
{
  sub_23F8786D0();
  sub_23F6F099C();
  return nullsub_1;
}

void UndoRedoRequest.operation.getter()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F6F0920();
  *v0 = *(_BYTE *)(v1 + *(int *)(type metadata accessor for UndoRedoRequest(v2) + 24));
  sub_23F694CC8();
}

void UndoRedoRequest.operation.setter(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  *(_BYTE *)(v1 + *(int *)(type metadata accessor for UndoRedoRequest(0) + 24)) = v2;
  sub_23F694CC8();
}

uint64_t (*UndoRedoRequest.operation.modify())()
{
  type metadata accessor for UndoRedoRequest(0);
  sub_23F6F09C4();
  return nullsub_1;
}

uint64_t UndoRedoRequest.statementId.getter()
{
  return sub_23F827D50();
}

uint64_t UndoRedoRequest.statementId.setter(uint64_t a1)
{
  return sub_23F827D98(a1, type metadata accessor for UndoRedoRequest);
}

uint64_t (*UndoRedoRequest.statementId.modify())()
{
  sub_23F8786D0();
  sub_23F6F0A54();
  return nullsub_1;
}

void UndoRedoRequest.statementIdForUndo.getter(uint64_t a1@<X8>)
{
  sub_23F814510((uint64_t)&qword_256EA49D8, (void (*)(uint64_t, uint64_t, uint64_t))sub_23F7DCCDC, a1);
}

void UndoRedoRequest.statementIdForUndo.setter(uint64_t a1)
{
  sub_23F81456C(a1, type metadata accessor for UndoRedoRequest, (uint64_t)&qword_256EA49D8, (void (*)(uint64_t))sub_23F840E4C);
}

uint64_t (*UndoRedoRequest.statementIdForUndo.modify())()
{
  sub_23F8786D0();
  sub_23F6F0B5C();
  return nullsub_1;
}

void UndoRedoRequest.init(bundleIdentifier:token:operation:statementId:statementIdForUndo:)()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  char *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_23F8770E0();
  v21 = v1;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = *v12;
  type metadata accessor for UndoRedoRequest(0);
  sub_23F87843C();
  v15 = (uint64_t)v11 + v14;
  v16 = sub_23F72E034();
  sub_23F6B5A8C(v15, v17, v18, v16);
  v19 = (uint64_t)v11 + v0[8];
  v20 = sub_23F6B58C8();
  sub_23F878A38(v19);
  *v11 = v9;
  v11[1] = v7;
  sub_23F840E4C(v5, v15, &qword_256EA2798);
  *((_BYTE *)v11 + v0[6]) = v13;
  sub_23F77DB9C((uint64_t)v11 + v0[7], v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32));
  sub_23F840E4C(v21, v19, &qword_256EA49D8);
  sub_23F877098();
}

uint64_t sub_23F839204(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  BOOL v6;
  BOOL v7;
  char v8;

  if (a1 == 0xD000000000000010 && a2 == 0x800000023FB34E50 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x6E656B6F74 && a2 == 0xE500000000000000;
    if (v5 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v6 = a1 == 0x6F6974617265706FLL && a2 == 0xE90000000000006ELL;
      if (v6 || (sub_23FB2FB78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v7 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
        if (v7 || (sub_23FB2FB78() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000012 && a2 == 0x800000023FB34E70)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v8 = sub_23FB2FB78();
          swift_bridgeObjectRelease();
          if ((v8 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_23F839428(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23F839460 + 4 * byte_23FB633FB[a1]))(0xD000000000000010, 0x800000023FB34E50);
}

uint64_t sub_23F839460()
{
  return 0x6E656B6F74;
}

uint64_t sub_23F839474()
{
  return 0x6F6974617265706FLL;
}

uint64_t sub_23F839490()
{
  return 0x6E656D6574617473;
}

uint64_t sub_23F8394B0(uint64_t a1)
{
  return a1 + 2;
}

uint64_t sub_23F8394C8()
{
  unsigned __int8 *v0;

  return sub_23F839428(*v0);
}

uint64_t sub_23F8394D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F839204(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F8394F4()
{
  sub_23F8414AC();
  return sub_23FB2FD10();
}

uint64_t sub_23F83951C()
{
  sub_23F8414AC();
  return sub_23FB2FD1C();
}

void UndoRedoRequest.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10, char a11, char a12, char a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char v35;

  sub_23F6B5220();
  a25 = v30;
  a26 = v31;
  sub_23F876CB0();
  sub_23F6916B8(&qword_256EAD2B0);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)&a9 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F70D4B8();
  sub_23F8414AC();
  sub_23F6B63A4();
  a16 = 0;
  sub_23F70D90C();
  if (!v26)
  {
    type metadata accessor for UndoRedoRequest(0);
    sub_23F87843C();
    a15 = 1;
    sub_23F72E034();
    sub_23F6B4EEC((uint64_t)&qword_256EA6620);
    sub_23F77178C();
    a14 = *(_BYTE *)(v27 + *(int *)(v28 + 24));
    sub_23F878AE4();
    sub_23F76EEF0();
    sub_23F70D78C();
    sub_23F878898();
    a12 = v35;
    sub_23F6B58C8();
    sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
    sub_23F70D78C();
    a11 = 4;
    sub_23F77178C();
  }
  sub_23F6B56E0((uint64_t)v34, *(uint64_t (**)(uint64_t, uint64_t))(v29 + 8));
  sub_23F876B60();
  sub_23F6B5100();
}

void UndoRedoRequest.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, char a12)
{
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;

  sub_23F6B5220();
  sub_23F879054();
  v37 = v15;
  sub_23F6916B8(&qword_256EA49D8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v16);
  v38 = (uint64_t)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23F6B58C8();
  v41 = *(_QWORD *)(v18 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F6B5810(v20, v37);
  sub_23F6916B8(&qword_256EA2798);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B53AC();
  v40 = sub_23F6916B8(&qword_256EAD2C0);
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v22);
  v23 = sub_23F6B5C2C();
  v24 = type metadata accessor for UndoRedoRequest(v23);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F6B52B0();
  v27 = (uint64_t)v13 + *(int *)(v26 + 20);
  sub_23F72E034();
  v45 = v27;
  sub_23F878A28(v27);
  v46 = v24;
  v28 = *(int *)(v24 + 32);
  v48 = v13;
  v42 = v18;
  v43 = (uint64_t)v13 + v28;
  sub_23F877B28((uint64_t)v13 + v28);
  v44 = v12;
  sub_23F876754(v12);
  sub_23F8414AC();
  v29 = v47;
  sub_23FB2FCB0();
  if (v29)
  {
    v31 = v43;
    v32 = v45;
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v44);
    sub_23F7F6110(v32, &qword_256EA2798);
    sub_23F7F6110(v31, &qword_256EA49D8);
  }
  else
  {
    sub_23F8791E8();
    v30 = sub_23FB2FA40();
    v33 = v48;
    *v48 = v30;
    v33[1] = v34;
    sub_23F6B6360();
    sub_23F6B4EEC((uint64_t)&qword_256EA6700);
    sub_23F877F7C();
    v35 = v46;
    sub_23F840E4C(v14, v45, &qword_256EA2798);
    sub_23F878AE4();
    sub_23F76EF2C();
    sub_23F877E28();
    sub_23F876AE4();
    v36 = (uint64_t)v48;
    *((_BYTE *)v48 + *(int *)(v35 + 24)) = a12;
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    sub_23F876AE4();
    sub_23F6B5EF0(v36 + *(int *)(v35 + 28), v39, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 32));
    sub_23F877F7C();
    sub_23F877B60();
    sub_23F840E4C(v38, v43, &qword_256EA49D8);
    sub_23F878194(v36, v37);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v44);
    sub_23F877068(v36);
  }
  sub_23F8777E8();
  sub_23F6B5100();
}

void sub_23F839AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  _BYTE vars8[6];

  UndoRedoRequest.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, vars8[4], vars8[5]);
}

#error "23F839ACC: call analysis failed (funcsize=5)"

uint64_t ClientUndoRedoRequest.token.getter()
{
  return sub_23F839AEC();
}

uint64_t sub_23F839AEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F8772B8();
  v0 = sub_23F6B5994();
  return sub_23F6B64B0(v0, v1, v2, v3);
}

uint64_t ClientUndoRedoRequest.token.setter(uint64_t a1)
{
  return sub_23F839B28(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t sub_23F839B28(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_23F6F0918(a1, a2);
  v2 = sub_23F6B6190();
  return sub_23F6B64B0(v2, v3, v4, v5);
}

uint64_t (*ClientUndoRedoRequest.token.modify())()
{
  return nullsub_1;
}

void ClientUndoRedoRequest.operation.getter()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F6F0920();
  *v0 = *(_BYTE *)(v1 + *(int *)(type metadata accessor for ClientUndoRedoRequest(v2) + 20));
  sub_23F694CC8();
}

void ClientUndoRedoRequest.operation.setter(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  *(_BYTE *)(v1 + *(int *)(type metadata accessor for ClientUndoRedoRequest(0) + 20)) = v2;
  sub_23F694CC8();
}

uint64_t (*ClientUndoRedoRequest.operation.modify())()
{
  type metadata accessor for ClientUndoRedoRequest(0);
  sub_23F6F099C();
  return nullsub_1;
}

uint64_t ClientUndoRedoRequest.statementId.getter()
{
  return sub_23F825F6C(type metadata accessor for ClientUndoRedoRequest);
}

uint64_t ClientUndoRedoRequest.statementId.setter(uint64_t a1)
{
  return sub_23F825FB8(a1, type metadata accessor for ClientUndoRedoRequest);
}

uint64_t (*ClientUndoRedoRequest.statementId.modify())()
{
  sub_23F8786F0();
  sub_23F6F09C4();
  return nullsub_1;
}

void ClientUndoRedoRequest.statementIdForUndo.getter()
{
  sub_23F8121EC(type metadata accessor for ClientUndoRedoRequest);
}

void ClientUndoRedoRequest.statementIdForUndo.setter(uint64_t a1)
{
  sub_23F812224(a1, type metadata accessor for ClientUndoRedoRequest);
}

uint64_t (*ClientUndoRedoRequest.statementIdForUndo.modify())()
{
  sub_23F8786F0();
  sub_23F6F0A54();
  return nullsub_1;
}

void ClientUndoRedoRequest.init(token:operation:statementId:statementIdForUndo:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F6D3A90();
  sub_23F8796D8();
  sub_23F87972C();
  v4 = *v3;
  v5 = (int *)sub_23F8786F0();
  v6 = v2 + v5[7];
  v7 = sub_23F6B58C8();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v6, 1, 1, v7);
  v8 = sub_23F72E034();
  sub_23F70D6B4(v8);
  *(_BYTE *)(v2 + v5[5]) = v4;
  sub_23F6B5EF0(v2 + v5[6], v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32));
  sub_23F878540(v0, v9, &qword_256EA49D8);
  sub_23F6B69E0();
}

uint64_t sub_23F839CF4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v8;

  v2 = a1 == 0x6E656B6F74 && a2 == 0xE500000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6F6974617265706FLL && a2 == 0xE90000000000006ELL;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
      if (v7 || (sub_23FB2FB78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000012 && a2 == 0x800000023FB34E70)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = sub_23FB2FB78();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_23F839EBC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F839EEC + 4 * byte_23FB63400[a1]))(0x6E656B6F74, 0xE500000000000000);
}

uint64_t sub_23F839EEC()
{
  return 0x6F6974617265706FLL;
}

uint64_t sub_23F839F08()
{
  return 0x6E656D6574617473;
}

unint64_t sub_23F839F28()
{
  return 0xD000000000000012;
}

uint64_t sub_23F839F44()
{
  unsigned __int8 *v0;

  return sub_23F839EBC(*v0);
}

uint64_t sub_23F839F4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F839CF4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F839F70()
{
  sub_23F8414E8();
  return sub_23FB2FD10();
}

uint64_t sub_23F839F98()
{
  sub_23F8414E8();
  return sub_23FB2FD1C();
}

void ClientUndoRedoRequest.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10, char a11, char a12, char a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;

  sub_23F6B5220();
  a25 = v29;
  a26 = v30;
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EAD2C8);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)&a9 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F70D4B8();
  sub_23F8414E8();
  sub_23F6B63A4();
  a16 = 0;
  sub_23F72E034();
  sub_23F6B4EEC((uint64_t)&qword_256EA6620);
  sub_23F876660();
  if (!v26)
  {
    a15 = *(_BYTE *)(v27 + *(int *)(type metadata accessor for ClientUndoRedoRequest(0) + 20));
    sub_23F878428();
    sub_23F76EEF0();
    sub_23F70D4F0();
    a13 = 2;
    sub_23F6B58C8();
    sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
    sub_23F70D4F0();
    a12 = 3;
    sub_23F876834();
  }
  sub_23F6B56E0((uint64_t)v33, *(uint64_t (**)(uint64_t, uint64_t))(v28 + 8));
  sub_23F877A30();
  sub_23F6B5100();
}

void ClientUndoRedoRequest.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  sub_23F6B5220();
  v48 = v12;
  v38 = v16;
  sub_23F6916B8(&qword_256EA49D8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v17);
  v39 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B58C8();
  sub_23F7F68B0();
  v41 = v19;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v20);
  v40 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_23F72E034();
  v23 = *(_QWORD *)(v22 - 8);
  v42 = v22;
  v43 = v23;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6B5420(v25, v37);
  v46 = sub_23F6916B8(&qword_256EAD2D8);
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v26);
  v27 = sub_23F78F260();
  v28 = type metadata accessor for ClientUndoRedoRequest(v27);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F6B52B0();
  v47 = v13 + *(int *)(v30 + 28);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v47, 1, 1, v14);
  sub_23F877B38();
  sub_23F8414E8();
  v45 = v15;
  sub_23F878F64();
  sub_23F878478();
  if (v12)
  {
    sub_23F877804();
    sub_23F7F6110(v47, &qword_256EA49D8);
  }
  else
  {
    v48 = v28;
    v31 = v43;
    v32 = v41;
    sub_23F6B4EEC((uint64_t)&qword_256EA6700);
    sub_23F876F6C();
    sub_23F876AE4();
    sub_23F78F5D0(v13, v44, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 32));
    sub_23F878428();
    sub_23F76EF2C();
    sub_23F876AE4();
    *(_BYTE *)(v13 + *(int *)(v48 + 20)) = a12;
    sub_23F878AE4();
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    sub_23F8791B0();
    v33 = (uint64_t)v40;
    v44 = v34;
    sub_23F876AE4();
    sub_23F75E710(v13 + *(int *)(v48 + 24), v33, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 32));
    sub_23F877F7C();
    v35 = sub_23F877B54();
    sub_23F879984(v35, v36, &qword_256EA49D8);
    sub_23F876818(v13, v38);
    sub_23F877804();
    sub_23F876820(v13);
  }
  sub_23F8777E8();
  sub_23F6B5100();
}

void sub_23F83A44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  _BYTE vars8[7];

  ClientUndoRedoRequest.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, *(__int16 *)&vars8[4], vars8[6]);
}

#error "23F83A468: call analysis failed (funcsize=5)"

uint64_t sub_23F83A480()
{
  sub_23F841524();
  return sub_23FB2FD10();
}

uint64_t sub_23F83A4A8()
{
  sub_23F841524();
  return sub_23FB2FD1C();
}

void ContinuePlanning.encode(to:)()
{
  sub_23F83A4FC();
}

void sub_23F83A4FC()
{
  void (*v0)(void);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;

  sub_23F6B5220();
  sub_23F8796D8();
  v4 = (_QWORD *)v3;
  sub_23F6B63B8(v3, v5);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B53AC();
  sub_23F6ADC98(v4, v4[3]);
  v0();
  sub_23F876928();
  sub_23FB2FCC8();
  sub_23F6B563C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F876FC4();
  sub_23F6B5100();
}

void ContinuePlanning.init(from:)(uint64_t a1)
{
  sub_23F878C68(a1);
  sub_23F878AAC();
}

void sub_23F83A59C()
{
  ContinuePlanning.encode(to:)();
}

uint64_t type metadata accessor for QueryDecorationPrePlannerResult(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAF0F0);
}

uint64_t type metadata accessor for QueryDecorationResult(uint64_t a1)
{
  return sub_23F6D89A0(a1, (uint64_t *)&unk_256EAF048);
}

uint64_t type metadata accessor for TypeConversionResult(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAEFB0);
}

uint64_t type metadata accessor for TypeConversionRequest(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAEF18);
}

uint64_t type metadata accessor for ClientUndoRedoRequest(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAF228);
}

uint64_t type metadata accessor for UndoRedoRequest(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAF188);
}

uint64_t type metadata accessor for ToolResolution(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAEE80);
}

uint64_t type metadata accessor for ExternalAgentOutcome(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAEDE8);
}

uint64_t type metadata accessor for ExternalAgentRequest(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EADA10);
}

uint64_t type metadata accessor for ExternalAgentSpeechQuery(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAED50);
}

uint64_t type metadata accessor for ExternalAgentTextQuery(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAECB8);
}

uint64_t type metadata accessor for StatementResult(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAE620);
}

uint64_t type metadata accessor for ActionCancellation(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EADDC8);
}

uint64_t type metadata accessor for QueryStepResults(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAE758);
}

uint64_t type metadata accessor for ActionStepResult(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAE588);
}

uint64_t type metadata accessor for VariableStep(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAE158);
}

uint64_t type metadata accessor for QueryStep(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAE030);
}

uint64_t type metadata accessor for ClientAction(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EADE58);
}

uint64_t type metadata accessor for Action(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EADC88);
}

uint64_t type metadata accessor for RequestContent.SystemPromptResolution(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAD820);
}

uint64_t type metadata accessor for RequestContent.TextContent(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAD790);
}

uint64_t type metadata accessor for RequestContent(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAD700);
}

uint64_t type metadata accessor for Request(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAD648);
}

uint64_t type metadata accessor for TextQuery(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EADB48);
}

uint64_t type metadata accessor for Session.Event.Payload(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAD520);
}

void sub_23F83A7A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  v4 = sub_23F6F59F8(a1, a2, a3);
  sub_23F7B0990(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32));
  sub_23F694CC8();
}

void sub_23F83A7D4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = sub_23F6F0918(a1, a2);
  sub_23F759768(*(_QWORD *)(v2 - 8));
  sub_23F694CC8();
}

void sub_23F83A800(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  v4 = sub_23F6F59F8(a1, a2, a3);
  sub_23F7B0990(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16));
  sub_23F694CC8();
}

uint64_t type metadata accessor for SpeechRequestCandidate(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAE888);
}

uint64_t sub_23F83A844(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  BOOL v8;

  if ((a2 & 0x2000000000000000) != 0)
    v7 = HIBYTE(a2) & 0xF;
  else
    v7 = a1 & 0xFFFFFFFFFFFFLL;
  v8 = a1 == a5 && a2 == a6;
  if (v8 && !(a3 >> 16) && v7 == a4 >> 16)
    return 1;
  else
    return sub_23FB2FB3C() & 1;
}

uint64_t sub_23F83A8A8()
{
  sub_23F6916B8(&qword_256EA49D8);
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_23F83A8F0()
{
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_23F83A920()
{
  sub_23F6916B8(&qword_256EAB798);
  sub_23F6B63F4();
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

void sub_23F83A96C()
{
  sub_23F83A990((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23F753DB0);
}

void sub_23F83A978()
{
  sub_23F83A990((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23F7540F4);
}

void sub_23F83A984()
{
  sub_23F83A990((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23F75448C);
}

void sub_23F83A990(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = sub_23F8796FC();
  *v1 = v3;
  if (!(_DWORD)v4)
    *v1 = a1(v4, *(_QWORD *)(v3 + 16) + 1, 1, v3);
  sub_23F694C84();
}

uint64_t sub_23F83A9D8(uint64_t a1)
{
  return sub_23F83A9FC(a1, (uint64_t (*)(BOOL))sub_23F753DB0);
}

uint64_t sub_23F83A9E4(uint64_t a1)
{
  return sub_23F83A9FC(a1, (uint64_t (*)(BOOL))sub_23F7540F4);
}

uint64_t sub_23F83A9F0(uint64_t a1)
{
  return sub_23F83A9FC(a1, (uint64_t (*)(BOOL))sub_23F75448C);
}

uint64_t sub_23F83A9FC(uint64_t result, uint64_t (*a2)(BOOL))
{
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    result = a2(v3 > 1);
    *(_QWORD *)v2 = result;
  }
  return result;
}

uint64_t sub_23F83AA3C()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  sub_23F879408();
  if (v3 < 0)
  {
    sub_23F7561B8();
    sub_23F7563E4();
  }
  else
  {
    if (v2 + 16 * v1 <= v0 || v0 + 16 * v1 <= v2)
      return sub_23F87704C();
    sub_23F7561B8();
    sub_23F7563D4();
  }
  result = sub_23F7561F4();
  __break(1u);
  return result;
}

uint64_t sub_23F83AAD0(uint64_t a1, uint64_t a2)
{
  return sub_23F83B524(a1, a2);
}

uint64_t sub_23F83AADC()
{
  return sub_23F83AAF4();
}

uint64_t sub_23F83AAE8()
{
  return sub_23F83AAF4();
}

uint64_t sub_23F83AAF4()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_23F879408();
  if (v0 < 0)
  {
    sub_23F7561B8();
    sub_23F7563E4();
  }
  else
  {
    sub_23F879240();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_23F87704C();
    sub_23F7561B8();
    sub_23F7563D4();
  }
  result = sub_23F7561F4();
  __break(1u);
  return result;
}

uint64_t sub_23F83AB74(uint64_t a1, uint64_t a2)
{
  return sub_23F83AC54(a1, a2);
}

uint64_t sub_23F83AB88(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;

  if (a2 < 0)
  {
    sub_23F7561B8();
    sub_23F7563E4();
  }
  else
  {
    sub_23F8780EC();
    if (v4 + 40 * v3 <= v2 || v2 + 40 * v3 <= v4)
    {
      sub_23F6916B8(&qword_256EB04B8);
      sub_23F876A70();
      return sub_23F8767D8();
    }
    sub_23F7561B8();
    sub_23F7563D4();
  }
  result = sub_23F7561F4();
  __break(1u);
  return result;
}

uint64_t sub_23F83AC28(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AC34(uint64_t a1, uint64_t a2)
{
  return sub_23F83B524(a1, a2);
}

uint64_t sub_23F83AC40(uint64_t a1, uint64_t a2)
{
  return sub_23F83AC54(a1, a2);
}

uint64_t sub_23F83AC54(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  BOOL v5;
  BOOL v6;
  uint64_t result;

  if (a2 < 0)
  {
    sub_23F7561B8();
    sub_23F7563E4();
  }
  else
  {
    sub_23F8785A8();
    if (!v6 && v5)
    {
      v5 = v4 >= v2;
      v6 = v4 == v2;
    }
    else
    {
      v5 = 0;
      v6 = 0;
    }
    if (v6 || !v5)
    {
      sub_23F87645C(0, v3);
      sub_23F876A70();
      return sub_23F8767D8();
    }
    sub_23F7561B8();
    sub_23F7563D4();
  }
  result = sub_23F7561F4();
  __break(1u);
  return result;
}

uint64_t sub_23F83ACE8(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83ACF4(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  unint64_t v7;
  char v8;
  char v9;
  BOOL v10;
  uint64_t result;

  if (a2 < 0)
  {
    sub_23F7561B8();
    sub_23F7563E4();
  }
  else
  {
    sub_23F8780EC();
    sub_23F876A04(v3, v4, v5, v6);
    sub_23F878510();
    if (!v9 & v8)
      v10 = v7 > v2;
    else
      v10 = 0;
    if (!v10)
    {
      sub_23F876A70();
      return sub_23F8767D8();
    }
    sub_23F7561B8();
    sub_23F7563D4();
  }
  result = sub_23F7561F4();
  __break(1u);
  return result;
}

uint64_t sub_23F83AD80(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AD8C(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AD98(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83ADA4(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83ADB0(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83ADBC(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83ADC8(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83ADD4(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83ADE0(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83ADEC(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83ADF8(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AE04(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AE10(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AE1C(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AE28(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AE34(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AE40(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AE4C(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AE58(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AE64(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AE70(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AE7C(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AE88(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AE94(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AEA0(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AEAC(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AEB8(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AEC4(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AED0(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AEDC(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AEE8(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AEF4(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AF00(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AF0C(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AF18(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AF24(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AF30(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AF3C(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AF48(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AF54(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AF60(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83AF6C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_23F7561B8();
    sub_23F7563E4();
  }
  else
  {
    sub_23F8780FC();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_23F6916B8(&qword_256EB04B0);
      sub_23F876A70();
      return sub_23F8767D8();
    }
    sub_23F7561B8();
    sub_23F7563D4();
  }
  result = sub_23F7561F4();
  __break(1u);
  return result;
}

uint64_t sub_23F83AFFC(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B008(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B014(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B020(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B02C(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B038(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B044(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B050(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B05C(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B068(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B074(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B080(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B08C(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B098(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B0A4(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B0B0(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B0BC(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B0C8(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B0D4(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B0E0()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_23F879408();
  if (v0 < 0)
  {
    sub_23F7561B8();
    sub_23F7563E4();
  }
  else
  {
    sub_23F879240();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_23F87704C();
    sub_23F7561B8();
    sub_23F7563D4();
  }
  result = sub_23F7561F4();
  __break(1u);
  return result;
}

uint64_t sub_23F83B168(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_23F7561B8();
    sub_23F7563E4();
  }
  else
  {
    sub_23F8785A8();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_23F6916B8(&qword_256EA98F8);
      sub_23F876A70();
      return sub_23F8767D8();
    }
    sub_23F7561B8();
    sub_23F7563D4();
  }
  result = sub_23F7561F4();
  __break(1u);
  return result;
}

uint64_t sub_23F83B1F8(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B204(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B210(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_23F7561B8();
    sub_23F7563E4();
  }
  else
  {
    sub_23F8780FC();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_23F6916B8(&qword_256EB0488);
      sub_23F876A70();
      return sub_23F8767D8();
    }
    sub_23F7561B8();
    sub_23F7563D4();
  }
  result = sub_23F7561F4();
  __break(1u);
  return result;
}

uint64_t sub_23F83B2A0(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B2AC(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B2B8(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B2C4(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B2D0(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B2DC(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B2E8(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B2F4(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B300(uint64_t a1, uint64_t a2)
{
  return sub_23F83B524(a1, a2);
}

void *sub_23F83B30C(char *a1, uint64_t a2, char *a3)
{
  void *result;

  if (a2 < 0)
  {
    sub_23F7561B8();
    sub_23F7563E4();
  }
  else
  {
    if (&a3[4 * a2] <= a1 || &a1[4 * a2] <= a3)
      return sub_23F87860C(a3, a1, 4 * a2);
    sub_23F7561B8();
    sub_23F7563D4();
  }
  result = (void *)sub_23F7561F4();
  __break(1u);
  return result;
}

uint64_t sub_23F83B3A0(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B3AC(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B3B8(uint64_t a1, uint64_t a2)
{
  return sub_23F83B524(a1, a2);
}

void *sub_23F83B3C4(char *a1, uint64_t a2, char *a3)
{
  void *result;

  if (a2 < 0)
  {
    sub_23F7561B8();
    sub_23F7563E4();
  }
  else
  {
    if (&a3[2 * a2] <= a1 || &a1[2 * a2] <= a3)
      return sub_23F87860C(a3, a1, 2 * a2);
    sub_23F7561B8();
    sub_23F7563D4();
  }
  result = (void *)sub_23F7561F4();
  __break(1u);
  return result;
}

uint64_t sub_23F83B458()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  sub_23F879408();
  if (v3 < 0)
  {
    sub_23F7561B8();
    sub_23F7563E4();
  }
  else
  {
    if (v2 + 56 * v1 <= v0 || v0 + 56 * v1 <= v2)
      return sub_23F87704C();
    sub_23F7561B8();
    sub_23F7563D4();
  }
  result = sub_23F7561F4();
  __break(1u);
  return result;
}

uint64_t sub_23F83B4F4(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B500(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t sub_23F83B50C(uint64_t a1, uint64_t a2)
{
  return sub_23F83B524(a1, a2);
}

uint64_t sub_23F83B518(uint64_t a1, uint64_t a2)
{
  return sub_23F83B524(a1, a2);
}

uint64_t sub_23F83B524(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  char v5;
  char v6;
  BOOL v7;
  uint64_t result;

  if (a2 < 0)
  {
    sub_23F7561B8();
    sub_23F7563E4();
  }
  else
  {
    sub_23F8780EC();
    sub_23F6916B8(v3);
    sub_23F878510();
    if (!v6 & v5)
      v7 = v4 > v2;
    else
      v7 = 0;
    if (!v7)
    {
      sub_23F876A70();
      return sub_23F8767D8();
    }
    sub_23F7561B8();
    sub_23F7563D4();
  }
  result = sub_23F7561F4();
  __break(1u);
  return result;
}

uint64_t sub_23F83B5B4(uint64_t a1, uint64_t a2)
{
  return sub_23F83ACF4(a1, a2);
}

uint64_t type metadata accessor for Candidate(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAE7F0);
}

uint64_t type metadata accessor for VariableSetter(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAE3C8);
}

uint64_t type metadata accessor for ParameterQuery(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAE0C0);
}

uint64_t type metadata accessor for StatementResultPayload(uint64_t a1)
{
  return sub_23F6D89A0(a1, (uint64_t *)&unk_256EAE6C0);
}

uint64_t type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAD8D8);
}

uint64_t type metadata accessor for RequestContent.SystemPromptResolution.UserAction(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAD980);
}

uint64_t type metadata accessor for Session.Transcript(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAD3B0);
}

uint64_t type metadata accessor for Session.Event(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAD450);
}

uint64_t type metadata accessor for ActionParameterContext(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAE4F0);
}

uint64_t type metadata accessor for ActionResolverRequest(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAEAF0);
}

unint64_t sub_23F83B688()
{
  unint64_t result;

  result = qword_256EAB878;
  if (!qword_256EAB878)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ParticipantID, &type metadata for ParticipantID);
    atomic_store(result, (unint64_t *)&qword_256EAB878);
  }
  return result;
}

unint64_t sub_23F83B6C4()
{
  unint64_t result;

  result = qword_256EAB888;
  if (!qword_256EAB888)
  {
    result = MEMORY[0x242674E5C](&unk_23FB74B78, &type metadata for Session.Transcript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAB888);
  }
  return result;
}

unint64_t sub_23F83B700()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256EAB890;
  if (!qword_256EAB890)
  {
    v1 = sub_23F6AE310(&qword_256EAB808);
    sub_23F6B4EEC((uint64_t)&qword_256EA71E8);
    v3 = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256EAB890);
  }
  return result;
}

unint64_t sub_23F83B77C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256EAB8A0;
  if (!qword_256EAB8A0)
  {
    v1 = sub_23F6AE310(&qword_256EAB808);
    sub_23F6B4EEC((uint64_t)&qword_256EA71D8);
    v3 = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256EAB8A0);
  }
  return result;
}

void sub_23F83B7F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  v4 = sub_23F6F59F8(a1, a2, a3);
  sub_23F7B0990(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40));
  sub_23F694CC8();
}

uint64_t type metadata accessor for Action.ParameterValue(uint64_t a1)
{
  return sub_23F6D89A0(a1, (uint64_t *)&unk_256EADD30);
}

uint64_t type metadata accessor for RetrievedContextStatement(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAEB98);
}

uint64_t type metadata accessor for DynamicEnumerationEntityStatement(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAEC28);
}

unint64_t sub_23F83B864()
{
  unint64_t result;

  result = qword_256EAB8D0;
  if (!qword_256EAB8D0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB74B28, &type metadata for Session.Event.Payload.QueryTrackingBehavior.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAB8D0);
  }
  return result;
}

unint64_t sub_23F83B8A0()
{
  unint64_t result;

  result = qword_256EAB8D8;
  if (!qword_256EAB8D8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB74AD8, &type metadata for Session.Event.Payload.QueryTrackingBehavior.AdvisoryWorkAllowingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAB8D8);
  }
  return result;
}

unint64_t sub_23F83B8DC()
{
  unint64_t result;

  result = qword_256EAB8E0;
  if (!qword_256EAB8E0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB74A88, &type metadata for Session.Event.Payload.QueryTrackingBehavior.AdvisoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAB8E0);
  }
  return result;
}

unint64_t sub_23F83B918()
{
  unint64_t result;

  result = qword_256EAB8E8;
  if (!qword_256EAB8E8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB74A38, &type metadata for Session.Event.Payload.QueryTrackingBehavior.QueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAB8E8);
  }
  return result;
}

unint64_t sub_23F83B954()
{
  unint64_t result;

  result = qword_256EAB8F0;
  if (!qword_256EAB8F0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB749E8, &type metadata for Session.Event.Payload.QueryTrackingBehavior.StandardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAB8F0);
  }
  return result;
}

void sub_23F83B990(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t i;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v2 = type metadata accessor for ToolParameterValue(0);
  v39 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v37 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Action.ParameterValue(0);
  v38 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v35 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6916B8(&qword_256EB04A8);
  v6 = sub_23FB2F98C();
  v7 = 0;
  v40 = a1;
  v10 = *(_QWORD *)(a1 + 64);
  v9 = a1 + 64;
  v8 = v10;
  v11 = 1 << *(_BYTE *)(v9 - 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v8;
  v32 = v9;
  v33 = (unint64_t)(v11 + 63) >> 6;
  v36 = v6 + 64;
  v34 = v6;
  v14 = (uint64_t)v37;
  if ((v12 & v8) == 0)
    goto LABEL_5;
LABEL_4:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  v16 = v7;
  for (i = v15 | (v7 << 6); ; i = __clz(__rbit64(v19)) + (v20 << 6))
  {
    v22 = (uint64_t *)(*(_QWORD *)(v40 + 48) + 16 * i);
    v23 = *v22;
    v24 = v22[1];
    v25 = v35;
    sub_23F83A800(*(_QWORD *)(v40 + 56) + *(_QWORD *)(v38 + 72) * i, v35, type metadata accessor for Action.ParameterValue);
    sub_23F83A800(v25, v14, type metadata accessor for ToolParameterValue);
    swift_bridgeObjectRetain();
    sub_23F83A7D4(v25, type metadata accessor for Action.ParameterValue);
    *(_QWORD *)(v36 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v26 = v34;
    v27 = (_QWORD *)(*(_QWORD *)(v34 + 48) + 16 * i);
    *v27 = v23;
    v27[1] = v24;
    sub_23F83A7A4(v14, *(_QWORD *)(v26 + 56) + *(_QWORD *)(v39 + 72) * i, type metadata accessor for ToolParameterValue);
    v28 = *(_QWORD *)(v26 + 16);
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    *(_QWORD *)(v26 + 16) = v30;
    v7 = v16;
    if (v13)
      goto LABEL_4;
LABEL_5:
    v18 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_24;
    if (v18 >= v33)
      return;
    v19 = *(_QWORD *)(v32 + 8 * v18);
    v20 = v7 + 1;
    if (!v19)
    {
      v20 = v7 + 2;
      if (v7 + 2 >= v33)
        return;
      v19 = *(_QWORD *)(v32 + 8 * v20);
      if (!v19)
      {
        v20 = v7 + 3;
        if (v7 + 3 >= v33)
          return;
        v19 = *(_QWORD *)(v32 + 8 * v20);
        if (!v19)
          break;
      }
    }
LABEL_18:
    v13 = (v19 - 1) & v19;
    v16 = v20;
  }
  v21 = v7 + 4;
  if (v7 + 4 >= v33)
    return;
  v19 = *(_QWORD *)(v32 + 8 * v21);
  if (v19)
  {
    v20 = v7 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    v20 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v20 >= v33)
      return;
    v19 = *(_QWORD *)(v32 + 8 * v20);
    ++v21;
    if (v19)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
}

void sub_23F83BC6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  sub_23F6B5220();
  v1 = v0;
  sub_23F6916B8(&qword_256EA2750);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v2);
  v54 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F6D398C();
  v5 = type metadata accessor for Action.ParameterValue(v4);
  v52 = *(_QWORD *)(v5 - 8);
  v53 = v5;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B537C(v7, v44);
  v50 = *(_QWORD *)(type metadata accessor for ToolParameterValue(0) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B57BC(v9, v44);
  sub_23F6916B8(&qword_256EB04A0);
  sub_23F8799D8();
  v55 = v1;
  sub_23F6B5754();
  v13 = v12 & v11;
  v45 = v1 + 64;
  v46 = (unint64_t)(v14 + 63) >> 6;
  v47 = v15 + 64;
  v48 = v15;
  v16 = v51;
  v17 = (uint64_t)v54;
  if ((v12 & v11) == 0)
    goto LABEL_3;
LABEL_2:
  v18 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  v56 = v10;
  for (i = v18 | (v10 << 6); ; i = v26 + (v25 << 6))
  {
    v27 = (uint64_t *)(*(_QWORD *)(v55 + 48) + 16 * i);
    v28 = v27[1];
    v57 = *v27;
    v29 = v49;
    sub_23F83A800(*(_QWORD *)(v55 + 56) + *(_QWORD *)(v50 + 72) * i, v49, type metadata accessor for ToolParameterValue);
    v30 = sub_23F77E19C();
    sub_23F83A800(v30, v31, type metadata accessor for ToolParameterValue);
    v32 = sub_23FB2D040();
    sub_23F877B28(v17);
    v33 = sub_23F8772CC();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v33, v34, v35, v32);
    sub_23F6B6548();
    v36 = sub_23F6B6854();
    sub_23F840E4C(v36, v37, &qword_256EA2750);
    sub_23F83A7D4(v29, type metadata accessor for ToolParameterValue);
    v38 = v48;
    sub_23F8792E8((i >> 3) & 0x1FFFFFFFFFFFFFF8);
    v40 = (_QWORD *)(v39 + 16 * i);
    *v40 = v57;
    v40[1] = v28;
    sub_23F83A7A4(v16, *(_QWORD *)(v38 + 56) + *(_QWORD *)(v52 + 72) * i, type metadata accessor for Action.ParameterValue);
    v41 = *(_QWORD *)(v38 + 16);
    v42 = __OFADD__(v41, 1);
    v43 = v41 + 1;
    if (v42)
    {
      __break(1u);
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    *(_QWORD *)(v38 + 16) = v43;
    v10 = v56;
    if (v13)
      goto LABEL_2;
LABEL_3:
    v20 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_21;
    if (v20 >= v46)
      goto LABEL_19;
    if (!*(_QWORD *)(v45 + 8 * v20))
    {
      if (v10 + 2 >= v46)
        goto LABEL_19;
      if (!*(_QWORD *)(v45 + 8 * (v10 + 2)))
      {
        if (v10 + 3 >= v46)
          goto LABEL_19;
        if (!*(_QWORD *)(v45 + 8 * (v10 + 3)))
        {
          v21 = v10 + 4;
          if (v10 + 4 >= v46)
          {
LABEL_19:
            sub_23F6B5100();
            return;
          }
          if (!*(_QWORD *)(v45 + 8 * v21))
            break;
        }
      }
    }
LABEL_15:
    sub_23F7F6744();
    v13 = v24 & v23;
    v56 = v25;
  }
  while (1)
  {
    v22 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v22 >= v46)
      goto LABEL_19;
    ++v21;
    if (*(_QWORD *)(v45 + 8 * v22))
      goto LABEL_15;
  }
LABEL_22:
  __break(1u);
}

void sub_23F83BF30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t i;
  int64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, unint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_23F6B5220();
  v1 = v0;
  v2 = type metadata accessor for ClientAction.ShimParameterResolution(0);
  v47 = *(_QWORD *)(v2 - 8);
  v48 = v2;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v3);
  v46 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F6B6634();
  v44 = *(_QWORD *)(v5 - 8);
  v45 = v5;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B57F4(v7, v38);
  sub_23F6916B8(&qword_256EB0498);
  sub_23F8799D8();
  v49 = v1;
  sub_23F6B5754();
  v11 = v10 & v9;
  v39 = v1 + 64;
  v40 = (unint64_t)(v12 + 63) >> 6;
  v41 = v13 + 64;
  v42 = v13;
  v14 = v44;
  v15 = v45;
  v16 = (uint64_t)v46;
  if ((v10 & v9) == 0)
    goto LABEL_3;
LABEL_2:
  v17 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  v50 = v8;
  for (i = v17 | (v8 << 6); ; i = v25 + (v24 << 6))
  {
    v26 = (uint64_t *)(*(_QWORD *)(v49 + 48) + 16 * i);
    v27 = *v26;
    v28 = v26[1];
    v29 = *(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 16);
    v30 = v43;
    v29(v43, *(_QWORD *)(v49 + 56) + *(_QWORD *)(v14 + 72) * i, v15);
    v31 = sub_23F6B69B8();
    ((void (*)(uint64_t))v29)(v31);
    swift_storeEnumTagMultiPayload();
    sub_23F77E1FC();
    sub_23F6B5900(v30, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
    v32 = v42;
    sub_23F8792E8((i >> 3) & 0x1FFFFFFFFFFFFFF8);
    v34 = (_QWORD *)(v33 + 16 * i);
    *v34 = v27;
    v34[1] = v28;
    sub_23F83A7A4(v16, *(_QWORD *)(v32 + 56) + *(_QWORD *)(v47 + 72) * i, type metadata accessor for ClientAction.ShimParameterResolution);
    v35 = *(_QWORD *)(v32 + 16);
    v36 = __OFADD__(v35, 1);
    v37 = v35 + 1;
    if (v36)
    {
      __break(1u);
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    *(_QWORD *)(v32 + 16) = v37;
    v8 = v50;
    if (v11)
      goto LABEL_2;
LABEL_3:
    v19 = v8 + 1;
    if (__OFADD__(v8, 1))
      goto LABEL_21;
    if (v19 >= v40)
      goto LABEL_19;
    if (!*(_QWORD *)(v39 + 8 * v19))
    {
      if (v8 + 2 >= v40)
        goto LABEL_19;
      if (!*(_QWORD *)(v39 + 8 * (v8 + 2)))
      {
        if (v8 + 3 >= v40)
          goto LABEL_19;
        if (!*(_QWORD *)(v39 + 8 * (v8 + 3)))
        {
          v20 = v8 + 4;
          if (v8 + 4 >= v40)
          {
LABEL_19:
            sub_23F6B5100();
            return;
          }
          if (!*(_QWORD *)(v39 + 8 * v20))
            break;
        }
      }
    }
LABEL_15:
    sub_23F7F6744();
    v11 = v23 & v22;
    v50 = v24;
  }
  while (1)
  {
    v21 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v21 >= v40)
      goto LABEL_19;
    ++v20;
    if (*(_QWORD *)(v39 + 8 * v21))
      goto LABEL_15;
  }
LABEL_22:
  __break(1u);
}

uint64_t type metadata accessor for SessionStart(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAD5B0);
}

uint64_t sub_23F83C1AC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 0xFDu)
    return sub_23F73515C(a1, a2, a3);
  return a1;
}

unint64_t sub_23F83C1C0()
{
  unint64_t result;

  result = qword_256EABAC8;
  if (!qword_256EABAC8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB74998, &type metadata for Session.Event.Payload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABAC8);
  }
  return result;
}

unint64_t sub_23F83C1FC()
{
  unint64_t result;

  result = qword_256EABAD0;
  if (!qword_256EABAD0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB74948, &type metadata for Session.Event.Payload.QueryDecorationPrePlannerResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABAD0);
  }
  return result;
}

unint64_t sub_23F83C238()
{
  unint64_t result;

  result = qword_256EABAE0;
  if (!qword_256EABAE0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB748F8, &type metadata for Session.Event.Payload.ContinuePlanningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABAE0);
  }
  return result;
}

unint64_t sub_23F83C274()
{
  unint64_t result;

  result = qword_256EABAE8;
  if (!qword_256EABAE8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContinuePlanning, &type metadata for ContinuePlanning);
    atomic_store(result, (unint64_t *)&qword_256EABAE8);
  }
  return result;
}

unint64_t sub_23F83C2B0()
{
  unint64_t result;

  result = qword_256EABAF0;
  if (!qword_256EABAF0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB748A8, &type metadata for Session.Event.Payload.QueryDecorationResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABAF0);
  }
  return result;
}

unint64_t sub_23F83C2EC()
{
  unint64_t result;

  result = qword_256EABB00;
  if (!qword_256EABB00)
  {
    result = MEMORY[0x242674E5C](&unk_23FB74858, &type metadata for Session.Event.Payload.TypeConversionResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABB00);
  }
  return result;
}

unint64_t sub_23F83C328()
{
  unint64_t result;

  result = qword_256EABB10;
  if (!qword_256EABB10)
  {
    result = MEMORY[0x242674E5C](&unk_23FB74808, &type metadata for Session.Event.Payload.TypeConversionRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABB10);
  }
  return result;
}

unint64_t sub_23F83C364()
{
  unint64_t result;

  result = qword_256EABB20;
  if (!qword_256EABB20)
  {
    result = MEMORY[0x242674E5C](&unk_23FB747B8, &type metadata for Session.Event.Payload.ClientUndoRedoRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABB20);
  }
  return result;
}

unint64_t sub_23F83C3A0()
{
  unint64_t result;

  result = qword_256EABB30;
  if (!qword_256EABB30)
  {
    result = MEMORY[0x242674E5C](&unk_23FB74768, &type metadata for Session.Event.Payload.UndoRedoRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABB30);
  }
  return result;
}

unint64_t sub_23F83C3DC()
{
  unint64_t result;

  result = qword_256EABB40;
  if (!qword_256EABB40)
  {
    result = MEMORY[0x242674E5C](&unk_23FB74718, &type metadata for Session.Event.Payload.ToolResolutionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABB40);
  }
  return result;
}

unint64_t sub_23F83C418()
{
  unint64_t result;

  result = qword_256EABB50;
  if (!qword_256EABB50)
  {
    result = MEMORY[0x242674E5C](&unk_23FB746C8, &type metadata for Session.Event.Payload.ExternalAgentRequestRewriteMetadataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABB50);
  }
  return result;
}

unint64_t sub_23F83C454()
{
  unint64_t result;

  result = qword_256EABB58;
  if (!qword_256EABB58)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ExternalAgentRequestRewriteMetadata, &type metadata for ExternalAgentRequestRewriteMetadata);
    atomic_store(result, (unint64_t *)&qword_256EABB58);
  }
  return result;
}

unint64_t sub_23F83C490()
{
  unint64_t result;

  result = qword_256EABB60;
  if (!qword_256EABB60)
  {
    result = MEMORY[0x242674E5C](&unk_23FB74678, &type metadata for Session.Event.Payload.ExternalAgentOutcomeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABB60);
  }
  return result;
}

unint64_t sub_23F83C4CC()
{
  unint64_t result;

  result = qword_256EABB70;
  if (!qword_256EABB70)
  {
    result = MEMORY[0x242674E5C](&unk_23FB74628, &type metadata for Session.Event.Payload.ExternalAgentRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABB70);
  }
  return result;
}

unint64_t sub_23F83C508()
{
  unint64_t result;

  result = qword_256EABB80;
  if (!qword_256EABB80)
  {
    result = MEMORY[0x242674E5C](&unk_23FB745D8, &type metadata for Session.Event.Payload.ExternalAgentSpeechQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABB80);
  }
  return result;
}

unint64_t sub_23F83C544()
{
  unint64_t result;

  result = qword_256EABB90;
  if (!qword_256EABB90)
  {
    result = MEMORY[0x242674E5C](&unk_23FB74588, &type metadata for Session.Event.Payload.ExternalAgentTextQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABB90);
  }
  return result;
}

unint64_t sub_23F83C580()
{
  unint64_t result;

  result = qword_256EABBA0;
  if (!qword_256EABBA0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB74538, &type metadata for Session.Event.Payload.StatementEvaluatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABBA0);
  }
  return result;
}

unint64_t sub_23F83C5BC()
{
  unint64_t result;

  result = qword_256EABBA8;
  if (!qword_256EABBA8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB744E8, &type metadata for Session.Event.Payload.SystemResponseGeneratedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABBA8);
  }
  return result;
}

unint64_t sub_23F83C5F8()
{
  unint64_t result;

  result = qword_256EABBB0;
  if (!qword_256EABBB0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB74498, &type metadata for Session.Event.Payload.EntitySpanMatchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABBB0);
  }
  return result;
}

unint64_t sub_23F83C634()
{
  unint64_t result;

  result = qword_256EABBB8;
  if (!qword_256EABBB8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for EntitySpanMatchResult, &type metadata for EntitySpanMatchResult);
    atomic_store(result, (unint64_t *)&qword_256EABBB8);
  }
  return result;
}

unint64_t sub_23F83C670()
{
  unint64_t result;

  result = qword_256EABBC0;
  if (!qword_256EABBC0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB74448, &type metadata for Session.Event.Payload.ToolsRetrievedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABBC0);
  }
  return result;
}

unint64_t sub_23F83C6AC()
{
  unint64_t result;

  result = qword_256EABBC8;
  if (!qword_256EABBC8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ToolRetrievalResponse, &type metadata for ToolRetrievalResponse);
    atomic_store(result, (unint64_t *)&qword_256EABBC8);
  }
  return result;
}

unint64_t sub_23F83C6E8()
{
  unint64_t result;

  result = qword_256EABBD0;
  if (!qword_256EABBD0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB743F8, &type metadata for Session.Event.Payload.ContextRetrievedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABBD0);
  }
  return result;
}

unint64_t sub_23F83C724()
{
  unint64_t result;

  result = qword_256EABBD8;
  if (!qword_256EABBD8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextRetrieved, &type metadata for ContextRetrieved);
    atomic_store(result, (unint64_t *)&qword_256EABBD8);
  }
  return result;
}

unint64_t sub_23F83C760()
{
  unint64_t result;

  result = qword_256EABBE0;
  if (!qword_256EABBE0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB743A8, &type metadata for Session.Event.Payload.SafetyModeExceptionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABBE0);
  }
  return result;
}

unint64_t sub_23F83C79C()
{
  unint64_t result;

  result = qword_256EABBE8;
  if (!qword_256EABBE8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for SafetyModeException, &type metadata for SafetyModeException);
    atomic_store(result, (unint64_t *)&qword_256EABBE8);
  }
  return result;
}

unint64_t sub_23F83C7D8()
{
  unint64_t result;

  result = qword_256EABBF0;
  if (!qword_256EABBF0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB74358, &type metadata for Session.Event.Payload.SafetyModeReleaseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABBF0);
  }
  return result;
}

unint64_t sub_23F83C814()
{
  unint64_t result;

  result = qword_256EABBF8;
  if (!qword_256EABBF8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for SafetyModeRelease, &type metadata for SafetyModeRelease);
    atomic_store(result, (unint64_t *)&qword_256EABBF8);
  }
  return result;
}

unint64_t sub_23F83C850()
{
  unint64_t result;

  result = qword_256EABC00;
  if (!qword_256EABC00)
  {
    result = MEMORY[0x242674E5C](&unk_23FB74308, &type metadata for Session.Event.Payload.ContextPrewarmCompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABC00);
  }
  return result;
}

unint64_t sub_23F83C88C()
{
  unint64_t result;

  result = qword_256EABC08;
  if (!qword_256EABC08)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextPrewarmCompleted, &type metadata for ContextPrewarmCompleted);
    atomic_store(result, (unint64_t *)&qword_256EABC08);
  }
  return result;
}

unint64_t sub_23F83C8C8()
{
  unint64_t result;

  result = qword_256EABC10;
  if (!qword_256EABC10)
  {
    result = MEMORY[0x242674E5C](&unk_23FB742B8, &type metadata for Session.Event.Payload.ContextPrewarmRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABC10);
  }
  return result;
}

unint64_t sub_23F83C904()
{
  unint64_t result;

  result = qword_256EABC18;
  if (!qword_256EABC18)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextPrewarmRequest, &type metadata for ContextPrewarmRequest);
    atomic_store(result, (unint64_t *)&qword_256EABC18);
  }
  return result;
}

unint64_t sub_23F83C940()
{
  unint64_t result;

  result = qword_256EABC20;
  if (!qword_256EABC20)
  {
    result = MEMORY[0x242674E5C](&unk_23FB74268, &type metadata for Session.Event.Payload.ClientInitiatedClientActionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABC20);
  }
  return result;
}

unint64_t sub_23F83C97C()
{
  unint64_t result;

  result = qword_256EABC28;
  if (!qword_256EABC28)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ClientInitiatedClientAction, &type metadata for ClientInitiatedClientAction);
    atomic_store(result, (unint64_t *)&qword_256EABC28);
  }
  return result;
}

unint64_t sub_23F83C9B8()
{
  unint64_t result;

  result = qword_256EABC30;
  if (!qword_256EABC30)
  {
    result = MEMORY[0x242674E5C](&unk_23FB74218, &type metadata for Session.Event.Payload.ResponseGenerationRequestCreatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABC30);
  }
  return result;
}

unint64_t sub_23F83C9F4()
{
  unint64_t result;

  result = qword_256EABC38;
  if (!qword_256EABC38)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ResponseGenerationRequest, &type metadata for ResponseGenerationRequest);
    atomic_store(result, (unint64_t *)&qword_256EABC38);
  }
  return result;
}

unint64_t sub_23F83CA30()
{
  unint64_t result;

  result = qword_256EABC40;
  if (!qword_256EABC40)
  {
    result = MEMORY[0x242674E5C](&unk_23FB741C8, &type metadata for Session.Event.Payload.ActionResolverRequestCreatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABC40);
  }
  return result;
}

unint64_t sub_23F83CA6C()
{
  unint64_t result;

  result = qword_256EABC50;
  if (!qword_256EABC50)
  {
    result = MEMORY[0x242674E5C](&unk_23FB74178, &type metadata for Session.Event.Payload.ActionResponseGeneratedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABC50);
  }
  return result;
}

unint64_t sub_23F83CAA8()
{
  unint64_t result;

  result = qword_256EABC60;
  if (!qword_256EABC60)
  {
    result = MEMORY[0x242674E5C](&unk_23FB74128, &type metadata for Session.Event.Payload.QueriesExecutedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABC60);
  }
  return result;
}

unint64_t sub_23F83CAE4()
{
  unint64_t result;

  result = qword_256EABC70;
  if (!qword_256EABC70)
  {
    result = MEMORY[0x242674E5C](&unk_23FB740D8, &type metadata for Session.Event.Payload.ActionExecutedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABC70);
  }
  return result;
}

unint64_t sub_23F83CB20()
{
  unint64_t result;

  result = qword_256EABC80;
  if (!qword_256EABC80)
  {
    result = MEMORY[0x242674E5C](&unk_23FB74088, &type metadata for Session.Event.Payload.SystemPromptResolvedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABC80);
  }
  return result;
}

unint64_t sub_23F83CB5C()
{
  unint64_t result;

  result = qword_256EABC90;
  if (!qword_256EABC90)
  {
    result = MEMORY[0x242674E5C](&unk_23FB74038, &type metadata for Session.Event.Payload.SystemPromptRequestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABC90);
  }
  return result;
}

unint64_t sub_23F83CB98()
{
  unint64_t result;

  result = qword_256EABCA0;
  if (!qword_256EABCA0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73FE8, &type metadata for Session.Event.Payload.TerminateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABCA0);
  }
  return result;
}

unint64_t sub_23F83CBD4()
{
  unint64_t result;

  result = qword_256EABCA8;
  if (!qword_256EABCA8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73F98, &type metadata for Session.Event.Payload.SessionSuspendedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABCA8);
  }
  return result;
}

unint64_t sub_23F83CC10()
{
  unint64_t result;

  result = qword_256EABCB0;
  if (!qword_256EABCB0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73F48, &type metadata for Session.Event.Payload.EndOfPlanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABCB0);
  }
  return result;
}

unint64_t sub_23F83CC4C()
{
  unint64_t result;

  result = qword_256EABCB8;
  if (!qword_256EABCB8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73EF8, &type metadata for Session.Event.Payload.ClientCustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABCB8);
  }
  return result;
}

unint64_t sub_23F83CC88()
{
  unint64_t result;

  result = qword_256EABCC0;
  if (!qword_256EABCC0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73EA8, &type metadata for Session.Event.Payload.CriticalErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABCC0);
  }
  return result;
}

unint64_t sub_23F83CCC4()
{
  unint64_t result;

  result = qword_256EABCC8;
  if (!qword_256EABCC8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73E58, &type metadata for Session.Event.Payload.RecoverableErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABCC8);
  }
  return result;
}

unint64_t sub_23F83CD00()
{
  unint64_t result;

  result = qword_256EABCD0;
  if (!qword_256EABCD0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for Session.RecoverableError, &type metadata for Session.RecoverableError);
    atomic_store(result, (unint64_t *)&qword_256EABCD0);
  }
  return result;
}

unint64_t sub_23F83CD3C()
{
  unint64_t result;

  result = qword_256EABCD8;
  if (!qword_256EABCD8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73E08, &type metadata for Session.Event.Payload.ClientIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABCD8);
  }
  return result;
}

unint64_t sub_23F83CD78()
{
  unint64_t result;

  result = qword_256EABCE0;
  if (!qword_256EABCE0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73DB8, &type metadata for Session.Event.Payload.ExecutorFinishedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABCE0);
  }
  return result;
}

unint64_t sub_23F83CDB4()
{
  unint64_t result;

  result = qword_256EABCE8;
  if (!qword_256EABCE8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73D68, &type metadata for Session.Event.Payload.StepsExecutedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABCE8);
  }
  return result;
}

unint64_t sub_23F83CDF0()
{
  unint64_t result;

  result = qword_256EABCF0;
  if (!qword_256EABCF0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ExecutionStepResults, &type metadata for ExecutionStepResults);
    atomic_store(result, (unint64_t *)&qword_256EABCF0);
  }
  return result;
}

unint64_t sub_23F83CE2C()
{
  unint64_t result;

  result = qword_256EABCF8;
  if (!qword_256EABCF8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73D18, &type metadata for Session.Event.Payload.VariablesSetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABCF8);
  }
  return result;
}

unint64_t sub_23F83CE68()
{
  unint64_t result;

  result = qword_256EABD08;
  if (!qword_256EABD08)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73CC8, &type metadata for Session.Event.Payload.QueriesCreatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABD08);
  }
  return result;
}

unint64_t sub_23F83CEA4()
{
  unint64_t result;

  result = qword_256EABD18;
  if (!qword_256EABD18)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73C78, &type metadata for Session.Event.Payload.ClientActionCreatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABD18);
  }
  return result;
}

unint64_t sub_23F83CEE0()
{
  unint64_t result;

  result = qword_256EABD28;
  if (!qword_256EABD28)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73C28, &type metadata for Session.Event.Payload.ActionCanceledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABD28);
  }
  return result;
}

unint64_t sub_23F83CF1C()
{
  unint64_t result;

  result = qword_256EABD38;
  if (!qword_256EABD38)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73BD8, &type metadata for Session.Event.Payload.ActionCreatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABD38);
  }
  return result;
}

unint64_t sub_23F83CF58()
{
  unint64_t result;

  result = qword_256EABD40;
  if (!qword_256EABD40)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73B88, &unk_250FFF6E0);
    atomic_store(result, (unint64_t *)&qword_256EABD40);
  }
  return result;
}

unint64_t sub_23F83CF94()
{
  unint64_t result;

  result = qword_256EABD48;
  if (!qword_256EABD48)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for Session.Plan, &type metadata for Session.Plan);
    atomic_store(result, (unint64_t *)&qword_256EABD48);
  }
  return result;
}

unint64_t sub_23F83CFD0()
{
  unint64_t result;

  result = qword_256EABD50;
  if (!qword_256EABD50)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73B38, &type metadata for Session.Event.Payload.RequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABD50);
  }
  return result;
}

unint64_t sub_23F83D00C()
{
  unint64_t result;

  result = qword_256EABD60;
  if (!qword_256EABD60)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73AE8, &unk_250FFF5C0);
    atomic_store(result, (unint64_t *)&qword_256EABD60);
  }
  return result;
}

unint64_t sub_23F83D048()
{
  unint64_t result;

  result = qword_256EABD68;
  if (!qword_256EABD68)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for SpeechQuery, &type metadata for SpeechQuery);
    atomic_store(result, (unint64_t *)&qword_256EABD68);
  }
  return result;
}

unint64_t sub_23F83D084()
{
  unint64_t result;

  result = qword_256EABD70;
  if (!qword_256EABD70)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73A98, &unk_250FFF530);
    atomic_store(result, (unint64_t *)&qword_256EABD70);
  }
  return result;
}

unint64_t sub_23F83D0C0()
{
  unint64_t result;

  result = qword_256EABD80;
  if (!qword_256EABD80)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73A48, &type metadata for Session.Event.Payload.SessionStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EABD80);
  }
  return result;
}

unint64_t sub_23F83D0FC()
{
  unint64_t result;

  result = qword_256EABF28;
  if (!qword_256EABF28)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContinuePlanning, &type metadata for ContinuePlanning);
    atomic_store(result, (unint64_t *)&qword_256EABF28);
  }
  return result;
}

unint64_t sub_23F83D138()
{
  unint64_t result;

  result = qword_256EABF60;
  if (!qword_256EABF60)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ExternalAgentRequestRewriteMetadata, &type metadata for ExternalAgentRequestRewriteMetadata);
    atomic_store(result, (unint64_t *)&qword_256EABF60);
  }
  return result;
}

unint64_t sub_23F83D174()
{
  unint64_t result;

  result = qword_256EABF88;
  if (!qword_256EABF88)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for EntitySpanMatchResult, &type metadata for EntitySpanMatchResult);
    atomic_store(result, (unint64_t *)&qword_256EABF88);
  }
  return result;
}

unint64_t sub_23F83D1B0()
{
  unint64_t result;

  result = qword_256EABF90;
  if (!qword_256EABF90)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ToolRetrievalResponse, &type metadata for ToolRetrievalResponse);
    atomic_store(result, (unint64_t *)&qword_256EABF90);
  }
  return result;
}

unint64_t sub_23F83D1EC()
{
  unint64_t result;

  result = qword_256EABF98;
  if (!qword_256EABF98)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextRetrieved, &type metadata for ContextRetrieved);
    atomic_store(result, (unint64_t *)&qword_256EABF98);
  }
  return result;
}

unint64_t sub_23F83D228()
{
  unint64_t result;

  result = qword_256EABFA0;
  if (!qword_256EABFA0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for SafetyModeException, &type metadata for SafetyModeException);
    atomic_store(result, (unint64_t *)&qword_256EABFA0);
  }
  return result;
}

unint64_t sub_23F83D264()
{
  unint64_t result;

  result = qword_256EABFA8;
  if (!qword_256EABFA8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for SafetyModeRelease, &type metadata for SafetyModeRelease);
    atomic_store(result, (unint64_t *)&qword_256EABFA8);
  }
  return result;
}

unint64_t sub_23F83D2A0()
{
  unint64_t result;

  result = qword_256EABFB0;
  if (!qword_256EABFB0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextPrewarmCompleted, &type metadata for ContextPrewarmCompleted);
    atomic_store(result, (unint64_t *)&qword_256EABFB0);
  }
  return result;
}

unint64_t sub_23F83D2DC()
{
  unint64_t result;

  result = qword_256EABFB8;
  if (!qword_256EABFB8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextPrewarmRequest, &type metadata for ContextPrewarmRequest);
    atomic_store(result, (unint64_t *)&qword_256EABFB8);
  }
  return result;
}

unint64_t sub_23F83D318()
{
  unint64_t result;

  result = qword_256EABFC0;
  if (!qword_256EABFC0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ClientInitiatedClientAction, &type metadata for ClientInitiatedClientAction);
    atomic_store(result, (unint64_t *)&qword_256EABFC0);
  }
  return result;
}

unint64_t sub_23F83D354()
{
  unint64_t result;

  result = qword_256EABFC8;
  if (!qword_256EABFC8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ResponseGenerationRequest, &type metadata for ResponseGenerationRequest);
    atomic_store(result, (unint64_t *)&qword_256EABFC8);
  }
  return result;
}

unint64_t sub_23F83D390()
{
  unint64_t result;

  result = qword_256EAC000;
  if (!qword_256EAC000)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for Session.RecoverableError, &type metadata for Session.RecoverableError);
    atomic_store(result, (unint64_t *)&qword_256EAC000);
  }
  return result;
}

unint64_t sub_23F83D3CC()
{
  unint64_t result;

  result = qword_256EAC008;
  if (!qword_256EAC008)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ExecutionStepResults, &type metadata for ExecutionStepResults);
    atomic_store(result, (unint64_t *)&qword_256EAC008);
  }
  return result;
}

unint64_t sub_23F83D408()
{
  unint64_t result;

  result = qword_256EAC030;
  if (!qword_256EAC030)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for Session.Plan, &type metadata for Session.Plan);
    atomic_store(result, (unint64_t *)&qword_256EAC030);
  }
  return result;
}

unint64_t sub_23F83D444()
{
  unint64_t result;

  result = qword_256EAC040;
  if (!qword_256EAC040)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for SpeechQuery, &type metadata for SpeechQuery);
    atomic_store(result, (unint64_t *)&qword_256EAC040);
  }
  return result;
}

unint64_t sub_23F83D480()
{
  unint64_t result;

  result = qword_256EAC060;
  if (!qword_256EAC060)
  {
    result = MEMORY[0x242674E5C](&unk_23FB739F8, &type metadata for Session.Event.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC060);
  }
  return result;
}

unint64_t sub_23F83D4BC()
{
  unint64_t *v0;
  uint64_t v1;
  unint64_t result;
  void (*v3)(void);
  void (*v4)(void);
  void (*v5)(void);
  void (*v6)(void);
  uint64_t v7;

  sub_23F877640();
  result = sub_23F6B6A68(v1);
  if (!result)
  {
    v5 = v4;
    v6 = v3;
    sub_23F6AE310(&qword_256EAC070);
    v6();
    v5();
    v7 = sub_23F6B689C();
    result = MEMORY[0x242674E5C](v7);
    atomic_store(result, v0);
  }
  return result;
}

uint64_t sub_23F83D52C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_23F83D55C()
{
  unint64_t result;

  result = qword_256EAC0C8;
  if (!qword_256EAC0C8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB739A8, &type metadata for Session.Plan.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC0C8);
  }
  return result;
}

unint64_t sub_23F83D598()
{
  unint64_t result;

  result = qword_256EAC0D0;
  if (!qword_256EAC0D0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73958, &type metadata for Session.Plan.Source.FullPlannerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC0D0);
  }
  return result;
}

unint64_t sub_23F83D5D4()
{
  unint64_t result;

  result = qword_256EAC0D8;
  if (!qword_256EAC0D8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73908, &type metadata for Session.Plan.Source.PlanOverrideCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC0D8);
  }
  return result;
}

unint64_t sub_23F83D610()
{
  unint64_t result;

  result = qword_256EAC0E0;
  if (!qword_256EAC0E0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB738B8, &type metadata for Session.Plan.Source.DummyPlannerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC0E0);
  }
  return result;
}

unint64_t sub_23F83D64C()
{
  unint64_t result;

  result = qword_256EAC0E8;
  if (!qword_256EAC0E8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73868, &type metadata for Session.Plan.Source.PrescribedPlanGeneratorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC0E8);
  }
  return result;
}

unint64_t sub_23F83D688()
{
  unint64_t result;

  result = qword_256EAC0F0;
  if (!qword_256EAC0F0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73818, &type metadata for Session.Plan.Source.NotSetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC0F0);
  }
  return result;
}

unint64_t sub_23F83D6C4()
{
  unint64_t result;

  result = qword_256EAC130;
  if (!qword_256EAC130)
  {
    result = MEMORY[0x242674E5C](&unk_23FB737C8, &type metadata for Session.Plan.DecompositionResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC130);
  }
  return result;
}

unint64_t sub_23F83D700()
{
  unint64_t result;

  result = qword_256EAC148;
  if (!qword_256EAC148)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73778, &type metadata for Session.Plan.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC148);
  }
  return result;
}

unint64_t sub_23F83D73C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256EAC158;
  if (!qword_256EAC158)
  {
    v1 = sub_23F6AE310(&qword_256EAC150);
    sub_23F6B4EEC((uint64_t)&unk_256EAC160);
    v3 = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256EAC158);
  }
  return result;
}

unint64_t sub_23F83D7B8()
{
  unint64_t result;

  result = qword_256EAC168;
  if (!qword_256EAC168)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for Session.Plan.Source, &type metadata for Session.Plan.Source);
    atomic_store(result, (unint64_t *)&qword_256EAC168);
  }
  return result;
}

unint64_t sub_23F83D7F4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256EAC178;
  if (!qword_256EAC178)
  {
    v1 = sub_23F6AE310(&qword_256EAC150);
    sub_23F6B4EEC((uint64_t)&unk_256EAC180);
    v3 = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256EAC178);
  }
  return result;
}

unint64_t sub_23F83D870()
{
  unint64_t result;

  result = qword_256EAC188;
  if (!qword_256EAC188)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for Session.Plan.Source, &type metadata for Session.Plan.Source);
    atomic_store(result, (unint64_t *)&qword_256EAC188);
  }
  return result;
}

unint64_t sub_23F83D8AC()
{
  unint64_t result;

  result = qword_256EAC1A0;
  if (!qword_256EAC1A0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73728, &type metadata for Session.RecoverableError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC1A0);
  }
  return result;
}

unint64_t sub_23F83D8E8()
{
  unint64_t result;

  result = qword_256EAC1A8;
  if (!qword_256EAC1A8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB736D8, &type metadata for Session.RecoverableError.PlanGenerationErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC1A8);
  }
  return result;
}

unint64_t sub_23F83D924()
{
  unint64_t result;

  result = qword_256EAC1B0;
  if (!qword_256EAC1B0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for Session.PlanGenerationError, &type metadata for Session.PlanGenerationError);
    atomic_store(result, (unint64_t *)&qword_256EAC1B0);
  }
  return result;
}

unint64_t sub_23F83D960()
{
  unint64_t result;

  result = qword_256EAC1C8;
  if (!qword_256EAC1C8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for Session.PlanGenerationError, &type metadata for Session.PlanGenerationError);
    atomic_store(result, (unint64_t *)&qword_256EAC1C8);
  }
  return result;
}

unint64_t sub_23F83D99C()
{
  unint64_t result;

  result = qword_256EAC1E0;
  if (!qword_256EAC1E0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73688, &type metadata for Session.PlanGenerationError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC1E0);
  }
  return result;
}

unint64_t sub_23F83D9D8()
{
  unint64_t result;

  result = qword_256EAC1E8;
  if (!qword_256EAC1E8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73638, &type metadata for Session.PlanGenerationError.ModelOutputErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC1E8);
  }
  return result;
}

unint64_t sub_23F83DA14()
{
  unint64_t result;

  result = qword_256EAC1F0;
  if (!qword_256EAC1F0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for Session.PlanGenerationModelOutputError, &type metadata for Session.PlanGenerationModelOutputError);
    atomic_store(result, (unint64_t *)&qword_256EAC1F0);
  }
  return result;
}

unint64_t sub_23F83DA50()
{
  unint64_t result;

  result = qword_256EAC208;
  if (!qword_256EAC208)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for Session.PlanGenerationModelOutputError, &type metadata for Session.PlanGenerationModelOutputError);
    atomic_store(result, (unint64_t *)&qword_256EAC208);
  }
  return result;
}

unint64_t sub_23F83DA8C()
{
  unint64_t result;

  result = qword_256EAC218;
  if (!qword_256EAC218)
  {
    result = MEMORY[0x242674E5C](&unk_23FB735E8, &type metadata for Session.PlanGenerationModelOutputError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC218);
  }
  return result;
}

unint64_t sub_23F83DAC8()
{
  unint64_t result;

  result = qword_256EAC238;
  if (!qword_256EAC238)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73598, &type metadata for SessionStart.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC238);
  }
  return result;
}

unint64_t sub_23F83DB04()
{
  unint64_t result;

  result = qword_256EAC278;
  if (!qword_256EAC278)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73548, &type metadata for Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC278);
  }
  return result;
}

unint64_t sub_23F83DB40()
{
  unint64_t result;

  result = qword_256EAC288;
  if (!qword_256EAC288)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestPrescribedPlan, &type metadata for RequestPrescribedPlan);
    atomic_store(result, (unint64_t *)&qword_256EAC288);
  }
  return result;
}

unint64_t sub_23F83DB7C()
{
  unint64_t result;

  result = qword_256EAC2A0;
  if (!qword_256EAC2A0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestPrescribedPlan, &type metadata for RequestPrescribedPlan);
    atomic_store(result, (unint64_t *)&qword_256EAC2A0);
  }
  return result;
}

unint64_t sub_23F83DBB8()
{
  unint64_t result;

  result = qword_256EAC2D0;
  if (!qword_256EAC2D0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB734F8, &type metadata for RequestContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC2D0);
  }
  return result;
}

unint64_t sub_23F83DBF4()
{
  unint64_t result;

  result = qword_256EAC2D8;
  if (!qword_256EAC2D8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB734A8, &type metadata for RequestContent.PromptResolutionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC2D8);
  }
  return result;
}

unint64_t sub_23F83DC30()
{
  unint64_t result;

  result = qword_256EAC2E0;
  if (!qword_256EAC2E0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73458, &type metadata for RequestContent.SpeechCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC2E0);
  }
  return result;
}

unint64_t sub_23F83DC6C()
{
  unint64_t result;

  result = qword_256EAC2E8;
  if (!qword_256EAC2E8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestContent.SpeechContent, &type metadata for RequestContent.SpeechContent);
    atomic_store(result, (unint64_t *)&qword_256EAC2E8);
  }
  return result;
}

unint64_t sub_23F83DCA8()
{
  unint64_t result;

  result = qword_256EAC2F0;
  if (!qword_256EAC2F0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73408, &type metadata for RequestContent.TextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC2F0);
  }
  return result;
}

unint64_t sub_23F83DCE4()
{
  unint64_t result;

  result = qword_256EAC300;
  if (!qword_256EAC300)
  {
    result = MEMORY[0x242674E5C](&unk_23FB733B8, &type metadata for RequestContent.StopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC300);
  }
  return result;
}

unint64_t sub_23F83DD20()
{
  unint64_t result;

  result = qword_256EAC308;
  if (!qword_256EAC308)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestContent.StopContent, &type metadata for RequestContent.StopContent);
    atomic_store(result, (unint64_t *)&qword_256EAC308);
  }
  return result;
}

unint64_t sub_23F83DD5C()
{
  unint64_t result;

  result = qword_256EAC338;
  if (!qword_256EAC338)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestContent.SpeechContent, &type metadata for RequestContent.SpeechContent);
    atomic_store(result, (unint64_t *)&qword_256EAC338);
  }
  return result;
}

unint64_t sub_23F83DD98()
{
  unint64_t result;

  result = qword_256EAC348;
  if (!qword_256EAC348)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestContent.StopContent, &type metadata for RequestContent.StopContent);
    atomic_store(result, (unint64_t *)&qword_256EAC348);
  }
  return result;
}

unint64_t sub_23F83DDD4()
{
  unint64_t result;

  result = qword_256EAC358;
  if (!qword_256EAC358)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73368, &type metadata for RequestContent.StopContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC358);
  }
  return result;
}

unint64_t sub_23F83DE10()
{
  unint64_t result;

  result = qword_256EAC368;
  if (!qword_256EAC368)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73318, &type metadata for RequestContent.TextContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC368);
  }
  return result;
}

unint64_t sub_23F83DE4C()
{
  unint64_t result;

  result = qword_256EAC380;
  if (!qword_256EAC380)
  {
    result = MEMORY[0x242674E5C](&unk_23FB732C8, &type metadata for RequestContent.SpeechContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC380);
  }
  return result;
}

unint64_t sub_23F83DE88()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256EAC388;
  if (!qword_256EAC388)
  {
    v1 = sub_23F6AE310(&qword_256EAB790);
    sub_23F6B4EEC((uint64_t)&unk_256EAC390);
    v3 = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256EAC388);
  }
  return result;
}

unint64_t sub_23F83DF04()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256EAC3A0;
  if (!qword_256EAC3A0)
  {
    v1 = sub_23F6AE310(&qword_256EAB790);
    sub_23F6B4EEC((uint64_t)&unk_256EAC3A8);
    v3 = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256EAC3A0);
  }
  return result;
}

unint64_t sub_23F83DF80()
{
  unint64_t result;

  result = qword_256EAC3E0;
  if (!qword_256EAC3E0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73278, &type metadata for RequestContent.SystemPromptResolution.ResolutionInput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC3E0);
  }
  return result;
}

unint64_t sub_23F83DFBC()
{
  unint64_t result;

  result = qword_256EAC3E8;
  if (!qword_256EAC3E8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73228, &type metadata for RequestContent.SystemPromptResolution.ResolutionInput.SpeechCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC3E8);
  }
  return result;
}

unint64_t sub_23F83DFF8()
{
  unint64_t result;

  result = qword_256EAC3F0;
  if (!qword_256EAC3F0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB731D8, &type metadata for RequestContent.SystemPromptResolution.ResolutionInput.TextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC3F0);
  }
  return result;
}

unint64_t sub_23F83E034()
{
  unint64_t result;

  result = qword_256EAC3F8;
  if (!qword_256EAC3F8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73188, &type metadata for RequestContent.SystemPromptResolution.ResolutionInput.HeadGestureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC3F8);
  }
  return result;
}

unint64_t sub_23F83E070()
{
  unint64_t result;

  result = qword_256EAC400;
  if (!qword_256EAC400)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73138, &type metadata for RequestContent.SystemPromptResolution.ResolutionInput.TouchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC400);
  }
  return result;
}

unint64_t sub_23F83E0AC()
{
  unint64_t result;

  result = qword_256EAC480;
  if (!qword_256EAC480)
  {
    result = MEMORY[0x242674E5C](&unk_23FB730E8, &type metadata for RequestContent.SystemPromptResolution.UserAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC480);
  }
  return result;
}

unint64_t sub_23F83E0E8()
{
  unint64_t result;

  result = qword_256EAC488;
  if (!qword_256EAC488)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73098, &type metadata for RequestContent.SystemPromptResolution.UserAction.ActionCanceledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC488);
  }
  return result;
}

unint64_t sub_23F83E124()
{
  unint64_t result;

  result = qword_256EAC490;
  if (!qword_256EAC490)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestContent.SystemPromptResolution.ActionCancellation, &type metadata for RequestContent.SystemPromptResolution.ActionCancellation);
    atomic_store(result, (unint64_t *)&qword_256EAC490);
  }
  return result;
}

unint64_t sub_23F83E160()
{
  unint64_t result;

  result = qword_256EAC498;
  if (!qword_256EAC498)
  {
    result = MEMORY[0x242674E5C](&unk_23FB73048, &type metadata for RequestContent.SystemPromptResolution.UserAction.RequirementAddressedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC498);
  }
  return result;
}

unint64_t sub_23F83E19C()
{
  unint64_t result;

  result = qword_256EAC4A0;
  if (!qword_256EAC4A0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestContent.SystemPromptResolution.RequirementResolution, &type metadata for RequestContent.SystemPromptResolution.RequirementResolution);
    atomic_store(result, (unint64_t *)&qword_256EAC4A0);
  }
  return result;
}

unint64_t sub_23F83E1D8()
{
  unint64_t result;

  result = qword_256EAC4A8;
  if (!qword_256EAC4A8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72FF8, &type metadata for RequestContent.SystemPromptResolution.UserAction.DisambiguationIndexSelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC4A8);
  }
  return result;
}

unint64_t sub_23F83E214()
{
  unint64_t result;

  result = qword_256EAC4B0;
  if (!qword_256EAC4B0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72FA8, &type metadata for RequestContent.SystemPromptResolution.UserAction.ParameterItemSelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC4B0);
  }
  return result;
}

unint64_t sub_23F83E250()
{
  unint64_t result;

  result = qword_256EAC4B8;
  if (!qword_256EAC4B8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72F58, &type metadata for RequestContent.SystemPromptResolution.UserAction.ParameterConfirmedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC4B8);
  }
  return result;
}

unint64_t sub_23F83E28C()
{
  unint64_t result;

  result = qword_256EAC4C0;
  if (!qword_256EAC4C0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72F08, &type metadata for RequestContent.SystemPromptResolution.UserAction.ParameterValueSelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC4C0);
  }
  return result;
}

unint64_t sub_23F83E2C8()
{
  unint64_t result;

  result = qword_256EAC4C8;
  if (!qword_256EAC4C8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72EB8, &type metadata for RequestContent.SystemPromptResolution.UserAction.DeviceUnlockedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC4C8);
  }
  return result;
}

unint64_t sub_23F83E304()
{
  unint64_t result;

  result = qword_256EAC4D0;
  if (!qword_256EAC4D0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72E68, &type metadata for RequestContent.SystemPromptResolution.UserAction.ActionConfirmedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC4D0);
  }
  return result;
}

unint64_t sub_23F83E340()
{
  unint64_t result;

  result = qword_256EAC520;
  if (!qword_256EAC520)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestContent.SystemPromptResolution.ActionCancellation, &type metadata for RequestContent.SystemPromptResolution.ActionCancellation);
    atomic_store(result, (unint64_t *)&qword_256EAC520);
  }
  return result;
}

unint64_t sub_23F83E37C()
{
  unint64_t result;

  result = qword_256EAC528;
  if (!qword_256EAC528)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestContent.SystemPromptResolution.RequirementResolution, &type metadata for RequestContent.SystemPromptResolution.RequirementResolution);
    atomic_store(result, (unint64_t *)&qword_256EAC528);
  }
  return result;
}

unint64_t sub_23F83E3B8()
{
  unint64_t result;

  result = qword_256EAC538;
  if (!qword_256EAC538)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72E18, &type metadata for RequestContent.SystemPromptResolution.RequirementResolution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC538);
  }
  return result;
}

unint64_t sub_23F83E3F4()
{
  unint64_t result;

  result = qword_256EAC550;
  if (!qword_256EAC550)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72DC8, &type metadata for RequestContent.SystemPromptResolution.ActionCancellation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC550);
  }
  return result;
}

unint64_t sub_23F83E430()
{
  unint64_t result;

  result = qword_256EAC560;
  if (!qword_256EAC560)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72D78, &type metadata for RequestContent.SystemPromptResolution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC560);
  }
  return result;
}

unint64_t sub_23F83E46C()
{
  unint64_t result;

  result = qword_256EAC598;
  if (!qword_256EAC598)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72D28, &type metadata for ExternalAgentRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC598);
  }
  return result;
}

unint64_t sub_23F83E4A8()
{
  unint64_t result;

  result = qword_256EAC5E0;
  if (!qword_256EAC5E0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72CD8, &type metadata for RequestPrescribedPlan.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC5E0);
  }
  return result;
}

unint64_t sub_23F83E4E4()
{
  unint64_t result;

  result = qword_256EAC5E8;
  if (!qword_256EAC5E8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72C88, &type metadata for RequestPrescribedPlan.KnowledgeToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC5E8);
  }
  return result;
}

unint64_t sub_23F83E520()
{
  unint64_t result;

  result = qword_256EAC5F0;
  if (!qword_256EAC5F0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestPrescribedPlan.KnowledgeTool, &type metadata for RequestPrescribedPlan.KnowledgeTool);
    atomic_store(result, (unint64_t *)&qword_256EAC5F0);
  }
  return result;
}

unint64_t sub_23F83E55C()
{
  unint64_t result;

  result = qword_256EAC5F8;
  if (!qword_256EAC5F8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72C38, &type metadata for RequestPrescribedPlan.DisplayToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC5F8);
  }
  return result;
}

unint64_t sub_23F83E598()
{
  unint64_t result;

  result = qword_256EAC600;
  if (!qword_256EAC600)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestPrescribedPlan.DisplayTool, &type metadata for RequestPrescribedPlan.DisplayTool);
    atomic_store(result, (unint64_t *)&qword_256EAC600);
  }
  return result;
}

unint64_t sub_23F83E5D4()
{
  unint64_t result;

  result = qword_256EAC608;
  if (!qword_256EAC608)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72BE8, &type metadata for RequestPrescribedPlan.ConvertToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC608);
  }
  return result;
}

unint64_t sub_23F83E610()
{
  unint64_t result;

  result = qword_256EAC610;
  if (!qword_256EAC610)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestPrescribedPlan.ConvertTool, &type metadata for RequestPrescribedPlan.ConvertTool);
    atomic_store(result, (unint64_t *)&qword_256EAC610);
  }
  return result;
}

unint64_t sub_23F83E64C()
{
  unint64_t result;

  result = qword_256EAC618;
  if (!qword_256EAC618)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72B98, &type metadata for RequestPrescribedPlan.TextToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC618);
  }
  return result;
}

unint64_t sub_23F83E688()
{
  unint64_t result;

  result = qword_256EAC620;
  if (!qword_256EAC620)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestPrescribedPlan.TextTool, &type metadata for RequestPrescribedPlan.TextTool);
    atomic_store(result, (unint64_t *)&qword_256EAC620);
  }
  return result;
}

unint64_t sub_23F83E6C4()
{
  unint64_t result;

  result = qword_256EAC628;
  if (!qword_256EAC628)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72B48, &type metadata for RequestPrescribedPlan.LowConfidenceKnowledgeToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC628);
  }
  return result;
}

unint64_t sub_23F83E700()
{
  unint64_t result;

  result = qword_256EAC630;
  if (!qword_256EAC630)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestPrescribedPlan.LowConfidenceKnowledgeTool, &type metadata for RequestPrescribedPlan.LowConfidenceKnowledgeTool);
    atomic_store(result, (unint64_t *)&qword_256EAC630);
  }
  return result;
}

unint64_t sub_23F83E73C()
{
  unint64_t result;

  result = qword_256EAC638;
  if (!qword_256EAC638)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72AF8, &type metadata for RequestPrescribedPlan.SearchToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC638);
  }
  return result;
}

unint64_t sub_23F83E778()
{
  unint64_t result;

  result = qword_256EAC640;
  if (!qword_256EAC640)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestPrescribedPlan.SearchTool, &type metadata for RequestPrescribedPlan.SearchTool);
    atomic_store(result, (unint64_t *)&qword_256EAC640);
  }
  return result;
}

unint64_t sub_23F83E7B4()
{
  unint64_t result;

  result = qword_256EAC680;
  if (!qword_256EAC680)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestPrescribedPlan.KnowledgeTool, &type metadata for RequestPrescribedPlan.KnowledgeTool);
    atomic_store(result, (unint64_t *)&qword_256EAC680);
  }
  return result;
}

unint64_t sub_23F83E7F0()
{
  unint64_t result;

  result = qword_256EAC688;
  if (!qword_256EAC688)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestPrescribedPlan.DisplayTool, &type metadata for RequestPrescribedPlan.DisplayTool);
    atomic_store(result, (unint64_t *)&qword_256EAC688);
  }
  return result;
}

unint64_t sub_23F83E82C()
{
  unint64_t result;

  result = qword_256EAC690;
  if (!qword_256EAC690)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestPrescribedPlan.ConvertTool, &type metadata for RequestPrescribedPlan.ConvertTool);
    atomic_store(result, (unint64_t *)&qword_256EAC690);
  }
  return result;
}

unint64_t sub_23F83E868()
{
  unint64_t result;

  result = qword_256EAC698;
  if (!qword_256EAC698)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestPrescribedPlan.TextTool, &type metadata for RequestPrescribedPlan.TextTool);
    atomic_store(result, (unint64_t *)&qword_256EAC698);
  }
  return result;
}

unint64_t sub_23F83E8A4()
{
  unint64_t result;

  result = qword_256EAC6A0;
  if (!qword_256EAC6A0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestPrescribedPlan.LowConfidenceKnowledgeTool, &type metadata for RequestPrescribedPlan.LowConfidenceKnowledgeTool);
    atomic_store(result, (unint64_t *)&qword_256EAC6A0);
  }
  return result;
}

unint64_t sub_23F83E8E0()
{
  unint64_t result;

  result = qword_256EAC6A8;
  if (!qword_256EAC6A8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestPrescribedPlan.SearchTool, &type metadata for RequestPrescribedPlan.SearchTool);
    atomic_store(result, (unint64_t *)&qword_256EAC6A8);
  }
  return result;
}

unint64_t sub_23F83E91C()
{
  unint64_t result;

  result = qword_256EAC6B8;
  if (!qword_256EAC6B8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72AA8, &type metadata for RequestPrescribedPlan.SearchTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC6B8);
  }
  return result;
}

unint64_t sub_23F83E958()
{
  unint64_t result;

  result = qword_256EAC6D0;
  if (!qword_256EAC6D0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72A58, &type metadata for RequestPrescribedPlan.LowConfidenceKnowledgeTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC6D0);
  }
  return result;
}

unint64_t sub_23F83E994()
{
  unint64_t result;

  result = qword_256EAC6E8;
  if (!qword_256EAC6E8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72A08, &type metadata for RequestPrescribedPlan.GenerateRichContentTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC6E8);
  }
  return result;
}

unint64_t sub_23F83E9D0()
{
  unint64_t result;

  result = qword_256EAC700;
  if (!qword_256EAC700)
  {
    result = MEMORY[0x242674E5C](&unk_23FB729B8, &type metadata for RequestPrescribedPlan.GenerateRichContentFromMediaIntentTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC700);
  }
  return result;
}

unint64_t sub_23F83EA0C()
{
  unint64_t result;

  result = qword_256EAC718;
  if (!qword_256EAC718)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72968, &type metadata for RequestPrescribedPlan.GenerateImageIntentTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC718);
  }
  return result;
}

unint64_t sub_23F83EA48()
{
  unint64_t result;

  result = qword_256EAC730;
  if (!qword_256EAC730)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72918, &type metadata for RequestPrescribedPlan.TextTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC730);
  }
  return result;
}

unint64_t sub_23F83EA84()
{
  unint64_t result;

  result = qword_256EAC748;
  if (!qword_256EAC748)
  {
    result = MEMORY[0x242674E5C](&unk_23FB728C8, &type metadata for RequestPrescribedPlan.ConvertTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC748);
  }
  return result;
}

unint64_t sub_23F83EAC0()
{
  unint64_t result;

  result = qword_256EAC760;
  if (!qword_256EAC760)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72878, &type metadata for RequestPrescribedPlan.DisplayTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC760);
  }
  return result;
}

unint64_t sub_23F83EAFC()
{
  unint64_t result;

  result = qword_256EAC778;
  if (!qword_256EAC778)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72828, &type metadata for RequestPrescribedPlan.KnowledgeTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC778);
  }
  return result;
}

unint64_t sub_23F83EB38()
{
  unint64_t result;

  result = qword_256EAC790;
  if (!qword_256EAC790)
  {
    result = MEMORY[0x242674E5C](&unk_23FB727D8, &type metadata for ProgramStatement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC790);
  }
  return result;
}

unint64_t sub_23F83EB74()
{
  unint64_t result;

  result = qword_256EAC7C8;
  if (!qword_256EAC7C8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72788, &type metadata for SpeechQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC7C8);
  }
  return result;
}

unint64_t sub_23F83EBB0()
{
  unint64_t result;

  result = qword_256EAC7E0;
  if (!qword_256EAC7E0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72738, &type metadata for TextQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC7E0);
  }
  return result;
}

unint64_t sub_23F83EBEC()
{
  unint64_t result;

  result = qword_256EAC7F8;
  if (!qword_256EAC7F8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB726E8, &type metadata for ExecutionStepResults.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC7F8);
  }
  return result;
}

unint64_t sub_23F83EC28()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256EAC808;
  if (!qword_256EAC808)
  {
    v1 = sub_23F6AE310(&qword_256EAC800);
    sub_23F6B4EEC((uint64_t)&unk_256EAC810);
    v3 = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256EAC808);
  }
  return result;
}

uint64_t type metadata accessor for ExecutionStepResult(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAE1E8);
}

unint64_t sub_23F83ECB8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256EAC820;
  if (!qword_256EAC820)
  {
    v1 = sub_23F6AE310(&qword_256EAC800);
    sub_23F6B4EEC((uint64_t)&unk_256EAC828);
    v3 = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256EAC820);
  }
  return result;
}

uint64_t type metadata accessor for ToolParameterValue(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EADBF8);
}

unint64_t sub_23F83ED48()
{
  unint64_t result;

  result = qword_256EAC848;
  if (!qword_256EAC848)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72698, &type metadata for ToolParameterValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC848);
  }
  return result;
}

unint64_t sub_23F83ED84()
{
  unint64_t result;

  result = qword_256EAC850;
  if (!qword_256EAC850)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72648, &type metadata for ToolParameterValue.ValueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC850);
  }
  return result;
}

unint64_t sub_23F83EDC0()
{
  unint64_t result;

  result = qword_256EAC858;
  if (!qword_256EAC858)
  {
    result = MEMORY[0x242674E5C](&unk_23FB725F8, &type metadata for ToolParameterValue.ReferenceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC858);
  }
  return result;
}

unint64_t sub_23F83EDFC()
{
  unint64_t result;

  result = qword_256EAC880;
  if (!qword_256EAC880)
  {
    result = MEMORY[0x242674E5C](&unk_23FB725A8, &type metadata for Action.ParameterValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC880);
  }
  return result;
}

unint64_t sub_23F83EE38()
{
  unint64_t result;

  result = qword_256EAC8B8;
  if (!qword_256EAC8B8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72558, &type metadata for Action.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC8B8);
  }
  return result;
}

unint64_t sub_23F83EE74()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256EAC8C8;
  if (!qword_256EAC8C8)
  {
    v1 = sub_23F6AE310(&qword_256EAC8C0);
    sub_23F6B4EEC((uint64_t)&unk_256EAC8D0);
    v3[0] = MEMORY[0x24BEE0D08];
    v3[1] = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256EAC8C8);
  }
  return result;
}

unint64_t sub_23F83EEF8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256EAC8E0;
  if (!qword_256EAC8E0)
  {
    v1 = sub_23F6AE310(&qword_256EAC8C0);
    sub_23F6B4EEC((uint64_t)&unk_256EAC8E8);
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256EAC8E0);
  }
  return result;
}

unint64_t sub_23F83EF7C()
{
  unint64_t result;

  result = qword_256EAC8F8;
  if (!qword_256EAC8F8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72508, &type metadata for ActionCancellation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC8F8);
  }
  return result;
}

uint64_t type metadata accessor for ClientAction.UnresolvedParameterValue(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EADFA0);
}

uint64_t type metadata accessor for ClientAction.ShimParameterResolution(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EADF10);
}

unint64_t sub_23F83EFE0()
{
  unint64_t result;

  result = qword_256EAC920;
  if (!qword_256EAC920)
  {
    result = MEMORY[0x242674E5C](&unk_23FB724B8, &type metadata for ClientAction.ShimParameterResolution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC920);
  }
  return result;
}

unint64_t sub_23F83F01C()
{
  unint64_t result;

  result = qword_256EAC928;
  if (!qword_256EAC928)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72468, &type metadata for ClientAction.ShimParameterResolution.UnresolvedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC928);
  }
  return result;
}

unint64_t sub_23F83F058()
{
  unint64_t result;

  result = qword_256EAC938;
  if (!qword_256EAC938)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72418, &type metadata for ClientAction.ShimParameterResolution.ResolvedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC938);
  }
  return result;
}

unint64_t sub_23F83F094()
{
  unint64_t result;

  result = qword_256EAC968;
  if (!qword_256EAC968)
  {
    result = MEMORY[0x242674E5C](&unk_23FB723C8, &type metadata for ClientAction.UnresolvedParameterValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC968);
  }
  return result;
}

unint64_t sub_23F83F0D0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256EA9268;
  if (!qword_256EA9268)
  {
    v1 = sub_23F6AE310(&qword_256EA9260);
    sub_23F6B4EEC((uint64_t)&qword_256EA7170);
    v3 = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256EA9268);
  }
  return result;
}

unint64_t sub_23F83F14C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256EA9280;
  if (!qword_256EA9280)
  {
    v1 = sub_23F6AE310(&qword_256EA9260);
    sub_23F6B4EEC((uint64_t)&qword_256EA7188);
    v3 = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256EA9280);
  }
  return result;
}

unint64_t sub_23F83F1C8()
{
  unint64_t result;

  result = qword_256EAC980;
  if (!qword_256EAC980)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72378, &type metadata for ClientAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC980);
  }
  return result;
}

unint64_t sub_23F83F204()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256EAC990;
  if (!qword_256EAC990)
  {
    v1 = sub_23F6AE310(&qword_256EAC988);
    sub_23F6B4EEC((uint64_t)&unk_256EAC998);
    v3[0] = MEMORY[0x24BEE0D08];
    v3[1] = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256EAC990);
  }
  return result;
}

unint64_t sub_23F83F288()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256EAC9A8;
  if (!qword_256EAC9A8)
  {
    v1 = sub_23F6AE310(&qword_256EAC988);
    sub_23F6B4EEC((uint64_t)&unk_256EAC9B0);
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256EAC9A8);
  }
  return result;
}

unint64_t sub_23F83F30C()
{
  unint64_t result;

  result = qword_256EAC9C0;
  if (!qword_256EAC9C0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72328, &type metadata for QueryStep.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAC9C0);
  }
  return result;
}

unint64_t sub_23F83F348()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256EAC9D0;
  if (!qword_256EAC9D0)
  {
    v1 = sub_23F6AE310(&qword_256EAC9C8);
    sub_23F6B4EEC((uint64_t)&unk_256EAC9D8);
    v3 = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256EAC9D0);
  }
  return result;
}

unint64_t sub_23F83F3C4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256EAC9E8;
  if (!qword_256EAC9E8)
  {
    v1 = sub_23F6AE310(&qword_256EAC9C8);
    sub_23F6B4EEC((uint64_t)&unk_256EAC9F0);
    v3 = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256EAC9E8);
  }
  return result;
}

uint64_t type metadata accessor for QueryData(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAE290);
}

uint64_t type metadata accessor for PropertyQuery(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAE338);
}

unint64_t sub_23F83F468()
{
  unint64_t result;

  result = qword_256EACA08;
  if (!qword_256EACA08)
  {
    result = MEMORY[0x242674E5C](&unk_23FB722D8, &type metadata for ParameterQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACA08);
  }
  return result;
}

unint64_t sub_23F83F4A4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_256EACA20;
  if (!qword_256EACA20)
  {
    v1 = sub_23F6AE310(&qword_256EACA18);
    sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
    v3 = v2;
    sub_23F6B4EEC((uint64_t)&qword_256EA7170);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE04C0], v1, v5);
    atomic_store(result, (unint64_t *)&qword_256EACA20);
  }
  return result;
}

unint64_t sub_23F83F540()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_256EACA38;
  if (!qword_256EACA38)
  {
    v1 = sub_23F6AE310(&qword_256EACA18);
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    v3 = v2;
    sub_23F6B4EEC((uint64_t)&qword_256EA7188);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE04E0], v1, v5);
    atomic_store(result, (unint64_t *)&qword_256EACA38);
  }
  return result;
}

unint64_t sub_23F83F5DC()
{
  unint64_t result;

  result = qword_256EACA48;
  if (!qword_256EACA48)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72288, &type metadata for VariableStep.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACA48);
  }
  return result;
}

unint64_t sub_23F83F618()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256EACA58;
  if (!qword_256EACA58)
  {
    v1 = sub_23F6AE310(&qword_256EACA50);
    sub_23F6B4EEC((uint64_t)&unk_256EACA60);
    v3 = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256EACA58);
  }
  return result;
}

unint64_t sub_23F83F694()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256EACA70;
  if (!qword_256EACA70)
  {
    v1 = sub_23F6AE310(&qword_256EACA50);
    sub_23F6B4EEC((uint64_t)&unk_256EACA78);
    v3 = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256EACA70);
  }
  return result;
}

uint64_t type metadata accessor for ActionResult(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAEA60);
}

unint64_t sub_23F83F724()
{
  unint64_t result;

  result = qword_256EACA88;
  if (!qword_256EACA88)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72238, &type metadata for ExecutionStepResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACA88);
  }
  return result;
}

uint64_t type metadata accessor for QueryPredicate(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAE458);
}

unint64_t sub_23F83F774()
{
  unint64_t result;

  result = qword_256EACAD8;
  if (!qword_256EACAD8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB721E8, &type metadata for QueryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACAD8);
  }
  return result;
}

unint64_t sub_23F83F7B0()
{
  unint64_t result;

  result = qword_256EACAE0;
  if (!qword_256EACAE0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72198, &type metadata for QueryData.SystemQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACAE0);
  }
  return result;
}

unint64_t sub_23F83F7EC()
{
  unint64_t result;

  result = qword_256EACAE8;
  if (!qword_256EACAE8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72148, &type metadata for QueryData.PropertyQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACAE8);
  }
  return result;
}

unint64_t sub_23F83F828()
{
  unint64_t result;

  result = qword_256EACAF8;
  if (!qword_256EACAF8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB720F8, &type metadata for QueryData.StringQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACAF8);
  }
  return result;
}

unint64_t sub_23F83F864()
{
  unint64_t result;

  result = qword_256EACB00;
  if (!qword_256EACB00)
  {
    result = MEMORY[0x242674E5C](&unk_23FB720A8, &type metadata for QueryData.IdentifierQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACB00);
  }
  return result;
}

unint64_t sub_23F83F8A0()
{
  unint64_t result;

  result = qword_256EACB58;
  if (!qword_256EACB58)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72058, &type metadata for PropertyQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACB58);
  }
  return result;
}

unint64_t sub_23F83F8DC()
{
  unint64_t result;

  result = qword_256EACB60;
  if (!qword_256EACB60)
  {
    result = MEMORY[0x242674E5C](&unk_23FB72008, &type metadata for PropertyQuery.OrCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACB60);
  }
  return result;
}

unint64_t sub_23F83F918()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256EACB70;
  if (!qword_256EACB70)
  {
    v1 = sub_23F6AE310(&qword_256EACB68);
    sub_23F6B4EEC((uint64_t)&unk_256EACB78);
    v3 = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256EACB70);
  }
  return result;
}

unint64_t sub_23F83F994()
{
  unint64_t result;

  result = qword_256EACB80;
  if (!qword_256EACB80)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71FB8, &type metadata for PropertyQuery.AndCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACB80);
  }
  return result;
}

unint64_t sub_23F83F9D0()
{
  unint64_t result;

  result = qword_256EACB88;
  if (!qword_256EACB88)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71F68, &type metadata for PropertyQuery.CompareCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACB88);
  }
  return result;
}

unint64_t sub_23F83FA0C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256EACBB0;
  if (!qword_256EACBB0)
  {
    v1 = sub_23F6AE310(&qword_256EACB68);
    sub_23F6B4EEC((uint64_t)&unk_256EACBB8);
    v3 = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256EACBB0);
  }
  return result;
}

unint64_t sub_23F83FA88()
{
  unint64_t result;

  result = qword_256EACBC8;
  if (!qword_256EACBC8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71F18, &type metadata for VariableSetter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACBC8);
  }
  return result;
}

unint64_t sub_23F83FAC4()
{
  unint64_t result;

  result = qword_256EACBE0;
  if (!qword_256EACBE0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71EC8, &type metadata for QueryPredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACBE0);
  }
  return result;
}

unint64_t sub_23F83FB00()
{
  unint64_t result;

  result = qword_256EACBE8;
  if (!qword_256EACBE8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for QueryOperator, &type metadata for QueryOperator);
    atomic_store(result, (unint64_t *)&qword_256EACBE8);
  }
  return result;
}

unint64_t sub_23F83FB3C()
{
  unint64_t result;

  result = qword_256EACBF8;
  if (!qword_256EACBF8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for QueryOperator, &type metadata for QueryOperator);
    atomic_store(result, (unint64_t *)&qword_256EACBF8);
  }
  return result;
}

unint64_t sub_23F83FB78()
{
  unint64_t result;

  result = qword_256EACC08;
  if (!qword_256EACC08)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71E78, &type metadata for ActionParameterContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACC08);
  }
  return result;
}

unint64_t sub_23F83FBB4()
{
  unint64_t result;

  result = qword_256EACC20;
  if (!qword_256EACC20)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71E28, &type metadata for ActionStepResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACC20);
  }
  return result;
}

unint64_t sub_23F83FBF0()
{
  unint64_t result;

  result = qword_256EACC38;
  if (!qword_256EACC38)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71DD8, &type metadata for StatementResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACC38);
  }
  return result;
}

unint64_t sub_23F83FC2C()
{
  unint64_t result;

  result = qword_256EACC60;
  if (!qword_256EACC60)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71D88, &type metadata for StatementResultPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACC60);
  }
  return result;
}

unint64_t sub_23F83FC68()
{
  unint64_t result;

  result = qword_256EACC98;
  if (!qword_256EACC98)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71D38, &type metadata for ResponseGenerationRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACC98);
  }
  return result;
}

unint64_t sub_23F83FCA4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256EACCA8;
  if (!qword_256EACCA8)
  {
    v1 = sub_23F6AE310(&qword_256EACCA0);
    sub_23F6B4EEC((uint64_t)&qword_256EA8178);
    v3 = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256EACCA8);
  }
  return result;
}

unint64_t sub_23F83FD20()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256EACCB8;
  if (!qword_256EACCB8)
  {
    v1 = sub_23F6AE310(&qword_256EACCA0);
    sub_23F6B4EEC((uint64_t)&qword_256EA81A8);
    v3 = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256EACCB8);
  }
  return result;
}

unint64_t sub_23F83FD9C()
{
  unint64_t result;

  result = qword_256EACCC8;
  if (!qword_256EACCC8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71CE8, &type metadata for QueryStepResults.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACCC8);
  }
  return result;
}

unint64_t sub_23F83FDD8()
{
  unint64_t result;

  result = qword_256EACCE0;
  if (!qword_256EACCE0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for QueryResults, &type metadata for QueryResults);
    atomic_store(result, (unint64_t *)&qword_256EACCE0);
  }
  return result;
}

unint64_t sub_23F83FE14()
{
  unint64_t result;

  result = qword_256EACCF8;
  if (!qword_256EACCF8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for QueryResults, &type metadata for QueryResults);
    atomic_store(result, (unint64_t *)&qword_256EACCF8);
  }
  return result;
}

unint64_t sub_23F83FE50()
{
  unint64_t result;

  result = qword_256EACD08;
  if (!qword_256EACD08)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71C98, &type metadata for QueryResults.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACD08);
  }
  return result;
}

unint64_t sub_23F83FE8C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256EACD18;
  if (!qword_256EACD18)
  {
    v1 = sub_23F6AE310(&qword_256EACD10);
    sub_23F6B4EEC((uint64_t)&unk_256EACD20);
    v3 = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256EACD18);
  }
  return result;
}

unint64_t sub_23F83FF08()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256EACD30;
  if (!qword_256EACD30)
  {
    v1 = sub_23F6AE310(&qword_256EACD10);
    sub_23F6B4EEC((uint64_t)&unk_256EACD38);
    v3 = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256EACD30);
  }
  return result;
}

unint64_t sub_23F83FF84()
{
  unint64_t result;

  result = qword_256EACD60;
  if (!qword_256EACD60)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71C48, &type metadata for Candidate.PromptStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACD60);
  }
  return result;
}

unint64_t sub_23F83FFC0()
{
  unint64_t result;

  result = qword_256EACD68;
  if (!qword_256EACD68)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71BF8, &type metadata for Candidate.PromptStatus.PickedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACD68);
  }
  return result;
}

unint64_t sub_23F83FFFC()
{
  unint64_t result;

  result = qword_256EACD70;
  if (!qword_256EACD70)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71BA8, &type metadata for Candidate.PromptStatus.ConfirmedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACD70);
  }
  return result;
}

unint64_t sub_23F840038()
{
  unint64_t result;

  result = qword_256EACD78;
  if (!qword_256EACD78)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71B58, &type metadata for Candidate.PromptStatus.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACD78);
  }
  return result;
}

unint64_t sub_23F840074()
{
  unint64_t result;

  result = qword_256EACDA8;
  if (!qword_256EACDA8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71B08, &type metadata for Candidate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACDA8);
  }
  return result;
}

unint64_t sub_23F8400B0()
{
  unint64_t result;

  result = qword_256EACDB0;
  if (!qword_256EACDB0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for Candidate.Source, &type metadata for Candidate.Source);
    atomic_store(result, (unint64_t *)&qword_256EACDB0);
  }
  return result;
}

unint64_t sub_23F8400EC()
{
  unint64_t result;

  result = qword_256EACDB8;
  if (!qword_256EACDB8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for Candidate.PromptStatus, &type metadata for Candidate.PromptStatus);
    atomic_store(result, (unint64_t *)&qword_256EACDB8);
  }
  return result;
}

unint64_t sub_23F840128()
{
  unint64_t result;

  result = qword_256EACDC8;
  if (!qword_256EACDC8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for Candidate.Source, &type metadata for Candidate.Source);
    atomic_store(result, (unint64_t *)&qword_256EACDC8);
  }
  return result;
}

unint64_t sub_23F840164()
{
  unint64_t result;

  result = qword_256EACDD0;
  if (!qword_256EACDD0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for Candidate.PromptStatus, &type metadata for Candidate.PromptStatus);
    atomic_store(result, (unint64_t *)&qword_256EACDD0);
  }
  return result;
}

unint64_t sub_23F8401A0()
{
  unint64_t result;

  result = qword_256EACDD8;
  if (!qword_256EACDD8)
  {
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE1E38], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_256EACDD8);
  }
  return result;
}

void sub_23F8401DC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  sub_23F82C2A4(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], a2);
}

unint64_t sub_23F840210()
{
  unint64_t result;

  result = qword_256EACDE8;
  if (!qword_256EACDE8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71AB8, &type metadata for SpeechRequestCandidate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACDE8);
  }
  return result;
}

uint64_t type metadata accessor for ClientEffectInvocation(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAE918);
}

unint64_t sub_23F840260()
{
  unint64_t result;

  result = qword_256EACE00;
  if (!qword_256EACE00)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71A68, &type metadata for ClientEffectInvocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACE00);
  }
  return result;
}

uint64_t type metadata accessor for ClientEffectResult(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EAE9D0);
}

unint64_t sub_23F8402B0()
{
  unint64_t result;

  result = qword_256EACE28;
  if (!qword_256EACE28)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71A18, &type metadata for ClientEffectResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACE28);
  }
  return result;
}

unint64_t sub_23F8402EC()
{
  unint64_t result;

  result = qword_256EACE30;
  if (!qword_256EACE30)
  {
    result = MEMORY[0x242674E5C](&unk_23FB719C8, &type metadata for ClientEffectResult.ErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACE30);
  }
  return result;
}

unint64_t sub_23F840328()
{
  unint64_t result;

  result = qword_256EACE38;
  if (!qword_256EACE38)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71978, &type metadata for ClientEffectResult.CompleteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACE38);
  }
  return result;
}

uint64_t sub_23F840364(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F6916B8(&qword_256EA2780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_23F8403AC()
{
  unint64_t result;

  result = qword_256EACE60;
  if (!qword_256EACE60)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71928, &type metadata for ActionResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACE60);
  }
  return result;
}

unint64_t sub_23F8403E8()
{
  unint64_t result;

  result = qword_256EACE98;
  if (!qword_256EACE98)
  {
    result = MEMORY[0x242674E5C](&unk_23FB718D8, &type metadata for ActionResolverRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACE98);
  }
  return result;
}

unint64_t sub_23F840424()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_256EACEA0;
  if (!qword_256EACEA0)
  {
    v1 = sub_23F6AE310(&qword_256EA98F8);
    v2 = sub_23F8404A8();
    sub_23F6B4EEC((uint64_t)&unk_256EACD20);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE04C0], v1, v4);
    atomic_store(result, (unint64_t *)&qword_256EACEA0);
  }
  return result;
}

unint64_t sub_23F8404A8()
{
  unint64_t result;

  result = qword_256EACEA8;
  if (!qword_256EACEA8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ParameterPath, &type metadata for ParameterPath);
    atomic_store(result, (unint64_t *)&qword_256EACEA8);
  }
  return result;
}

unint64_t sub_23F8404E4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_256EACEC8;
  if (!qword_256EACEC8)
  {
    v1 = sub_23F6AE310(&qword_256EA98F8);
    v2 = sub_23F840568();
    sub_23F6B4EEC((uint64_t)&unk_256EACD38);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE04E0], v1, v4);
    atomic_store(result, (unint64_t *)&qword_256EACEC8);
  }
  return result;
}

unint64_t sub_23F840568()
{
  unint64_t result;

  result = qword_256EACED0;
  if (!qword_256EACED0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ParameterPath, &type metadata for ParameterPath);
    atomic_store(result, (unint64_t *)&qword_256EACED0);
  }
  return result;
}

void sub_23F8405A4(uint64_t a1)
{
  unint64_t *v1;
  uint64_t *v2;
  void (*v3)(void);
  void (*v4)(void);
  uint64_t v5;

  if (!sub_23F6B6A68(a1))
  {
    v4 = v3;
    sub_23F6AE310(v2);
    v4();
    v5 = sub_23F6B619C();
    atomic_store(MEMORY[0x242674E5C](v5), v1);
  }
  sub_23F6B6664();
}

unint64_t sub_23F8405F4()
{
  unint64_t result;

  result = qword_256EACEE8;
  if (!qword_256EACEE8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71888, &type metadata for ParameterPath.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACEE8);
  }
  return result;
}

unint64_t sub_23F840630()
{
  unint64_t result;

  result = qword_256EACF00;
  if (!qword_256EACF00)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71838, &type metadata for ClientInitiatedClientAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACF00);
  }
  return result;
}

unint64_t sub_23F84066C()
{
  unint64_t result;

  result = qword_256EACF18;
  if (!qword_256EACF18)
  {
    result = MEMORY[0x242674E5C](&unk_23FB717E8, &type metadata for ContextPrewarmRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACF18);
  }
  return result;
}

unint64_t sub_23F8406A8()
{
  unint64_t result;

  result = qword_256EACF30;
  if (!qword_256EACF30)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71798, &type metadata for ContextPrewarmCompleted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACF30);
  }
  return result;
}

unint64_t sub_23F8406E4()
{
  unint64_t result;

  result = qword_256EACF48;
  if (!qword_256EACF48)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71748, &type metadata for SafetyModeRelease.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACF48);
  }
  return result;
}

unint64_t sub_23F840720()
{
  unint64_t result;

  result = qword_256EACF58;
  if (!qword_256EACF58)
  {
    result = MEMORY[0x242674E5C](&unk_23FB716F8, &type metadata for SafetyModeException.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACF58);
  }
  return result;
}

unint64_t sub_23F84075C()
{
  unint64_t result;

  result = qword_256EACF70;
  if (!qword_256EACF70)
  {
    result = MEMORY[0x242674E5C](&unk_23FB716A8, &type metadata for ContextRetrieved.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACF70);
  }
  return result;
}

unint64_t sub_23F840798()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256EACF80;
  if (!qword_256EACF80)
  {
    v1 = sub_23F6AE310(&qword_256EACF78);
    sub_23F6B4EEC((uint64_t)&unk_256EACF88);
    v3 = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256EACF80);
  }
  return result;
}

unint64_t sub_23F840814()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256EACF98;
  if (!qword_256EACF98)
  {
    v1 = sub_23F6AE310(&qword_256EACF78);
    sub_23F6B4EEC((uint64_t)&unk_256EACFA0);
    v3 = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256EACF98);
  }
  return result;
}

unint64_t sub_23F840890()
{
  unint64_t result;

  result = qword_256EACFB0;
  if (!qword_256EACFB0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71658, &type metadata for RetrievedContextStatement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACFB0);
  }
  return result;
}

unint64_t sub_23F8408CC()
{
  unint64_t result;

  result = qword_256EACFC8;
  if (!qword_256EACFC8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71608, &type metadata for DynamicEnumerationEntityStatement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACFC8);
  }
  return result;
}

unint64_t sub_23F840908()
{
  unint64_t result;

  result = qword_256EACFF0;
  if (!qword_256EACFF0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB715B8, &type metadata for EntitySpanMatchResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EACFF0);
  }
  return result;
}

unint64_t sub_23F840944()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256EA7C10;
  if (!qword_256EA7C10)
  {
    v1 = sub_23F6AE310(&qword_256EA46E0);
    sub_23F6B4EEC((uint64_t)&qword_256EA7C18);
    v3 = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256EA7C10);
  }
  return result;
}

unint64_t sub_23F8409C0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256EA7C28;
  if (!qword_256EA7C28)
  {
    v1 = sub_23F6AE310(&qword_256EA46E0);
    sub_23F6B4EEC((uint64_t)&qword_256EA7C30);
    v3 = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256EA7C28);
  }
  return result;
}

unint64_t sub_23F840A3C()
{
  unint64_t result;

  result = qword_256EAD008;
  if (!qword_256EAD008)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71568, &type metadata for ToolRetrievalResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAD008);
  }
  return result;
}

unint64_t sub_23F840A78()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256EAD018;
  if (!qword_256EAD018)
  {
    v1 = sub_23F6AE310(&qword_256EAD010);
    sub_23F6B4EEC((uint64_t)&unk_256EAD020);
    v3 = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256EAD018);
  }
  return result;
}

unint64_t sub_23F840AF4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_256EAD030;
  if (!qword_256EAD030)
  {
    v1 = sub_23F6AE310(&qword_256EAD028);
    sub_23F6B4EEC((uint64_t)&unk_256EAD038);
    v3 = v2;
    sub_23F6B4EEC((uint64_t)&unk_256EAD040);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE04C0], v1, v5);
    atomic_store(result, (unint64_t *)&qword_256EAD030);
  }
  return result;
}

unint64_t sub_23F840B90()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256EAD050;
  if (!qword_256EAD050)
  {
    v1 = sub_23F6AE310(&qword_256EAD010);
    sub_23F6B4EEC((uint64_t)&unk_256EAD058);
    v3 = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256EAD050);
  }
  return result;
}

unint64_t sub_23F840C0C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_256EAD060;
  if (!qword_256EAD060)
  {
    v1 = sub_23F6AE310(&qword_256EAD028);
    sub_23F6B4EEC((uint64_t)&unk_256EAD068);
    v3 = v2;
    sub_23F6B4EEC((uint64_t)&unk_256EAD070);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE04E0], v1, v5);
    atomic_store(result, (unint64_t *)&qword_256EAD060);
  }
  return result;
}

unint64_t sub_23F840CA8()
{
  unint64_t result;

  result = qword_256EAD080;
  if (!qword_256EAD080)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71518, &type metadata for ExternalAgentTextQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAD080);
  }
  return result;
}

unint64_t sub_23F840CE4()
{
  unint64_t result;

  result = qword_256EAD098;
  if (!qword_256EAD098)
  {
    result = MEMORY[0x242674E5C](&unk_23FB714C8, &type metadata for ExternalAgentSpeechQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAD098);
  }
  return result;
}

unint64_t sub_23F840D20()
{
  unint64_t result;

  result = qword_256EAD0B0;
  if (!qword_256EAD0B0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71478, &type metadata for ExternalAgentOutcome.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAD0B0);
  }
  return result;
}

unint64_t sub_23F840D5C()
{
  unint64_t result;

  result = qword_256EAD0C8;
  if (!qword_256EAD0C8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71428, &type metadata for ExternalAgentRequestRewriteMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAD0C8);
  }
  return result;
}

unint64_t sub_23F840D98()
{
  unint64_t result;

  result = qword_256EAD0E0;
  if (!qword_256EAD0E0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB713D8, &type metadata for ToolResolution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAD0E0);
  }
  return result;
}

unint64_t sub_23F840DD4()
{
  unint64_t result;

  result = qword_256EAD0F8;
  if (!qword_256EAD0F8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71388, &type metadata for TypeConversionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAD0F8);
  }
  return result;
}

unint64_t sub_23F840E10()
{
  unint64_t result;

  result = qword_256EAD110;
  if (!qword_256EAD110)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71338, &type metadata for TypeConversionResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAD110);
  }
  return result;
}

void sub_23F840E4C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = sub_23F6B6B88(a1, a2, a3);
  sub_23F7B0990(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40));
  sub_23F694CC8();
}

unint64_t sub_23F840E7C()
{
  unint64_t result;

  result = qword_256EAD128;
  if (!qword_256EAD128)
  {
    result = MEMORY[0x242674E5C](&unk_23FB712E8, &type metadata for QueryDecorationResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAD128);
  }
  return result;
}

unint64_t sub_23F840EB8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256EAD140;
  if (!qword_256EAD140)
  {
    v1 = sub_23F6AE310(&qword_256EAD138);
    sub_23F6B4EEC((uint64_t)&unk_256EAD148);
    v3 = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256EAD140);
  }
  return result;
}

unint64_t sub_23F840F34()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256EAD160;
  if (!qword_256EAD160)
  {
    v1 = sub_23F6AE310(&qword_256EAD138);
    sub_23F6B4EEC((uint64_t)&unk_256EAD168);
    v3 = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256EAD160);
  }
  return result;
}

unint64_t sub_23F840FB0()
{
  unint64_t result;

  result = qword_256EAD178;
  if (!qword_256EAD178)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71298, &type metadata for QueryDecorationPrePlannerResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAD178);
  }
  return result;
}

unint64_t sub_23F840FEC()
{
  unint64_t result;

  result = qword_256EAD180;
  if (!qword_256EAD180)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for QueryDecorationPrePlannerResultPayload, &type metadata for QueryDecorationPrePlannerResultPayload);
    atomic_store(result, (unint64_t *)&qword_256EAD180);
  }
  return result;
}

unint64_t sub_23F841028()
{
  unint64_t result;

  result = qword_256EAD190;
  if (!qword_256EAD190)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for QueryDecorationPrePlannerResultPayload, &type metadata for QueryDecorationPrePlannerResultPayload);
    atomic_store(result, (unint64_t *)&qword_256EAD190);
  }
  return result;
}

unint64_t sub_23F841064()
{
  unint64_t result;

  result = qword_256EAD1D0;
  if (!qword_256EAD1D0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71248, &type metadata for QueryDecorationPrePlannerResultPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAD1D0);
  }
  return result;
}

unint64_t sub_23F8410A0()
{
  unint64_t result;

  result = qword_256EAD1D8;
  if (!qword_256EAD1D8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB711F8, &type metadata for QueryDecorationPrePlannerResultPayload.ToolQueryOutputsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAD1D8);
  }
  return result;
}

unint64_t sub_23F8410DC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256EAD1E8;
  if (!qword_256EAD1E8)
  {
    v1 = sub_23F6AE310(&qword_256EAD1E0);
    sub_23F6B4EEC((uint64_t)&unk_256EAD1F0);
    v3 = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256EAD1E8);
  }
  return result;
}

unint64_t sub_23F841158()
{
  unint64_t result;

  result = qword_256EAD1F8;
  if (!qword_256EAD1F8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB711A8, &type metadata for QueryDecorationPrePlannerResultPayload.RetrievedToolsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAD1F8);
  }
  return result;
}

unint64_t sub_23F841194()
{
  unint64_t result;

  result = qword_256EAD200;
  if (!qword_256EAD200)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71158, &type metadata for QueryDecorationPrePlannerResultPayload.EntitySpanMatchResultsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAD200);
  }
  return result;
}

unint64_t sub_23F8411D0()
{
  unint64_t result;

  result = qword_256EAD208;
  if (!qword_256EAD208)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71108, &type metadata for QueryDecorationPrePlannerResultPayload.RetrievedContextsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAD208);
  }
  return result;
}

unint64_t sub_23F84120C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256EA4520;
  if (!qword_256EA4520)
  {
    v1 = sub_23F6AE310(&qword_256EA4518);
    sub_23F6B4EEC((uint64_t)&qword_256EA4528);
    v3 = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256EA4520);
  }
  return result;
}

unint64_t sub_23F841288()
{
  unint64_t result;

  result = qword_256EAD210;
  if (!qword_256EAD210)
  {
    result = MEMORY[0x242674E5C](&unk_23FB710B8, &type metadata for QueryDecorationPrePlannerResultPayload.TypedValuesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAD210);
  }
  return result;
}

unint64_t sub_23F8412C4()
{
  unint64_t result;

  result = qword_256EAD218;
  if (!qword_256EAD218)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71068, &type metadata for QueryDecorationPrePlannerResultPayload.StringsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAD218);
  }
  return result;
}

unint64_t sub_23F841300()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256EAD258;
  if (!qword_256EAD258)
  {
    v1 = sub_23F6AE310(&qword_256EAD1E0);
    sub_23F6B4EEC((uint64_t)&unk_256EAD260);
    v3 = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256EAD258);
  }
  return result;
}

unint64_t sub_23F84137C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256EA4538;
  if (!qword_256EA4538)
  {
    v1 = sub_23F6AE310(&qword_256EA4518);
    sub_23F6B4EEC((uint64_t)&qword_256EA4540);
    v3 = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256EA4538);
  }
  return result;
}

unint64_t sub_23F8413F8()
{
  unint64_t result;

  result = qword_256EAD280;
  if (!qword_256EAD280)
  {
    result = MEMORY[0x242674E5C](&unk_23FB71018, &type metadata for UndoOperation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAD280);
  }
  return result;
}

unint64_t sub_23F841434()
{
  unint64_t result;

  result = qword_256EAD288;
  if (!qword_256EAD288)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70FC8, &type metadata for UndoOperation.RedoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAD288);
  }
  return result;
}

unint64_t sub_23F841470()
{
  unint64_t result;

  result = qword_256EAD290;
  if (!qword_256EAD290)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70F78, &type metadata for UndoOperation.UndoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAD290);
  }
  return result;
}

unint64_t sub_23F8414AC()
{
  unint64_t result;

  result = qword_256EAD2B8;
  if (!qword_256EAD2B8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70F28, &type metadata for UndoRedoRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAD2B8);
  }
  return result;
}

unint64_t sub_23F8414E8()
{
  unint64_t result;

  result = qword_256EAD2D0;
  if (!qword_256EAD2D0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70ED8, &type metadata for ClientUndoRedoRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAD2D0);
  }
  return result;
}

unint64_t sub_23F841524()
{
  unint64_t result;

  result = qword_256EAD2E8;
  if (!qword_256EAD2E8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70E88, &type metadata for ContinuePlanning.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAD2E8);
  }
  return result;
}

unint64_t sub_23F841564()
{
  unint64_t result;

  result = qword_256EAD2F0;
  if (!qword_256EAD2F0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for Session.Event.Payload.QueryTrackingBehavior, &type metadata for Session.Event.Payload.QueryTrackingBehavior);
    atomic_store(result, (unint64_t *)&qword_256EAD2F0);
  }
  return result;
}

void sub_23F8415A0()
{
  sub_23F6B4EEC((uint64_t)&qword_256EA27C8);
}

unint64_t sub_23F8415D0()
{
  unint64_t result;

  result = qword_256EAD2F8;
  if (!qword_256EAD2F8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for Session.Plan.Source, &type metadata for Session.Plan.Source);
    atomic_store(result, (unint64_t *)&qword_256EAD2F8);
  }
  return result;
}

void sub_23F84160C()
{
  sub_23F6B4EEC((uint64_t)&unk_256EAD300);
}

void sub_23F841638(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6B4EEC((uint64_t)&unk_256EAD308);
  a1[1] = v2;
  sub_23F6B4EEC((uint64_t)&qword_256EA81A0);
  a1[2] = v3;
  sub_23F6B4EEC((uint64_t)&qword_256EA8170);
  a1[3] = v4;
  sub_23F6B4EEC((uint64_t)&unk_256EAD310);
  a1[4] = v5;
}

void sub_23F8416CC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6B4EEC((uint64_t)&unk_256EAD318);
  a1[1] = v2;
  sub_23F6B4EEC((uint64_t)&unk_256EAC020);
  a1[2] = v3;
  sub_23F6B4EEC((uint64_t)&unk_256EABD20);
  a1[3] = v4;
  sub_23F6B4EEC((uint64_t)&unk_256EAD320);
  a1[4] = v5;
}

unint64_t sub_23F841764()
{
  unint64_t result;

  result = qword_256EAD328;
  if (!qword_256EAD328)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for QueryOperator, &type metadata for QueryOperator);
    atomic_store(result, (unint64_t *)&qword_256EAD328);
  }
  return result;
}

unint64_t sub_23F8417A4()
{
  unint64_t result;

  result = qword_256EAD330;
  if (!qword_256EAD330)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for Candidate.Source, &type metadata for Candidate.Source);
    atomic_store(result, (unint64_t *)&qword_256EAD330);
  }
  return result;
}

unint64_t sub_23F8417E4()
{
  unint64_t result;

  result = qword_256EAD338;
  if (!qword_256EAD338)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for Candidate.PromptStatus, &type metadata for Candidate.PromptStatus);
    atomic_store(result, (unint64_t *)&qword_256EAD338);
  }
  return result;
}

void sub_23F841820()
{
  sub_23F6B4EEC((uint64_t)&unk_256EAD340);
}

unint64_t sub_23F841850()
{
  unint64_t result;

  result = qword_256EAD348;
  if (!qword_256EAD348)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ParameterPath, &type metadata for ParameterPath);
    atomic_store(result, (unint64_t *)&qword_256EAD348);
  }
  return result;
}

unint64_t sub_23F841890()
{
  unint64_t result;

  result = qword_256EAD350;
  if (!qword_256EAD350)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for UndoOperation, &type metadata for UndoOperation);
    atomic_store(result, (unint64_t *)&qword_256EAD350);
  }
  return result;
}

void sub_23F8418CC()
{
  Session.Event.timestamp.getter();
}

void sub_23F8418DC(_QWORD *a1@<X8>)
{
  uint64_t v2;

  Action.parameters.getter();
  *a1 = v2;
  sub_23F694CC8();
}

uint64_t sub_23F841904()
{
  return ClientAction.id.getter();
}

void sub_23F841918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F81FF04(a1, a2, a3, a4, (void (*)(uint64_t))Action.id.setter);
}

uint64_t sub_23F84193C()
{
  return ClientAction.id.getter();
}

void sub_23F841950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F81FF04(a1, a2, a3, a4, (void (*)(uint64_t))ClientAction.id.setter);
}

void sub_23F84196C(_QWORD *a1@<X8>)
{
  uint64_t v2;

  *a1 = ClientAction.variableName.getter();
  a1[1] = v2;
  sub_23F694CC8();
}

void sub_23F841994(uint64_t *a1@<X8>)
{
  *a1 = ClientAction.variableDependencies.getter();
  sub_23F694CC8();
}

void sub_23F8419B8(uint64_t a1@<X8>)
{
  ActionStepResult.stepId.getter(a1);
  sub_23F694CC8();
}

void sub_23F8419D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F8342D0(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], (void (*)(char *))ActionStepResult.stepId.setter);
}

void sub_23F8419F8(uint64_t a1@<X8>)
{
  ActionStepResult.stepId.getter(a1);
  sub_23F694CC8();
}

void sub_23F841A14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F8342D0(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], (void (*)(char *))ActionStepResult.eventId.setter);
}

void sub_23F841A38()
{
  ExternalAgentOutcome.outcome.getter();
  sub_23F694CC8();
}

void sub_23F841A54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F8342D0(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE523C8], (void (*)(char *))ExternalAgentOutcome.outcome.setter);
}

void type metadata accessor for Session()
{
  sub_23F694C70();
}

uint64_t *initializeBufferWithCopyOfBuffer for Session.Transcript(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FB2C4B8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = a3[8];
    v18 = (uint64_t *)((char *)a1 + v16);
    v19 = (uint64_t *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    *(uint64_t *)((char *)a1 + v17) = *(uint64_t *)((char *)a2 + v17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for Session.Transcript(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23FB2C4B8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Session.Transcript(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v6 = sub_23FB2C4B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v15);
  v18 = (_QWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Session.Transcript(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v6 = sub_23FB2C4B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for Session.Transcript(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23FB2C4B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for Session.Transcript(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_23FB2C4B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Session.Transcript()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F841EA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F86A744(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t storeEnumTagSinglePayload for Session.Transcript()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F841EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F86A7A8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t sub_23F841ECC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FB2C4B8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Session.Event(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int EnumCaseMultiPayload;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(void *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int *v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t Step;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t StepResults;
  uint64_t v98;
  void (*v99)(uint64_t, uint64_t, uint64_t);
  uint64_t v100;
  void (*v101)(uint64_t, void *, uint64_t);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  const void *v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void (*v120)(uint64_t, uint64_t, uint64_t);
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void (*v127)(uint64_t, uint64_t, uint64_t);
  uint64_t v128;
  int *v129;
  uint64_t v130;
  void *v131;
  const void *v132;
  uint64_t v133;
  int *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void (*v139)(uint64_t, uint64_t, uint64_t);
  uint64_t v140;
  void *v141;
  const void *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void (*v160)(uint64_t, uint64_t, uint64_t);
  uint64_t v161;
  uint64_t DecorationResult;
  uint64_t v163;
  const void *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  int *v169;
  uint64_t v170;
  _QWORD *v171;
  uint64_t *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  void *v182;
  const void *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t DecorationPrePlannerResult;
  uint64_t v193;
  _QWORD *v194;
  uint64_t *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  _QWORD *v205;
  _QWORD *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  void (*v212)(uint64_t, uint64_t, uint64_t);
  uint64_t v213;
  void *v214;
  const void *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  _QWORD *v220;
  _QWORD *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  void (*v227)(uint64_t, uint64_t, uint64_t);
  uint64_t v228;
  void *v229;
  const void *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  _QWORD *v234;
  _QWORD *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  void (*v241)(uint64_t, uint64_t, uint64_t);
  uint64_t v242;
  void *v243;
  const void *v244;
  uint64_t v245;
  uint64_t v246;
  _QWORD *v247;
  _QWORD *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  void (*v255)(uint64_t, uint64_t, uint64_t);
  int *v256;
  uint64_t v257;
  void *v258;
  const void *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  void (*v266)(uint64_t, uint64_t, uint64_t);
  uint64_t v267;
  _QWORD *v268;
  _QWORD *v269;
  uint64_t v270;
  int v271;
  uint64_t v272;
  uint64_t v273;
  char *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  void (*v278)(uint64_t, uint64_t, uint64_t);
  int *v279;
  uint64_t v280;
  void *v281;
  const void *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  void (*v289)(uint64_t, uint64_t, uint64_t);
  uint64_t v290;
  _QWORD *v291;
  _QWORD *v292;
  uint64_t v293;
  int v294;
  uint64_t v295;
  uint64_t v296;
  char *v297;
  void (*v298)(uint64_t, uint64_t, uint64_t);
  int *v299;
  uint64_t v300;
  void *v301;
  const void *v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  void (*v309)(uint64_t, uint64_t, uint64_t);
  uint64_t v310;
  _QWORD *v311;
  _QWORD *v312;
  uint64_t v313;
  int v314;
  uint64_t v315;
  uint64_t v316;
  char *v317;
  int *v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  unsigned int v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  void *v326;
  const void *v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  void *v332;
  const void *v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  _QWORD *v338;
  _QWORD *v339;
  uint64_t v340;
  _QWORD *v341;
  _QWORD *v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  _QWORD *v346;
  _QWORD *v347;
  uint64_t v348;
  _QWORD *v349;
  _QWORD *v350;
  uint64_t v351;
  uint64_t v352;
  char *v353;
  char *v354;
  uint64_t v355;
  int *v356;
  uint64_t v357;
  uint64_t v358;
  _QWORD *v359;
  _QWORD *v360;
  uint64_t v361;
  char *v362;
  char *v363;
  uint64_t *result;
  char *v365;
  char *v366;
  void *__dsta;
  void *__dstb;
  void *__dst;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  char *v375;
  void (*v376)(char *, char *, uint64_t);
  void (*v377)(void *, const void *, uint64_t);
  uint64_t v378;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  v7 = sub_23FB2C4B8();
  v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  v8(a1, a2, v7);
  v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
  v9 = a3[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v9, 1, v7))
  {
    v12 = sub_23F6916B8(&qword_256EA2798);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8((uint64_t *)v10, (uint64_t *)v11, v7);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v10, 0, 1, v7);
  }
  v14 = a3[7];
  v15 = (uint64_t)a1 + v14;
  v16 = (uint64_t)a2 + v14;
  v17 = type metadata accessor for Session.Event.Payload(0);
  v377 = (void (*)(void *, const void *, uint64_t))v8;
  v378 = v7;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v18 = sub_23FB2C998();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
      v19 = type metadata accessor for SessionStart(0);
      v20 = *(int *)(v19 + 20);
      v21 = v15 + v20;
      v22 = v16 + v20;
      v23 = sub_23FB2C908();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
      *(_BYTE *)(v15 + *(int *)(v19 + 24)) = *(_BYTE *)(v16 + *(int *)(v19 + 24));
      goto LABEL_142;
    case 1u:
      v24 = *(_QWORD *)(v16 + 8);
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *(_QWORD *)(v15 + 8) = v24;
      *(_BYTE *)(v15 + 16) = *(_BYTE *)(v16 + 16);
      v25 = type metadata accessor for TextQuery(0);
      v26 = *(int *)(v25 + 24);
      v27 = v15 + v26;
      v370 = v16 + v26;
      v28 = sub_23FB2C764();
      v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
      swift_bridgeObjectRetain();
      v29(v27, v370, v28);
      v30 = *(int *)(v25 + 28);
      v31 = (_QWORD *)(v15 + v30);
      v32 = (_QWORD *)(v16 + v30);
      v33 = v32[1];
      *v31 = *v32;
      v31[1] = v33;
      swift_bridgeObjectRetain();
      goto LABEL_142;
    case 2u:
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
      v34 = *(_QWORD *)(v16 + 24);
      *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
      *(_QWORD *)(v15 + 24) = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_142;
    case 3u:
      v35 = type metadata accessor for RequestContent(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload != 3)
      {
        if (EnumCaseMultiPayload == 2)
        {
          *(_QWORD *)v15 = *(_QWORD *)v16;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            memcpy((void *)v15, (const void *)v16, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
            goto LABEL_123;
          }
          v37 = *(_QWORD *)(v16 + 8);
          *(_QWORD *)v15 = *(_QWORD *)v16;
          *(_QWORD *)(v15 + 8) = v37;
          v38 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
          __dsta = (void *)(v15 + v38);
          v39 = v16 + v38;
          v40 = sub_23FB2C764();
          v41 = *(void (**)(void *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 16);
          swift_bridgeObjectRetain();
          v41(__dsta, v39, v40);
        }
        goto LABEL_122;
      }
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v16, 1, v7))
      {
        v276 = sub_23F6916B8(&qword_256EA2798);
        memcpy((void *)v15, (const void *)v16, *(_QWORD *)(*(_QWORD *)(v276 - 8) + 64));
      }
      else
      {
        v8((uint64_t *)v15, (uint64_t *)v16, v7);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v15, 0, 1, v7);
      }
      v278 = (void (*)(uint64_t, uint64_t, uint64_t))v8;
      v279 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
      v278(v15 + v279[5], v16 + v279[5], v7);
      v280 = v279[6];
      v281 = (void *)(v15 + v280);
      v282 = (const void *)(v16 + v280);
      v283 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v284 = sub_23FB2ED38();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v284 - 8) + 16))(v281, v282, v284);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v281, v282, *(_QWORD *)(*(_QWORD *)(v283 - 8) + 64));
      }
      v285 = v279[7];
      v286 = v15 + v285;
      v287 = v16 + v285;
      v288 = sub_23FB2C764();
      v289 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v288 - 8) + 16);
      v289(v286, v287, v288);
      v290 = v279[8];
      v291 = (_QWORD *)(v15 + v290);
      v292 = (_QWORD *)(v16 + v290);
      v293 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
      v294 = swift_getEnumCaseMultiPayload();
      if (v294 == 1)
      {
        *v291 = *v292;
        swift_bridgeObjectRetain();
        goto LABEL_120;
      }
      if (!v294)
      {
        v295 = v292[1];
        *v291 = *v292;
        v291[1] = v295;
        v296 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
        v365 = (char *)v291 + v296;
        v297 = (char *)v292 + v296;
        swift_bridgeObjectRetain();
        v289((uint64_t)v365, (uint64_t)v297, v288);
LABEL_120:
        swift_storeEnumTagMultiPayload();
        goto LABEL_122;
      }
      memcpy(v291, v292, *(_QWORD *)(*(_QWORD *)(v293 - 8) + 64));
LABEL_122:
      swift_storeEnumTagMultiPayload();
LABEL_123:
      v318 = (int *)type metadata accessor for Request(0);
      *(_BYTE *)(v15 + v318[5]) = *(_BYTE *)(v16 + v318[5]);
      v319 = v318[6];
      v320 = v15 + v319;
      v321 = v16 + v319;
      v322 = *(unsigned __int8 *)(v321 + 16);
      if (v322 <= 0xFD)
      {
        v323 = *(_QWORD *)v321;
        v324 = *(_QWORD *)(v321 + 8);
        sub_23F73515C(*(_QWORD *)v321, v324, *(_BYTE *)(v321 + 16));
        *(_QWORD *)v320 = v323;
        *(_QWORD *)(v320 + 8) = v324;
        *(_BYTE *)(v320 + 16) = v322;
      }
      else
      {
        *(_OWORD *)v320 = *(_OWORD *)v321;
        *(_BYTE *)(v320 + 16) = *(_BYTE *)(v321 + 16);
      }
      v325 = v318[7];
      v326 = (void *)(v15 + v325);
      v327 = (const void *)(v16 + v325);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v16 + v325, 1, v378))
      {
        v328 = sub_23F6916B8(&qword_256EA2798);
        memcpy(v326, v327, *(_QWORD *)(*(_QWORD *)(v328 - 8) + 64));
      }
      else
      {
        v377(v326, v327, v378);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v326, 0, 1, v378);
      }
      v329 = v318[8];
      v234 = (_QWORD *)(v15 + v329);
      v235 = (_QWORD *)(v16 + v329);
      v236 = v235[1];
      if (v236)
      {
LABEL_130:
        *v234 = *v235;
        v234[1] = v236;
        v234[2] = v235[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_142;
      }
      *(_OWORD *)v234 = *(_OWORD *)v235;
      v234[2] = v235[2];
LABEL_142:
      swift_storeEnumTagMultiPayload();
LABEL_143:
      v336 = a3[8];
      v337 = a3[9];
      v338 = (uint64_t *)((char *)a1 + v336);
      v339 = (uint64_t *)((char *)a2 + v336);
      v340 = v339[1];
      *v338 = *v339;
      v338[1] = v340;
      v341 = (uint64_t *)((char *)a1 + v337);
      v342 = (uint64_t *)((char *)a2 + v337);
      v343 = v342[1];
      *v341 = *v342;
      v341[1] = v343;
      v344 = a3[10];
      v345 = a3[11];
      v346 = (uint64_t *)((char *)a1 + v344);
      v347 = (uint64_t *)((char *)a2 + v344);
      v348 = v347[1];
      *v346 = *v347;
      v346[1] = v348;
      v349 = (uint64_t *)((char *)a1 + v345);
      v350 = (uint64_t *)((char *)a2 + v345);
      v351 = v350[1];
      *v349 = *v350;
      v349[1] = v351;
      v352 = a3[12];
      v353 = (char *)a1 + v352;
      v354 = (char *)a2 + v352;
      v355 = sub_23FB2C470();
      v376 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v355 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v376(v353, v354, v355);
      v356 = (int *)type metadata accessor for Timepoint();
      *(_QWORD *)&v353[v356[5]] = *(_QWORD *)&v354[v356[5]];
      *(_QWORD *)&v353[v356[6]] = *(_QWORD *)&v354[v356[6]];
      v377(&v353[v356[7]], &v354[v356[7]], v378);
      v357 = a3[13];
      v358 = a3[14];
      v359 = (uint64_t *)((char *)a1 + v357);
      v360 = (uint64_t *)((char *)a2 + v357);
      v361 = v360[1];
      *v359 = *v360;
      v359[1] = v361;
      v362 = (char *)a1 + v358;
      v363 = (char *)a2 + v358;
      v362[8] = v363[8];
      *(_QWORD *)v362 = *(_QWORD *)v363;
      *(uint64_t *)((char *)a1 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    case 4u:
      v42 = *(_QWORD *)(v16 + 8);
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *(_QWORD *)(v15 + 8) = v42;
      v43 = *(_QWORD *)(v16 + 24);
      *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
      *(_QWORD *)(v15 + 24) = v43;
      v44 = *(_QWORD *)(v16 + 40);
      *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
      *(_QWORD *)(v15 + 40) = v44;
      *(_QWORD *)(v15 + 48) = *(_QWORD *)(v16 + 48);
      *(_BYTE *)(v15 + 56) = *(_BYTE *)(v16 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_142;
    case 5u:
      v45 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v15, v16, v45);
      v46 = (int *)type metadata accessor for Action(0);
      v47 = v46[5];
      v48 = (_QWORD *)(v15 + v47);
      v49 = (uint64_t *)(v16 + v47);
      v51 = *v49;
      v50 = v49[1];
      *v48 = v51;
      v48[1] = v50;
      v52 = v46[6];
      v53 = (_QWORD *)(v15 + v52);
      v54 = (_QWORD *)(v16 + v52);
      v55 = v54[1];
      *v53 = *v54;
      v53[1] = v55;
      v56 = v46[7];
      v57 = (_QWORD *)(v15 + v56);
      v58 = (_QWORD *)(v16 + v56);
      v59 = v58[1];
      *v57 = *v58;
      v57[1] = v59;
      *(_BYTE *)(v15 + v46[8]) = *(_BYTE *)(v16 + v46[8]);
      *(_QWORD *)(v15 + v46[9]) = *(_QWORD *)(v16 + v46[9]);
      v60 = v46[10];
      v61 = (_QWORD *)(v15 + v60);
      v62 = (_QWORD *)(v16 + v60);
      v63 = v62[1];
      *v61 = *v62;
      v61[1] = v63;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_142;
    case 6u:
      v64 = sub_23FB2C764();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v16, 1, v64))
      {
        v65 = sub_23F6916B8(&qword_256EA49D8);
        memcpy((void *)v15, (const void *)v16, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v15, v16, v64);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v15, 0, 1, v64);
      }
      v202 = type metadata accessor for ActionCancellation(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v15 + *(int *)(v202 + 20), v16 + *(int *)(v202 + 20), v64);
      goto LABEL_142;
    case 7u:
      v66 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v15, v16, v66);
      v67 = (int *)type metadata accessor for ClientAction(0);
      v68 = v67[5];
      v69 = (_QWORD *)(v15 + v68);
      v70 = (uint64_t *)(v16 + v68);
      v72 = *v70;
      v71 = v70[1];
      *v69 = v72;
      v69[1] = v71;
      *(_QWORD *)(v15 + v67[6]) = *(_QWORD *)(v16 + v67[6]);
      v73 = v67[7];
      v74 = (_QWORD *)(v15 + v73);
      v75 = (_QWORD *)(v16 + v73);
      v76 = v75[1];
      *v74 = *v75;
      v74[1] = v76;
      v77 = v67[8];
      v78 = (_QWORD *)(v15 + v77);
      v79 = (_QWORD *)(v16 + v77);
      v80 = v79[1];
      *v78 = *v79;
      v78[1] = v80;
      *(_QWORD *)(v15 + v67[9]) = *(_QWORD *)(v16 + v67[9]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_142;
    case 8u:
      v81 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v15, v16, v81);
      Step = type metadata accessor for QueryStep(0);
      *(_QWORD *)(v15 + *(int *)(Step + 20)) = *(_QWORD *)(v16 + *(int *)(Step + 20));
      swift_bridgeObjectRetain();
      goto LABEL_142;
    case 9u:
      v83 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(v15, v16, v83);
      v84 = type metadata accessor for VariableStep(0);
      *(_QWORD *)(v15 + *(int *)(v84 + 20)) = *(_QWORD *)(v16 + *(int *)(v84 + 20));
      swift_bridgeObjectRetain();
      goto LABEL_142;
    case 0xAu:
    case 0x15u:
    case 0x1Du:
      *(_QWORD *)v15 = *(_QWORD *)v16;
      swift_bridgeObjectRetain();
      goto LABEL_142;
    case 0xBu:
    case 0x17u:
    case 0x18u:
    case 0x1Au:
      v104 = *(_QWORD *)(v16 + 8);
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *(_QWORD *)(v15 + 8) = v104;
      swift_bridgeObjectRetain();
      goto LABEL_142;
    case 0xCu:
      v85 = *(_QWORD *)(v16 + 8);
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *(_QWORD *)(v15 + 8) = v85;
      v86 = *(_QWORD *)(v16 + 24);
      *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
      *(_QWORD *)(v15 + 24) = v86;
      v87 = *(_QWORD *)(v16 + 32);
      v88 = *(_QWORD *)(v16 + 40);
      *(_QWORD *)(v15 + 32) = v87;
      *(_QWORD *)(v15 + 40) = v88;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_142;
    case 0xDu:
      type metadata accessor for SessionError();
      v89 = (char *)&loc_23F8425B0 + 4 * word_23FB6345E[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0xEu:
      v90 = *(_QWORD *)v16;
      v91 = *(_QWORD *)(v16 + 8);
      sub_23F6D1E20(*(_QWORD *)v16, v91);
      *(_QWORD *)v15 = v90;
      *(_QWORD *)(v15 + 8) = v91;
      v92 = *(_QWORD *)(v16 + 16);
      v93 = *(_QWORD *)(v16 + 24);
      sub_23F6D1E20(v92, v93);
      *(_QWORD *)(v15 + 16) = v92;
      *(_QWORD *)(v15 + 24) = v93;
      v94 = *(_QWORD *)(v16 + 40);
      *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
      *(_QWORD *)(v15 + 40) = v94;
      swift_bridgeObjectRetain();
      goto LABEL_142;
    case 0xFu:
      v95 = sub_23FB2C77C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(v15, v16, v95);
      goto LABEL_142;
    case 0x10u:
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v16, 1, v7))
      {
        v167 = sub_23F6916B8(&qword_256EA2798);
        memcpy((void *)v15, (const void *)v16, *(_QWORD *)(*(_QWORD *)(v167 - 8) + 64));
      }
      else
      {
        v8((uint64_t *)v15, (uint64_t *)v16, v7);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v15, 0, 1, v7);
      }
      v256 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
      v8((uint64_t *)(v15 + v256[5]), (uint64_t *)(v16 + v256[5]), v7);
      v257 = v256[6];
      v258 = (void *)(v15 + v257);
      v259 = (const void *)(v16 + v257);
      v260 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v261 = sub_23FB2ED38();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v261 - 8) + 16))(v258, v259, v261);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v258, v259, *(_QWORD *)(*(_QWORD *)(v260 - 8) + 64));
      }
      v262 = v256[7];
      v263 = v15 + v262;
      v264 = v16 + v262;
      v265 = sub_23FB2C764();
      v266 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v265 - 8) + 16);
      v266(v263, v264, v265);
      v267 = v256[8];
      v268 = (_QWORD *)(v15 + v267);
      v269 = (_QWORD *)(v16 + v267);
      v270 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
      v271 = swift_getEnumCaseMultiPayload();
      if (v271 == 1)
      {
        *v268 = *v269;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v271)
        {
          memcpy(v268, v269, *(_QWORD *)(*(_QWORD *)(v270 - 8) + 64));
          goto LABEL_142;
        }
        v272 = v269[1];
        *v268 = *v269;
        v268[1] = v272;
        v273 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
        v375 = (char *)v268 + v273;
        v274 = (char *)v269 + v273;
        swift_bridgeObjectRetain();
        v266((uint64_t)v375, (uint64_t)v274, v265);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_142;
    case 0x11u:
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v16, 1, v7))
      {
        v96 = sub_23F6916B8(&qword_256EA2798);
        memcpy((void *)v15, (const void *)v16, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
      }
      else
      {
        v8((uint64_t *)v15, (uint64_t *)v16, v7);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v15, 0, 1, v7);
      }
      v203 = type metadata accessor for ActionStepResult(0);
      v204 = *(int *)(v203 + 20);
      v205 = (_QWORD *)(v15 + v204);
      v206 = (_QWORD *)(v16 + v204);
      v207 = v206[1];
      *v205 = *v206;
      v205[1] = v207;
      v373 = v203;
      v208 = *(int *)(v203 + 24);
      v209 = v15 + v208;
      v210 = v16 + v208;
      v211 = sub_23FB2C80C();
      v212 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v211 - 8) + 16);
      swift_bridgeObjectRetain();
      v212(v209, v210, v211);
      v213 = *(int *)(type metadata accessor for ActionResult(0) + 20);
      v214 = (void *)(v209 + v213);
      v215 = (const void *)(v210 + v213);
      v216 = sub_23FB2D0B8();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v215, 1, v216))
      {
        v217 = sub_23F6916B8(&qword_256EA2780);
        memcpy(v214, v215, *(_QWORD *)(*(_QWORD *)(v217 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v216 - 8) + 16))(v214, v215, v216);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v214, 0, 1, v216);
      }
      v246 = *(int *)(v373 + 28);
      v247 = (_QWORD *)(v15 + v246);
      v248 = (_QWORD *)(v16 + v246);
      v249 = v248[1];
      *v247 = *v248;
      v247[1] = v249;
      swift_bridgeObjectRetain();
      goto LABEL_142;
    case 0x12u:
      *(_QWORD *)v15 = *(_QWORD *)v16;
      StepResults = type metadata accessor for QueryStepResults(0);
      v98 = *(int *)(StepResults + 20);
      __dstb = (void *)(v16 + v98);
      v371 = v15 + v98;
      v99 = (void (*)(uint64_t, uint64_t, uint64_t))v8;
      v100 = sub_23FB2C764();
      v101 = *(void (**)(uint64_t, void *, uint64_t))(*(_QWORD *)(v100 - 8) + 16);
      swift_bridgeObjectRetain();
      v101(v371, __dstb, v100);
      v99(v15 + *(int *)(StepResults + 24), v16 + *(int *)(StepResults + 24), v378);
      goto LABEL_142;
    case 0x13u:
      v102 = sub_23FB2C938();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(v15, v16, v102);
      goto LABEL_142;
    case 0x14u:
      v168 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v168 - 8) + 16))(v15, v16, v168);
      v169 = (int *)type metadata accessor for ActionResolverRequest(0);
      v170 = v169[5];
      v171 = (_QWORD *)(v15 + v170);
      v172 = (uint64_t *)(v16 + v170);
      v174 = *v172;
      v173 = v172[1];
      *v171 = v174;
      v171[1] = v173;
      *(_QWORD *)(v15 + v169[6]) = *(_QWORD *)(v16 + v169[6]);
      *(_QWORD *)(v15 + v169[7]) = *(_QWORD *)(v16 + v169[7]);
      *(_QWORD *)(v15 + v169[8]) = *(_QWORD *)(v16 + v169[8]);
      *(_BYTE *)(v15 + v169[9]) = *(_BYTE *)(v16 + v169[9]);
      *(_BYTE *)(v15 + v169[10]) = *(_BYTE *)(v16 + v169[10]);
      *(_BYTE *)(v15 + v169[11]) = *(_BYTE *)(v16 + v169[11]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_142;
    case 0x16u:
    case 0x24u:
      v103 = *(_QWORD *)(v16 + 8);
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *(_QWORD *)(v15 + 8) = v103;
      *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_142;
    case 0x1Bu:
      v175 = *(_QWORD *)(v16 + 8);
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *(_QWORD *)(v15 + 8) = v175;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_142;
    case 0x1Cu:
      v176 = *(_QWORD *)(v16 + 8);
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *(_QWORD *)(v15 + 8) = v176;
      v177 = *(_QWORD *)(v16 + 24);
      *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
      *(_QWORD *)(v15 + 24) = v177;
      *(_DWORD *)(v15 + 32) = *(_DWORD *)(v16 + 32);
      v179 = *(_QWORD *)(v16 + 40);
      v178 = *(_QWORD *)(v16 + 48);
      *(_QWORD *)(v15 + 40) = v179;
      *(_QWORD *)(v15 + 48) = v178;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_142;
    case 0x1Eu:
      v105 = sub_23FB2D004();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 16))(v15, v16, v105);
      goto LABEL_142;
    case 0x1Fu:
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v16, 1, v7))
      {
        v106 = sub_23F6916B8(&qword_256EA2798);
        memcpy((void *)v15, (const void *)v16, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
      }
      else
      {
        v8((uint64_t *)v15, (uint64_t *)v16, v7);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v15, 0, 1, v7);
      }
      v218 = type metadata accessor for StatementResult(0);
      v219 = *(int *)(v218 + 20);
      v220 = (_QWORD *)(v15 + v219);
      v221 = (_QWORD *)(v16 + v219);
      v222 = v221[1];
      *v220 = *v221;
      v220[1] = v222;
      v374 = v218;
      v223 = *(int *)(v218 + 24);
      v224 = v15 + v223;
      v225 = v16 + v223;
      v226 = sub_23FB2D0DC();
      v227 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v226 - 8) + 16);
      swift_bridgeObjectRetain();
      v227(v224, v225, v226);
      v228 = *(int *)(type metadata accessor for StatementResultPayload(0) + 20);
      v229 = (void *)(v224 + v228);
      v230 = (const void *)(v225 + v228);
      v231 = sub_23FB2D0B8();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v230, 1, v231))
      {
        v232 = sub_23F6916B8(&qword_256EA2780);
        memcpy(v229, v230, *(_QWORD *)(*(_QWORD *)(v232 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v231 - 8) + 16))(v229, v230, v231);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v229, 0, 1, v231);
      }
      v250 = v374;
      v251 = *(int *)(v374 + 28);
      v252 = v15 + v251;
      v253 = v16 + v251;
      v254 = sub_23FB2C764();
      v255 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v254 - 8) + 16);
      v255(v252, v253, v254);
      v255(v15 + *(int *)(v250 + 32), v16 + *(int *)(v250 + 32), v254);
      v255(v15 + *(int *)(v250 + 36), v16 + *(int *)(v250 + 36), v254);
      goto LABEL_142;
    case 0x20u:
      v107 = *(_QWORD *)(v16 + 8);
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *(_QWORD *)(v15 + 8) = v107;
      v108 = type metadata accessor for ExternalAgentTextQuery(0);
      v109 = *(int *)(v108 + 20);
      v110 = (void *)(v15 + v109);
      v111 = (const void *)(v16 + v109);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v111, 1, v7))
      {
        v112 = sub_23F6916B8(&qword_256EA2798);
        memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
      }
      else
      {
        v377(v110, v111, v7);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v110, 0, 1, v7);
      }
      v233 = *(int *)(v108 + 24);
      v234 = (_QWORD *)(v15 + v233);
      v235 = (_QWORD *)(v16 + v233);
      v236 = v235[1];
      if (v236)
        goto LABEL_130;
      *(_OWORD *)v234 = *(_OWORD *)v235;
      v234[2] = v235[2];
      goto LABEL_142;
    case 0x21u:
      *(_QWORD *)v15 = *(_QWORD *)v16;
      v180 = type metadata accessor for ExternalAgentSpeechQuery(0);
      v181 = *(int *)(v180 + 20);
      v182 = (void *)(v15 + v181);
      v183 = (const void *)(v16 + v181);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v183, 1, v7))
      {
        v184 = sub_23F6916B8(&qword_256EA2798);
        memcpy(v182, v183, *(_QWORD *)(*(_QWORD *)(v184 - 8) + 64));
      }
      else
      {
        v377(v182, v183, v7);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v182, 0, 1, v7);
      }
      v275 = *(int *)(v180 + 24);
      v234 = (_QWORD *)(v15 + v275);
      v235 = (_QWORD *)(v16 + v275);
      v236 = v235[1];
      if (v236)
        goto LABEL_130;
      *(_OWORD *)v234 = *(_OWORD *)v235;
      v234[2] = v235[2];
      goto LABEL_142;
    case 0x22u:
      v113 = type metadata accessor for RequestContent(0);
      v114 = swift_getEnumCaseMultiPayload();
      if (v114 != 3)
      {
        if (v114 == 2)
        {
          *(_QWORD *)v15 = *(_QWORD *)v16;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v114 != 1)
          {
            memcpy((void *)v15, (const void *)v16, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
            goto LABEL_137;
          }
          v115 = *(_QWORD *)(v16 + 8);
          *(_QWORD *)v15 = *(_QWORD *)v16;
          *(_QWORD *)(v15 + 8) = v115;
          v116 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
          v117 = v15 + v116;
          v118 = v16 + v116;
          v119 = sub_23FB2C764();
          v120 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 16);
          swift_bridgeObjectRetain();
          v120(v117, v118, v119);
          v7 = v378;
        }
LABEL_136:
        swift_storeEnumTagMultiPayload();
LABEL_137:
        v330 = type metadata accessor for ExternalAgentRequest(0);
        v331 = *(int *)(v330 + 20);
        v332 = (void *)(v15 + v331);
        v333 = (const void *)(v16 + v331);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v16 + v331, 1, v7))
        {
          v334 = sub_23F6916B8(&qword_256EA2798);
          memcpy(v332, v333, *(_QWORD *)(*(_QWORD *)(v334 - 8) + 64));
        }
        else
        {
          v377(v332, v333, v7);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v332, 0, 1, v7);
        }
        v335 = *(int *)(v330 + 24);
        v234 = (_QWORD *)(v15 + v335);
        v235 = (_QWORD *)(v16 + v335);
        v236 = v235[1];
        if (v236)
          goto LABEL_130;
        *(_OWORD *)v234 = *(_OWORD *)v235;
        v234[2] = v235[2];
        goto LABEL_142;
      }
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v16, 1, v7))
      {
        v277 = sub_23F6916B8(&qword_256EA2798);
        memcpy((void *)v15, (const void *)v16, *(_QWORD *)(*(_QWORD *)(v277 - 8) + 64));
      }
      else
      {
        v8((uint64_t *)v15, (uint64_t *)v16, v7);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v15, 0, 1, v7);
      }
      v298 = (void (*)(uint64_t, uint64_t, uint64_t))v8;
      v299 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
      v298(v15 + v299[5], v16 + v299[5], v7);
      v300 = v299[6];
      v301 = (void *)(v15 + v300);
      v302 = (const void *)(v16 + v300);
      v303 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v304 = sub_23FB2ED38();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v304 - 8) + 16))(v301, v302, v304);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v301, v302, *(_QWORD *)(*(_QWORD *)(v303 - 8) + 64));
      }
      v305 = v299[7];
      v306 = v15 + v305;
      v307 = v16 + v305;
      v308 = sub_23FB2C764();
      v309 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v308 - 8) + 16);
      v309(v306, v307, v308);
      v310 = v299[8];
      v311 = (_QWORD *)(v15 + v310);
      v312 = (_QWORD *)(v16 + v310);
      v313 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
      v314 = swift_getEnumCaseMultiPayload();
      if (v314 == 1)
      {
        *v311 = *v312;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v314)
        {
          memcpy(v311, v312, *(_QWORD *)(*(_QWORD *)(v313 - 8) + 64));
          goto LABEL_135;
        }
        v315 = v312[1];
        *v311 = *v312;
        v311[1] = v315;
        v316 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
        v366 = (char *)v311 + v316;
        v317 = (char *)v312 + v316;
        swift_bridgeObjectRetain();
        v309((uint64_t)v366, (uint64_t)v317, v308);
      }
      swift_storeEnumTagMultiPayload();
LABEL_135:
      v7 = v378;
      goto LABEL_136;
    case 0x23u:
      v185 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(v15, v16, v185);
      v186 = type metadata accessor for ExternalAgentOutcome(0);
      v187 = *(int *)(v186 + 20);
      v188 = v15 + v187;
      v189 = v16 + v187;
      v190 = sub_23FB2D0DC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v190 - 8) + 16))(v188, v189, v190);
      *(_QWORD *)(v15 + *(int *)(v186 + 24)) = *(_QWORD *)(v16 + *(int *)(v186 + 24));
      swift_bridgeObjectRetain();
      goto LABEL_142;
    case 0x25u:
      v121 = sub_23FB2E8D0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 16))(v15, v16, v121);
      v122 = type metadata accessor for ToolResolution(0);
      v123 = *(int *)(v122 + 20);
      v124 = v15 + v123;
      v125 = v16 + v123;
      v126 = sub_23FB2C764();
      v127 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v126 - 8) + 16);
      v127(v124, v125, v126);
      v127(v15 + *(int *)(v122 + 24), v16 + *(int *)(v122 + 24), v126);
      goto LABEL_142;
    case 0x26u:
      v128 = *(_QWORD *)(v16 + 8);
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *(_QWORD *)(v15 + 8) = v128;
      v129 = (int *)type metadata accessor for UndoRedoRequest(0);
      v130 = v129[5];
      v131 = (void *)(v15 + v130);
      v132 = (const void *)(v16 + v130);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v132, 1, v7))
      {
        v133 = sub_23F6916B8(&qword_256EA2798);
        memcpy(v131, v132, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
      }
      else
      {
        v377(v131, v132, v7);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v131, 0, 1, v7);
      }
      *(_BYTE *)(v15 + v129[6]) = *(_BYTE *)(v16 + v129[6]);
      v237 = v129[7];
      v238 = v15 + v237;
      v239 = v16 + v237;
      v240 = sub_23FB2C764();
      v241 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v240 - 8) + 16);
      v241(v238, v239, v240);
      v242 = v129[8];
      v243 = (void *)(v15 + v242);
      v244 = (const void *)(v16 + v242);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v244, 1, v240))
      {
        v245 = sub_23F6916B8(&qword_256EA49D8);
        memcpy(v243, v244, *(_QWORD *)(*(_QWORD *)(v245 - 8) + 64));
      }
      else
      {
        v241((uint64_t)v243, (uint64_t)v244, v240);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v243, 0, 1, v240);
      }
      goto LABEL_142;
    case 0x27u:
      v8((uint64_t *)v15, (uint64_t *)v16, v7);
      v134 = (int *)type metadata accessor for ClientUndoRedoRequest(0);
      *(_BYTE *)(v15 + v134[5]) = *(_BYTE *)(v16 + v134[5]);
      v135 = v134[6];
      v136 = v15 + v135;
      v137 = v16 + v135;
      v138 = sub_23FB2C764();
      v139 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 16);
      v139(v136, v137, v138);
      v140 = v134[7];
      v141 = (void *)(v15 + v140);
      v142 = (const void *)(v16 + v140);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v142, 1, v138))
      {
        v143 = sub_23F6916B8(&qword_256EA49D8);
        memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
      }
      else
      {
        v139((uint64_t)v141, (uint64_t)v142, v138);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v141, 0, 1, v138);
      }
      goto LABEL_142;
    case 0x28u:
      v144 = sub_23FB2ED38();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v144 - 8) + 16))(v15, v16, v144);
      v145 = type metadata accessor for TypeConversionRequest(0);
      v146 = *(int *)(v145 + 20);
      v147 = v15 + v146;
      v148 = v16 + v146;
      v149 = sub_23FB2ED5C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v149 - 8) + 16))(v147, v148, v149);
      v150 = *(int *)(v145 + 24);
      v151 = v15 + v150;
      v152 = v16 + v150;
      v153 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v153 - 8) + 16))(v151, v152, v153);
      goto LABEL_142;
    case 0x29u:
      v154 = sub_23FB2ED38();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v154 - 8) + 16))(v15, v16, v154);
      v155 = type metadata accessor for TypeConversionResult(0);
      v156 = *(int *)(v155 + 20);
      v157 = v15 + v156;
      v158 = v16 + v156;
      v159 = sub_23FB2C764();
      v160 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v159 - 8) + 16);
      v160(v157, v158, v159);
      v160(v15 + *(int *)(v155 + 24), v16 + *(int *)(v155 + 24), v159);
      goto LABEL_142;
    case 0x2Au:
      v161 = *(_QWORD *)(v16 + 8);
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *(_QWORD *)(v15 + 8) = v161;
      *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
      DecorationResult = type metadata accessor for QueryDecorationResult(0);
      v163 = *(int *)(DecorationResult + 28);
      __dst = (void *)(v15 + v163);
      v372 = DecorationResult;
      v164 = (const void *)(v16 + v163);
      v165 = sub_23FB2E354();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v164, 1, v165))
      {
        v166 = sub_23F6916B8(&qword_256EA71F8);
        memcpy(__dst, v164, *(_QWORD *)(*(_QWORD *)(v166 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v165 - 8) + 16))(__dst, v164, v165);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__dst, 0, 1, v165);
      }
      *(_QWORD *)(v15 + *(int *)(v372 + 32)) = *(_QWORD *)(v16 + *(int *)(v372 + 32));
      swift_bridgeObjectRetain();
      goto LABEL_142;
    case 0x2Cu:
      v191 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v191 - 8) + 16))(v15, v16, v191);
      DecorationPrePlannerResult = type metadata accessor for QueryDecorationPrePlannerResult(0);
      v193 = *(int *)(DecorationPrePlannerResult + 20);
      v194 = (_QWORD *)(v15 + v193);
      v195 = (uint64_t *)(v16 + v193);
      v197 = *v195;
      v196 = v195[1];
      *v194 = v197;
      v194[1] = v196;
      v198 = *(int *)(DecorationPrePlannerResult + 24);
      v199 = v15 + v198;
      v200 = (uint64_t *)(v16 + v198);
      v201 = *v200;
      LOBYTE(v200) = *((_BYTE *)v200 + 8);
      *(_QWORD *)v199 = v201;
      *(_BYTE *)(v199 + 8) = (_BYTE)v200;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_142;
    default:
      memcpy((void *)v15, (const void *)v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      goto LABEL_143;
  }
}

uint64_t destroy for Session.Event(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t StepResults;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t);
  uint64_t v83;
  int v84;
  uint64_t v85;
  int *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t, uint64_t);
  uint64_t v92;
  int v93;
  uint64_t v94;
  int *v95;
  uint64_t v96;
  unsigned int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v4 = sub_23FB2C4B8();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + a2[5], v4);
  v6 = a1 + a2[6];
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v6, 1, v4))v5(v6, v4);
  v7 = a1 + a2[7];
  type metadata accessor for Session.Event.Payload(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v8 = sub_23FB2C998();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
      v7 += *(int *)(type metadata accessor for SessionStart(0) + 20);
      v9 = sub_23FB2C908();
      goto LABEL_92;
    case 1u:
      swift_bridgeObjectRelease();
      v10 = v7 + *(int *)(type metadata accessor for TextQuery(0) + 24);
      v11 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
      goto LABEL_107;
    case 2u:
    case 0x16u:
    case 0x1Bu:
    case 0x24u:
      goto LABEL_106;
    case 3u:
      type metadata accessor for RequestContent(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 3)
      {
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v4))v5(v7, v4);
        v77 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
        v5(v7 + v77[5], v4);
        v78 = v7 + v77[6];
        type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v79 = sub_23FB2ED38();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 8))(v78, v79);
        }
        v80 = v7 + v77[7];
        v81 = sub_23FB2C764();
        v82 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 8);
        v82(v80, v81);
        v83 = v7 + v77[8];
        type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
        v84 = swift_getEnumCaseMultiPayload();
        if (v84 != 1)
        {
          if (!v84)
          {
            swift_bridgeObjectRelease();
            v85 = type metadata accessor for RequestContent.TextContent(0);
            v82(v83 + *(int *)(v85 + 20), v81);
          }
          goto LABEL_95;
        }
      }
      else if (EnumCaseMultiPayload != 2)
      {
        if (EnumCaseMultiPayload == 1)
        {
          swift_bridgeObjectRelease();
          v13 = v7 + *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
          v14 = sub_23FB2C764();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
        }
LABEL_95:
        v95 = (int *)type metadata accessor for Request(0);
        v96 = v7 + v95[6];
        v97 = *(unsigned __int8 *)(v96 + 16);
        if (v97 <= 0xFD)
          sub_23F735FE8(*(_QWORD *)v96, *(_QWORD *)(v96 + 8), v97);
        v98 = v7 + v95[7];
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v98, 1, v4))v5(v98, v4);
        v99 = v95[8];
        goto LABEL_105;
      }
      swift_bridgeObjectRelease();
      goto LABEL_95;
    case 4u:
    case 0x1Cu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_106;
    case 5u:
      v15 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v7, v15);
      type metadata accessor for Action(0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_107;
    case 6u:
      v16 = sub_23FB2C764();
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v16))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v7, v16);
      v17 = v7 + *(int *)(type metadata accessor for ActionCancellation(0) + 20);
      v18 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8);
LABEL_15:
      v19 = v16;
      goto LABEL_93;
    case 7u:
      v20 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v7, v20);
      type metadata accessor for ClientAction(0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_107;
    case 8u:
      v21 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v7, v21);
      type metadata accessor for QueryStep(0);
      goto LABEL_107;
    case 9u:
      v22 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v7, v22);
      type metadata accessor for VariableStep(0);
      goto LABEL_107;
    case 0xAu:
    case 0xBu:
    case 0x15u:
    case 0x17u:
    case 0x18u:
    case 0x1Au:
    case 0x1Du:
      goto LABEL_107;
    case 0xCu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_107;
    case 0xDu:
      type metadata accessor for SessionError();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          goto LABEL_91;
        case 1u:
          type metadata accessor for SessionCoordinatorError();
          if (swift_getEnumCaseMultiPayload() > 2)
            goto LABEL_108;
LABEL_91:
          v9 = sub_23FB2C6F8();
          goto LABEL_92;
        case 2u:
        case 3u:
          v16 = sub_23FB2C6F8();
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v16))goto LABEL_108;
          v18 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8);
          v17 = v7;
          goto LABEL_15;
        default:
          goto LABEL_108;
      }
    case 0xEu:
      sub_23F6BC34C(*(_QWORD *)v7, *(_QWORD *)(v7 + 8));
      sub_23F6BC34C(*(_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 24));
      goto LABEL_107;
    case 0xFu:
      v9 = sub_23FB2C77C();
      goto LABEL_92;
    case 0x10u:
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v4))v5(v7, v4);
      v23 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
      v5(v7 + v23[5], v4);
      v24 = v7 + v23[6];
      type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v25 = sub_23FB2ED38();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
      }
      v26 = v7 + v23[7];
      v27 = sub_23FB2C764();
      v28 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8);
      v28(v26, v27);
      v29 = v7 + v23[8];
      type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
      v30 = swift_getEnumCaseMultiPayload();
      if (v30 == 1)
        goto LABEL_107;
      if (v30)
        goto LABEL_108;
      swift_bridgeObjectRelease();
      v31 = v29 + *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
LABEL_52:
      v56 = v27;
LABEL_59:
      v28(v31, v56);
      goto LABEL_108;
    case 0x11u:
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v4))v5(v7, v4);
      v32 = type metadata accessor for ActionStepResult(0);
      swift_bridgeObjectRelease();
      v33 = v7 + *(int *)(v32 + 24);
      v34 = sub_23FB2C80C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
      v35 = v33 + *(int *)(type metadata accessor for ActionResult(0) + 20);
      v36 = sub_23FB2D0B8();
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v35, 1, v36))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
      goto LABEL_107;
    case 0x12u:
      swift_bridgeObjectRelease();
      StepResults = type metadata accessor for QueryStepResults(0);
      v38 = v7 + *(int *)(StepResults + 20);
      v39 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v38, v39);
      v5(v7 + *(int *)(StepResults + 24), v4);
      goto LABEL_108;
    case 0x13u:
      v9 = sub_23FB2C938();
      goto LABEL_92;
    case 0x14u:
      v40 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v7, v40);
      type metadata accessor for ActionResolverRequest(0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_107;
    case 0x1Eu:
      v9 = sub_23FB2D004();
      goto LABEL_92;
    case 0x1Fu:
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v4))v5(v7, v4);
      v41 = (int *)type metadata accessor for StatementResult(0);
      swift_bridgeObjectRelease();
      v42 = v7 + v41[6];
      v43 = sub_23FB2D0DC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
      v44 = v42 + *(int *)(type metadata accessor for StatementResultPayload(0) + 20);
      v45 = sub_23FB2D0B8();
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v44, 1, v45))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v44, v45);
      v46 = v7 + v41[7];
      v47 = sub_23FB2C764();
      v28 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8);
      v28(v46, v47);
      v28(v7 + v41[8], v47);
      v48 = v41[9];
      goto LABEL_58;
    case 0x20u:
      swift_bridgeObjectRelease();
      v49 = type metadata accessor for ExternalAgentTextQuery(0);
      goto LABEL_102;
    case 0x21u:
      swift_bridgeObjectRelease();
      v49 = type metadata accessor for ExternalAgentSpeechQuery(0);
      goto LABEL_102;
    case 0x22u:
      type metadata accessor for RequestContent(0);
      v70 = swift_getEnumCaseMultiPayload();
      if (v70 != 3)
      {
        if (v70 != 2)
        {
          if (v70 == 1)
          {
            swift_bridgeObjectRelease();
            v71 = v7 + *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
            v72 = sub_23FB2C764();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 8))(v71, v72);
          }
          goto LABEL_101;
        }
LABEL_100:
        swift_bridgeObjectRelease();
        goto LABEL_101;
      }
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v4))v5(v7, v4);
      v86 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
      v5(v7 + v86[5], v4);
      v87 = v7 + v86[6];
      type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v88 = sub_23FB2ED38();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 8))(v87, v88);
      }
      v89 = v7 + v86[7];
      v90 = sub_23FB2C764();
      v91 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 8);
      v91(v89, v90);
      v92 = v7 + v86[8];
      type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
      v93 = swift_getEnumCaseMultiPayload();
      if (v93 == 1)
        goto LABEL_100;
      if (!v93)
      {
        swift_bridgeObjectRelease();
        v94 = type metadata accessor for RequestContent.TextContent(0);
        v91(v92 + *(int *)(v94 + 20), v90);
      }
LABEL_101:
      v49 = type metadata accessor for ExternalAgentRequest(0);
LABEL_102:
      v100 = v49;
      v101 = v7 + *(int *)(v49 + 20);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v101, 1, v4))v5(v101, v4);
      v99 = *(int *)(v100 + 24);
LABEL_105:
      if (*(_QWORD *)(v7 + v99 + 8))
      {
LABEL_106:
        swift_bridgeObjectRelease();
LABEL_107:
        swift_bridgeObjectRelease();
      }
LABEL_108:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v102 = a1 + a2[12];
      v103 = sub_23FB2C470();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 8))(v102, v103);
      v104 = type metadata accessor for Timepoint();
      v5(v102 + *(int *)(v104 + 28), v4);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 0x23u:
      v73 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 8))(v7, v73);
      v74 = v7 + *(int *)(type metadata accessor for ExternalAgentOutcome(0) + 20);
      v75 = sub_23FB2D0DC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 8))(v74, v75);
      goto LABEL_107;
    case 0x25u:
      v50 = sub_23FB2E8D0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v7, v50);
      v51 = type metadata accessor for ToolResolution(0);
      goto LABEL_57;
    case 0x26u:
      swift_bridgeObjectRelease();
      v52 = (int *)type metadata accessor for UndoRedoRequest(0);
      v53 = v7 + v52[5];
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v53, 1, v4))v5(v53, v4);
      v54 = v7 + v52[7];
      v27 = sub_23FB2C764();
      v28 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8);
      v28(v54, v27);
      v55 = v7 + v52[8];
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v55, 1, v27))goto LABEL_108;
      v31 = v55;
      goto LABEL_52;
    case 0x27u:
      v5(v7, v4);
      v57 = type metadata accessor for ClientUndoRedoRequest(0);
      v58 = v7 + *(int *)(v57 + 24);
      v59 = sub_23FB2C764();
      v28 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 8);
      v28(v58, v59);
      v60 = v7 + *(int *)(v57 + 28);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v60, 1, v59))goto LABEL_108;
      v31 = v60;
      v56 = v59;
      goto LABEL_59;
    case 0x28u:
      v61 = sub_23FB2ED38();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 8))(v7, v61);
      v62 = type metadata accessor for TypeConversionRequest(0);
      v63 = v7 + *(int *)(v62 + 20);
      v64 = sub_23FB2ED5C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 8))(v63, v64);
      v7 += *(int *)(v62 + 24);
      v9 = sub_23FB2C764();
LABEL_92:
      v19 = v9;
      v18 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
      v17 = v7;
LABEL_93:
      v18(v17, v19);
      goto LABEL_108;
    case 0x29u:
      v65 = sub_23FB2ED38();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 8))(v7, v65);
      v51 = type metadata accessor for TypeConversionResult(0);
LABEL_57:
      v66 = v51;
      v67 = v7 + *(int *)(v51 + 20);
      v47 = sub_23FB2C764();
      v28 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8);
      v28(v67, v47);
      v48 = *(int *)(v66 + 24);
LABEL_58:
      v31 = v7 + v48;
      v56 = v47;
      goto LABEL_59;
    case 0x2Au:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v68 = v7 + *(int *)(type metadata accessor for QueryDecorationResult(0) + 28);
      v69 = sub_23FB2E354();
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v68, 1, v69))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 8))(v68, v69);
      goto LABEL_107;
    case 0x2Cu:
      v76 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 8))(v7, v76);
      type metadata accessor for QueryDecorationPrePlannerResult(0);
      swift_bridgeObjectRelease();
      goto LABEL_107;
    default:
      goto LABEL_108;
  }
}

uint64_t initializeWithCopy for Session.Event(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int EnumCaseMultiPayload;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(void *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int *v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t Step;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t StepResults;
  uint64_t v96;
  void (*v97)(uint64_t, uint64_t, uint64_t);
  uint64_t v98;
  void (*v99)(uint64_t, void *, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  const void *v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(uint64_t, uint64_t, uint64_t);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(uint64_t, uint64_t, uint64_t);
  uint64_t v126;
  int *v127;
  uint64_t v128;
  void *v129;
  const void *v130;
  uint64_t v131;
  int *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void (*v137)(uint64_t, uint64_t, uint64_t);
  uint64_t v138;
  void *v139;
  const void *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  void (*v158)(uint64_t, uint64_t, uint64_t);
  uint64_t v159;
  uint64_t DecorationResult;
  uint64_t v161;
  const void *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  int *v167;
  uint64_t v168;
  _QWORD *v169;
  uint64_t *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  void *v180;
  const void *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t DecorationPrePlannerResult;
  uint64_t v191;
  _QWORD *v192;
  uint64_t *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  _QWORD *v203;
  _QWORD *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  void (*v210)(uint64_t, uint64_t, uint64_t);
  uint64_t v211;
  void *v212;
  const void *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  _QWORD *v218;
  _QWORD *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  void (*v225)(uint64_t, uint64_t, uint64_t);
  uint64_t v226;
  void *v227;
  const void *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  void (*v239)(uint64_t, uint64_t, uint64_t);
  uint64_t v240;
  void *v241;
  const void *v242;
  uint64_t v243;
  uint64_t v244;
  _QWORD *v245;
  _QWORD *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  void (*v253)(uint64_t, uint64_t, uint64_t);
  int *v254;
  uint64_t v255;
  void *v256;
  const void *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  void (*v264)(uint64_t, uint64_t, uint64_t);
  uint64_t v265;
  _QWORD *v266;
  _QWORD *v267;
  uint64_t v268;
  int v269;
  uint64_t v270;
  uint64_t v271;
  char *v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  void (*v276)(uint64_t, uint64_t, uint64_t);
  int *v277;
  uint64_t v278;
  void *v279;
  const void *v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  void (*v287)(uint64_t, uint64_t, uint64_t);
  uint64_t v288;
  _QWORD *v289;
  _QWORD *v290;
  uint64_t v291;
  int v292;
  uint64_t v293;
  uint64_t v294;
  char *v295;
  void (*v296)(uint64_t, uint64_t, uint64_t);
  int *v297;
  uint64_t v298;
  void *v299;
  const void *v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  void (*v307)(uint64_t, uint64_t, uint64_t);
  uint64_t v308;
  _QWORD *v309;
  _QWORD *v310;
  uint64_t v311;
  int v312;
  uint64_t v313;
  uint64_t v314;
  char *v315;
  int *v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  unsigned int v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  void *v324;
  const void *v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  void *v330;
  const void *v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  _QWORD *v336;
  _QWORD *v337;
  uint64_t v338;
  _QWORD *v339;
  _QWORD *v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  _QWORD *v344;
  _QWORD *v345;
  uint64_t v346;
  _QWORD *v347;
  _QWORD *v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  int *v354;
  uint64_t v355;
  uint64_t v356;
  _QWORD *v357;
  _QWORD *v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t result;
  char *v363;
  char *v364;
  void *__dsta;
  void *__dstb;
  void *__dst;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  char *v373;
  void (*v374)(uint64_t, uint64_t, uint64_t);
  void (*v375)(void *, const void *, uint64_t);
  uint64_t v376;

  v6 = sub_23FB2C4B8();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2 + v8, 1, v6))
  {
    v11 = sub_23F6916B8(&qword_256EA2798);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v6);
  }
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = type metadata accessor for Session.Event.Payload(0);
  v375 = (void (*)(void *, const void *, uint64_t))v7;
  v376 = v6;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v16 = sub_23FB2C998();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
      v17 = type metadata accessor for SessionStart(0);
      v18 = *(int *)(v17 + 20);
      v19 = v13 + v18;
      v20 = v14 + v18;
      v21 = sub_23FB2C908();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
      *(_BYTE *)(v13 + *(int *)(v17 + 24)) = *(_BYTE *)(v14 + *(int *)(v17 + 24));
      goto LABEL_140;
    case 1u:
      v22 = *(_QWORD *)(v14 + 8);
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *(_QWORD *)(v13 + 8) = v22;
      *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
      v23 = type metadata accessor for TextQuery(0);
      v24 = *(int *)(v23 + 24);
      v25 = v13 + v24;
      v368 = v14 + v24;
      v26 = sub_23FB2C764();
      v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
      swift_bridgeObjectRetain();
      v27(v25, v368, v26);
      v28 = *(int *)(v23 + 28);
      v29 = (_QWORD *)(v13 + v28);
      v30 = (_QWORD *)(v14 + v28);
      v31 = v30[1];
      *v29 = *v30;
      v29[1] = v31;
      swift_bridgeObjectRetain();
      goto LABEL_140;
    case 2u:
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
      v32 = *(_QWORD *)(v14 + 24);
      *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
      *(_QWORD *)(v13 + 24) = v32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_140;
    case 3u:
      v33 = type metadata accessor for RequestContent(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload != 3)
      {
        if (EnumCaseMultiPayload == 2)
        {
          *(_QWORD *)v13 = *(_QWORD *)v14;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            memcpy((void *)v13, (const void *)v14, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
            goto LABEL_121;
          }
          v35 = *(_QWORD *)(v14 + 8);
          *(_QWORD *)v13 = *(_QWORD *)v14;
          *(_QWORD *)(v13 + 8) = v35;
          v36 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
          __dsta = (void *)(v13 + v36);
          v37 = v14 + v36;
          v38 = sub_23FB2C764();
          v39 = *(void (**)(void *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
          swift_bridgeObjectRetain();
          v39(__dsta, v37, v38);
        }
LABEL_120:
        swift_storeEnumTagMultiPayload();
LABEL_121:
        v316 = (int *)type metadata accessor for Request(0);
        *(_BYTE *)(v13 + v316[5]) = *(_BYTE *)(v14 + v316[5]);
        v317 = v316[6];
        v318 = v13 + v317;
        v319 = v14 + v317;
        v320 = *(unsigned __int8 *)(v319 + 16);
        if (v320 <= 0xFD)
        {
          v321 = *(_QWORD *)v319;
          v322 = *(_QWORD *)(v319 + 8);
          sub_23F73515C(*(_QWORD *)v319, v322, *(_BYTE *)(v319 + 16));
          *(_QWORD *)v318 = v321;
          *(_QWORD *)(v318 + 8) = v322;
          *(_BYTE *)(v318 + 16) = v320;
        }
        else
        {
          *(_OWORD *)v318 = *(_OWORD *)v319;
          *(_BYTE *)(v318 + 16) = *(_BYTE *)(v319 + 16);
        }
        v323 = v316[7];
        v324 = (void *)(v13 + v323);
        v325 = (const void *)(v14 + v323);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v14 + v323, 1, v376))
        {
          v326 = sub_23F6916B8(&qword_256EA2798);
          memcpy(v324, v325, *(_QWORD *)(*(_QWORD *)(v326 - 8) + 64));
        }
        else
        {
          v375(v324, v325, v376);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v324, 0, 1, v376);
        }
        v327 = v316[8];
        v232 = v13 + v327;
        v233 = v14 + v327;
        v234 = *(_QWORD *)(v233 + 8);
        if (!v234)
        {
          *(_OWORD *)v232 = *(_OWORD *)v233;
          *(_QWORD *)(v232 + 16) = *(_QWORD *)(v233 + 16);
          goto LABEL_140;
        }
        goto LABEL_128;
      }
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v14, 1, v6))
      {
        v274 = sub_23F6916B8(&qword_256EA2798);
        memcpy((void *)v13, (const void *)v14, *(_QWORD *)(*(_QWORD *)(v274 - 8) + 64));
      }
      else
      {
        v7(v13, v14, v6);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v13, 0, 1, v6);
      }
      v276 = v7;
      v277 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
      v276(v13 + v277[5], v14 + v277[5], v6);
      v278 = v277[6];
      v279 = (void *)(v13 + v278);
      v280 = (const void *)(v14 + v278);
      v281 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v282 = sub_23FB2ED38();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v282 - 8) + 16))(v279, v280, v282);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v279, v280, *(_QWORD *)(*(_QWORD *)(v281 - 8) + 64));
      }
      v283 = v277[7];
      v284 = v13 + v283;
      v285 = v14 + v283;
      v286 = sub_23FB2C764();
      v287 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v286 - 8) + 16);
      v287(v284, v285, v286);
      v288 = v277[8];
      v289 = (_QWORD *)(v13 + v288);
      v290 = (_QWORD *)(v14 + v288);
      v291 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
      v292 = swift_getEnumCaseMultiPayload();
      if (v292 == 1)
      {
        *v289 = *v290;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v292)
        {
          memcpy(v289, v290, *(_QWORD *)(*(_QWORD *)(v291 - 8) + 64));
          goto LABEL_120;
        }
        v293 = v290[1];
        *v289 = *v290;
        v289[1] = v293;
        v294 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
        v363 = (char *)v289 + v294;
        v295 = (char *)v290 + v294;
        swift_bridgeObjectRetain();
        v287((uint64_t)v363, (uint64_t)v295, v286);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_120;
    case 4u:
      v40 = *(_QWORD *)(v14 + 8);
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *(_QWORD *)(v13 + 8) = v40;
      v41 = *(_QWORD *)(v14 + 24);
      *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
      *(_QWORD *)(v13 + 24) = v41;
      v42 = *(_QWORD *)(v14 + 40);
      *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
      *(_QWORD *)(v13 + 40) = v42;
      *(_QWORD *)(v13 + 48) = *(_QWORD *)(v14 + 48);
      *(_BYTE *)(v13 + 56) = *(_BYTE *)(v14 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_140;
    case 5u:
      v43 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v13, v14, v43);
      v44 = (int *)type metadata accessor for Action(0);
      v45 = v44[5];
      v46 = (_QWORD *)(v13 + v45);
      v47 = (uint64_t *)(v14 + v45);
      v49 = *v47;
      v48 = v47[1];
      *v46 = v49;
      v46[1] = v48;
      v50 = v44[6];
      v51 = (_QWORD *)(v13 + v50);
      v52 = (_QWORD *)(v14 + v50);
      v53 = v52[1];
      *v51 = *v52;
      v51[1] = v53;
      v54 = v44[7];
      v55 = (_QWORD *)(v13 + v54);
      v56 = (_QWORD *)(v14 + v54);
      v57 = v56[1];
      *v55 = *v56;
      v55[1] = v57;
      *(_BYTE *)(v13 + v44[8]) = *(_BYTE *)(v14 + v44[8]);
      *(_QWORD *)(v13 + v44[9]) = *(_QWORD *)(v14 + v44[9]);
      v58 = v44[10];
      v59 = (_QWORD *)(v13 + v58);
      v60 = (_QWORD *)(v14 + v58);
      v61 = v60[1];
      *v59 = *v60;
      v59[1] = v61;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_140;
    case 6u:
      v62 = sub_23FB2C764();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v14, 1, v62))
      {
        v63 = sub_23F6916B8(&qword_256EA49D8);
        memcpy((void *)v13, (const void *)v14, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v13, v14, v62);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v13, 0, 1, v62);
      }
      v200 = type metadata accessor for ActionCancellation(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v13 + *(int *)(v200 + 20), v14 + *(int *)(v200 + 20), v62);
      goto LABEL_140;
    case 7u:
      v64 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v13, v14, v64);
      v65 = (int *)type metadata accessor for ClientAction(0);
      v66 = v65[5];
      v67 = (_QWORD *)(v13 + v66);
      v68 = (uint64_t *)(v14 + v66);
      v70 = *v68;
      v69 = v68[1];
      *v67 = v70;
      v67[1] = v69;
      *(_QWORD *)(v13 + v65[6]) = *(_QWORD *)(v14 + v65[6]);
      v71 = v65[7];
      v72 = (_QWORD *)(v13 + v71);
      v73 = (_QWORD *)(v14 + v71);
      v74 = v73[1];
      *v72 = *v73;
      v72[1] = v74;
      v75 = v65[8];
      v76 = (_QWORD *)(v13 + v75);
      v77 = (_QWORD *)(v14 + v75);
      v78 = v77[1];
      *v76 = *v77;
      v76[1] = v78;
      *(_QWORD *)(v13 + v65[9]) = *(_QWORD *)(v14 + v65[9]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_140;
    case 8u:
      v79 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v13, v14, v79);
      Step = type metadata accessor for QueryStep(0);
      *(_QWORD *)(v13 + *(int *)(Step + 20)) = *(_QWORD *)(v14 + *(int *)(Step + 20));
      swift_bridgeObjectRetain();
      goto LABEL_140;
    case 9u:
      v81 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v13, v14, v81);
      v82 = type metadata accessor for VariableStep(0);
      *(_QWORD *)(v13 + *(int *)(v82 + 20)) = *(_QWORD *)(v14 + *(int *)(v82 + 20));
      swift_bridgeObjectRetain();
      goto LABEL_140;
    case 0xAu:
    case 0x15u:
    case 0x1Du:
      *(_QWORD *)v13 = *(_QWORD *)v14;
      swift_bridgeObjectRetain();
      goto LABEL_140;
    case 0xBu:
    case 0x17u:
    case 0x18u:
    case 0x1Au:
      v102 = *(_QWORD *)(v14 + 8);
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *(_QWORD *)(v13 + 8) = v102;
      swift_bridgeObjectRetain();
      goto LABEL_140;
    case 0xCu:
      v83 = *(_QWORD *)(v14 + 8);
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *(_QWORD *)(v13 + 8) = v83;
      v84 = *(_QWORD *)(v14 + 24);
      *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
      *(_QWORD *)(v13 + 24) = v84;
      v85 = *(_QWORD *)(v14 + 32);
      v86 = *(_QWORD *)(v14 + 40);
      *(_QWORD *)(v13 + 32) = v85;
      *(_QWORD *)(v13 + 40) = v86;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_140;
    case 0xDu:
      type metadata accessor for SessionError();
      v87 = (char *)&loc_23F84537C + 4 * word_23FB63522[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0xEu:
      v88 = *(_QWORD *)v14;
      v89 = *(_QWORD *)(v14 + 8);
      sub_23F6D1E20(*(_QWORD *)v14, v89);
      *(_QWORD *)v13 = v88;
      *(_QWORD *)(v13 + 8) = v89;
      v90 = *(_QWORD *)(v14 + 16);
      v91 = *(_QWORD *)(v14 + 24);
      sub_23F6D1E20(v90, v91);
      *(_QWORD *)(v13 + 16) = v90;
      *(_QWORD *)(v13 + 24) = v91;
      v92 = *(_QWORD *)(v14 + 40);
      *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
      *(_QWORD *)(v13 + 40) = v92;
      swift_bridgeObjectRetain();
      goto LABEL_140;
    case 0xFu:
      v93 = sub_23FB2C77C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v13, v14, v93);
      goto LABEL_140;
    case 0x10u:
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v14, 1, v6))
      {
        v165 = sub_23F6916B8(&qword_256EA2798);
        memcpy((void *)v13, (const void *)v14, *(_QWORD *)(*(_QWORD *)(v165 - 8) + 64));
      }
      else
      {
        v7(v13, v14, v6);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v13, 0, 1, v6);
      }
      v254 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
      v7(v13 + v254[5], v14 + v254[5], v6);
      v255 = v254[6];
      v256 = (void *)(v13 + v255);
      v257 = (const void *)(v14 + v255);
      v258 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v259 = sub_23FB2ED38();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v259 - 8) + 16))(v256, v257, v259);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v256, v257, *(_QWORD *)(*(_QWORD *)(v258 - 8) + 64));
      }
      v260 = v254[7];
      v261 = v13 + v260;
      v262 = v14 + v260;
      v263 = sub_23FB2C764();
      v264 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v263 - 8) + 16);
      v264(v261, v262, v263);
      v265 = v254[8];
      v266 = (_QWORD *)(v13 + v265);
      v267 = (_QWORD *)(v14 + v265);
      v268 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
      v269 = swift_getEnumCaseMultiPayload();
      if (v269 == 1)
      {
        *v266 = *v267;
        swift_bridgeObjectRetain();
        goto LABEL_93;
      }
      if (!v269)
      {
        v270 = v267[1];
        *v266 = *v267;
        v266[1] = v270;
        v271 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
        v373 = (char *)v266 + v271;
        v272 = (char *)v267 + v271;
        swift_bridgeObjectRetain();
        v264((uint64_t)v373, (uint64_t)v272, v263);
LABEL_93:
        swift_storeEnumTagMultiPayload();
        goto LABEL_140;
      }
      memcpy(v266, v267, *(_QWORD *)(*(_QWORD *)(v268 - 8) + 64));
LABEL_140:
      swift_storeEnumTagMultiPayload();
LABEL_141:
      v334 = a3[8];
      v335 = a3[9];
      v336 = (_QWORD *)(a1 + v334);
      v337 = (_QWORD *)(a2 + v334);
      v338 = v337[1];
      *v336 = *v337;
      v336[1] = v338;
      v339 = (_QWORD *)(a1 + v335);
      v340 = (_QWORD *)(a2 + v335);
      v341 = v340[1];
      *v339 = *v340;
      v339[1] = v341;
      v342 = a3[10];
      v343 = a3[11];
      v344 = (_QWORD *)(a1 + v342);
      v345 = (_QWORD *)(a2 + v342);
      v346 = v345[1];
      *v344 = *v345;
      v344[1] = v346;
      v347 = (_QWORD *)(a1 + v343);
      v348 = (_QWORD *)(a2 + v343);
      v349 = v348[1];
      *v347 = *v348;
      v347[1] = v349;
      v350 = a3[12];
      v351 = a1 + v350;
      v352 = a2 + v350;
      v353 = sub_23FB2C470();
      v374 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v353 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v374(v351, v352, v353);
      v354 = (int *)type metadata accessor for Timepoint();
      *(_QWORD *)(v351 + v354[5]) = *(_QWORD *)(v352 + v354[5]);
      *(_QWORD *)(v351 + v354[6]) = *(_QWORD *)(v352 + v354[6]);
      v375((void *)(v351 + v354[7]), (const void *)(v352 + v354[7]), v376);
      v355 = a3[13];
      v356 = a3[14];
      v357 = (_QWORD *)(a1 + v355);
      v358 = (_QWORD *)(a2 + v355);
      v359 = v358[1];
      *v357 = *v358;
      v357[1] = v359;
      v360 = a1 + v356;
      v361 = a2 + v356;
      *(_BYTE *)(v360 + 8) = *(_BYTE *)(v361 + 8);
      *(_QWORD *)v360 = *(_QWORD *)v361;
      *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    case 0x11u:
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v14, 1, v6))
      {
        v94 = sub_23F6916B8(&qword_256EA2798);
        memcpy((void *)v13, (const void *)v14, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
      }
      else
      {
        v7(v13, v14, v6);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v13, 0, 1, v6);
      }
      v201 = type metadata accessor for ActionStepResult(0);
      v202 = *(int *)(v201 + 20);
      v203 = (_QWORD *)(v13 + v202);
      v204 = (_QWORD *)(v14 + v202);
      v205 = v204[1];
      *v203 = *v204;
      v203[1] = v205;
      v371 = v201;
      v206 = *(int *)(v201 + 24);
      v207 = v13 + v206;
      v208 = v14 + v206;
      v209 = sub_23FB2C80C();
      v210 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v209 - 8) + 16);
      swift_bridgeObjectRetain();
      v210(v207, v208, v209);
      v211 = *(int *)(type metadata accessor for ActionResult(0) + 20);
      v212 = (void *)(v207 + v211);
      v213 = (const void *)(v208 + v211);
      v214 = sub_23FB2D0B8();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v213, 1, v214))
      {
        v215 = sub_23F6916B8(&qword_256EA2780);
        memcpy(v212, v213, *(_QWORD *)(*(_QWORD *)(v215 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v214 - 8) + 16))(v212, v213, v214);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v212, 0, 1, v214);
      }
      v244 = *(int *)(v371 + 28);
      v245 = (_QWORD *)(v13 + v244);
      v246 = (_QWORD *)(v14 + v244);
      v247 = v246[1];
      *v245 = *v246;
      v245[1] = v247;
      swift_bridgeObjectRetain();
      goto LABEL_140;
    case 0x12u:
      *(_QWORD *)v13 = *(_QWORD *)v14;
      StepResults = type metadata accessor for QueryStepResults(0);
      v96 = *(int *)(StepResults + 20);
      __dstb = (void *)(v14 + v96);
      v369 = v13 + v96;
      v97 = v7;
      v98 = sub_23FB2C764();
      v99 = *(void (**)(uint64_t, void *, uint64_t))(*(_QWORD *)(v98 - 8) + 16);
      swift_bridgeObjectRetain();
      v99(v369, __dstb, v98);
      v97(v13 + *(int *)(StepResults + 24), v14 + *(int *)(StepResults + 24), v376);
      goto LABEL_140;
    case 0x13u:
      v100 = sub_23FB2C938();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(v13, v14, v100);
      goto LABEL_140;
    case 0x14u:
      v166 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v166 - 8) + 16))(v13, v14, v166);
      v167 = (int *)type metadata accessor for ActionResolverRequest(0);
      v168 = v167[5];
      v169 = (_QWORD *)(v13 + v168);
      v170 = (uint64_t *)(v14 + v168);
      v172 = *v170;
      v171 = v170[1];
      *v169 = v172;
      v169[1] = v171;
      *(_QWORD *)(v13 + v167[6]) = *(_QWORD *)(v14 + v167[6]);
      *(_QWORD *)(v13 + v167[7]) = *(_QWORD *)(v14 + v167[7]);
      *(_QWORD *)(v13 + v167[8]) = *(_QWORD *)(v14 + v167[8]);
      *(_BYTE *)(v13 + v167[9]) = *(_BYTE *)(v14 + v167[9]);
      *(_BYTE *)(v13 + v167[10]) = *(_BYTE *)(v14 + v167[10]);
      *(_BYTE *)(v13 + v167[11]) = *(_BYTE *)(v14 + v167[11]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_140;
    case 0x16u:
    case 0x24u:
      v101 = *(_QWORD *)(v14 + 8);
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *(_QWORD *)(v13 + 8) = v101;
      *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_140;
    case 0x1Bu:
      v173 = *(_QWORD *)(v14 + 8);
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *(_QWORD *)(v13 + 8) = v173;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_140;
    case 0x1Cu:
      v174 = *(_QWORD *)(v14 + 8);
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *(_QWORD *)(v13 + 8) = v174;
      v175 = *(_QWORD *)(v14 + 24);
      *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
      *(_QWORD *)(v13 + 24) = v175;
      *(_DWORD *)(v13 + 32) = *(_DWORD *)(v14 + 32);
      v177 = *(_QWORD *)(v14 + 40);
      v176 = *(_QWORD *)(v14 + 48);
      *(_QWORD *)(v13 + 40) = v177;
      *(_QWORD *)(v13 + 48) = v176;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_140;
    case 0x1Eu:
      v103 = sub_23FB2D004();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v13, v14, v103);
      goto LABEL_140;
    case 0x1Fu:
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v14, 1, v6))
      {
        v104 = sub_23F6916B8(&qword_256EA2798);
        memcpy((void *)v13, (const void *)v14, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
      }
      else
      {
        v7(v13, v14, v6);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v13, 0, 1, v6);
      }
      v216 = type metadata accessor for StatementResult(0);
      v217 = *(int *)(v216 + 20);
      v218 = (_QWORD *)(v13 + v217);
      v219 = (_QWORD *)(v14 + v217);
      v220 = v219[1];
      *v218 = *v219;
      v218[1] = v220;
      v372 = v216;
      v221 = *(int *)(v216 + 24);
      v222 = v13 + v221;
      v223 = v14 + v221;
      v224 = sub_23FB2D0DC();
      v225 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v224 - 8) + 16);
      swift_bridgeObjectRetain();
      v225(v222, v223, v224);
      v226 = *(int *)(type metadata accessor for StatementResultPayload(0) + 20);
      v227 = (void *)(v222 + v226);
      v228 = (const void *)(v223 + v226);
      v229 = sub_23FB2D0B8();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v228, 1, v229))
      {
        v230 = sub_23F6916B8(&qword_256EA2780);
        memcpy(v227, v228, *(_QWORD *)(*(_QWORD *)(v230 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v229 - 8) + 16))(v227, v228, v229);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v227, 0, 1, v229);
      }
      v248 = v372;
      v249 = *(int *)(v372 + 28);
      v250 = v13 + v249;
      v251 = v14 + v249;
      v252 = sub_23FB2C764();
      v253 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v252 - 8) + 16);
      v253(v250, v251, v252);
      v253(v13 + *(int *)(v248 + 32), v14 + *(int *)(v248 + 32), v252);
      v253(v13 + *(int *)(v248 + 36), v14 + *(int *)(v248 + 36), v252);
      goto LABEL_140;
    case 0x20u:
      v105 = *(_QWORD *)(v14 + 8);
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *(_QWORD *)(v13 + 8) = v105;
      v106 = type metadata accessor for ExternalAgentTextQuery(0);
      v107 = *(int *)(v106 + 20);
      v108 = (void *)(v13 + v107);
      v109 = (const void *)(v14 + v107);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v109, 1, v6))
      {
        v110 = sub_23F6916B8(&qword_256EA2798);
        memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
      }
      else
      {
        v375(v108, v109, v6);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v108, 0, 1, v6);
      }
      v231 = *(int *)(v106 + 24);
      v232 = v13 + v231;
      v233 = v14 + v231;
      v234 = *(_QWORD *)(v233 + 8);
      if (v234)
        goto LABEL_128;
      *(_OWORD *)v232 = *(_OWORD *)v233;
      *(_QWORD *)(v232 + 16) = *(_QWORD *)(v233 + 16);
      goto LABEL_140;
    case 0x21u:
      *(_QWORD *)v13 = *(_QWORD *)v14;
      v178 = type metadata accessor for ExternalAgentSpeechQuery(0);
      v179 = *(int *)(v178 + 20);
      v180 = (void *)(v13 + v179);
      v181 = (const void *)(v14 + v179);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v181, 1, v6))
      {
        v182 = sub_23F6916B8(&qword_256EA2798);
        memcpy(v180, v181, *(_QWORD *)(*(_QWORD *)(v182 - 8) + 64));
      }
      else
      {
        v375(v180, v181, v6);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v180, 0, 1, v6);
      }
      v273 = *(int *)(v178 + 24);
      v232 = v13 + v273;
      v233 = v14 + v273;
      v234 = *(_QWORD *)(v233 + 8);
      if (v234)
        goto LABEL_128;
      *(_OWORD *)v232 = *(_OWORD *)v233;
      *(_QWORD *)(v232 + 16) = *(_QWORD *)(v233 + 16);
      goto LABEL_140;
    case 0x22u:
      v111 = type metadata accessor for RequestContent(0);
      v112 = swift_getEnumCaseMultiPayload();
      if (v112 != 3)
      {
        if (v112 == 2)
        {
          *(_QWORD *)v13 = *(_QWORD *)v14;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v112 != 1)
          {
            memcpy((void *)v13, (const void *)v14, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
            goto LABEL_135;
          }
          v113 = *(_QWORD *)(v14 + 8);
          *(_QWORD *)v13 = *(_QWORD *)v14;
          *(_QWORD *)(v13 + 8) = v113;
          v114 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
          v115 = v13 + v114;
          v116 = v14 + v114;
          v117 = sub_23FB2C764();
          v118 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 16);
          swift_bridgeObjectRetain();
          v118(v115, v116, v117);
          v6 = v376;
        }
LABEL_134:
        swift_storeEnumTagMultiPayload();
LABEL_135:
        v328 = type metadata accessor for ExternalAgentRequest(0);
        v329 = *(int *)(v328 + 20);
        v330 = (void *)(v13 + v329);
        v331 = (const void *)(v14 + v329);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v14 + v329, 1, v6))
        {
          v332 = sub_23F6916B8(&qword_256EA2798);
          memcpy(v330, v331, *(_QWORD *)(*(_QWORD *)(v332 - 8) + 64));
        }
        else
        {
          v375(v330, v331, v6);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v330, 0, 1, v6);
        }
        v333 = *(int *)(v328 + 24);
        v232 = v13 + v333;
        v233 = v14 + v333;
        v234 = *(_QWORD *)(v233 + 8);
        if (!v234)
        {
          *(_OWORD *)v232 = *(_OWORD *)v233;
          *(_QWORD *)(v232 + 16) = *(_QWORD *)(v233 + 16);
          goto LABEL_140;
        }
LABEL_128:
        *(_QWORD *)v232 = *(_QWORD *)v233;
        *(_QWORD *)(v232 + 8) = v234;
        *(_QWORD *)(v232 + 16) = *(_QWORD *)(v233 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_140;
      }
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v14, 1, v6))
      {
        v275 = sub_23F6916B8(&qword_256EA2798);
        memcpy((void *)v13, (const void *)v14, *(_QWORD *)(*(_QWORD *)(v275 - 8) + 64));
      }
      else
      {
        v7(v13, v14, v6);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v13, 0, 1, v6);
      }
      v296 = v7;
      v297 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
      v296(v13 + v297[5], v14 + v297[5], v6);
      v298 = v297[6];
      v299 = (void *)(v13 + v298);
      v300 = (const void *)(v14 + v298);
      v301 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v302 = sub_23FB2ED38();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v302 - 8) + 16))(v299, v300, v302);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v299, v300, *(_QWORD *)(*(_QWORD *)(v301 - 8) + 64));
      }
      v303 = v297[7];
      v304 = v13 + v303;
      v305 = v14 + v303;
      v306 = sub_23FB2C764();
      v307 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v306 - 8) + 16);
      v307(v304, v305, v306);
      v308 = v297[8];
      v309 = (_QWORD *)(v13 + v308);
      v310 = (_QWORD *)(v14 + v308);
      v311 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
      v312 = swift_getEnumCaseMultiPayload();
      if (v312 == 1)
      {
        *v309 = *v310;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v312)
        {
          memcpy(v309, v310, *(_QWORD *)(*(_QWORD *)(v311 - 8) + 64));
          goto LABEL_133;
        }
        v313 = v310[1];
        *v309 = *v310;
        v309[1] = v313;
        v314 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
        v364 = (char *)v309 + v314;
        v315 = (char *)v310 + v314;
        swift_bridgeObjectRetain();
        v307((uint64_t)v364, (uint64_t)v315, v306);
      }
      swift_storeEnumTagMultiPayload();
LABEL_133:
      v6 = v376;
      goto LABEL_134;
    case 0x23u:
      v183 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(v13, v14, v183);
      v184 = type metadata accessor for ExternalAgentOutcome(0);
      v185 = *(int *)(v184 + 20);
      v186 = v13 + v185;
      v187 = v14 + v185;
      v188 = sub_23FB2D0DC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v188 - 8) + 16))(v186, v187, v188);
      *(_QWORD *)(v13 + *(int *)(v184 + 24)) = *(_QWORD *)(v14 + *(int *)(v184 + 24));
      swift_bridgeObjectRetain();
      goto LABEL_140;
    case 0x25u:
      v119 = sub_23FB2E8D0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 16))(v13, v14, v119);
      v120 = type metadata accessor for ToolResolution(0);
      v121 = *(int *)(v120 + 20);
      v122 = v13 + v121;
      v123 = v14 + v121;
      v124 = sub_23FB2C764();
      v125 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 16);
      v125(v122, v123, v124);
      v125(v13 + *(int *)(v120 + 24), v14 + *(int *)(v120 + 24), v124);
      goto LABEL_140;
    case 0x26u:
      v126 = *(_QWORD *)(v14 + 8);
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *(_QWORD *)(v13 + 8) = v126;
      v127 = (int *)type metadata accessor for UndoRedoRequest(0);
      v128 = v127[5];
      v129 = (void *)(v13 + v128);
      v130 = (const void *)(v14 + v128);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v130, 1, v6))
      {
        v131 = sub_23F6916B8(&qword_256EA2798);
        memcpy(v129, v130, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
      }
      else
      {
        v375(v129, v130, v6);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v129, 0, 1, v6);
      }
      *(_BYTE *)(v13 + v127[6]) = *(_BYTE *)(v14 + v127[6]);
      v235 = v127[7];
      v236 = v13 + v235;
      v237 = v14 + v235;
      v238 = sub_23FB2C764();
      v239 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v238 - 8) + 16);
      v239(v236, v237, v238);
      v240 = v127[8];
      v241 = (void *)(v13 + v240);
      v242 = (const void *)(v14 + v240);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v242, 1, v238))
      {
        v243 = sub_23F6916B8(&qword_256EA49D8);
        memcpy(v241, v242, *(_QWORD *)(*(_QWORD *)(v243 - 8) + 64));
      }
      else
      {
        v239((uint64_t)v241, (uint64_t)v242, v238);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v241, 0, 1, v238);
      }
      goto LABEL_140;
    case 0x27u:
      v7(v13, v14, v6);
      v132 = (int *)type metadata accessor for ClientUndoRedoRequest(0);
      *(_BYTE *)(v13 + v132[5]) = *(_BYTE *)(v14 + v132[5]);
      v133 = v132[6];
      v134 = v13 + v133;
      v135 = v14 + v133;
      v136 = sub_23FB2C764();
      v137 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v136 - 8) + 16);
      v137(v134, v135, v136);
      v138 = v132[7];
      v139 = (void *)(v13 + v138);
      v140 = (const void *)(v14 + v138);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v140, 1, v136))
      {
        v141 = sub_23F6916B8(&qword_256EA49D8);
        memcpy(v139, v140, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
      }
      else
      {
        v137((uint64_t)v139, (uint64_t)v140, v136);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v139, 0, 1, v136);
      }
      goto LABEL_140;
    case 0x28u:
      v142 = sub_23FB2ED38();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v142 - 8) + 16))(v13, v14, v142);
      v143 = type metadata accessor for TypeConversionRequest(0);
      v144 = *(int *)(v143 + 20);
      v145 = v13 + v144;
      v146 = v14 + v144;
      v147 = sub_23FB2ED5C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v147 - 8) + 16))(v145, v146, v147);
      v148 = *(int *)(v143 + 24);
      v149 = v13 + v148;
      v150 = v14 + v148;
      v151 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v151 - 8) + 16))(v149, v150, v151);
      goto LABEL_140;
    case 0x29u:
      v152 = sub_23FB2ED38();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v152 - 8) + 16))(v13, v14, v152);
      v153 = type metadata accessor for TypeConversionResult(0);
      v154 = *(int *)(v153 + 20);
      v155 = v13 + v154;
      v156 = v14 + v154;
      v157 = sub_23FB2C764();
      v158 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v157 - 8) + 16);
      v158(v155, v156, v157);
      v158(v13 + *(int *)(v153 + 24), v14 + *(int *)(v153 + 24), v157);
      goto LABEL_140;
    case 0x2Au:
      v159 = *(_QWORD *)(v14 + 8);
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *(_QWORD *)(v13 + 8) = v159;
      *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
      DecorationResult = type metadata accessor for QueryDecorationResult(0);
      v161 = *(int *)(DecorationResult + 28);
      __dst = (void *)(v13 + v161);
      v370 = DecorationResult;
      v162 = (const void *)(v14 + v161);
      v163 = sub_23FB2E354();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v162, 1, v163))
      {
        v164 = sub_23F6916B8(&qword_256EA71F8);
        memcpy(__dst, v162, *(_QWORD *)(*(_QWORD *)(v164 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v163 - 8) + 16))(__dst, v162, v163);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__dst, 0, 1, v163);
      }
      *(_QWORD *)(v13 + *(int *)(v370 + 32)) = *(_QWORD *)(v14 + *(int *)(v370 + 32));
      swift_bridgeObjectRetain();
      goto LABEL_140;
    case 0x2Cu:
      v189 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v189 - 8) + 16))(v13, v14, v189);
      DecorationPrePlannerResult = type metadata accessor for QueryDecorationPrePlannerResult(0);
      v191 = *(int *)(DecorationPrePlannerResult + 20);
      v192 = (_QWORD *)(v13 + v191);
      v193 = (uint64_t *)(v14 + v191);
      v195 = *v193;
      v194 = v193[1];
      *v192 = v195;
      v192[1] = v194;
      v196 = *(int *)(DecorationPrePlannerResult + 24);
      v197 = v13 + v196;
      v198 = (uint64_t *)(v14 + v196);
      v199 = *v198;
      LOBYTE(v198) = *((_BYTE *)v198 + 8);
      *(_QWORD *)v197 = v199;
      *(_BYTE *)(v197 + 8) = (_BYTE)v198;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_140;
    default:
      memcpy((void *)v13, (const void *)v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      goto LABEL_141;
  }
}

uint64_t assignWithCopy for Session.Event(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  const void *v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, void *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  int EnumCaseMultiPayload;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(void *, uint64_t, uint64_t);
  uint64_t v43;
  int *v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int *v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t Step;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t StepResults;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(void *, void *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  const void *v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(void *, uint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(uint64_t, uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  int *v109;
  uint64_t v110;
  const void *v111;
  uint64_t v112;
  int *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(uint64_t, uint64_t, uint64_t);
  uint64_t v119;
  void *v120;
  const void *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void (*v127)(uint64_t, uint64_t, uint64_t);
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(uint64_t, uint64_t, uint64_t);
  uint64_t v142;
  uint64_t v143;
  uint64_t DecorationResult;
  uint64_t v145;
  const void *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  int *v151;
  uint64_t v152;
  _QWORD *v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  const void *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  void (*v164)(uint64_t, uint64_t, uint64_t);
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t DecorationPrePlannerResult;
  uint64_t v170;
  _QWORD *v171;
  _QWORD *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  _QWORD *v180;
  _QWORD *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  void (*v186)(uint64_t, uint64_t, uint64_t);
  uint64_t v187;
  void *v188;
  const void *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  _QWORD *v194;
  _QWORD *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  void (*v200)(uint64_t, uint64_t, uint64_t);
  uint64_t v201;
  void *v202;
  const void *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  __int128 *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  void (*v213)(uint64_t, uint64_t, uint64_t);
  uint64_t v214;
  void *v215;
  const void *v216;
  uint64_t v217;
  uint64_t v218;
  _QWORD *v219;
  _QWORD *v220;
  int *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  void (*v226)(uint64_t, uint64_t, uint64_t);
  __int128 v227;
  int *v228;
  uint64_t v229;
  void *v230;
  const void *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  void (*v238)(uint64_t, uint64_t, uint64_t);
  uint64_t v239;
  _QWORD *v240;
  _QWORD *v241;
  uint64_t v242;
  int v243;
  uint64_t v244;
  char *v245;
  uint64_t v246;
  __int128 v247;
  uint64_t v248;
  uint64_t v249;
  int *v250;
  uint64_t v251;
  const void *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  _QWORD *v260;
  _QWORD *v261;
  uint64_t v262;
  int v263;
  uint64_t v264;
  char *v265;
  int *v266;
  uint64_t v267;
  const void *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  _QWORD *v276;
  _QWORD *v277;
  uint64_t v278;
  int v279;
  uint64_t v280;
  char *v281;
  int *v282;
  uint64_t v283;
  uint64_t v284;
  __int128 *v285;
  unsigned int v286;
  __int128 v287;
  uint64_t v288;
  uint64_t v289;
  void *v290;
  const void *v291;
  uint64_t v292;
  uint64_t v293;
  __int128 v294;
  uint64_t v295;
  uint64_t v296;
  void *v297;
  const void *v298;
  uint64_t v299;
  uint64_t v300;
  __int128 v301;
  uint64_t v302;
  _QWORD *v303;
  _QWORD *v304;
  uint64_t v305;
  _QWORD *v306;
  _QWORD *v307;
  uint64_t v308;
  _QWORD *v309;
  _QWORD *v310;
  uint64_t v311;
  _QWORD *v312;
  _QWORD *v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  int *v318;
  uint64_t v319;
  _QWORD *v320;
  _QWORD *v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t *v324;
  uint64_t v325;
  uint64_t result;
  char *v327;
  char *v328;
  uint64_t v329;
  void *v330;
  void *v331;
  void *v332;
  void *v333;
  void *v334;
  void (*v335)(uint64_t, uint64_t, uint64_t);
  void *v336;
  void (*v337)(uint64_t, uint64_t, uint64_t);
  void *__dstf;
  void *__dstg;
  void *__dst;
  void *__dsta;
  int *__dstb;
  void *__dstc;
  int *__dstd;
  int *__dste;
  char *__dsth;
  void *__dsti;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  void (*v357)(uint64_t, uint64_t, uint64_t);
  void (*v358)(uint64_t, uint64_t, uint64_t);
  void (*v359)(uint64_t, uint64_t, uint64_t);
  void (*v360)(uint64_t, uint64_t, uint64_t);
  void (*v361)(uint64_t, uint64_t, uint64_t);
  void (*v362)(uint64_t, uint64_t, uint64_t);
  void (*v363)(uint64_t, uint64_t, uint64_t);
  void (*v364)(uint64_t, uint64_t, uint64_t);
  void (*v365)(uint64_t, uint64_t, uint64_t);
  void (*v366)(uint64_t, uint64_t, uint64_t);
  void (*v367)(uint64_t, uint64_t, uint64_t);
  void (*v368)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23FB2C4B8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v8(a1 + a3[5], a2 + a3[5], v6);
  v9 = a3[6];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1 + v9, 1, v6);
  v13 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v10, v11, v6);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    v14 = sub_23F6916B8(&qword_256EA2798);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v10, (uint64_t)v11, v6);
LABEL_7:
  if (a1 != a2)
  {
    v15 = a3[7];
    v16 = a1 + v15;
    v17 = a2 + v15;
    sub_23F83A7D4(a1 + v15, type metadata accessor for Session.Event.Payload);
    v18 = type metadata accessor for Session.Event.Payload(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v19 = sub_23FB2C998();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v17, v19);
        v20 = type metadata accessor for SessionStart(0);
        v21 = *(int *)(v20 + 20);
        v22 = v8;
        v23 = v16 + v21;
        v24 = v6;
        v25 = v17 + v21;
        v26 = sub_23FB2C908();
        v27 = v23;
        v8 = v22;
        v28 = v25;
        v6 = v24;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, v28, v26);
        *(_BYTE *)(v16 + *(int *)(v20 + 24)) = *(_BYTE *)(v17 + *(int *)(v20 + 24));
        goto LABEL_146;
      case 1u:
        *(_QWORD *)v16 = *(_QWORD *)v17;
        *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
        *(_BYTE *)(v16 + 16) = *(_BYTE *)(v17 + 16);
        v348 = v6;
        v357 = v8;
        v29 = type metadata accessor for TextQuery(0);
        v30 = *(int *)(v29 + 24);
        v31 = v16 + v30;
        __dstf = (void *)(v17 + v30);
        v32 = sub_23FB2C764();
        v33 = *(void (**)(uint64_t, void *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
        swift_bridgeObjectRetain();
        v34 = v31;
        v6 = v348;
        v33(v34, __dstf, v32);
        v35 = *(int *)(v29 + 28);
        v8 = v357;
        v36 = (_QWORD *)(v16 + v35);
        v37 = (_QWORD *)(v17 + v35);
        *v36 = *v37;
        v36[1] = v37[1];
        swift_bridgeObjectRetain();
        goto LABEL_146;
      case 2u:
        *(_QWORD *)v16 = *(_QWORD *)v17;
        *(_BYTE *)(v16 + 8) = *(_BYTE *)(v17 + 8);
        *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
        *(_QWORD *)(v16 + 24) = *(_QWORD *)(v17 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_146;
      case 3u:
        v38 = type metadata accessor for RequestContent(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v349 = v6;
        v358 = v8;
        if (EnumCaseMultiPayload != 3)
        {
          if (EnumCaseMultiPayload == 2)
          {
            *(_QWORD *)v16 = *(_QWORD *)v17;
            swift_bridgeObjectRetain();
          }
          else
          {
            if (EnumCaseMultiPayload != 1)
            {
              memcpy((void *)v16, (const void *)v17, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
              goto LABEL_128;
            }
            *(_QWORD *)v16 = *(_QWORD *)v17;
            *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
            v40 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
            v329 = v17 + v40;
            v330 = (void *)(v16 + v40);
            v41 = sub_23FB2C764();
            v42 = *(void (**)(void *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
            swift_bridgeObjectRetain();
            v42(v330, v329, v41);
          }
LABEL_127:
          swift_storeEnumTagMultiPayload();
LABEL_128:
          v282 = (int *)type metadata accessor for Request(0);
          *(_BYTE *)(v16 + v282[5]) = *(_BYTE *)(v17 + v282[5]);
          v283 = v282[6];
          v284 = v16 + v283;
          v285 = (__int128 *)(v17 + v283);
          v286 = *((unsigned __int8 *)v285 + 16);
          if (v286 <= 0xFD)
          {
            v288 = *((_QWORD *)v285 + 1);
            __dsti = *(void **)v285;
            sub_23F73515C(*(_QWORD *)v285, v288, v286);
            *(_QWORD *)v284 = __dsti;
            *(_QWORD *)(v284 + 8) = v288;
            *(_BYTE *)(v284 + 16) = v286;
          }
          else
          {
            v287 = *v285;
            *(_BYTE *)(v284 + 16) = *((_BYTE *)v285 + 16);
            *(_OWORD *)v284 = v287;
          }
          v289 = v282[7];
          v290 = (void *)(v16 + v289);
          v291 = (const void *)(v17 + v289);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v17 + v289, 1, v349))
          {
            v292 = sub_23F6916B8(&qword_256EA2798);
            memcpy(v290, v291, *(_QWORD *)(*(_QWORD *)(v292 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v290, v291, v349);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v290, 0, 1, v349);
          }
          v6 = v349;
          v293 = v282[8];
          v207 = v16 + v293;
          v208 = (__int128 *)(v17 + v293);
          v8 = v358;
          if (!*((_QWORD *)v208 + 1))
          {
            v294 = *v208;
            *(_QWORD *)(v207 + 16) = *((_QWORD *)v208 + 2);
            *(_OWORD *)v207 = v294;
LABEL_146:
            swift_storeEnumTagMultiPayload();
            break;
          }
LABEL_144:
          *(_QWORD *)v207 = *(_QWORD *)v208;
          *(_QWORD *)(v207 + 8) = *((_QWORD *)v208 + 1);
          *(_QWORD *)(v207 + 16) = *((_QWORD *)v208 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_146;
        }
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v17, 1, v6))
        {
          v248 = sub_23F6916B8(&qword_256EA2798);
          memcpy((void *)v16, (const void *)v17, *(_QWORD *)(*(_QWORD *)(v248 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v16, v17, v6);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v16, 0, 1, v6);
        }
        v250 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v16 + v250[5], v17 + v250[5], v6);
        v251 = v250[6];
        v334 = (void *)(v16 + v251);
        v252 = (const void *)(v17 + v251);
        v253 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v254 = sub_23FB2ED38();
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v254 - 8) + 16))(v334, v252, v254);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v334, v252, *(_QWORD *)(*(_QWORD *)(v253 - 8) + 64));
        }
        v255 = v250[7];
        v256 = v16 + v255;
        v257 = v17 + v255;
        v258 = sub_23FB2C764();
        v335 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v258 - 8) + 16);
        v335(v256, v257, v258);
        v259 = v250[8];
        v260 = (_QWORD *)(v16 + v259);
        v261 = (_QWORD *)(v17 + v259);
        v262 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
        v263 = swift_getEnumCaseMultiPayload();
        if (v263 == 1)
        {
          *v260 = *v261;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v263)
          {
            memcpy(v260, v261, *(_QWORD *)(*(_QWORD *)(v262 - 8) + 64));
            goto LABEL_127;
          }
          *v260 = *v261;
          v260[1] = v261[1];
          v264 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
          v327 = (char *)v260 + v264;
          v265 = (char *)v261 + v264;
          swift_bridgeObjectRetain();
          v335((uint64_t)v327, (uint64_t)v265, v258);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_127;
      case 4u:
        *(_QWORD *)v16 = *(_QWORD *)v17;
        *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
        *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
        *(_QWORD *)(v16 + 24) = *(_QWORD *)(v17 + 24);
        *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
        *(_QWORD *)(v16 + 40) = *(_QWORD *)(v17 + 40);
        *(_QWORD *)(v16 + 48) = *(_QWORD *)(v17 + 48);
        *(_BYTE *)(v16 + 56) = *(_BYTE *)(v17 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_146;
      case 5u:
        v43 = sub_23FB2C764();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v16, v17, v43);
        v44 = (int *)type metadata accessor for Action(0);
        v45 = v44[5];
        v46 = (_QWORD *)(v16 + v45);
        v47 = (_QWORD *)(v17 + v45);
        *v46 = *v47;
        v46[1] = v47[1];
        v48 = v44[6];
        v49 = (_QWORD *)(v16 + v48);
        v50 = (_QWORD *)(v17 + v48);
        *v49 = *v50;
        v49[1] = v50[1];
        v51 = v44[7];
        v52 = (_QWORD *)(v16 + v51);
        v53 = (_QWORD *)(v17 + v51);
        *v52 = *v53;
        v52[1] = v53[1];
        *(_BYTE *)(v16 + v44[8]) = *(_BYTE *)(v17 + v44[8]);
        *(_QWORD *)(v16 + v44[9]) = *(_QWORD *)(v17 + v44[9]);
        v54 = v44[10];
        v55 = (_QWORD *)(v16 + v54);
        v56 = (_QWORD *)(v17 + v54);
        *v55 = *v56;
        v55[1] = v56[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_146;
      case 6u:
        v57 = sub_23FB2C764();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v17, 1, v57))
        {
          v58 = sub_23F6916B8(&qword_256EA49D8);
          memcpy((void *)v16, (const void *)v17, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v16, v17, v57);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v16, 0, 1, v57);
        }
        v177 = type metadata accessor for ActionCancellation(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v16 + *(int *)(v177 + 20), v17 + *(int *)(v177 + 20), v57);
        goto LABEL_146;
      case 7u:
        v59 = sub_23FB2C764();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v16, v17, v59);
        v60 = (int *)type metadata accessor for ClientAction(0);
        v61 = v60[5];
        v62 = (_QWORD *)(v16 + v61);
        v63 = (_QWORD *)(v17 + v61);
        *v62 = *v63;
        v62[1] = v63[1];
        *(_QWORD *)(v16 + v60[6]) = *(_QWORD *)(v17 + v60[6]);
        v64 = v60[7];
        v65 = (_QWORD *)(v16 + v64);
        v66 = (_QWORD *)(v17 + v64);
        *v65 = *v66;
        v65[1] = v66[1];
        v67 = v60[8];
        v68 = (_QWORD *)(v16 + v67);
        v69 = (_QWORD *)(v17 + v67);
        *v68 = *v69;
        v68[1] = v69[1];
        *(_QWORD *)(v16 + v60[9]) = *(_QWORD *)(v17 + v60[9]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_146;
      case 8u:
        v70 = sub_23FB2C764();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v16, v17, v70);
        Step = type metadata accessor for QueryStep(0);
        *(_QWORD *)(v16 + *(int *)(Step + 20)) = *(_QWORD *)(v17 + *(int *)(Step + 20));
        swift_bridgeObjectRetain();
        goto LABEL_146;
      case 9u:
        v72 = sub_23FB2C764();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v16, v17, v72);
        v73 = type metadata accessor for VariableStep(0);
        *(_QWORD *)(v16 + *(int *)(v73 + 20)) = *(_QWORD *)(v17 + *(int *)(v73 + 20));
        swift_bridgeObjectRetain();
        goto LABEL_146;
      case 0xAu:
      case 0x15u:
      case 0x1Du:
        *(_QWORD *)v16 = *(_QWORD *)v17;
        swift_bridgeObjectRetain();
        goto LABEL_146;
      case 0xBu:
      case 0x17u:
      case 0x18u:
      case 0x1Au:
        *(_QWORD *)v16 = *(_QWORD *)v17;
        *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_146;
      case 0xCu:
        *(_QWORD *)v16 = *(_QWORD *)v17;
        *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
        *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
        *(_QWORD *)(v16 + 24) = *(_QWORD *)(v17 + 24);
        *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
        *(_QWORD *)(v16 + 40) = *(_QWORD *)(v17 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_146;
      case 0xDu:
        type metadata accessor for SessionError();
        v74 = (char *)&loc_23F84741C + 4 * word_23FB63584[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0xEu:
        v75 = *(_QWORD *)v17;
        v76 = *(_QWORD *)(v17 + 8);
        sub_23F6D1E20(*(_QWORD *)v17, v76);
        *(_QWORD *)v16 = v75;
        *(_QWORD *)(v16 + 8) = v76;
        v77 = *(_QWORD *)(v17 + 16);
        v78 = *(_QWORD *)(v17 + 24);
        sub_23F6D1E20(v77, v78);
        *(_QWORD *)(v16 + 16) = v77;
        *(_QWORD *)(v16 + 24) = v78;
        *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
        *(_QWORD *)(v16 + 40) = *(_QWORD *)(v17 + 40);
        swift_bridgeObjectRetain();
        goto LABEL_146;
      case 0xFu:
        v79 = sub_23FB2C77C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v16, v17, v79);
        goto LABEL_146;
      case 0x10u:
        v367 = v8;
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v17, 1, v6))
        {
          v149 = sub_23F6916B8(&qword_256EA2798);
          memcpy((void *)v16, (const void *)v17, *(_QWORD *)(*(_QWORD *)(v149 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v16, v17, v6);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v16, 0, 1, v6);
        }
        v228 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
        v356 = v6;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v16 + v228[5], v17 + v228[5], v6);
        v229 = v228[6];
        v230 = (void *)(v16 + v229);
        v231 = (const void *)(v17 + v229);
        v232 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v233 = sub_23FB2ED38();
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v233 - 8) + 16))(v230, v231, v233);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v230, v231, *(_QWORD *)(*(_QWORD *)(v232 - 8) + 64));
        }
        v234 = v228[7];
        v235 = v16 + v234;
        v236 = v17 + v234;
        v237 = sub_23FB2C764();
        v238 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v237 - 8) + 16);
        v238(v235, v236, v237);
        v239 = v228[8];
        v240 = (_QWORD *)(v16 + v239);
        v241 = (_QWORD *)(v17 + v239);
        v242 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
        v243 = swift_getEnumCaseMultiPayload();
        if (v243 == 1)
        {
          *v240 = *v241;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v243)
          {
            memcpy(v240, v241, *(_QWORD *)(*(_QWORD *)(v242 - 8) + 64));
LABEL_101:
            v6 = v356;
            v8 = v367;
            goto LABEL_146;
          }
          *v240 = *v241;
          v240[1] = v241[1];
          v244 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
          __dsth = (char *)v240 + v244;
          v245 = (char *)v241 + v244;
          swift_bridgeObjectRetain();
          v238((uint64_t)__dsth, (uint64_t)v245, v237);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_101;
      case 0x11u:
        v350 = v6;
        v359 = v8;
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v17, 1, v6))
        {
          v80 = sub_23F6916B8(&qword_256EA2798);
          memcpy((void *)v16, (const void *)v17, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v16, v17, v6);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v16, 0, 1, v6);
        }
        v178 = type metadata accessor for ActionStepResult(0);
        v179 = *(int *)(v178 + 20);
        v180 = (_QWORD *)(v16 + v179);
        v181 = (_QWORD *)(v17 + v179);
        *v180 = *v181;
        v180[1] = v181[1];
        __dstd = (int *)v178;
        v182 = *(int *)(v178 + 24);
        v183 = v16 + v182;
        v184 = v17 + v182;
        v185 = sub_23FB2C80C();
        v186 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v185 - 8) + 16);
        swift_bridgeObjectRetain();
        v186(v183, v184, v185);
        v187 = *(int *)(type metadata accessor for ActionResult(0) + 20);
        v188 = (void *)(v183 + v187);
        v189 = (const void *)(v184 + v187);
        v190 = sub_23FB2D0B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v189, 1, v190))
        {
          v191 = sub_23F6916B8(&qword_256EA2780);
          memcpy(v188, v189, *(_QWORD *)(*(_QWORD *)(v191 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v190 - 8) + 16))(v188, v189, v190);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v188, 0, 1, v190);
        }
        v218 = __dstd[7];
        v219 = (_QWORD *)(v16 + v218);
        v220 = (_QWORD *)(v17 + v218);
        *v219 = *v220;
        v219[1] = v220[1];
        swift_bridgeObjectRetain();
        goto LABEL_84;
      case 0x12u:
        *(_QWORD *)v16 = *(_QWORD *)v17;
        StepResults = type metadata accessor for QueryStepResults(0);
        v82 = *(int *)(StepResults + 20);
        v331 = (void *)(v17 + v82);
        __dstg = (void *)(v16 + v82);
        v351 = v6;
        v360 = v8;
        v83 = sub_23FB2C764();
        v84 = *(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v83 - 8) + 16);
        swift_bridgeObjectRetain();
        v85 = v83;
        v8 = v360;
        v84(__dstg, v331, v85);
        v6 = v351;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v16 + *(int *)(StepResults + 24), v17 + *(int *)(StepResults + 24), v351);
        goto LABEL_146;
      case 0x13u:
        v86 = sub_23FB2C938();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v16, v17, v86);
        goto LABEL_146;
      case 0x14u:
        v150 = sub_23FB2C764();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v150 - 8) + 16))(v16, v17, v150);
        v151 = (int *)type metadata accessor for ActionResolverRequest(0);
        v152 = v151[5];
        v153 = (_QWORD *)(v16 + v152);
        v154 = (_QWORD *)(v17 + v152);
        *v153 = *v154;
        v153[1] = v154[1];
        *(_QWORD *)(v16 + v151[6]) = *(_QWORD *)(v17 + v151[6]);
        *(_QWORD *)(v16 + v151[7]) = *(_QWORD *)(v17 + v151[7]);
        *(_QWORD *)(v16 + v151[8]) = *(_QWORD *)(v17 + v151[8]);
        *(_BYTE *)(v16 + v151[9]) = *(_BYTE *)(v17 + v151[9]);
        *(_BYTE *)(v16 + v151[10]) = *(_BYTE *)(v17 + v151[10]);
        *(_BYTE *)(v16 + v151[11]) = *(_BYTE *)(v17 + v151[11]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_146;
      case 0x16u:
      case 0x24u:
        *(_QWORD *)v16 = *(_QWORD *)v17;
        *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
        *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_146;
      case 0x1Bu:
        *(_QWORD *)v16 = *(_QWORD *)v17;
        *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_146;
      case 0x1Cu:
        *(_QWORD *)v16 = *(_QWORD *)v17;
        *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
        *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
        *(_QWORD *)(v16 + 24) = *(_QWORD *)(v17 + 24);
        *(_DWORD *)(v16 + 32) = *(_DWORD *)(v17 + 32);
        *(_QWORD *)(v16 + 40) = *(_QWORD *)(v17 + 40);
        *(_QWORD *)(v16 + 48) = *(_QWORD *)(v17 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_146;
      case 0x1Eu:
        v87 = sub_23FB2D004();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(v16, v17, v87);
        goto LABEL_146;
      case 0x1Fu:
        v350 = v6;
        v359 = v8;
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v17, 1, v6))
        {
          v88 = sub_23F6916B8(&qword_256EA2798);
          memcpy((void *)v16, (const void *)v17, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v16, v17, v6);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v16, 0, 1, v6);
        }
        v192 = type metadata accessor for StatementResult(0);
        v193 = *(int *)(v192 + 20);
        v194 = (_QWORD *)(v16 + v193);
        v195 = (_QWORD *)(v17 + v193);
        *v194 = *v195;
        v194[1] = v195[1];
        __dste = (int *)v192;
        v196 = *(int *)(v192 + 24);
        v197 = v16 + v196;
        v198 = v17 + v196;
        v199 = sub_23FB2D0DC();
        v200 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v199 - 8) + 16);
        swift_bridgeObjectRetain();
        v200(v197, v198, v199);
        v201 = *(int *)(type metadata accessor for StatementResultPayload(0) + 20);
        v202 = (void *)(v197 + v201);
        v203 = (const void *)(v198 + v201);
        v204 = sub_23FB2D0B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v203, 1, v204))
        {
          v205 = sub_23F6916B8(&qword_256EA2780);
          memcpy(v202, v203, *(_QWORD *)(*(_QWORD *)(v205 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v204 - 8) + 16))(v202, v203, v204);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v202, 0, 1, v204);
        }
        v221 = __dste;
        v222 = __dste[7];
        v223 = v16 + v222;
        v224 = v17 + v222;
        v225 = sub_23FB2C764();
        v226 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v225 - 8) + 16);
        v226(v223, v224, v225);
        v226(v16 + v221[8], v17 + v221[8], v225);
        v226(v16 + v221[9], v17 + v221[9], v225);
        goto LABEL_84;
      case 0x20u:
        v361 = v8;
        *(_QWORD *)v16 = *(_QWORD *)v17;
        *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
        v89 = type metadata accessor for ExternalAgentTextQuery(0);
        v90 = *(int *)(v89 + 20);
        __dst = (void *)(v16 + v90);
        v91 = v6;
        v92 = (const void *)(v17 + v90);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v92, 1, v91))
        {
          v93 = sub_23F6916B8(&qword_256EA2798);
          memcpy(__dst, v92, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(__dst, v92, v91);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__dst, 0, 1, v91);
        }
        v6 = v91;
        v206 = *(int *)(v89 + 24);
        v207 = v16 + v206;
        v208 = (__int128 *)(v17 + v206);
        v8 = v361;
        if (*((_QWORD *)v208 + 1))
          goto LABEL_144;
        v227 = *v208;
        *(_QWORD *)(v207 + 16) = *((_QWORD *)v208 + 2);
        *(_OWORD *)v207 = v227;
        goto LABEL_146;
      case 0x21u:
        v368 = v8;
        *(_QWORD *)v16 = *(_QWORD *)v17;
        v155 = type metadata accessor for ExternalAgentSpeechQuery(0);
        v156 = *(int *)(v155 + 20);
        __dstc = (void *)(v16 + v156);
        v157 = v6;
        v158 = (const void *)(v17 + v156);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v158, 1, v157))
        {
          v159 = sub_23F6916B8(&qword_256EA2798);
          memcpy(__dstc, v158, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(__dstc, v158, v157);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__dstc, 0, 1, v157);
        }
        v6 = v157;
        v8 = v368;
        v246 = *(int *)(v155 + 24);
        v207 = v16 + v246;
        v208 = (__int128 *)(v17 + v246);
        if (*((_QWORD *)v208 + 1))
          goto LABEL_144;
        v247 = *v208;
        *(_QWORD *)(v207 + 16) = *((_QWORD *)v208 + 2);
        *(_OWORD *)v207 = v247;
        goto LABEL_146;
      case 0x22u:
        v94 = type metadata accessor for RequestContent(0);
        v95 = swift_getEnumCaseMultiPayload();
        v352 = v6;
        v362 = v8;
        if (v95 != 3)
        {
          if (v95 == 2)
          {
            *(_QWORD *)v16 = *(_QWORD *)v17;
            swift_bridgeObjectRetain();
          }
          else
          {
            if (v95 != 1)
            {
              memcpy((void *)v16, (const void *)v17, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
              goto LABEL_140;
            }
            *(_QWORD *)v16 = *(_QWORD *)v17;
            *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
            v96 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
            v332 = (void *)(v16 + v96);
            v97 = v17 + v96;
            v98 = sub_23FB2C764();
            v99 = *(void (**)(void *, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 16);
            swift_bridgeObjectRetain();
            v99(v332, v97, v98);
          }
LABEL_139:
          swift_storeEnumTagMultiPayload();
LABEL_140:
          v295 = type metadata accessor for ExternalAgentRequest(0);
          v296 = *(int *)(v295 + 20);
          v297 = (void *)(v16 + v296);
          v298 = (const void *)(v17 + v296);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v17 + v296, 1, v352))
          {
            v299 = sub_23F6916B8(&qword_256EA2798);
            memcpy(v297, v298, *(_QWORD *)(*(_QWORD *)(v299 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v297, v298, v352);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v297, 0, 1, v352);
          }
          v6 = v352;
          v300 = *(int *)(v295 + 24);
          v207 = v16 + v300;
          v208 = (__int128 *)(v17 + v300);
          v8 = v362;
          if (!*((_QWORD *)v208 + 1))
          {
            v301 = *v208;
            *(_QWORD *)(v207 + 16) = *((_QWORD *)v208 + 2);
            *(_OWORD *)v207 = v301;
            goto LABEL_146;
          }
          goto LABEL_144;
        }
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v17, 1, v6))
        {
          v249 = sub_23F6916B8(&qword_256EA2798);
          memcpy((void *)v16, (const void *)v17, *(_QWORD *)(*(_QWORD *)(v249 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v16, v17, v6);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v16, 0, 1, v6);
        }
        v266 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v16 + v266[5], v17 + v266[5], v6);
        v267 = v266[6];
        v336 = (void *)(v16 + v267);
        v268 = (const void *)(v17 + v267);
        v269 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v270 = sub_23FB2ED38();
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v270 - 8) + 16))(v336, v268, v270);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v336, v268, *(_QWORD *)(*(_QWORD *)(v269 - 8) + 64));
        }
        v271 = v266[7];
        v272 = v16 + v271;
        v273 = v17 + v271;
        v274 = sub_23FB2C764();
        v337 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v274 - 8) + 16);
        v337(v272, v273, v274);
        v275 = v266[8];
        v276 = (_QWORD *)(v16 + v275);
        v277 = (_QWORD *)(v17 + v275);
        v278 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
        v279 = swift_getEnumCaseMultiPayload();
        if (v279 == 1)
        {
          *v276 = *v277;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v279)
          {
            memcpy(v276, v277, *(_QWORD *)(*(_QWORD *)(v278 - 8) + 64));
            goto LABEL_139;
          }
          *v276 = *v277;
          v276[1] = v277[1];
          v280 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
          v328 = (char *)v276 + v280;
          v281 = (char *)v277 + v280;
          swift_bridgeObjectRetain();
          v337((uint64_t)v328, (uint64_t)v281, v274);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_139;
      case 0x23u:
        v160 = sub_23FB2C764();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v160 - 8) + 16))(v16, v17, v160);
        v161 = type metadata accessor for ExternalAgentOutcome(0);
        v162 = *(int *)(v161 + 20);
        v163 = v16 + v162;
        v164 = v8;
        v165 = v17 + v162;
        v166 = sub_23FB2D0DC();
        v167 = v165;
        v8 = v164;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v166 - 8) + 16))(v163, v167, v166);
        *(_QWORD *)(v16 + *(int *)(v161 + 24)) = *(_QWORD *)(v17 + *(int *)(v161 + 24));
        swift_bridgeObjectRetain();
        goto LABEL_146;
      case 0x25u:
        v100 = sub_23FB2E8D0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(v16, v17, v100);
        v101 = type metadata accessor for ToolResolution(0);
        v102 = *(int *)(v101 + 20);
        v363 = v8;
        v103 = v16 + v102;
        v104 = v17 + v102;
        v353 = v6;
        v105 = sub_23FB2C764();
        v106 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 16);
        v107 = v104;
        v8 = v363;
        v106(v103, v107, v105);
        v108 = v105;
        v6 = v353;
        v106(v16 + *(int *)(v101 + 24), v17 + *(int *)(v101 + 24), v108);
        goto LABEL_146;
      case 0x26u:
        v364 = v8;
        *(_QWORD *)v16 = *(_QWORD *)v17;
        *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
        v109 = (int *)type metadata accessor for UndoRedoRequest(0);
        v110 = v109[5];
        __dsta = (void *)(v16 + v110);
        v111 = (const void *)(v17 + v110);
        swift_bridgeObjectRetain();
        v354 = v6;
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v111, 1, v6))
        {
          v112 = sub_23F6916B8(&qword_256EA2798);
          memcpy(__dsta, v111, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(__dsta, v111, v6);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__dsta, 0, 1, v6);
        }
        *(_BYTE *)(v16 + v109[6]) = *(_BYTE *)(v17 + v109[6]);
        v209 = v109[7];
        v210 = v16 + v209;
        v211 = v17 + v209;
        v212 = sub_23FB2C764();
        v213 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v212 - 8) + 16);
        v213(v210, v211, v212);
        v214 = v109[8];
        v215 = (void *)(v16 + v214);
        v216 = (const void *)(v17 + v214);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v216, 1, v212))
        {
          v217 = sub_23F6916B8(&qword_256EA49D8);
          memcpy(v215, v216, *(_QWORD *)(*(_QWORD *)(v217 - 8) + 64));
        }
        else
        {
          v213((uint64_t)v215, (uint64_t)v216, v212);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v215, 0, 1, v212);
        }
        v8 = v364;
        swift_storeEnumTagMultiPayload();
        v6 = v354;
        break;
      case 0x27u:
        v359 = v8;
        v350 = v6;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v16, v17, v6);
        v113 = (int *)type metadata accessor for ClientUndoRedoRequest(0);
        *(_BYTE *)(v16 + v113[5]) = *(_BYTE *)(v17 + v113[5]);
        v114 = v113[6];
        v115 = v16 + v114;
        v116 = v17 + v114;
        v117 = sub_23FB2C764();
        v118 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 16);
        v118(v115, v116, v117);
        v119 = v113[7];
        v120 = (void *)(v16 + v119);
        v121 = (const void *)(v17 + v119);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v121, 1, v117))
        {
          v122 = sub_23F6916B8(&qword_256EA49D8);
          memcpy(v120, v121, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
        }
        else
        {
          v118((uint64_t)v120, (uint64_t)v121, v117);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v120, 0, 1, v117);
        }
LABEL_84:
        swift_storeEnumTagMultiPayload();
        v6 = v350;
        v8 = v359;
        break;
      case 0x28u:
        v123 = sub_23FB2ED38();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v123 - 8) + 16))(v16, v17, v123);
        v124 = type metadata accessor for TypeConversionRequest(0);
        v125 = *(int *)(v124 + 20);
        v126 = v16 + v125;
        v127 = v8;
        v128 = v17 + v125;
        v129 = sub_23FB2ED5C();
        v130 = v128;
        v8 = v127;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 16))(v126, v130, v129);
        v131 = *(int *)(v124 + 24);
        v132 = v16 + v131;
        v133 = v17 + v131;
        v134 = sub_23FB2C764();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(v132, v133, v134);
        goto LABEL_146;
      case 0x29u:
        v135 = sub_23FB2ED38();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v135 - 8) + 16))(v16, v17, v135);
        v136 = type metadata accessor for TypeConversionResult(0);
        v137 = *(int *)(v136 + 20);
        v365 = v8;
        v138 = v16 + v137;
        v139 = v17 + v137;
        v355 = v6;
        v140 = sub_23FB2C764();
        v141 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v140 - 8) + 16);
        v142 = v139;
        v8 = v365;
        v141(v138, v142, v140);
        v143 = v140;
        v6 = v355;
        v141(v16 + *(int *)(v136 + 24), v17 + *(int *)(v136 + 24), v143);
        goto LABEL_146;
      case 0x2Au:
        v366 = v8;
        *(_QWORD *)v16 = *(_QWORD *)v17;
        *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
        *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
        DecorationResult = type metadata accessor for QueryDecorationResult(0);
        v145 = *(int *)(DecorationResult + 28);
        v333 = (void *)(v16 + v145);
        __dstb = (int *)DecorationResult;
        v146 = (const void *)(v17 + v145);
        v147 = sub_23FB2E354();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v146, 1, v147))
        {
          v148 = sub_23F6916B8(&qword_256EA71F8);
          memcpy(v333, v146, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v147 - 8) + 16))(v333, v146, v147);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v333, 0, 1, v147);
        }
        v8 = v366;
        *(_QWORD *)(v16 + __dstb[8]) = *(_QWORD *)(v17 + __dstb[8]);
        swift_bridgeObjectRetain();
        goto LABEL_146;
      case 0x2Cu:
        v168 = sub_23FB2C764();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v168 - 8) + 16))(v16, v17, v168);
        DecorationPrePlannerResult = type metadata accessor for QueryDecorationPrePlannerResult(0);
        v170 = *(int *)(DecorationPrePlannerResult + 20);
        v171 = (_QWORD *)(v16 + v170);
        v172 = (_QWORD *)(v17 + v170);
        *v171 = *v172;
        v171[1] = v172[1];
        v173 = *(int *)(DecorationPrePlannerResult + 24);
        v174 = v16 + v173;
        v175 = (uint64_t *)(v17 + v173);
        v176 = *v175;
        LOBYTE(v175) = *((_BYTE *)v175 + 8);
        *(_QWORD *)v174 = v176;
        *(_BYTE *)(v174 + 8) = (_BYTE)v175;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_146;
      default:
        memcpy((void *)v16, (const void *)v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        break;
    }
  }
  v302 = a3[8];
  v303 = (_QWORD *)(a1 + v302);
  v304 = (_QWORD *)(a2 + v302);
  *v303 = *v304;
  v303[1] = v304[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v305 = a3[9];
  v306 = (_QWORD *)(a1 + v305);
  v307 = (_QWORD *)(a2 + v305);
  *v306 = *v307;
  v306[1] = v307[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v308 = a3[10];
  v309 = (_QWORD *)(a1 + v308);
  v310 = (_QWORD *)(a2 + v308);
  *v309 = *v310;
  v309[1] = v310[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v311 = a3[11];
  v312 = (_QWORD *)(a1 + v311);
  v313 = (_QWORD *)(a2 + v311);
  *v312 = *v313;
  v312[1] = v313[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v314 = a3[12];
  v315 = a1 + v314;
  v316 = a2 + v314;
  v317 = sub_23FB2C470();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v317 - 8) + 24))(v315, v316, v317);
  v318 = (int *)type metadata accessor for Timepoint();
  *(_QWORD *)(v315 + v318[5]) = *(_QWORD *)(v316 + v318[5]);
  *(_QWORD *)(v315 + v318[6]) = *(_QWORD *)(v316 + v318[6]);
  v8(v315 + v318[7], v316 + v318[7], v6);
  v319 = a3[13];
  v320 = (_QWORD *)(a1 + v319);
  v321 = (_QWORD *)(a2 + v319);
  *v320 = *v321;
  v320[1] = v321[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v322 = a3[14];
  v323 = a1 + v322;
  v324 = (uint64_t *)(a2 + v322);
  v325 = *v324;
  *(_BYTE *)(v323 + 8) = *((_BYTE *)v324 + 8);
  *(_QWORD *)v323 = v325;
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for Session.Event(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t Step;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t StepResults;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  int *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  int *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  void (*v70)(char *, char *, uint64_t);
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  void (*v90)(char *, char *, uint64_t);
  uint64_t v91;
  uint64_t v92;
  int EnumCaseMultiPayload;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  int *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t DecorationResult;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t DecorationPrePlannerResult;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  int *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  char *v148;
  void (*v149)(char *, char *, uint64_t);
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  int *v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  char *v164;
  void (*v165)(char *, char *, uint64_t);
  uint64_t v166;
  _OWORD *v167;
  _OWORD *v168;
  uint64_t v169;
  int *v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  int *v187;
  void (*v188)(char *, char *, uint64_t);
  uint64_t v189;
  uint64_t v190;
  int *v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  _OWORD *v202;
  _OWORD *v203;
  uint64_t v204;
  int *v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  _OWORD *v215;
  _OWORD *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  int *v221;
  uint64_t v222;
  char *v223;
  char *v224;
  uint64_t v225;
  char *v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  int *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t result;
  void (*v243)(char *, char *, uint64_t);
  char *__dstb;
  char *__dstc;
  char *__dstd;
  char *__dst;
  void (*__dsta)(char *, char *, uint64_t);
  void (*v249)(uint64_t, uint64_t, uint64_t);
  void (*v250)(uint64_t, uint64_t, uint64_t);
  void (*v251)(uint64_t, uint64_t, uint64_t);
  void (*v252)(uint64_t, uint64_t, uint64_t);
  void (*v253)(uint64_t, uint64_t, uint64_t);
  void (*v254)(uint64_t, uint64_t, uint64_t);
  void (*v255)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23FB2C4B8();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2 + v8, 1, v6))
  {
    v11 = sub_23F6916B8(&qword_256EA2798);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v6);
  }
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = type metadata accessor for Session.Event.Payload(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v16 = sub_23FB2C998();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
      v17 = type metadata accessor for SessionStart(0);
      v18 = *(int *)(v17 + 20);
      v19 = (char *)v13 + v18;
      v20 = (char *)v14 + v18;
      v21 = sub_23FB2C908();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      *((_BYTE *)v13 + *(int *)(v17 + 24)) = *((_BYTE *)v14 + *(int *)(v17 + 24));
      goto LABEL_109;
    case 1u:
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_BYTE *)v13 + 16) = *((_BYTE *)v14 + 16);
      v22 = type metadata accessor for TextQuery(0);
      v23 = *(int *)(v22 + 24);
      v24 = (char *)v13 + v23;
      v25 = (char *)v14 + v23;
      v26 = sub_23FB2C764();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
      *(_OWORD *)((char *)v13 + *(int *)(v22 + 28)) = *(_OWORD *)((char *)v14 + *(int *)(v22 + 28));
      goto LABEL_109;
    case 3u:
      v92 = type metadata accessor for RequestContent(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 3)
      {
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v6))
        {
          v190 = sub_23F6916B8(&qword_256EA2798);
          memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v190 - 8) + 64));
        }
        else
        {
          v7((uint64_t)v13, (uint64_t)v14, v6);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v13, 0, 1, v6);
        }
        v205 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
        v255 = v7;
        v7((uint64_t)v13 + v205[5], (uint64_t)v14 + v205[5], v6);
        v206 = v205[6];
        __dst = (char *)v13 + v206;
        v207 = (char *)v14 + v206;
        v208 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v209 = sub_23FB2ED38();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v209 - 8) + 32))(__dst, v207, v209);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(__dst, v207, *(_QWORD *)(*(_QWORD *)(v208 - 8) + 64));
        }
        v210 = v205[7];
        v211 = (char *)v13 + v210;
        v212 = (char *)v14 + v210;
        v213 = sub_23FB2C764();
        __dsta = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v213 - 8) + 32);
        __dsta(v211, v212, v213);
        v214 = v205[8];
        v215 = (_OWORD *)((char *)v13 + v214);
        v216 = (_OWORD *)((char *)v14 + v214);
        v217 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v215, v216, *(_QWORD *)(*(_QWORD *)(v217 - 8) + 64));
        }
        else
        {
          *v215 = *v216;
          v220 = type metadata accessor for RequestContent.TextContent(0);
          __dsta((char *)v215 + *(int *)(v220 + 20), (char *)v216 + *(int *)(v220 + 20), v213);
          swift_storeEnumTagMultiPayload();
        }
        v7 = v255;
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
          goto LABEL_105;
        }
        *(_OWORD *)v13 = *(_OWORD *)v14;
        v94 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
        v95 = (char *)v13 + v94;
        v96 = (char *)v14 + v94;
        v97 = sub_23FB2C764();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v95, v96, v97);
      }
      swift_storeEnumTagMultiPayload();
LABEL_105:
      v221 = (int *)type metadata accessor for Request(0);
      *((_BYTE *)v13 + v221[5]) = *((_BYTE *)v14 + v221[5]);
      v222 = v221[6];
      v223 = (char *)v13 + v222;
      v224 = (char *)v14 + v222;
      v223[16] = v224[16];
      *(_OWORD *)v223 = *(_OWORD *)v224;
      v225 = v221[7];
      v226 = (char *)v13 + v225;
      v227 = (char *)v14 + v225;
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14 + v225, 1, v6))
      {
        v228 = sub_23F6916B8(&qword_256EA2798);
        memcpy(v226, v227, *(_QWORD *)(*(_QWORD *)(v228 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v226, (uint64_t)v227, v6);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v226, 0, 1, v6);
      }
      v229 = v221[8];
      v230 = (char *)v13 + v229;
      v231 = (char *)v14 + v229;
      *(_OWORD *)v230 = *(_OWORD *)v231;
      *((_QWORD *)v230 + 2) = *((_QWORD *)v231 + 2);
      goto LABEL_109;
    case 5u:
      v27 = sub_23FB2C764();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v13, v14, v27);
      v28 = (int *)type metadata accessor for Action(0);
      *(_OWORD *)((char *)v13 + v28[5]) = *(_OWORD *)((char *)v14 + v28[5]);
      *(_OWORD *)((char *)v13 + v28[6]) = *(_OWORD *)((char *)v14 + v28[6]);
      *(_OWORD *)((char *)v13 + v28[7]) = *(_OWORD *)((char *)v14 + v28[7]);
      *((_BYTE *)v13 + v28[8]) = *((_BYTE *)v14 + v28[8]);
      *(_QWORD *)((char *)v13 + v28[9]) = *(_QWORD *)((char *)v14 + v28[9]);
      *(_OWORD *)((char *)v13 + v28[10]) = *(_OWORD *)((char *)v14 + v28[10]);
      goto LABEL_109;
    case 6u:
      v29 = sub_23FB2C764();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v29))
      {
        v30 = sub_23F6916B8(&qword_256EA49D8);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v13, v14, v29);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v13, 0, 1, v29);
      }
      v130 = type metadata accessor for ActionCancellation(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))((char *)v13 + *(int *)(v130 + 20), (char *)v14 + *(int *)(v130 + 20), v29);
      goto LABEL_109;
    case 7u:
      v98 = sub_23FB2C764();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v13, v14, v98);
      v99 = (int *)type metadata accessor for ClientAction(0);
      *(_OWORD *)((char *)v13 + v99[5]) = *(_OWORD *)((char *)v14 + v99[5]);
      *(_QWORD *)((char *)v13 + v99[6]) = *(_QWORD *)((char *)v14 + v99[6]);
      *(_OWORD *)((char *)v13 + v99[7]) = *(_OWORD *)((char *)v14 + v99[7]);
      *(_OWORD *)((char *)v13 + v99[8]) = *(_OWORD *)((char *)v14 + v99[8]);
      *(_QWORD *)((char *)v13 + v99[9]) = *(_QWORD *)((char *)v14 + v99[9]);
      goto LABEL_109;
    case 8u:
      v31 = sub_23FB2C764();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v13, v14, v31);
      Step = type metadata accessor for QueryStep(0);
      *(_QWORD *)((char *)v13 + *(int *)(Step + 20)) = *(_QWORD *)((char *)v14 + *(int *)(Step + 20));
      goto LABEL_109;
    case 9u:
      v33 = sub_23FB2C764();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v13, v14, v33);
      v34 = type metadata accessor for VariableStep(0);
      *(_QWORD *)((char *)v13 + *(int *)(v34 + 20)) = *(_QWORD *)((char *)v14 + *(int *)(v34 + 20));
      goto LABEL_109;
    case 0xDu:
      type metadata accessor for SessionError();
      v100 = (char *)&loc_23F849840 + 4 * word_23FB635E6[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0xFu:
      v101 = sub_23FB2C77C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v13, v14, v101);
      goto LABEL_109;
    case 0x10u:
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v6))
      {
        v102 = sub_23F6916B8(&qword_256EA2798);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v13, (uint64_t)v14, v6);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v13, 0, 1, v6);
      }
      v154 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
      v253 = v7;
      v7((uint64_t)v13 + v154[5], (uint64_t)v14 + v154[5], v6);
      v155 = v154[6];
      v156 = (char *)v13 + v155;
      v157 = (char *)v14 + v155;
      v158 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v159 = sub_23FB2ED38();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v159 - 8) + 32))(v156, v157, v159);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v156, v157, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
      }
      v160 = v154[7];
      v161 = (char *)v13 + v160;
      v162 = (char *)v14 + v160;
      v163 = sub_23FB2C764();
      v164 = v161;
      v165 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v163 - 8) + 32);
      v165(v164, v162, v163);
      v166 = v154[8];
      v167 = (_OWORD *)((char *)v13 + v166);
      v168 = (_OWORD *)((char *)v14 + v166);
      v169 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v167, v168, *(_QWORD *)(*(_QWORD *)(v169 - 8) + 64));
      }
      else
      {
        *v167 = *v168;
        v183 = type metadata accessor for RequestContent.TextContent(0);
        v165((char *)v167 + *(int *)(v183 + 20), (char *)v168 + *(int *)(v183 + 20), v163);
        swift_storeEnumTagMultiPayload();
      }
      v7 = v253;
      goto LABEL_109;
    case 0x11u:
      v249 = v7;
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v6))
      {
        v35 = sub_23F6916B8(&qword_256EA2798);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v13, (uint64_t)v14, v6);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v13, 0, 1, v6);
      }
      v131 = (int *)type metadata accessor for ActionStepResult(0);
      *(_OWORD *)((char *)v13 + v131[5]) = *(_OWORD *)((char *)v14 + v131[5]);
      v132 = v131[6];
      v133 = (char *)v13 + v132;
      v134 = (char *)v14 + v132;
      v135 = sub_23FB2C80C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 32))(v133, v134, v135);
      v136 = *(int *)(type metadata accessor for ActionResult(0) + 20);
      v137 = &v133[v136];
      v138 = &v134[v136];
      v139 = sub_23FB2D0B8();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v138, 1, v139))
      {
        v140 = sub_23F6916B8(&qword_256EA2780);
        memcpy(v137, v138, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v139 - 8) + 32))(v137, v138, v139);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v137, 0, 1, v139);
      }
      *(_OWORD *)((char *)v13 + v131[7]) = *(_OWORD *)((char *)v14 + v131[7]);
      goto LABEL_78;
    case 0x12u:
      *v13 = *v14;
      StepResults = type metadata accessor for QueryStepResults(0);
      v37 = *(int *)(StepResults + 20);
      v38 = (char *)v13 + v37;
      v39 = (char *)v14 + v37;
      v40 = sub_23FB2C764();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
      v7((uint64_t)v13 + *(int *)(StepResults + 24), (uint64_t)v14 + *(int *)(StepResults + 24), v6);
      goto LABEL_109;
    case 0x13u:
      v103 = sub_23FB2C938();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v13, v14, v103);
      goto LABEL_109;
    case 0x14u:
      v104 = sub_23FB2C764();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v13, v14, v104);
      v105 = (int *)type metadata accessor for ActionResolverRequest(0);
      *(_OWORD *)((char *)v13 + v105[5]) = *(_OWORD *)((char *)v14 + v105[5]);
      *(_QWORD *)((char *)v13 + v105[6]) = *(_QWORD *)((char *)v14 + v105[6]);
      *(_QWORD *)((char *)v13 + v105[7]) = *(_QWORD *)((char *)v14 + v105[7]);
      *(_QWORD *)((char *)v13 + v105[8]) = *(_QWORD *)((char *)v14 + v105[8]);
      *((_BYTE *)v13 + v105[9]) = *((_BYTE *)v14 + v105[9]);
      *((_BYTE *)v13 + v105[10]) = *((_BYTE *)v14 + v105[10]);
      *((_BYTE *)v13 + v105[11]) = *((_BYTE *)v14 + v105[11]);
      goto LABEL_109;
    case 0x1Eu:
      v106 = sub_23FB2D004();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(v13, v14, v106);
      goto LABEL_109;
    case 0x1Fu:
      v249 = v7;
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v6))
      {
        v107 = sub_23F6916B8(&qword_256EA2798);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v13, (uint64_t)v14, v6);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v13, 0, 1, v6);
      }
      v170 = (int *)type metadata accessor for StatementResult(0);
      *(_OWORD *)((char *)v13 + v170[5]) = *(_OWORD *)((char *)v14 + v170[5]);
      v171 = v170[6];
      v172 = (char *)v13 + v171;
      v173 = (char *)v14 + v171;
      v174 = sub_23FB2D0DC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v174 - 8) + 32))(v172, v173, v174);
      v175 = *(int *)(type metadata accessor for StatementResultPayload(0) + 20);
      v176 = &v172[v175];
      v177 = &v173[v175];
      v178 = sub_23FB2D0B8();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v177, 1, v178))
      {
        v179 = sub_23F6916B8(&qword_256EA2780);
        memcpy(v176, v177, *(_QWORD *)(*(_QWORD *)(v179 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v178 - 8) + 32))(v176, v177, v178);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v176, 0, 1, v178);
      }
      v184 = v170[7];
      __dstd = (char *)v13 + v184;
      v185 = (char *)v14 + v184;
      v186 = sub_23FB2C764();
      v187 = v170;
      v188 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v186 - 8) + 32);
      v188(__dstd, v185, v186);
      v188((char *)v13 + v187[8], (char *)v14 + v187[8], v186);
      v188((char *)v13 + v187[9], (char *)v14 + v187[9], v186);
      goto LABEL_78;
    case 0x20u:
      *(_OWORD *)v13 = *(_OWORD *)v14;
      v108 = type metadata accessor for ExternalAgentTextQuery(0);
      v109 = *(int *)(v108 + 20);
      v110 = (char *)v13 + v109;
      v111 = (char *)v14 + v109;
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14 + v109, 1, v6))
      {
        v112 = sub_23F6916B8(&qword_256EA2798);
        memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v110, (uint64_t)v111, v6);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v110, 0, 1, v6);
      }
      v180 = *(int *)(v108 + 24);
      v181 = (char *)v13 + v180;
      v182 = (char *)v14 + v180;
      *(_OWORD *)v181 = *(_OWORD *)v182;
      *((_QWORD *)v181 + 2) = *((_QWORD *)v182 + 2);
      goto LABEL_109;
    case 0x21u:
      *v13 = *v14;
      v41 = type metadata accessor for ExternalAgentSpeechQuery(0);
      v42 = *(int *)(v41 + 20);
      v43 = (char *)v13 + v42;
      v44 = (char *)v14 + v42;
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14 + v42, 1, v6))goto LABEL_17;
      goto LABEL_52;
    case 0x22u:
      v46 = type metadata accessor for RequestContent(0);
      v47 = swift_getEnumCaseMultiPayload();
      if (v47 == 3)
      {
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v6))
        {
          v189 = sub_23F6916B8(&qword_256EA2798);
          memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v189 - 8) + 64));
        }
        else
        {
          v7((uint64_t)v13, (uint64_t)v14, v6);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v13, 0, 1, v6);
        }
        v191 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
        v254 = v7;
        v7((uint64_t)v13 + v191[5], (uint64_t)v14 + v191[5], v6);
        v192 = v191[6];
        v193 = (char *)v13 + v192;
        v194 = (char *)v14 + v192;
        v195 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v196 = sub_23FB2ED38();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 32))(v193, v194, v196);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v193, v194, *(_QWORD *)(*(_QWORD *)(v195 - 8) + 64));
        }
        v197 = v191[7];
        v198 = (char *)v13 + v197;
        v199 = (char *)v14 + v197;
        v200 = sub_23FB2C764();
        v243 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 32);
        v243(v198, v199, v200);
        v201 = v191[8];
        v202 = (_OWORD *)((char *)v13 + v201);
        v203 = (_OWORD *)((char *)v14 + v201);
        v204 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v202, v203, *(_QWORD *)(*(_QWORD *)(v204 - 8) + 64));
        }
        else
        {
          *v202 = *v203;
          v218 = type metadata accessor for RequestContent.TextContent(0);
          v243((char *)v202 + *(int *)(v218 + 20), (char *)v203 + *(int *)(v218 + 20), v200);
          swift_storeEnumTagMultiPayload();
        }
        v7 = v254;
      }
      else
      {
        if (v47 != 1)
        {
          memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
          goto LABEL_100;
        }
        *(_OWORD *)v13 = *(_OWORD *)v14;
        v48 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
        v49 = (char *)v13 + v48;
        v50 = (char *)v14 + v48;
        v51 = sub_23FB2C764();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
      }
      swift_storeEnumTagMultiPayload();
LABEL_100:
      v41 = type metadata accessor for ExternalAgentRequest(0);
      v219 = *(int *)(v41 + 20);
      v43 = (char *)v13 + v219;
      v44 = (char *)v14 + v219;
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14 + v219, 1, v6))
      {
LABEL_17:
        v45 = sub_23F6916B8(&qword_256EA2798);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
LABEL_52:
        v7((uint64_t)v43, (uint64_t)v44, v6);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v43, 0, 1, v6);
      }
      v141 = *(int *)(v41 + 24);
      v142 = (char *)v13 + v141;
      v143 = (char *)v14 + v141;
      *(_OWORD *)v142 = *(_OWORD *)v143;
      *((_QWORD *)v142 + 2) = *((_QWORD *)v143 + 2);
LABEL_109:
      swift_storeEnumTagMultiPayload();
LABEL_110:
      v232 = a3[9];
      *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
      *(_OWORD *)(a1 + v232) = *(_OWORD *)(a2 + v232);
      v233 = a3[11];
      *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
      *(_OWORD *)(a1 + v233) = *(_OWORD *)(a2 + v233);
      v234 = a3[12];
      v235 = a1 + v234;
      v236 = a2 + v234;
      v237 = sub_23FB2C470();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v237 - 8) + 32))(v235, v236, v237);
      v238 = (int *)type metadata accessor for Timepoint();
      *(_QWORD *)(v235 + v238[5]) = *(_QWORD *)(v236 + v238[5]);
      *(_QWORD *)(v235 + v238[6]) = *(_QWORD *)(v236 + v238[6]);
      v7(v235 + v238[7], v236 + v238[7], v6);
      v239 = a3[14];
      *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
      v240 = a1 + v239;
      v241 = a2 + v239;
      *(_BYTE *)(v240 + 8) = *(_BYTE *)(v241 + 8);
      *(_QWORD *)v240 = *(_QWORD *)v241;
      *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
      return a1;
    case 0x23u:
      v113 = sub_23FB2C764();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v113 - 8) + 32))(v13, v14, v113);
      v114 = type metadata accessor for ExternalAgentOutcome(0);
      v115 = *(int *)(v114 + 20);
      v116 = (char *)v13 + v115;
      v117 = (char *)v14 + v115;
      v118 = sub_23FB2D0DC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 32))(v116, v117, v118);
      *(_QWORD *)((char *)v13 + *(int *)(v114 + 24)) = *(_QWORD *)((char *)v14 + *(int *)(v114 + 24));
      goto LABEL_109;
    case 0x25u:
      v52 = sub_23FB2E8D0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v13, v14, v52);
      v53 = type metadata accessor for ToolResolution(0);
      v54 = *(int *)(v53 + 20);
      __dstb = (char *)v13 + v54;
      v55 = (char *)v14 + v54;
      v250 = v7;
      v56 = sub_23FB2C764();
      v57 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32);
      v57(__dstb, v55, v56);
      v58 = v56;
      v7 = v250;
      v57((char *)v13 + *(int *)(v53 + 24), (char *)v14 + *(int *)(v53 + 24), v58);
      goto LABEL_109;
    case 0x26u:
      *(_OWORD *)v13 = *(_OWORD *)v14;
      v59 = (int *)type metadata accessor for UndoRedoRequest(0);
      v60 = v59[5];
      v61 = (char *)v13 + v60;
      v62 = (char *)v14 + v60;
      v249 = v7;
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14 + v60, 1, v6))
      {
        v63 = sub_23F6916B8(&qword_256EA2798);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v61, (uint64_t)v62, v6);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v61, 0, 1, v6);
      }
      *((_BYTE *)v13 + v59[6]) = *((_BYTE *)v14 + v59[6]);
      v144 = v59[7];
      v145 = (char *)v13 + v144;
      v146 = (char *)v14 + v144;
      v147 = sub_23FB2C764();
      v148 = v146;
      v149 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v147 - 8) + 32);
      v149(v145, v148, v147);
      v150 = v59[8];
      v151 = (char *)v13 + v150;
      v152 = (char *)v14 + v150;
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14 + v150, 1, v147))
      {
        v153 = sub_23F6916B8(&qword_256EA49D8);
        memcpy(v151, v152, *(_QWORD *)(*(_QWORD *)(v153 - 8) + 64));
      }
      else
      {
        v149(v151, v152, v147);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v151, 0, 1, v147);
      }
      goto LABEL_78;
    case 0x27u:
      v249 = v7;
      v7((uint64_t)v13, (uint64_t)v14, v6);
      v64 = (int *)type metadata accessor for ClientUndoRedoRequest(0);
      *((_BYTE *)v13 + v64[5]) = *((_BYTE *)v14 + v64[5]);
      v65 = v64[6];
      v66 = (char *)v13 + v65;
      v67 = (char *)v14 + v65;
      v68 = sub_23FB2C764();
      v69 = v67;
      v70 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 32);
      v70(v66, v69, v68);
      v71 = v64[7];
      v72 = (char *)v13 + v71;
      v73 = (char *)v14 + v71;
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14 + v71, 1, v68))
      {
        v74 = sub_23F6916B8(&qword_256EA49D8);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      }
      else
      {
        v70(v72, v73, v68);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v72, 0, 1, v68);
      }
LABEL_78:
      swift_storeEnumTagMultiPayload();
      v7 = v249;
      goto LABEL_110;
    case 0x28u:
      v75 = sub_23FB2ED38();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v13, v14, v75);
      v76 = type metadata accessor for TypeConversionRequest(0);
      v77 = *(int *)(v76 + 20);
      v78 = (char *)v13 + v77;
      v79 = (char *)v14 + v77;
      v80 = sub_23FB2ED5C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v78, v79, v80);
      v81 = *(int *)(v76 + 24);
      v82 = (char *)v13 + v81;
      v83 = (char *)v14 + v81;
      v84 = sub_23FB2C764();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v82, v83, v84);
      goto LABEL_109;
    case 0x29u:
      v85 = sub_23FB2ED38();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v85 - 8) + 32))(v13, v14, v85);
      v86 = type metadata accessor for TypeConversionResult(0);
      v87 = *(int *)(v86 + 20);
      __dstc = (char *)v13 + v87;
      v88 = (char *)v14 + v87;
      v251 = v7;
      v89 = sub_23FB2C764();
      v90 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 32);
      v90(__dstc, v88, v89);
      v91 = v89;
      v7 = v251;
      v90((char *)v13 + *(int *)(v86 + 24), (char *)v14 + *(int *)(v86 + 24), v91);
      goto LABEL_109;
    case 0x2Au:
      v252 = v7;
      *(_OWORD *)v13 = *(_OWORD *)v14;
      v13[2] = v14[2];
      DecorationResult = type metadata accessor for QueryDecorationResult(0);
      v120 = *(int *)(DecorationResult + 28);
      v121 = (char *)v13 + v120;
      v122 = (char *)v14 + v120;
      v123 = sub_23FB2E354();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v122, 1, v123))
      {
        v124 = sub_23F6916B8(&qword_256EA71F8);
        memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(v121, v122, v123);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v121, 0, 1, v123);
      }
      v7 = v252;
      *(_QWORD *)((char *)v13 + *(int *)(DecorationResult + 32)) = *(_QWORD *)((char *)v14
                                                                             + *(int *)(DecorationResult + 32));
      goto LABEL_109;
    case 0x2Cu:
      v125 = sub_23FB2C764();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v125 - 8) + 32))(v13, v14, v125);
      DecorationPrePlannerResult = type metadata accessor for QueryDecorationPrePlannerResult(0);
      *(_OWORD *)((char *)v13 + *(int *)(DecorationPrePlannerResult + 20)) = *(_OWORD *)((char *)v14
                                                                                       + *(int *)(DecorationPrePlannerResult
                                                                                                + 20));
      v127 = *(int *)(DecorationPrePlannerResult + 24);
      v128 = (char *)v13 + v127;
      v129 = (char *)v14 + v127;
      v128[8] = v129[8];
      *(_QWORD *)v128 = *(_QWORD *)v129;
      goto LABEL_109;
    default:
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      goto LABEL_110;
  }
}

uint64_t assignWithTake for Session.Event(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  const void *v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t Step;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t StepResults;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  int *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  int *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  void (*v77)(char *, char *, uint64_t);
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  void (*v86)(uint64_t, uint64_t, uint64_t);
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  void (*v99)(char *, char *, uint64_t);
  char *v100;
  uint64_t v101;
  int EnumCaseMultiPayload;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  int *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  void (*v126)(uint64_t, uint64_t, uint64_t);
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t DecorationResult;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t DecorationPrePlannerResult;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  int *v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  char *v156;
  void (*v157)(char *, char *, uint64_t);
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  int *v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  char *v172;
  void (*v173)(char *, char *, uint64_t);
  uint64_t v174;
  _OWORD *v175;
  _OWORD *v176;
  uint64_t v177;
  int *v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  int *v195;
  void (*v196)(char *, char *, uint64_t);
  uint64_t v197;
  uint64_t v198;
  int *v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  char *v206;
  uint64_t v207;
  _OWORD *v208;
  _OWORD *v209;
  uint64_t v210;
  int *v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  char *v218;
  uint64_t v219;
  _OWORD *v220;
  _OWORD *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  char *v228;
  uint64_t v229;
  int *v230;
  uint64_t v231;
  char *v232;
  char *v233;
  uint64_t v234;
  char *v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  char *v240;
  uint64_t v241;
  _QWORD *v242;
  uint64_t *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  _QWORD *v247;
  uint64_t *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  _QWORD *v252;
  uint64_t *v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  _QWORD *v257;
  uint64_t *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  int *v265;
  uint64_t v266;
  _QWORD *v267;
  uint64_t *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t result;
  void (*v276)(char *, char *, _QWORD *);
  void (*v277)(char *, char *, _QWORD *);
  char *__dstd;
  char *__dste;
  char *__dstf;
  char *__dst;
  _QWORD *__dsta;
  char *__dstb;
  _QWORD *__dstc;
  void (*v285)(uint64_t, uint64_t, uint64_t);
  void (*v286)(uint64_t, uint64_t, uint64_t);
  void (*v287)(uint64_t, uint64_t, uint64_t);
  void (*v288)(uint64_t, uint64_t, uint64_t);
  void (*v289)(uint64_t, uint64_t, uint64_t);
  void (*v290)(uint64_t, uint64_t, uint64_t);
  void (*v291)(uint64_t, uint64_t, uint64_t);
  void (*v292)(uint64_t, uint64_t, uint64_t);
  void (*v293)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23FB2C4B8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v8(a1 + a3[5], a2 + a3[5], v6);
  v9 = a3[6];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1 + v9, 1, v6);
  v13 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v10, v11, v6);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    v14 = sub_23F6916B8(&qword_256EA2798);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v10, (uint64_t)v11, v6);
LABEL_7:
  if (a1 != a2)
  {
    v15 = a3[7];
    v16 = (_QWORD *)(a1 + v15);
    v17 = (_QWORD *)(a2 + v15);
    sub_23F83A7D4(a1 + v15, type metadata accessor for Session.Event.Payload);
    v18 = type metadata accessor for Session.Event.Payload(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v19 = sub_23FB2C998();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v16, v17, v19);
        v20 = type metadata accessor for SessionStart(0);
        v21 = *(int *)(v20 + 20);
        v22 = (char *)v16 + v21;
        v23 = v8;
        v24 = (char *)v17 + v21;
        v25 = sub_23FB2C908();
        v26 = v24;
        v8 = v23;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v22, v26, v25);
        *((_BYTE *)v16 + *(int *)(v20 + 24)) = *((_BYTE *)v17 + *(int *)(v20 + 24));
        goto LABEL_114;
      case 1u:
        *(_OWORD *)v16 = *(_OWORD *)v17;
        *((_BYTE *)v16 + 16) = *((_BYTE *)v17 + 16);
        v27 = type metadata accessor for TextQuery(0);
        v28 = *(int *)(v27 + 24);
        v29 = (char *)v16 + v28;
        v30 = v8;
        v31 = (char *)v17 + v28;
        v32 = sub_23FB2C764();
        v33 = v31;
        v8 = v30;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v29, v33, v32);
        *(_OWORD *)((char *)v16 + *(int *)(v27 + 28)) = *(_OWORD *)((char *)v17 + *(int *)(v27 + 28));
        goto LABEL_114;
      case 3u:
        v101 = type metadata accessor for RequestContent(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v290 = v8;
        if (EnumCaseMultiPayload == 3)
        {
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v6))
          {
            v198 = sub_23F6916B8(&qword_256EA2798);
            memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v198 - 8) + 64));
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 32))(v16, v17, v6);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v6);
          }
          v211 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)v16 + v211[5], (char *)v17 + v211[5], v6);
          v212 = v211[6];
          __dstb = (char *)v16 + v212;
          v213 = (char *)v17 + v212;
          v214 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v215 = sub_23FB2ED38();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v215 - 8) + 32))(__dstb, v213, v215);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(__dstb, v213, *(_QWORD *)(*(_QWORD *)(v214 - 8) + 64));
          }
          v216 = v211[7];
          v217 = (char *)v16 + v216;
          v218 = (char *)v17 + v216;
          __dstc = (_QWORD *)sub_23FB2C764();
          v277 = *(void (**)(char *, char *, _QWORD *))(*(__dstc - 1) + 32);
          v277(v217, v218, __dstc);
          v219 = v211[8];
          v220 = (_OWORD *)((char *)v16 + v219);
          v221 = (_OWORD *)((char *)v17 + v219);
          v222 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v220, v221, *(_QWORD *)(*(_QWORD *)(v222 - 8) + 64));
          }
          else
          {
            *v220 = *v221;
            v229 = type metadata accessor for RequestContent.TextContent(0);
            v277((char *)v220 + *(int *)(v229 + 20), (char *)v221 + *(int *)(v229 + 20), __dstc);
            swift_storeEnumTagMultiPayload();
          }
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
            goto LABEL_110;
          }
          *(_OWORD *)v16 = *(_OWORD *)v17;
          v103 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
          v104 = (char *)v16 + v103;
          v105 = (char *)v17 + v103;
          v106 = sub_23FB2C764();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(v104, v105, v106);
        }
        swift_storeEnumTagMultiPayload();
LABEL_110:
        v230 = (int *)type metadata accessor for Request(0);
        *((_BYTE *)v16 + v230[5]) = *((_BYTE *)v17 + v230[5]);
        v231 = v230[6];
        v232 = (char *)v16 + v231;
        v233 = (char *)v17 + v231;
        v232[16] = v233[16];
        *(_OWORD *)v232 = *(_OWORD *)v233;
        v234 = v230[7];
        v235 = (char *)v16 + v234;
        v236 = (char *)v17 + v234;
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17 + v234, 1, v6))
        {
          v237 = sub_23F6916B8(&qword_256EA2798);
          memcpy(v235, v236, *(_QWORD *)(*(_QWORD *)(v237 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v235, v236, v6);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v235, 0, 1, v6);
        }
        v8 = v290;
        v238 = v230[8];
        v239 = (char *)v16 + v238;
        v240 = (char *)v17 + v238;
        *(_OWORD *)v239 = *(_OWORD *)v240;
        *((_QWORD *)v239 + 2) = *((_QWORD *)v240 + 2);
LABEL_114:
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        v34 = sub_23FB2C764();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v16, v17, v34);
        v35 = (int *)type metadata accessor for Action(0);
        *(_OWORD *)((char *)v16 + v35[5]) = *(_OWORD *)((char *)v17 + v35[5]);
        *(_OWORD *)((char *)v16 + v35[6]) = *(_OWORD *)((char *)v17 + v35[6]);
        *(_OWORD *)((char *)v16 + v35[7]) = *(_OWORD *)((char *)v17 + v35[7]);
        *((_BYTE *)v16 + v35[8]) = *((_BYTE *)v17 + v35[8]);
        *(_QWORD *)((char *)v16 + v35[9]) = *(_QWORD *)((char *)v17 + v35[9]);
        *(_OWORD *)((char *)v16 + v35[10]) = *(_OWORD *)((char *)v17 + v35[10]);
        goto LABEL_114;
      case 6u:
        v36 = sub_23FB2C764();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v36))
        {
          v37 = sub_23F6916B8(&qword_256EA49D8);
          memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v16, v17, v36);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v36);
        }
        v141 = type metadata accessor for ActionCancellation(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))((char *)v16 + *(int *)(v141 + 20), (char *)v17 + *(int *)(v141 + 20), v36);
        goto LABEL_114;
      case 7u:
        v107 = sub_23FB2C764();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v107 - 8) + 32))(v16, v17, v107);
        v108 = (int *)type metadata accessor for ClientAction(0);
        *(_OWORD *)((char *)v16 + v108[5]) = *(_OWORD *)((char *)v17 + v108[5]);
        *(_QWORD *)((char *)v16 + v108[6]) = *(_QWORD *)((char *)v17 + v108[6]);
        *(_OWORD *)((char *)v16 + v108[7]) = *(_OWORD *)((char *)v17 + v108[7]);
        *(_OWORD *)((char *)v16 + v108[8]) = *(_OWORD *)((char *)v17 + v108[8]);
        *(_QWORD *)((char *)v16 + v108[9]) = *(_QWORD *)((char *)v17 + v108[9]);
        goto LABEL_114;
      case 8u:
        v38 = sub_23FB2C764();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v16, v17, v38);
        Step = type metadata accessor for QueryStep(0);
        *(_QWORD *)((char *)v16 + *(int *)(Step + 20)) = *(_QWORD *)((char *)v17 + *(int *)(Step + 20));
        goto LABEL_114;
      case 9u:
        v40 = sub_23FB2C764();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v16, v17, v40);
        v41 = type metadata accessor for VariableStep(0);
        *(_QWORD *)((char *)v16 + *(int *)(v41 + 20)) = *(_QWORD *)((char *)v17 + *(int *)(v41 + 20));
        goto LABEL_114;
      case 0xDu:
        type metadata accessor for SessionError();
        v109 = (char *)&loc_23F84B204 + 4 * word_23FB63648[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0xFu:
        v110 = sub_23FB2C77C();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v110 - 8) + 32))(v16, v17, v110);
        goto LABEL_114;
      case 0x10u:
        v291 = v8;
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v6))
        {
          v111 = sub_23F6916B8(&qword_256EA2798);
          memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 32))(v16, v17, v6);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v6);
        }
        v162 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)v16 + v162[5], (char *)v17 + v162[5], v6);
        v163 = v162[6];
        v164 = (char *)v16 + v163;
        v165 = (char *)v17 + v163;
        v166 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v167 = sub_23FB2ED38();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v167 - 8) + 32))(v164, v165, v167);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v164, v165, *(_QWORD *)(*(_QWORD *)(v166 - 8) + 64));
        }
        v168 = v162[7];
        v169 = (char *)v16 + v168;
        v170 = (char *)v17 + v168;
        v171 = sub_23FB2C764();
        v172 = v169;
        v173 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v171 - 8) + 32);
        v173(v172, v170, v171);
        v174 = v162[8];
        v175 = (_OWORD *)((char *)v16 + v174);
        v176 = (_OWORD *)((char *)v17 + v174);
        v177 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v175, v176, *(_QWORD *)(*(_QWORD *)(v177 - 8) + 64));
        }
        else
        {
          *v175 = *v176;
          v191 = type metadata accessor for RequestContent.TextContent(0);
          v173((char *)v175 + *(int *)(v191 + 20), (char *)v176 + *(int *)(v191 + 20), v171);
          swift_storeEnumTagMultiPayload();
        }
        v8 = v291;
        goto LABEL_114;
      case 0x11u:
        v285 = v8;
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v6))
        {
          v42 = sub_23F6916B8(&qword_256EA2798);
          memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 32))(v16, v17, v6);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v6);
        }
        v142 = (int *)type metadata accessor for ActionStepResult(0);
        *(_OWORD *)((char *)v16 + v142[5]) = *(_OWORD *)((char *)v17 + v142[5]);
        v143 = v142[6];
        v144 = (char *)v16 + v143;
        v145 = (char *)v17 + v143;
        v146 = sub_23FB2C80C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v146 - 8) + 32))(v144, v145, v146);
        v147 = *(int *)(type metadata accessor for ActionResult(0) + 20);
        v148 = &v144[v147];
        v149 = &v145[v147];
        v150 = sub_23FB2D0B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v149, 1, v150))
        {
          v151 = sub_23F6916B8(&qword_256EA2780);
          memcpy(v148, v149, *(_QWORD *)(*(_QWORD *)(v151 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v150 - 8) + 32))(v148, v149, v150);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v148, 0, 1, v150);
        }
        *(_OWORD *)((char *)v16 + v142[7]) = *(_OWORD *)((char *)v17 + v142[7]);
        goto LABEL_107;
      case 0x12u:
        *v16 = *v17;
        v286 = v8;
        StepResults = type metadata accessor for QueryStepResults(0);
        v44 = *(int *)(StepResults + 20);
        v45 = (char *)v16 + v44;
        v46 = (char *)v17 + v44;
        v47 = sub_23FB2C764();
        v48 = v46;
        v8 = v286;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v48, v47);
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)v16 + *(int *)(StepResults + 24), (char *)v17 + *(int *)(StepResults + 24), v6);
        goto LABEL_114;
      case 0x13u:
        v112 = sub_23FB2C938();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v112 - 8) + 32))(v16, v17, v112);
        goto LABEL_114;
      case 0x14u:
        v113 = sub_23FB2C764();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v113 - 8) + 32))(v16, v17, v113);
        v114 = (int *)type metadata accessor for ActionResolverRequest(0);
        *(_OWORD *)((char *)v16 + v114[5]) = *(_OWORD *)((char *)v17 + v114[5]);
        *(_QWORD *)((char *)v16 + v114[6]) = *(_QWORD *)((char *)v17 + v114[6]);
        *(_QWORD *)((char *)v16 + v114[7]) = *(_QWORD *)((char *)v17 + v114[7]);
        *(_QWORD *)((char *)v16 + v114[8]) = *(_QWORD *)((char *)v17 + v114[8]);
        *((_BYTE *)v16 + v114[9]) = *((_BYTE *)v17 + v114[9]);
        *((_BYTE *)v16 + v114[10]) = *((_BYTE *)v17 + v114[10]);
        *((_BYTE *)v16 + v114[11]) = *((_BYTE *)v17 + v114[11]);
        goto LABEL_114;
      case 0x1Eu:
        v115 = sub_23FB2D004();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v115 - 8) + 32))(v16, v17, v115);
        goto LABEL_114;
      case 0x1Fu:
        v285 = v8;
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v6))
        {
          v116 = sub_23F6916B8(&qword_256EA2798);
          memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 32))(v16, v17, v6);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v6);
        }
        v178 = (int *)type metadata accessor for StatementResult(0);
        *(_OWORD *)((char *)v16 + v178[5]) = *(_OWORD *)((char *)v17 + v178[5]);
        v179 = v178[6];
        v180 = (char *)v16 + v179;
        v181 = (char *)v17 + v179;
        v182 = sub_23FB2D0DC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v182 - 8) + 32))(v180, v181, v182);
        v183 = *(int *)(type metadata accessor for StatementResultPayload(0) + 20);
        v184 = &v180[v183];
        v185 = &v181[v183];
        v186 = sub_23FB2D0B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v185, 1, v186))
        {
          v187 = sub_23F6916B8(&qword_256EA2780);
          memcpy(v184, v185, *(_QWORD *)(*(_QWORD *)(v187 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v186 - 8) + 32))(v184, v185, v186);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v184, 0, 1, v186);
        }
        v192 = v178[7];
        __dstf = (char *)v16 + v192;
        v193 = (char *)v17 + v192;
        v194 = sub_23FB2C764();
        v195 = v178;
        v196 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 32);
        v196(__dstf, v193, v194);
        v196((char *)v16 + v195[8], (char *)v17 + v195[8], v194);
        v196((char *)v16 + v195[9], (char *)v17 + v195[9], v194);
        goto LABEL_107;
      case 0x20u:
        v292 = v8;
        *(_OWORD *)v16 = *(_OWORD *)v17;
        v117 = type metadata accessor for ExternalAgentTextQuery(0);
        v118 = *(int *)(v117 + 20);
        v119 = (char *)v16 + v118;
        v120 = (char *)v17 + v118;
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17 + v118, 1, v6))
        {
          v121 = sub_23F6916B8(&qword_256EA2798);
          memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v119, v120, v6);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v119, 0, 1, v6);
        }
        v8 = v292;
        v188 = *(int *)(v117 + 24);
        v189 = (char *)v16 + v188;
        v190 = (char *)v17 + v188;
        *(_OWORD *)v189 = *(_OWORD *)v190;
        *((_QWORD *)v189 + 2) = *((_QWORD *)v190 + 2);
        goto LABEL_114;
      case 0x21u:
        v285 = v8;
        *v16 = *v17;
        v49 = type metadata accessor for ExternalAgentSpeechQuery(0);
        v50 = *(int *)(v49 + 20);
        v51 = (char *)v16 + v50;
        v52 = (char *)v17 + v50;
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17 + v50, 1, v6))goto LABEL_104;
        goto LABEL_105;
      case 0x22u:
        v53 = type metadata accessor for RequestContent(0);
        v54 = swift_getEnumCaseMultiPayload();
        v285 = v8;
        if (v54 == 3)
        {
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v6))
          {
            v197 = sub_23F6916B8(&qword_256EA2798);
            memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v197 - 8) + 64));
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 32))(v16, v17, v6);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v6);
          }
          v199 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)v16 + v199[5], (char *)v17 + v199[5], v6);
          v200 = v199[6];
          __dst = (char *)v16 + v200;
          v201 = (char *)v17 + v200;
          v202 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v203 = sub_23FB2ED38();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 32))(__dst, v201, v203);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(__dst, v201, *(_QWORD *)(*(_QWORD *)(v202 - 8) + 64));
          }
          v204 = v199[7];
          v205 = (char *)v16 + v204;
          v206 = (char *)v17 + v204;
          __dsta = (_QWORD *)sub_23FB2C764();
          v276 = *(void (**)(char *, char *, _QWORD *))(*(__dsta - 1) + 32);
          v276(v205, v206, __dsta);
          v207 = v199[8];
          v208 = (_OWORD *)((char *)v16 + v207);
          v209 = (_OWORD *)((char *)v17 + v207);
          v210 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v208, v209, *(_QWORD *)(*(_QWORD *)(v210 - 8) + 64));
          }
          else
          {
            *v208 = *v209;
            v223 = type metadata accessor for RequestContent.TextContent(0);
            v276((char *)v208 + *(int *)(v223 + 20), (char *)v209 + *(int *)(v223 + 20), __dsta);
            swift_storeEnumTagMultiPayload();
          }
        }
        else
        {
          if (v54 != 1)
          {
            memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
            goto LABEL_103;
          }
          *(_OWORD *)v16 = *(_OWORD *)v17;
          v55 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
          v56 = (char *)v16 + v55;
          v57 = (char *)v17 + v55;
          v58 = sub_23FB2C764();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
        }
        swift_storeEnumTagMultiPayload();
LABEL_103:
        v49 = type metadata accessor for ExternalAgentRequest(0);
        v224 = *(int *)(v49 + 20);
        v51 = (char *)v16 + v224;
        v52 = (char *)v17 + v224;
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17 + v224, 1, v6))
        {
LABEL_104:
          v225 = sub_23F6916B8(&qword_256EA2798);
          memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v225 - 8) + 64));
        }
        else
        {
LABEL_105:
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v51, v52, v6);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v51, 0, 1, v6);
        }
        v226 = *(int *)(v49 + 24);
        v227 = (char *)v16 + v226;
        v228 = (char *)v17 + v226;
        *(_OWORD *)v227 = *(_OWORD *)v228;
        *((_QWORD *)v227 + 2) = *((_QWORD *)v228 + 2);
LABEL_107:
        swift_storeEnumTagMultiPayload();
        v8 = v285;
        break;
      case 0x23u:
        v122 = sub_23FB2C764();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v122 - 8) + 32))(v16, v17, v122);
        v123 = type metadata accessor for ExternalAgentOutcome(0);
        v124 = *(int *)(v123 + 20);
        v125 = (char *)v16 + v124;
        v126 = v8;
        v127 = (char *)v17 + v124;
        v128 = sub_23FB2D0DC();
        v129 = v127;
        v8 = v126;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v128 - 8) + 32))(v125, v129, v128);
        *(_QWORD *)((char *)v16 + *(int *)(v123 + 24)) = *(_QWORD *)((char *)v17 + *(int *)(v123 + 24));
        goto LABEL_114;
      case 0x25u:
        v59 = sub_23FB2E8D0();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v16, v17, v59);
        v287 = v8;
        v60 = type metadata accessor for ToolResolution(0);
        v61 = *(int *)(v60 + 20);
        __dstd = (char *)v16 + v61;
        v62 = (char *)v17 + v61;
        v63 = sub_23FB2C764();
        v64 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32);
        v65 = v62;
        v8 = v287;
        v64(__dstd, v65, v63);
        v64((char *)v16 + *(int *)(v60 + 24), (char *)v17 + *(int *)(v60 + 24), v63);
        goto LABEL_114;
      case 0x26u:
        v288 = v8;
        *(_OWORD *)v16 = *(_OWORD *)v17;
        v66 = (int *)type metadata accessor for UndoRedoRequest(0);
        v67 = v66[5];
        v68 = (char *)v16 + v67;
        v69 = (char *)v17 + v67;
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17 + v67, 1, v6))
        {
          v70 = sub_23F6916B8(&qword_256EA2798);
          memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v68, v69, v6);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v68, 0, 1, v6);
        }
        *((_BYTE *)v16 + v66[6]) = *((_BYTE *)v17 + v66[6]);
        v152 = v66[7];
        v153 = (char *)v16 + v152;
        v154 = (char *)v17 + v152;
        v155 = sub_23FB2C764();
        v156 = v154;
        v157 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v155 - 8) + 32);
        v157(v153, v156, v155);
        v158 = v66[8];
        v159 = (char *)v16 + v158;
        v160 = (char *)v17 + v158;
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17 + v158, 1, v155))
        {
          v161 = sub_23F6916B8(&qword_256EA49D8);
          memcpy(v159, v160, *(_QWORD *)(*(_QWORD *)(v161 - 8) + 64));
        }
        else
        {
          v157(v159, v160, v155);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v159, 0, 1, v155);
        }
        v8 = v288;
        goto LABEL_114;
      case 0x27u:
        v285 = v8;
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 32))(v16, v17, v6);
        v71 = (int *)type metadata accessor for ClientUndoRedoRequest(0);
        *((_BYTE *)v16 + v71[5]) = *((_BYTE *)v17 + v71[5]);
        v72 = v71[6];
        v73 = (char *)v16 + v72;
        v74 = (char *)v17 + v72;
        v75 = sub_23FB2C764();
        v76 = v74;
        v77 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32);
        v77(v73, v76, v75);
        v78 = v71[7];
        v79 = (char *)v16 + v78;
        v80 = (char *)v17 + v78;
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17 + v78, 1, v75))
        {
          v81 = sub_23F6916B8(&qword_256EA49D8);
          memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
        }
        else
        {
          v77(v79, v80, v75);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v79, 0, 1, v75);
        }
        goto LABEL_107;
      case 0x28u:
        v82 = sub_23FB2ED38();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(v16, v17, v82);
        v83 = type metadata accessor for TypeConversionRequest(0);
        v84 = *(int *)(v83 + 20);
        v85 = (char *)v16 + v84;
        v86 = v8;
        v87 = (char *)v17 + v84;
        v88 = sub_23FB2ED5C();
        v89 = v87;
        v8 = v86;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(v85, v89, v88);
        v90 = *(int *)(v83 + 24);
        v91 = (char *)v16 + v90;
        v92 = (char *)v17 + v90;
        v93 = sub_23FB2C764();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v91, v92, v93);
        goto LABEL_114;
      case 0x29u:
        v94 = sub_23FB2ED38();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v16, v17, v94);
        v289 = v8;
        v95 = type metadata accessor for TypeConversionResult(0);
        v96 = *(int *)(v95 + 20);
        __dste = (char *)v16 + v96;
        v97 = (char *)v17 + v96;
        v98 = sub_23FB2C764();
        v99 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32);
        v100 = v97;
        v8 = v289;
        v99(__dste, v100, v98);
        v99((char *)v16 + *(int *)(v95 + 24), (char *)v17 + *(int *)(v95 + 24), v98);
        goto LABEL_114;
      case 0x2Au:
        v293 = v8;
        *(_OWORD *)v16 = *(_OWORD *)v17;
        v16[2] = v17[2];
        DecorationResult = type metadata accessor for QueryDecorationResult(0);
        v131 = *(int *)(DecorationResult + 28);
        v132 = (char *)v16 + v131;
        v133 = (char *)v17 + v131;
        v134 = sub_23FB2E354();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v133, 1, v134))
        {
          v135 = sub_23F6916B8(&qword_256EA71F8);
          memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 32))(v132, v133, v134);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v132, 0, 1, v134);
        }
        v8 = v293;
        *(_QWORD *)((char *)v16 + *(int *)(DecorationResult + 32)) = *(_QWORD *)((char *)v17
                                                                               + *(int *)(DecorationResult + 32));
        goto LABEL_114;
      case 0x2Cu:
        v136 = sub_23FB2C764();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v136 - 8) + 32))(v16, v17, v136);
        DecorationPrePlannerResult = type metadata accessor for QueryDecorationPrePlannerResult(0);
        *(_OWORD *)((char *)v16 + *(int *)(DecorationPrePlannerResult + 20)) = *(_OWORD *)((char *)v17
                                                                                         + *(int *)(DecorationPrePlannerResult
                                                                                                  + 20));
        v138 = *(int *)(DecorationPrePlannerResult + 24);
        v139 = (char *)v16 + v138;
        v140 = (char *)v17 + v138;
        v139[8] = v140[8];
        *(_QWORD *)v139 = *(_QWORD *)v140;
        goto LABEL_114;
      default:
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        break;
    }
  }
  v241 = a3[8];
  v242 = (_QWORD *)(a1 + v241);
  v243 = (uint64_t *)(a2 + v241);
  v245 = *v243;
  v244 = v243[1];
  *v242 = v245;
  v242[1] = v244;
  swift_bridgeObjectRelease();
  v246 = a3[9];
  v247 = (_QWORD *)(a1 + v246);
  v248 = (uint64_t *)(a2 + v246);
  v250 = *v248;
  v249 = v248[1];
  *v247 = v250;
  v247[1] = v249;
  swift_bridgeObjectRelease();
  v251 = a3[10];
  v252 = (_QWORD *)(a1 + v251);
  v253 = (uint64_t *)(a2 + v251);
  v255 = *v253;
  v254 = v253[1];
  *v252 = v255;
  v252[1] = v254;
  swift_bridgeObjectRelease();
  v256 = a3[11];
  v257 = (_QWORD *)(a1 + v256);
  v258 = (uint64_t *)(a2 + v256);
  v260 = *v258;
  v259 = v258[1];
  *v257 = v260;
  v257[1] = v259;
  swift_bridgeObjectRelease();
  v261 = a3[12];
  v262 = a1 + v261;
  v263 = a2 + v261;
  v264 = sub_23FB2C470();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v264 - 8) + 40))(v262, v263, v264);
  v265 = (int *)type metadata accessor for Timepoint();
  *(_QWORD *)(v262 + v265[5]) = *(_QWORD *)(v263 + v265[5]);
  *(_QWORD *)(v262 + v265[6]) = *(_QWORD *)(v263 + v265[6]);
  v8(v262 + v265[7], v263 + v265[7], v6);
  v266 = a3[13];
  v267 = (_QWORD *)(a1 + v266);
  v268 = (uint64_t *)(a2 + v266);
  v270 = *v268;
  v269 = v268[1];
  *v267 = v270;
  v267[1] = v269;
  swift_bridgeObjectRelease();
  v271 = a3[14];
  v272 = a3[15];
  v273 = a1 + v271;
  v274 = a2 + v271;
  *(_QWORD *)v273 = *(_QWORD *)v274;
  *(_BYTE *)(v273 + 8) = *(_BYTE *)(v274 + 8);
  *(_QWORD *)(a1 + v272) = *(_QWORD *)(a2 + v272);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Session.Event()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F84C33C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;

  sub_23F72E034();
  sub_23F6F07DC();
  if (v8)
  {
    v6 = sub_23F876D78();
  }
  else
  {
    sub_23F6916B8(&qword_256EA2798);
    sub_23F6F07DC();
    if (v8)
    {
      sub_23F6F0B08();
    }
    else
    {
      type metadata accessor for Session.Event.Payload(0);
      sub_23F6F07DC();
      if (v10)
      {
        sub_23F6F0AFC();
      }
      else
      {
        if ((_DWORD)a2 == 0x7FFFFFFF)
        {
          sub_23F6F083C(*(_QWORD *)(a1 + *(int *)(a3 + 32) + 8));
          sub_23F694C84();
          return;
        }
        v7 = sub_23F7A34F8();
        v9 = *(int *)(a3 + 48);
      }
    }
    v6 = a1 + v9;
  }
  sub_23F6F07D0(v6, a2, v7);
}

uint64_t storeEnumTagSinglePayload for Session.Event()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F84C3EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F72E034();
  sub_23F6F07EC();
  if (v6)
  {
    sub_23F876DBC();
  }
  else
  {
    sub_23F6916B8(&qword_256EA2798);
    sub_23F6F07EC();
    if (v6)
    {
      sub_23F6F0BD0();
    }
    else
    {
      type metadata accessor for Session.Event.Payload(0);
      sub_23F6F07EC();
      if (v7)
      {
        sub_23F6F0BB8();
      }
      else
      {
        if (a3 == 0x7FFFFFFF)
        {
          sub_23F878064(*(int *)(a4 + 32));
          sub_23F694C84();
          return;
        }
        sub_23F7A34F8();
      }
    }
  }
  sub_23F6F08B0();
  sub_23F6F07C4(v8, v9, v10, v11);
}

void sub_23F84C48C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_23FB2C4B8();
  if (v0 <= 0x3F)
  {
    sub_23F6DE58C(319, qword_256EA6B68, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
    if (v1 <= 0x3F)
    {
      type metadata accessor for Session.Event.Payload(319);
      if (v2 <= 0x3F)
      {
        type metadata accessor for Timepoint();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for Session.Event.Payload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int EnumCaseMultiPayload;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int *v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t Step;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t StepResults;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  const void *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(uint64_t, uint64_t, uint64_t);
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(uint64_t, uint64_t, uint64_t);
  uint64_t v129;
  int *v130;
  uint64_t v131;
  void *v132;
  const void *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  int *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void (*v142)(uint64_t, uint64_t, uint64_t);
  uint64_t v143;
  void *v144;
  const void *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  void (*v163)(uint64_t, uint64_t, uint64_t);
  uint64_t v164;
  uint64_t DecorationResult;
  uint64_t v166;
  void *v167;
  const void *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  int *v174;
  uint64_t v175;
  _QWORD *v176;
  uint64_t *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  void *v188;
  const void *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t DecorationPrePlannerResult;
  uint64_t v200;
  _QWORD *v201;
  uint64_t *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t *v207;
  uint64_t v208;
  uint64_t v209;
  int *v210;
  uint64_t v211;
  _QWORD *v212;
  _QWORD *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  void (*v219)(uint64_t, uint64_t, uint64_t);
  uint64_t v220;
  void *v221;
  const void *v222;
  uint64_t v223;
  uint64_t v224;
  int *v225;
  uint64_t v226;
  _QWORD *v227;
  _QWORD *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  void (*v234)(uint64_t, uint64_t, uint64_t);
  uint64_t v235;
  void *v236;
  const void *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  void (*v248)(uint64_t, uint64_t, uint64_t);
  uint64_t v249;
  void *v250;
  const void *v251;
  uint64_t v252;
  uint64_t v253;
  _QWORD *v254;
  _QWORD *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  void (*v261)(uint64_t, uint64_t, uint64_t);
  int *v262;
  uint64_t v263;
  void *v264;
  const void *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  void (*v272)(uint64_t, uint64_t, uint64_t);
  uint64_t v273;
  _QWORD *v274;
  _QWORD *v275;
  uint64_t v276;
  int v277;
  uint64_t v278;
  uint64_t v279;
  char *v280;
  char *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  int *v287;
  uint64_t v288;
  void *v289;
  const void *v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  void (*v297)(uint64_t, uint64_t, uint64_t);
  uint64_t v298;
  _QWORD *v299;
  _QWORD *v300;
  uint64_t v301;
  int v302;
  uint64_t v303;
  uint64_t v304;
  char *v305;
  int *v306;
  uint64_t v307;
  void *v308;
  const void *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  void (*v316)(uint64_t, uint64_t, uint64_t);
  uint64_t v317;
  _QWORD *v318;
  _QWORD *v319;
  uint64_t v320;
  int v321;
  uint64_t v322;
  uint64_t v323;
  char *v324;
  int *v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  unsigned int v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  void *v333;
  const void *v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  void *v340;
  const void *v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t result;
  char *v346;
  char *v347;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) == 0)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = sub_23FB2C998();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        v8 = type metadata accessor for SessionStart(0);
        v9 = *(int *)(v8 + 20);
        v10 = a1 + v9;
        v11 = a2 + v9;
        v12 = sub_23FB2C908();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
        *(_BYTE *)(a1 + *(int *)(v8 + 24)) = *(_BYTE *)(a2 + *(int *)(v8 + 24));
        goto LABEL_138;
      case 1u:
        v14 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v14;
        *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
        v15 = type metadata accessor for TextQuery(0);
        v16 = *(int *)(v15 + 24);
        v17 = a1 + v16;
        v18 = a2 + v16;
        v19 = sub_23FB2C764();
        v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
        swift_bridgeObjectRetain();
        v20(v17, v18, v19);
        v21 = *(int *)(v15 + 28);
        v22 = (_QWORD *)(a1 + v21);
        v23 = (_QWORD *)(a2 + v21);
        v24 = v23[1];
        *v22 = *v23;
        v22[1] = v24;
        swift_bridgeObjectRetain();
        goto LABEL_138;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
        v25 = *(_QWORD *)(a2 + 16);
        v26 = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 16) = v25;
        *(_QWORD *)(a1 + 24) = v26;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_138;
      case 3u:
        v27 = type metadata accessor for RequestContent(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 3)
        {
          if (EnumCaseMultiPayload == 2)
          {
            *(_QWORD *)a1 = *(_QWORD *)a2;
            swift_bridgeObjectRetain();
          }
          else
          {
            if (EnumCaseMultiPayload != 1)
            {
              memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
              goto LABEL_120;
            }
            v29 = *(_QWORD *)(a2 + 8);
            *(_QWORD *)a1 = *(_QWORD *)a2;
            *(_QWORD *)(a1 + 8) = v29;
            v30 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
            v31 = a1 + v30;
            v32 = a2 + v30;
            v33 = sub_23FB2C764();
            v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
            swift_bridgeObjectRetain();
            v34(v31, v32, v33);
          }
LABEL_119:
          swift_storeEnumTagMultiPayload();
LABEL_120:
          v325 = (int *)type metadata accessor for Request(0);
          *(_BYTE *)(a1 + v325[5]) = *(_BYTE *)(a2 + v325[5]);
          v326 = v325[6];
          v327 = a1 + v326;
          v328 = a2 + v326;
          v329 = *(unsigned __int8 *)(v328 + 16);
          if (v329 <= 0xFD)
          {
            v330 = *(_QWORD *)v328;
            v331 = *(_QWORD *)(v328 + 8);
            sub_23F73515C(*(_QWORD *)v328, v331, *(_BYTE *)(v328 + 16));
            *(_QWORD *)v327 = v330;
            *(_QWORD *)(v327 + 8) = v331;
            *(_BYTE *)(v327 + 16) = v329;
          }
          else
          {
            *(_OWORD *)v327 = *(_OWORD *)v328;
            *(_BYTE *)(v327 + 16) = *(_BYTE *)(v328 + 16);
          }
          v332 = v325[7];
          v333 = (void *)(a1 + v332);
          v334 = (const void *)(a2 + v332);
          v335 = sub_23FB2C4B8();
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v334, 1, v335))
          {
            v336 = sub_23F6916B8(&qword_256EA2798);
            memcpy(v333, v334, *(_QWORD *)(*(_QWORD *)(v336 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v335 - 8) + 16))(v333, v334, v335);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v333, 0, 1, v335);
          }
          v337 = v325[8];
          v241 = a1 + v337;
          v242 = a2 + v337;
          v243 = *(_QWORD *)(v242 + 8);
          if (!v243)
          {
            *(_OWORD *)v241 = *(_OWORD *)v242;
            *(_QWORD *)(v241 + 16) = *(_QWORD *)(v242 + 16);
            goto LABEL_138;
          }
          goto LABEL_127;
        }
        v283 = sub_23FB2C4B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2, 1, v283))
        {
          v284 = sub_23F6916B8(&qword_256EA2798);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v284 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v283 - 8) + 16))(a1, a2, v283);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v283);
        }
        v287 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v283 - 8) + 16))(a1 + v287[5], a2 + v287[5], v283);
        v288 = v287[6];
        v289 = (void *)(a1 + v288);
        v290 = (const void *)(a2 + v288);
        v291 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v292 = sub_23FB2ED38();
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v292 - 8) + 16))(v289, v290, v292);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v289, v290, *(_QWORD *)(*(_QWORD *)(v291 - 8) + 64));
        }
        v293 = v287[7];
        v294 = a1 + v293;
        v295 = a2 + v293;
        v296 = sub_23FB2C764();
        v297 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v296 - 8) + 16);
        v297(v294, v295, v296);
        v298 = v287[8];
        v299 = (_QWORD *)(a1 + v298);
        v300 = (_QWORD *)(a2 + v298);
        v301 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
        v302 = swift_getEnumCaseMultiPayload();
        if (v302 == 1)
        {
          *v299 = *v300;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v302)
          {
            memcpy(v299, v300, *(_QWORD *)(*(_QWORD *)(v301 - 8) + 64));
            goto LABEL_119;
          }
          v303 = v300[1];
          *v299 = *v300;
          v299[1] = v303;
          v304 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
          v346 = (char *)v299 + v304;
          v305 = (char *)v300 + v304;
          swift_bridgeObjectRetain();
          v297((uint64_t)v346, (uint64_t)v305, v296);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_119;
      case 4u:
        v35 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v35;
        v36 = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = v36;
        v37 = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 40) = v37;
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_138;
      case 5u:
        v38 = sub_23FB2C764();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(a1, a2, v38);
        v39 = (int *)type metadata accessor for Action(0);
        v40 = v39[5];
        v41 = (_QWORD *)(a1 + v40);
        v42 = (uint64_t *)(a2 + v40);
        v44 = *v42;
        v43 = v42[1];
        *v41 = v44;
        v41[1] = v43;
        v45 = v39[6];
        v46 = (_QWORD *)(a1 + v45);
        v47 = (_QWORD *)(a2 + v45);
        v48 = v47[1];
        *v46 = *v47;
        v46[1] = v48;
        v49 = v39[7];
        v50 = (_QWORD *)(a1 + v49);
        v51 = (_QWORD *)(a2 + v49);
        v52 = v51[1];
        *v50 = *v51;
        v50[1] = v52;
        *(_BYTE *)(a1 + v39[8]) = *(_BYTE *)(a2 + v39[8]);
        *(_QWORD *)(a1 + v39[9]) = *(_QWORD *)(a2 + v39[9]);
        v53 = v39[10];
        v54 = (_QWORD *)(a1 + v53);
        v55 = (_QWORD *)(a2 + v53);
        v56 = v55[1];
        *v54 = *v55;
        v54[1] = v56;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_138;
      case 6u:
        v57 = sub_23FB2C764();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2, 1, v57))
        {
          v58 = sub_23F6916B8(&qword_256EA49D8);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(a1, a2, v57);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v57);
        }
        v209 = type metadata accessor for ActionCancellation(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(a1 + *(int *)(v209 + 20), a2 + *(int *)(v209 + 20), v57);
        goto LABEL_138;
      case 7u:
        v59 = sub_23FB2C764();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(a1, a2, v59);
        v60 = (int *)type metadata accessor for ClientAction(0);
        v61 = v60[5];
        v62 = (_QWORD *)(a1 + v61);
        v63 = (uint64_t *)(a2 + v61);
        v65 = *v63;
        v64 = v63[1];
        *v62 = v65;
        v62[1] = v64;
        *(_QWORD *)(a1 + v60[6]) = *(_QWORD *)(a2 + v60[6]);
        v66 = v60[7];
        v67 = (_QWORD *)(a1 + v66);
        v68 = (_QWORD *)(a2 + v66);
        v69 = v68[1];
        *v67 = *v68;
        v67[1] = v69;
        v70 = v60[8];
        v71 = (_QWORD *)(a1 + v70);
        v72 = (_QWORD *)(a2 + v70);
        v73 = v72[1];
        *v71 = *v72;
        v71[1] = v73;
        *(_QWORD *)(a1 + v60[9]) = *(_QWORD *)(a2 + v60[9]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_138;
      case 8u:
        v74 = sub_23FB2C764();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 16))(a1, a2, v74);
        Step = type metadata accessor for QueryStep(0);
        *(_QWORD *)(a1 + *(int *)(Step + 20)) = *(_QWORD *)(a2 + *(int *)(Step + 20));
        swift_bridgeObjectRetain();
        goto LABEL_138;
      case 9u:
        v76 = sub_23FB2C764();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(a1, a2, v76);
        v77 = type metadata accessor for VariableStep(0);
        *(_QWORD *)(a1 + *(int *)(v77 + 20)) = *(_QWORD *)(a2 + *(int *)(v77 + 20));
        swift_bridgeObjectRetain();
        goto LABEL_138;
      case 0xAu:
      case 0x15u:
      case 0x1Du:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        swift_bridgeObjectRetain();
        goto LABEL_138;
      case 0xBu:
      case 0x17u:
      case 0x18u:
      case 0x1Au:
        v103 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v103;
        swift_bridgeObjectRetain();
        goto LABEL_138;
      case 0xCu:
        v78 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v78;
        v79 = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = v79;
        v80 = *(_QWORD *)(a2 + 32);
        v81 = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 32) = v80;
        *(_QWORD *)(a1 + 40) = v81;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_138;
      case 0xDu:
        type metadata accessor for SessionError();
        v82 = (char *)&loc_23F84CB0C + 4 * word_23FB636AA[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0xEu:
        v83 = *(_QWORD *)a2;
        v84 = *(_QWORD *)(a2 + 8);
        sub_23F6D1E20(*(_QWORD *)a2, v84);
        *(_QWORD *)a1 = v83;
        *(_QWORD *)(a1 + 8) = v84;
        v85 = *(_QWORD *)(a2 + 16);
        v86 = *(_QWORD *)(a2 + 24);
        sub_23F6D1E20(v85, v86);
        *(_QWORD *)(a1 + 16) = v85;
        *(_QWORD *)(a1 + 24) = v86;
        v87 = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 40) = v87;
        swift_bridgeObjectRetain();
        goto LABEL_138;
      case 0xFu:
        v88 = sub_23FB2C77C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 16))(a1, a2, v88);
        goto LABEL_138;
      case 0x10u:
        v171 = sub_23FB2C4B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2, 1, v171))
        {
          v172 = sub_23F6916B8(&qword_256EA2798);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v172 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v171 - 8) + 16))(a1, a2, v171);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v171);
        }
        v262 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v171 - 8) + 16))(a1 + v262[5], a2 + v262[5], v171);
        v263 = v262[6];
        v264 = (void *)(a1 + v263);
        v265 = (const void *)(a2 + v263);
        v266 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v267 = sub_23FB2ED38();
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v267 - 8) + 16))(v264, v265, v267);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v264, v265, *(_QWORD *)(*(_QWORD *)(v266 - 8) + 64));
        }
        v268 = v262[7];
        v269 = a1 + v268;
        v270 = a2 + v268;
        v271 = sub_23FB2C764();
        v272 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v271 - 8) + 16);
        v272(v269, v270, v271);
        v273 = v262[8];
        v274 = (_QWORD *)(a1 + v273);
        v275 = (_QWORD *)(a2 + v273);
        v276 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
        v277 = swift_getEnumCaseMultiPayload();
        if (v277 == 1)
        {
          *v274 = *v275;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v277)
          {
            memcpy(v274, v275, *(_QWORD *)(*(_QWORD *)(v276 - 8) + 64));
LABEL_138:
            swift_storeEnumTagMultiPayload();
            return a1;
          }
          v278 = v275[1];
          *v274 = *v275;
          v274[1] = v278;
          v279 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
          v280 = (char *)v274 + v279;
          v281 = (char *)v275 + v279;
          swift_bridgeObjectRetain();
          v272((uint64_t)v280, (uint64_t)v281, v271);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_138;
      case 0x11u:
        v89 = sub_23FB2C4B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2, 1, v89))
        {
          v90 = sub_23F6916B8(&qword_256EA2798);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 16))(a1, a2, v89);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v89);
        }
        v210 = (int *)type metadata accessor for ActionStepResult(0);
        v211 = v210[5];
        v212 = (_QWORD *)(a1 + v211);
        v213 = (_QWORD *)(a2 + v211);
        v214 = v213[1];
        *v212 = *v213;
        v212[1] = v214;
        v215 = v210[6];
        v216 = a1 + v215;
        v217 = a2 + v215;
        v218 = sub_23FB2C80C();
        v219 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v218 - 8) + 16);
        swift_bridgeObjectRetain();
        v219(v216, v217, v218);
        v220 = *(int *)(type metadata accessor for ActionResult(0) + 20);
        v221 = (void *)(v216 + v220);
        v222 = (const void *)(v217 + v220);
        v223 = sub_23FB2D0B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v222, 1, v223))
        {
          v224 = sub_23F6916B8(&qword_256EA2780);
          memcpy(v221, v222, *(_QWORD *)(*(_QWORD *)(v224 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v223 - 8) + 16))(v221, v222, v223);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v221, 0, 1, v223);
        }
        v253 = v210[7];
        v254 = (_QWORD *)(a1 + v253);
        v255 = (_QWORD *)(a2 + v253);
        v256 = v255[1];
        *v254 = *v255;
        v254[1] = v256;
        swift_bridgeObjectRetain();
        goto LABEL_138;
      case 0x12u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        StepResults = type metadata accessor for QueryStepResults(0);
        v92 = *(int *)(StepResults + 20);
        v93 = a1 + v92;
        v94 = a2 + v92;
        v95 = sub_23FB2C764();
        v96 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 16);
        swift_bridgeObjectRetain();
        v96(v93, v94, v95);
        v97 = *(int *)(StepResults + 24);
        v98 = a1 + v97;
        v99 = a2 + v97;
        v100 = sub_23FB2C4B8();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(v98, v99, v100);
        goto LABEL_138;
      case 0x13u:
        v101 = sub_23FB2C938();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(a1, a2, v101);
        goto LABEL_138;
      case 0x14u:
        v173 = sub_23FB2C764();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(a1, a2, v173);
        v174 = (int *)type metadata accessor for ActionResolverRequest(0);
        v175 = v174[5];
        v176 = (_QWORD *)(a1 + v175);
        v177 = (uint64_t *)(a2 + v175);
        v179 = *v177;
        v178 = v177[1];
        *v176 = v179;
        v176[1] = v178;
        *(_QWORD *)(a1 + v174[6]) = *(_QWORD *)(a2 + v174[6]);
        *(_QWORD *)(a1 + v174[7]) = *(_QWORD *)(a2 + v174[7]);
        *(_QWORD *)(a1 + v174[8]) = *(_QWORD *)(a2 + v174[8]);
        *(_BYTE *)(a1 + v174[9]) = *(_BYTE *)(a2 + v174[9]);
        *(_BYTE *)(a1 + v174[10]) = *(_BYTE *)(a2 + v174[10]);
        *(_BYTE *)(a1 + v174[11]) = *(_BYTE *)(a2 + v174[11]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_138;
      case 0x16u:
      case 0x24u:
        v102 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v102;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_138;
      case 0x1Bu:
        v180 = *(_QWORD *)a2;
        v181 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = v180;
        *(_QWORD *)(a1 + 8) = v181;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_138;
      case 0x1Cu:
        v182 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v182;
        v183 = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = v183;
        *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
        v185 = *(_QWORD *)(a2 + 40);
        v184 = *(_QWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 40) = v185;
        *(_QWORD *)(a1 + 48) = v184;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_138;
      case 0x1Eu:
        v104 = sub_23FB2D004();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 16))(a1, a2, v104);
        goto LABEL_138;
      case 0x1Fu:
        v105 = sub_23FB2C4B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2, 1, v105))
        {
          v106 = sub_23F6916B8(&qword_256EA2798);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 16))(a1, a2, v105);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v105);
        }
        v225 = (int *)type metadata accessor for StatementResult(0);
        v226 = v225[5];
        v227 = (_QWORD *)(a1 + v226);
        v228 = (_QWORD *)(a2 + v226);
        v229 = v228[1];
        *v227 = *v228;
        v227[1] = v229;
        v230 = v225[6];
        v231 = a1 + v230;
        v232 = a2 + v230;
        v233 = sub_23FB2D0DC();
        v234 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v233 - 8) + 16);
        swift_bridgeObjectRetain();
        v234(v231, v232, v233);
        v235 = *(int *)(type metadata accessor for StatementResultPayload(0) + 20);
        v236 = (void *)(v231 + v235);
        v237 = (const void *)(v232 + v235);
        v238 = sub_23FB2D0B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v237, 1, v238))
        {
          v239 = sub_23F6916B8(&qword_256EA2780);
          memcpy(v236, v237, *(_QWORD *)(*(_QWORD *)(v239 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v238 - 8) + 16))(v236, v237, v238);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v236, 0, 1, v238);
        }
        v257 = v225[7];
        v258 = a1 + v257;
        v259 = a2 + v257;
        v260 = sub_23FB2C764();
        v261 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v260 - 8) + 16);
        v261(v258, v259, v260);
        v261(a1 + v225[8], a2 + v225[8], v260);
        v261(a1 + v225[9], a2 + v225[9], v260);
        goto LABEL_138;
      case 0x20u:
        v107 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v107;
        v108 = type metadata accessor for ExternalAgentTextQuery(0);
        v109 = *(int *)(v108 + 20);
        v110 = (void *)(a1 + v109);
        v111 = (const void *)(a2 + v109);
        v112 = sub_23FB2C4B8();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v111, 1, v112))
        {
          v113 = sub_23F6916B8(&qword_256EA2798);
          memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v112 - 8) + 16))(v110, v111, v112);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v110, 0, 1, v112);
        }
        v240 = *(int *)(v108 + 24);
        v241 = a1 + v240;
        v242 = a2 + v240;
        v243 = *(_QWORD *)(v242 + 8);
        if (v243)
          goto LABEL_127;
        *(_OWORD *)v241 = *(_OWORD *)v242;
        *(_QWORD *)(v241 + 16) = *(_QWORD *)(v242 + 16);
        goto LABEL_138;
      case 0x21u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v186 = type metadata accessor for ExternalAgentSpeechQuery(0);
        v187 = *(int *)(v186 + 20);
        v188 = (void *)(a1 + v187);
        v189 = (const void *)(a2 + v187);
        v190 = sub_23FB2C4B8();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v189, 1, v190))
        {
          v191 = sub_23F6916B8(&qword_256EA2798);
          memcpy(v188, v189, *(_QWORD *)(*(_QWORD *)(v191 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v190 - 8) + 16))(v188, v189, v190);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v188, 0, 1, v190);
        }
        v282 = *(int *)(v186 + 24);
        v241 = a1 + v282;
        v242 = a2 + v282;
        v243 = *(_QWORD *)(v242 + 8);
        if (v243)
          goto LABEL_127;
        *(_OWORD *)v241 = *(_OWORD *)v242;
        *(_QWORD *)(v241 + 16) = *(_QWORD *)(v242 + 16);
        goto LABEL_138;
      case 0x22u:
        v114 = type metadata accessor for RequestContent(0);
        v115 = swift_getEnumCaseMultiPayload();
        if (v115 != 3)
        {
          if (v115 == 2)
          {
            *(_QWORD *)a1 = *(_QWORD *)a2;
            swift_bridgeObjectRetain();
          }
          else
          {
            if (v115 != 1)
            {
              memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
              goto LABEL_133;
            }
            v116 = *(_QWORD *)(a2 + 8);
            *(_QWORD *)a1 = *(_QWORD *)a2;
            *(_QWORD *)(a1 + 8) = v116;
            v117 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
            v118 = a1 + v117;
            v119 = a2 + v117;
            v120 = sub_23FB2C764();
            v121 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v120 - 8) + 16);
            swift_bridgeObjectRetain();
            v121(v118, v119, v120);
          }
LABEL_132:
          swift_storeEnumTagMultiPayload();
LABEL_133:
          v338 = type metadata accessor for ExternalAgentRequest(0);
          v339 = *(int *)(v338 + 20);
          v340 = (void *)(a1 + v339);
          v341 = (const void *)(a2 + v339);
          v342 = sub_23FB2C4B8();
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v341, 1, v342))
          {
            v343 = sub_23F6916B8(&qword_256EA2798);
            memcpy(v340, v341, *(_QWORD *)(*(_QWORD *)(v343 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v342 - 8) + 16))(v340, v341, v342);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v340, 0, 1, v342);
          }
          v344 = *(int *)(v338 + 24);
          v241 = a1 + v344;
          v242 = a2 + v344;
          v243 = *(_QWORD *)(v242 + 8);
          if (!v243)
          {
            *(_OWORD *)v241 = *(_OWORD *)v242;
            *(_QWORD *)(v241 + 16) = *(_QWORD *)(v242 + 16);
            goto LABEL_138;
          }
LABEL_127:
          *(_QWORD *)v241 = *(_QWORD *)v242;
          *(_QWORD *)(v241 + 8) = v243;
          *(_QWORD *)(v241 + 16) = *(_QWORD *)(v242 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_138;
        }
        v285 = sub_23FB2C4B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2, 1, v285))
        {
          v286 = sub_23F6916B8(&qword_256EA2798);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v286 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v285 - 8) + 16))(a1, a2, v285);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v285);
        }
        v306 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v285 - 8) + 16))(a1 + v306[5], a2 + v306[5], v285);
        v307 = v306[6];
        v308 = (void *)(a1 + v307);
        v309 = (const void *)(a2 + v307);
        v310 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v311 = sub_23FB2ED38();
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v311 - 8) + 16))(v308, v309, v311);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v308, v309, *(_QWORD *)(*(_QWORD *)(v310 - 8) + 64));
        }
        v312 = v306[7];
        v313 = a1 + v312;
        v314 = a2 + v312;
        v315 = sub_23FB2C764();
        v316 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v315 - 8) + 16);
        v316(v313, v314, v315);
        v317 = v306[8];
        v318 = (_QWORD *)(a1 + v317);
        v319 = (_QWORD *)(a2 + v317);
        v320 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
        v321 = swift_getEnumCaseMultiPayload();
        if (v321 == 1)
        {
          *v318 = *v319;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v321)
          {
            memcpy(v318, v319, *(_QWORD *)(*(_QWORD *)(v320 - 8) + 64));
            goto LABEL_132;
          }
          v322 = v319[1];
          *v318 = *v319;
          v318[1] = v322;
          v323 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
          v347 = (char *)v318 + v323;
          v324 = (char *)v319 + v323;
          swift_bridgeObjectRetain();
          v316((uint64_t)v347, (uint64_t)v324, v315);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_132;
      case 0x23u:
        v192 = sub_23FB2C764();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v192 - 8) + 16))(a1, a2, v192);
        v193 = type metadata accessor for ExternalAgentOutcome(0);
        v194 = *(int *)(v193 + 20);
        v195 = a1 + v194;
        v196 = a2 + v194;
        v197 = sub_23FB2D0DC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v197 - 8) + 16))(v195, v196, v197);
        *(_QWORD *)(a1 + *(int *)(v193 + 24)) = *(_QWORD *)(a2 + *(int *)(v193 + 24));
        swift_bridgeObjectRetain();
        goto LABEL_138;
      case 0x25u:
        v122 = sub_23FB2E8D0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 16))(a1, a2, v122);
        v123 = type metadata accessor for ToolResolution(0);
        v124 = *(int *)(v123 + 20);
        v125 = a1 + v124;
        v126 = a2 + v124;
        v127 = sub_23FB2C764();
        v128 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v127 - 8) + 16);
        v128(v125, v126, v127);
        v128(a1 + *(int *)(v123 + 24), a2 + *(int *)(v123 + 24), v127);
        goto LABEL_138;
      case 0x26u:
        v129 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v129;
        v130 = (int *)type metadata accessor for UndoRedoRequest(0);
        v131 = v130[5];
        v132 = (void *)(a1 + v131);
        v133 = (const void *)(a2 + v131);
        v134 = sub_23FB2C4B8();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v133, 1, v134))
        {
          v135 = sub_23F6916B8(&qword_256EA2798);
          memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(v132, v133, v134);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v132, 0, 1, v134);
        }
        *(_BYTE *)(a1 + v130[6]) = *(_BYTE *)(a2 + v130[6]);
        v244 = v130[7];
        v245 = a1 + v244;
        v246 = a2 + v244;
        v247 = sub_23FB2C764();
        v248 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v247 - 8) + 16);
        v248(v245, v246, v247);
        v249 = v130[8];
        v250 = (void *)(a1 + v249);
        v251 = (const void *)(a2 + v249);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v251, 1, v247))
        {
          v252 = sub_23F6916B8(&qword_256EA49D8);
          memcpy(v250, v251, *(_QWORD *)(*(_QWORD *)(v252 - 8) + 64));
        }
        else
        {
          v248((uint64_t)v250, (uint64_t)v251, v247);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v250, 0, 1, v247);
        }
        goto LABEL_138;
      case 0x27u:
        v136 = sub_23FB2C4B8();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v136 - 8) + 16))(a1, a2, v136);
        v137 = (int *)type metadata accessor for ClientUndoRedoRequest(0);
        *(_BYTE *)(a1 + v137[5]) = *(_BYTE *)(a2 + v137[5]);
        v138 = v137[6];
        v139 = a1 + v138;
        v140 = a2 + v138;
        v141 = sub_23FB2C764();
        v142 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v141 - 8) + 16);
        v142(v139, v140, v141);
        v143 = v137[7];
        v144 = (void *)(a1 + v143);
        v145 = (const void *)(a2 + v143);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v145, 1, v141))
        {
          v146 = sub_23F6916B8(&qword_256EA49D8);
          memcpy(v144, v145, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
        }
        else
        {
          v142((uint64_t)v144, (uint64_t)v145, v141);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v144, 0, 1, v141);
        }
        goto LABEL_138;
      case 0x28u:
        v147 = sub_23FB2ED38();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v147 - 8) + 16))(a1, a2, v147);
        v148 = type metadata accessor for TypeConversionRequest(0);
        v149 = *(int *)(v148 + 20);
        v150 = a1 + v149;
        v151 = a2 + v149;
        v152 = sub_23FB2ED5C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v152 - 8) + 16))(v150, v151, v152);
        v153 = *(int *)(v148 + 24);
        v154 = a1 + v153;
        v155 = a2 + v153;
        v156 = sub_23FB2C764();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v156 - 8) + 16))(v154, v155, v156);
        goto LABEL_138;
      case 0x29u:
        v157 = sub_23FB2ED38();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v157 - 8) + 16))(a1, a2, v157);
        v158 = type metadata accessor for TypeConversionResult(0);
        v159 = *(int *)(v158 + 20);
        v160 = a1 + v159;
        v161 = a2 + v159;
        v162 = sub_23FB2C764();
        v163 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v162 - 8) + 16);
        v163(v160, v161, v162);
        v163(a1 + *(int *)(v158 + 24), a2 + *(int *)(v158 + 24), v162);
        goto LABEL_138;
      case 0x2Au:
        v164 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v164;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        DecorationResult = type metadata accessor for QueryDecorationResult(0);
        v166 = *(int *)(DecorationResult + 28);
        v167 = (void *)(a1 + v166);
        v168 = (const void *)(a2 + v166);
        v169 = sub_23FB2E354();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v168, 1, v169))
        {
          v170 = sub_23F6916B8(&qword_256EA71F8);
          memcpy(v167, v168, *(_QWORD *)(*(_QWORD *)(v170 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v169 - 8) + 16))(v167, v168, v169);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v167, 0, 1, v169);
        }
        *(_QWORD *)(a1 + *(int *)(DecorationResult + 32)) = *(_QWORD *)(a2 + *(int *)(DecorationResult + 32));
        swift_bridgeObjectRetain();
        goto LABEL_138;
      case 0x2Cu:
        v198 = sub_23FB2C764();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v198 - 8) + 16))(a1, a2, v198);
        DecorationPrePlannerResult = type metadata accessor for QueryDecorationPrePlannerResult(0);
        v200 = *(int *)(DecorationPrePlannerResult + 20);
        v201 = (_QWORD *)(a1 + v200);
        v202 = (uint64_t *)(a2 + v200);
        v204 = *v202;
        v203 = v202[1];
        *v201 = v204;
        v201[1] = v203;
        v205 = *(int *)(DecorationPrePlannerResult + 24);
        v206 = a1 + v205;
        v207 = (uint64_t *)(a2 + v205);
        v208 = *v207;
        LOBYTE(v207) = *((_BYTE *)v207 + 8);
        *(_QWORD *)v206 = v208;
        *(_BYTE *)(v206 + 8) = (_BYTE)v207;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_138;
      default:
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(v5 + 64));
        return a1;
    }
  }
  v13 = *(_QWORD *)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  a1 = v13 + ((v6 + 16) & ~(unint64_t)v6);
  swift_retain();
  return a1;
}

uint64_t destroy for Session.Event.Payload(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t StepResults;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t);
  uint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  int *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(uint64_t, uint64_t);
  uint64_t v90;
  int v91;
  uint64_t v92;
  int *v93;
  uint64_t v94;
  unsigned int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = sub_23FB2C998();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      a1 += *(int *)(type metadata accessor for SessionStart(0) + 20);
      v4 = sub_23FB2C908();
      goto LABEL_90;
    case 1:
      swift_bridgeObjectRelease();
      v5 = a1 + *(int *)(type metadata accessor for TextQuery(0) + 24);
      v6 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      return swift_bridgeObjectRelease();
    case 2:
    case 22:
    case 27:
    case 36:
      goto LABEL_104;
    case 3:
      type metadata accessor for RequestContent(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 3)
      {
        v73 = sub_23FB2C4B8();
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v73))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 8))(a1, v73);
        v74 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 8))(a1 + v74[5], v73);
        v75 = a1 + v74[6];
        type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v76 = sub_23FB2ED38();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 8))(v75, v76);
        }
        v77 = a1 + v74[7];
        v78 = sub_23FB2C764();
        v79 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 8);
        v79(v77, v78);
        v80 = a1 + v74[8];
        type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
        v81 = swift_getEnumCaseMultiPayload();
        if (v81 != 1)
        {
          if (!v81)
          {
            swift_bridgeObjectRelease();
            v82 = type metadata accessor for RequestContent.TextContent(0);
            v79(v80 + *(int *)(v82 + 20), v78);
          }
          goto LABEL_93;
        }
      }
      else if (EnumCaseMultiPayload != 2)
      {
        if (EnumCaseMultiPayload == 1)
        {
          swift_bridgeObjectRelease();
          v8 = a1 + *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
          v9 = sub_23FB2C764();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
        }
LABEL_93:
        v93 = (int *)type metadata accessor for Request(0);
        v94 = a1 + v93[6];
        v95 = *(unsigned __int8 *)(v94 + 16);
        if (v95 <= 0xFD)
          sub_23F735FE8(*(_QWORD *)v94, *(_QWORD *)(v94 + 8), v95);
        v96 = a1 + v93[7];
        v97 = sub_23FB2C4B8();
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v96, 1, v97))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 8))(v96, v97);
        v98 = v93[8];
        goto LABEL_103;
      }
      swift_bridgeObjectRelease();
      goto LABEL_93;
    case 4:
    case 28:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_104;
    case 5:
      v10 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(a1, v10);
      type metadata accessor for Action(0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 6:
      v11 = sub_23FB2C764();
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v11))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a1, v11);
      v12 = a1 + *(int *)(type metadata accessor for ActionCancellation(0) + 20);
      v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
LABEL_13:
      v14 = v11;
      return v13(v12, v14);
    case 7:
      v15 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a1, v15);
      type metadata accessor for ClientAction(0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 8:
      v16 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a1, v16);
      type metadata accessor for QueryStep(0);
      return swift_bridgeObjectRelease();
    case 9:
      v17 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a1, v17);
      type metadata accessor for VariableStep(0);
      return swift_bridgeObjectRelease();
    case 10:
    case 11:
    case 21:
    case 23:
    case 24:
    case 26:
    case 29:
      return swift_bridgeObjectRelease();
    case 12:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 13:
      type metadata accessor for SessionError();
      result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
          goto LABEL_89;
        case 1:
          type metadata accessor for SessionCoordinatorError();
          result = swift_getEnumCaseMultiPayload();
          if (result > 2)
            return result;
LABEL_89:
          v4 = sub_23FB2C6F8();
          goto LABEL_90;
        case 2:
        case 3:
          v11 = sub_23FB2C6F8();
          result = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v11);
          if ((_DWORD)result)
            return result;
          v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
          v12 = a1;
          goto LABEL_13;
        default:
          return result;
      }
    case 14:
      sub_23F6BC34C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
      sub_23F6BC34C(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
      return swift_bridgeObjectRelease();
    case 15:
      v4 = sub_23FB2C77C();
      goto LABEL_90;
    case 16:
      v18 = sub_23FB2C4B8();
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v18))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(a1, v18);
      v19 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(a1 + v19[5], v18);
      v20 = a1 + v19[6];
      type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v21 = sub_23FB2ED38();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
      }
      v22 = a1 + v19[7];
      v23 = sub_23FB2C764();
      v102 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8);
      v102(v22, v23);
      v24 = a1 + v19[8];
      type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
      result = swift_getEnumCaseMultiPayload();
      if ((_DWORD)result == 1)
        return swift_bridgeObjectRelease();
      if ((_DWORD)result)
        return result;
      swift_bridgeObjectRelease();
      v12 = v24 + *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
LABEL_50:
      v14 = v23;
LABEL_57:
      v13 = (uint64_t (*)(uint64_t, uint64_t))v102;
      return v13(v12, v14);
    case 17:
      v25 = sub_23FB2C4B8();
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v25))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(a1, v25);
      v26 = type metadata accessor for ActionStepResult(0);
      swift_bridgeObjectRelease();
      v27 = a1 + *(int *)(v26 + 24);
      v28 = sub_23FB2C80C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
      v29 = v27 + *(int *)(type metadata accessor for ActionResult(0) + 20);
      v30 = sub_23FB2D0B8();
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v29, 1, v30))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
      return swift_bridgeObjectRelease();
    case 18:
      swift_bridgeObjectRelease();
      StepResults = type metadata accessor for QueryStepResults(0);
      v32 = a1 + *(int *)(StepResults + 20);
      v33 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v32, v33);
      a1 += *(int *)(StepResults + 24);
      v4 = sub_23FB2C4B8();
      goto LABEL_90;
    case 19:
      v4 = sub_23FB2C938();
      goto LABEL_90;
    case 20:
      v34 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(a1, v34);
      type metadata accessor for ActionResolverRequest(0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 30:
      v4 = sub_23FB2D004();
      goto LABEL_90;
    case 31:
      v35 = sub_23FB2C4B8();
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v35))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(a1, v35);
      v36 = (int *)type metadata accessor for StatementResult(0);
      swift_bridgeObjectRelease();
      v37 = a1 + v36[6];
      v38 = sub_23FB2D0DC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
      v39 = v37 + *(int *)(type metadata accessor for StatementResultPayload(0) + 20);
      v40 = sub_23FB2D0B8();
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v39, 1, v40))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
      v41 = a1 + v36[7];
      v42 = sub_23FB2C764();
      v102 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8);
      v102(v41, v42);
      v102(a1 + v36[8], v42);
      v43 = v36[9];
      goto LABEL_56;
    case 32:
      swift_bridgeObjectRelease();
      v44 = type metadata accessor for ExternalAgentTextQuery(0);
      goto LABEL_100;
    case 33:
      swift_bridgeObjectRelease();
      v44 = type metadata accessor for ExternalAgentSpeechQuery(0);
      goto LABEL_100;
    case 34:
      type metadata accessor for RequestContent(0);
      v66 = swift_getEnumCaseMultiPayload();
      if (v66 != 3)
      {
        if (v66 != 2)
        {
          if (v66 == 1)
          {
            swift_bridgeObjectRelease();
            v67 = a1 + *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
            v68 = sub_23FB2C764();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 8))(v67, v68);
          }
          goto LABEL_99;
        }
LABEL_98:
        swift_bridgeObjectRelease();
        goto LABEL_99;
      }
      v83 = sub_23FB2C4B8();
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v83))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 8))(a1, v83);
      v84 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 8))(a1 + v84[5], v83);
      v85 = a1 + v84[6];
      type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v86 = sub_23FB2ED38();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 8))(v85, v86);
      }
      v87 = a1 + v84[7];
      v88 = sub_23FB2C764();
      v89 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 8);
      v89(v87, v88);
      v90 = a1 + v84[8];
      type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
      v91 = swift_getEnumCaseMultiPayload();
      if (v91 == 1)
        goto LABEL_98;
      if (!v91)
      {
        swift_bridgeObjectRelease();
        v92 = type metadata accessor for RequestContent.TextContent(0);
        v89(v90 + *(int *)(v92 + 20), v88);
      }
LABEL_99:
      v44 = type metadata accessor for ExternalAgentRequest(0);
LABEL_100:
      v99 = v44;
      v100 = a1 + *(int *)(v44 + 20);
      v101 = sub_23FB2C4B8();
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v100, 1, v101))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 8))(v100, v101);
      v98 = *(int *)(v99 + 24);
LABEL_103:
      result = *(_QWORD *)(a1 + v98 + 8);
      if (result)
      {
LABEL_104:
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      return result;
    case 35:
      v69 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 8))(a1, v69);
      v70 = a1 + *(int *)(type metadata accessor for ExternalAgentOutcome(0) + 20);
      v71 = sub_23FB2D0DC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 8))(v70, v71);
      return swift_bridgeObjectRelease();
    case 37:
      v45 = sub_23FB2E8D0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(a1, v45);
      v46 = type metadata accessor for ToolResolution(0);
      goto LABEL_55;
    case 38:
      swift_bridgeObjectRelease();
      v47 = (int *)type metadata accessor for UndoRedoRequest(0);
      v48 = a1 + v47[5];
      v49 = sub_23FB2C4B8();
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v48, 1, v49))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v48, v49);
      v50 = a1 + v47[7];
      v23 = sub_23FB2C764();
      v102 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8);
      v102(v50, v23);
      v51 = a1 + v47[8];
      result = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v51, 1, v23);
      if ((_DWORD)result)
        return result;
      v12 = v51;
      goto LABEL_50;
    case 39:
      v52 = sub_23FB2C4B8();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(a1, v52);
      v53 = type metadata accessor for ClientUndoRedoRequest(0);
      v54 = a1 + *(int *)(v53 + 24);
      v55 = sub_23FB2C764();
      v102 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8);
      v102(v54, v55);
      v56 = a1 + *(int *)(v53 + 28);
      result = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v56, 1, v55);
      if ((_DWORD)result)
        return result;
      v12 = v56;
      v14 = v55;
      goto LABEL_57;
    case 40:
      v57 = sub_23FB2ED38();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(a1, v57);
      v58 = type metadata accessor for TypeConversionRequest(0);
      v59 = a1 + *(int *)(v58 + 20);
      v60 = sub_23FB2ED5C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 8))(v59, v60);
      a1 += *(int *)(v58 + 24);
      v4 = sub_23FB2C764();
LABEL_90:
      v14 = v4;
      v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
      v12 = a1;
      return v13(v12, v14);
    case 41:
      v61 = sub_23FB2ED38();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 8))(a1, v61);
      v46 = type metadata accessor for TypeConversionResult(0);
LABEL_55:
      v62 = v46;
      v63 = a1 + *(int *)(v46 + 20);
      v42 = sub_23FB2C764();
      v102 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8);
      v102(v63, v42);
      v43 = *(int *)(v62 + 24);
LABEL_56:
      v12 = a1 + v43;
      v14 = v42;
      goto LABEL_57;
    case 42:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v64 = a1 + *(int *)(type metadata accessor for QueryDecorationResult(0) + 28);
      v65 = sub_23FB2E354();
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v64, 1, v65))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 8))(v64, v65);
      return swift_bridgeObjectRelease();
    case 44:
      v72 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 8))(a1, v72);
      type metadata accessor for QueryDecorationPrePlannerResult(0);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    default:
      return result;
  }
}

uint64_t initializeWithCopy for Session.Event.Payload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int EnumCaseMultiPayload;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t Step;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t StepResults;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(uint64_t, uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  const void *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(uint64_t, uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void (*v126)(uint64_t, uint64_t, uint64_t);
  uint64_t v127;
  int *v128;
  uint64_t v129;
  void *v130;
  const void *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  int *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(uint64_t, uint64_t, uint64_t);
  uint64_t v141;
  void *v142;
  const void *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void (*v161)(uint64_t, uint64_t, uint64_t);
  uint64_t v162;
  uint64_t DecorationResult;
  uint64_t v164;
  void *v165;
  const void *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  int *v172;
  uint64_t v173;
  _QWORD *v174;
  uint64_t *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  void *v186;
  const void *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t DecorationPrePlannerResult;
  uint64_t v198;
  _QWORD *v199;
  uint64_t *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t *v205;
  uint64_t v206;
  uint64_t v207;
  int *v208;
  uint64_t v209;
  _QWORD *v210;
  _QWORD *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  void (*v217)(uint64_t, uint64_t, uint64_t);
  uint64_t v218;
  void *v219;
  const void *v220;
  uint64_t v221;
  uint64_t v222;
  int *v223;
  uint64_t v224;
  _QWORD *v225;
  _QWORD *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  void (*v232)(uint64_t, uint64_t, uint64_t);
  uint64_t v233;
  void *v234;
  const void *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  void (*v246)(uint64_t, uint64_t, uint64_t);
  uint64_t v247;
  void *v248;
  const void *v249;
  uint64_t v250;
  uint64_t v251;
  _QWORD *v252;
  _QWORD *v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  void (*v259)(uint64_t, uint64_t, uint64_t);
  int *v260;
  uint64_t v261;
  void *v262;
  const void *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  void (*v270)(uint64_t, uint64_t, uint64_t);
  uint64_t v271;
  _QWORD *v272;
  _QWORD *v273;
  uint64_t v274;
  int v275;
  uint64_t v276;
  uint64_t v277;
  char *v278;
  char *v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  int *v285;
  uint64_t v286;
  void *v287;
  const void *v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  void (*v295)(uint64_t, uint64_t, uint64_t);
  uint64_t v296;
  _QWORD *v297;
  _QWORD *v298;
  uint64_t v299;
  int v300;
  uint64_t v301;
  uint64_t v302;
  char *v303;
  int *v304;
  uint64_t v305;
  void *v306;
  const void *v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  void (*v314)(uint64_t, uint64_t, uint64_t);
  uint64_t v315;
  _QWORD *v316;
  _QWORD *v317;
  uint64_t v318;
  int v319;
  uint64_t v320;
  uint64_t v321;
  char *v322;
  int *v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  unsigned int v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  void *v331;
  const void *v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  void *v338;
  const void *v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t result;
  char *v344;
  char *v345;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = sub_23FB2C998();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = type metadata accessor for SessionStart(0);
      v8 = *(int *)(v7 + 20);
      v9 = a1 + v8;
      v10 = a2 + v8;
      v11 = sub_23FB2C908();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      *(_BYTE *)(a1 + *(int *)(v7 + 24)) = *(_BYTE *)(a2 + *(int *)(v7 + 24));
      goto LABEL_136;
    case 1u:
      v12 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v12;
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      v13 = type metadata accessor for TextQuery(0);
      v14 = *(int *)(v13 + 24);
      v15 = a1 + v14;
      v16 = a2 + v14;
      v17 = sub_23FB2C764();
      v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v15, v16, v17);
      v19 = *(int *)(v13 + 28);
      v20 = (_QWORD *)(a1 + v19);
      v21 = (_QWORD *)(a2 + v19);
      v22 = v21[1];
      *v20 = *v21;
      v20[1] = v22;
      swift_bridgeObjectRetain();
      goto LABEL_136;
    case 2u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      v23 = *(_QWORD *)(a2 + 16);
      v24 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = v23;
      *(_QWORD *)(a1 + 24) = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_136;
    case 3u:
      v25 = type metadata accessor for RequestContent(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload != 3)
      {
        if (EnumCaseMultiPayload == 2)
        {
          *(_QWORD *)a1 = *(_QWORD *)a2;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
            goto LABEL_118;
          }
          v27 = *(_QWORD *)(a2 + 8);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = v27;
          v28 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
          v29 = a1 + v28;
          v30 = a2 + v28;
          v31 = sub_23FB2C764();
          v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
          swift_bridgeObjectRetain();
          v32(v29, v30, v31);
        }
LABEL_117:
        swift_storeEnumTagMultiPayload();
LABEL_118:
        v323 = (int *)type metadata accessor for Request(0);
        *(_BYTE *)(a1 + v323[5]) = *(_BYTE *)(a2 + v323[5]);
        v324 = v323[6];
        v325 = a1 + v324;
        v326 = a2 + v324;
        v327 = *(unsigned __int8 *)(v326 + 16);
        if (v327 <= 0xFD)
        {
          v328 = *(_QWORD *)v326;
          v329 = *(_QWORD *)(v326 + 8);
          sub_23F73515C(*(_QWORD *)v326, v329, *(_BYTE *)(v326 + 16));
          *(_QWORD *)v325 = v328;
          *(_QWORD *)(v325 + 8) = v329;
          *(_BYTE *)(v325 + 16) = v327;
        }
        else
        {
          *(_OWORD *)v325 = *(_OWORD *)v326;
          *(_BYTE *)(v325 + 16) = *(_BYTE *)(v326 + 16);
        }
        v330 = v323[7];
        v331 = (void *)(a1 + v330);
        v332 = (const void *)(a2 + v330);
        v333 = sub_23FB2C4B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v332, 1, v333))
        {
          v334 = sub_23F6916B8(&qword_256EA2798);
          memcpy(v331, v332, *(_QWORD *)(*(_QWORD *)(v334 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v333 - 8) + 16))(v331, v332, v333);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v331, 0, 1, v333);
        }
        v335 = v323[8];
        v239 = a1 + v335;
        v240 = a2 + v335;
        v241 = *(_QWORD *)(v240 + 8);
        if (!v241)
        {
          *(_OWORD *)v239 = *(_OWORD *)v240;
          *(_QWORD *)(v239 + 16) = *(_QWORD *)(v240 + 16);
          goto LABEL_136;
        }
        goto LABEL_125;
      }
      v281 = sub_23FB2C4B8();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2, 1, v281))
      {
        v282 = sub_23F6916B8(&qword_256EA2798);
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v282 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v281 - 8) + 16))(a1, a2, v281);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v281);
      }
      v285 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v281 - 8) + 16))(a1 + v285[5], a2 + v285[5], v281);
      v286 = v285[6];
      v287 = (void *)(a1 + v286);
      v288 = (const void *)(a2 + v286);
      v289 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v290 = sub_23FB2ED38();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v290 - 8) + 16))(v287, v288, v290);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v287, v288, *(_QWORD *)(*(_QWORD *)(v289 - 8) + 64));
      }
      v291 = v285[7];
      v292 = a1 + v291;
      v293 = a2 + v291;
      v294 = sub_23FB2C764();
      v295 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v294 - 8) + 16);
      v295(v292, v293, v294);
      v296 = v285[8];
      v297 = (_QWORD *)(a1 + v296);
      v298 = (_QWORD *)(a2 + v296);
      v299 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
      v300 = swift_getEnumCaseMultiPayload();
      if (v300 == 1)
      {
        *v297 = *v298;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v300)
        {
          memcpy(v297, v298, *(_QWORD *)(*(_QWORD *)(v299 - 8) + 64));
          goto LABEL_117;
        }
        v301 = v298[1];
        *v297 = *v298;
        v297[1] = v301;
        v302 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
        v344 = (char *)v297 + v302;
        v303 = (char *)v298 + v302;
        swift_bridgeObjectRetain();
        v295((uint64_t)v344, (uint64_t)v303, v294);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_117;
    case 4u:
      v33 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v33;
      v34 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v34;
      v35 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = v35;
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_136;
    case 5u:
      v36 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(a1, a2, v36);
      v37 = (int *)type metadata accessor for Action(0);
      v38 = v37[5];
      v39 = (_QWORD *)(a1 + v38);
      v40 = (uint64_t *)(a2 + v38);
      v42 = *v40;
      v41 = v40[1];
      *v39 = v42;
      v39[1] = v41;
      v43 = v37[6];
      v44 = (_QWORD *)(a1 + v43);
      v45 = (_QWORD *)(a2 + v43);
      v46 = v45[1];
      *v44 = *v45;
      v44[1] = v46;
      v47 = v37[7];
      v48 = (_QWORD *)(a1 + v47);
      v49 = (_QWORD *)(a2 + v47);
      v50 = v49[1];
      *v48 = *v49;
      v48[1] = v50;
      *(_BYTE *)(a1 + v37[8]) = *(_BYTE *)(a2 + v37[8]);
      *(_QWORD *)(a1 + v37[9]) = *(_QWORD *)(a2 + v37[9]);
      v51 = v37[10];
      v52 = (_QWORD *)(a1 + v51);
      v53 = (_QWORD *)(a2 + v51);
      v54 = v53[1];
      *v52 = *v53;
      v52[1] = v54;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_136;
    case 6u:
      v55 = sub_23FB2C764();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2, 1, v55))
      {
        v56 = sub_23F6916B8(&qword_256EA49D8);
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(a1, a2, v55);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v55);
      }
      v207 = type metadata accessor for ActionCancellation(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(a1 + *(int *)(v207 + 20), a2 + *(int *)(v207 + 20), v55);
      goto LABEL_136;
    case 7u:
      v57 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(a1, a2, v57);
      v58 = (int *)type metadata accessor for ClientAction(0);
      v59 = v58[5];
      v60 = (_QWORD *)(a1 + v59);
      v61 = (uint64_t *)(a2 + v59);
      v63 = *v61;
      v62 = v61[1];
      *v60 = v63;
      v60[1] = v62;
      *(_QWORD *)(a1 + v58[6]) = *(_QWORD *)(a2 + v58[6]);
      v64 = v58[7];
      v65 = (_QWORD *)(a1 + v64);
      v66 = (_QWORD *)(a2 + v64);
      v67 = v66[1];
      *v65 = *v66;
      v65[1] = v67;
      v68 = v58[8];
      v69 = (_QWORD *)(a1 + v68);
      v70 = (_QWORD *)(a2 + v68);
      v71 = v70[1];
      *v69 = *v70;
      v69[1] = v71;
      *(_QWORD *)(a1 + v58[9]) = *(_QWORD *)(a2 + v58[9]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_136;
    case 8u:
      v72 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(a1, a2, v72);
      Step = type metadata accessor for QueryStep(0);
      *(_QWORD *)(a1 + *(int *)(Step + 20)) = *(_QWORD *)(a2 + *(int *)(Step + 20));
      swift_bridgeObjectRetain();
      goto LABEL_136;
    case 9u:
      v74 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 16))(a1, a2, v74);
      v75 = type metadata accessor for VariableStep(0);
      *(_QWORD *)(a1 + *(int *)(v75 + 20)) = *(_QWORD *)(a2 + *(int *)(v75 + 20));
      swift_bridgeObjectRetain();
      goto LABEL_136;
    case 0xAu:
    case 0x15u:
    case 0x1Du:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      swift_bridgeObjectRetain();
      goto LABEL_136;
    case 0xBu:
    case 0x17u:
    case 0x18u:
    case 0x1Au:
      v101 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v101;
      swift_bridgeObjectRetain();
      goto LABEL_136;
    case 0xCu:
      v76 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v76;
      v77 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v77;
      v78 = *(_QWORD *)(a2 + 32);
      v79 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = v78;
      *(_QWORD *)(a1 + 40) = v79;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_136;
    case 0xDu:
      type metadata accessor for SessionError();
      v80 = (char *)&loc_23F84F740 + 4 * word_23FB6376E[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0xEu:
      v81 = *(_QWORD *)a2;
      v82 = *(_QWORD *)(a2 + 8);
      sub_23F6D1E20(*(_QWORD *)a2, v82);
      *(_QWORD *)a1 = v81;
      *(_QWORD *)(a1 + 8) = v82;
      v83 = *(_QWORD *)(a2 + 16);
      v84 = *(_QWORD *)(a2 + 24);
      sub_23F6D1E20(v83, v84);
      *(_QWORD *)(a1 + 16) = v83;
      *(_QWORD *)(a1 + 24) = v84;
      v85 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = v85;
      swift_bridgeObjectRetain();
      goto LABEL_136;
    case 0xFu:
      v86 = sub_23FB2C77C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(a1, a2, v86);
      goto LABEL_136;
    case 0x10u:
      v169 = sub_23FB2C4B8();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2, 1, v169))
      {
        v170 = sub_23F6916B8(&qword_256EA2798);
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v170 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v169 - 8) + 16))(a1, a2, v169);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v169);
      }
      v260 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v169 - 8) + 16))(a1 + v260[5], a2 + v260[5], v169);
      v261 = v260[6];
      v262 = (void *)(a1 + v261);
      v263 = (const void *)(a2 + v261);
      v264 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v265 = sub_23FB2ED38();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v265 - 8) + 16))(v262, v263, v265);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v262, v263, *(_QWORD *)(*(_QWORD *)(v264 - 8) + 64));
      }
      v266 = v260[7];
      v267 = a1 + v266;
      v268 = a2 + v266;
      v269 = sub_23FB2C764();
      v270 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v269 - 8) + 16);
      v270(v267, v268, v269);
      v271 = v260[8];
      v272 = (_QWORD *)(a1 + v271);
      v273 = (_QWORD *)(a2 + v271);
      v274 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
      v275 = swift_getEnumCaseMultiPayload();
      if (v275 == 1)
      {
        *v272 = *v273;
        swift_bridgeObjectRetain();
        goto LABEL_90;
      }
      if (!v275)
      {
        v276 = v273[1];
        *v272 = *v273;
        v272[1] = v276;
        v277 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
        v278 = (char *)v272 + v277;
        v279 = (char *)v273 + v277;
        swift_bridgeObjectRetain();
        v270((uint64_t)v278, (uint64_t)v279, v269);
LABEL_90:
        swift_storeEnumTagMultiPayload();
        goto LABEL_136;
      }
      memcpy(v272, v273, *(_QWORD *)(*(_QWORD *)(v274 - 8) + 64));
LABEL_136:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0x11u:
      v87 = sub_23FB2C4B8();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2, 1, v87))
      {
        v88 = sub_23F6916B8(&qword_256EA2798);
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(a1, a2, v87);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v87);
      }
      v208 = (int *)type metadata accessor for ActionStepResult(0);
      v209 = v208[5];
      v210 = (_QWORD *)(a1 + v209);
      v211 = (_QWORD *)(a2 + v209);
      v212 = v211[1];
      *v210 = *v211;
      v210[1] = v212;
      v213 = v208[6];
      v214 = a1 + v213;
      v215 = a2 + v213;
      v216 = sub_23FB2C80C();
      v217 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v216 - 8) + 16);
      swift_bridgeObjectRetain();
      v217(v214, v215, v216);
      v218 = *(int *)(type metadata accessor for ActionResult(0) + 20);
      v219 = (void *)(v214 + v218);
      v220 = (const void *)(v215 + v218);
      v221 = sub_23FB2D0B8();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v220, 1, v221))
      {
        v222 = sub_23F6916B8(&qword_256EA2780);
        memcpy(v219, v220, *(_QWORD *)(*(_QWORD *)(v222 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v221 - 8) + 16))(v219, v220, v221);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v219, 0, 1, v221);
      }
      v251 = v208[7];
      v252 = (_QWORD *)(a1 + v251);
      v253 = (_QWORD *)(a2 + v251);
      v254 = v253[1];
      *v252 = *v253;
      v252[1] = v254;
      swift_bridgeObjectRetain();
      goto LABEL_136;
    case 0x12u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      StepResults = type metadata accessor for QueryStepResults(0);
      v90 = *(int *)(StepResults + 20);
      v91 = a1 + v90;
      v92 = a2 + v90;
      v93 = sub_23FB2C764();
      v94 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 16);
      swift_bridgeObjectRetain();
      v94(v91, v92, v93);
      v95 = *(int *)(StepResults + 24);
      v96 = a1 + v95;
      v97 = a2 + v95;
      v98 = sub_23FB2C4B8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v96, v97, v98);
      goto LABEL_136;
    case 0x13u:
      v99 = sub_23FB2C938();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(a1, a2, v99);
      goto LABEL_136;
    case 0x14u:
      v171 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v171 - 8) + 16))(a1, a2, v171);
      v172 = (int *)type metadata accessor for ActionResolverRequest(0);
      v173 = v172[5];
      v174 = (_QWORD *)(a1 + v173);
      v175 = (uint64_t *)(a2 + v173);
      v177 = *v175;
      v176 = v175[1];
      *v174 = v177;
      v174[1] = v176;
      *(_QWORD *)(a1 + v172[6]) = *(_QWORD *)(a2 + v172[6]);
      *(_QWORD *)(a1 + v172[7]) = *(_QWORD *)(a2 + v172[7]);
      *(_QWORD *)(a1 + v172[8]) = *(_QWORD *)(a2 + v172[8]);
      *(_BYTE *)(a1 + v172[9]) = *(_BYTE *)(a2 + v172[9]);
      *(_BYTE *)(a1 + v172[10]) = *(_BYTE *)(a2 + v172[10]);
      *(_BYTE *)(a1 + v172[11]) = *(_BYTE *)(a2 + v172[11]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_136;
    case 0x16u:
    case 0x24u:
      v100 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v100;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_136;
    case 0x1Bu:
      v178 = *(_QWORD *)a2;
      v179 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = v178;
      *(_QWORD *)(a1 + 8) = v179;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_136;
    case 0x1Cu:
      v180 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v180;
      v181 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v181;
      *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
      v183 = *(_QWORD *)(a2 + 40);
      v182 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v183;
      *(_QWORD *)(a1 + 48) = v182;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_136;
    case 0x1Eu:
      v102 = sub_23FB2D004();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(a1, a2, v102);
      goto LABEL_136;
    case 0x1Fu:
      v103 = sub_23FB2C4B8();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2, 1, v103))
      {
        v104 = sub_23F6916B8(&qword_256EA2798);
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(a1, a2, v103);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v103);
      }
      v223 = (int *)type metadata accessor for StatementResult(0);
      v224 = v223[5];
      v225 = (_QWORD *)(a1 + v224);
      v226 = (_QWORD *)(a2 + v224);
      v227 = v226[1];
      *v225 = *v226;
      v225[1] = v227;
      v228 = v223[6];
      v229 = a1 + v228;
      v230 = a2 + v228;
      v231 = sub_23FB2D0DC();
      v232 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v231 - 8) + 16);
      swift_bridgeObjectRetain();
      v232(v229, v230, v231);
      v233 = *(int *)(type metadata accessor for StatementResultPayload(0) + 20);
      v234 = (void *)(v229 + v233);
      v235 = (const void *)(v230 + v233);
      v236 = sub_23FB2D0B8();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v235, 1, v236))
      {
        v237 = sub_23F6916B8(&qword_256EA2780);
        memcpy(v234, v235, *(_QWORD *)(*(_QWORD *)(v237 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v236 - 8) + 16))(v234, v235, v236);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v234, 0, 1, v236);
      }
      v255 = v223[7];
      v256 = a1 + v255;
      v257 = a2 + v255;
      v258 = sub_23FB2C764();
      v259 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v258 - 8) + 16);
      v259(v256, v257, v258);
      v259(a1 + v223[8], a2 + v223[8], v258);
      v259(a1 + v223[9], a2 + v223[9], v258);
      goto LABEL_136;
    case 0x20u:
      v105 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v105;
      v106 = type metadata accessor for ExternalAgentTextQuery(0);
      v107 = *(int *)(v106 + 20);
      v108 = (void *)(a1 + v107);
      v109 = (const void *)(a2 + v107);
      v110 = sub_23FB2C4B8();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v109, 1, v110))
      {
        v111 = sub_23F6916B8(&qword_256EA2798);
        memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v110 - 8) + 16))(v108, v109, v110);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v108, 0, 1, v110);
      }
      v238 = *(int *)(v106 + 24);
      v239 = a1 + v238;
      v240 = a2 + v238;
      v241 = *(_QWORD *)(v240 + 8);
      if (v241)
        goto LABEL_125;
      *(_OWORD *)v239 = *(_OWORD *)v240;
      *(_QWORD *)(v239 + 16) = *(_QWORD *)(v240 + 16);
      goto LABEL_136;
    case 0x21u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v184 = type metadata accessor for ExternalAgentSpeechQuery(0);
      v185 = *(int *)(v184 + 20);
      v186 = (void *)(a1 + v185);
      v187 = (const void *)(a2 + v185);
      v188 = sub_23FB2C4B8();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v187, 1, v188))
      {
        v189 = sub_23F6916B8(&qword_256EA2798);
        memcpy(v186, v187, *(_QWORD *)(*(_QWORD *)(v189 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v188 - 8) + 16))(v186, v187, v188);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v186, 0, 1, v188);
      }
      v280 = *(int *)(v184 + 24);
      v239 = a1 + v280;
      v240 = a2 + v280;
      v241 = *(_QWORD *)(v240 + 8);
      if (v241)
        goto LABEL_125;
      *(_OWORD *)v239 = *(_OWORD *)v240;
      *(_QWORD *)(v239 + 16) = *(_QWORD *)(v240 + 16);
      goto LABEL_136;
    case 0x22u:
      v112 = type metadata accessor for RequestContent(0);
      v113 = swift_getEnumCaseMultiPayload();
      if (v113 != 3)
      {
        if (v113 == 2)
        {
          *(_QWORD *)a1 = *(_QWORD *)a2;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v113 != 1)
          {
            memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
            goto LABEL_131;
          }
          v114 = *(_QWORD *)(a2 + 8);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = v114;
          v115 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
          v116 = a1 + v115;
          v117 = a2 + v115;
          v118 = sub_23FB2C764();
          v119 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 16);
          swift_bridgeObjectRetain();
          v119(v116, v117, v118);
        }
LABEL_130:
        swift_storeEnumTagMultiPayload();
LABEL_131:
        v336 = type metadata accessor for ExternalAgentRequest(0);
        v337 = *(int *)(v336 + 20);
        v338 = (void *)(a1 + v337);
        v339 = (const void *)(a2 + v337);
        v340 = sub_23FB2C4B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v339, 1, v340))
        {
          v341 = sub_23F6916B8(&qword_256EA2798);
          memcpy(v338, v339, *(_QWORD *)(*(_QWORD *)(v341 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v340 - 8) + 16))(v338, v339, v340);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v338, 0, 1, v340);
        }
        v342 = *(int *)(v336 + 24);
        v239 = a1 + v342;
        v240 = a2 + v342;
        v241 = *(_QWORD *)(v240 + 8);
        if (!v241)
        {
          *(_OWORD *)v239 = *(_OWORD *)v240;
          *(_QWORD *)(v239 + 16) = *(_QWORD *)(v240 + 16);
          goto LABEL_136;
        }
LABEL_125:
        *(_QWORD *)v239 = *(_QWORD *)v240;
        *(_QWORD *)(v239 + 8) = v241;
        *(_QWORD *)(v239 + 16) = *(_QWORD *)(v240 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_136;
      }
      v283 = sub_23FB2C4B8();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2, 1, v283))
      {
        v284 = sub_23F6916B8(&qword_256EA2798);
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v284 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v283 - 8) + 16))(a1, a2, v283);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v283);
      }
      v304 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v283 - 8) + 16))(a1 + v304[5], a2 + v304[5], v283);
      v305 = v304[6];
      v306 = (void *)(a1 + v305);
      v307 = (const void *)(a2 + v305);
      v308 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v309 = sub_23FB2ED38();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v309 - 8) + 16))(v306, v307, v309);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v306, v307, *(_QWORD *)(*(_QWORD *)(v308 - 8) + 64));
      }
      v310 = v304[7];
      v311 = a1 + v310;
      v312 = a2 + v310;
      v313 = sub_23FB2C764();
      v314 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v313 - 8) + 16);
      v314(v311, v312, v313);
      v315 = v304[8];
      v316 = (_QWORD *)(a1 + v315);
      v317 = (_QWORD *)(a2 + v315);
      v318 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
      v319 = swift_getEnumCaseMultiPayload();
      if (v319 == 1)
      {
        *v316 = *v317;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v319)
        {
          memcpy(v316, v317, *(_QWORD *)(*(_QWORD *)(v318 - 8) + 64));
          goto LABEL_130;
        }
        v320 = v317[1];
        *v316 = *v317;
        v316[1] = v320;
        v321 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
        v345 = (char *)v316 + v321;
        v322 = (char *)v317 + v321;
        swift_bridgeObjectRetain();
        v314((uint64_t)v345, (uint64_t)v322, v313);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_130;
    case 0x23u:
      v190 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v190 - 8) + 16))(a1, a2, v190);
      v191 = type metadata accessor for ExternalAgentOutcome(0);
      v192 = *(int *)(v191 + 20);
      v193 = a1 + v192;
      v194 = a2 + v192;
      v195 = sub_23FB2D0DC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v195 - 8) + 16))(v193, v194, v195);
      *(_QWORD *)(a1 + *(int *)(v191 + 24)) = *(_QWORD *)(a2 + *(int *)(v191 + 24));
      swift_bridgeObjectRetain();
      goto LABEL_136;
    case 0x25u:
      v120 = sub_23FB2E8D0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v120 - 8) + 16))(a1, a2, v120);
      v121 = type metadata accessor for ToolResolution(0);
      v122 = *(int *)(v121 + 20);
      v123 = a1 + v122;
      v124 = a2 + v122;
      v125 = sub_23FB2C764();
      v126 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 16);
      v126(v123, v124, v125);
      v126(a1 + *(int *)(v121 + 24), a2 + *(int *)(v121 + 24), v125);
      goto LABEL_136;
    case 0x26u:
      v127 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v127;
      v128 = (int *)type metadata accessor for UndoRedoRequest(0);
      v129 = v128[5];
      v130 = (void *)(a1 + v129);
      v131 = (const void *)(a2 + v129);
      v132 = sub_23FB2C4B8();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v131, 1, v132))
      {
        v133 = sub_23F6916B8(&qword_256EA2798);
        memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(v130, v131, v132);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v130, 0, 1, v132);
      }
      *(_BYTE *)(a1 + v128[6]) = *(_BYTE *)(a2 + v128[6]);
      v242 = v128[7];
      v243 = a1 + v242;
      v244 = a2 + v242;
      v245 = sub_23FB2C764();
      v246 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v245 - 8) + 16);
      v246(v243, v244, v245);
      v247 = v128[8];
      v248 = (void *)(a1 + v247);
      v249 = (const void *)(a2 + v247);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v249, 1, v245))
      {
        v250 = sub_23F6916B8(&qword_256EA49D8);
        memcpy(v248, v249, *(_QWORD *)(*(_QWORD *)(v250 - 8) + 64));
      }
      else
      {
        v246((uint64_t)v248, (uint64_t)v249, v245);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v248, 0, 1, v245);
      }
      goto LABEL_136;
    case 0x27u:
      v134 = sub_23FB2C4B8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(a1, a2, v134);
      v135 = (int *)type metadata accessor for ClientUndoRedoRequest(0);
      *(_BYTE *)(a1 + v135[5]) = *(_BYTE *)(a2 + v135[5]);
      v136 = v135[6];
      v137 = a1 + v136;
      v138 = a2 + v136;
      v139 = sub_23FB2C764();
      v140 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v139 - 8) + 16);
      v140(v137, v138, v139);
      v141 = v135[7];
      v142 = (void *)(a1 + v141);
      v143 = (const void *)(a2 + v141);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v143, 1, v139))
      {
        v144 = sub_23F6916B8(&qword_256EA49D8);
        memcpy(v142, v143, *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64));
      }
      else
      {
        v140((uint64_t)v142, (uint64_t)v143, v139);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v142, 0, 1, v139);
      }
      goto LABEL_136;
    case 0x28u:
      v145 = sub_23FB2ED38();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v145 - 8) + 16))(a1, a2, v145);
      v146 = type metadata accessor for TypeConversionRequest(0);
      v147 = *(int *)(v146 + 20);
      v148 = a1 + v147;
      v149 = a2 + v147;
      v150 = sub_23FB2ED5C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v150 - 8) + 16))(v148, v149, v150);
      v151 = *(int *)(v146 + 24);
      v152 = a1 + v151;
      v153 = a2 + v151;
      v154 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v154 - 8) + 16))(v152, v153, v154);
      goto LABEL_136;
    case 0x29u:
      v155 = sub_23FB2ED38();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v155 - 8) + 16))(a1, a2, v155);
      v156 = type metadata accessor for TypeConversionResult(0);
      v157 = *(int *)(v156 + 20);
      v158 = a1 + v157;
      v159 = a2 + v157;
      v160 = sub_23FB2C764();
      v161 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v160 - 8) + 16);
      v161(v158, v159, v160);
      v161(a1 + *(int *)(v156 + 24), a2 + *(int *)(v156 + 24), v160);
      goto LABEL_136;
    case 0x2Au:
      v162 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v162;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      DecorationResult = type metadata accessor for QueryDecorationResult(0);
      v164 = *(int *)(DecorationResult + 28);
      v165 = (void *)(a1 + v164);
      v166 = (const void *)(a2 + v164);
      v167 = sub_23FB2E354();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v166, 1, v167))
      {
        v168 = sub_23F6916B8(&qword_256EA71F8);
        memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v167 - 8) + 16))(v165, v166, v167);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v165, 0, 1, v167);
      }
      *(_QWORD *)(a1 + *(int *)(DecorationResult + 32)) = *(_QWORD *)(a2 + *(int *)(DecorationResult + 32));
      swift_bridgeObjectRetain();
      goto LABEL_136;
    case 0x2Cu:
      v196 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v196 - 8) + 16))(a1, a2, v196);
      DecorationPrePlannerResult = type metadata accessor for QueryDecorationPrePlannerResult(0);
      v198 = *(int *)(DecorationPrePlannerResult + 20);
      v199 = (_QWORD *)(a1 + v198);
      v200 = (uint64_t *)(a2 + v198);
      v202 = *v200;
      v201 = v200[1];
      *v199 = v202;
      v199[1] = v201;
      v203 = *(int *)(DecorationPrePlannerResult + 24);
      v204 = a1 + v203;
      v205 = (uint64_t *)(a2 + v203);
      v206 = *v205;
      LOBYTE(v205) = *((_BYTE *)v205 + 8);
      *(_QWORD *)v204 = v206;
      *(_BYTE *)(v204 + 8) = (_BYTE)v205;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_136;
    default:
      memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
  }
}

uint64_t assignWithCopy for Session.Event.Payload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  int EnumCaseMultiPayload;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  int *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t Step;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t StepResults;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  const void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(uint64_t, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(uint64_t, uint64_t, uint64_t);
  int *v101;
  uint64_t v102;
  void *v103;
  const void *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(uint64_t, uint64_t, uint64_t);
  uint64_t v114;
  void *v115;
  const void *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  void (*v134)(uint64_t, uint64_t, uint64_t);
  uint64_t DecorationResult;
  uint64_t v136;
  void *v137;
  const void *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  int *v144;
  uint64_t v145;
  _QWORD *v146;
  _QWORD *v147;
  uint64_t v148;
  uint64_t v149;
  void *v150;
  const void *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t DecorationPrePlannerResult;
  uint64_t v162;
  _QWORD *v163;
  _QWORD *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t *v167;
  uint64_t v168;
  uint64_t v169;
  int *v170;
  uint64_t v171;
  _QWORD *v172;
  _QWORD *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  void (*v178)(uint64_t, uint64_t, uint64_t);
  uint64_t v179;
  void *v180;
  const void *v181;
  uint64_t v182;
  uint64_t v183;
  int *v184;
  uint64_t v185;
  _QWORD *v186;
  _QWORD *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  void (*v192)(uint64_t, uint64_t, uint64_t);
  uint64_t v193;
  void *v194;
  const void *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  __int128 *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  void (*v205)(uint64_t, uint64_t, uint64_t);
  uint64_t v206;
  void *v207;
  const void *v208;
  uint64_t v209;
  uint64_t v210;
  _QWORD *v211;
  _QWORD *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  void (*v217)(uint64_t, uint64_t, uint64_t);
  __int128 v218;
  int *v219;
  uint64_t v220;
  void *v221;
  const void *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  void (*v229)(uint64_t, uint64_t, uint64_t);
  uint64_t v230;
  _QWORD *v231;
  _QWORD *v232;
  uint64_t v233;
  int v234;
  uint64_t v235;
  char *v236;
  char *v237;
  uint64_t v238;
  __int128 v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  int *v244;
  uint64_t v245;
  void *v246;
  const void *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  void (*v254)(uint64_t, uint64_t, uint64_t);
  uint64_t v255;
  _QWORD *v256;
  _QWORD *v257;
  uint64_t v258;
  int v259;
  uint64_t v260;
  char *v261;
  int *v262;
  uint64_t v263;
  void *v264;
  const void *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  void (*v272)(uint64_t, uint64_t, uint64_t);
  uint64_t v273;
  _QWORD *v274;
  _QWORD *v275;
  uint64_t v276;
  int v277;
  uint64_t v278;
  char *v279;
  int *v280;
  uint64_t v281;
  uint64_t v282;
  __int128 *v283;
  unsigned int v284;
  __int128 v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  void *v289;
  const void *v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  __int128 v294;
  uint64_t v295;
  uint64_t v296;
  void *v297;
  const void *v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  __int128 v302;
  uint64_t result;
  char *v304;
  char *v305;

  if (a1 != a2)
  {
    sub_23F83A7D4(a1, type metadata accessor for Session.Event.Payload);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = sub_23FB2C998();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        v7 = type metadata accessor for SessionStart(0);
        v8 = *(int *)(v7 + 20);
        v9 = a1 + v8;
        v10 = a2 + v8;
        v11 = sub_23FB2C908();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
        *(_BYTE *)(a1 + *(int *)(v7 + 24)) = *(_BYTE *)(a2 + *(int *)(v7 + 24));
        goto LABEL_137;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
        v12 = type metadata accessor for TextQuery(0);
        v13 = *(int *)(v12 + 24);
        v14 = a1 + v13;
        v15 = a2 + v13;
        v16 = sub_23FB2C764();
        v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
        swift_bridgeObjectRetain();
        v17(v14, v15, v16);
        v18 = *(int *)(v12 + 28);
        v19 = (_QWORD *)(a1 + v18);
        v20 = (_QWORD *)(a2 + v18);
        *v19 = *v20;
        v19[1] = v20[1];
        swift_bridgeObjectRetain();
        goto LABEL_137;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_137;
      case 3u:
        v21 = type metadata accessor for RequestContent(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 3)
        {
          if (EnumCaseMultiPayload == 2)
          {
            *(_QWORD *)a1 = *(_QWORD *)a2;
            swift_bridgeObjectRetain();
          }
          else
          {
            if (EnumCaseMultiPayload != 1)
            {
              memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
              goto LABEL_119;
            }
            *(_QWORD *)a1 = *(_QWORD *)a2;
            *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
            v23 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
            v24 = a1 + v23;
            v25 = a2 + v23;
            v26 = sub_23FB2C764();
            v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
            swift_bridgeObjectRetain();
            v27(v24, v25, v26);
          }
LABEL_118:
          swift_storeEnumTagMultiPayload();
LABEL_119:
          v280 = (int *)type metadata accessor for Request(0);
          *(_BYTE *)(a1 + v280[5]) = *(_BYTE *)(a2 + v280[5]);
          v281 = v280[6];
          v282 = a1 + v281;
          v283 = (__int128 *)(a2 + v281);
          v284 = *((unsigned __int8 *)v283 + 16);
          if (v284 <= 0xFD)
          {
            v286 = *(_QWORD *)v283;
            v287 = *((_QWORD *)v283 + 1);
            sub_23F73515C(*(_QWORD *)v283, v287, *((_BYTE *)v283 + 16));
            *(_QWORD *)v282 = v286;
            *(_QWORD *)(v282 + 8) = v287;
            *(_BYTE *)(v282 + 16) = v284;
          }
          else
          {
            v285 = *v283;
            *(_BYTE *)(v282 + 16) = *((_BYTE *)v283 + 16);
            *(_OWORD *)v282 = v285;
          }
          v288 = v280[7];
          v289 = (void *)(a1 + v288);
          v290 = (const void *)(a2 + v288);
          v291 = sub_23FB2C4B8();
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v290, 1, v291))
          {
            v292 = sub_23F6916B8(&qword_256EA2798);
            memcpy(v289, v290, *(_QWORD *)(*(_QWORD *)(v292 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v291 - 8) + 16))(v289, v290, v291);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v289, 0, 1, v291);
          }
          v293 = v280[8];
          v199 = a1 + v293;
          v200 = (__int128 *)(a2 + v293);
          if (!*((_QWORD *)v200 + 1))
          {
            v294 = *v200;
            *(_QWORD *)(v199 + 16) = *((_QWORD *)v200 + 2);
            *(_OWORD *)v199 = v294;
            goto LABEL_137;
          }
          goto LABEL_126;
        }
        v240 = sub_23FB2C4B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2, 1, v240))
        {
          v241 = sub_23F6916B8(&qword_256EA2798);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v241 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v240 - 8) + 16))(a1, a2, v240);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v240);
        }
        v244 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v240 - 8) + 16))(a1 + v244[5], a2 + v244[5], v240);
        v245 = v244[6];
        v246 = (void *)(a1 + v245);
        v247 = (const void *)(a2 + v245);
        v248 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v249 = sub_23FB2ED38();
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v249 - 8) + 16))(v246, v247, v249);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v246, v247, *(_QWORD *)(*(_QWORD *)(v248 - 8) + 64));
        }
        v250 = v244[7];
        v251 = a1 + v250;
        v252 = a2 + v250;
        v253 = sub_23FB2C764();
        v254 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v253 - 8) + 16);
        v254(v251, v252, v253);
        v255 = v244[8];
        v256 = (_QWORD *)(a1 + v255);
        v257 = (_QWORD *)(a2 + v255);
        v258 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
        v259 = swift_getEnumCaseMultiPayload();
        if (v259 == 1)
        {
          *v256 = *v257;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v259)
          {
            memcpy(v256, v257, *(_QWORD *)(*(_QWORD *)(v258 - 8) + 64));
            goto LABEL_118;
          }
          *v256 = *v257;
          v256[1] = v257[1];
          v260 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
          v304 = (char *)v256 + v260;
          v261 = (char *)v257 + v260;
          swift_bridgeObjectRetain();
          v254((uint64_t)v304, (uint64_t)v261, v253);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_118;
      case 4u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_137;
      case 5u:
        v28 = sub_23FB2C764();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(a1, a2, v28);
        v29 = (int *)type metadata accessor for Action(0);
        v30 = v29[5];
        v31 = (_QWORD *)(a1 + v30);
        v32 = (_QWORD *)(a2 + v30);
        *v31 = *v32;
        v31[1] = v32[1];
        v33 = v29[6];
        v34 = (_QWORD *)(a1 + v33);
        v35 = (_QWORD *)(a2 + v33);
        *v34 = *v35;
        v34[1] = v35[1];
        v36 = v29[7];
        v37 = (_QWORD *)(a1 + v36);
        v38 = (_QWORD *)(a2 + v36);
        *v37 = *v38;
        v37[1] = v38[1];
        *(_BYTE *)(a1 + v29[8]) = *(_BYTE *)(a2 + v29[8]);
        *(_QWORD *)(a1 + v29[9]) = *(_QWORD *)(a2 + v29[9]);
        v39 = v29[10];
        v40 = (_QWORD *)(a1 + v39);
        v41 = (_QWORD *)(a2 + v39);
        *v40 = *v41;
        v40[1] = v41[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_137;
      case 6u:
        v42 = sub_23FB2C764();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2, 1, v42))
        {
          v43 = sub_23F6916B8(&qword_256EA49D8);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(a1, a2, v42);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v42);
        }
        v169 = type metadata accessor for ActionCancellation(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(a1 + *(int *)(v169 + 20), a2 + *(int *)(v169 + 20), v42);
        goto LABEL_137;
      case 7u:
        v44 = sub_23FB2C764();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(a1, a2, v44);
        v45 = (int *)type metadata accessor for ClientAction(0);
        v46 = v45[5];
        v47 = (_QWORD *)(a1 + v46);
        v48 = (_QWORD *)(a2 + v46);
        *v47 = *v48;
        v47[1] = v48[1];
        *(_QWORD *)(a1 + v45[6]) = *(_QWORD *)(a2 + v45[6]);
        v49 = v45[7];
        v50 = (_QWORD *)(a1 + v49);
        v51 = (_QWORD *)(a2 + v49);
        *v50 = *v51;
        v50[1] = v51[1];
        v52 = v45[8];
        v53 = (_QWORD *)(a1 + v52);
        v54 = (_QWORD *)(a2 + v52);
        *v53 = *v54;
        v53[1] = v54[1];
        *(_QWORD *)(a1 + v45[9]) = *(_QWORD *)(a2 + v45[9]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_137;
      case 8u:
        v55 = sub_23FB2C764();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(a1, a2, v55);
        Step = type metadata accessor for QueryStep(0);
        *(_QWORD *)(a1 + *(int *)(Step + 20)) = *(_QWORD *)(a2 + *(int *)(Step + 20));
        swift_bridgeObjectRetain();
        goto LABEL_137;
      case 9u:
        v57 = sub_23FB2C764();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(a1, a2, v57);
        v58 = type metadata accessor for VariableStep(0);
        *(_QWORD *)(a1 + *(int *)(v58 + 20)) = *(_QWORD *)(a2 + *(int *)(v58 + 20));
        swift_bridgeObjectRetain();
        goto LABEL_137;
      case 0xAu:
      case 0x15u:
      case 0x1Du:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        swift_bridgeObjectRetain();
        goto LABEL_137;
      case 0xBu:
      case 0x17u:
      case 0x18u:
      case 0x1Au:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_137;
      case 0xCu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_137;
      case 0xDu:
        type metadata accessor for SessionError();
        v59 = (char *)&loc_23F8515CC + 4 * word_23FB637D0[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0xEu:
        v60 = *(_QWORD *)a2;
        v61 = *(_QWORD *)(a2 + 8);
        sub_23F6D1E20(*(_QWORD *)a2, v61);
        *(_QWORD *)a1 = v60;
        *(_QWORD *)(a1 + 8) = v61;
        v62 = *(_QWORD *)(a2 + 16);
        v63 = *(_QWORD *)(a2 + 24);
        sub_23F6D1E20(v62, v63);
        *(_QWORD *)(a1 + 16) = v62;
        *(_QWORD *)(a1 + 24) = v63;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        swift_bridgeObjectRetain();
        goto LABEL_137;
      case 0xFu:
        v64 = sub_23FB2C77C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(a1, a2, v64);
        goto LABEL_137;
      case 0x10u:
        v141 = sub_23FB2C4B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2, 1, v141))
        {
          v142 = sub_23F6916B8(&qword_256EA2798);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v141 - 8) + 16))(a1, a2, v141);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v141);
        }
        v219 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v141 - 8) + 16))(a1 + v219[5], a2 + v219[5], v141);
        v220 = v219[6];
        v221 = (void *)(a1 + v220);
        v222 = (const void *)(a2 + v220);
        v223 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v224 = sub_23FB2ED38();
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v224 - 8) + 16))(v221, v222, v224);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v221, v222, *(_QWORD *)(*(_QWORD *)(v223 - 8) + 64));
        }
        v225 = v219[7];
        v226 = a1 + v225;
        v227 = a2 + v225;
        v228 = sub_23FB2C764();
        v229 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v228 - 8) + 16);
        v229(v226, v227, v228);
        v230 = v219[8];
        v231 = (_QWORD *)(a1 + v230);
        v232 = (_QWORD *)(a2 + v230);
        v233 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
        v234 = swift_getEnumCaseMultiPayload();
        if (v234 == 1)
        {
          *v231 = *v232;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v234)
          {
            memcpy(v231, v232, *(_QWORD *)(*(_QWORD *)(v233 - 8) + 64));
LABEL_137:
            swift_storeEnumTagMultiPayload();
            return a1;
          }
          *v231 = *v232;
          v231[1] = v232[1];
          v235 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
          v236 = (char *)v231 + v235;
          v237 = (char *)v232 + v235;
          swift_bridgeObjectRetain();
          v229((uint64_t)v236, (uint64_t)v237, v228);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_137;
      case 0x11u:
        v65 = sub_23FB2C4B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2, 1, v65))
        {
          v66 = sub_23F6916B8(&qword_256EA2798);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(a1, a2, v65);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v65);
        }
        v170 = (int *)type metadata accessor for ActionStepResult(0);
        v171 = v170[5];
        v172 = (_QWORD *)(a1 + v171);
        v173 = (_QWORD *)(a2 + v171);
        *v172 = *v173;
        v172[1] = v173[1];
        v174 = v170[6];
        v175 = a1 + v174;
        v176 = a2 + v174;
        v177 = sub_23FB2C80C();
        v178 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v177 - 8) + 16);
        swift_bridgeObjectRetain();
        v178(v175, v176, v177);
        v179 = *(int *)(type metadata accessor for ActionResult(0) + 20);
        v180 = (void *)(v175 + v179);
        v181 = (const void *)(v176 + v179);
        v182 = sub_23FB2D0B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v181, 1, v182))
        {
          v183 = sub_23F6916B8(&qword_256EA2780);
          memcpy(v180, v181, *(_QWORD *)(*(_QWORD *)(v183 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v180, v181, v182);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v180, 0, 1, v182);
        }
        v210 = v170[7];
        v211 = (_QWORD *)(a1 + v210);
        v212 = (_QWORD *)(a2 + v210);
        *v211 = *v212;
        v211[1] = v212[1];
        swift_bridgeObjectRetain();
        goto LABEL_137;
      case 0x12u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        StepResults = type metadata accessor for QueryStepResults(0);
        v68 = *(int *)(StepResults + 20);
        v69 = a1 + v68;
        v70 = a2 + v68;
        v71 = sub_23FB2C764();
        v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 16);
        swift_bridgeObjectRetain();
        v72(v69, v70, v71);
        v73 = *(int *)(StepResults + 24);
        v74 = a1 + v73;
        v75 = a2 + v73;
        v76 = sub_23FB2C4B8();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v74, v75, v76);
        goto LABEL_137;
      case 0x13u:
        v77 = sub_23FB2C938();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 16))(a1, a2, v77);
        goto LABEL_137;
      case 0x14u:
        v143 = sub_23FB2C764();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v143 - 8) + 16))(a1, a2, v143);
        v144 = (int *)type metadata accessor for ActionResolverRequest(0);
        v145 = v144[5];
        v146 = (_QWORD *)(a1 + v145);
        v147 = (_QWORD *)(a2 + v145);
        *v146 = *v147;
        v146[1] = v147[1];
        *(_QWORD *)(a1 + v144[6]) = *(_QWORD *)(a2 + v144[6]);
        *(_QWORD *)(a1 + v144[7]) = *(_QWORD *)(a2 + v144[7]);
        *(_QWORD *)(a1 + v144[8]) = *(_QWORD *)(a2 + v144[8]);
        *(_BYTE *)(a1 + v144[9]) = *(_BYTE *)(a2 + v144[9]);
        *(_BYTE *)(a1 + v144[10]) = *(_BYTE *)(a2 + v144[10]);
        *(_BYTE *)(a1 + v144[11]) = *(_BYTE *)(a2 + v144[11]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_137;
      case 0x16u:
      case 0x24u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_137;
      case 0x1Bu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_137;
      case 0x1Cu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
        *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_137;
      case 0x1Eu:
        v78 = sub_23FB2D004();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(a1, a2, v78);
        goto LABEL_137;
      case 0x1Fu:
        v79 = sub_23FB2C4B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2, 1, v79))
        {
          v80 = sub_23F6916B8(&qword_256EA2798);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(a1, a2, v79);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v79);
        }
        v184 = (int *)type metadata accessor for StatementResult(0);
        v185 = v184[5];
        v186 = (_QWORD *)(a1 + v185);
        v187 = (_QWORD *)(a2 + v185);
        *v186 = *v187;
        v186[1] = v187[1];
        v188 = v184[6];
        v189 = a1 + v188;
        v190 = a2 + v188;
        v191 = sub_23FB2D0DC();
        v192 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v191 - 8) + 16);
        swift_bridgeObjectRetain();
        v192(v189, v190, v191);
        v193 = *(int *)(type metadata accessor for StatementResultPayload(0) + 20);
        v194 = (void *)(v189 + v193);
        v195 = (const void *)(v190 + v193);
        v196 = sub_23FB2D0B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v195, 1, v196))
        {
          v197 = sub_23F6916B8(&qword_256EA2780);
          memcpy(v194, v195, *(_QWORD *)(*(_QWORD *)(v197 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v196 - 8) + 16))(v194, v195, v196);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v194, 0, 1, v196);
        }
        v213 = v184[7];
        v214 = a1 + v213;
        v215 = a2 + v213;
        v216 = sub_23FB2C764();
        v217 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v216 - 8) + 16);
        v217(v214, v215, v216);
        v217(a1 + v184[8], a2 + v184[8], v216);
        v217(a1 + v184[9], a2 + v184[9], v216);
        goto LABEL_137;
      case 0x20u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        v81 = type metadata accessor for ExternalAgentTextQuery(0);
        v82 = *(int *)(v81 + 20);
        v83 = (void *)(a1 + v82);
        v84 = (const void *)(a2 + v82);
        v85 = sub_23FB2C4B8();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v84, 1, v85))
        {
          v86 = sub_23F6916B8(&qword_256EA2798);
          memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v85 - 8) + 16))(v83, v84, v85);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v83, 0, 1, v85);
        }
        v198 = *(int *)(v81 + 24);
        v199 = a1 + v198;
        v200 = (__int128 *)(a2 + v198);
        if (*((_QWORD *)v200 + 1))
          goto LABEL_126;
        v218 = *v200;
        *(_QWORD *)(v199 + 16) = *((_QWORD *)v200 + 2);
        *(_OWORD *)v199 = v218;
        goto LABEL_137;
      case 0x21u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v148 = type metadata accessor for ExternalAgentSpeechQuery(0);
        v149 = *(int *)(v148 + 20);
        v150 = (void *)(a1 + v149);
        v151 = (const void *)(a2 + v149);
        v152 = sub_23FB2C4B8();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v151, 1, v152))
        {
          v153 = sub_23F6916B8(&qword_256EA2798);
          memcpy(v150, v151, *(_QWORD *)(*(_QWORD *)(v153 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v152 - 8) + 16))(v150, v151, v152);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v150, 0, 1, v152);
        }
        v238 = *(int *)(v148 + 24);
        v199 = a1 + v238;
        v200 = (__int128 *)(a2 + v238);
        if (*((_QWORD *)v200 + 1))
          goto LABEL_126;
        v239 = *v200;
        *(_QWORD *)(v199 + 16) = *((_QWORD *)v200 + 2);
        *(_OWORD *)v199 = v239;
        goto LABEL_137;
      case 0x22u:
        v87 = type metadata accessor for RequestContent(0);
        v88 = swift_getEnumCaseMultiPayload();
        if (v88 != 3)
        {
          if (v88 == 2)
          {
            *(_QWORD *)a1 = *(_QWORD *)a2;
            swift_bridgeObjectRetain();
          }
          else
          {
            if (v88 != 1)
            {
              memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
              goto LABEL_132;
            }
            *(_QWORD *)a1 = *(_QWORD *)a2;
            *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
            v89 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
            v90 = a1 + v89;
            v91 = a2 + v89;
            v92 = sub_23FB2C764();
            v93 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 16);
            swift_bridgeObjectRetain();
            v93(v90, v91, v92);
          }
LABEL_131:
          swift_storeEnumTagMultiPayload();
LABEL_132:
          v295 = type metadata accessor for ExternalAgentRequest(0);
          v296 = *(int *)(v295 + 20);
          v297 = (void *)(a1 + v296);
          v298 = (const void *)(a2 + v296);
          v299 = sub_23FB2C4B8();
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v298, 1, v299))
          {
            v300 = sub_23F6916B8(&qword_256EA2798);
            memcpy(v297, v298, *(_QWORD *)(*(_QWORD *)(v300 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v299 - 8) + 16))(v297, v298, v299);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v297, 0, 1, v299);
          }
          v301 = *(int *)(v295 + 24);
          v199 = a1 + v301;
          v200 = (__int128 *)(a2 + v301);
          if (!*((_QWORD *)v200 + 1))
          {
            v302 = *v200;
            *(_QWORD *)(v199 + 16) = *((_QWORD *)v200 + 2);
            *(_OWORD *)v199 = v302;
            goto LABEL_137;
          }
LABEL_126:
          *(_QWORD *)v199 = *(_QWORD *)v200;
          *(_QWORD *)(v199 + 8) = *((_QWORD *)v200 + 1);
          *(_QWORD *)(v199 + 16) = *((_QWORD *)v200 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_137;
        }
        v242 = sub_23FB2C4B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2, 1, v242))
        {
          v243 = sub_23F6916B8(&qword_256EA2798);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v243 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v242 - 8) + 16))(a1, a2, v242);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v242);
        }
        v262 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v242 - 8) + 16))(a1 + v262[5], a2 + v262[5], v242);
        v263 = v262[6];
        v264 = (void *)(a1 + v263);
        v265 = (const void *)(a2 + v263);
        v266 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v267 = sub_23FB2ED38();
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v267 - 8) + 16))(v264, v265, v267);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v264, v265, *(_QWORD *)(*(_QWORD *)(v266 - 8) + 64));
        }
        v268 = v262[7];
        v269 = a1 + v268;
        v270 = a2 + v268;
        v271 = sub_23FB2C764();
        v272 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v271 - 8) + 16);
        v272(v269, v270, v271);
        v273 = v262[8];
        v274 = (_QWORD *)(a1 + v273);
        v275 = (_QWORD *)(a2 + v273);
        v276 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
        v277 = swift_getEnumCaseMultiPayload();
        if (v277 == 1)
        {
          *v274 = *v275;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v277)
          {
            memcpy(v274, v275, *(_QWORD *)(*(_QWORD *)(v276 - 8) + 64));
            goto LABEL_131;
          }
          *v274 = *v275;
          v274[1] = v275[1];
          v278 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
          v305 = (char *)v274 + v278;
          v279 = (char *)v275 + v278;
          swift_bridgeObjectRetain();
          v272((uint64_t)v305, (uint64_t)v279, v271);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_131;
      case 0x23u:
        v154 = sub_23FB2C764();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v154 - 8) + 16))(a1, a2, v154);
        v155 = type metadata accessor for ExternalAgentOutcome(0);
        v156 = *(int *)(v155 + 20);
        v157 = a1 + v156;
        v158 = a2 + v156;
        v159 = sub_23FB2D0DC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v159 - 8) + 16))(v157, v158, v159);
        *(_QWORD *)(a1 + *(int *)(v155 + 24)) = *(_QWORD *)(a2 + *(int *)(v155 + 24));
        swift_bridgeObjectRetain();
        goto LABEL_137;
      case 0x25u:
        v94 = sub_23FB2E8D0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(a1, a2, v94);
        v95 = type metadata accessor for ToolResolution(0);
        v96 = *(int *)(v95 + 20);
        v97 = a1 + v96;
        v98 = a2 + v96;
        v99 = sub_23FB2C764();
        v100 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 16);
        v100(v97, v98, v99);
        v100(a1 + *(int *)(v95 + 24), a2 + *(int *)(v95 + 24), v99);
        goto LABEL_137;
      case 0x26u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        v101 = (int *)type metadata accessor for UndoRedoRequest(0);
        v102 = v101[5];
        v103 = (void *)(a1 + v102);
        v104 = (const void *)(a2 + v102);
        v105 = sub_23FB2C4B8();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v104, 1, v105))
        {
          v106 = sub_23F6916B8(&qword_256EA2798);
          memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v105 - 8) + 16))(v103, v104, v105);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v103, 0, 1, v105);
        }
        *(_BYTE *)(a1 + v101[6]) = *(_BYTE *)(a2 + v101[6]);
        v201 = v101[7];
        v202 = a1 + v201;
        v203 = a2 + v201;
        v204 = sub_23FB2C764();
        v205 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v204 - 8) + 16);
        v205(v202, v203, v204);
        v206 = v101[8];
        v207 = (void *)(a1 + v206);
        v208 = (const void *)(a2 + v206);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v208, 1, v204))
        {
          v209 = sub_23F6916B8(&qword_256EA49D8);
          memcpy(v207, v208, *(_QWORD *)(*(_QWORD *)(v209 - 8) + 64));
        }
        else
        {
          v205((uint64_t)v207, (uint64_t)v208, v204);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v207, 0, 1, v204);
        }
        goto LABEL_137;
      case 0x27u:
        v107 = sub_23FB2C4B8();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 16))(a1, a2, v107);
        v108 = (int *)type metadata accessor for ClientUndoRedoRequest(0);
        *(_BYTE *)(a1 + v108[5]) = *(_BYTE *)(a2 + v108[5]);
        v109 = v108[6];
        v110 = a1 + v109;
        v111 = a2 + v109;
        v112 = sub_23FB2C764();
        v113 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 16);
        v113(v110, v111, v112);
        v114 = v108[7];
        v115 = (void *)(a1 + v114);
        v116 = (const void *)(a2 + v114);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v116, 1, v112))
        {
          v117 = sub_23F6916B8(&qword_256EA49D8);
          memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
        }
        else
        {
          v113((uint64_t)v115, (uint64_t)v116, v112);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v115, 0, 1, v112);
        }
        goto LABEL_137;
      case 0x28u:
        v118 = sub_23FB2ED38();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 16))(a1, a2, v118);
        v119 = type metadata accessor for TypeConversionRequest(0);
        v120 = *(int *)(v119 + 20);
        v121 = a1 + v120;
        v122 = a2 + v120;
        v123 = sub_23FB2ED5C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v123 - 8) + 16))(v121, v122, v123);
        v124 = *(int *)(v119 + 24);
        v125 = a1 + v124;
        v126 = a2 + v124;
        v127 = sub_23FB2C764();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v127 - 8) + 16))(v125, v126, v127);
        goto LABEL_137;
      case 0x29u:
        v128 = sub_23FB2ED38();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(a1, a2, v128);
        v129 = type metadata accessor for TypeConversionResult(0);
        v130 = *(int *)(v129 + 20);
        v131 = a1 + v130;
        v132 = a2 + v130;
        v133 = sub_23FB2C764();
        v134 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v133 - 8) + 16);
        v134(v131, v132, v133);
        v134(a1 + *(int *)(v129 + 24), a2 + *(int *)(v129 + 24), v133);
        goto LABEL_137;
      case 0x2Au:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        DecorationResult = type metadata accessor for QueryDecorationResult(0);
        v136 = *(int *)(DecorationResult + 28);
        v137 = (void *)(a1 + v136);
        v138 = (const void *)(a2 + v136);
        v139 = sub_23FB2E354();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v138, 1, v139))
        {
          v140 = sub_23F6916B8(&qword_256EA71F8);
          memcpy(v137, v138, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v139 - 8) + 16))(v137, v138, v139);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v137, 0, 1, v139);
        }
        *(_QWORD *)(a1 + *(int *)(DecorationResult + 32)) = *(_QWORD *)(a2 + *(int *)(DecorationResult + 32));
        swift_bridgeObjectRetain();
        goto LABEL_137;
      case 0x2Cu:
        v160 = sub_23FB2C764();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v160 - 8) + 16))(a1, a2, v160);
        DecorationPrePlannerResult = type metadata accessor for QueryDecorationPrePlannerResult(0);
        v162 = *(int *)(DecorationPrePlannerResult + 20);
        v163 = (_QWORD *)(a1 + v162);
        v164 = (_QWORD *)(a2 + v162);
        *v163 = *v164;
        v163[1] = v164[1];
        v165 = *(int *)(DecorationPrePlannerResult + 24);
        v166 = a1 + v165;
        v167 = (uint64_t *)(a2 + v165);
        v168 = *v167;
        LOBYTE(v167) = *((_BYTE *)v167 + 8);
        *(_QWORD *)v166 = v168;
        *(_BYTE *)(v166 + 8) = (_BYTE)v167;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_137;
      default:
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

_QWORD *initializeWithTake for Session.Event.Payload(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t Step;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t StepResults;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  int *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  void (*v88)(char *, char *, uint64_t);
  uint64_t v89;
  int EnumCaseMultiPayload;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  int *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t DecorationResult;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t DecorationPrePlannerResult;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  int *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  void (*v148)(char *, char *, uint64_t);
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  int *v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  void (*v163)(char *, char *, uint64_t);
  uint64_t v164;
  _OWORD *v165;
  _OWORD *v166;
  uint64_t v167;
  int *v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  void (*v186)(char *, char *, uint64_t);
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  int *v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  void (*v201)(char *, char *, uint64_t);
  uint64_t v202;
  _OWORD *v203;
  _OWORD *v204;
  uint64_t v205;
  int *v206;
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  char *v214;
  uint64_t v215;
  void (*v216)(char *, char *, uint64_t);
  uint64_t v217;
  _OWORD *v218;
  _OWORD *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  char *v230;
  uint64_t v231;
  int *v232;
  uint64_t v233;
  char *v234;
  char *v235;
  uint64_t v236;
  char *v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  char *v243;
  _QWORD *result;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = sub_23FB2C998();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = type metadata accessor for SessionStart(0);
      v8 = *(int *)(v7 + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_23FB2C908();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      *((_BYTE *)a1 + *(int *)(v7 + 24)) = *((_BYTE *)a2 + *(int *)(v7 + 24));
      goto LABEL_107;
    case 1u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      v12 = type metadata accessor for TextQuery(0);
      v13 = *(int *)(v12 + 24);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_23FB2C764();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      *(_OWORD *)((char *)a1 + *(int *)(v12 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(v12 + 28));
      goto LABEL_107;
    case 3u:
      v89 = type metadata accessor for RequestContent(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 3)
      {
        v189 = sub_23FB2C4B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v189))
        {
          v190 = sub_23F6916B8(&qword_256EA2798);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v190 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v189 - 8) + 32))(a1, a2, v189);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v189);
        }
        v206 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 32))((char *)a1 + v206[5], (char *)a2 + v206[5], v189);
        v207 = v206[6];
        v208 = (char *)a1 + v207;
        v209 = (char *)a2 + v207;
        v210 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v211 = sub_23FB2ED38();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v211 - 8) + 32))(v208, v209, v211);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v208, v209, *(_QWORD *)(*(_QWORD *)(v210 - 8) + 64));
        }
        v212 = v206[7];
        v213 = (char *)a1 + v212;
        v214 = (char *)a2 + v212;
        v215 = sub_23FB2C764();
        v216 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v215 - 8) + 32);
        v216(v213, v214, v215);
        v217 = v206[8];
        v218 = (_OWORD *)((char *)a1 + v217);
        v219 = (_OWORD *)((char *)a2 + v217);
        v220 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v218, v219, *(_QWORD *)(*(_QWORD *)(v220 - 8) + 64));
        }
        else
        {
          *v218 = *v219;
          v231 = type metadata accessor for RequestContent.TextContent(0);
          v216((char *)v218 + *(int *)(v231 + 20), (char *)v219 + *(int *)(v231 + 20), v215);
          swift_storeEnumTagMultiPayload();
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
          goto LABEL_103;
        }
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v91 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
        v92 = (char *)a1 + v91;
        v93 = (char *)a2 + v91;
        v94 = sub_23FB2C764();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v92, v93, v94);
      }
      swift_storeEnumTagMultiPayload();
LABEL_103:
      v232 = (int *)type metadata accessor for Request(0);
      *((_BYTE *)a1 + v232[5]) = *((_BYTE *)a2 + v232[5]);
      v233 = v232[6];
      v234 = (char *)a1 + v233;
      v235 = (char *)a2 + v233;
      v234[16] = v235[16];
      *(_OWORD *)v234 = *(_OWORD *)v235;
      v236 = v232[7];
      v237 = (char *)a1 + v236;
      v238 = (char *)a2 + v236;
      v239 = sub_23FB2C4B8();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v238, 1, v239))
      {
        v240 = sub_23F6916B8(&qword_256EA2798);
        memcpy(v237, v238, *(_QWORD *)(*(_QWORD *)(v240 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v239 - 8) + 32))(v237, v238, v239);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v237, 0, 1, v239);
      }
      v241 = v232[8];
      v242 = (char *)a1 + v241;
      v243 = (char *)a2 + v241;
      *(_OWORD *)v242 = *(_OWORD *)v243;
      *((_QWORD *)v242 + 2) = *((_QWORD *)v243 + 2);
      goto LABEL_107;
    case 5u:
      v17 = sub_23FB2C764();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, a2, v17);
      v18 = (int *)type metadata accessor for Action(0);
      *(_OWORD *)((char *)a1 + v18[5]) = *(_OWORD *)((char *)a2 + v18[5]);
      *(_OWORD *)((char *)a1 + v18[6]) = *(_OWORD *)((char *)a2 + v18[6]);
      *(_OWORD *)((char *)a1 + v18[7]) = *(_OWORD *)((char *)a2 + v18[7]);
      *((_BYTE *)a1 + v18[8]) = *((_BYTE *)a2 + v18[8]);
      *(_QWORD *)((char *)a1 + v18[9]) = *(_QWORD *)((char *)a2 + v18[9]);
      *(_OWORD *)((char *)a1 + v18[10]) = *(_OWORD *)((char *)a2 + v18[10]);
      goto LABEL_107;
    case 6u:
      v19 = sub_23FB2C764();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v19))
      {
        v20 = sub_23F6916B8(&qword_256EA49D8);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v19);
      }
      v130 = type metadata accessor for ActionCancellation(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))((char *)a1 + *(int *)(v130 + 20), (char *)a2 + *(int *)(v130 + 20), v19);
      goto LABEL_107;
    case 7u:
      v95 = sub_23FB2C764();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(a1, a2, v95);
      v96 = (int *)type metadata accessor for ClientAction(0);
      *(_OWORD *)((char *)a1 + v96[5]) = *(_OWORD *)((char *)a2 + v96[5]);
      *(_QWORD *)((char *)a1 + v96[6]) = *(_QWORD *)((char *)a2 + v96[6]);
      *(_OWORD *)((char *)a1 + v96[7]) = *(_OWORD *)((char *)a2 + v96[7]);
      *(_OWORD *)((char *)a1 + v96[8]) = *(_OWORD *)((char *)a2 + v96[8]);
      *(_QWORD *)((char *)a1 + v96[9]) = *(_QWORD *)((char *)a2 + v96[9]);
      goto LABEL_107;
    case 8u:
      v21 = sub_23FB2C764();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
      Step = type metadata accessor for QueryStep(0);
      *(_QWORD *)((char *)a1 + *(int *)(Step + 20)) = *(_QWORD *)((char *)a2 + *(int *)(Step + 20));
      goto LABEL_107;
    case 9u:
      v23 = sub_23FB2C764();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a1, a2, v23);
      v24 = type metadata accessor for VariableStep(0);
      *(_QWORD *)((char *)a1 + *(int *)(v24 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v24 + 20));
      goto LABEL_107;
    case 0xDu:
      type metadata accessor for SessionError();
      v97 = (char *)&loc_23F853718 + 4 * word_23FB63832[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0xFu:
      v98 = sub_23FB2C77C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(a1, a2, v98);
      goto LABEL_107;
    case 0x10u:
      v99 = sub_23FB2C4B8();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v99))
      {
        v100 = sub_23F6916B8(&qword_256EA2798);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(a1, a2, v99);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v99);
      }
      v153 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))((char *)a1 + v153[5], (char *)a2 + v153[5], v99);
      v154 = v153[6];
      v155 = (char *)a1 + v154;
      v156 = (char *)a2 + v154;
      v157 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v158 = sub_23FB2ED38();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v158 - 8) + 32))(v155, v156, v158);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v155, v156, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
      }
      v159 = v153[7];
      v160 = (char *)a1 + v159;
      v161 = (char *)a2 + v159;
      v162 = sub_23FB2C764();
      v163 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v162 - 8) + 32);
      v163(v160, v161, v162);
      v164 = v153[8];
      v165 = (_OWORD *)((char *)a1 + v164);
      v166 = (_OWORD *)((char *)a2 + v164);
      v167 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v167 - 8) + 64));
      }
      else
      {
        *v165 = *v166;
        v181 = type metadata accessor for RequestContent.TextContent(0);
        v163((char *)v165 + *(int *)(v181 + 20), (char *)v166 + *(int *)(v181 + 20), v162);
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_107;
    case 0x11u:
      v25 = sub_23FB2C4B8();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v25))
      {
        v26 = sub_23F6916B8(&qword_256EA2798);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(a1, a2, v25);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v25);
      }
      v131 = (int *)type metadata accessor for ActionStepResult(0);
      *(_OWORD *)((char *)a1 + v131[5]) = *(_OWORD *)((char *)a2 + v131[5]);
      v132 = v131[6];
      v133 = (char *)a1 + v132;
      v134 = (char *)a2 + v132;
      v135 = sub_23FB2C80C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 32))(v133, v134, v135);
      v136 = *(int *)(type metadata accessor for ActionResult(0) + 20);
      v137 = &v133[v136];
      v138 = &v134[v136];
      v139 = sub_23FB2D0B8();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v138, 1, v139))
      {
        v140 = sub_23F6916B8(&qword_256EA2780);
        memcpy(v137, v138, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v139 - 8) + 32))(v137, v138, v139);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v137, 0, 1, v139);
      }
      *(_OWORD *)((char *)a1 + v131[7]) = *(_OWORD *)((char *)a2 + v131[7]);
      goto LABEL_107;
    case 0x12u:
      *a1 = *a2;
      StepResults = type metadata accessor for QueryStepResults(0);
      v28 = *(int *)(StepResults + 20);
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      v31 = sub_23FB2C764();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
      v32 = *(int *)(StepResults + 24);
      v33 = (char *)a1 + v32;
      v34 = (char *)a2 + v32;
      v35 = sub_23FB2C4B8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
      goto LABEL_107;
    case 0x13u:
      v101 = sub_23FB2C938();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(a1, a2, v101);
      goto LABEL_107;
    case 0x14u:
      v102 = sub_23FB2C764();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(a1, a2, v102);
      v103 = (int *)type metadata accessor for ActionResolverRequest(0);
      *(_OWORD *)((char *)a1 + v103[5]) = *(_OWORD *)((char *)a2 + v103[5]);
      *(_QWORD *)((char *)a1 + v103[6]) = *(_QWORD *)((char *)a2 + v103[6]);
      *(_QWORD *)((char *)a1 + v103[7]) = *(_QWORD *)((char *)a2 + v103[7]);
      *(_QWORD *)((char *)a1 + v103[8]) = *(_QWORD *)((char *)a2 + v103[8]);
      *((_BYTE *)a1 + v103[9]) = *((_BYTE *)a2 + v103[9]);
      *((_BYTE *)a1 + v103[10]) = *((_BYTE *)a2 + v103[10]);
      *((_BYTE *)a1 + v103[11]) = *((_BYTE *)a2 + v103[11]);
      goto LABEL_107;
    case 0x1Eu:
      v104 = sub_23FB2D004();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(a1, a2, v104);
      goto LABEL_107;
    case 0x1Fu:
      v105 = sub_23FB2C4B8();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v105))
      {
        v106 = sub_23F6916B8(&qword_256EA2798);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v105 - 8) + 32))(a1, a2, v105);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v105);
      }
      v168 = (int *)type metadata accessor for StatementResult(0);
      *(_OWORD *)((char *)a1 + v168[5]) = *(_OWORD *)((char *)a2 + v168[5]);
      v169 = v168[6];
      v170 = (char *)a1 + v169;
      v171 = (char *)a2 + v169;
      v172 = sub_23FB2D0DC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v172 - 8) + 32))(v170, v171, v172);
      v173 = *(int *)(type metadata accessor for StatementResultPayload(0) + 20);
      v174 = &v170[v173];
      v175 = &v171[v173];
      v176 = sub_23FB2D0B8();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v175, 1, v176))
      {
        v177 = sub_23F6916B8(&qword_256EA2780);
        memcpy(v174, v175, *(_QWORD *)(*(_QWORD *)(v177 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v176 - 8) + 32))(v174, v175, v176);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v174, 0, 1, v176);
      }
      v182 = v168[7];
      v183 = (char *)a1 + v182;
      v184 = (char *)a2 + v182;
      v185 = sub_23FB2C764();
      v186 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 32);
      v186(v183, v184, v185);
      v186((char *)a1 + v168[8], (char *)a2 + v168[8], v185);
      v186((char *)a1 + v168[9], (char *)a2 + v168[9], v185);
      goto LABEL_107;
    case 0x20u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v107 = type metadata accessor for ExternalAgentTextQuery(0);
      v108 = *(int *)(v107 + 20);
      v109 = (char *)a1 + v108;
      v110 = (char *)a2 + v108;
      v111 = sub_23FB2C4B8();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v110, 1, v111))
      {
        v112 = sub_23F6916B8(&qword_256EA2798);
        memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 32))(v109, v110, v111);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v109, 0, 1, v111);
      }
      v178 = *(int *)(v107 + 24);
      v179 = (char *)a1 + v178;
      v180 = (char *)a2 + v178;
      *(_OWORD *)v179 = *(_OWORD *)v180;
      *((_QWORD *)v179 + 2) = *((_QWORD *)v180 + 2);
      goto LABEL_107;
    case 0x21u:
      *a1 = *a2;
      v36 = type metadata accessor for ExternalAgentSpeechQuery(0);
      v37 = *(int *)(v36 + 20);
      v38 = (char *)a1 + v37;
      v39 = (char *)a2 + v37;
      v40 = sub_23FB2C4B8();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v39, 1, v40))
      {
        v41 = sub_23F6916B8(&qword_256EA2798);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v38, 0, 1, v40);
      }
      v141 = *(int *)(v36 + 24);
      v142 = (char *)a1 + v141;
      v143 = (char *)a2 + v141;
      *(_OWORD *)v142 = *(_OWORD *)v143;
      *((_QWORD *)v142 + 2) = *((_QWORD *)v143 + 2);
      goto LABEL_107;
    case 0x22u:
      v42 = type metadata accessor for RequestContent(0);
      v43 = swift_getEnumCaseMultiPayload();
      if (v43 == 3)
      {
        v187 = sub_23FB2C4B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v187))
        {
          v188 = sub_23F6916B8(&qword_256EA2798);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v188 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))(a1, a2, v187);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v187);
        }
        v191 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))((char *)a1 + v191[5], (char *)a2 + v191[5], v187);
        v192 = v191[6];
        v193 = (char *)a1 + v192;
        v194 = (char *)a2 + v192;
        v195 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v196 = sub_23FB2ED38();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 32))(v193, v194, v196);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v193, v194, *(_QWORD *)(*(_QWORD *)(v195 - 8) + 64));
        }
        v197 = v191[7];
        v198 = (char *)a1 + v197;
        v199 = (char *)a2 + v197;
        v200 = sub_23FB2C764();
        v201 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 32);
        v201(v198, v199, v200);
        v202 = v191[8];
        v203 = (_OWORD *)((char *)a1 + v202);
        v204 = (_OWORD *)((char *)a2 + v202);
        v205 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v203, v204, *(_QWORD *)(*(_QWORD *)(v205 - 8) + 64));
        }
        else
        {
          *v203 = *v204;
          v221 = type metadata accessor for RequestContent.TextContent(0);
          v201((char *)v203 + *(int *)(v221 + 20), (char *)v204 + *(int *)(v221 + 20), v200);
          swift_storeEnumTagMultiPayload();
        }
      }
      else
      {
        if (v43 != 1)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
          goto LABEL_97;
        }
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v44 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
        v45 = (char *)a1 + v44;
        v46 = (char *)a2 + v44;
        v47 = sub_23FB2C764();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
      }
      swift_storeEnumTagMultiPayload();
LABEL_97:
      v222 = type metadata accessor for ExternalAgentRequest(0);
      v223 = *(int *)(v222 + 20);
      v224 = (char *)a1 + v223;
      v225 = (char *)a2 + v223;
      v226 = sub_23FB2C4B8();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v225, 1, v226))
      {
        v227 = sub_23F6916B8(&qword_256EA2798);
        memcpy(v224, v225, *(_QWORD *)(*(_QWORD *)(v227 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v226 - 8) + 32))(v224, v225, v226);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v224, 0, 1, v226);
      }
      v228 = *(int *)(v222 + 24);
      v229 = (char *)a1 + v228;
      v230 = (char *)a2 + v228;
      *(_OWORD *)v229 = *(_OWORD *)v230;
      *((_QWORD *)v229 + 2) = *((_QWORD *)v230 + 2);
LABEL_107:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0x23u:
      v113 = sub_23FB2C764();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v113 - 8) + 32))(a1, a2, v113);
      v114 = type metadata accessor for ExternalAgentOutcome(0);
      v115 = *(int *)(v114 + 20);
      v116 = (char *)a1 + v115;
      v117 = (char *)a2 + v115;
      v118 = sub_23FB2D0DC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 32))(v116, v117, v118);
      *(_QWORD *)((char *)a1 + *(int *)(v114 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v114 + 24));
      goto LABEL_107;
    case 0x25u:
      v48 = sub_23FB2E8D0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(a1, a2, v48);
      v49 = type metadata accessor for ToolResolution(0);
      v50 = *(int *)(v49 + 20);
      v51 = (char *)a1 + v50;
      v52 = (char *)a2 + v50;
      v53 = sub_23FB2C764();
      v54 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32);
      v54(v51, v52, v53);
      v54((char *)a1 + *(int *)(v49 + 24), (char *)a2 + *(int *)(v49 + 24), v53);
      goto LABEL_107;
    case 0x26u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v55 = (int *)type metadata accessor for UndoRedoRequest(0);
      v56 = v55[5];
      v57 = (char *)a1 + v56;
      v58 = (char *)a2 + v56;
      v59 = sub_23FB2C4B8();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v58, 1, v59))
      {
        v60 = sub_23F6916B8(&qword_256EA2798);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v57, v58, v59);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v57, 0, 1, v59);
      }
      *((_BYTE *)a1 + v55[6]) = *((_BYTE *)a2 + v55[6]);
      v144 = v55[7];
      v145 = (char *)a1 + v144;
      v146 = (char *)a2 + v144;
      v147 = sub_23FB2C764();
      v148 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v147 - 8) + 32);
      v148(v145, v146, v147);
      v149 = v55[8];
      v150 = (char *)a1 + v149;
      v151 = (char *)a2 + v149;
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v151, 1, v147))
      {
        v152 = sub_23F6916B8(&qword_256EA49D8);
        memcpy(v150, v151, *(_QWORD *)(*(_QWORD *)(v152 - 8) + 64));
      }
      else
      {
        v148(v150, v151, v147);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v150, 0, 1, v147);
      }
      goto LABEL_107;
    case 0x27u:
      v61 = sub_23FB2C4B8();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(a1, a2, v61);
      v62 = (int *)type metadata accessor for ClientUndoRedoRequest(0);
      *((_BYTE *)a1 + v62[5]) = *((_BYTE *)a2 + v62[5]);
      v63 = v62[6];
      v64 = (char *)a1 + v63;
      v65 = (char *)a2 + v63;
      v66 = sub_23FB2C764();
      v67 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32);
      v67(v64, v65, v66);
      v68 = v62[7];
      v69 = (char *)a1 + v68;
      v70 = (char *)a2 + v68;
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v70, 1, v66))
      {
        v71 = sub_23F6916B8(&qword_256EA49D8);
        memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      }
      else
      {
        v67(v69, v70, v66);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v69, 0, 1, v66);
      }
      goto LABEL_107;
    case 0x28u:
      v72 = sub_23FB2ED38();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(a1, a2, v72);
      v73 = type metadata accessor for TypeConversionRequest(0);
      v74 = *(int *)(v73 + 20);
      v75 = (char *)a1 + v74;
      v76 = (char *)a2 + v74;
      v77 = sub_23FB2ED5C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 32))(v75, v76, v77);
      v78 = *(int *)(v73 + 24);
      v79 = (char *)a1 + v78;
      v80 = (char *)a2 + v78;
      v81 = sub_23FB2C764();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v79, v80, v81);
      goto LABEL_107;
    case 0x29u:
      v82 = sub_23FB2ED38();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(a1, a2, v82);
      v83 = type metadata accessor for TypeConversionResult(0);
      v84 = *(int *)(v83 + 20);
      v85 = (char *)a1 + v84;
      v86 = (char *)a2 + v84;
      v87 = sub_23FB2C764();
      v88 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 32);
      v88(v85, v86, v87);
      v88((char *)a1 + *(int *)(v83 + 24), (char *)a2 + *(int *)(v83 + 24), v87);
      goto LABEL_107;
    case 0x2Au:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      DecorationResult = type metadata accessor for QueryDecorationResult(0);
      v120 = *(int *)(DecorationResult + 28);
      v121 = (char *)a1 + v120;
      v122 = (char *)a2 + v120;
      v123 = sub_23FB2E354();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v122, 1, v123))
      {
        v124 = sub_23F6916B8(&qword_256EA71F8);
        memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(v121, v122, v123);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v121, 0, 1, v123);
      }
      *(_QWORD *)((char *)a1 + *(int *)(DecorationResult + 32)) = *(_QWORD *)((char *)a2
                                                                            + *(int *)(DecorationResult + 32));
      goto LABEL_107;
    case 0x2Cu:
      v125 = sub_23FB2C764();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v125 - 8) + 32))(a1, a2, v125);
      DecorationPrePlannerResult = type metadata accessor for QueryDecorationPrePlannerResult(0);
      *(_OWORD *)((char *)a1 + *(int *)(DecorationPrePlannerResult + 20)) = *(_OWORD *)((char *)a2
                                                                                      + *(int *)(DecorationPrePlannerResult
                                                                                               + 20));
      v127 = *(int *)(DecorationPrePlannerResult + 24);
      v128 = (char *)a1 + v127;
      v129 = (char *)a2 + v127;
      v128[8] = v129[8];
      *(_QWORD *)v128 = *(_QWORD *)v129;
      goto LABEL_107;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
  }
}

_QWORD *assignWithTake for Session.Event.Payload(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t Step;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t StepResults;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  int *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  void (*v88)(char *, char *, uint64_t);
  uint64_t v89;
  int EnumCaseMultiPayload;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  int *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t DecorationResult;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t DecorationPrePlannerResult;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  int *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  void (*v148)(char *, char *, uint64_t);
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  int *v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  void (*v163)(char *, char *, uint64_t);
  uint64_t v164;
  _OWORD *v165;
  _OWORD *v166;
  uint64_t v167;
  int *v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  void (*v186)(char *, char *, uint64_t);
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  int *v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  void (*v201)(char *, char *, uint64_t);
  uint64_t v202;
  _OWORD *v203;
  _OWORD *v204;
  uint64_t v205;
  int *v206;
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  char *v214;
  uint64_t v215;
  void (*v216)(char *, char *, uint64_t);
  uint64_t v217;
  _OWORD *v218;
  _OWORD *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  char *v230;
  uint64_t v231;
  int *v232;
  uint64_t v233;
  char *v234;
  char *v235;
  uint64_t v236;
  char *v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  char *v243;
  _QWORD *result;

  if (a1 != a2)
  {
    sub_23F83A7D4((uint64_t)a1, type metadata accessor for Session.Event.Payload);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = sub_23FB2C998();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        v7 = type metadata accessor for SessionStart(0);
        v8 = *(int *)(v7 + 20);
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = sub_23FB2C908();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
        *((_BYTE *)a1 + *(int *)(v7 + 24)) = *((_BYTE *)a2 + *(int *)(v7 + 24));
        goto LABEL_108;
      case 1u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        v12 = type metadata accessor for TextQuery(0);
        v13 = *(int *)(v12 + 24);
        v14 = (char *)a1 + v13;
        v15 = (char *)a2 + v13;
        v16 = sub_23FB2C764();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
        *(_OWORD *)((char *)a1 + *(int *)(v12 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(v12 + 28));
        goto LABEL_108;
      case 3u:
        v89 = type metadata accessor for RequestContent(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 3)
        {
          v189 = sub_23FB2C4B8();
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v189))
          {
            v190 = sub_23F6916B8(&qword_256EA2798);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v190 - 8) + 64));
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v189 - 8) + 32))(a1, a2, v189);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v189);
          }
          v206 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 32))((char *)a1 + v206[5], (char *)a2 + v206[5], v189);
          v207 = v206[6];
          v208 = (char *)a1 + v207;
          v209 = (char *)a2 + v207;
          v210 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v211 = sub_23FB2ED38();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v211 - 8) + 32))(v208, v209, v211);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v208, v209, *(_QWORD *)(*(_QWORD *)(v210 - 8) + 64));
          }
          v212 = v206[7];
          v213 = (char *)a1 + v212;
          v214 = (char *)a2 + v212;
          v215 = sub_23FB2C764();
          v216 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v215 - 8) + 32);
          v216(v213, v214, v215);
          v217 = v206[8];
          v218 = (_OWORD *)((char *)a1 + v217);
          v219 = (_OWORD *)((char *)a2 + v217);
          v220 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v218, v219, *(_QWORD *)(*(_QWORD *)(v220 - 8) + 64));
          }
          else
          {
            *v218 = *v219;
            v231 = type metadata accessor for RequestContent.TextContent(0);
            v216((char *)v218 + *(int *)(v231 + 20), (char *)v219 + *(int *)(v231 + 20), v215);
            swift_storeEnumTagMultiPayload();
          }
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
            goto LABEL_104;
          }
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v91 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
          v92 = (char *)a1 + v91;
          v93 = (char *)a2 + v91;
          v94 = sub_23FB2C764();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v92, v93, v94);
        }
        swift_storeEnumTagMultiPayload();
LABEL_104:
        v232 = (int *)type metadata accessor for Request(0);
        *((_BYTE *)a1 + v232[5]) = *((_BYTE *)a2 + v232[5]);
        v233 = v232[6];
        v234 = (char *)a1 + v233;
        v235 = (char *)a2 + v233;
        v234[16] = v235[16];
        *(_OWORD *)v234 = *(_OWORD *)v235;
        v236 = v232[7];
        v237 = (char *)a1 + v236;
        v238 = (char *)a2 + v236;
        v239 = sub_23FB2C4B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v238, 1, v239))
        {
          v240 = sub_23F6916B8(&qword_256EA2798);
          memcpy(v237, v238, *(_QWORD *)(*(_QWORD *)(v240 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v239 - 8) + 32))(v237, v238, v239);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v237, 0, 1, v239);
        }
        v241 = v232[8];
        v242 = (char *)a1 + v241;
        v243 = (char *)a2 + v241;
        *(_OWORD *)v242 = *(_OWORD *)v243;
        *((_QWORD *)v242 + 2) = *((_QWORD *)v243 + 2);
        goto LABEL_108;
      case 5u:
        v17 = sub_23FB2C764();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, a2, v17);
        v18 = (int *)type metadata accessor for Action(0);
        *(_OWORD *)((char *)a1 + v18[5]) = *(_OWORD *)((char *)a2 + v18[5]);
        *(_OWORD *)((char *)a1 + v18[6]) = *(_OWORD *)((char *)a2 + v18[6]);
        *(_OWORD *)((char *)a1 + v18[7]) = *(_OWORD *)((char *)a2 + v18[7]);
        *((_BYTE *)a1 + v18[8]) = *((_BYTE *)a2 + v18[8]);
        *(_QWORD *)((char *)a1 + v18[9]) = *(_QWORD *)((char *)a2 + v18[9]);
        *(_OWORD *)((char *)a1 + v18[10]) = *(_OWORD *)((char *)a2 + v18[10]);
        goto LABEL_108;
      case 6u:
        v19 = sub_23FB2C764();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v19))
        {
          v20 = sub_23F6916B8(&qword_256EA49D8);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v19);
        }
        v130 = type metadata accessor for ActionCancellation(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))((char *)a1 + *(int *)(v130 + 20), (char *)a2 + *(int *)(v130 + 20), v19);
        goto LABEL_108;
      case 7u:
        v95 = sub_23FB2C764();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(a1, a2, v95);
        v96 = (int *)type metadata accessor for ClientAction(0);
        *(_OWORD *)((char *)a1 + v96[5]) = *(_OWORD *)((char *)a2 + v96[5]);
        *(_QWORD *)((char *)a1 + v96[6]) = *(_QWORD *)((char *)a2 + v96[6]);
        *(_OWORD *)((char *)a1 + v96[7]) = *(_OWORD *)((char *)a2 + v96[7]);
        *(_OWORD *)((char *)a1 + v96[8]) = *(_OWORD *)((char *)a2 + v96[8]);
        *(_QWORD *)((char *)a1 + v96[9]) = *(_QWORD *)((char *)a2 + v96[9]);
        goto LABEL_108;
      case 8u:
        v21 = sub_23FB2C764();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
        Step = type metadata accessor for QueryStep(0);
        *(_QWORD *)((char *)a1 + *(int *)(Step + 20)) = *(_QWORD *)((char *)a2 + *(int *)(Step + 20));
        goto LABEL_108;
      case 9u:
        v23 = sub_23FB2C764();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a1, a2, v23);
        v24 = type metadata accessor for VariableStep(0);
        *(_QWORD *)((char *)a1 + *(int *)(v24 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v24 + 20));
        goto LABEL_108;
      case 0xDu:
        type metadata accessor for SessionError();
        v97 = (char *)&loc_23F854F48 + 4 * word_23FB63894[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0xFu:
        v98 = sub_23FB2C77C();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(a1, a2, v98);
        goto LABEL_108;
      case 0x10u:
        v99 = sub_23FB2C4B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v99))
        {
          v100 = sub_23F6916B8(&qword_256EA2798);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(a1, a2, v99);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v99);
        }
        v153 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))((char *)a1 + v153[5], (char *)a2 + v153[5], v99);
        v154 = v153[6];
        v155 = (char *)a1 + v154;
        v156 = (char *)a2 + v154;
        v157 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v158 = sub_23FB2ED38();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v158 - 8) + 32))(v155, v156, v158);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v155, v156, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
        }
        v159 = v153[7];
        v160 = (char *)a1 + v159;
        v161 = (char *)a2 + v159;
        v162 = sub_23FB2C764();
        v163 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v162 - 8) + 32);
        v163(v160, v161, v162);
        v164 = v153[8];
        v165 = (_OWORD *)((char *)a1 + v164);
        v166 = (_OWORD *)((char *)a2 + v164);
        v167 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v167 - 8) + 64));
        }
        else
        {
          *v165 = *v166;
          v181 = type metadata accessor for RequestContent.TextContent(0);
          v163((char *)v165 + *(int *)(v181 + 20), (char *)v166 + *(int *)(v181 + 20), v162);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_108;
      case 0x11u:
        v25 = sub_23FB2C4B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v25))
        {
          v26 = sub_23F6916B8(&qword_256EA2798);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(a1, a2, v25);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v25);
        }
        v131 = (int *)type metadata accessor for ActionStepResult(0);
        *(_OWORD *)((char *)a1 + v131[5]) = *(_OWORD *)((char *)a2 + v131[5]);
        v132 = v131[6];
        v133 = (char *)a1 + v132;
        v134 = (char *)a2 + v132;
        v135 = sub_23FB2C80C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 32))(v133, v134, v135);
        v136 = *(int *)(type metadata accessor for ActionResult(0) + 20);
        v137 = &v133[v136];
        v138 = &v134[v136];
        v139 = sub_23FB2D0B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v138, 1, v139))
        {
          v140 = sub_23F6916B8(&qword_256EA2780);
          memcpy(v137, v138, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v139 - 8) + 32))(v137, v138, v139);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v137, 0, 1, v139);
        }
        *(_OWORD *)((char *)a1 + v131[7]) = *(_OWORD *)((char *)a2 + v131[7]);
        goto LABEL_108;
      case 0x12u:
        *a1 = *a2;
        StepResults = type metadata accessor for QueryStepResults(0);
        v28 = *(int *)(StepResults + 20);
        v29 = (char *)a1 + v28;
        v30 = (char *)a2 + v28;
        v31 = sub_23FB2C764();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
        v32 = *(int *)(StepResults + 24);
        v33 = (char *)a1 + v32;
        v34 = (char *)a2 + v32;
        v35 = sub_23FB2C4B8();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
        goto LABEL_108;
      case 0x13u:
        v101 = sub_23FB2C938();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(a1, a2, v101);
        goto LABEL_108;
      case 0x14u:
        v102 = sub_23FB2C764();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(a1, a2, v102);
        v103 = (int *)type metadata accessor for ActionResolverRequest(0);
        *(_OWORD *)((char *)a1 + v103[5]) = *(_OWORD *)((char *)a2 + v103[5]);
        *(_QWORD *)((char *)a1 + v103[6]) = *(_QWORD *)((char *)a2 + v103[6]);
        *(_QWORD *)((char *)a1 + v103[7]) = *(_QWORD *)((char *)a2 + v103[7]);
        *(_QWORD *)((char *)a1 + v103[8]) = *(_QWORD *)((char *)a2 + v103[8]);
        *((_BYTE *)a1 + v103[9]) = *((_BYTE *)a2 + v103[9]);
        *((_BYTE *)a1 + v103[10]) = *((_BYTE *)a2 + v103[10]);
        *((_BYTE *)a1 + v103[11]) = *((_BYTE *)a2 + v103[11]);
        goto LABEL_108;
      case 0x1Eu:
        v104 = sub_23FB2D004();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(a1, a2, v104);
        goto LABEL_108;
      case 0x1Fu:
        v105 = sub_23FB2C4B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v105))
        {
          v106 = sub_23F6916B8(&qword_256EA2798);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v105 - 8) + 32))(a1, a2, v105);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v105);
        }
        v168 = (int *)type metadata accessor for StatementResult(0);
        *(_OWORD *)((char *)a1 + v168[5]) = *(_OWORD *)((char *)a2 + v168[5]);
        v169 = v168[6];
        v170 = (char *)a1 + v169;
        v171 = (char *)a2 + v169;
        v172 = sub_23FB2D0DC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v172 - 8) + 32))(v170, v171, v172);
        v173 = *(int *)(type metadata accessor for StatementResultPayload(0) + 20);
        v174 = &v170[v173];
        v175 = &v171[v173];
        v176 = sub_23FB2D0B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v175, 1, v176))
        {
          v177 = sub_23F6916B8(&qword_256EA2780);
          memcpy(v174, v175, *(_QWORD *)(*(_QWORD *)(v177 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v176 - 8) + 32))(v174, v175, v176);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v174, 0, 1, v176);
        }
        v182 = v168[7];
        v183 = (char *)a1 + v182;
        v184 = (char *)a2 + v182;
        v185 = sub_23FB2C764();
        v186 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 32);
        v186(v183, v184, v185);
        v186((char *)a1 + v168[8], (char *)a2 + v168[8], v185);
        v186((char *)a1 + v168[9], (char *)a2 + v168[9], v185);
        goto LABEL_108;
      case 0x20u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v107 = type metadata accessor for ExternalAgentTextQuery(0);
        v108 = *(int *)(v107 + 20);
        v109 = (char *)a1 + v108;
        v110 = (char *)a2 + v108;
        v111 = sub_23FB2C4B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v110, 1, v111))
        {
          v112 = sub_23F6916B8(&qword_256EA2798);
          memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 32))(v109, v110, v111);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v109, 0, 1, v111);
        }
        v178 = *(int *)(v107 + 24);
        v179 = (char *)a1 + v178;
        v180 = (char *)a2 + v178;
        *(_OWORD *)v179 = *(_OWORD *)v180;
        *((_QWORD *)v179 + 2) = *((_QWORD *)v180 + 2);
        goto LABEL_108;
      case 0x21u:
        *a1 = *a2;
        v36 = type metadata accessor for ExternalAgentSpeechQuery(0);
        v37 = *(int *)(v36 + 20);
        v38 = (char *)a1 + v37;
        v39 = (char *)a2 + v37;
        v40 = sub_23FB2C4B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v39, 1, v40))
        {
          v41 = sub_23F6916B8(&qword_256EA2798);
          memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v38, 0, 1, v40);
        }
        v141 = *(int *)(v36 + 24);
        v142 = (char *)a1 + v141;
        v143 = (char *)a2 + v141;
        *(_OWORD *)v142 = *(_OWORD *)v143;
        *((_QWORD *)v142 + 2) = *((_QWORD *)v143 + 2);
        goto LABEL_108;
      case 0x22u:
        v42 = type metadata accessor for RequestContent(0);
        v43 = swift_getEnumCaseMultiPayload();
        if (v43 == 3)
        {
          v187 = sub_23FB2C4B8();
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v187))
          {
            v188 = sub_23F6916B8(&qword_256EA2798);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v188 - 8) + 64));
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))(a1, a2, v187);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v187);
          }
          v191 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))((char *)a1 + v191[5], (char *)a2 + v191[5], v187);
          v192 = v191[6];
          v193 = (char *)a1 + v192;
          v194 = (char *)a2 + v192;
          v195 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v196 = sub_23FB2ED38();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 32))(v193, v194, v196);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v193, v194, *(_QWORD *)(*(_QWORD *)(v195 - 8) + 64));
          }
          v197 = v191[7];
          v198 = (char *)a1 + v197;
          v199 = (char *)a2 + v197;
          v200 = sub_23FB2C764();
          v201 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 32);
          v201(v198, v199, v200);
          v202 = v191[8];
          v203 = (_OWORD *)((char *)a1 + v202);
          v204 = (_OWORD *)((char *)a2 + v202);
          v205 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v203, v204, *(_QWORD *)(*(_QWORD *)(v205 - 8) + 64));
          }
          else
          {
            *v203 = *v204;
            v221 = type metadata accessor for RequestContent.TextContent(0);
            v201((char *)v203 + *(int *)(v221 + 20), (char *)v204 + *(int *)(v221 + 20), v200);
            swift_storeEnumTagMultiPayload();
          }
        }
        else
        {
          if (v43 != 1)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
            goto LABEL_98;
          }
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v44 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
          v45 = (char *)a1 + v44;
          v46 = (char *)a2 + v44;
          v47 = sub_23FB2C764();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
        }
        swift_storeEnumTagMultiPayload();
LABEL_98:
        v222 = type metadata accessor for ExternalAgentRequest(0);
        v223 = *(int *)(v222 + 20);
        v224 = (char *)a1 + v223;
        v225 = (char *)a2 + v223;
        v226 = sub_23FB2C4B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v225, 1, v226))
        {
          v227 = sub_23F6916B8(&qword_256EA2798);
          memcpy(v224, v225, *(_QWORD *)(*(_QWORD *)(v227 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v226 - 8) + 32))(v224, v225, v226);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v224, 0, 1, v226);
        }
        v228 = *(int *)(v222 + 24);
        v229 = (char *)a1 + v228;
        v230 = (char *)a2 + v228;
        *(_OWORD *)v229 = *(_OWORD *)v230;
        *((_QWORD *)v229 + 2) = *((_QWORD *)v230 + 2);
LABEL_108:
        swift_storeEnumTagMultiPayload();
        break;
      case 0x23u:
        v113 = sub_23FB2C764();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v113 - 8) + 32))(a1, a2, v113);
        v114 = type metadata accessor for ExternalAgentOutcome(0);
        v115 = *(int *)(v114 + 20);
        v116 = (char *)a1 + v115;
        v117 = (char *)a2 + v115;
        v118 = sub_23FB2D0DC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 32))(v116, v117, v118);
        *(_QWORD *)((char *)a1 + *(int *)(v114 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v114 + 24));
        goto LABEL_108;
      case 0x25u:
        v48 = sub_23FB2E8D0();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(a1, a2, v48);
        v49 = type metadata accessor for ToolResolution(0);
        v50 = *(int *)(v49 + 20);
        v51 = (char *)a1 + v50;
        v52 = (char *)a2 + v50;
        v53 = sub_23FB2C764();
        v54 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32);
        v54(v51, v52, v53);
        v54((char *)a1 + *(int *)(v49 + 24), (char *)a2 + *(int *)(v49 + 24), v53);
        goto LABEL_108;
      case 0x26u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v55 = (int *)type metadata accessor for UndoRedoRequest(0);
        v56 = v55[5];
        v57 = (char *)a1 + v56;
        v58 = (char *)a2 + v56;
        v59 = sub_23FB2C4B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v58, 1, v59))
        {
          v60 = sub_23F6916B8(&qword_256EA2798);
          memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v57, v58, v59);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v57, 0, 1, v59);
        }
        *((_BYTE *)a1 + v55[6]) = *((_BYTE *)a2 + v55[6]);
        v144 = v55[7];
        v145 = (char *)a1 + v144;
        v146 = (char *)a2 + v144;
        v147 = sub_23FB2C764();
        v148 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v147 - 8) + 32);
        v148(v145, v146, v147);
        v149 = v55[8];
        v150 = (char *)a1 + v149;
        v151 = (char *)a2 + v149;
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v151, 1, v147))
        {
          v152 = sub_23F6916B8(&qword_256EA49D8);
          memcpy(v150, v151, *(_QWORD *)(*(_QWORD *)(v152 - 8) + 64));
        }
        else
        {
          v148(v150, v151, v147);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v150, 0, 1, v147);
        }
        goto LABEL_108;
      case 0x27u:
        v61 = sub_23FB2C4B8();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(a1, a2, v61);
        v62 = (int *)type metadata accessor for ClientUndoRedoRequest(0);
        *((_BYTE *)a1 + v62[5]) = *((_BYTE *)a2 + v62[5]);
        v63 = v62[6];
        v64 = (char *)a1 + v63;
        v65 = (char *)a2 + v63;
        v66 = sub_23FB2C764();
        v67 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32);
        v67(v64, v65, v66);
        v68 = v62[7];
        v69 = (char *)a1 + v68;
        v70 = (char *)a2 + v68;
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v70, 1, v66))
        {
          v71 = sub_23F6916B8(&qword_256EA49D8);
          memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
        }
        else
        {
          v67(v69, v70, v66);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v69, 0, 1, v66);
        }
        goto LABEL_108;
      case 0x28u:
        v72 = sub_23FB2ED38();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(a1, a2, v72);
        v73 = type metadata accessor for TypeConversionRequest(0);
        v74 = *(int *)(v73 + 20);
        v75 = (char *)a1 + v74;
        v76 = (char *)a2 + v74;
        v77 = sub_23FB2ED5C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 32))(v75, v76, v77);
        v78 = *(int *)(v73 + 24);
        v79 = (char *)a1 + v78;
        v80 = (char *)a2 + v78;
        v81 = sub_23FB2C764();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v79, v80, v81);
        goto LABEL_108;
      case 0x29u:
        v82 = sub_23FB2ED38();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(a1, a2, v82);
        v83 = type metadata accessor for TypeConversionResult(0);
        v84 = *(int *)(v83 + 20);
        v85 = (char *)a1 + v84;
        v86 = (char *)a2 + v84;
        v87 = sub_23FB2C764();
        v88 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 32);
        v88(v85, v86, v87);
        v88((char *)a1 + *(int *)(v83 + 24), (char *)a2 + *(int *)(v83 + 24), v87);
        goto LABEL_108;
      case 0x2Au:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        DecorationResult = type metadata accessor for QueryDecorationResult(0);
        v120 = *(int *)(DecorationResult + 28);
        v121 = (char *)a1 + v120;
        v122 = (char *)a2 + v120;
        v123 = sub_23FB2E354();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v122, 1, v123))
        {
          v124 = sub_23F6916B8(&qword_256EA71F8);
          memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(v121, v122, v123);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v121, 0, 1, v123);
        }
        *(_QWORD *)((char *)a1 + *(int *)(DecorationResult + 32)) = *(_QWORD *)((char *)a2
                                                                              + *(int *)(DecorationResult + 32));
        goto LABEL_108;
      case 0x2Cu:
        v125 = sub_23FB2C764();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v125 - 8) + 32))(a1, a2, v125);
        DecorationPrePlannerResult = type metadata accessor for QueryDecorationPrePlannerResult(0);
        *(_OWORD *)((char *)a1 + *(int *)(DecorationPrePlannerResult + 20)) = *(_OWORD *)((char *)a2
                                                                                        + *(int *)(DecorationPrePlannerResult
                                                                                                 + 20));
        v127 = *(int *)(DecorationPrePlannerResult + 24);
        v128 = (char *)a1 + v127;
        v129 = (char *)a2 + v127;
        v128[8] = v129[8];
        *(_QWORD *)v128 = *(_QWORD *)v129;
        goto LABEL_108;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t sub_23F855F70()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;

  result = type metadata accessor for SessionStart(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for TextQuery(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for Request(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for Action(319);
        if (v4 <= 0x3F)
        {
          result = type metadata accessor for ActionCancellation(319);
          if (v5 <= 0x3F)
          {
            result = type metadata accessor for ClientAction(319);
            if (v6 <= 0x3F)
            {
              result = type metadata accessor for QueryStep(319);
              if (v7 <= 0x3F)
              {
                result = type metadata accessor for VariableStep(319);
                if (v8 <= 0x3F)
                {
                  result = type metadata accessor for SessionError();
                  if (v9 <= 0x3F)
                  {
                    result = sub_23FB2C77C();
                    if (v10 <= 0x3F)
                    {
                      result = type metadata accessor for RequestContent.SystemPromptResolution(319);
                      if (v11 <= 0x3F)
                      {
                        result = type metadata accessor for ActionStepResult(319);
                        if (v12 <= 0x3F)
                        {
                          result = type metadata accessor for QueryStepResults(319);
                          if (v13 <= 0x3F)
                          {
                            result = sub_23FB2C938();
                            if (v14 <= 0x3F)
                            {
                              result = type metadata accessor for ActionResolverRequest(319);
                              if (v15 <= 0x3F)
                              {
                                result = sub_23FB2D004();
                                if (v16 <= 0x3F)
                                {
                                  result = type metadata accessor for StatementResult(319);
                                  if (v17 <= 0x3F)
                                  {
                                    result = type metadata accessor for ExternalAgentTextQuery(319);
                                    if (v18 <= 0x3F)
                                    {
                                      result = type metadata accessor for ExternalAgentSpeechQuery(319);
                                      if (v19 <= 0x3F)
                                      {
                                        result = type metadata accessor for ExternalAgentRequest(319);
                                        if (v20 <= 0x3F)
                                        {
                                          result = type metadata accessor for ExternalAgentOutcome(319);
                                          if (v21 <= 0x3F)
                                          {
                                            result = type metadata accessor for ToolResolution(319);
                                            if (v22 <= 0x3F)
                                            {
                                              result = type metadata accessor for UndoRedoRequest(319);
                                              if (v23 <= 0x3F)
                                              {
                                                result = type metadata accessor for ClientUndoRedoRequest(319);
                                                if (v24 <= 0x3F)
                                                {
                                                  result = type metadata accessor for TypeConversionRequest(319);
                                                  if (v25 <= 0x3F)
                                                  {
                                                    result = type metadata accessor for TypeConversionResult(319);
                                                    if (v26 <= 0x3F)
                                                    {
                                                      result = type metadata accessor for QueryDecorationResult(319);
                                                      if (v27 <= 0x3F)
                                                      {
                                                        result = type metadata accessor for QueryDecorationPrePlannerResult(319);
                                                        if (v28 <= 0x3F)
                                                        {
                                                          swift_initEnumMetadataMultiPayload();
                                                          return 0;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

void type metadata accessor for Session.Event.Payload.QueryTrackingBehavior()
{
  sub_23F694C70();
}

uint64_t destroy for Session.Plan()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Session.Plan(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Session.Plan(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

__n128 initializeWithTake for Session.Plan(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for Session.Plan(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for Session.Plan(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 57))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Session.Plan(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for Session.Plan()
{
  sub_23F694C70();
}

void type metadata accessor for Session.Plan.Source()
{
  sub_23F694C70();
}

void type metadata accessor for Session.Plan.DecompositionResult()
{
  sub_23F694C70();
}

void type metadata accessor for Session.RecoverableError()
{
  sub_23F694C70();
}

void type metadata accessor for Session.PlanGenerationError()
{
  sub_23F694C70();
}

uint64_t _s30IntelligenceFlowPlannerSupport7SessionO30PlanGenerationModelOutputErrorVwxx_0()
{
  destroy for AssetsManager();
  swift_bridgeObjectRelease();
  return sub_23F876798();
}

void _s30IntelligenceFlowPlannerSupport7SessionO30PlanGenerationModelOutputErrorVwcp_0(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F878DE4(a1, a2);
  v4 = v3[3];
  v2[2] = v3[2];
  v2[3] = v4;
  v5 = v3[5];
  v2[4] = v3[4];
  v2[5] = v5;
  swift_bridgeObjectRetain();
  sub_23F6B54F8();
  sub_23F6B6254();
  sub_23F694C84();
}

void _s30IntelligenceFlowPlannerSupport7SessionO30PlanGenerationModelOutputErrorVwca_0(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;

  sub_23F876E6C(a1, a2);
  sub_23F6B5AB0();
  v3[2] = v2[2];
  v3[3] = v2[3];
  swift_bridgeObjectRetain();
  sub_23F6B5AB0();
  v3[4] = v2[4];
  v3[5] = v2[5];
  swift_bridgeObjectRetain();
  sub_23F693E04();
  sub_23F694C84();
}

void _s30IntelligenceFlowPlannerSupport7SessionO30PlanGenerationModelOutputErrorVwta_0(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F8781F0(a1, a2);
  v4 = v2[3];
  v3[2] = v2[2];
  v3[3] = v4;
  swift_bridgeObjectRelease();
  v5 = v2[5];
  v3[4] = v2[4];
  v3[5] = v5;
  swift_bridgeObjectRelease();
  sub_23F694CC8();
}

uint64_t _s30IntelligenceFlowPlannerSupport7SessionO30PlanGenerationModelOutputErrorVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return sub_23F6B6EC0(-1);
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    v2 = *(_QWORD *)(a1 + 8);
    if (v2 >= 0xFFFFFFFF)
      LODWORD(v2) = -1;
  }
  return sub_23F6B6EC0(v2);
}

uint64_t sub_23F856764(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
      return sub_23F877A3C(result, a2);
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      return sub_23F877A3C(result, a2);
  }
  return result;
}

void type metadata accessor for Session.PlanGenerationModelOutputError()
{
  sub_23F694C70();
}

_QWORD *initializeBufferWithCopyOfBuffer for SessionStart(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FB2C998();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FB2C908();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t destroy for SessionStart(uint64_t a1, uint64_t a2)
{
  return sub_23F8678C8(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE52660]);
}

uint64_t initializeWithCopy for SessionStart(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23FB2C998();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FB2C908();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithCopy for SessionStart(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23FB2C998();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FB2C908();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for SessionStart(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23FB2C998();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FB2C908();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for SessionStart(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23FB2C998();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FB2C908();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionStart()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F856AD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  sub_23F877F48();
  sub_23FB2C998();
  sub_23F6F07DC();
  if (v3)
  {
    v1 = sub_23F876D78();
  }
  else
  {
    sub_23FB2C908();
    sub_23F6F07DC();
    if (!v3)
    {
      sub_23F694C84();
      return;
    }
    v1 = sub_23F876F00();
  }
  sub_23F6F07D0(v1, v0, v2);
}

uint64_t storeEnumTagSinglePayload for SessionStart()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F856B54(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23FB2C998();
  sub_23F6F07EC();
  if (v7)
  {
    sub_23F876DBC();
  }
  else
  {
    sub_23FB2C908();
    sub_23F6F07EC();
    if (!v7)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
      sub_23F694C84();
      return;
    }
    sub_23F876F78();
  }
  sub_23F6F08B0();
  sub_23F6F07C4(v8, v9, v10, v11);
}

uint64_t sub_23F856BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F869194(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BE52660], (uint64_t (*)(uint64_t))MEMORY[0x24BE524C0]);
}

uint64_t *initializeBufferWithCopyOfBuffer for Request(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  char *v53;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  v7 = type metadata accessor for RequestContent(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v16 = sub_23FB2C4B8();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v16))
      {
        v17 = sub_23F6916B8(&qword_256EA2798);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v16);
      }
      v18 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))((char *)a1 + v18[5], (char *)a2 + v18[5], v16);
      v19 = v18[6];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v23 = sub_23FB2ED38();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v20, v21, v23);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      v24 = v18[7];
      v25 = (char *)a1 + v24;
      v26 = (char *)a2 + v24;
      v27 = sub_23FB2C764();
      v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
      v28(v25, v26, v27);
      v29 = v18[8];
      v30 = (uint64_t *)((char *)a1 + v29);
      v31 = (uint64_t *)((char *)a2 + v29);
      v32 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
      v33 = swift_getEnumCaseMultiPayload();
      if (v33 == 1)
      {
        *v30 = *v31;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v33)
        {
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
          goto LABEL_21;
        }
        v34 = v31[1];
        *v30 = *v31;
        v30[1] = v34;
        v35 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
        v53 = (char *)v30 + v35;
        v36 = (char *)v31 + v35;
        swift_bridgeObjectRetain();
        v28(v53, v36, v27);
      }
      swift_storeEnumTagMultiPayload();
LABEL_21:
      swift_storeEnumTagMultiPayload();
      goto LABEL_22;
    case 2:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_21;
    case 1:
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      v10 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_23FB2C764();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      v14(v11, v12, v13);
      goto LABEL_21;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_22:
  v37 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  v40 = *((unsigned __int8 *)a2 + v37 + 16);
  if (v40 <= 0xFD)
  {
    v41 = *(_QWORD *)v39;
    v42 = *((_QWORD *)v39 + 1);
    sub_23F73515C(*(_QWORD *)v39, v42, *((_BYTE *)a2 + v37 + 16));
    *(_QWORD *)v38 = v41;
    *((_QWORD *)v38 + 1) = v42;
    v38[16] = v40;
  }
  else
  {
    *(_OWORD *)v38 = *(_OWORD *)v39;
    v38[16] = v39[16];
  }
  v43 = a3[7];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  v46 = sub_23FB2C4B8();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v45, 1, v46))
  {
    v47 = sub_23F6916B8(&qword_256EA2798);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v44, 0, 1, v46);
  }
  v48 = a3[8];
  v49 = (uint64_t *)((char *)a1 + v48);
  v50 = (uint64_t *)((char *)a2 + v48);
  v51 = v50[1];
  if (v51)
  {
    *v49 = *v50;
    v49[1] = v51;
    v49[2] = v50[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v49 = *(_OWORD *)v50;
    v49[2] = v50[2];
  }
  return a1;
}

uint64_t destroy for Request(uint64_t a1, int *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;

  type metadata accessor for RequestContent(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 3)
  {
    if (EnumCaseMultiPayload != 2)
    {
      if (EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
        v5 = a1 + *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
        v6 = sub_23FB2C764();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      }
      goto LABEL_13;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v7 = sub_23FB2C4B8();
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v7))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
  v8 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1 + v8[5], v7);
  v9 = a1 + v8[6];
  type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_23FB2ED38();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  v11 = a1 + v8[7];
  v12 = sub_23FB2C764();
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v13(v11, v12);
  v14 = a1 + v8[8];
  type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
  v15 = swift_getEnumCaseMultiPayload();
  if (v15 == 1)
    goto LABEL_12;
  if (!v15)
  {
    swift_bridgeObjectRelease();
    v16 = type metadata accessor for RequestContent.TextContent(0);
    v13(v14 + *(int *)(v16 + 20), v12);
  }
LABEL_13:
  v17 = a1 + a2[6];
  v18 = *(unsigned __int8 *)(v17 + 16);
  if (v18 <= 0xFD)
    sub_23F735FE8(*(_QWORD *)v17, *(_QWORD *)(v17 + 8), v18);
  v19 = a1 + a2[7];
  v20 = sub_23FB2C4B8();
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v19, 1, v20))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  result = *(_QWORD *)(a1 + a2[8] + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for Request(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  char *v51;

  v6 = type metadata accessor for RequestContent(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v14 = sub_23FB2C4B8();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v14))
      {
        v15 = sub_23F6916B8(&qword_256EA2798);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v14);
      }
      v16 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))((char *)a1 + v16[5], (char *)a2 + v16[5], v14);
      v17 = v16[6];
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v21 = sub_23FB2ED38();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v18, v19, v21);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      v22 = v16[7];
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      v25 = sub_23FB2C764();
      v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
      v26(v23, v24, v25);
      v27 = v16[8];
      v28 = (_QWORD *)((char *)a1 + v27);
      v29 = (_QWORD *)((char *)a2 + v27);
      v30 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
      v31 = swift_getEnumCaseMultiPayload();
      if (v31 == 1)
      {
        *v28 = *v29;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v31)
        {
          memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
          break;
        }
        v32 = v29[1];
        *v28 = *v29;
        v28[1] = v32;
        v33 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
        v51 = (char *)v28 + v33;
        v34 = (char *)v29 + v33;
        swift_bridgeObjectRetain();
        v26(v51, v34, v25);
      }
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      break;
    case 1:
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      v9 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_23FB2C764();
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_20;
  }
  swift_storeEnumTagMultiPayload();
LABEL_20:
  v35 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  v38 = *((unsigned __int8 *)a2 + v35 + 16);
  if (v38 <= 0xFD)
  {
    v39 = *(_QWORD *)v37;
    v40 = *((_QWORD *)v37 + 1);
    sub_23F73515C(*(_QWORD *)v37, v40, *((_BYTE *)a2 + v35 + 16));
    *(_QWORD *)v36 = v39;
    *((_QWORD *)v36 + 1) = v40;
    v36[16] = v38;
  }
  else
  {
    *(_OWORD *)v36 = *(_OWORD *)v37;
    v36[16] = v37[16];
  }
  v41 = a3[7];
  v42 = (char *)a1 + v41;
  v43 = (char *)a2 + v41;
  v44 = sub_23FB2C4B8();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v43, 1, v44))
  {
    v45 = sub_23F6916B8(&qword_256EA2798);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v42, v43, v44);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v42, 0, 1, v44);
  }
  v46 = a3[8];
  v47 = (_QWORD *)((char *)a1 + v46);
  v48 = (_QWORD *)((char *)a2 + v46);
  v49 = v48[1];
  if (v49)
  {
    *v47 = *v48;
    v47[1] = v49;
    v47[2] = v48[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v47 = *(_OWORD *)v48;
    v47[2] = v48[2];
  }
  return a1;
}

_QWORD *assignWithCopy for Request(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  unsigned int v36;
  __int128 v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  char *v62;

  if (a1 == a2)
    goto LABEL_21;
  sub_23F83A7D4((uint64_t)a1, type metadata accessor for RequestContent);
  v6 = type metadata accessor for RequestContent(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v13 = sub_23FB2C4B8();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v13))
      {
        v14 = sub_23F6916B8(&qword_256EA2798);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v13);
      }
      v15 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))((char *)a1 + v15[5], (char *)a2 + v15[5], v13);
      v16 = v15[6];
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      v19 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v20 = sub_23FB2ED38();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v17, v18, v20);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      v21 = v15[7];
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      v24 = sub_23FB2C764();
      v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
      v25(v22, v23, v24);
      v26 = v15[8];
      v27 = (_QWORD *)((char *)a1 + v26);
      v28 = (_QWORD *)((char *)a2 + v26);
      v29 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
      v30 = swift_getEnumCaseMultiPayload();
      if (v30 == 1)
      {
        *v27 = *v28;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v30)
        {
          memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
          break;
        }
        *v27 = *v28;
        v27[1] = v28[1];
        v31 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
        v62 = (char *)v27 + v31;
        v32 = (char *)v28 + v31;
        swift_bridgeObjectRetain();
        v25(v62, v32, v24);
      }
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      break;
    case 1:
      *a1 = *a2;
      a1[1] = a2[1];
      v8 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_23FB2C764();
      v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      v12(v9, v10, v11);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_21;
  }
  swift_storeEnumTagMultiPayload();
LABEL_21:
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v33 = a3[6];
  v34 = (uint64_t)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = *((unsigned __int8 *)a2 + v33 + 16);
  if (*((unsigned __int8 *)a1 + v33 + 16) <= 0xFDu)
  {
    if (v36 <= 0xFD)
    {
      v41 = *(_QWORD *)v35;
      v42 = *((_QWORD *)v35 + 1);
      sub_23F73515C(v41, v42, v36);
      v43 = *(_QWORD *)v34;
      v44 = *(_QWORD *)(v34 + 8);
      *(_QWORD *)v34 = v41;
      *(_QWORD *)(v34 + 8) = v42;
      v45 = *(_BYTE *)(v34 + 16);
      *(_BYTE *)(v34 + 16) = v36;
      sub_23F735FE8(v43, v44, v45);
    }
    else
    {
      sub_23F857BB4(v34);
      v38 = v35[16];
      *(_OWORD *)v34 = *(_OWORD *)v35;
      *(_BYTE *)(v34 + 16) = v38;
    }
  }
  else if (v36 <= 0xFD)
  {
    v39 = *(_QWORD *)v35;
    v40 = *((_QWORD *)v35 + 1);
    sub_23F73515C(v39, v40, v36);
    *(_QWORD *)v34 = v39;
    *(_QWORD *)(v34 + 8) = v40;
    *(_BYTE *)(v34 + 16) = v36;
  }
  else
  {
    v37 = *(_OWORD *)v35;
    *(_BYTE *)(v34 + 16) = v35[16];
    *(_OWORD *)v34 = v37;
  }
  v46 = a3[7];
  v47 = (char *)a1 + v46;
  v48 = (char *)a2 + v46;
  v49 = sub_23FB2C4B8();
  v50 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v47, 1, v49);
  v51 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v48, 1, v49);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v47, v48, v49);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v47, 0, 1, v49);
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  v52 = *(_QWORD *)(v49 - 8);
  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v52 + 8))(v47, v49);
LABEL_33:
    v53 = sub_23F6916B8(&qword_256EA2798);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    goto LABEL_34;
  }
  (*(void (**)(char *, char *, uint64_t))(v52 + 24))(v47, v48, v49);
LABEL_34:
  v54 = a3[8];
  v55 = (_QWORD *)((char *)a1 + v54);
  v56 = (_QWORD *)((char *)a2 + v54);
  v57 = *(_QWORD *)((char *)a1 + v54 + 8);
  v58 = v56[1];
  if (v57)
  {
    if (v58)
    {
      *v55 = *v56;
      v55[1] = v56[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v55[2] = v56[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23F857BE0((uint64_t)v55);
      v59 = v56[2];
      *(_OWORD *)v55 = *(_OWORD *)v56;
      v55[2] = v59;
    }
  }
  else if (v58)
  {
    *v55 = *v56;
    v55[1] = v56[1];
    v55[2] = v56[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v60 = *(_OWORD *)v56;
    v55[2] = v56[2];
    *(_OWORD *)v55 = v60;
  }
  return a1;
}

uint64_t sub_23F857BB4(uint64_t a1)
{
  destroy for RequestPrescribedPlan(a1);
  return a1;
}

uint64_t sub_23F857BE0(uint64_t a1)
{
  destroy for ExternalAgentRequestRewriteMetadata(a1, &type metadata for ExternalAgentRequestRewriteMetadata);
  return a1;
}

_OWORD *initializeWithTake for Request(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;

  v6 = type metadata accessor for RequestContent(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    v12 = sub_23FB2C4B8();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v12))
    {
      v13 = sub_23F6916B8(&qword_256EA2798);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v12);
    }
    v14 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))((char *)a1 + v14[5], (char *)a2 + v14[5], v12);
    v15 = v14[6];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v19 = sub_23FB2ED38();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v16, v17, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    v20 = v14[7];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = sub_23FB2C764();
    v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32);
    v24(v21, v22, v23);
    v25 = v14[8];
    v26 = (_OWORD *)((char *)a1 + v25);
    v27 = (_OWORD *)((char *)a2 + v25);
    v28 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      *v26 = *v27;
      v29 = type metadata accessor for RequestContent.TextContent(0);
      v24((char *)v26 + *(int *)(v29 + 20), (char *)v27 + *(int *)(v29 + 20), v23);
      swift_storeEnumTagMultiPayload();
    }
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_15;
    }
    *a1 = *a2;
    v8 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FB2C764();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  }
  swift_storeEnumTagMultiPayload();
LABEL_15:
  v30 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  *(_OWORD *)v31 = *(_OWORD *)v32;
  v31[16] = v32[16];
  v33 = a3[7];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = sub_23FB2C4B8();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v35, 1, v36))
  {
    v37 = sub_23F6916B8(&qword_256EA2798);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v34, 0, 1, v36);
  }
  v38 = a3[8];
  v39 = (char *)a1 + v38;
  v40 = (char *)a2 + v38;
  *(_OWORD *)v39 = *(_OWORD *)v40;
  *((_QWORD *)v39 + 2) = *((_QWORD *)v40 + 2);
  return a1;
}

_OWORD *assignWithTake for Request(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  unsigned int v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;

  if (a1 != a2)
  {
    sub_23F83A7D4((uint64_t)a1, type metadata accessor for RequestContent);
    v6 = type metadata accessor for RequestContent(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      v12 = sub_23FB2C4B8();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v12))
      {
        v13 = sub_23F6916B8(&qword_256EA2798);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v12);
      }
      v14 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))((char *)a1 + v14[5], (char *)a2 + v14[5], v12);
      v15 = v14[6];
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v19 = sub_23FB2ED38();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v16, v17, v19);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      v20 = v14[7];
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      v23 = sub_23FB2C764();
      v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32);
      v24(v21, v22, v23);
      v25 = v14[8];
      v26 = (_OWORD *)((char *)a1 + v25);
      v27 = (_OWORD *)((char *)a2 + v25);
      v28 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        *v26 = *v27;
        v29 = type metadata accessor for RequestContent.TextContent(0);
        v24((char *)v26 + *(int *)(v29 + 20), (char *)v27 + *(int *)(v29 + 20), v23);
        swift_storeEnumTagMultiPayload();
      }
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        goto LABEL_16;
      }
      *a1 = *a2;
      v8 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_23FB2C764();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_16:
  v30 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = *((unsigned __int8 *)a1 + v30 + 16);
  if (v33 > 0xFD)
  {
LABEL_19:
    *(_OWORD *)v31 = *(_OWORD *)v32;
    v31[16] = v32[16];
    goto LABEL_21;
  }
  v34 = v32[16];
  if (v34 > 0xFD)
  {
    sub_23F857BB4((uint64_t)a1 + v30);
    goto LABEL_19;
  }
  v35 = *(_QWORD *)v31;
  v36 = *((_QWORD *)v31 + 1);
  *(_OWORD *)v31 = *(_OWORD *)v32;
  v31[16] = v34;
  sub_23F735FE8(v35, v36, v33);
LABEL_21:
  v37 = a3[7];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  v40 = sub_23FB2C4B8();
  v41 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v38, 1, v40);
  v42 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v39, 1, v40);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v38, 0, 1, v40);
      goto LABEL_27;
    }
    goto LABEL_26;
  }
  v43 = *(_QWORD *)(v40 - 8);
  if (v42)
  {
    (*(void (**)(char *, uint64_t))(v43 + 8))(v38, v40);
LABEL_26:
    v44 = sub_23F6916B8(&qword_256EA2798);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    goto LABEL_27;
  }
  (*(void (**)(char *, char *, uint64_t))(v43 + 40))(v38, v39, v40);
LABEL_27:
  v45 = a3[8];
  v46 = (uint64_t)a1 + v45;
  v47 = (char *)a2 + v45;
  if (!*(_QWORD *)((char *)a1 + v45 + 8))
  {
LABEL_31:
    *(_OWORD *)v46 = *(_OWORD *)v47;
    *(_QWORD *)(v46 + 16) = *((_QWORD *)v47 + 2);
    return a1;
  }
  v48 = *((_QWORD *)v47 + 1);
  if (!v48)
  {
    sub_23F857BE0(v46);
    goto LABEL_31;
  }
  *(_QWORD *)v46 = *(_QWORD *)v47;
  *(_QWORD *)(v46 + 8) = v48;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v46 + 16) = *((_QWORD *)v47 + 2);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Request()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F858388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char v7;

  type metadata accessor for RequestContent(0);
  sub_23F6F07DC();
  if (v7)
  {
    v5 = sub_23F876D78();
  }
  else
  {
    sub_23F6916B8(&qword_256EA2798);
    sub_23F6F07DC();
    if (!v7)
    {
      sub_23F876D30(*(int *)(a3 + 32));
      sub_23F694C84();
      return;
    }
    v5 = sub_23F8783BC();
  }
  sub_23F6F07D0(v5, a2, v6);
}

uint64_t storeEnumTagSinglePayload for Request()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F858400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  type metadata accessor for RequestContent(0);
  sub_23F6F07EC();
  if (v5)
  {
    sub_23F876DBC();
  }
  else
  {
    sub_23F6916B8(&qword_256EA2798);
    sub_23F6F07EC();
    if (!v5)
    {
      sub_23F878BAC(*(int *)(a4 + 32));
      sub_23F694C84();
      return;
    }
    sub_23F8783BC();
  }
  sub_23F6F08B0();
  sub_23F6F07C4(v6, v7, v8, v9);
}

void sub_23F858470()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for RequestContent(319);
  if (v0 <= 0x3F)
  {
    sub_23F6DE58C(319, qword_256EA6B68, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for RequestContent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        v15 = sub_23FB2C4B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v15))
        {
          v16 = sub_23F6916B8(&qword_256EA2798);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v15);
        }
        v17 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))((char *)a1 + v17[5], (char *)a2 + v17[5], v15);
        v18 = v17[6];
        v19 = (char *)a1 + v18;
        v20 = (char *)a2 + v18;
        v21 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v22 = sub_23FB2ED38();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v19, v20, v22);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        v23 = v17[7];
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = sub_23FB2C764();
        v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
        v27(v24, v25, v26);
        v28 = v17[8];
        v29 = (uint64_t *)((char *)a1 + v28);
        v30 = (uint64_t *)((char *)a2 + v28);
        v31 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
        v32 = swift_getEnumCaseMultiPayload();
        if (v32 == 1)
        {
          *v29 = *v30;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v32)
          {
            memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
            goto LABEL_21;
          }
          v33 = v30[1];
          *v29 = *v30;
          v29[1] = v33;
          v34 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
          v35 = (char *)v29 + v34;
          v36 = (char *)v30 + v34;
          swift_bridgeObjectRetain();
          v27(v35, v36, v26);
        }
        swift_storeEnumTagMultiPayload();
LABEL_21:
        swift_storeEnumTagMultiPayload();
        return a1;
      case 2:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_21;
      case 1:
        v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        v9 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = sub_23FB2C764();
        v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
        swift_bridgeObjectRetain();
        v13(v10, v11, v12);
        goto LABEL_21;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t destroy for RequestContent(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 3:
      v7 = sub_23FB2C4B8();
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v7))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
      v8 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1 + v8[5], v7);
      v9 = a1 + v8[6];
      type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v10 = sub_23FB2ED38();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
      }
      v11 = a1 + v8[7];
      v12 = sub_23FB2C764();
      v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
      v14(v11, v12);
      v13 = a1 + v8[8];
      type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
      result = swift_getEnumCaseMultiPayload();
      if ((_DWORD)result != 1)
      {
        if ((_DWORD)result)
          return result;
        swift_bridgeObjectRelease();
        v6 = v13 + *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
        v4 = v12;
        v5 = (uint64_t (*)(uint64_t, uint64_t))v14;
        return v5(v6, v4);
      }
      break;
    case 2:
      break;
    case 1:
      swift_bridgeObjectRelease();
      v3 = a1 + *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
      v4 = sub_23FB2C764();
      v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
      v6 = v3;
      return v5(v6, v4);
    default:
      return result;
  }
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for RequestContent(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v13 = sub_23FB2C4B8();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v13))
      {
        v14 = sub_23F6916B8(&qword_256EA2798);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v13);
      }
      v15 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))((char *)a1 + v15[5], (char *)a2 + v15[5], v13);
      v16 = v15[6];
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      v19 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v20 = sub_23FB2ED38();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v17, v18, v20);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      v21 = v15[7];
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      v24 = sub_23FB2C764();
      v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
      v25(v22, v23, v24);
      v26 = v15[8];
      v27 = (_QWORD *)((char *)a1 + v26);
      v28 = (_QWORD *)((char *)a2 + v26);
      v29 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
      v30 = swift_getEnumCaseMultiPayload();
      if (v30 == 1)
      {
        *v27 = *v28;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v30)
        {
          memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
          goto LABEL_19;
        }
        v31 = v28[1];
        *v27 = *v28;
        v27[1] = v31;
        v32 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
        v33 = (char *)v27 + v32;
        v34 = (char *)v28 + v32;
        swift_bridgeObjectRetain();
        v25(v33, v34, v24);
      }
      swift_storeEnumTagMultiPayload();
LABEL_19:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 2:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_19;
    case 1:
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      v8 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_23FB2C764();
      v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      v12(v9, v10, v11);
      goto LABEL_19;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *assignWithCopy for RequestContent(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  char *v31;
  char *v32;

  if (a1 != a2)
  {
    sub_23F83A7D4((uint64_t)a1, type metadata accessor for RequestContent);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        v12 = sub_23FB2C4B8();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v12))
        {
          v13 = sub_23F6916B8(&qword_256EA2798);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v12);
        }
        v14 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))((char *)a1 + v14[5], (char *)a2 + v14[5], v12);
        v15 = v14[6];
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        v18 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v19 = sub_23FB2ED38();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v17, v19);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        }
        v20 = v14[7];
        v21 = (char *)a1 + v20;
        v22 = (char *)a2 + v20;
        v23 = sub_23FB2C764();
        v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
        v24(v21, v22, v23);
        v25 = v14[8];
        v26 = (_QWORD *)((char *)a1 + v25);
        v27 = (_QWORD *)((char *)a2 + v25);
        v28 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
        v29 = swift_getEnumCaseMultiPayload();
        if (v29 == 1)
        {
          *v26 = *v27;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v29)
          {
            memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
            goto LABEL_20;
          }
          *v26 = *v27;
          v26[1] = v27[1];
          v30 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
          v31 = (char *)v26 + v30;
          v32 = (char *)v27 + v30;
          swift_bridgeObjectRetain();
          v24(v31, v32, v23);
        }
        swift_storeEnumTagMultiPayload();
LABEL_20:
        swift_storeEnumTagMultiPayload();
        return a1;
      case 2:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_20;
      case 1:
        *a1 = *a2;
        a1[1] = a2[1];
        v7 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
        v8 = (char *)a1 + v7;
        v9 = (char *)a2 + v7;
        v10 = sub_23FB2C764();
        v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
        swift_bridgeObjectRetain();
        v11(v8, v9, v10);
        goto LABEL_20;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *initializeWithTake for RequestContent(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  uint64_t v27;
  uint64_t v28;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    v11 = sub_23FB2C4B8();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA2798);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v11);
    }
    v13 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))((char *)a1 + v13[5], (char *)a2 + v13[5], v11);
    v14 = v13[6];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v18 = sub_23FB2ED38();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v15, v16, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    v19 = v13[7];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_23FB2C764();
    v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32);
    v23(v20, v21, v22);
    v24 = v13[8];
    v25 = (_OWORD *)((char *)a1 + v24);
    v26 = (_OWORD *)((char *)a2 + v24);
    v27 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      *v25 = *v26;
      v28 = type metadata accessor for RequestContent.TextContent(0);
      v23((char *)v25 + *(int *)(v28 + 20), (char *)v26 + *(int *)(v28 + 20), v22);
      swift_storeEnumTagMultiPayload();
    }
    goto LABEL_14;
  }
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    v7 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23FB2C764();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
LABEL_14:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for RequestContent(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  uint64_t v27;
  uint64_t v28;

  if (a1 != a2)
  {
    sub_23F83A7D4((uint64_t)a1, type metadata accessor for RequestContent);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      v11 = sub_23FB2C4B8();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v11))
      {
        v12 = sub_23F6916B8(&qword_256EA2798);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v11);
      }
      v13 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))((char *)a1 + v13[5], (char *)a2 + v13[5], v11);
      v14 = v13[6];
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v18 = sub_23FB2ED38();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v15, v16, v18);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      v19 = v13[7];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = sub_23FB2C764();
      v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32);
      v23(v20, v21, v22);
      v24 = v13[8];
      v25 = (_OWORD *)((char *)a1 + v24);
      v26 = (_OWORD *)((char *)a2 + v24);
      v27 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        *v25 = *v26;
        v28 = type metadata accessor for RequestContent.TextContent(0);
        v23((char *)v25 + *(int *)(v28 + 20), (char *)v26 + *(int *)(v28 + 20), v22);
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_15;
    }
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v7 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_23FB2C764();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_23F859500()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for RequestContent.TextContent(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for RequestContent.SystemPromptResolution(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void type metadata accessor for RequestContent.StopContent()
{
  sub_23F694C70();
}

uint64_t getEnumTagSinglePayload for RequestContent.TextContent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for RequestContent.TextContent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F8595E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F86627C(a1, a2, a3, (uint64_t)&unk_23FB67468, (void (*)(uint64_t))MEMORY[0x24BE52140]);
}

void type metadata accessor for RequestContent.SpeechContent()
{
  sub_23F694C70();
}

uint64_t *initializeBufferWithCopyOfBuffer for RequestContent.SystemPromptResolution(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  int EnumCaseMultiPayload;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FB2C4B8();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EA2798);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))((char *)a1 + a3[5], (char *)a2 + a3[5], v7);
    }
    else
    {
      v10 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
      v10(a1, a2, v7);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
      v10((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    }
    v11 = a3[6];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_23FB2ED38();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_23FB2C764();
    v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
    v20(v17, v18, v19);
    v21 = a3[8];
    v22 = (uint64_t *)((char *)a1 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    v24 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *v22 = *v23;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        return a1;
      }
      v26 = v23[1];
      *v22 = *v23;
      v22[1] = v26;
      v27 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
      v28 = (char *)v22 + v27;
      v29 = (char *)v23 + v27;
      swift_bridgeObjectRetain();
      v20(v28, v29, v19);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for RequestContent.SystemPromptResolution(uint64_t a1, int *a2)
{
  uint64_t v4;
  int v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);

  v4 = sub_23FB2C4B8();
  v5 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  if (!v5)
    v6(a1, v4);
  v6(a1 + a2[5], v4);
  v7 = a1 + a2[6];
  type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_23FB2ED38();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  v9 = a1 + a2[7];
  v10 = sub_23FB2C764();
  v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
  v14(v9, v10);
  v11 = a1 + a2[8];
  type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
    return swift_bridgeObjectRelease();
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    v13 = v11 + *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v14)(v13, v10);
  }
  return result;
}

char *initializeWithCopy for RequestContent.SystemPromptResolution(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;

  v6 = sub_23FB2C4B8();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA2798);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(&a1[a3[5]], &a2[a3[5]], v6);
  }
  else
  {
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
    v8(a1, a2, v6);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
    v8(&a1[a3[5]], &a2[a3[5]], v6);
  }
  v9 = a3[6];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = sub_23FB2ED38();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  v14 = a3[7];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = sub_23FB2C764();
  v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  v18(v15, v16, v17);
  v19 = a3[8];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *(_QWORD *)v20 = *(_QWORD *)v21;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      return a1;
    }
    v24 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v24;
    v25 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
    v26 = &v20[v25];
    v27 = &v21[v25];
    swift_bridgeObjectRetain();
    v18(v26, v27, v17);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *assignWithCopy for RequestContent.SystemPromptResolution(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  int EnumCaseMultiPayload;
  uint64_t v27;
  char *v28;
  char *v29;
  void (*v30)(char *, char *, uint64_t);

  v6 = sub_23FB2C4B8();
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (v8)
    {
      v9 = sub_23F6916B8(&qword_256EA2798);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      v10 = *(_QWORD *)(v6 - 8);
    }
    else
    {
      v10 = *(_QWORD *)(v6 - 8);
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(a1, a2, v6);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
    }
  }
  else
  {
    v10 = *(_QWORD *)(v6 - 8);
    if (v8)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(a1, v6);
      v11 = sub_23F6916B8(&qword_256EA2798);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(a1, a2, v6);
    }
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(&a1[a3[5]], &a2[a3[5]], v6);
  if (a1 != a2)
  {
    v12 = a3[6];
    v13 = &a1[v12];
    v14 = &a2[v12];
    sub_23F83A7D4((uint64_t)&a1[v12], type metadata accessor for RequestContent.SystemPromptResolution.UserAction);
    v15 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = sub_23FB2ED38();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
  }
  v17 = a3[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_23FB2C764();
  v21 = *(_QWORD *)(v20 - 8);
  (*(void (**)(char *, char *, uint64_t))(v21 + 24))(v18, v19, v20);
  if (a1 != a2)
  {
    v22 = a3[8];
    v23 = &a1[v22];
    v24 = &a2[v22];
    sub_23F83A7D4((uint64_t)&a1[v22], type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput);
    v25 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *(_QWORD *)v23 = *(_QWORD *)v24;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        return a1;
      }
      *(_QWORD *)v23 = *(_QWORD *)v24;
      *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
      v27 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
      v28 = &v23[v27];
      v29 = &v24[v27];
      v30 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
      swift_bridgeObjectRetain();
      v30(v28, v29, v20);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for RequestContent.SystemPromptResolution(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_23FB2C4B8();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA2798);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(&a1[a3[5]], &a2[a3[5]], v6);
  }
  else
  {
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
    v8(a1, a2, v6);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
    v8(&a1[a3[5]], &a2[a3[5]], v6);
  }
  v9 = a3[6];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = sub_23FB2ED38();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11, v13);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  v14 = a3[7];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = sub_23FB2C764();
  v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32);
  v18(v15, v16, v17);
  v19 = a3[8];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v20 = *(_OWORD *)v21;
    v23 = type metadata accessor for RequestContent.TextContent(0);
    v18(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v17);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithTake for RequestContent.SystemPromptResolution(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  v6 = sub_23FB2C4B8();
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (v8)
    {
      v9 = sub_23F6916B8(&qword_256EA2798);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      v10 = *(_QWORD *)(v6 - 8);
    }
    else
    {
      v10 = *(_QWORD *)(v6 - 8);
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v6);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
    }
  }
  else
  {
    v10 = *(_QWORD *)(v6 - 8);
    if (v8)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(a1, v6);
      v11 = sub_23F6916B8(&qword_256EA2798);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(a1, a2, v6);
    }
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(&a1[a3[5]], &a2[a3[5]], v6);
  if (a1 != a2)
  {
    v12 = a3[6];
    v13 = &a1[v12];
    v14 = &a2[v12];
    sub_23F83A7D4((uint64_t)&a1[v12], type metadata accessor for RequestContent.SystemPromptResolution.UserAction);
    v15 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = sub_23FB2ED38();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
  }
  v17 = a3[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_23FB2C764();
  v21 = *(_QWORD *)(v20 - 8);
  (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v18, v19, v20);
  if (a1 != a2)
  {
    v22 = a3[8];
    v23 = &a1[v22];
    v24 = &a2[v22];
    sub_23F83A7D4((uint64_t)&a1[v22], type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput);
    v25 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v23 = *(_OWORD *)v24;
      v26 = type metadata accessor for RequestContent.TextContent(0);
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(&v23[*(int *)(v26 + 20)], &v24[*(int *)(v26 + 20)], v20);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for RequestContent.SystemPromptResolution()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F85A2E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  char v11;

  sub_23F6B6B7C();
  sub_23F6916B8(&qword_256EA2798);
  sub_23F6F07DC();
  if (v8)
  {
    v6 = sub_23F876D78();
  }
  else
  {
    sub_23F72E034();
    sub_23F6F07DC();
    if (v8)
    {
      sub_23F6F0B94();
    }
    else
    {
      type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
      sub_23F6F07DC();
      if (v10)
      {
        sub_23F6F0B08();
      }
      else
      {
        sub_23F6B58C8();
        sub_23F6F07DC();
        if (v11)
        {
          sub_23F6F0AFC();
        }
        else
        {
          v7 = sub_23F8786D8();
          v9 = *(int *)(a3 + 32);
        }
      }
    }
    v6 = v4 + v9;
  }
  return sub_23F6F07D0(v6, v3, v7);
}

uint64_t storeEnumTagSinglePayload for RequestContent.SystemPromptResolution()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F85A380()
{
  char v0;
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F877568();
  sub_23F6916B8(&qword_256EA2798);
  sub_23F6F07EC();
  if (v0)
  {
    sub_23F876DBC();
  }
  else
  {
    sub_23F72E034();
    sub_23F6F07EC();
    if (v0)
    {
      sub_23F6F0BC4();
    }
    else
    {
      type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
      sub_23F6F07EC();
      if (v1)
      {
        sub_23F6F0BD0();
      }
      else
      {
        sub_23F6B58C8();
        sub_23F6F07EC();
        if (v2)
          sub_23F6F0BB8();
        else
          sub_23F8786D8();
      }
    }
  }
  sub_23F6F08B0();
  return sub_23F6F07C4(v3, v4, v5, v6);
}

void sub_23F85A40C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_23F6DE58C(319, qword_256EA6B68, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
  if (v0 <= 0x3F)
  {
    sub_23FB2C4B8();
    if (v1 <= 0x3F)
    {
      type metadata accessor for RequestContent.SystemPromptResolution.UserAction(319);
      if (v2 <= 0x3F)
      {
        sub_23FB2C764();
        if (v3 <= 0x3F)
        {
          type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(319);
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for RequestContent.SystemPromptResolution.ResolutionInput(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
      }
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      v9 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_23FB2C764();
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for RequestContent.SystemPromptResolution.ResolutionInput(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
    return swift_bridgeObjectRelease();
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    v3 = a1 + *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
    v4 = sub_23FB2C764();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  return result;
}

_QWORD *initializeWithCopy for RequestContent.SystemPromptResolution.ResolutionInput(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FB2C764();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for RequestContent.SystemPromptResolution.ResolutionInput(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_23F83A7D4((uint64_t)a1, type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
      *a1 = *a2;
      a1[1] = a2[1];
      v7 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_23FB2C764();
      v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
      swift_bridgeObjectRetain();
      v11(v8, v9, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for RequestContent.SystemPromptResolution.ResolutionInput(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v6 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_23FB2C764();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *assignWithTake for RequestContent.SystemPromptResolution.ResolutionInput(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_23F83A7D4((uint64_t)a1, type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      v6 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_23FB2C764();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_23F85A9C0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for RequestContent.TextContent(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for RequestContent.SystemPromptResolution.UserAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_23FB2ED38();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t destroy for RequestContent.SystemPromptResolution.UserAction(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v3 = sub_23FB2ED38();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

void *initializeWithCopy for RequestContent.SystemPromptResolution.UserAction(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_23FB2ED38();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithCopy for RequestContent.SystemPromptResolution.UserAction(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23F83A7D4((uint64_t)a1, type metadata accessor for RequestContent.SystemPromptResolution.UserAction);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23FB2ED38();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void assignWithTake for RequestContent.SystemPromptResolution.UserAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F85EB94(a1, a2, a3, type metadata accessor for RequestContent.SystemPromptResolution.UserAction);
}

uint64_t sub_23F85AC70()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FB2ED38();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RequestContent.SystemPromptResolution.RequirementResolution(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for RequestContent.SystemPromptResolution.RequirementResolution(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F85ADE4 + 4 * byte_23FB638A1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F85AE18 + 4 * byte_23FB6389C[v4]))();
}

uint64_t sub_23F85AE18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F85AE20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F85AE28);
  return result;
}

uint64_t sub_23F85AE34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F85AE3CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F85AE40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F85AE48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for RequestContent.SystemPromptResolution.RequirementResolution()
{
  sub_23F694C70();
}

void type metadata accessor for RequestContent.SystemPromptResolution.ActionCancellation()
{
  sub_23F694C70();
}

uint64_t *initializeBufferWithCopyOfBuffer for ExternalAgentRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  char *v47;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  v7 = type metadata accessor for RequestContent(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v16 = sub_23FB2C4B8();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v16))
      {
        v17 = sub_23F6916B8(&qword_256EA2798);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v16);
      }
      v18 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))((char *)a1 + v18[5], (char *)a2 + v18[5], v16);
      v19 = v18[6];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v23 = sub_23FB2ED38();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v20, v21, v23);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      v24 = v18[7];
      v25 = (char *)a1 + v24;
      v26 = (char *)a2 + v24;
      v27 = sub_23FB2C764();
      v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
      v28(v25, v26, v27);
      v29 = v18[8];
      v30 = (uint64_t *)((char *)a1 + v29);
      v31 = (uint64_t *)((char *)a2 + v29);
      v32 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
      v33 = swift_getEnumCaseMultiPayload();
      if (v33 == 1)
      {
        *v30 = *v31;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v33)
        {
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
          goto LABEL_21;
        }
        v34 = v31[1];
        *v30 = *v31;
        v30[1] = v34;
        v35 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
        v47 = (char *)v30 + v35;
        v36 = (char *)v31 + v35;
        swift_bridgeObjectRetain();
        v28(v47, v36, v27);
      }
      swift_storeEnumTagMultiPayload();
LABEL_21:
      swift_storeEnumTagMultiPayload();
      goto LABEL_22;
    case 2:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_21;
    case 1:
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      v10 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_23FB2C764();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      v14(v11, v12, v13);
      goto LABEL_21;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_22:
  v37 = *(int *)(a3 + 20);
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  v40 = sub_23FB2C4B8();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v39, 1, v40))
  {
    v41 = sub_23F6916B8(&qword_256EA2798);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v38, 0, 1, v40);
  }
  v42 = *(int *)(a3 + 24);
  v43 = (uint64_t *)((char *)a1 + v42);
  v44 = (uint64_t *)((char *)a2 + v42);
  v45 = v44[1];
  if (v45)
  {
    *v43 = *v44;
    v43[1] = v45;
    v43[2] = v44[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v43 = *(_OWORD *)v44;
    v43[2] = v44[2];
  }
  return a1;
}

uint64_t destroy for ExternalAgentRequest(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;

  type metadata accessor for RequestContent(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 3)
  {
    if (EnumCaseMultiPayload != 2)
    {
      if (EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
        v5 = a1 + *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
        v6 = sub_23FB2C764();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      }
      goto LABEL_13;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v7 = sub_23FB2C4B8();
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v7))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
  v8 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1 + v8[5], v7);
  v9 = a1 + v8[6];
  type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_23FB2ED38();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  v11 = a1 + v8[7];
  v12 = sub_23FB2C764();
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v13(v11, v12);
  v14 = a1 + v8[8];
  type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
  v15 = swift_getEnumCaseMultiPayload();
  if (v15 == 1)
    goto LABEL_12;
  if (!v15)
  {
    swift_bridgeObjectRelease();
    v16 = type metadata accessor for RequestContent.TextContent(0);
    v13(v14 + *(int *)(v16 + 20), v12);
  }
LABEL_13:
  v17 = a1 + *(int *)(a2 + 20);
  v18 = sub_23FB2C4B8();
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v17, 1, v18))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  result = *(_QWORD *)(a1 + *(int *)(a2 + 24) + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for ExternalAgentRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  char *v45;

  v6 = type metadata accessor for RequestContent(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v14 = sub_23FB2C4B8();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v14))
      {
        v15 = sub_23F6916B8(&qword_256EA2798);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v14);
      }
      v16 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))((char *)a1 + v16[5], (char *)a2 + v16[5], v14);
      v17 = v16[6];
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v21 = sub_23FB2ED38();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v18, v19, v21);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      v22 = v16[7];
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      v25 = sub_23FB2C764();
      v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
      v26(v23, v24, v25);
      v27 = v16[8];
      v28 = (_QWORD *)((char *)a1 + v27);
      v29 = (_QWORD *)((char *)a2 + v27);
      v30 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
      v31 = swift_getEnumCaseMultiPayload();
      if (v31 == 1)
      {
        *v28 = *v29;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v31)
        {
          memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
          break;
        }
        v32 = v29[1];
        *v28 = *v29;
        v28[1] = v32;
        v33 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
        v45 = (char *)v28 + v33;
        v34 = (char *)v29 + v33;
        swift_bridgeObjectRetain();
        v26(v45, v34, v25);
      }
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      break;
    case 1:
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      v9 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_23FB2C764();
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_20;
  }
  swift_storeEnumTagMultiPayload();
LABEL_20:
  v35 = *(int *)(a3 + 20);
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  v38 = sub_23FB2C4B8();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v37, 1, v38))
  {
    v39 = sub_23F6916B8(&qword_256EA2798);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v36, 0, 1, v38);
  }
  v40 = *(int *)(a3 + 24);
  v41 = (_QWORD *)((char *)a1 + v40);
  v42 = (_QWORD *)((char *)a2 + v40);
  v43 = v42[1];
  if (v43)
  {
    *v41 = *v42;
    v41[1] = v43;
    v41[2] = v42[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v41 = *(_OWORD *)v42;
    v41[2] = v42[2];
  }
  return a1;
}

_QWORD *assignWithCopy for ExternalAgentRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  char *v49;

  if (a1 != a2)
  {
    sub_23F83A7D4((uint64_t)a1, type metadata accessor for RequestContent);
    v6 = type metadata accessor for RequestContent(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 3)
    {
      if (EnumCaseMultiPayload == 2)
      {
        *a1 = *a2;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
          goto LABEL_21;
        }
        *a1 = *a2;
        a1[1] = a2[1];
        v8 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = sub_23FB2C764();
        v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
        swift_bridgeObjectRetain();
        v12(v9, v10, v11);
      }
      goto LABEL_20;
    }
    v13 = sub_23FB2C4B8();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v13))
    {
      v14 = sub_23F6916B8(&qword_256EA2798);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v13);
    }
    v15 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))((char *)a1 + v15[5], (char *)a2 + v15[5], v13);
    v16 = v15[6];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v20 = sub_23FB2ED38();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v17, v18, v20);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    v21 = v15[7];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    v24 = sub_23FB2C764();
    v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
    v25(v22, v23, v24);
    v26 = v15[8];
    v27 = (_QWORD *)((char *)a1 + v26);
    v28 = (_QWORD *)((char *)a2 + v26);
    v29 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
    v30 = swift_getEnumCaseMultiPayload();
    if (v30 == 1)
    {
      *v27 = *v28;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (v30)
      {
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        goto LABEL_20;
      }
      *v27 = *v28;
      v27[1] = v28[1];
      v31 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
      v49 = (char *)v27 + v31;
      v32 = (char *)v28 + v31;
      swift_bridgeObjectRetain();
      v25(v49, v32, v24);
    }
    swift_storeEnumTagMultiPayload();
LABEL_20:
    swift_storeEnumTagMultiPayload();
  }
LABEL_21:
  v33 = *(int *)(a3 + 20);
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = sub_23FB2C4B8();
  v37 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v34, 1, v36);
  v38 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v35, 1, v36);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v34, 0, 1, v36);
      goto LABEL_27;
    }
    goto LABEL_26;
  }
  v39 = *(_QWORD *)(v36 - 8);
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v39 + 8))(v34, v36);
LABEL_26:
    v40 = sub_23F6916B8(&qword_256EA2798);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    goto LABEL_27;
  }
  (*(void (**)(char *, char *, uint64_t))(v39 + 24))(v34, v35, v36);
LABEL_27:
  v41 = *(int *)(a3 + 24);
  v42 = (_QWORD *)((char *)a1 + v41);
  v43 = (_QWORD *)((char *)a2 + v41);
  v44 = *(_QWORD *)((char *)a1 + v41 + 8);
  v45 = v43[1];
  if (v44)
  {
    if (v45)
    {
      *v42 = *v43;
      v42[1] = v43[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v42[2] = v43[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23F857BE0((uint64_t)v42);
      v46 = v43[2];
      *(_OWORD *)v42 = *(_OWORD *)v43;
      v42[2] = v46;
    }
  }
  else if (v45)
  {
    *v42 = *v43;
    v42[1] = v43[1];
    v42[2] = v43[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v47 = *(_OWORD *)v43;
    v42[2] = v43[2];
    *(_OWORD *)v42 = v47;
  }
  return a1;
}

_OWORD *initializeWithTake for ExternalAgentRequest(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;

  v6 = type metadata accessor for RequestContent(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    v12 = sub_23FB2C4B8();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v12))
    {
      v13 = sub_23F6916B8(&qword_256EA2798);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v12);
    }
    v14 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))((char *)a1 + v14[5], (char *)a2 + v14[5], v12);
    v15 = v14[6];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v19 = sub_23FB2ED38();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v16, v17, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    v20 = v14[7];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = sub_23FB2C764();
    v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32);
    v24(v21, v22, v23);
    v25 = v14[8];
    v26 = (_OWORD *)((char *)a1 + v25);
    v27 = (_OWORD *)((char *)a2 + v25);
    v28 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      *v26 = *v27;
      v29 = type metadata accessor for RequestContent.TextContent(0);
      v24((char *)v26 + *(int *)(v29 + 20), (char *)v27 + *(int *)(v29 + 20), v23);
      swift_storeEnumTagMultiPayload();
    }
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_15;
    }
    *a1 = *a2;
    v8 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FB2C764();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  }
  swift_storeEnumTagMultiPayload();
LABEL_15:
  v30 = *(int *)(a3 + 20);
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = sub_23FB2C4B8();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v32, 1, v33))
  {
    v34 = sub_23F6916B8(&qword_256EA2798);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v31, 0, 1, v33);
  }
  v35 = *(int *)(a3 + 24);
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  *(_OWORD *)v36 = *(_OWORD *)v37;
  *((_QWORD *)v36 + 2) = *((_QWORD *)v37 + 2);
  return a1;
}

_OWORD *assignWithTake for ExternalAgentRequest(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;

  if (a1 != a2)
  {
    sub_23F83A7D4((uint64_t)a1, type metadata accessor for RequestContent);
    v6 = type metadata accessor for RequestContent(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      v12 = sub_23FB2C4B8();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v12))
      {
        v13 = sub_23F6916B8(&qword_256EA2798);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v12);
      }
      v14 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))((char *)a1 + v14[5], (char *)a2 + v14[5], v12);
      v15 = v14[6];
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v19 = sub_23FB2ED38();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v16, v17, v19);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      v20 = v14[7];
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      v23 = sub_23FB2C764();
      v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32);
      v24(v21, v22, v23);
      v25 = v14[8];
      v26 = (_OWORD *)((char *)a1 + v25);
      v27 = (_OWORD *)((char *)a2 + v25);
      v28 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        *v26 = *v27;
        v29 = type metadata accessor for RequestContent.TextContent(0);
        v24((char *)v26 + *(int *)(v29 + 20), (char *)v27 + *(int *)(v29 + 20), v23);
        swift_storeEnumTagMultiPayload();
      }
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        goto LABEL_16;
      }
      *a1 = *a2;
      v8 = *(int *)(type metadata accessor for RequestContent.TextContent(0) + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_23FB2C764();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_16:
  v30 = *(int *)(a3 + 20);
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = sub_23FB2C4B8();
  v34 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v31, 1, v33);
  v35 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v32, 1, v33);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v31, 0, 1, v33);
      goto LABEL_22;
    }
    goto LABEL_21;
  }
  v36 = *(_QWORD *)(v33 - 8);
  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v31, v33);
LABEL_21:
    v37 = sub_23F6916B8(&qword_256EA2798);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_22;
  }
  (*(void (**)(char *, char *, uint64_t))(v36 + 40))(v31, v32, v33);
LABEL_22:
  v38 = *(int *)(a3 + 24);
  v39 = (uint64_t)a1 + v38;
  v40 = (char *)a2 + v38;
  if (!*(_QWORD *)((char *)a1 + v38 + 8))
  {
LABEL_26:
    *(_OWORD *)v39 = *(_OWORD *)v40;
    *(_QWORD *)(v39 + 16) = *((_QWORD *)v40 + 2);
    return a1;
  }
  v41 = *((_QWORD *)v40 + 1);
  if (!v41)
  {
    sub_23F857BE0(v39);
    goto LABEL_26;
  }
  *(_QWORD *)v39 = *(_QWORD *)v40;
  *(_QWORD *)(v39 + 8) = v41;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v39 + 16) = *((_QWORD *)v40 + 2);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExternalAgentRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F85C3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char v7;

  type metadata accessor for RequestContent(0);
  sub_23F6F07DC();
  if (v7)
  {
    v5 = sub_23F876D78();
  }
  else
  {
    sub_23F6916B8(&qword_256EA2798);
    sub_23F6F07DC();
    if (!v7)
    {
      sub_23F876D30(*(int *)(a3 + 24));
      sub_23F694C84();
      return;
    }
    v5 = sub_23F876F00();
  }
  sub_23F6F07D0(v5, a2, v6);
}

uint64_t storeEnumTagSinglePayload for ExternalAgentRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F85C444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  type metadata accessor for RequestContent(0);
  sub_23F6F07EC();
  if (v5)
  {
    sub_23F876DBC();
  }
  else
  {
    sub_23F6916B8(&qword_256EA2798);
    sub_23F6F07EC();
    if (!v5)
    {
      sub_23F878BAC(*(int *)(a4 + 24));
      sub_23F694C84();
      return;
    }
    sub_23F876F78();
  }
  sub_23F6F08B0();
  sub_23F6F07C4(v6, v7, v8, v9);
}

void sub_23F85C4B4()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for RequestContent(319);
  if (v0 <= 0x3F)
  {
    sub_23F6DE58C(319, qword_256EA6B68, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t destroy for RequestPrescribedPlan(uint64_t a1)
{
  return sub_23F735FE8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void _s30IntelligenceFlowPlannerSupport21RequestPrescribedPlanOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  v6 = sub_23F6B68CC();
  sub_23F73515C(v6, v7, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_23F694C84();
}

uint64_t assignWithCopy for RequestPrescribedPlan(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23F73515C(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_23F735FE8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for RequestPrescribedPlan(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_23F735FE8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for RequestPrescribedPlan(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7B && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 122;
    }
    else
    {
      v2 = ((*(unsigned __int8 *)(a1 + 16) >> 5) & 0xFFFFFF87 | (8 * ((*(unsigned __int8 *)(a1 + 16) >> 1) & 0xF))) ^ 0x7F;
      if (v2 >= 0x7A)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for RequestPrescribedPlan(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7A)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 123;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7B)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7B)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_BYTE *)(result + 16) = 2 * (((-a2 >> 3) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_23F85C6D8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 5;
}

uint64_t sub_23F85C6E4(uint64_t result)
{
  *(_BYTE *)(result + 16) &= 0x1Fu;
  return result;
}

uint64_t sub_23F85C6F4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = *(_BYTE *)(result + 16) & 1 | (32 * a2);
  return result;
}

void type metadata accessor for RequestPrescribedPlan()
{
  sub_23F694C70();
}

void type metadata accessor for RequestPrescribedPlan.SearchTool()
{
  sub_23F694C70();
}

void type metadata accessor for RequestPrescribedPlan.LowConfidenceKnowledgeTool()
{
  sub_23F694C70();
}

void type metadata accessor for RequestPrescribedPlan.GenerateRichContentTool()
{
  sub_23F694C70();
}

void type metadata accessor for RequestPrescribedPlan.GenerateRichContentFromMediaIntentTool()
{
  sub_23F694C70();
}

void type metadata accessor for RequestPrescribedPlan.GenerateImageIntentTool()
{
  sub_23F694C70();
}

void type metadata accessor for RequestPrescribedPlan.TextTool()
{
  sub_23F694C70();
}

void type metadata accessor for RequestPrescribedPlan.ConvertTool()
{
  sub_23F694C70();
}

void type metadata accessor for RequestPrescribedPlan.DisplayTool()
{
  sub_23F694C70();
}

void _s30IntelligenceFlowPlannerSupport21RequestPrescribedPlanO10SearchToolVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_23F878DE4(a1, a2);
  *(_BYTE *)(v2 + 16) = *(_BYTE *)(v3 + 16);
  swift_bridgeObjectRetain();
  sub_23F694CC8();
}

void _s30IntelligenceFlowPlannerSupport21RequestPrescribedPlanO10SearchToolVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_23F876E6C(a1, a2);
  sub_23F6B5AB0();
  *(_BYTE *)(v3 + 16) = *(_BYTE *)(v2 + 16);
  sub_23F694C84();
}

void _s30IntelligenceFlowPlannerSupport21RequestPrescribedPlanO10SearchToolVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_23F8781F0(a1, a2);
  *(_BYTE *)(v3 + 16) = *(_BYTE *)(v2 + 16);
  sub_23F694CC8();
}

uint64_t _s30IntelligenceFlowPlannerSupport21RequestPrescribedPlanO10SearchToolVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return sub_23F6B6EC0(-1);
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    v2 = *(_QWORD *)(a1 + 8);
    if (v2 >= 0xFFFFFFFF)
      LODWORD(v2) = -1;
  }
  return sub_23F6B6EC0(v2);
}

uint64_t sub_23F85C844(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
      return sub_23F877A3C(result, a2);
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      return sub_23F877A3C(result, a2);
  }
  return result;
}

void type metadata accessor for RequestPrescribedPlan.KnowledgeTool()
{
  sub_23F694C70();
}

uint64_t *initializeBufferWithCopyOfBuffer for ProgramStatement(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t updated;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FB2C764();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Expression(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v13 = *(_QWORD *)v11;
        v14 = *((_QWORD *)v11 + 1);
        v15 = v11[16];
        sub_23F6FEA38(v13, v14, v15);
        *(_QWORD *)v10 = v13;
        *((_QWORD *)v10 + 1) = v14;
        v10[16] = v15;
        goto LABEL_19;
      case 1u:
      case 0xAu:
      case 0xCu:
      case 0xFu:
      case 0x10u:
      case 0x11u:
        v8((uint64_t *)v10, (uint64_t *)v11, v7);
        goto LABEL_19;
      case 2u:
        *v10 = *v11;
        v17 = type metadata accessor for PrefixExpression(0);
        v8((uint64_t *)&v10[*(int *)(v17 + 20)], (uint64_t *)&v11[*(int *)(v17 + 20)], v7);
        goto LABEL_19;
      case 3u:
        *v10 = *v11;
        v18 = type metadata accessor for InfixExpression(0);
        v8((uint64_t *)&v10[*(int *)(v18 + 20)], (uint64_t *)&v11[*(int *)(v18 + 20)], v7);
        v8((uint64_t *)&v10[*(int *)(v18 + 24)], (uint64_t *)&v11[*(int *)(v18 + 24)], v7);
        goto LABEL_19;
      case 4u:
        v8((uint64_t *)v10, (uint64_t *)v11, v7);
        v19 = *(int *)(type metadata accessor for DotExpression(0) + 20);
        v20 = &v10[v19];
        v21 = &v11[v19];
        v22 = *((_QWORD *)v21 + 1);
        *(_QWORD *)v20 = *(_QWORD *)v21;
        *((_QWORD *)v20 + 1) = v22;
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 5u:
        v8((uint64_t *)v10, (uint64_t *)v11, v7);
        v23 = type metadata accessor for IndexExpression(0);
        v8((uint64_t *)&v10[*(int *)(v23 + 20)], (uint64_t *)&v11[*(int *)(v23 + 20)], v7);
        goto LABEL_19;
      case 6u:
        v8((uint64_t *)v10, (uint64_t *)v11, v7);
        updated = type metadata accessor for UpdateParametersExpression(0);
        *(_QWORD *)&v10[*(int *)(updated + 20)] = *(_QWORD *)&v11[*(int *)(updated + 20)];
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 7u:
        v25 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v10 = *(_QWORD *)v11;
        *((_QWORD *)v10 + 1) = v25;
        *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 8u:
      case 0xDu:
        *(_QWORD *)v10 = *(_QWORD *)v11;
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 9u:
        v8((uint64_t *)v10, (uint64_t *)v11, v7);
        v26 = type metadata accessor for PickExpression(0);
        *(_QWORD *)&v10[*(int *)(v26 + 20)] = *(_QWORD *)&v11[*(int *)(v26 + 20)];
        goto LABEL_19;
      case 0xBu:
        v27 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v10 = *(_QWORD *)v11;
        *((_QWORD *)v10 + 1) = v27;
        *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 0xEu:
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v7))
        {
          v28 = sub_23F6916B8(&qword_256EA49D8);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          v8((uint64_t *)v10, (uint64_t *)v11, v7);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v10, 0, 1, v7);
        }
LABEL_19:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        break;
    }
    v29 = *(int *)(a3 + 24);
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    v32 = sub_23FB2ED5C();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v31, 1, v32))
    {
      v33 = sub_23F6916B8(&qword_256EA6550);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v30, 0, 1, v32);
    }
  }
  return a1;
}

uint64_t destroy for ProgramStatement(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v4 = sub_23FB2C764();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  type metadata accessor for Expression(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      sub_23F6FEA10(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_BYTE *)(v6 + 16));
      break;
    case 1u:
    case 9u:
    case 0xAu:
    case 0xCu:
    case 0xFu:
    case 0x10u:
    case 0x11u:
      goto LABEL_2;
    case 2u:
      v8 = type metadata accessor for PrefixExpression(0);
      goto LABEL_8;
    case 3u:
      v9 = type metadata accessor for InfixExpression(0);
      v5(v6 + *(int *)(v9 + 20), v4);
      v10 = *(int *)(v9 + 24);
      goto LABEL_9;
    case 4u:
      v5(v6, v4);
      type metadata accessor for DotExpression(0);
      goto LABEL_13;
    case 5u:
      v5(v6, v4);
      v8 = type metadata accessor for IndexExpression(0);
LABEL_8:
      v10 = *(int *)(v8 + 20);
LABEL_9:
      v7 = v6 + v10;
      goto LABEL_10;
    case 6u:
      v5(v6, v4);
      type metadata accessor for UpdateParametersExpression(0);
      goto LABEL_13;
    case 7u:
      swift_bridgeObjectRelease();
      goto LABEL_13;
    case 8u:
    case 0xBu:
    case 0xDu:
LABEL_13:
      swift_bridgeObjectRelease();
      break;
    case 0xEu:
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v6, 1, v4))
      {
LABEL_2:
        v7 = v6;
LABEL_10:
        v5(v7, v4);
      }
      break;
    default:
      break;
  }
  v11 = a1 + *(int *)(a2 + 24);
  v12 = sub_23FB2ED5C();
  result = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v11, 1, v12);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  return result;
}

uint64_t initializeWithCopy for ProgramStatement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t updated;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;

  v6 = sub_23FB2C764();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (uint64_t *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for Expression(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v12 = *(_QWORD *)v10;
      v13 = *((_QWORD *)v10 + 1);
      v14 = v10[16];
      sub_23F6FEA38(v12, v13, v14);
      *v9 = v12;
      v9[1] = v13;
      *((_BYTE *)v9 + 16) = v14;
      goto LABEL_17;
    case 1u:
    case 0xAu:
    case 0xCu:
    case 0xFu:
    case 0x10u:
    case 0x11u:
      v7((uint64_t)v9, (uint64_t)v10, v6);
      goto LABEL_17;
    case 2u:
      *(_BYTE *)v9 = *v10;
      v15 = type metadata accessor for PrefixExpression(0);
      v7((uint64_t)v9 + *(int *)(v15 + 20), (uint64_t)&v10[*(int *)(v15 + 20)], v6);
      goto LABEL_17;
    case 3u:
      *(_BYTE *)v9 = *v10;
      v16 = type metadata accessor for InfixExpression(0);
      v7((uint64_t)v9 + *(int *)(v16 + 20), (uint64_t)&v10[*(int *)(v16 + 20)], v6);
      v7((uint64_t)v9 + *(int *)(v16 + 24), (uint64_t)&v10[*(int *)(v16 + 24)], v6);
      goto LABEL_17;
    case 4u:
      v7((uint64_t)v9, (uint64_t)v10, v6);
      v17 = *(int *)(type metadata accessor for DotExpression(0) + 20);
      v18 = (uint64_t *)((char *)v9 + v17);
      v19 = &v10[v17];
      v20 = *((_QWORD *)v19 + 1);
      *v18 = *(_QWORD *)v19;
      v18[1] = v20;
      swift_bridgeObjectRetain();
      goto LABEL_17;
    case 5u:
      v7((uint64_t)v9, (uint64_t)v10, v6);
      v21 = type metadata accessor for IndexExpression(0);
      v7((uint64_t)v9 + *(int *)(v21 + 20), (uint64_t)&v10[*(int *)(v21 + 20)], v6);
      goto LABEL_17;
    case 6u:
      v7((uint64_t)v9, (uint64_t)v10, v6);
      updated = type metadata accessor for UpdateParametersExpression(0);
      *(uint64_t *)((char *)v9 + *(int *)(updated + 20)) = *(_QWORD *)&v10[*(int *)(updated + 20)];
      swift_bridgeObjectRetain();
      goto LABEL_17;
    case 7u:
      v23 = *((_QWORD *)v10 + 1);
      *v9 = *(_QWORD *)v10;
      v9[1] = v23;
      v9[2] = *((_QWORD *)v10 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_17;
    case 8u:
    case 0xDu:
      *v9 = *(_QWORD *)v10;
      swift_bridgeObjectRetain();
      goto LABEL_17;
    case 9u:
      v7((uint64_t)v9, (uint64_t)v10, v6);
      v24 = type metadata accessor for PickExpression(0);
      *(uint64_t *)((char *)v9 + *(int *)(v24 + 20)) = *(_QWORD *)&v10[*(int *)(v24 + 20)];
      goto LABEL_17;
    case 0xBu:
      v25 = *((_QWORD *)v10 + 1);
      *v9 = *(_QWORD *)v10;
      v9[1] = v25;
      *((_WORD *)v9 + 8) = *((_WORD *)v10 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_17;
    case 0xEu:
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v6))
      {
        v26 = sub_23F6916B8(&qword_256EA49D8);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v9, (uint64_t)v10, v6);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v6);
      }
LABEL_17:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      break;
  }
  v27 = *(int *)(a3 + 24);
  v28 = (void *)(a1 + v27);
  v29 = (const void *)(a2 + v27);
  v30 = sub_23FB2ED5C();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v29, 1, v30))
  {
    v31 = sub_23F6916B8(&qword_256EA6550);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v28, 0, 1, v30);
  }
  return a1;
}

uint64_t assignWithCopy for ProgramStatement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  void (*v21)(uint64_t *, char *, uint64_t);
  uint64_t v22;
  uint64_t updated;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;

  v6 = sub_23FB2C764();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)(a1 + v8);
    v10 = (char *)(a2 + v8);
    sub_23F83A7D4(a1 + v8, type metadata accessor for Expression);
    v11 = type metadata accessor for Expression(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v12 = *(_QWORD *)v10;
        v13 = *((_QWORD *)v10 + 1);
        v14 = v10[16];
        sub_23F6FEA38(v12, v13, v14);
        *v9 = v12;
        v9[1] = v13;
        *((_BYTE *)v9 + 16) = v14;
        goto LABEL_18;
      case 1u:
      case 0xAu:
      case 0xCu:
      case 0xFu:
      case 0x10u:
      case 0x11u:
        (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 16))(v9, v10, v6);
        goto LABEL_18;
      case 2u:
        *(_BYTE *)v9 = *v10;
        v15 = type metadata accessor for PrefixExpression(0);
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v9 + *(int *)(v15 + 20), &v10[*(int *)(v15 + 20)], v6);
        goto LABEL_18;
      case 3u:
        *(_BYTE *)v9 = *v10;
        v16 = type metadata accessor for InfixExpression(0);
        v17 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
        v17((char *)v9 + *(int *)(v16 + 20), &v10[*(int *)(v16 + 20)], v6);
        v17((char *)v9 + *(int *)(v16 + 24), &v10[*(int *)(v16 + 24)], v6);
        goto LABEL_18;
      case 4u:
        (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 16))(v9, v10, v6);
        v18 = *(int *)(type metadata accessor for DotExpression(0) + 20);
        v19 = (uint64_t *)((char *)v9 + v18);
        v20 = &v10[v18];
        *v19 = *(_QWORD *)v20;
        v19[1] = *((_QWORD *)v20 + 1);
        swift_bridgeObjectRetain();
        goto LABEL_18;
      case 5u:
        v21 = *(void (**)(uint64_t *, char *, uint64_t))(v7 + 16);
        v21(v9, v10, v6);
        v22 = type metadata accessor for IndexExpression(0);
        v21((uint64_t *)((char *)v9 + *(int *)(v22 + 20)), &v10[*(int *)(v22 + 20)], v6);
        goto LABEL_18;
      case 6u:
        (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 16))(v9, v10, v6);
        updated = type metadata accessor for UpdateParametersExpression(0);
        *(uint64_t *)((char *)v9 + *(int *)(updated + 20)) = *(_QWORD *)&v10[*(int *)(updated + 20)];
        swift_bridgeObjectRetain();
        goto LABEL_18;
      case 7u:
        *v9 = *(_QWORD *)v10;
        v9[1] = *((_QWORD *)v10 + 1);
        v9[2] = *((_QWORD *)v10 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_18;
      case 8u:
      case 0xDu:
        *v9 = *(_QWORD *)v10;
        swift_bridgeObjectRetain();
        goto LABEL_18;
      case 9u:
        (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 16))(v9, v10, v6);
        v24 = type metadata accessor for PickExpression(0);
        *(uint64_t *)((char *)v9 + *(int *)(v24 + 20)) = *(_QWORD *)&v10[*(int *)(v24 + 20)];
        goto LABEL_18;
      case 0xBu:
        *v9 = *(_QWORD *)v10;
        v9[1] = *((_QWORD *)v10 + 1);
        *((_BYTE *)v9 + 16) = v10[16];
        *((_BYTE *)v9 + 17) = v10[17];
        swift_bridgeObjectRetain();
        goto LABEL_18;
      case 0xEu:
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v6))
        {
          v25 = sub_23F6916B8(&qword_256EA49D8);
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 16))(v9, v10, v6);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v6);
        }
LABEL_18:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        break;
    }
  }
  v26 = *(int *)(a3 + 24);
  v27 = (void *)(a1 + v26);
  v28 = (const void *)(a2 + v26);
  v29 = sub_23FB2ED5C();
  v30 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v27, 1, v29);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v28, 1, v29);
  if (!v30)
  {
    v32 = *(_QWORD *)(v29 - 8);
    if (!v31)
    {
      (*(void (**)(void *, const void *, uint64_t))(v32 + 24))(v27, v28, v29);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v32 + 8))(v27, v29);
    goto LABEL_24;
  }
  if (v31)
  {
LABEL_24:
    v33 = sub_23F6916B8(&qword_256EA6550);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v27, 0, 1, v29);
  return a1;
}

_BYTE *initializeWithTake for ProgramStatement(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t updated;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_23FB2C764();
  v7 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for Expression(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 0xAu:
    case 0xCu:
    case 0xFu:
    case 0x10u:
    case 0x11u:
      v7(v9, v10, v6);
      goto LABEL_13;
    case 2u:
      *v9 = *v10;
      v12 = type metadata accessor for PrefixExpression(0);
      v7(&v9[*(int *)(v12 + 20)], &v10[*(int *)(v12 + 20)], v6);
      goto LABEL_13;
    case 3u:
      *v9 = *v10;
      v13 = type metadata accessor for InfixExpression(0);
      v7(&v9[*(int *)(v13 + 20)], &v10[*(int *)(v13 + 20)], v6);
      v7(&v9[*(int *)(v13 + 24)], &v10[*(int *)(v13 + 24)], v6);
      goto LABEL_13;
    case 4u:
      v7(v9, v10, v6);
      v14 = type metadata accessor for DotExpression(0);
      *(_OWORD *)&v9[*(int *)(v14 + 20)] = *(_OWORD *)&v10[*(int *)(v14 + 20)];
      goto LABEL_13;
    case 5u:
      v7(v9, v10, v6);
      v15 = type metadata accessor for IndexExpression(0);
      v7(&v9[*(int *)(v15 + 20)], &v10[*(int *)(v15 + 20)], v6);
      goto LABEL_13;
    case 6u:
      v7(v9, v10, v6);
      updated = type metadata accessor for UpdateParametersExpression(0);
      *(_QWORD *)&v9[*(int *)(updated + 20)] = *(_QWORD *)&v10[*(int *)(updated + 20)];
      goto LABEL_13;
    case 9u:
      v7(v9, v10, v6);
      v17 = type metadata accessor for PickExpression(0);
      *(_QWORD *)&v9[*(int *)(v17 + 20)] = *(_QWORD *)&v10[*(int *)(v17 + 20)];
      goto LABEL_13;
    case 0xEu:
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v6))
      {
        v18 = sub_23F6916B8(&qword_256EA49D8);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        v7(v9, v10, v6);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v6);
      }
LABEL_13:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      break;
  }
  v19 = *(int *)(a3 + 24);
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = sub_23FB2ED5C();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v21, 1, v22))
  {
    v23 = sub_23F6916B8(&qword_256EA6550);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v20, 0, 1, v22);
  }
  return a1;
}

uint64_t assignWithTake for ProgramStatement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v15;
  void (*v16)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v17;
  uint64_t updated;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;

  v6 = sub_23FB2C764();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 20);
    v9 = (_BYTE *)(a1 + v8);
    v10 = (_BYTE *)(a2 + v8);
    sub_23F83A7D4(a1 + v8, type metadata accessor for Expression);
    v11 = type metadata accessor for Expression(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 0xAu:
      case 0xCu:
      case 0xFu:
      case 0x10u:
      case 0x11u:
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v9, v10, v6);
        goto LABEL_14;
      case 2u:
        *v9 = *v10;
        v12 = type metadata accessor for PrefixExpression(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(&v9[*(int *)(v12 + 20)], &v10[*(int *)(v12 + 20)], v6);
        goto LABEL_14;
      case 3u:
        *v9 = *v10;
        v13 = type metadata accessor for InfixExpression(0);
        v14 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32);
        v14(&v9[*(int *)(v13 + 20)], &v10[*(int *)(v13 + 20)], v6);
        v14(&v9[*(int *)(v13 + 24)], &v10[*(int *)(v13 + 24)], v6);
        goto LABEL_14;
      case 4u:
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v9, v10, v6);
        v15 = type metadata accessor for DotExpression(0);
        *(_OWORD *)&v9[*(int *)(v15 + 20)] = *(_OWORD *)&v10[*(int *)(v15 + 20)];
        goto LABEL_14;
      case 5u:
        v16 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32);
        v16(v9, v10, v6);
        v17 = type metadata accessor for IndexExpression(0);
        v16(&v9[*(int *)(v17 + 20)], &v10[*(int *)(v17 + 20)], v6);
        goto LABEL_14;
      case 6u:
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v9, v10, v6);
        updated = type metadata accessor for UpdateParametersExpression(0);
        *(_QWORD *)&v9[*(int *)(updated + 20)] = *(_QWORD *)&v10[*(int *)(updated + 20)];
        goto LABEL_14;
      case 9u:
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v9, v10, v6);
        v19 = type metadata accessor for PickExpression(0);
        *(_QWORD *)&v9[*(int *)(v19 + 20)] = *(_QWORD *)&v10[*(int *)(v19 + 20)];
        goto LABEL_14;
      case 0xEu:
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v6))
        {
          v20 = sub_23F6916B8(&qword_256EA49D8);
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v9, v10, v6);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v6);
        }
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        break;
    }
  }
  v21 = *(int *)(a3 + 24);
  v22 = (void *)(a1 + v21);
  v23 = (const void *)(a2 + v21);
  v24 = sub_23FB2ED5C();
  v25 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v24);
  v26 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v23, 1, v24);
  if (!v25)
  {
    v27 = *(_QWORD *)(v24 - 8);
    if (!v26)
    {
      (*(void (**)(void *, const void *, uint64_t))(v27 + 40))(v22, v23, v24);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v22, v24);
    goto LABEL_20;
  }
  if (v26)
  {
LABEL_20:
    v28 = sub_23F6916B8(&qword_256EA6550);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v22, 0, 1, v24);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProgramStatement()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F85E124(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  sub_23F6B58C8();
  sub_23F6F07DC();
  if (v6)
  {
    v4 = sub_23F876D78();
  }
  else
  {
    type metadata accessor for Expression(0);
    sub_23F6F07DC();
    if (v6)
    {
      sub_23F6F0B94();
    }
    else
    {
      sub_23F6916B8(&qword_256EA6550);
      sub_23F6F0B08();
    }
    v4 = a1 + v7;
  }
  return sub_23F6F07D0(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for ProgramStatement()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F85E198()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F6B58C8();
  sub_23F6F07EC();
  if (v0)
  {
    sub_23F876DBC();
  }
  else
  {
    type metadata accessor for Expression(0);
    sub_23F6F07EC();
    if (v0)
    {
      sub_23F6F0BC4();
    }
    else
    {
      sub_23F6916B8(&qword_256EA6550);
      sub_23F6F0BD0();
    }
  }
  sub_23F6F08B0();
  return sub_23F6F07C4(v1, v2, v3, v4);
}

void sub_23F85E204()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23FB2C764();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Expression(319);
    if (v1 <= 0x3F)
    {
      sub_23F6DE58C(319, qword_256EADAB8, (void (*)(uint64_t))MEMORY[0x24BEB9AB8]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t destroy for SpeechQuery()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SpeechQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SpeechQuery(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SpeechQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SpeechQuery(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SpeechQuery(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SpeechQuery()
{
  sub_23F694C70();
}

_QWORD *initializeBufferWithCopyOfBuffer for TextQuery(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = *(int *)(a3 + 24);
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_23FB2C764();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 28);
    v14 = (_QWORD *)((char *)v4 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for TextQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TextQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FB2C764();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 28);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TextQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 28);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for TextQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t assignWithTake for TextQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 28);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TextQuery()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F85E80C()
{
  sub_23F863320();
}

uint64_t storeEnumTagSinglePayload for TextQuery()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F85E824()
{
  sub_23F863380();
}

uint64_t sub_23F85E830()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FB2C764();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for ExecutionStepResults()
{
  sub_23F694C70();
}

uint64_t dispatch thunk of Executable.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of Executable.variableName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of Executable.variableDependencies.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolParameterValue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23FB2ED38();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ToolParameterValue(uint64_t a1)
{
  uint64_t v2;

  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_bridgeObjectRelease();
  v2 = sub_23FB2ED38();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

_QWORD *initializeWithCopy for ToolParameterValue(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_23FB2ED38();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for ToolParameterValue(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_23F83A7D4((uint64_t)a1, type metadata accessor for ToolParameterValue);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_23FB2ED38();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void _s30IntelligenceFlowPlannerSupport14RequestContentO22SystemPromptResolutionV10UserActionOwtk_0(uint64_t a1)
{
  uint64_t v2;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_23F6B6634();
    sub_23F78F1E4(a1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32));
    sub_23F878690();
  }
  else
  {
    sub_23F87832C();
  }
  sub_23F694C84();
}

void assignWithTake for ToolParameterValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F85EB94(a1, a2, a3, type metadata accessor for ToolParameterValue);
}

void sub_23F85EB94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v5;

  if (a1 != a2)
  {
    sub_23F83A7D4(a1, a4);
    if (sub_23F876E58() == 1)
    {
      v5 = sub_23F6B6634();
      sub_23F78F1E4(a1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32));
      sub_23F878690();
    }
    else
    {
      sub_23F87832C();
    }
  }
  sub_23F694C84();
}

uint64_t sub_23F85EC08()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FB2ED38();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for Action(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FB2C764();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (_QWORD *)((char *)a1 + v9);
    v14 = (_QWORD *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = a3[8];
    v18 = (_QWORD *)((char *)a1 + v16);
    v19 = (_QWORD *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    *((_BYTE *)a1 + v17) = *((_BYTE *)a2 + v17);
    v21 = a3[10];
    *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
    v22 = (_QWORD *)((char *)a1 + v21);
    v23 = (_QWORD *)((char *)a2 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for Action(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Action(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v15);
  v18 = (_QWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  v20 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Action(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[10];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for Action(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v9 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  return a1;
}

uint64_t assignWithTake for Action(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v22) = *(_QWORD *)(a2 + v22);
  swift_bridgeObjectRelease();
  v23 = a3[10];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (uint64_t *)(a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Action()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F85F174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F86A744(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

uint64_t storeEnumTagSinglePayload for Action()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F85F18C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F86A7A8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

uint64_t sub_23F85F198()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FB2C764();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Action.ParameterValue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    type metadata accessor for ToolParameterValue(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_23FB2ED38();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    v10 = *(int *)(a3 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_23FB2D040();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13))
    {
      v14 = sub_23F6916B8(&qword_256EA2750);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v11, 0, 1, v13);
    }
  }
  return a1;
}

uint64_t destroy for Action.ParameterValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  type metadata accessor for ToolParameterValue(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_23FB2ED38();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_23FB2D040();
  result = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v5, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return result;
}

_QWORD *initializeWithCopy for Action.ParameterValue(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  type metadata accessor for ToolParameterValue(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_23FB2ED38();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_23FB2D040();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F6916B8(&qword_256EA2750);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
  }
  return a1;
}

_QWORD *assignWithCopy for Action.ParameterValue(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  if (a1 != a2)
  {
    sub_23F83A7D4((uint64_t)a1, type metadata accessor for ToolParameterValue);
    type metadata accessor for ToolParameterValue(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23FB2ED38();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23FB2D040();
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v10);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    v13 = *(_QWORD *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_11;
  }
  if (v12)
  {
LABEL_11:
    v14 = sub_23F6916B8(&qword_256EA2750);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
  return a1;
}

char *initializeWithTake for Action.ParameterValue(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for ToolParameterValue(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_23FB2ED38();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_23FB2D040();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F6916B8(&qword_256EA2750);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
  }
  return a1;
}

char *assignWithTake for Action.ParameterValue(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;

  if (a1 != a2)
  {
    sub_23F83A7D4((uint64_t)a1, type metadata accessor for ToolParameterValue);
    v6 = type metadata accessor for ToolParameterValue(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_23FB2ED38();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_23FB2D040();
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v11);
  v13 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11);
  if (!v12)
  {
    v14 = *(_QWORD *)(v11 - 8);
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v11);
    goto LABEL_10;
  }
  if (v13)
  {
LABEL_10:
    v15 = sub_23F6916B8(&qword_256EA2750);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for Action.ParameterValue()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F85F958()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_23F877F48();
  type metadata accessor for ToolParameterValue(v1);
  sub_23F6F07DC();
  if (v2)
  {
    v3 = sub_23F876D78();
  }
  else
  {
    sub_23F6916B8(&qword_256EA2750);
    v3 = sub_23F876F00();
  }
  return sub_23F6F07D0(v3, v0, v4);
}

uint64_t storeEnumTagSinglePayload for Action.ParameterValue()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F85F9A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F86527C(a1, a2, a3, a4, type metadata accessor for ToolParameterValue);
}

void sub_23F85F9BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F8652EC(a1, a2, a3, type metadata accessor for ToolParameterValue, qword_256EADD40, (void (*)(uint64_t))MEMORY[0x24BE53158]);
}

uint64_t *initializeBufferWithCopyOfBuffer for ActionCancellation(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t *, uint64_t *, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FB2C764();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EA49D8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))((char *)a1 + *(int *)(a3 + 20), (char *)a2 + *(int *)(a3 + 20), v7);
    }
    else
    {
      v10 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
      v10(a1, a2, v7);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
      v10((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    }
  }
  return a1;
}

uint64_t destroy for ActionCancellation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  void (*v9)(uint64_t, uint64_t);

  v4 = sub_23FB2C764();
  v5 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4);
  v6 = *(_QWORD *)(v4 - 8);
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  if (!v5)
  {
    v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v7(a1, v4);
    v7 = v9;
  }
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + *(int *)(a2 + 20), v4);
}

char *initializeWithCopy for ActionCancellation(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  v6 = sub_23FB2C764();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA49D8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  }
  else
  {
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
    v8(a1, a2, v6);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
    v8(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  }
  return a1;
}

char *assignWithCopy for ActionCancellation(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23FB2C764();
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (v8)
    {
      v9 = sub_23F6916B8(&qword_256EA49D8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      v10 = *(_QWORD *)(v6 - 8);
    }
    else
    {
      v10 = *(_QWORD *)(v6 - 8);
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(a1, a2, v6);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
    }
  }
  else
  {
    v10 = *(_QWORD *)(v6 - 8);
    if (v8)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(a1, v6);
      v11 = sub_23F6916B8(&qword_256EA49D8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(a1, a2, v6);
    }
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  return a1;
}

char *initializeWithTake for ActionCancellation(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  v6 = sub_23FB2C764();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA49D8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  }
  else
  {
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
    v8(a1, a2, v6);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
    v8(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  }
  return a1;
}

char *assignWithTake for ActionCancellation(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23FB2C764();
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (v8)
    {
      v9 = sub_23F6916B8(&qword_256EA49D8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      v10 = *(_QWORD *)(v6 - 8);
    }
    else
    {
      v10 = *(_QWORD *)(v6 - 8);
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v6);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
    }
  }
  else
  {
    v10 = *(_QWORD *)(v6 - 8);
    if (v8)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(a1, v6);
      v11 = sub_23F6916B8(&qword_256EA49D8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(a1, a2, v6);
    }
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionCancellation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F85FF34()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F6B6B7C();
  sub_23F6916B8(&qword_256EA49D8);
  sub_23F6F07DC();
  if (v1)
  {
    v2 = sub_23F876D78();
  }
  else
  {
    sub_23F6B58C8();
    v2 = sub_23F876F00();
  }
  return sub_23F6F07D0(v2, v0, v3);
}

uint64_t storeEnumTagSinglePayload for ActionCancellation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F85FF88()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F877568();
  sub_23F6916B8(&qword_256EA49D8);
  sub_23F6F07EC();
  if (v0)
  {
    sub_23F876DBC();
  }
  else
  {
    sub_23F6B58C8();
    sub_23F876F78();
  }
  sub_23F6F08B0();
  return sub_23F6F07C4(v1, v2, v3, v4);
}

void sub_23F85FFD0()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F6DE58C(319, qword_256EA5318, (void (*)(uint64_t))MEMORY[0x24BE52140]);
  if (v0 <= 0x3F)
  {
    sub_23FB2C764();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ClientAction(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FB2C764();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    v13 = a3[7];
    v14 = a3[8];
    v15 = (uint64_t *)((char *)a1 + v13);
    v16 = (uint64_t *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (uint64_t *)((char *)a1 + v14);
    v19 = (uint64_t *)((char *)a2 + v14);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ClientAction(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ClientAction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v12 = a3[7];
  v13 = a3[8];
  v14 = (_QWORD *)(a1 + v12);
  v15 = (_QWORD *)(a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)(a1 + v13);
  v18 = (_QWORD *)(a2 + v13);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ClientAction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[7];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[8];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ClientAction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for ClientAction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientAction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F860508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F86A744(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

uint64_t storeEnumTagSinglePayload for ClientAction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F860520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F86A7A8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

uint64_t sub_23F86052C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FB2C764();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ClientAction.ShimParameterResolution(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = sub_23FB2ED38();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for ClientAction.UnresolvedParameterValue(0);
      *(uint64_t *)((char *)a1 + *(int *)(v8 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 20));
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ClientAction.ShimParameterResolution(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t result;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v3 = sub_23FB2ED38();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for ClientAction.UnresolvedParameterValue(0);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ClientAction.ShimParameterResolution(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = sub_23FB2ED38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    v6 = type metadata accessor for ClientAction.UnresolvedParameterValue(0);
    *(_QWORD *)(a1 + *(int *)(v6 + 20)) = *(_QWORD *)(a2 + *(int *)(v6 + 20));
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for ClientAction.ShimParameterResolution(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23F83A7D4(a1, type metadata accessor for ClientAction.ShimParameterResolution);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = sub_23FB2ED38();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      v6 = type metadata accessor for ClientAction.UnresolvedParameterValue(0);
      *(_QWORD *)(a1 + *(int *)(v6 + 20)) = *(_QWORD *)(a2 + *(int *)(v6 + 20));
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for ClientAction.ShimParameterResolution(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = sub_23FB2ED38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    v6 = type metadata accessor for ClientAction.UnresolvedParameterValue(0);
    *(_QWORD *)(a1 + *(int *)(v6 + 20)) = *(_QWORD *)(a2 + *(int *)(v6 + 20));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for ClientAction.ShimParameterResolution(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23F83A7D4(a1, type metadata accessor for ClientAction.ShimParameterResolution);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = sub_23FB2ED38();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      v6 = type metadata accessor for ClientAction.UnresolvedParameterValue(0);
      *(_QWORD *)(a1 + *(int *)(v6 + 20)) = *(_QWORD *)(a2 + *(int *)(v6 + 20));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_23F860970()
{
  sub_23F866C50();
}

void initializeBufferWithCopyOfBuffer for ClientAction.UnresolvedParameterValue(uint64_t a1, uint64_t *a2)
{
  sub_23F861674(a1, a2);
}

uint64_t destroy for ClientAction.UnresolvedParameterValue(uint64_t a1, uint64_t a2)
{
  return sub_23F8616D4(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18]);
}

void initializeWithCopy for ClientAction.UnresolvedParameterValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F8616F8(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18]);
}

void assignWithCopy for ClientAction.UnresolvedParameterValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F86173C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18]);
}

void initializeWithTake for ClientAction.UnresolvedParameterValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F861788(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18]);
}

void assignWithTake for ClientAction.UnresolvedParameterValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F8617C8(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18]);
}

uint64_t getEnumTagSinglePayload for ClientAction.UnresolvedParameterValue()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F8609D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F861828(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18]);
}

uint64_t storeEnumTagSinglePayload for ClientAction.UnresolvedParameterValue()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F8609E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F861888(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18]);
}

void sub_23F8609F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F8618D4(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9A18]);
}

void initializeBufferWithCopyOfBuffer for QueryStep(uint64_t a1, uint64_t *a2)
{
  sub_23F861674(a1, a2);
}

uint64_t destroy for QueryStep(uint64_t a1, uint64_t a2)
{
  return sub_23F8616D4(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

void initializeWithCopy for QueryStep(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F8616F8(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

void assignWithCopy for QueryStep(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F86173C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

void initializeWithTake for QueryStep(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F861788(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

void assignWithTake for QueryStep(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F8617C8(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

uint64_t getEnumTagSinglePayload for QueryStep()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F860A54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F861828(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

uint64_t storeEnumTagSinglePayload for QueryStep()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F860A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F861888(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

void sub_23F860A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F8618D4(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140]);
}

uint64_t initializeBufferWithCopyOfBuffer for ParameterQuery(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v6 = sub_23FB2C764();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = type metadata accessor for ActionParameterContext(0);
    v8 = *(int *)(v7 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = *(int *)(v7 + 24);
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    type metadata accessor for QueryData(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = (char *)&loc_23F860B60 + 4 * byte_23FB63910[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v17 = *a2;
  *a1 = *a2;
  v18 = v17 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v18;
}

uint64_t destroy for ParameterQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for ActionParameterContext(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 20);
  type metadata accessor for QueryData(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 3u:
      goto LABEL_6;
    case 2u:
      type metadata accessor for PropertyQuery(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
      {
LABEL_6:
        swift_bridgeObjectRelease();
      }
      else if (!EnumCaseMultiPayload)
      {
        swift_bridgeObjectRelease();
        v7 = v5 + *(int *)(type metadata accessor for QueryPredicate(0) + 24);
        v8 = sub_23FB2ED38();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
      }
      break;
    default:
      break;
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void initializeWithCopy for ParameterQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;

  v4 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = type metadata accessor for ActionParameterContext(0);
  v6 = *(int *)(v5 + 20);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  v10 = *(int *)(v5 + 24);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  type metadata accessor for QueryData(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = (char *)sub_23F860EA4 + 4 * byte_23FB63918[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23F860EA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v5 = v4[1];
  *v3 = *v4;
  v3[1] = v5;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  v6 = *(int *)(v2 + 28);
  *(_QWORD *)(v0 + *(int *)(v2 + 24)) = *(_QWORD *)(v1 + *(int *)(v2 + 24));
  v7 = (_QWORD *)(v0 + v6);
  v8 = (_QWORD *)(v1 + v6);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t assignWithCopy for ParameterQuery(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = type metadata accessor for ActionParameterContext(0);
  v8 = *(int *)(v7 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = *(int *)(v7 + 24);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    sub_23F83A7D4(a1 + a3[5], type metadata accessor for QueryData);
    type metadata accessor for QueryData(0);
    v14 = (char *)&loc_23F8610CC + 4 * byte_23FB6391C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ParameterQuery(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t Data;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for ActionParameterContext(0);
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  *(_OWORD *)(a1 + *(int *)(v7 + 24)) = *(_OWORD *)(a2 + *(int *)(v7 + 24));
  v8 = a3[5];
  v9 = (_BYTE *)(a1 + v8);
  v10 = (_BYTE *)(a2 + v8);
  Data = type metadata accessor for QueryData(0);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v12 = type metadata accessor for PropertyQuery(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v9 = *(_OWORD *)v10;
      v9[16] = v10[16];
      v13 = *(int *)(type metadata accessor for QueryPredicate(0) + 24);
      v14 = &v9[v13];
      v15 = &v10[v13];
      v16 = sub_23FB2ED38();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(Data - 8) + 64));
  }
  v17 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  return a1;
}

uint64_t assignWithTake for ParameterQuery(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t Data;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for ActionParameterContext(0);
  v8 = *(int *)(v7 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v13 = *(int *)(v7 + 24);
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v18 = a3[5];
    v19 = (_BYTE *)(a1 + v18);
    v20 = (_BYTE *)(a2 + v18);
    sub_23F83A7D4(a1 + v18, type metadata accessor for QueryData);
    Data = type metadata accessor for QueryData(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v22 = type metadata accessor for PropertyQuery(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v19 = *(_OWORD *)v20;
        v19[16] = v20[16];
        v23 = *(int *)(type metadata accessor for QueryPredicate(0) + 24);
        v24 = &v19[v23];
        v25 = &v20[v23];
        v26 = sub_23FB2ED38();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(Data - 8) + 64));
    }
  }
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  v27 = a3[7];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  v31 = *v29;
  v30 = v29[1];
  *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ParameterQuery()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F86155C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = sub_23F877F48();
  type metadata accessor for ActionParameterContext(v3);
  sub_23F6F07DC();
  if (v6)
  {
    v4 = sub_23F876D78();
  }
  else
  {
    type metadata accessor for QueryData(0);
    sub_23F6F07DC();
    if (!v6)
    {
      sub_23F6F083C(*(_QWORD *)(v1 + *(int *)(v2 + 24)));
      sub_23F694C84();
      return;
    }
    v4 = sub_23F876F00();
  }
  sub_23F6F07D0(v4, v0, v5);
}

uint64_t storeEnumTagSinglePayload for ParameterQuery()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F8615C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F869108(a1, a2, a3, a4, type metadata accessor for ActionParameterContext, (void (*)(_QWORD))type metadata accessor for QueryData);
}

uint64_t sub_23F8615D8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for ActionParameterContext(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for QueryData(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void sub_23F861674(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  int v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F877920();
  if ((v8 & 0x20000) != 0)
  {
    sub_23F876A58(*a2);
  }
  else
  {
    v9 = v6;
    v10 = sub_23F876A04(v4, v5, v6, v7);
    sub_23F7B0990(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16));
    *(_QWORD *)(v2 + *(int *)(v9 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v9 + 20));
    swift_bridgeObjectRetain();
  }
  sub_23F694C84();
}

uint64_t sub_23F8616D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_23F6F59F8(a1, a2, a3);
  sub_23F78F1B0(v3);
  return sub_23F876798();
}

void sub_23F8616F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = sub_23F7B0794(a1, a2, a3, a4);
  sub_23F7B0990(v6, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16));
  *(_QWORD *)(v6 + *(int *)(v4 + 20)) = *(_QWORD *)(v5 + *(int *)(v4 + 20));
  swift_bridgeObjectRetain();
  sub_23F694C84();
}

void sub_23F86173C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = sub_23F7B0794(a1, a2, a3, a4);
  sub_23F7B0990(v6, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24));
  *(_QWORD *)(v6 + *(int *)(v4 + 20)) = *(_QWORD *)(v5 + *(int *)(v4 + 20));
  swift_bridgeObjectRetain();
  sub_23F693E04();
  sub_23F694C84();
}

void sub_23F861788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = sub_23F7B0794(a1, a2, a3, a4);
  sub_23F7B0990(v6, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32));
  *(_QWORD *)(v6 + *(int *)(v4 + 20)) = *(_QWORD *)(v5 + *(int *)(v4 + 20));
  sub_23F694C84();
}

void sub_23F8617C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = sub_23F7B0794(a1, a2, a3, a4);
  sub_23F7B0990(v6, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40));
  *(_QWORD *)(v6 + *(int *)(v4 + 20)) = *(_QWORD *)(v5 + *(int *)(v4 + 20));
  swift_bridgeObjectRelease();
  sub_23F694C84();
}

uint64_t getEnumTagSinglePayload for VariableStep()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F86181C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F861828(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

void sub_23F861828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F876A04(a1, a2, a3, a4);
  sub_23F878BF0();
  if (v6)
  {
    v7 = sub_23F878D84();
    sub_23F6F07D0(v7, v8, v9);
  }
  else
  {
    sub_23F6F083C(*(_QWORD *)(a1 + *(int *)(a3 + 20)));
    sub_23F694C84();
  }
}

uint64_t storeEnumTagSinglePayload for VariableStep()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F86187C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F861888(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

void sub_23F861888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  int v5;
  uint64_t v6;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F877014(a1, a2, a3, a4, a5);
  sub_23F6F07EC();
  if (v8)
  {
    sub_23F6F08B0();
    sub_23F6F07C4(v9, v10, v11, v12);
  }
  else
  {
    *(_QWORD *)(v6 + *(int *)(a4 + 20)) = (v5 - 1);
    sub_23F694C84();
  }
}

void sub_23F8618D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  unint64_t v4;

  sub_23F8776F0(a1, a2, a3, a4);
  if (v4 <= 0x3F)
  {
    sub_23F87771C();
    swift_initStructMetadata();
    sub_23F6F0BFC();
  }
  sub_23F6F5A08();
}

uint64_t *initializeBufferWithCopyOfBuffer for ExecutionStepResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FB2C4B8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FB2C80C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(type metadata accessor for ActionResult(0) + 20);
    v13 = &v9[v12];
    v14 = &v10[v12];
    v15 = sub_23FB2D0B8();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v15))
    {
      v16 = sub_23F6916B8(&qword_256EA2780);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v13, 0, 1, v15);
    }
  }
  return a1;
}

uint64_t destroy for ExecutionStepResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = sub_23FB2C4B8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_23FB2C80C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v5 + *(int *)(type metadata accessor for ActionResult(0) + 20);
  v8 = sub_23FB2D0B8();
  result = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v8);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  return result;
}

uint64_t initializeWithCopy for ExecutionStepResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_23FB2C4B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FB2C80C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(type metadata accessor for ActionResult(0) + 20);
  v12 = (void *)(v8 + v11);
  v13 = (const void *)(v9 + v11);
  v14 = sub_23FB2D0B8();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v14))
  {
    v15 = sub_23F6916B8(&qword_256EA2780);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v12, 0, 1, v14);
  }
  return a1;
}

uint64_t assignWithCopy for ExecutionStepResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_23FB2C4B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FB2C80C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(type metadata accessor for ActionResult(0) + 20);
  v12 = (void *)(v8 + v11);
  v13 = (const void *)(v9 + v11);
  v14 = sub_23FB2D0B8();
  v15 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v14);
  v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v14);
  if (!v15)
  {
    v17 = *(_QWORD *)(v14 - 8);
    if (!v16)
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 24))(v12, v13, v14);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v18 = sub_23F6916B8(&qword_256EA2780);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v12, 0, 1, v14);
  return a1;
}

uint64_t initializeWithTake for ExecutionStepResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_23FB2C4B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FB2C80C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(type metadata accessor for ActionResult(0) + 20);
  v12 = (void *)(v8 + v11);
  v13 = (const void *)(v9 + v11);
  v14 = sub_23FB2D0B8();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v14))
  {
    v15 = sub_23F6916B8(&qword_256EA2780);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v12, 0, 1, v14);
  }
  return a1;
}

uint64_t assignWithTake for ExecutionStepResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_23FB2C4B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FB2C80C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(type metadata accessor for ActionResult(0) + 20);
  v12 = (void *)(v8 + v11);
  v13 = (const void *)(v9 + v11);
  v14 = sub_23FB2D0B8();
  v15 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v14);
  v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v14);
  if (!v15)
  {
    v17 = *(_QWORD *)(v14 - 8);
    if (!v16)
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 40))(v12, v13, v14);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v18 = sub_23F6916B8(&qword_256EA2780);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v12, 0, 1, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ExecutionStepResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F861FB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F86775C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t storeEnumTagSinglePayload for ExecutionStepResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F861FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F8677C4(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

void sub_23F861FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F861FF8(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
}

void sub_23F861FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  unint64_t v4;
  unint64_t v5;

  sub_23F8776F0(a1, a2, a3, a4);
  if (v4 <= 0x3F)
  {
    sub_23F87852C();
    if (v5 <= 0x3F)
    {
      sub_23F876C18();
      sub_23F6F0BFC();
    }
  }
  sub_23F6F5A08();
}

uint64_t initializeBufferWithCopyOfBuffer for QueryData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_23F862098 + 4 * byte_23FB63920[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for QueryData(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 3:
      goto LABEL_6;
    case 2:
      type metadata accessor for PropertyQuery(0);
      result = swift_getEnumCaseMultiPayload();
      if ((_DWORD)result == 2 || (_DWORD)result == 1)
      {
LABEL_6:
        result = swift_bridgeObjectRelease();
      }
      else if (!(_DWORD)result)
      {
        swift_bridgeObjectRelease();
        v3 = a1 + *(int *)(type metadata accessor for QueryPredicate(0) + 24);
        v4 = sub_23FB2ED38();
        result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
      }
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for QueryData()
{
  char *v0;

  v0 = (char *)sub_23F8622EC + 4 * byte_23FB63928[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_23F8622EC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for QueryData(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F83A7D4(result, type metadata accessor for QueryData);
    v2 = (char *)&loc_23F862440 + 4 * byte_23FB6392C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

_BYTE *initializeWithTake for QueryData(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v6 = type metadata accessor for PropertyQuery(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[16] = a2[16];
      v7 = *(int *)(type metadata accessor for QueryPredicate(0) + 24);
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = sub_23FB2ED38();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_BYTE *assignWithTake for QueryData(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_23F83A7D4((uint64_t)a1, type metadata accessor for QueryData);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v6 = type metadata accessor for PropertyQuery(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      else
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[16] = a2[16];
        v7 = *(int *)(type metadata accessor for QueryPredicate(0) + 24);
        v8 = &a1[v7];
        v9 = &a2[v7];
        v10 = sub_23FB2ED38();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23F862748()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PropertyQuery(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for PropertyQuery(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v7 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      *(_QWORD *)a1 = *a2;
      swift_bridgeObjectRetain();
    }
    else
    {
      v8 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v8;
      *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
      v9 = *(int *)(type metadata accessor for QueryPredicate(0) + 24);
      v10 = a1 + v9;
      v11 = (uint64_t)a2 + v9;
      v12 = sub_23FB2ED38();
      v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for PropertyQuery(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2 || (_DWORD)result == 1)
    return swift_bridgeObjectRelease();
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    v3 = a1 + *(int *)(type metadata accessor for QueryPredicate(0) + 24);
    v4 = sub_23FB2ED38();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  return result;
}

uint64_t initializeWithCopy for PropertyQuery(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    swift_bridgeObjectRetain();
  }
  else
  {
    v5 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    v6 = *(int *)(type metadata accessor for QueryPredicate(0) + 24);
    v7 = a1 + v6;
    v8 = a2 + v6;
    v9 = sub_23FB2ED38();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for PropertyQuery(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  if (a1 != a2)
  {
    sub_23F83A7D4(a1, type metadata accessor for PropertyQuery);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      v5 = *(int *)(type metadata accessor for QueryPredicate(0) + 24);
      v6 = a1 + v5;
      v7 = a2 + v5;
      v8 = sub_23FB2ED38();
      v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
      swift_bridgeObjectRetain();
      v9(v6, v7, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_BYTE *initializeWithTake for PropertyQuery(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[16] = a2[16];
    v6 = *(int *)(type metadata accessor for QueryPredicate(0) + 24);
    v7 = &a1[v6];
    v8 = &a2[v6];
    v9 = sub_23FB2ED38();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_BYTE *assignWithTake for PropertyQuery(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_23F83A7D4((uint64_t)a1, type metadata accessor for PropertyQuery);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[16] = a2[16];
      v6 = *(int *)(type metadata accessor for QueryPredicate(0) + 24);
      v7 = &a1[v6];
      v8 = &a2[v6];
      v9 = sub_23FB2ED38();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_23F862C94()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for QueryPredicate(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for VariableSetter(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_23FB2ED38();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t destroy for VariableSetter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23FB2ED38();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for VariableSetter(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23FB2ED38();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

_QWORD *assignWithCopy for VariableSetter(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2ED38();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_QWORD *initializeWithTake for VariableSetter(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23FB2ED38();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for VariableSetter(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2ED38();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for VariableSetter()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F862FA0()
{
  unint64_t *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F6F08A0();
  if (v1)
  {
    sub_23F6F083C(*v0);
    sub_23F694C84();
  }
  else
  {
    sub_23F6B6634();
    v2 = sub_23F70DAD8();
    sub_23F6F07D0(v2, v3, v4);
  }
}

uint64_t storeEnumTagSinglePayload for VariableSetter()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F862FEC()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F6F0850();
  if (v0)
  {
    sub_23F6F0B28();
    sub_23F694C84();
  }
  else
  {
    sub_23F6B6634();
    sub_23F6F08B0();
    sub_23F6F07C4(v1, v2, v3, v4);
  }
}

void sub_23F863030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F86627C(a1, a2, a3, MEMORY[0x24BEE0158] + 64, (void (*)(uint64_t))MEMORY[0x24BEB9A18]);
}

_QWORD *initializeBufferWithCopyOfBuffer for QueryPredicate(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v6 = *(int *)(a3 + 24);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_23FB2ED38();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for QueryPredicate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_23FB2ED38();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for QueryPredicate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_23FB2ED38();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for QueryPredicate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23FB2ED38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for QueryPredicate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23FB2ED38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for QueryPredicate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FB2ED38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for QueryPredicate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F863314()
{
  sub_23F863320();
}

void sub_23F863320()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F6F08A0();
  if (v5)
  {
    sub_23F6F083C(*(_QWORD *)(v0 + 8));
    sub_23F694C84();
  }
  else
  {
    v6 = v3;
    sub_23F876A04(v1, v2, v3, v4);
    v7 = sub_23F6F08CC(*(int *)(v6 + 24));
    sub_23F6F07D0(v7, v8, v9);
  }
}

uint64_t storeEnumTagSinglePayload for QueryPredicate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F863374()
{
  sub_23F863380();
}

void sub_23F863380()
{
  void (*v0)(_QWORD);
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6F0850();
  if (v1)
  {
    sub_23F6F0B1C();
    sub_23F694C84();
  }
  else
  {
    v0(0);
    sub_23F6F08B0();
    sub_23F6F07C4(v2, v3, v4, v5);
  }
}

uint64_t sub_23F8633C8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FB2ED38();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for QueryOperator(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF7)
  {
    if (a2 + 9 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 9) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 10;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v5 = v6 - 10;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for QueryOperator(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_23F863518 + 4 * byte_23FB63935[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_23F86354C + 4 * byte_23FB63930[v4]))();
}

uint64_t sub_23F86354C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F863554(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F86355CLL);
  return result;
}

uint64_t sub_23F863568(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F863570);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_23F863574(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F86357C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for QueryOperator()
{
  sub_23F694C70();
}

uint64_t *initializeBufferWithCopyOfBuffer for ActionParameterContext(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FB2C764();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ActionParameterContext(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ActionParameterContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ActionParameterContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ActionParameterContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for ActionParameterContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionParameterContext()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F8638B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F86A744(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

uint64_t storeEnumTagSinglePayload for ActionParameterContext()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F8638D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F86A7A8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

void sub_23F8638DC()
{
  sub_23F86A7FC();
}

uint64_t *initializeBufferWithCopyOfBuffer for ActionStepResult(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FB2C4B8();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EA2798);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v10 = a3[5];
    v11 = a3[6];
    v12 = (uint64_t *)((char *)a1 + v10);
    v13 = (uint64_t *)((char *)a2 + v10);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = (char *)a1 + v11;
    v16 = (char *)a2 + v11;
    v17 = sub_23FB2C80C();
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    v18(v15, v16, v17);
    v19 = *(int *)(type metadata accessor for ActionResult(0) + 20);
    v20 = &v15[v19];
    v21 = &v16[v19];
    v22 = sub_23FB2D0B8();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v21, 1, v22))
    {
      v23 = sub_23F6916B8(&qword_256EA2780);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v20, 0, 1, v22);
    }
    v24 = a3[7];
    v25 = (uint64_t *)((char *)a1 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ActionStepResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_23FB2C4B8();
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 24);
  v6 = sub_23FB2C80C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v5 + *(int *)(type metadata accessor for ActionResult(0) + 20);
  v8 = sub_23FB2D0B8();
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v8))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for ActionStepResult(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = sub_23FB2C4B8();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA2798);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v8 = a3[5];
  v9 = a3[6];
  v10 = &a1[v8];
  v11 = &a2[v8];
  v12 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = v12;
  v13 = &a1[v9];
  v14 = &a2[v9];
  v15 = sub_23FB2C80C();
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  v16(v13, v14, v15);
  v17 = *(int *)(type metadata accessor for ActionResult(0) + 20);
  v18 = &v13[v17];
  v19 = &v14[v17];
  v20 = sub_23FB2D0B8();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, v20))
  {
    v21 = sub_23F6916B8(&qword_256EA2780);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v18, 0, 1, v20);
  }
  v22 = a3[7];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = *((_QWORD *)v24 + 1);
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = v25;
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for ActionStepResult(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;

  v6 = sub_23FB2C4B8();
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = sub_23F6916B8(&qword_256EA2798);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  v11 = a3[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = sub_23FB2C80C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  v18 = *(int *)(type metadata accessor for ActionResult(0) + 20);
  v19 = &v15[v18];
  v20 = &v16[v18];
  v21 = sub_23FB2D0B8();
  v22 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, v21);
  v23 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v21);
  if (!v22)
  {
    v24 = *(_QWORD *)(v21 - 8);
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 24))(v19, v20, v21);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v21);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    v25 = sub_23F6916B8(&qword_256EA2780);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v19, 0, 1, v21);
LABEL_13:
  v26 = a3[7];
  v27 = &a1[v26];
  v28 = &a2[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for ActionStepResult(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_23FB2C4B8();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA2798);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_23FB2C80C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = *(int *)(type metadata accessor for ActionResult(0) + 20);
  v13 = &v9[v12];
  v14 = &v10[v12];
  v15 = sub_23FB2D0B8();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v15))
  {
    v16 = sub_23F6916B8(&qword_256EA2780);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v13, 0, 1, v15);
  }
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  return a1;
}

char *assignWithTake for ActionStepResult(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v6 = sub_23FB2C4B8();
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = sub_23F6916B8(&qword_256EA2798);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  v11 = a3[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v15 = *(_QWORD *)v13;
  v14 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = v15;
  *((_QWORD *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  v16 = a3[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_23FB2C80C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  v20 = *(int *)(type metadata accessor for ActionResult(0) + 20);
  v21 = &v17[v20];
  v22 = &v18[v20];
  v23 = sub_23FB2D0B8();
  v24 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v21, 1, v23);
  v25 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v23);
  if (!v24)
  {
    v26 = *(_QWORD *)(v23 - 8);
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 40))(v21, v22, v23);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v21, v23);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    v27 = sub_23F6916B8(&qword_256EA2780);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v21, 0, 1, v23);
LABEL_13:
  v28 = a3[7];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v32 = *(_QWORD *)v30;
  v31 = *((_QWORD *)v30 + 1);
  *(_QWORD *)v29 = v32;
  *((_QWORD *)v29 + 1) = v31;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionStepResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F864304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F6B6B7C();
  sub_23F6916B8(&qword_256EA2798);
  sub_23F6F07DC();
  if (v6)
  {
    v7 = sub_23F876D78();
  }
  else
  {
    if ((_DWORD)v3 == 0x7FFFFFFF)
    {
      sub_23F6F083C(*(_QWORD *)(v4 + *(int *)(a3 + 20) + 8));
      sub_23F694C84();
      return;
    }
    v8 = type metadata accessor for ActionResult(0);
    v7 = v4 + *(int *)(a3 + 24);
  }
  sub_23F6F07D0(v7, v3, v8);
}

uint64_t storeEnumTagSinglePayload for ActionStepResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F864388()
{
  uint64_t v0;
  int v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F877568();
  sub_23F6916B8(&qword_256EA2798);
  sub_23F6F07EC();
  if (v2)
  {
    sub_23F876DBC();
  }
  else
  {
    if (v1 == 0x7FFFFFFF)
    {
      sub_23F878064(*(int *)(v0 + 20));
      sub_23F694C84();
      return;
    }
    type metadata accessor for ActionResult(0);
  }
  sub_23F6F08B0();
  sub_23F6F07C4(v3, v4, v5, v6);
}

void sub_23F8643F4()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F6DE58C(319, qword_256EA6B68, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for ActionResult(319);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for StatementResult(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FB2C4B8();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EA2798);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v10 = a3[5];
    v11 = a3[6];
    v12 = (uint64_t *)((char *)a1 + v10);
    v13 = (uint64_t *)((char *)a2 + v10);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = (char *)a1 + v11;
    v16 = (char *)a2 + v11;
    v17 = sub_23FB2D0DC();
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    v18(v15, v16, v17);
    v19 = *(int *)(type metadata accessor for StatementResultPayload(0) + 20);
    v20 = &v15[v19];
    v21 = &v16[v19];
    v22 = sub_23FB2D0B8();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v21, 1, v22))
    {
      v23 = sub_23F6916B8(&qword_256EA2780);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v20, 0, 1, v22);
    }
    v24 = a3[7];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v27 = sub_23FB2C764();
    v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
    v28(v25, v26, v27);
    v28((char *)a1 + a3[8], (char *)a2 + a3[8], v27);
    v28((char *)a1 + a3[9], (char *)a2 + a3[9], v27);
  }
  return a1;
}

uint64_t destroy for StatementResult(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v12)(uint64_t, uint64_t);

  v4 = sub_23FB2C4B8();
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  v5 = a1 + a2[6];
  v6 = sub_23FB2D0DC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v5 + *(int *)(type metadata accessor for StatementResultPayload(0) + 20);
  v8 = sub_23FB2D0B8();
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v8))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  v10 = sub_23FB2C764();
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
  v12(v9, v10);
  v12(a1 + a2[8], v10);
  return ((uint64_t (*)(uint64_t, uint64_t))v12)(a1 + a2[9], v10);
}

char *initializeWithCopy for StatementResult(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);

  v6 = sub_23FB2C4B8();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA2798);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v8 = a3[5];
  v9 = a3[6];
  v10 = &a1[v8];
  v11 = &a2[v8];
  v12 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = v12;
  v13 = &a1[v9];
  v14 = &a2[v9];
  v15 = sub_23FB2D0DC();
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  v16(v13, v14, v15);
  v17 = *(int *)(type metadata accessor for StatementResultPayload(0) + 20);
  v18 = &v13[v17];
  v19 = &v14[v17];
  v20 = sub_23FB2D0B8();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, v20))
  {
    v21 = sub_23F6916B8(&qword_256EA2780);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v18, 0, 1, v20);
  }
  v22 = a3[7];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = sub_23FB2C764();
  v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
  v26(v23, v24, v25);
  v26(&a1[a3[8]], &a2[a3[8]], v25);
  v26(&a1[a3[9]], &a2[a3[9]], v25);
  return a1;
}

char *assignWithCopy for StatementResult(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);

  v6 = sub_23FB2C4B8();
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = sub_23F6916B8(&qword_256EA2798);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  v11 = a3[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = sub_23FB2D0DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  v18 = *(int *)(type metadata accessor for StatementResultPayload(0) + 20);
  v19 = &v15[v18];
  v20 = &v16[v18];
  v21 = sub_23FB2D0B8();
  v22 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, v21);
  v23 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v21);
  if (!v22)
  {
    v24 = *(_QWORD *)(v21 - 8);
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 24))(v19, v20, v21);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v21);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    v25 = sub_23F6916B8(&qword_256EA2780);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v19, 0, 1, v21);
LABEL_13:
  v26 = a3[7];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = sub_23FB2C764();
  v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 24);
  v30(v27, v28, v29);
  v30(&a1[a3[8]], &a2[a3[8]], v29);
  v30(&a1[a3[9]], &a2[a3[9]], v29);
  return a1;
}

char *initializeWithTake for StatementResult(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);

  v6 = sub_23FB2C4B8();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA2798);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_23FB2D0DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = *(int *)(type metadata accessor for StatementResultPayload(0) + 20);
  v13 = &v9[v12];
  v14 = &v10[v12];
  v15 = sub_23FB2D0B8();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v15))
  {
    v16 = sub_23F6916B8(&qword_256EA2780);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v13, 0, 1, v15);
  }
  v17 = a3[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_23FB2C764();
  v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
  v21(v18, v19, v20);
  v21(&a1[a3[8]], &a2[a3[8]], v20);
  v21(&a1[a3[9]], &a2[a3[9]], v20);
  return a1;
}

char *assignWithTake for StatementResult(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);

  v6 = sub_23FB2C4B8();
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = sub_23F6916B8(&qword_256EA2798);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  v11 = a3[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v15 = *(_QWORD *)v13;
  v14 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = v15;
  *((_QWORD *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  v16 = a3[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_23FB2D0DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  v20 = *(int *)(type metadata accessor for StatementResultPayload(0) + 20);
  v21 = &v17[v20];
  v22 = &v18[v20];
  v23 = sub_23FB2D0B8();
  v24 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v21, 1, v23);
  v25 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v23);
  if (!v24)
  {
    v26 = *(_QWORD *)(v23 - 8);
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 40))(v21, v22, v23);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v21, v23);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    v27 = sub_23F6916B8(&qword_256EA2780);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v21, 0, 1, v23);
LABEL_13:
  v28 = a3[7];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v31 = sub_23FB2C764();
  v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 40);
  v32(v29, v30, v31);
  v32(&a1[a3[8]], &a2[a3[8]], v31);
  v32(&a1[a3[9]], &a2[a3[9]], v31);
  return a1;
}

uint64_t getEnumTagSinglePayload for StatementResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F865038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F6B6B7C();
  sub_23F6916B8(&qword_256EA2798);
  sub_23F6F07DC();
  if (v6)
  {
    v7 = sub_23F876D78();
  }
  else
  {
    if ((_DWORD)v3 == 2147483646)
    {
      sub_23F876D30(*(int *)(a3 + 20));
      sub_23F694C84();
      return;
    }
    type metadata accessor for StatementResultPayload(0);
    sub_23F6F07DC();
    if (v6)
    {
      sub_23F6F0B08();
    }
    else
    {
      sub_23F6B58C8();
      sub_23F6F0AFC();
    }
    v7 = v4 + v9;
  }
  sub_23F6F07D0(v7, v3, v8);
}

uint64_t storeEnumTagSinglePayload for StatementResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F8650C4()
{
  uint64_t v0;
  int v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F877568();
  sub_23F6916B8(&qword_256EA2798);
  sub_23F6F07EC();
  if (v2)
  {
    sub_23F876DBC();
  }
  else
  {
    if (v1 == 2147483646)
    {
      sub_23F878BAC(*(int *)(v0 + 20));
      sub_23F694C84();
      return;
    }
    type metadata accessor for StatementResultPayload(0);
    sub_23F6F07EC();
    if (v2)
    {
      sub_23F6F0BD0();
    }
    else
    {
      sub_23F6B58C8();
      sub_23F6F0BB8();
    }
  }
  sub_23F6F08B0();
  sub_23F6F07C4(v3, v4, v5, v6);
}

void sub_23F865140()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23F6DE58C(319, qword_256EA6B68, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for StatementResultPayload(319);
    if (v1 <= 0x3F)
    {
      sub_23FB2C764();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void initializeBufferWithCopyOfBuffer for StatementResultPayload(uint64_t a1, uint64_t *a2)
{
  sub_23F866CC4(a1, a2);
}

void destroy for StatementResultPayload(uint64_t a1, uint64_t a2)
{
  sub_23F866D5C(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE53330]);
}

void initializeWithCopy for StatementResultPayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F866DBC(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE53330]);
}

void assignWithCopy for StatementResultPayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F866E44(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE53330]);
}

void initializeWithTake for StatementResultPayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F866F04(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE53330]);
}

void assignWithTake for StatementResultPayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F866F8C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE53330]);
}

uint64_t getEnumTagSinglePayload for StatementResultPayload()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F865250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F867064(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE53330]);
}

uint64_t storeEnumTagSinglePayload for StatementResultPayload()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F865268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F86527C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE53330]);
}

uint64_t sub_23F86527C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_DWORD *)(*(_QWORD *)(sub_23F877014(a1, a2, a3, a4, a5) - 8) + 84) == (_DWORD)a3)
  {
    sub_23F876DBC();
  }
  else
  {
    sub_23F6B6088();
    sub_23F876F78();
  }
  sub_23F6F08B0();
  return sub_23F713EE0(v5, v6, v7, v8);
}

void sub_23F8652D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F8652EC(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BE53330], qword_256EAE6D0, (void (*)(uint64_t))MEMORY[0x24BE532A0]);
}

void sub_23F8652EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), unint64_t *a5, void (*a6)(uint64_t))
{
  unint64_t v8;
  unint64_t v9;

  sub_23F8776F0(a1, a2, a3, a4);
  if (v8 <= 0x3F)
  {
    sub_23F6DE58C(319, a5, a6);
    if (v9 <= 0x3F)
    {
      sub_23F876C18();
      sub_23F6F0BFC();
    }
  }
  sub_23F6B6664();
}

void type metadata accessor for ResponseGenerationRequest()
{
  sub_23F694C70();
}

uint64_t *initializeBufferWithCopyOfBuffer for QueryStepResults(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FB2C764();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 24);
    v14 = (char *)v7 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_23FB2C4B8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return v7;
}

uint64_t destroy for QueryStepResults(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = sub_23FB2C4B8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

_QWORD *initializeWithCopy for QueryStepResults(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2C764();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_23FB2C4B8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

_QWORD *assignWithCopy for QueryStepResults(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2C764();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23FB2C4B8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_QWORD *initializeWithTake for QueryStepResults(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2C764();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23FB2C4B8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

_QWORD *assignWithTake for QueryStepResults(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2C764();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23FB2C4B8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for QueryStepResults()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F86573C()
{
  unint64_t *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6F08A0();
  if (v1)
  {
    sub_23F6F083C(*v0);
    sub_23F694C84();
  }
  else
  {
    sub_23F6B58C8();
    sub_23F6F07DC();
    if (v1)
    {
      sub_23F6F0B94();
    }
    else
    {
      sub_23F72E034();
      sub_23F6F0B08();
    }
    v3 = sub_23F6F08CC(v2);
    sub_23F6F07D0(v3, v4, v5);
  }
}

uint64_t storeEnumTagSinglePayload for QueryStepResults()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F8657A0()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F6F0850();
  if (v0)
  {
    sub_23F6F0B28();
    sub_23F694C84();
  }
  else
  {
    sub_23F6B58C8();
    sub_23F6F07EC();
    if (v0)
    {
      sub_23F6F0BC4();
    }
    else
    {
      sub_23F72E034();
      sub_23F6F0BD0();
    }
    sub_23F6F08B0();
    sub_23F6F07C4(v1, v2, v3, v4);
  }
}

uint64_t sub_23F8657F8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23FB2C764();
  if (v1 <= 0x3F)
  {
    result = sub_23FB2C4B8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void type metadata accessor for QueryResults()
{
  sub_23F694C70();
}

_QWORD *initializeBufferWithCopyOfBuffer for Candidate(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FB2ED38();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_QWORD *)v9 = *(_QWORD *)v10;
    v9[8] = v10[8];
    v11 = a3[7];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_23FB2C764();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t destroy for Candidate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23FB2ED38();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 28);
  v6 = sub_23FB2C764();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for Candidate(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_23FB2ED38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  return a1;
}

uint64_t assignWithCopy for Candidate(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23FB2ED38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for Candidate(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_23FB2ED38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

uint64_t assignWithTake for Candidate(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_23FB2ED38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for Candidate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F865C50(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6B6634();
  sub_23F6F07DC();
  if (v3)
  {
    v4 = sub_23F876D78();
  }
  else
  {
    if ((_DWORD)a2 == 248)
    {
      sub_23F694C84();
      return;
    }
    sub_23F6B58C8();
    v4 = sub_23F8783BC();
  }
  sub_23F6F07D0(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for Candidate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F865CC8(uint64_t a1, char a2, int a3, uint64_t a4)
{
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F6B6634();
  sub_23F6F07EC();
  if (v8)
  {
    sub_23F876DBC();
  }
  else
  {
    if (a3 == 248)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 7;
      sub_23F694C84();
      return;
    }
    sub_23F6B58C8();
    sub_23F8783BC();
  }
  sub_23F6F08B0();
  sub_23F6F07C4(v9, v10, v11, v12);
}

uint64_t sub_23F865D30()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23FB2ED38();
  if (v1 <= 0x3F)
  {
    result = sub_23FB2C764();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void type metadata accessor for Candidate.Source()
{
  sub_23F694C70();
}

void type metadata accessor for Candidate.PromptStatus()
{
  sub_23F694C70();
}

uint64_t sub_23F865DE8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t result;

  if (a4 <= 2u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for Session.Transcript.MockError(uint64_t a1)
{
  return sub_23F865E14(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t sub_23F865E14(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t result;

  if (a4 <= 2u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for Session.Transcript.MockError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_23F865DE8(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for Session.Transcript.MockError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_23F865DE8(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_23F865E14(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for Session.Transcript.MockError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_23F865E14(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for Session.Transcript.MockError(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFD && *(_BYTE *)(a1 + 25))
    {
      v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 3)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Session.Transcript.MockError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_23F865FC8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 2u)
    return *(unsigned __int8 *)(a1 + 24);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_23F865FE0(uint64_t result, unsigned int a2)
{
  uint64_t v2;

  v2 = a2 - 3;
  if (a2 >= 3)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    LOBYTE(a2) = 3;
    *(_QWORD *)result = v2;
  }
  *(_BYTE *)(result + 24) = a2;
  return result;
}

void type metadata accessor for Session.Transcript.MockError()
{
  sub_23F694C70();
}

void _s30IntelligenceFlowPlannerSupport22SpeechRequestCandidateVwCP_0()
{
  uint64_t *v0;
  uint64_t *v1;
  int v2;
  uint64_t v3;

  sub_23F877920();
  if ((v2 & 0x20000) != 0)
  {
    sub_23F876A58(*v1);
  }
  else
  {
    v3 = v1[1];
    *v0 = *v1;
    v0[1] = v3;
    sub_23F6B58C8();
    sub_23F6B54F8();
    sub_23F878C98();
  }
  sub_23F6B5F7C();
}

uint64_t _s30IntelligenceFlowPlannerSupport22SpeechRequestCandidateVwxx_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23F6B6B7C();
  destroy for AssetsManager();
  sub_23F6B58C8();
  v0 = sub_23F87922C();
  return sub_23F8776C4(v0, v1, v2);
}

void _s30IntelligenceFlowPlannerSupport22SpeechRequestCandidateVwcp_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  sub_23F6B58C8();
  sub_23F6B54F8();
  sub_23F878C98();
  sub_23F6B5F7C();
}

void _s30IntelligenceFlowPlannerSupport22SpeechRequestCandidateVwca_0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  sub_23F878DC4();
  *v2 = *v1;
  *(_QWORD *)(v0 + 8) = v1[1];
  swift_bridgeObjectRetain();
  sub_23F6B5908();
  sub_23F6B58C8();
  v3 = sub_23F8798CC();
  sub_23F7B0990(v3, v4);
  sub_23F694C84();
}

void _s30IntelligenceFlowPlannerSupport22SpeechRequestCandidateVwtk_0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = (uint64_t)a1 + *(int *)(a3 + 20);
  v4 = sub_23F6B58C8();
  sub_23F78F1E4(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32));
  sub_23F694C84();
}

void _s30IntelligenceFlowPlannerSupport22SpeechRequestCandidateVwta_0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F878DC4();
  v3 = v2[1];
  *v1 = *v2;
  v1[1] = v3;
  swift_bridgeObjectRelease();
  v4 = (uint64_t)v1 + *(int *)(v0 + 20);
  v5 = sub_23F6B58C8();
  sub_23F7B0990(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40));
  sub_23F694C84();
}

uint64_t getEnumTagSinglePayload for SpeechRequestCandidate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F8661E8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F6F08A0();
  if (v1)
  {
    sub_23F6F083C(*(_QWORD *)(v0 + 8));
    sub_23F694C84();
  }
  else
  {
    sub_23F6B58C8();
    v2 = sub_23F70DAD8();
    sub_23F6F07D0(v2, v3, v4);
  }
}

uint64_t storeEnumTagSinglePayload for SpeechRequestCandidate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F866238()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F6F0850();
  if (v0)
  {
    sub_23F6F0B1C();
    sub_23F694C84();
  }
  else
  {
    sub_23F6B58C8();
    sub_23F6F08B0();
    sub_23F6F07C4(v1, v2, v3, v4);
  }
}

void sub_23F86627C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  unint64_t v5;

  a5(319);
  if (v5 <= 0x3F)
  {
    sub_23F876C18();
    sub_23F6F0BFC();
  }
  sub_23F6F5A08();
}

uint64_t *initializeBufferWithCopyOfBuffer for ClientEffectInvocation(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FB2C4B8();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v9 = a3[6];
    v10 = a3[7];
    v11 = (uint64_t *)((char *)a1 + v9);
    v12 = (uint64_t *)((char *)a2 + v9);
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
    v14 = (uint64_t *)((char *)a1 + v10);
    v15 = (uint64_t *)((char *)a2 + v10);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = a3[8];
    v18 = a3[9];
    v19 = (uint64_t *)((char *)a1 + v17);
    v20 = (uint64_t *)((char *)a2 + v17);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    *(uint64_t *)((char *)a1 + v18) = *(uint64_t *)((char *)a2 + v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ClientEffectInvocation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v4 = sub_23FB2C4B8();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ClientEffectInvocation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v6 = sub_23FB2C4B8();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a3[7];
  v10 = (_QWORD *)(a1 + v8);
  v11 = (_QWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = (_QWORD *)(a1 + v9);
  v14 = (_QWORD *)(a2 + v9);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = a3[8];
  v17 = a3[9];
  v18 = (_QWORD *)(a1 + v16);
  v19 = (_QWORD *)(a2 + v16);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ClientEffectInvocation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  v6 = sub_23FB2C4B8();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = a3[7];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[8];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ClientEffectInvocation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v6 = sub_23FB2C4B8();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v9 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  return a1;
}

uint64_t assignWithTake for ClientEffectInvocation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_23FB2C4B8();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  v18 = a3[8];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientEffectInvocation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F86679C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F72E034();
  sub_23F878BF0();
  if (v5)
  {
    v6 = sub_23F878D84();
    sub_23F6F07D0(v6, v7, v8);
  }
  else
  {
    sub_23F6F083C(*(_QWORD *)(a1 + *(int *)(a3 + 24) + 8));
    sub_23F694C84();
  }
}

uint64_t storeEnumTagSinglePayload for ClientEffectInvocation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F8667F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F72E034();
  sub_23F6F07EC();
  if (v5)
  {
    sub_23F6F08B0();
    sub_23F6F07C4(v6, v7, v8, v9);
  }
  else
  {
    sub_23F878064(*(int *)(a4 + 24));
    sub_23F694C84();
  }
}

uint64_t sub_23F866844()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FB2C4B8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ClientEffectResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
      v6 = sub_23FB2C6F8();
    else
      v6 = sub_23FB2ED38();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ClientEffectResult(uint64_t a1)
{
  uint64_t v2;

  if (swift_getEnumCaseMultiPayload() == 1)
    v2 = sub_23FB2C6F8();
  else
    v2 = sub_23FB2ED38();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for ClientEffectResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (swift_getEnumCaseMultiPayload() == 1)
    v4 = sub_23FB2C6F8();
  else
    v4 = sub_23FB2ED38();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for ClientEffectResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_23F83A7D4(a1, type metadata accessor for ClientEffectResult);
    if (swift_getEnumCaseMultiPayload() == 1)
      v4 = sub_23FB2C6F8();
    else
      v4 = sub_23FB2ED38();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for ClientEffectResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (swift_getEnumCaseMultiPayload() == 1)
    v4 = sub_23FB2C6F8();
  else
    v4 = sub_23FB2ED38();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for ClientEffectResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_23F83A7D4(a1, type metadata accessor for ClientEffectResult);
    if (swift_getEnumCaseMultiPayload() == 1)
      v4 = sub_23FB2C6F8();
    else
      v4 = sub_23FB2ED38();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_23F866C44()
{
  sub_23F866C50();
}

void sub_23F866C50()
{
  unint64_t v0;
  unint64_t v1;

  sub_23FB2ED38();
  if (v0 <= 0x3F)
  {
    sub_23F87852C();
    if (v1 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      sub_23F6F0BFC();
    }
  }
  sub_23F6F5A08();
}

void initializeBufferWithCopyOfBuffer for ActionResult(uint64_t a1, uint64_t *a2)
{
  sub_23F866CC4(a1, a2);
}

void sub_23F866CC4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F877920();
  if ((v8 & 0x20000) != 0)
  {
    sub_23F876A58(*a2);
  }
  else
  {
    v9 = v6;
    v10 = sub_23F876A04(v4, v5, v6, v7);
    sub_23F78F1E4(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16));
    v11 = sub_23F876C3C();
    if (sub_23F87702C())
    {
      v12 = sub_23F6916B8(&qword_256EA2780);
      sub_23F876C58(v12);
    }
    else
    {
      sub_23F6B633C(v9, (uint64_t)a2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16));
      sub_23F876C6C();
    }
  }
  sub_23F694C84();
}

void destroy for ActionResult(uint64_t a1, uint64_t a2)
{
  sub_23F866D5C(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE523C8]);
}

void sub_23F866D5C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  v5 = sub_23F6F59F8(a1, a2, a3);
  sub_23F78F1B0(v5);
  v6 = v4 + *(int *)(v3 + 20);
  v7 = sub_23F8776FC();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v6, 1, v7))
  {
    sub_23F694CC8();
  }
  else
  {
    v8 = sub_23F6B5994();
    sub_23F8776C4(v8, v9, v10);
  }
}

void initializeWithCopy for ActionResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F866DBC(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE523C8]);
}

void sub_23F866DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = sub_23F876A04(a1, a2, a3, a4);
  sub_23F78F1E4(a1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16));
  v8 = sub_23F876C3C();
  if (sub_23F87702C())
  {
    v9 = sub_23F6916B8(&qword_256EA2780);
    sub_23F876C58(v9);
  }
  else
  {
    sub_23F6B633C(a3, a2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16));
    sub_23F876C6C();
  }
  sub_23F694C84();
}

void assignWithCopy for ActionResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F866E44(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE523C8]);
}

void sub_23F866E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F876A04(a1, a2, a3, a4);
  v6 = sub_23F8798CC();
  sub_23F78F1E4(v6, v7);
  v8 = sub_23F876C3C();
  v9 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a3, 1, v8);
  v10 = sub_23F87702C();
  if (!v9)
  {
    v11 = *(_QWORD *)(v8 - 8);
    if (!v10)
    {
      sub_23F6B633C(a3, a2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 24));
      goto LABEL_7;
    }
    sub_23F6B530C(a3, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v12 = sub_23F6916B8(&qword_256EA2780);
    sub_23F876C58(v12);
    goto LABEL_7;
  }
  sub_23F6B633C(a3, a2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16));
  sub_23F876C6C();
LABEL_7:
  sub_23F6B5F7C();
}

void initializeWithTake for ActionResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F866F04(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE523C8]);
}

void sub_23F866F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = sub_23F876A04(a1, a2, a3, a4);
  sub_23F78F1E4(a1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32));
  v8 = sub_23F876C3C();
  if (sub_23F87702C())
  {
    v9 = sub_23F6916B8(&qword_256EA2780);
    sub_23F876C58(v9);
  }
  else
  {
    sub_23F6B633C(a3, a2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32));
    sub_23F876C6C();
  }
  sub_23F694C84();
}

void assignWithTake for ActionResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F866F8C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE523C8]);
}

void sub_23F866F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  v7 = sub_23F876A04(a1, a2, a3, a4);
  sub_23F78F1E4(a1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40));
  v8 = sub_23F876C3C();
  v9 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a3, 1, v8);
  v10 = sub_23F87702C();
  if (!v9)
  {
    v11 = *(_QWORD *)(v8 - 8);
    if (!v10)
    {
      sub_23F6B633C(a3, a2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 40));
      goto LABEL_7;
    }
    sub_23F6B530C(a3, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v12 = sub_23F6916B8(&qword_256EA2780);
    sub_23F876C58(v12);
    goto LABEL_7;
  }
  sub_23F6B633C(a3, a2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32));
  sub_23F876C6C();
LABEL_7:
  sub_23F6B5F7C();
}

uint64_t getEnumTagSinglePayload for ActionResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F867058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F867064(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE523C8]);
}

uint64_t sub_23F867064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  char v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F876A04(a1, a2, a3, a4);
  sub_23F6F07DC();
  if (v5)
  {
    v6 = sub_23F876D78();
  }
  else
  {
    sub_23F6916B8(&qword_256EA2780);
    v6 = sub_23F876F00();
  }
  return sub_23F6F07D0(v6, a2, v7);
}

uint64_t storeEnumTagSinglePayload for ActionResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F8670BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F86527C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE523C8]);
}

void sub_23F8670D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F8652EC(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BE523C8], qword_256EAE6D0, (void (*)(uint64_t))MEMORY[0x24BE532A0]);
}

_QWORD *initializeBufferWithCopyOfBuffer for ActionResolverRequest(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FB2C764();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(_QWORD *)((char *)a1 + v9) = *(_QWORD *)((char *)a2 + v9);
    v13 = a3[8];
    *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);
    v14 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
    *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ActionResolverRequest(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ActionResolverRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v12 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v13 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ActionResolverRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t initializeWithTake for ActionResolverRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for ActionResolverRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  v12 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionResolverRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F86756C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F86A744(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

uint64_t storeEnumTagSinglePayload for ActionResolverRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F867584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F86A7A8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

uint64_t sub_23F867590()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FB2C764();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for ParameterPath()
{
  sub_23F694C70();
}

void type metadata accessor for ClientInitiatedClientAction()
{
  sub_23F694C70();
}

void type metadata accessor for ContextPrewarmRequest()
{
  sub_23F694C70();
}

uint64_t _s30IntelligenceFlowPlannerSupport21RequestPrescribedPlanO26LowConfidenceKnowledgeToolVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return sub_23F6B6EC0(-1);
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    v2 = *(_QWORD *)(a1 + 8);
    if (v2 >= 0xFFFFFFFF)
      LODWORD(v2) = -1;
  }
  return sub_23F6B6EC0(v2);
}

uint64_t sub_23F867688(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
      return sub_23F877A3C(result, a2);
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      return sub_23F877A3C(result, a2);
  }
  return result;
}

void type metadata accessor for ContextPrewarmCompleted()
{
  sub_23F694C70();
}

void type metadata accessor for SafetyModeRelease()
{
  sub_23F694C70();
}

void type metadata accessor for SafetyModeException()
{
  sub_23F694C70();
}

void type metadata accessor for ContextRetrieved()
{
  sub_23F694C70();
}

void initializeBufferWithCopyOfBuffer for RetrievedContextStatement(uint64_t a1, uint64_t *a2)
{
  sub_23F867838(a1, a2);
}

uint64_t destroy for RetrievedContextStatement(uint64_t a1, uint64_t a2)
{
  return sub_23F8678C8(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

void initializeWithCopy for RetrievedContextStatement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F86792C(a1, a2, a3);
}

void assignWithCopy for RetrievedContextStatement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F867994(a1, a2, a3);
}

void initializeWithTake for RetrievedContextStatement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F8679FC(a1, a2, a3);
}

void assignWithTake for RetrievedContextStatement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F867A54(a1, a2, a3);
}

uint64_t getEnumTagSinglePayload for RetrievedContextStatement()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F867748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F86775C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

uint64_t sub_23F86775C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  char v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F876A04(a1, a2, a3, a4);
  sub_23F6F07DC();
  if (v5)
  {
    v6 = sub_23F876D78();
  }
  else
  {
    sub_23F879A30();
    v6 = sub_23F876F00();
  }
  return sub_23F6F07D0(v6, a2, v7);
}

uint64_t storeEnumTagSinglePayload for RetrievedContextStatement()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F8677B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F8677C4(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

uint64_t sub_23F8677C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_DWORD *)(*(_QWORD *)(sub_23F877014(a1, a2, a3, a4, a5) - 8) + 84) == (_DWORD)a3)
  {
    sub_23F876DBC();
  }
  else
  {
    sub_23F879A30();
    sub_23F876F78();
  }
  sub_23F6F08B0();
  return sub_23F713EE0(v5, v6, v7, v8);
}

void sub_23F867818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F861FF8(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140]);
}

void initializeBufferWithCopyOfBuffer for DynamicEnumerationEntityStatement(uint64_t a1, uint64_t *a2)
{
  sub_23F867838(a1, a2);
}

void sub_23F867838(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  int v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F877920();
  if ((v6 & 0x20000) != 0)
  {
    sub_23F876A58(*a2);
  }
  else
  {
    v7 = v5;
    v8 = v4;
    v9 = sub_23F6B58C8();
    sub_23F78F1E4(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16));
    v10 = v2 + *(int *)(v8 + 20);
    v11 = v7(0);
    sub_23F78F1E4(v10, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16));
  }
  sub_23F694C84();
}

uint64_t destroy for DynamicEnumerationEntityStatement(uint64_t a1, uint64_t a2)
{
  return sub_23F8678C8(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

uint64_t sub_23F8678C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;

  sub_23F6B60B4(a1, a2, a3);
  sub_23F877770();
  v5(a1);
  v6 = a1 + *(int *)(a2 + 20);
  v7 = sub_23F8770FC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

void initializeWithCopy for DynamicEnumerationEntityStatement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F86792C(a1, a2, a3);
}

void sub_23F86792C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_23F6B58C8();
  sub_23F78F1E4(a1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16));
  v6 = sub_23F876F94();
  sub_23F78F1E4(a3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16));
  sub_23F694C84();
}

void assignWithCopy for DynamicEnumerationEntityStatement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F867994(a1, a2, a3);
}

void sub_23F867994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_23F6B58C8();
  sub_23F78F1E4(a1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24));
  v6 = sub_23F876F94();
  sub_23F78F1E4(a3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24));
  sub_23F694C84();
}

void initializeWithTake for DynamicEnumerationEntityStatement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F8679FC(a1, a2, a3);
}

void sub_23F8679FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_23F6B58C8();
  sub_23F70D6B4(v4);
  v5 = sub_23F876F94();
  sub_23F78F1E4(a3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32));
  sub_23F694C84();
}

void assignWithTake for DynamicEnumerationEntityStatement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F867A54(a1, a2, a3);
}

void sub_23F867A54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_23F6B58C8();
  sub_23F78F1E4(a1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40));
  v6 = sub_23F876F94();
  sub_23F78F1E4(a3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40));
  sub_23F694C84();
}

uint64_t getEnumTagSinglePayload for DynamicEnumerationEntityStatement()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F867ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F86775C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

uint64_t storeEnumTagSinglePayload for DynamicEnumerationEntityStatement()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F867ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F8677C4(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

void sub_23F867AF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F861FF8(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140]);
}

void type metadata accessor for EntitySpanMatchResult()
{
  sub_23F694C70();
}

uint64_t destroy for ToolRetrievalResponse()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ToolRetrievalResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ToolRetrievalResponse(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ToolRetrievalResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolRetrievalResponse(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ToolRetrievalResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ToolRetrievalResponse()
{
  sub_23F694C70();
}

uint64_t *initializeBufferWithCopyOfBuffer for ExternalAgentTextQuery(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FB2C4B8();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA2798);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v14 = *(int *)(a3 + 24);
    v15 = (uint64_t *)((char *)v4 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = v16[1];
    if (v17)
    {
      *v15 = *v16;
      v15[1] = v17;
      v15[2] = v16[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v15 = *(_OWORD *)v16;
      v15[2] = v16[2];
    }
  }
  return v4;
}

uint64_t destroy for ExternalAgentTextQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23FB2C4B8();
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  result = *(_QWORD *)(a1 + *(int *)(a2 + 24) + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for ExternalAgentTextQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23FB2C4B8();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F6916B8(&qword_256EA2798);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = v14[1];
  if (v15)
  {
    *v13 = *v14;
    v13[1] = v15;
    v13[2] = v14[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v13 = *(_OWORD *)v14;
    v13[2] = v14[2];
  }
  return a1;
}

_QWORD *assignWithCopy for ExternalAgentTextQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2C4B8();
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = sub_23F6916B8(&qword_256EA2798);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  v14 = *(int *)(a3 + 24);
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = *(_QWORD *)((char *)a1 + v14 + 8);
  v18 = v16[1];
  if (v17)
  {
    if (v18)
    {
      *v15 = *v16;
      v15[1] = v16[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v15[2] = v16[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23F857BE0((uint64_t)v15);
      v19 = v16[2];
      *(_OWORD *)v15 = *(_OWORD *)v16;
      v15[2] = v19;
    }
  }
  else if (v18)
  {
    *v15 = *v16;
    v15[1] = v16[1];
    v15[2] = v16[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v20 = *(_OWORD *)v16;
    v15[2] = v16[2];
    *(_OWORD *)v15 = v20;
  }
  return a1;
}

_OWORD *initializeWithTake for ExternalAgentTextQuery(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2C4B8();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA2798);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
  return a1;
}

_QWORD *assignWithTake for ExternalAgentTextQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23FB2C4B8();
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v10);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v13 = *(_QWORD *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    v14 = sub_23F6916B8(&qword_256EA2798);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  v15 = *(int *)(a3 + 24);
  v16 = (uint64_t)a1 + v15;
  v17 = (char *)a2 + v15;
  if (!*(_QWORD *)((char *)a1 + v15 + 8))
  {
LABEL_11:
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
    return a1;
  }
  v18 = *((_QWORD *)v17 + 1);
  if (!v18)
  {
    sub_23F857BE0(v16);
    goto LABEL_11;
  }
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_QWORD *)(v16 + 8) = v18;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExternalAgentTextQuery()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F868448()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F6F08A0();
  if (v1)
  {
    sub_23F6F083C(*(_QWORD *)(v0 + 8));
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A1C();
    sub_23F6916B8(&qword_256EA2798);
    v2 = sub_23F70DAD8();
    sub_23F6F07D0(v2, v3, v4);
  }
}

uint64_t storeEnumTagSinglePayload for ExternalAgentTextQuery()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F868498()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F6F0850();
  if (v0)
  {
    sub_23F6F0B1C();
    sub_23F694C84();
  }
  else
  {
    sub_23F6916B8(&qword_256EA2798);
    sub_23F6F08B0();
    sub_23F6F07C4(v1, v2, v3, v4);
  }
}

void sub_23F8684E4()
{
  sub_23F868C8C();
}

uint64_t *initializeBufferWithCopyOfBuffer for ExternalAgentSpeechQuery(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FB2C4B8();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA2798);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v13 = *(int *)(a3 + 24);
    v14 = (uint64_t *)((char *)v7 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = v15[1];
    if (v16)
    {
      *v14 = *v15;
      v14[1] = v16;
      v14[2] = v15[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v14 = *(_OWORD *)v15;
      v14[2] = v15[2];
    }
  }
  return v7;
}

uint64_t destroy for ExternalAgentSpeechQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23FB2C4B8();
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  result = *(_QWORD *)(a1 + *(int *)(a2 + 24) + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for ExternalAgentSpeechQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2C4B8();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA2798);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v14 = v13[1];
  if (v14)
  {
    *v12 = *v13;
    v12[1] = v14;
    v12[2] = v13[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
    v12[2] = v13[2];
  }
  return a1;
}

_QWORD *assignWithCopy for ExternalAgentSpeechQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2C4B8();
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = sub_23F6916B8(&qword_256EA2798);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  v14 = *(int *)(a3 + 24);
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = *(_QWORD *)((char *)a1 + v14 + 8);
  v18 = v16[1];
  if (v17)
  {
    if (v18)
    {
      *v15 = *v16;
      v15[1] = v16[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v15[2] = v16[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23F857BE0((uint64_t)v15);
      v19 = v16[2];
      *(_OWORD *)v15 = *(_OWORD *)v16;
      v15[2] = v19;
    }
  }
  else if (v18)
  {
    *v15 = *v16;
    v15[1] = v16[1];
    v15[2] = v16[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v20 = *(_OWORD *)v16;
    v15[2] = v16[2];
    *(_OWORD *)v15 = v20;
  }
  return a1;
}

_QWORD *initializeWithTake for ExternalAgentSpeechQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2C4B8();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA2798);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
  return a1;
}

_QWORD *assignWithTake for ExternalAgentSpeechQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2C4B8();
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = sub_23F6916B8(&qword_256EA2798);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v7, v8, v9);
LABEL_7:
  v14 = *(int *)(a3 + 24);
  v15 = (uint64_t)a1 + v14;
  v16 = (char *)a2 + v14;
  if (!*(_QWORD *)((char *)a1 + v14 + 8))
  {
LABEL_11:
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *(_QWORD *)(v15 + 16) = *((_QWORD *)v16 + 2);
    return a1;
  }
  v17 = *((_QWORD *)v16 + 1);
  if (!v17)
  {
    sub_23F857BE0(v15);
    goto LABEL_11;
  }
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_QWORD *)(v15 + 8) = v17;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v15 + 16) = *((_QWORD *)v16 + 2);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExternalAgentSpeechQuery()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F868BE0()
{
  unint64_t *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F6F08A0();
  if (v1)
  {
    sub_23F6F083C(*v0);
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A1C();
    sub_23F6916B8(&qword_256EA2798);
    v2 = sub_23F70DAD8();
    sub_23F6F07D0(v2, v3, v4);
  }
}

uint64_t storeEnumTagSinglePayload for ExternalAgentSpeechQuery()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F868C30()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F6F0850();
  if (v0)
  {
    sub_23F6F0B28();
    sub_23F694C84();
  }
  else
  {
    sub_23F6916B8(&qword_256EA2798);
    sub_23F6F08B0();
    sub_23F6F07C4(v1, v2, v3, v4);
  }
}

void sub_23F868C7C()
{
  sub_23F868C8C();
}

void sub_23F868C8C()
{
  unint64_t v0;

  sub_23F6DE58C(319, qword_256EA6B68, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
  if (v0 <= 0x3F)
  {
    sub_23F87771C();
    sub_23F876F20();
    sub_23F6F0BFC();
  }
  sub_23F8774C0();
}

uint64_t *initializeBufferWithCopyOfBuffer for ExternalAgentOutcome(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FB2C764();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FB2D0DC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ExternalAgentOutcome(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_23FB2D0DC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ExternalAgentOutcome(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FB2D0DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ExternalAgentOutcome(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FB2D0DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ExternalAgentOutcome(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FB2D0DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for ExternalAgentOutcome(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FB2D0DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExternalAgentOutcome()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F869088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;

  sub_23F6B58C8();
  sub_23F6F07DC();
  if (v8)
  {
    v6 = sub_23F876D78();
  }
  else
  {
    sub_23F877DF8();
    sub_23F6F07DC();
    if (!v8)
    {
      sub_23F6F083C(*(_QWORD *)(a1 + *(int *)(a3 + 24)));
      sub_23F694C84();
      return;
    }
    v6 = sub_23F876F00();
  }
  sub_23F6F07D0(v6, a2, v7);
}

uint64_t storeEnumTagSinglePayload for ExternalAgentOutcome()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F8690F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F869108(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140], (void (*)(_QWORD))MEMORY[0x24BE53330]);
}

void sub_23F869108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(_QWORD))
{
  int v6;
  uint64_t v7;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_23F877014(a1, a2, a3, a4, a5);
  sub_23F6F07EC();
  if (v10)
  {
    sub_23F876DBC();
  }
  else
  {
    a6(0);
    sub_23F6F07EC();
    if (!v10)
    {
      *(_QWORD *)(v7 + *(int *)(a4 + 24)) = (v6 - 1);
      sub_23F6B5F7C();
      return;
    }
    sub_23F876F78();
  }
  sub_23F6F08B0();
  sub_23F713EE0(v11, v12, v13, v14);
}

uint64_t sub_23F869174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F869194(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], (uint64_t (*)(uint64_t))MEMORY[0x24BE53330]);
}

uint64_t sub_23F869194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t))
{
  uint64_t result;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  result = sub_23F8776F0(a1, a2, a3, a4);
  if (v7 <= 0x3F)
  {
    v8 = sub_23F8796A8();
    result = a5(v8);
    if (v9 <= 0x3F)
    {
      sub_23F87771C();
      sub_23F876F20();
      return sub_23F6F0BFC();
    }
  }
  return result;
}

uint64_t _s30IntelligenceFlowPlannerSupport35ExternalAgentRequestRewriteMetadataVwxx_0()
{
  destroy for AssetsManager();
  return sub_23F876798();
}

void _s30IntelligenceFlowPlannerSupport35ExternalAgentRequestRewriteMetadataVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_23F878DE4(a1, a2);
  *(_QWORD *)(v2 + 16) = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRetain();
  sub_23F6B54F8();
  sub_23F694CC8();
}

void _s30IntelligenceFlowPlannerSupport35ExternalAgentRequestRewriteMetadataVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_23F876E6C(a1, a2);
  sub_23F6B5AB0();
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRetain();
  sub_23F693E04();
  sub_23F694C84();
}

void _s30IntelligenceFlowPlannerSupport35ExternalAgentRequestRewriteMetadataVwta_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  destroy for AssetsManager();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  sub_23F694CC8();
}

uint64_t _s30IntelligenceFlowPlannerSupport35ExternalAgentRequestRewriteMetadataVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return sub_23F6B6EC0(-1);
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    v2 = *(_QWORD *)(a1 + 8);
    if (v2 >= 0xFFFFFFFF)
      LODWORD(v2) = -1;
  }
  return sub_23F6B6EC0(v2);
}

uint64_t sub_23F8692F4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
      return sub_23F877A3C(result, a2);
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      return sub_23F877A3C(result, a2);
  }
  return result;
}

void type metadata accessor for ExternalAgentRequestRewriteMetadata()
{
  sub_23F694C70();
}

void initializeBufferWithCopyOfBuffer for ToolResolution()
{
  sub_23F869970();
}

uint64_t destroy for ToolResolution(uint64_t a1, uint64_t a2)
{
  return sub_23F869A04(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BEB8FE0]);
}

void initializeWithCopy for ToolResolution()
{
  sub_23F869A6C();
}

void assignWithCopy for ToolResolution()
{
  sub_23F869AD4();
}

void initializeWithTake for ToolResolution()
{
  sub_23F869B38();
}

void assignWithTake for ToolResolution()
{
  sub_23F869B9C();
}

uint64_t getEnumTagSinglePayload for ToolResolution()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F86938C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F86775C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BEB8FE0]);
}

uint64_t storeEnumTagSinglePayload for ToolResolution()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F8693AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F8677C4(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BEB8FE0]);
}

void sub_23F8693C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F869C40(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BEB8FE0]);
}

uint64_t *initializeBufferWithCopyOfBuffer for TypeConversionRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FB2ED38();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FB2ED5C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_23FB2C764();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for TypeConversionRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_23FB2ED38();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_23FB2ED5C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  v8 = sub_23FB2C764();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for TypeConversionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23FB2ED38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FB2ED5C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for TypeConversionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23FB2ED38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FB2ED5C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for TypeConversionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23FB2ED38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FB2ED5C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for TypeConversionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23FB2ED38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FB2ED5C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for TypeConversionRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F8697FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  sub_23F6B6634();
  sub_23F6F07DC();
  if (v6)
  {
    v4 = sub_23F876D78();
  }
  else
  {
    sub_23F8786E0();
    sub_23F6F07DC();
    if (v6)
    {
      sub_23F6F0B94();
    }
    else
    {
      sub_23F6B58C8();
      sub_23F6F0B08();
    }
    v4 = a1 + v7;
  }
  return sub_23F6F07D0(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for TypeConversionRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F869864()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F6B6634();
  sub_23F6F07EC();
  if (v0)
  {
    sub_23F876DBC();
  }
  else
  {
    sub_23F8786E0();
    sub_23F6F07EC();
    if (v0)
    {
      sub_23F6F0BC4();
    }
    else
    {
      sub_23F6B58C8();
      sub_23F6F0BD0();
    }
  }
  sub_23F6F08B0();
  return sub_23F6F07C4(v1, v2, v3, v4);
}

uint64_t sub_23F8698C4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_23FB2ED38();
  if (v1 <= 0x3F)
  {
    result = sub_23FB2ED5C();
    if (v2 <= 0x3F)
    {
      result = sub_23FB2C764();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

void initializeBufferWithCopyOfBuffer for TypeConversionResult()
{
  sub_23F869970();
}

void sub_23F869970()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, char *, uint64_t);

  sub_23F6D3A90();
  v2 = v1;
  sub_23F877920();
  if ((v7 & 0x20000) != 0)
  {
    sub_23F876A58(*v2);
  }
  else
  {
    v8 = v5;
    v9 = sub_23F876A04(v3, v4, v5, v6);
    sub_23F7B0990(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16));
    v10 = sub_23F6B58C8();
    v11 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    sub_23F876FE4();
    v11(v0 + *(int *)(v8 + 24), (char *)v2 + *(int *)(v8 + 24), v10);
  }
  sub_23F6B69E0();
}

uint64_t destroy for TypeConversionResult(uint64_t a1, uint64_t a2)
{
  return sub_23F869A04(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18]);
}

uint64_t sub_23F869A04(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v9)(void);

  v5 = sub_23F6F59F8(a1, a2, a3);
  sub_23F78F1B0(v5);
  v6 = sub_23F6B58C8();
  v9 = *(uint64_t (**)(void))(*(_QWORD *)(v6 - 8) + 8);
  v7 = sub_23F6B5EE4();
  ((void (*)(uint64_t))v9)(v7);
  return sub_23F876FA8(v4 + *(int *)(v3 + 24), v6, v9);
}

void initializeWithCopy for TypeConversionResult()
{
  sub_23F869A6C();
}

void sub_23F869A6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;

  sub_23F6D3A90();
  v5 = sub_23F7B0794(v1, v2, v3, v4);
  sub_23F7B0990(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16));
  sub_23F6B58C8();
  sub_23F876FE4();
  sub_23F877054();
  sub_23F6B69E0();
}

void assignWithCopy for TypeConversionResult()
{
  sub_23F869AD4();
}

void sub_23F869AD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;

  sub_23F6D3A90();
  v5 = sub_23F7B0794(v1, v2, v3, v4);
  sub_23F7B0990(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24));
  sub_23F6B58C8();
  sub_23F8792C8();
  sub_23F876FE4();
  sub_23F877054();
  sub_23F6B69E0();
}

void initializeWithTake for TypeConversionResult()
{
  sub_23F869B38();
}

void sub_23F869B38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;

  sub_23F6D3A90();
  v5 = sub_23F7B0794(v1, v2, v3, v4);
  sub_23F7B0990(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32));
  sub_23F6B58C8();
  sub_23F8792C8();
  sub_23F876FE4();
  sub_23F877054();
  sub_23F6B69E0();
}

void assignWithTake for TypeConversionResult()
{
  sub_23F869B9C();
}

void sub_23F869B9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;

  sub_23F6D3A90();
  v5 = sub_23F7B0794(v1, v2, v3, v4);
  sub_23F7B0990(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40));
  sub_23F6B58C8();
  sub_23F8792C8();
  sub_23F876FE4();
  sub_23F877054();
  sub_23F6B69E0();
}

uint64_t getEnumTagSinglePayload for TypeConversionResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F869C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F86775C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18]);
}

uint64_t storeEnumTagSinglePayload for TypeConversionResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F869C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F8677C4(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18]);
}

void sub_23F869C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F869C40(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9A18]);
}

void sub_23F869C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  unint64_t v4;
  unint64_t v5;

  sub_23F8776F0(a1, a2, a3, a4);
  if (v4 <= 0x3F)
  {
    sub_23F8796A8();
    sub_23FB2C764();
    if (v5 <= 0x3F)
    {
      sub_23F87771C();
      sub_23F876F20();
      sub_23F6F0BFC();
    }
  }
  sub_23F8774C0();
}

uint64_t *initializeBufferWithCopyOfBuffer for QueryDecorationResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    v9 = *(int *)(a3 + 28);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_23FB2E354();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12))
    {
      v13 = sub_23F6916B8(&qword_256EA71F8);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v10, 0, 1, v12);
    }
    *(uint64_t *)((char *)v7 + *(int *)(a3 + 32)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 32));
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for QueryDecorationResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_23FB2E354();
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for QueryDecorationResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 28);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23FB2E354();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F6916B8(&qword_256EA71F8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 32));
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for QueryDecorationResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2E354();
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = sub_23F6916B8(&qword_256EA71F8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 32));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for QueryDecorationResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(int *)(a3 + 28);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_23FB2E354();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA71F8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 32)) = *(_QWORD *)(a2 + *(int *)(a3 + 32));
  return a1;
}

_QWORD *assignWithTake for QueryDecorationResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2E354();
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = sub_23F6916B8(&qword_256EA71F8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 32));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for QueryDecorationResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F86A2C0()
{
  unint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6F08A0();
  if (v2)
  {
    sub_23F6F083C(*v0);
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A1C();
    sub_23F6916B8(&qword_256EA71F8);
    v3 = sub_23F6F08CC(*(int *)(v1 + 28));
    sub_23F6F07D0(v3, v4, v5);
  }
}

uint64_t storeEnumTagSinglePayload for QueryDecorationResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F86A318()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F6F0850();
  if (v0)
  {
    sub_23F6F0B28();
    sub_23F694C84();
  }
  else
  {
    sub_23F6916B8(&qword_256EA71F8);
    sub_23F6F08B0();
    sub_23F6F07C4(v1, v2, v3, v4);
  }
}

void sub_23F86A364()
{
  unint64_t v0;

  sub_23F6DE58C(319, qword_256EAF058, (void (*)(uint64_t))MEMORY[0x24BE57E10]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *initializeBufferWithCopyOfBuffer for QueryDecorationPrePlannerResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FB2C764();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v15 = *(_QWORD *)v14;
    LOBYTE(v14) = v14[8];
    *(_QWORD *)v13 = v15;
    v13[8] = (char)v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for QueryDecorationPrePlannerResult(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for QueryDecorationPrePlannerResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a1 + v8;
  v13 = (uint64_t *)(a2 + v8);
  v14 = *v13;
  LOBYTE(v13) = *((_BYTE *)v13 + 8);
  *(_QWORD *)v12 = v14;
  *(_BYTE *)(v12 + 8) = (_BYTE)v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for QueryDecorationPrePlannerResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 24);
  v11 = a1 + v10;
  v12 = (uint64_t *)(a2 + v10);
  v13 = *v12;
  LOBYTE(v12) = *((_BYTE *)v12 + 8);
  *(_QWORD *)v11 = v13;
  *(_BYTE *)(v11 + 8) = (_BYTE)v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for QueryDecorationPrePlannerResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  return a1;
}

uint64_t assignWithTake for QueryDecorationPrePlannerResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 24);
  v13 = a1 + v12;
  v14 = (uint64_t *)(a2 + v12);
  v15 = *v14;
  LOBYTE(v14) = *((_BYTE *)v14 + 8);
  *(_QWORD *)v13 = v15;
  *(_BYTE *)(v13 + 8) = (_BYTE)v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for QueryDecorationPrePlannerResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F86A738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F86A744(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

void sub_23F86A744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F876A04(a1, a2, a3, a4);
  sub_23F878BF0();
  if (v6)
  {
    v7 = sub_23F878D84();
    sub_23F6F07D0(v7, v8, v9);
  }
  else
  {
    sub_23F6F083C(*(_QWORD *)(a1 + *(int *)(a3 + 20) + 8));
    sub_23F694C84();
  }
}

uint64_t storeEnumTagSinglePayload for QueryDecorationPrePlannerResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F86A79C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F86A7A8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140]);
}

void sub_23F86A7A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F877014(a1, a2, a3, a4, a5);
  sub_23F6F07EC();
  if (v6)
  {
    sub_23F6F08B0();
    sub_23F6F07C4(v7, v8, v9, v10);
  }
  else
  {
    sub_23F878064(*(int *)(a4 + 20));
    sub_23F694C84();
  }
}

void sub_23F86A7F0()
{
  sub_23F86A7FC();
}

void sub_23F86A7FC()
{
  unint64_t v0;

  sub_23FB2C764();
  if (v0 <= 0x3F)
  {
    sub_23F87771C();
    sub_23F876F20();
    sub_23F6F0BFC();
  }
  sub_23F8774C0();
}

uint64_t initializeBufferWithCopyOfBuffer for QueryDecorationPrePlannerResultPayload(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for QueryDecorationPrePlannerResultPayload(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for QueryDecorationPrePlannerResultPayload(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for QueryDecorationPrePlannerResultPayload(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFB && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 250;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 5)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QueryDecorationPrePlannerResultPayload(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_23F86A984(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_23F86A98C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2;
  return result;
}

void type metadata accessor for QueryDecorationPrePlannerResultPayload()
{
  sub_23F694C70();
}

void type metadata accessor for UndoOperation()
{
  sub_23F694C70();
}

_QWORD *initializeBufferWithCopyOfBuffer for UndoRedoRequest(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FB2C4B8();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA2798);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v14 = a3[7];
    *((_BYTE *)v4 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_23FB2C764();
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    v18(v15, v16, v17);
    v19 = a3[8];
    v20 = (char *)v4 + v19;
    v21 = (char *)a2 + v19;
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v21, 1, v17))
    {
      v22 = sub_23F6916B8(&qword_256EA49D8);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v18(v20, v21, v17);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v20, 0, 1, v17);
    }
  }
  return v4;
}

uint64_t destroy for UndoRedoRequest(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t (*v10)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_23FB2C4B8();
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[7];
  v7 = sub_23FB2C764();
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v10(v6, v7);
  v8 = a1 + a2[8];
  result = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v7);
  if (!(_DWORD)result)
    return v10(v8, v7);
  return result;
}

_QWORD *initializeWithCopy for UndoRedoRequest(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23FB2C4B8();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F6916B8(&qword_256EA2798);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v12 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_23FB2C764();
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  v16(v13, v14, v15);
  v17 = a3[8];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, v15))
  {
    v20 = sub_23F6916B8(&qword_256EA49D8);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v16(v18, v19, v15);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v18, 0, 1, v15);
  }
  return a1;
}

_QWORD *assignWithCopy for UndoRedoRequest(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  int v23;
  uint64_t v24;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2C4B8();
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = sub_23F6916B8(&qword_256EA2798);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_23FB2C764();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(void (**)(char *, char *, uint64_t))(v18 + 24);
  v19(v15, v16, v17);
  v20 = a3[8];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  LODWORD(v15) = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1 + v20, 1, v17);
  v23 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v17);
  if (!(_DWORD)v15)
  {
    if (!v23)
    {
      v19(v21, v22, v17);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    v24 = sub_23F6916B8(&qword_256EA49D8);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v22, v17);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v21, 0, 1, v17);
  return a1;
}

_OWORD *initializeWithTake for UndoRedoRequest(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2C4B8();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA2798);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v11 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_23FB2C764();
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
  v15(v12, v13, v14);
  v16 = a3[8];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v18, 1, v14))
  {
    v19 = sub_23F6916B8(&qword_256EA49D8);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v15(v17, v18, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v17, 0, 1, v14);
  }
  return a1;
}

_QWORD *assignWithTake for UndoRedoRequest(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  int v24;
  uint64_t v25;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23FB2C4B8();
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v10);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v13 = *(_QWORD *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    v14 = sub_23F6916B8(&qword_256EA2798);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  v15 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_23FB2C764();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(void (**)(char *, char *, uint64_t))(v19 + 40);
  v20(v16, v17, v18);
  v21 = a3[8];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  LODWORD(v16) = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1 + v21, 1, v18);
  v24 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v23, 1, v18);
  if (!(_DWORD)v16)
  {
    if (!v24)
    {
      v20(v22, v23, v18);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    v25 = sub_23F6916B8(&qword_256EA49D8);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v22, v23, v18);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v22, 0, 1, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for UndoRedoRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F86B304()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F6F08A0();
  if (v2)
  {
    sub_23F6F083C(*(_QWORD *)(v0 + 8));
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A1C();
    sub_23F6916B8(&qword_256EA2798);
    sub_23F6F07DC();
    if (v2)
    {
      sub_23F6F0B94();
    }
    else
    {
      sub_23F6B58C8();
      sub_23F6F07DC();
      if (v4)
      {
        sub_23F6F0AFC();
      }
      else
      {
        sub_23F6916B8(&qword_256EA49D8);
        v3 = *(int *)(v1 + 32);
      }
    }
    v5 = sub_23F6F08CC(v3);
    sub_23F6F07D0(v5, v6, v7);
  }
}

uint64_t storeEnumTagSinglePayload for UndoRedoRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F86B38C()
{
  char v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6F0850();
  if (v0)
  {
    sub_23F6F0B1C();
    sub_23F694C84();
  }
  else
  {
    sub_23F6916B8(&qword_256EA2798);
    sub_23F6F07EC();
    if (v0)
    {
      sub_23F6F0BC4();
    }
    else
    {
      sub_23F6B58C8();
      sub_23F6F07EC();
      if (v1)
        sub_23F6F0BB8();
      else
        sub_23F6916B8(&qword_256EA49D8);
    }
    sub_23F6F08B0();
    sub_23F6F07C4(v2, v3, v4, v5);
  }
}

void sub_23F86B40C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23F6DE58C(319, qword_256EA6B68, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
  if (v0 <= 0x3F)
  {
    sub_23FB2C764();
    if (v1 <= 0x3F)
    {
      sub_23F6DE58C(319, qword_256EA5318, (void (*)(uint64_t))MEMORY[0x24BE52140]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ClientUndoRedoRequest(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FB2C4B8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FB2C764();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v13 = a3[7];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, v11))
    {
      v16 = sub_23F6916B8(&qword_256EA49D8);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v12(v14, v15, v11);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v14, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t destroy for ClientUndoRedoRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t (*v9)(uint64_t, uint64_t);

  v4 = sub_23FB2C4B8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 24);
  v6 = sub_23FB2C764();
  v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v9(v5, v6);
  v7 = a1 + *(int *)(a2 + 28);
  result = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v6);
  if (!(_DWORD)result)
    return v9(v7, v6);
  return result;
}

uint64_t initializeWithCopy for ClientUndoRedoRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  void (*v11)(void *, const void *, uint64_t);
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;

  v6 = sub_23FB2C4B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23FB2C764();
  v11 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v12 = a3[7];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v10))
  {
    v15 = sub_23F6916B8(&qword_256EA49D8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v10);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v13, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithCopy for ClientUndoRedoRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  void *v14;
  const void *v15;
  int v16;
  uint64_t v17;

  v6 = sub_23FB2C4B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23FB2C764();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  v13 = a3[7];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  LODWORD(v8) = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1 + v13, 1, v10);
  v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, v10);
  if (!(_DWORD)v8)
  {
    if (!v16)
    {
      v12(v14, v15, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = sub_23F6916B8(&qword_256EA49D8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v14, v15, v10);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v14, 0, 1, v10);
  return a1;
}

uint64_t initializeWithTake for ClientUndoRedoRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  void (*v11)(void *, const void *, uint64_t);
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;

  v6 = sub_23FB2C4B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23FB2C764();
  v11 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v12 = a3[7];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v10))
  {
    v15 = sub_23F6916B8(&qword_256EA49D8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v10);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v13, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithTake for ClientUndoRedoRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  void *v14;
  const void *v15;
  int v16;
  uint64_t v17;

  v6 = sub_23FB2C4B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23FB2C764();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v13 = a3[7];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  LODWORD(v8) = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1 + v13, 1, v10);
  v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, v10);
  if (!(_DWORD)v8)
  {
    if (!v16)
    {
      v12(v14, v15, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = sub_23F6916B8(&qword_256EA49D8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v14, v15, v10);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v14, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientUndoRedoRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F86BB58(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F72E034();
  sub_23F6F07DC();
  if (v4)
  {
    v5 = sub_23F876D78();
  }
  else
  {
    if ((_DWORD)a2 == 254)
    {
      sub_23F694C84();
      return;
    }
    sub_23F6B58C8();
    sub_23F6F07DC();
    if (v4)
    {
      sub_23F6F0B08();
    }
    else
    {
      sub_23F6916B8(&qword_256EA49D8);
      sub_23F6F0AFC();
    }
    v5 = a1 + v7;
  }
  sub_23F6F07D0(v5, a2, v6);
}

uint64_t storeEnumTagSinglePayload for ClientUndoRedoRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F86BBEC(uint64_t a1, char a2, int a3, uint64_t a4)
{
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F72E034();
  sub_23F6F07EC();
  if (v8)
  {
    sub_23F876DBC();
  }
  else
  {
    if (a3 == 254)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
      sub_23F694C84();
      return;
    }
    sub_23F6B58C8();
    sub_23F6F07EC();
    if (v8)
    {
      sub_23F6F0BD0();
    }
    else
    {
      sub_23F6916B8(&qword_256EA49D8);
      sub_23F6F0BB8();
    }
  }
  sub_23F6F08B0();
  sub_23F6F07C4(v9, v10, v11, v12);
}

void sub_23F86BC70()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23FB2C4B8();
  if (v0 <= 0x3F)
  {
    sub_23FB2C764();
    if (v1 <= 0x3F)
    {
      sub_23F6DE58C(319, qword_256EA5318, (void (*)(uint64_t))MEMORY[0x24BE52140]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void type metadata accessor for ContinuePlanning()
{
  sub_23F694C70();
}

ValueMetadata *type metadata accessor for ContinuePlanning.CodingKeys()
{
  return &type metadata for ContinuePlanning.CodingKeys;
}

ValueMetadata *type metadata accessor for ClientUndoRedoRequest.CodingKeys()
{
  return &type metadata for ClientUndoRedoRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for UndoRedoRequest.CodingKeys()
{
  return &type metadata for UndoRedoRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for UndoOperation.CodingKeys()
{
  return &type metadata for UndoOperation.CodingKeys;
}

ValueMetadata *type metadata accessor for UndoOperation.UndoCodingKeys()
{
  return &type metadata for UndoOperation.UndoCodingKeys;
}

ValueMetadata *type metadata accessor for UndoOperation.RedoCodingKeys()
{
  return &type metadata for UndoOperation.RedoCodingKeys;
}

ValueMetadata *type metadata accessor for QueryDecorationPrePlannerResultPayload.CodingKeys()
{
  return &type metadata for QueryDecorationPrePlannerResultPayload.CodingKeys;
}

ValueMetadata *type metadata accessor for QueryDecorationPrePlannerResultPayload.StringsCodingKeys()
{
  return &type metadata for QueryDecorationPrePlannerResultPayload.StringsCodingKeys;
}

ValueMetadata *type metadata accessor for QueryDecorationPrePlannerResultPayload.TypedValuesCodingKeys()
{
  return &type metadata for QueryDecorationPrePlannerResultPayload.TypedValuesCodingKeys;
}

ValueMetadata *type metadata accessor for QueryDecorationPrePlannerResultPayload.RetrievedContextsCodingKeys()
{
  return &type metadata for QueryDecorationPrePlannerResultPayload.RetrievedContextsCodingKeys;
}

ValueMetadata *type metadata accessor for QueryDecorationPrePlannerResultPayload.EntitySpanMatchResultsCodingKeys()
{
  return &type metadata for QueryDecorationPrePlannerResultPayload.EntitySpanMatchResultsCodingKeys;
}

ValueMetadata *type metadata accessor for QueryDecorationPrePlannerResultPayload.RetrievedToolsCodingKeys()
{
  return &type metadata for QueryDecorationPrePlannerResultPayload.RetrievedToolsCodingKeys;
}

ValueMetadata *type metadata accessor for QueryDecorationPrePlannerResultPayload.ToolQueryOutputsCodingKeys()
{
  return &type metadata for QueryDecorationPrePlannerResultPayload.ToolQueryOutputsCodingKeys;
}

ValueMetadata *type metadata accessor for QueryDecorationPrePlannerResult.CodingKeys()
{
  return &type metadata for QueryDecorationPrePlannerResult.CodingKeys;
}

ValueMetadata *type metadata accessor for QueryDecorationResult.CodingKeys()
{
  return &type metadata for QueryDecorationResult.CodingKeys;
}

ValueMetadata *type metadata accessor for TypeConversionResult.CodingKeys()
{
  return &type metadata for TypeConversionResult.CodingKeys;
}

ValueMetadata *type metadata accessor for TypeConversionRequest.CodingKeys()
{
  return &type metadata for TypeConversionRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for ToolResolution.CodingKeys()
{
  return &type metadata for ToolResolution.CodingKeys;
}

ValueMetadata *type metadata accessor for ExternalAgentRequestRewriteMetadata.CodingKeys()
{
  return &type metadata for ExternalAgentRequestRewriteMetadata.CodingKeys;
}

ValueMetadata *type metadata accessor for ExternalAgentOutcome.CodingKeys()
{
  return &type metadata for ExternalAgentOutcome.CodingKeys;
}

ValueMetadata *type metadata accessor for ExternalAgentSpeechQuery.CodingKeys()
{
  return &type metadata for ExternalAgentSpeechQuery.CodingKeys;
}

ValueMetadata *type metadata accessor for ExternalAgentTextQuery.CodingKeys()
{
  return &type metadata for ExternalAgentTextQuery.CodingKeys;
}

ValueMetadata *type metadata accessor for ToolRetrievalResponse.CodingKeys()
{
  return &type metadata for ToolRetrievalResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for EntitySpanMatchResult.CodingKeys()
{
  return &type metadata for EntitySpanMatchResult.CodingKeys;
}

ValueMetadata *type metadata accessor for DynamicEnumerationEntityStatement.CodingKeys()
{
  return &type metadata for DynamicEnumerationEntityStatement.CodingKeys;
}

ValueMetadata *type metadata accessor for RetrievedContextStatement.CodingKeys()
{
  return &type metadata for RetrievedContextStatement.CodingKeys;
}

ValueMetadata *type metadata accessor for ContextRetrieved.CodingKeys()
{
  return &type metadata for ContextRetrieved.CodingKeys;
}

ValueMetadata *type metadata accessor for SafetyModeException.CodingKeys()
{
  return &type metadata for SafetyModeException.CodingKeys;
}

ValueMetadata *type metadata accessor for SafetyModeRelease.CodingKeys()
{
  return &type metadata for SafetyModeRelease.CodingKeys;
}

ValueMetadata *type metadata accessor for ContextPrewarmCompleted.CodingKeys()
{
  return &type metadata for ContextPrewarmCompleted.CodingKeys;
}

ValueMetadata *type metadata accessor for ContextPrewarmRequest.CodingKeys()
{
  return &type metadata for ContextPrewarmRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for ClientInitiatedClientAction.CodingKeys()
{
  return &type metadata for ClientInitiatedClientAction.CodingKeys;
}

ValueMetadata *type metadata accessor for ParameterPath.CodingKeys()
{
  return &type metadata for ParameterPath.CodingKeys;
}

ValueMetadata *type metadata accessor for ActionResolverRequest.CodingKeys()
{
  return &type metadata for ActionResolverRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for ActionResult.CodingKeys()
{
  return &type metadata for ActionResult.CodingKeys;
}

ValueMetadata *type metadata accessor for ClientEffectResult.CodingKeys()
{
  return &type metadata for ClientEffectResult.CodingKeys;
}

ValueMetadata *type metadata accessor for ClientEffectResult.CompleteCodingKeys()
{
  return &type metadata for ClientEffectResult.CompleteCodingKeys;
}

ValueMetadata *type metadata accessor for ClientEffectResult.ErrorCodingKeys()
{
  return &type metadata for ClientEffectResult.ErrorCodingKeys;
}

ValueMetadata *type metadata accessor for ClientEffectInvocation.CodingKeys()
{
  return &type metadata for ClientEffectInvocation.CodingKeys;
}

ValueMetadata *type metadata accessor for SpeechRequestCandidate.CodingKeys()
{
  return &type metadata for SpeechRequestCandidate.CodingKeys;
}

ValueMetadata *type metadata accessor for Candidate.CodingKeys()
{
  return &type metadata for Candidate.CodingKeys;
}

ValueMetadata *type metadata accessor for Candidate.PromptStatus.CodingKeys()
{
  return &type metadata for Candidate.PromptStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for Candidate.PromptStatus.NoneCodingKeys()
{
  return &type metadata for Candidate.PromptStatus.NoneCodingKeys;
}

ValueMetadata *type metadata accessor for Candidate.PromptStatus.ConfirmedCodingKeys()
{
  return &type metadata for Candidate.PromptStatus.ConfirmedCodingKeys;
}

ValueMetadata *type metadata accessor for Candidate.PromptStatus.PickedCodingKeys()
{
  return &type metadata for Candidate.PromptStatus.PickedCodingKeys;
}

ValueMetadata *type metadata accessor for QueryResults.CodingKeys()
{
  return &type metadata for QueryResults.CodingKeys;
}

ValueMetadata *type metadata accessor for QueryStepResults.CodingKeys()
{
  return &type metadata for QueryStepResults.CodingKeys;
}

ValueMetadata *type metadata accessor for ResponseGenerationRequest.CodingKeys()
{
  return &type metadata for ResponseGenerationRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for StatementResultPayload.CodingKeys()
{
  return &type metadata for StatementResultPayload.CodingKeys;
}

ValueMetadata *type metadata accessor for StatementResult.CodingKeys()
{
  return &type metadata for StatementResult.CodingKeys;
}

ValueMetadata *type metadata accessor for ActionStepResult.CodingKeys()
{
  return &type metadata for ActionStepResult.CodingKeys;
}

ValueMetadata *type metadata accessor for ActionParameterContext.CodingKeys()
{
  return &type metadata for ActionParameterContext.CodingKeys;
}

ValueMetadata *type metadata accessor for QueryPredicate.CodingKeys()
{
  return &type metadata for QueryPredicate.CodingKeys;
}

ValueMetadata *type metadata accessor for VariableSetter.CodingKeys()
{
  return &type metadata for VariableSetter.CodingKeys;
}

ValueMetadata *type metadata accessor for PropertyQuery.CodingKeys()
{
  return &type metadata for PropertyQuery.CodingKeys;
}

ValueMetadata *type metadata accessor for PropertyQuery.CompareCodingKeys()
{
  return &type metadata for PropertyQuery.CompareCodingKeys;
}

ValueMetadata *type metadata accessor for PropertyQuery.AndCodingKeys()
{
  return &type metadata for PropertyQuery.AndCodingKeys;
}

ValueMetadata *type metadata accessor for PropertyQuery.OrCodingKeys()
{
  return &type metadata for PropertyQuery.OrCodingKeys;
}

ValueMetadata *type metadata accessor for QueryData.CodingKeys()
{
  return &type metadata for QueryData.CodingKeys;
}

ValueMetadata *type metadata accessor for QueryData.IdentifierQueryCodingKeys()
{
  return &type metadata for QueryData.IdentifierQueryCodingKeys;
}

ValueMetadata *type metadata accessor for QueryData.StringQueryCodingKeys()
{
  return &type metadata for QueryData.StringQueryCodingKeys;
}

ValueMetadata *type metadata accessor for QueryData.PropertyQueryCodingKeys()
{
  return &type metadata for QueryData.PropertyQueryCodingKeys;
}

ValueMetadata *type metadata accessor for QueryData.SystemQueryCodingKeys()
{
  return &type metadata for QueryData.SystemQueryCodingKeys;
}

ValueMetadata *type metadata accessor for ExecutionStepResult.CodingKeys()
{
  return &type metadata for ExecutionStepResult.CodingKeys;
}

ValueMetadata *type metadata accessor for VariableStep.CodingKeys()
{
  return &type metadata for VariableStep.CodingKeys;
}

ValueMetadata *type metadata accessor for ParameterQuery.CodingKeys()
{
  return &type metadata for ParameterQuery.CodingKeys;
}

ValueMetadata *type metadata accessor for QueryStep.CodingKeys()
{
  return &type metadata for QueryStep.CodingKeys;
}

ValueMetadata *type metadata accessor for ClientAction.CodingKeys()
{
  return &type metadata for ClientAction.CodingKeys;
}

ValueMetadata *type metadata accessor for ClientAction.UnresolvedParameterValue.CodingKeys()
{
  return &type metadata for ClientAction.UnresolvedParameterValue.CodingKeys;
}

ValueMetadata *type metadata accessor for ClientAction.ShimParameterResolution.CodingKeys()
{
  return &type metadata for ClientAction.ShimParameterResolution.CodingKeys;
}

ValueMetadata *type metadata accessor for ClientAction.ShimParameterResolution.ResolvedCodingKeys()
{
  return &type metadata for ClientAction.ShimParameterResolution.ResolvedCodingKeys;
}

ValueMetadata *type metadata accessor for ClientAction.ShimParameterResolution.UnresolvedCodingKeys()
{
  return &type metadata for ClientAction.ShimParameterResolution.UnresolvedCodingKeys;
}

ValueMetadata *type metadata accessor for ActionCancellation.CodingKeys()
{
  return &type metadata for ActionCancellation.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for Action.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23F86C220 + 4 * byte_23FB6393F[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23F86C254 + 4 * byte_23FB6393A[v4]))();
}

uint64_t sub_23F86C254(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F86C25C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F86C264);
  return result;
}

uint64_t sub_23F86C270(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F86C278);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23F86C27C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F86C284(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Action.CodingKeys()
{
  return &type metadata for Action.CodingKeys;
}

ValueMetadata *type metadata accessor for Action.ParameterValue.CodingKeys()
{
  return &type metadata for Action.ParameterValue.CodingKeys;
}

ValueMetadata *type metadata accessor for ToolParameterValue.CodingKeys()
{
  return &type metadata for ToolParameterValue.CodingKeys;
}

ValueMetadata *type metadata accessor for ToolParameterValue.ReferenceCodingKeys()
{
  return &type metadata for ToolParameterValue.ReferenceCodingKeys;
}

ValueMetadata *type metadata accessor for ToolParameterValue.ValueCodingKeys()
{
  return &type metadata for ToolParameterValue.ValueCodingKeys;
}

ValueMetadata *type metadata accessor for ExecutionStepResults.CodingKeys()
{
  return &type metadata for ExecutionStepResults.CodingKeys;
}

ValueMetadata *type metadata accessor for TextQuery.CodingKeys()
{
  return &type metadata for TextQuery.CodingKeys;
}

ValueMetadata *type metadata accessor for SpeechQuery.CodingKeys()
{
  return &type metadata for SpeechQuery.CodingKeys;
}

ValueMetadata *type metadata accessor for ProgramStatement.CodingKeys()
{
  return &type metadata for ProgramStatement.CodingKeys;
}

ValueMetadata *type metadata accessor for RequestPrescribedPlan.KnowledgeTool.CodingKeys()
{
  return &type metadata for RequestPrescribedPlan.KnowledgeTool.CodingKeys;
}

ValueMetadata *type metadata accessor for RequestPrescribedPlan.DisplayTool.CodingKeys()
{
  return &type metadata for RequestPrescribedPlan.DisplayTool.CodingKeys;
}

ValueMetadata *type metadata accessor for RequestPrescribedPlan.ConvertTool.CodingKeys()
{
  return &type metadata for RequestPrescribedPlan.ConvertTool.CodingKeys;
}

ValueMetadata *type metadata accessor for RequestPrescribedPlan.TextTool.CodingKeys()
{
  return &type metadata for RequestPrescribedPlan.TextTool.CodingKeys;
}

ValueMetadata *type metadata accessor for RequestPrescribedPlan.GenerateImageIntentTool.CodingKeys()
{
  return &type metadata for RequestPrescribedPlan.GenerateImageIntentTool.CodingKeys;
}

ValueMetadata *type metadata accessor for RequestPrescribedPlan.GenerateRichContentFromMediaIntentTool.CodingKeys()
{
  return &type metadata for RequestPrescribedPlan.GenerateRichContentFromMediaIntentTool.CodingKeys;
}

ValueMetadata *type metadata accessor for RequestPrescribedPlan.GenerateRichContentTool.CodingKeys()
{
  return &type metadata for RequestPrescribedPlan.GenerateRichContentTool.CodingKeys;
}

ValueMetadata *type metadata accessor for RequestPrescribedPlan.LowConfidenceKnowledgeTool.CodingKeys()
{
  return &type metadata for RequestPrescribedPlan.LowConfidenceKnowledgeTool.CodingKeys;
}

ValueMetadata *type metadata accessor for RequestPrescribedPlan.SearchTool.CodingKeys()
{
  return &type metadata for RequestPrescribedPlan.SearchTool.CodingKeys;
}

uint64_t _s30IntelligenceFlowPlannerSupport38QueryDecorationPrePlannerResultPayloadO10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_23F6B6EC0(-1);
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_23F6B6EC0((*a1 | (v4 << 8)) - 6);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_23F6B6EC0((*a1 | (v4 << 8)) - 6);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_23F6B6EC0((*a1 | (v4 << 8)) - 6);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return sub_23F6B6EC0(v8);
}

uint64_t _s30IntelligenceFlowPlannerSupport38QueryDecorationPrePlannerResultPayloadO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23F86C480 + 4 * byte_23FB63949[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23F86C4B4 + 4 * byte_23FB63944[v4]))();
}

uint64_t sub_23F86C4B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F86C4C0);
  return result;
}

_BYTE *sub_23F86C4C8(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F86C4D0);
  return sub_23F6B6EB0((_BYTE *)a1, a2 + 5);
}

ValueMetadata *type metadata accessor for RequestPrescribedPlan.CodingKeys()
{
  return &type metadata for RequestPrescribedPlan.CodingKeys;
}

ValueMetadata *type metadata accessor for RequestPrescribedPlan.SearchToolCodingKeys()
{
  return &type metadata for RequestPrescribedPlan.SearchToolCodingKeys;
}

ValueMetadata *type metadata accessor for RequestPrescribedPlan.LowConfidenceKnowledgeToolCodingKeys()
{
  return &type metadata for RequestPrescribedPlan.LowConfidenceKnowledgeToolCodingKeys;
}

ValueMetadata *type metadata accessor for RequestPrescribedPlan.TextToolCodingKeys()
{
  return &type metadata for RequestPrescribedPlan.TextToolCodingKeys;
}

ValueMetadata *type metadata accessor for RequestPrescribedPlan.ConvertToolCodingKeys()
{
  return &type metadata for RequestPrescribedPlan.ConvertToolCodingKeys;
}

ValueMetadata *type metadata accessor for RequestPrescribedPlan.DisplayToolCodingKeys()
{
  return &type metadata for RequestPrescribedPlan.DisplayToolCodingKeys;
}

ValueMetadata *type metadata accessor for RequestPrescribedPlan.KnowledgeToolCodingKeys()
{
  return &type metadata for RequestPrescribedPlan.KnowledgeToolCodingKeys;
}

ValueMetadata *type metadata accessor for ExternalAgentRequest.CodingKeys()
{
  return &type metadata for ExternalAgentRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for RequestContent.SystemPromptResolution.CodingKeys()
{
  return &type metadata for RequestContent.SystemPromptResolution.CodingKeys;
}

ValueMetadata *type metadata accessor for RequestContent.SystemPromptResolution.ActionCancellation.CodingKeys()
{
  return &type metadata for RequestContent.SystemPromptResolution.ActionCancellation.CodingKeys;
}

ValueMetadata *type metadata accessor for RequestContent.SystemPromptResolution.RequirementResolution.CodingKeys()
{
  return &type metadata for RequestContent.SystemPromptResolution.RequirementResolution.CodingKeys;
}

uint64_t _s30IntelligenceFlowPlannerSupport9CandidateV6SourceOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_23F6B6EC0(-1);
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_23F6B6EC0((*a1 | (v4 << 8)) - 8);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_23F6B6EC0((*a1 | (v4 << 8)) - 8);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_23F6B6EC0((*a1 | (v4 << 8)) - 8);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return sub_23F6B6EC0(v8);
}

uint64_t _s30IntelligenceFlowPlannerSupport9CandidateV6SourceOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_23F86C660 + 4 * byte_23FB63953[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_23F86C694 + 4 * byte_23FB6394E[v4]))();
}

uint64_t sub_23F86C698(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F86C6A0);
  return result;
}

_BYTE *sub_23F86C6A8(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F86C6B0);
  return sub_23F6B6EB0((_BYTE *)a1, a2 + 7);
}

ValueMetadata *type metadata accessor for RequestContent.SystemPromptResolution.UserAction.CodingKeys()
{
  return &type metadata for RequestContent.SystemPromptResolution.UserAction.CodingKeys;
}

ValueMetadata *type metadata accessor for RequestContent.SystemPromptResolution.UserAction.ActionConfirmedCodingKeys()
{
  return &type metadata for RequestContent.SystemPromptResolution.UserAction.ActionConfirmedCodingKeys;
}

ValueMetadata *type metadata accessor for RequestContent.SystemPromptResolution.UserAction.DeviceUnlockedCodingKeys()
{
  return &type metadata for RequestContent.SystemPromptResolution.UserAction.DeviceUnlockedCodingKeys;
}

ValueMetadata *type metadata accessor for RequestContent.SystemPromptResolution.UserAction.ParameterValueSelectedCodingKeys()
{
  return &type metadata for RequestContent.SystemPromptResolution.UserAction.ParameterValueSelectedCodingKeys;
}

ValueMetadata *type metadata accessor for RequestContent.SystemPromptResolution.UserAction.ParameterConfirmedCodingKeys()
{
  return &type metadata for RequestContent.SystemPromptResolution.UserAction.ParameterConfirmedCodingKeys;
}

ValueMetadata *type metadata accessor for RequestContent.SystemPromptResolution.UserAction.ParameterItemSelectedCodingKeys()
{
  return &type metadata for RequestContent.SystemPromptResolution.UserAction.ParameterItemSelectedCodingKeys;
}

ValueMetadata *type metadata accessor for RequestContent.SystemPromptResolution.UserAction.DisambiguationIndexSelectedCodingKeys()
{
  return &type metadata for RequestContent.SystemPromptResolution.UserAction.DisambiguationIndexSelectedCodingKeys;
}

ValueMetadata *type metadata accessor for RequestContent.SystemPromptResolution.UserAction.RequirementAddressedCodingKeys()
{
  return &type metadata for RequestContent.SystemPromptResolution.UserAction.RequirementAddressedCodingKeys;
}

ValueMetadata *type metadata accessor for RequestContent.SystemPromptResolution.UserAction.ActionCanceledCodingKeys()
{
  return &type metadata for RequestContent.SystemPromptResolution.UserAction.ActionCanceledCodingKeys;
}

ValueMetadata *type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput.CodingKeys()
{
  return &type metadata for RequestContent.SystemPromptResolution.ResolutionInput.CodingKeys;
}

ValueMetadata *type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput.TouchCodingKeys()
{
  return &type metadata for RequestContent.SystemPromptResolution.ResolutionInput.TouchCodingKeys;
}

ValueMetadata *type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput.HeadGestureCodingKeys()
{
  return &type metadata for RequestContent.SystemPromptResolution.ResolutionInput.HeadGestureCodingKeys;
}

ValueMetadata *type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput.TextCodingKeys()
{
  return &type metadata for RequestContent.SystemPromptResolution.ResolutionInput.TextCodingKeys;
}

ValueMetadata *type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput.SpeechCodingKeys()
{
  return &type metadata for RequestContent.SystemPromptResolution.ResolutionInput.SpeechCodingKeys;
}

ValueMetadata *type metadata accessor for RequestContent.SpeechContent.CodingKeys()
{
  return &type metadata for RequestContent.SpeechContent.CodingKeys;
}

ValueMetadata *type metadata accessor for RequestContent.TextContent.CodingKeys()
{
  return &type metadata for RequestContent.TextContent.CodingKeys;
}

ValueMetadata *type metadata accessor for RequestContent.StopContent.CodingKeys()
{
  return &type metadata for RequestContent.StopContent.CodingKeys;
}

ValueMetadata *type metadata accessor for RequestContent.CodingKeys()
{
  return &type metadata for RequestContent.CodingKeys;
}

ValueMetadata *type metadata accessor for RequestContent.StopCodingKeys()
{
  return &type metadata for RequestContent.StopCodingKeys;
}

ValueMetadata *type metadata accessor for RequestContent.TextCodingKeys()
{
  return &type metadata for RequestContent.TextCodingKeys;
}

ValueMetadata *type metadata accessor for RequestContent.SpeechCodingKeys()
{
  return &type metadata for RequestContent.SpeechCodingKeys;
}

ValueMetadata *type metadata accessor for RequestContent.PromptResolutionCodingKeys()
{
  return &type metadata for RequestContent.PromptResolutionCodingKeys;
}

ValueMetadata *type metadata accessor for Request.CodingKeys()
{
  return &type metadata for Request.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionStart.CodingKeys()
{
  return &type metadata for SessionStart.CodingKeys;
}

ValueMetadata *type metadata accessor for Session.PlanGenerationModelOutputError.CodingKeys()
{
  return &type metadata for Session.PlanGenerationModelOutputError.CodingKeys;
}

ValueMetadata *type metadata accessor for Session.PlanGenerationError.CodingKeys()
{
  return &type metadata for Session.PlanGenerationError.CodingKeys;
}

ValueMetadata *type metadata accessor for Session.PlanGenerationError.ModelOutputErrorCodingKeys()
{
  return &type metadata for Session.PlanGenerationError.ModelOutputErrorCodingKeys;
}

ValueMetadata *type metadata accessor for Session.RecoverableError.CodingKeys()
{
  return &type metadata for Session.RecoverableError.CodingKeys;
}

ValueMetadata *type metadata accessor for Session.RecoverableError.PlanGenerationErrorCodingKeys()
{
  return &type metadata for Session.RecoverableError.PlanGenerationErrorCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Plan.CodingKeys()
{
  return &type metadata for Session.Plan.CodingKeys;
}

uint64_t _s30IntelligenceFlowPlannerSupport13UndoOperationOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F86C8EC + 4 * byte_23FB6395D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F86C920 + 4 * byte_23FB63958[v4]))();
}

uint64_t sub_23F86C924(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F86C92CLL);
  return result;
}

_BYTE *sub_23F86C934(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F86C93CLL);
  return sub_23F6B6EB0((_BYTE *)a1, a2 + 1);
}

ValueMetadata *type metadata accessor for Session.Plan.DecompositionResult.CodingKeys()
{
  return &type metadata for Session.Plan.DecompositionResult.CodingKeys;
}

ValueMetadata *type metadata accessor for Session.Plan.Source.CodingKeys()
{
  return &type metadata for Session.Plan.Source.CodingKeys;
}

ValueMetadata *type metadata accessor for Session.Plan.Source.NotSetCodingKeys()
{
  return &type metadata for Session.Plan.Source.NotSetCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Plan.Source.PrescribedPlanGeneratorCodingKeys()
{
  return &type metadata for Session.Plan.Source.PrescribedPlanGeneratorCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Plan.Source.DummyPlannerCodingKeys()
{
  return &type metadata for Session.Plan.Source.DummyPlannerCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Plan.Source.PlanOverrideCodingKeys()
{
  return &type metadata for Session.Plan.Source.PlanOverrideCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Plan.Source.FullPlannerCodingKeys()
{
  return &type metadata for Session.Plan.Source.FullPlannerCodingKeys;
}

uint64_t getEnumTagSinglePayload for Session.Event.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF5)
  {
    if (a2 + 11 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 11) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 12;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v5 = v6 - 12;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Session.Event.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_23F86CA90 + 4 * byte_23FB63967[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_23F86CAC4 + 4 * byte_23FB63962[v4]))();
}

uint64_t sub_23F86CAC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F86CACC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F86CAD4);
  return result;
}

uint64_t sub_23F86CAE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F86CAE8);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_23F86CAEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F86CAF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Session.Event.CodingKeys()
{
  return &type metadata for Session.Event.CodingKeys;
}

uint64_t getEnumTagSinglePayload for Session.Event.Payload.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xD0)
  {
    if (a2 + 48 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 48) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 49;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x31;
  v5 = v6 - 49;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Session.Event.Payload.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 48 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 48) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xD0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xCF)
    return ((uint64_t (*)(void))((char *)&loc_23F86CBE4 + 4 * byte_23FB63971[v4]))();
  *a1 = a2 + 48;
  return ((uint64_t (*)(void))((char *)sub_23F86CC18 + 4 * byte_23FB6396C[v4]))();
}

uint64_t sub_23F86CC18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F86CC20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F86CC28);
  return result;
}

uint64_t sub_23F86CC34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F86CC3CLL);
  *(_BYTE *)result = a2 + 48;
  return result;
}

uint64_t sub_23F86CC40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F86CC48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.CodingKeys()
{
  return &type metadata for Session.Event.Payload.CodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.SessionStartCodingKeys()
{
  return &type metadata for Session.Event.Payload.SessionStartCodingKeys;
}

void type metadata accessor for Session.Event.Payload.TextQueryCodingKeys()
{
  sub_23F694C70();
}

void type metadata accessor for Session.Event.Payload.SpeechQueryCodingKeys()
{
  sub_23F694C70();
}

ValueMetadata *type metadata accessor for Session.Event.Payload.RequestCodingKeys()
{
  return &type metadata for Session.Event.Payload.RequestCodingKeys;
}

void type metadata accessor for Session.Event.Payload.PlanCreatedCodingKeys()
{
  sub_23F694C70();
}

ValueMetadata *type metadata accessor for Session.Event.Payload.ActionCreatedCodingKeys()
{
  return &type metadata for Session.Event.Payload.ActionCreatedCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.ActionCanceledCodingKeys()
{
  return &type metadata for Session.Event.Payload.ActionCanceledCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.ClientActionCreatedCodingKeys()
{
  return &type metadata for Session.Event.Payload.ClientActionCreatedCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.QueriesCreatedCodingKeys()
{
  return &type metadata for Session.Event.Payload.QueriesCreatedCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.VariablesSetCodingKeys()
{
  return &type metadata for Session.Event.Payload.VariablesSetCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.StepsExecutedCodingKeys()
{
  return &type metadata for Session.Event.Payload.StepsExecutedCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.ExecutorFinishedCodingKeys()
{
  return &type metadata for Session.Event.Payload.ExecutorFinishedCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.ClientIdentifierCodingKeys()
{
  return &type metadata for Session.Event.Payload.ClientIdentifierCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.RecoverableErrorCodingKeys()
{
  return &type metadata for Session.Event.Payload.RecoverableErrorCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.CriticalErrorCodingKeys()
{
  return &type metadata for Session.Event.Payload.CriticalErrorCodingKeys;
}

uint64_t _s30IntelligenceFlowPlannerSupport31QueryDecorationPrePlannerResultV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23F86CD94 + 4 * byte_23FB6397B[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23F86CDC8 + 4 * byte_23FB63976[v4]))();
}

uint64_t sub_23F86CDCC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F86CDD4);
  return result;
}

_BYTE *sub_23F86CDDC(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F86CDE4);
  return sub_23F6B6EB0((_BYTE *)a1, a2 + 2);
}

ValueMetadata *type metadata accessor for Session.Event.Payload.ClientCustomCodingKeys()
{
  return &type metadata for Session.Event.Payload.ClientCustomCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.EndOfPlanCodingKeys()
{
  return &type metadata for Session.Event.Payload.EndOfPlanCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.SessionSuspendedCodingKeys()
{
  return &type metadata for Session.Event.Payload.SessionSuspendedCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.TerminateCodingKeys()
{
  return &type metadata for Session.Event.Payload.TerminateCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.SystemPromptRequestedCodingKeys()
{
  return &type metadata for Session.Event.Payload.SystemPromptRequestedCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.SystemPromptResolvedCodingKeys()
{
  return &type metadata for Session.Event.Payload.SystemPromptResolvedCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.ActionExecutedCodingKeys()
{
  return &type metadata for Session.Event.Payload.ActionExecutedCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.QueriesExecutedCodingKeys()
{
  return &type metadata for Session.Event.Payload.QueriesExecutedCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.ActionResponseGeneratedCodingKeys()
{
  return &type metadata for Session.Event.Payload.ActionResponseGeneratedCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.ActionResolverRequestCreatedCodingKeys()
{
  return &type metadata for Session.Event.Payload.ActionResolverRequestCreatedCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.ResponseGenerationRequestCreatedCodingKeys()
{
  return &type metadata for Session.Event.Payload.ResponseGenerationRequestCreatedCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.ClientInitiatedClientActionCodingKeys()
{
  return &type metadata for Session.Event.Payload.ClientInitiatedClientActionCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.ContextPrewarmRequestCodingKeys()
{
  return &type metadata for Session.Event.Payload.ContextPrewarmRequestCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.ContextPrewarmCompletedCodingKeys()
{
  return &type metadata for Session.Event.Payload.ContextPrewarmCompletedCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.SafetyModeReleaseCodingKeys()
{
  return &type metadata for Session.Event.Payload.SafetyModeReleaseCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.SafetyModeExceptionCodingKeys()
{
  return &type metadata for Session.Event.Payload.SafetyModeExceptionCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.ContextRetrievedCodingKeys()
{
  return &type metadata for Session.Event.Payload.ContextRetrievedCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.ToolsRetrievedCodingKeys()
{
  return &type metadata for Session.Event.Payload.ToolsRetrievedCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.EntitySpanMatchedCodingKeys()
{
  return &type metadata for Session.Event.Payload.EntitySpanMatchedCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.SystemResponseGeneratedCodingKeys()
{
  return &type metadata for Session.Event.Payload.SystemResponseGeneratedCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.StatementEvaluatedCodingKeys()
{
  return &type metadata for Session.Event.Payload.StatementEvaluatedCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.ExternalAgentTextQueryCodingKeys()
{
  return &type metadata for Session.Event.Payload.ExternalAgentTextQueryCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.ExternalAgentSpeechQueryCodingKeys()
{
  return &type metadata for Session.Event.Payload.ExternalAgentSpeechQueryCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.ExternalAgentRequestCodingKeys()
{
  return &type metadata for Session.Event.Payload.ExternalAgentRequestCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.ExternalAgentOutcomeCodingKeys()
{
  return &type metadata for Session.Event.Payload.ExternalAgentOutcomeCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.ExternalAgentRequestRewriteMetadataCodingKeys()
{
  return &type metadata for Session.Event.Payload.ExternalAgentRequestRewriteMetadataCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.ToolResolutionCodingKeys()
{
  return &type metadata for Session.Event.Payload.ToolResolutionCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.UndoRedoRequestCodingKeys()
{
  return &type metadata for Session.Event.Payload.UndoRedoRequestCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.ClientUndoRedoRequestCodingKeys()
{
  return &type metadata for Session.Event.Payload.ClientUndoRedoRequestCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.TypeConversionRequestCodingKeys()
{
  return &type metadata for Session.Event.Payload.TypeConversionRequestCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.TypeConversionResultCodingKeys()
{
  return &type metadata for Session.Event.Payload.TypeConversionResultCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.QueryDecorationResultCodingKeys()
{
  return &type metadata for Session.Event.Payload.QueryDecorationResultCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.ContinuePlanningCodingKeys()
{
  return &type metadata for Session.Event.Payload.ContinuePlanningCodingKeys;
}

uint64_t _s30IntelligenceFlowPlannerSupport38QueryDecorationPrePlannerResultPayloadO17StringsCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F86D044 + 4 * byte_23FB63980[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F86D064 + 4 * byte_23FB63985[v4]))();
}

_BYTE *sub_23F86D044(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F86D064(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F86D06C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F86D074(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F86D07C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F86D084(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.QueryDecorationPrePlannerResultCodingKeys()
{
  return &type metadata for Session.Event.Payload.QueryDecorationPrePlannerResultCodingKeys;
}

uint64_t _s30IntelligenceFlowPlannerSupport7SessionO5EventV7PayloadO21QueryTrackingBehaviorOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_23F6B6EC0(-1);
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_23F6B6EC0((*a1 | (v4 << 8)) - 4);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_23F6B6EC0((*a1 | (v4 << 8)) - 4);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_23F6B6EC0((*a1 | (v4 << 8)) - 4);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return sub_23F6B6EC0(v8);
}

uint64_t _s30IntelligenceFlowPlannerSupport7SessionO5EventV7PayloadO21QueryTrackingBehaviorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23F86D170 + 4 * byte_23FB6398F[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23F86D1A4 + 4 * byte_23FB6398A[v4]))();
}

uint64_t sub_23F86D1A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F86D1B0);
  return result;
}

_BYTE *sub_23F86D1B8(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F86D1C0);
  return sub_23F6B6EB0((_BYTE *)a1, a2 + 3);
}

ValueMetadata *type metadata accessor for Session.Event.Payload.QueryTrackingBehavior.CodingKeys()
{
  return &type metadata for Session.Event.Payload.QueryTrackingBehavior.CodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.QueryTrackingBehavior.StandardCodingKeys()
{
  return &type metadata for Session.Event.Payload.QueryTrackingBehavior.StandardCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.QueryTrackingBehavior.QueryCodingKeys()
{
  return &type metadata for Session.Event.Payload.QueryTrackingBehavior.QueryCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.QueryTrackingBehavior.AdvisoryCodingKeys()
{
  return &type metadata for Session.Event.Payload.QueryTrackingBehavior.AdvisoryCodingKeys;
}

ValueMetadata *type metadata accessor for Session.Event.Payload.QueryTrackingBehavior.AdvisoryWorkAllowingCodingKeys()
{
  return &type metadata for Session.Event.Payload.QueryTrackingBehavior.AdvisoryWorkAllowingCodingKeys;
}

uint64_t _s30IntelligenceFlowPlannerSupport7SessionO4PlanV6SourceOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_23F6B6EC0(-1);
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_23F6B6EC0((*a1 | (v4 << 8)) - 5);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_23F6B6EC0((*a1 | (v4 << 8)) - 5);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_23F6B6EC0((*a1 | (v4 << 8)) - 5);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return sub_23F6B6EC0(v8);
}

uint64_t _s30IntelligenceFlowPlannerSupport7SessionO4PlanV6SourceOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23F86D2F0 + 4 * byte_23FB63999[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23F86D324 + 4 * byte_23FB63994[v4]))();
}

uint64_t sub_23F86D328(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F86D330);
  return result;
}

_BYTE *sub_23F86D338(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F86D340);
  return sub_23F6B6EB0((_BYTE *)a1, a2 + 4);
}

ValueMetadata *type metadata accessor for Session.Transcript.CodingKeys()
{
  return &type metadata for Session.Transcript.CodingKeys;
}

unint64_t sub_23F86D364()
{
  unint64_t result;

  result = qword_256EAF268;
  if (!qword_256EAF268)
  {
    result = MEMORY[0x242674E5C](&unk_23FB68B50, &type metadata for Session.Transcript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF268);
  }
  return result;
}

unint64_t sub_23F86D3A4()
{
  unint64_t result;

  result = qword_256EAF270;
  if (!qword_256EAF270)
  {
    result = MEMORY[0x242674E5C](&unk_23FB68D48, &type metadata for Session.Event.Payload.QueryTrackingBehavior.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF270);
  }
  return result;
}

unint64_t sub_23F86D3E4()
{
  unint64_t result;

  result = qword_256EAF278;
  if (!qword_256EAF278)
  {
    result = MEMORY[0x242674E5C](&unk_23FB68E00, &type metadata for Session.Event.Payload.QueryDecorationPrePlannerResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF278);
  }
  return result;
}

unint64_t sub_23F86D424()
{
  unint64_t result;

  result = qword_256EAF280;
  if (!qword_256EAF280)
  {
    result = MEMORY[0x242674E5C](&unk_23FB68EB8, &type metadata for Session.Event.Payload.ContinuePlanningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF280);
  }
  return result;
}

unint64_t sub_23F86D464()
{
  unint64_t result;

  result = qword_256EAF288;
  if (!qword_256EAF288)
  {
    result = MEMORY[0x242674E5C](&unk_23FB68F70, &type metadata for Session.Event.Payload.QueryDecorationResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF288);
  }
  return result;
}

unint64_t sub_23F86D4A4()
{
  unint64_t result;

  result = qword_256EAF290;
  if (!qword_256EAF290)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69028, &type metadata for Session.Event.Payload.TypeConversionResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF290);
  }
  return result;
}

unint64_t sub_23F86D4E4()
{
  unint64_t result;

  result = qword_256EAF298;
  if (!qword_256EAF298)
  {
    result = MEMORY[0x242674E5C](&unk_23FB690E0, &type metadata for Session.Event.Payload.TypeConversionRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF298);
  }
  return result;
}

unint64_t sub_23F86D524()
{
  unint64_t result;

  result = qword_256EAF2A0;
  if (!qword_256EAF2A0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69198, &type metadata for Session.Event.Payload.ClientUndoRedoRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF2A0);
  }
  return result;
}

unint64_t sub_23F86D564()
{
  unint64_t result;

  result = qword_256EAF2A8;
  if (!qword_256EAF2A8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69250, &type metadata for Session.Event.Payload.UndoRedoRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF2A8);
  }
  return result;
}

unint64_t sub_23F86D5A4()
{
  unint64_t result;

  result = qword_256EAF2B0;
  if (!qword_256EAF2B0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69308, &type metadata for Session.Event.Payload.ToolResolutionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF2B0);
  }
  return result;
}

unint64_t sub_23F86D5E4()
{
  unint64_t result;

  result = qword_256EAF2B8;
  if (!qword_256EAF2B8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB693C0, &type metadata for Session.Event.Payload.ExternalAgentRequestRewriteMetadataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF2B8);
  }
  return result;
}

unint64_t sub_23F86D624()
{
  unint64_t result;

  result = qword_256EAF2C0;
  if (!qword_256EAF2C0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69478, &type metadata for Session.Event.Payload.ExternalAgentOutcomeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF2C0);
  }
  return result;
}

unint64_t sub_23F86D664()
{
  unint64_t result;

  result = qword_256EAF2C8;
  if (!qword_256EAF2C8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69530, &type metadata for Session.Event.Payload.ExternalAgentRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF2C8);
  }
  return result;
}

unint64_t sub_23F86D6A4()
{
  unint64_t result;

  result = qword_256EAF2D0;
  if (!qword_256EAF2D0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB695E8, &type metadata for Session.Event.Payload.ExternalAgentSpeechQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF2D0);
  }
  return result;
}

unint64_t sub_23F86D6E4()
{
  unint64_t result;

  result = qword_256EAF2D8;
  if (!qword_256EAF2D8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB696A0, &type metadata for Session.Event.Payload.ExternalAgentTextQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF2D8);
  }
  return result;
}

unint64_t sub_23F86D724()
{
  unint64_t result;

  result = qword_256EAF2E0;
  if (!qword_256EAF2E0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69758, &type metadata for Session.Event.Payload.StatementEvaluatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF2E0);
  }
  return result;
}

unint64_t sub_23F86D764()
{
  unint64_t result;

  result = qword_256EAF2E8;
  if (!qword_256EAF2E8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69810, &type metadata for Session.Event.Payload.SystemResponseGeneratedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF2E8);
  }
  return result;
}

unint64_t sub_23F86D7A4()
{
  unint64_t result;

  result = qword_256EAF2F0;
  if (!qword_256EAF2F0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB698C8, &type metadata for Session.Event.Payload.EntitySpanMatchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF2F0);
  }
  return result;
}

unint64_t sub_23F86D7E4()
{
  unint64_t result;

  result = qword_256EAF2F8;
  if (!qword_256EAF2F8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69980, &type metadata for Session.Event.Payload.ToolsRetrievedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF2F8);
  }
  return result;
}

unint64_t sub_23F86D824()
{
  unint64_t result;

  result = qword_256EAF300;
  if (!qword_256EAF300)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69A38, &type metadata for Session.Event.Payload.ContextRetrievedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF300);
  }
  return result;
}

unint64_t sub_23F86D864()
{
  unint64_t result;

  result = qword_256EAF308;
  if (!qword_256EAF308)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69AF0, &type metadata for Session.Event.Payload.SafetyModeExceptionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF308);
  }
  return result;
}

unint64_t sub_23F86D8A4()
{
  unint64_t result;

  result = qword_256EAF310;
  if (!qword_256EAF310)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69BA8, &type metadata for Session.Event.Payload.SafetyModeReleaseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF310);
  }
  return result;
}

unint64_t sub_23F86D8E4()
{
  unint64_t result;

  result = qword_256EAF318;
  if (!qword_256EAF318)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69C60, &type metadata for Session.Event.Payload.ContextPrewarmCompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF318);
  }
  return result;
}

unint64_t sub_23F86D924()
{
  unint64_t result;

  result = qword_256EAF320;
  if (!qword_256EAF320)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69D18, &type metadata for Session.Event.Payload.ContextPrewarmRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF320);
  }
  return result;
}

unint64_t sub_23F86D964()
{
  unint64_t result;

  result = qword_256EAF328;
  if (!qword_256EAF328)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69DD0, &type metadata for Session.Event.Payload.ClientInitiatedClientActionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF328);
  }
  return result;
}

unint64_t sub_23F86D9A4()
{
  unint64_t result;

  result = qword_256EAF330;
  if (!qword_256EAF330)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69E88, &type metadata for Session.Event.Payload.ResponseGenerationRequestCreatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF330);
  }
  return result;
}

unint64_t sub_23F86D9E4()
{
  unint64_t result;

  result = qword_256EAF338;
  if (!qword_256EAF338)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69F40, &type metadata for Session.Event.Payload.ActionResolverRequestCreatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF338);
  }
  return result;
}

unint64_t sub_23F86DA24()
{
  unint64_t result;

  result = qword_256EAF340;
  if (!qword_256EAF340)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69FF8, &type metadata for Session.Event.Payload.ActionResponseGeneratedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF340);
  }
  return result;
}

unint64_t sub_23F86DA64()
{
  unint64_t result;

  result = qword_256EAF348;
  if (!qword_256EAF348)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A0B0, &type metadata for Session.Event.Payload.QueriesExecutedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF348);
  }
  return result;
}

unint64_t sub_23F86DAA4()
{
  unint64_t result;

  result = qword_256EAF350;
  if (!qword_256EAF350)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A168, &type metadata for Session.Event.Payload.ActionExecutedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF350);
  }
  return result;
}

unint64_t sub_23F86DAE4()
{
  unint64_t result;

  result = qword_256EAF358;
  if (!qword_256EAF358)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A220, &type metadata for Session.Event.Payload.SystemPromptResolvedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF358);
  }
  return result;
}

unint64_t sub_23F86DB24()
{
  unint64_t result;

  result = qword_256EAF360;
  if (!qword_256EAF360)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A2D8, &type metadata for Session.Event.Payload.SystemPromptRequestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF360);
  }
  return result;
}

unint64_t sub_23F86DB64()
{
  unint64_t result;

  result = qword_256EAF368;
  if (!qword_256EAF368)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A480, &type metadata for Session.Event.Payload.ClientCustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF368);
  }
  return result;
}

unint64_t sub_23F86DBA4()
{
  unint64_t result;

  result = qword_256EAF370;
  if (!qword_256EAF370)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A538, &type metadata for Session.Event.Payload.CriticalErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF370);
  }
  return result;
}

unint64_t sub_23F86DBE4()
{
  unint64_t result;

  result = qword_256EAF378;
  if (!qword_256EAF378)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A5F0, &type metadata for Session.Event.Payload.RecoverableErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF378);
  }
  return result;
}

unint64_t sub_23F86DC24()
{
  unint64_t result;

  result = qword_256EAF380;
  if (!qword_256EAF380)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A6A8, &type metadata for Session.Event.Payload.ClientIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF380);
  }
  return result;
}

unint64_t sub_23F86DC64()
{
  unint64_t result;

  result = qword_256EAF388;
  if (!qword_256EAF388)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A7B0, &type metadata for Session.Event.Payload.StepsExecutedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF388);
  }
  return result;
}

unint64_t sub_23F86DCA4()
{
  unint64_t result;

  result = qword_256EAF390;
  if (!qword_256EAF390)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A868, &type metadata for Session.Event.Payload.VariablesSetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF390);
  }
  return result;
}

unint64_t sub_23F86DCE4()
{
  unint64_t result;

  result = qword_256EAF398;
  if (!qword_256EAF398)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A920, &type metadata for Session.Event.Payload.QueriesCreatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF398);
  }
  return result;
}

unint64_t sub_23F86DD24()
{
  unint64_t result;

  result = qword_256EAF3A0;
  if (!qword_256EAF3A0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A9D8, &type metadata for Session.Event.Payload.ClientActionCreatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF3A0);
  }
  return result;
}

unint64_t sub_23F86DD64()
{
  unint64_t result;

  result = qword_256EAF3A8;
  if (!qword_256EAF3A8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6AA90, &type metadata for Session.Event.Payload.ActionCanceledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF3A8);
  }
  return result;
}

unint64_t sub_23F86DDA4()
{
  unint64_t result;

  result = qword_256EAF3B0;
  if (!qword_256EAF3B0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6AB48, &type metadata for Session.Event.Payload.ActionCreatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF3B0);
  }
  return result;
}

unint64_t sub_23F86DDE4()
{
  unint64_t result;

  result = qword_256EAF3B8;
  if (!qword_256EAF3B8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6AC38, &unk_250FFF6E0);
    atomic_store(result, (unint64_t *)&qword_256EAF3B8);
  }
  return result;
}

unint64_t sub_23F86DE24()
{
  unint64_t result;

  result = qword_256EAF3C0;
  if (!qword_256EAF3C0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6ACF0, &type metadata for Session.Event.Payload.RequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF3C0);
  }
  return result;
}

unint64_t sub_23F86DE64()
{
  unint64_t result;

  result = qword_256EAF3C8;
  if (!qword_256EAF3C8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6ADE0, &unk_250FFF5C0);
    atomic_store(result, (unint64_t *)&qword_256EAF3C8);
  }
  return result;
}

unint64_t sub_23F86DEA4()
{
  unint64_t result;

  result = qword_256EAF3D0;
  if (!qword_256EAF3D0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6AED0, &unk_250FFF530);
    atomic_store(result, (unint64_t *)&qword_256EAF3D0);
  }
  return result;
}

unint64_t sub_23F86DEE4()
{
  unint64_t result;

  result = qword_256EAF3D8;
  if (!qword_256EAF3D8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6AF88, &type metadata for Session.Event.Payload.SessionStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF3D8);
  }
  return result;
}

unint64_t sub_23F86DF24()
{
  unint64_t result;

  result = qword_256EAF3E0;
  if (!qword_256EAF3E0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B040, &type metadata for Session.Event.Payload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF3E0);
  }
  return result;
}

unint64_t sub_23F86DF64()
{
  unint64_t result;

  result = qword_256EAF3E8;
  if (!qword_256EAF3E8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B0F8, &type metadata for Session.Event.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF3E8);
  }
  return result;
}

unint64_t sub_23F86DFA4()
{
  unint64_t result;

  result = qword_256EAF3F0;
  if (!qword_256EAF3F0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B340, &type metadata for Session.Plan.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF3F0);
  }
  return result;
}

unint64_t sub_23F86DFE4()
{
  unint64_t result;

  result = qword_256EAF3F8;
  if (!qword_256EAF3F8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B3F8, &type metadata for Session.Plan.DecompositionResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF3F8);
  }
  return result;
}

unint64_t sub_23F86E024()
{
  unint64_t result;

  result = qword_256EAF400;
  if (!qword_256EAF400)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B4B0, &type metadata for Session.Plan.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF400);
  }
  return result;
}

unint64_t sub_23F86E064()
{
  unint64_t result;

  result = qword_256EAF408;
  if (!qword_256EAF408)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B568, &type metadata for Session.RecoverableError.PlanGenerationErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF408);
  }
  return result;
}

unint64_t sub_23F86E0A4()
{
  unint64_t result;

  result = qword_256EAF410;
  if (!qword_256EAF410)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B620, &type metadata for Session.RecoverableError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF410);
  }
  return result;
}

unint64_t sub_23F86E0E4()
{
  unint64_t result;

  result = qword_256EAF418;
  if (!qword_256EAF418)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B6D8, &type metadata for Session.PlanGenerationError.ModelOutputErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF418);
  }
  return result;
}

unint64_t sub_23F86E124()
{
  unint64_t result;

  result = qword_256EAF420;
  if (!qword_256EAF420)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B790, &type metadata for Session.PlanGenerationError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF420);
  }
  return result;
}

unint64_t sub_23F86E164()
{
  unint64_t result;

  result = qword_256EAF428;
  if (!qword_256EAF428)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B848, &type metadata for Session.PlanGenerationModelOutputError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF428);
  }
  return result;
}

unint64_t sub_23F86E1A4()
{
  unint64_t result;

  result = qword_256EAF430;
  if (!qword_256EAF430)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B900, &type metadata for SessionStart.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF430);
  }
  return result;
}

unint64_t sub_23F86E1E4()
{
  unint64_t result;

  result = qword_256EAF438;
  if (!qword_256EAF438)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B9B8, &type metadata for Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF438);
  }
  return result;
}

unint64_t sub_23F86E224()
{
  unint64_t result;

  result = qword_256EAF440;
  if (!qword_256EAF440)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6BA70, &type metadata for RequestContent.PromptResolutionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF440);
  }
  return result;
}

unint64_t sub_23F86E264()
{
  unint64_t result;

  result = qword_256EAF448;
  if (!qword_256EAF448)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6BB28, &type metadata for RequestContent.SpeechCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF448);
  }
  return result;
}

unint64_t sub_23F86E2A4()
{
  unint64_t result;

  result = qword_256EAF450;
  if (!qword_256EAF450)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6BBE0, &type metadata for RequestContent.TextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF450);
  }
  return result;
}

unint64_t sub_23F86E2E4()
{
  unint64_t result;

  result = qword_256EAF458;
  if (!qword_256EAF458)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6BC98, &type metadata for RequestContent.StopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF458);
  }
  return result;
}

unint64_t sub_23F86E324()
{
  unint64_t result;

  result = qword_256EAF460;
  if (!qword_256EAF460)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6BD50, &type metadata for RequestContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF460);
  }
  return result;
}

unint64_t sub_23F86E364()
{
  unint64_t result;

  result = qword_256EAF468;
  if (!qword_256EAF468)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6BE58, &type metadata for RequestContent.TextContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF468);
  }
  return result;
}

unint64_t sub_23F86E3A4()
{
  unint64_t result;

  result = qword_256EAF470;
  if (!qword_256EAF470)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6BF10, &type metadata for RequestContent.SpeechContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF470);
  }
  return result;
}

unint64_t sub_23F86E3E4()
{
  unint64_t result;

  result = qword_256EAF478;
  if (!qword_256EAF478)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6BFC8, &type metadata for RequestContent.SystemPromptResolution.ResolutionInput.SpeechCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF478);
  }
  return result;
}

unint64_t sub_23F86E424()
{
  unint64_t result;

  result = qword_256EAF480;
  if (!qword_256EAF480)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C080, &type metadata for RequestContent.SystemPromptResolution.ResolutionInput.TextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF480);
  }
  return result;
}

unint64_t sub_23F86E464()
{
  unint64_t result;

  result = qword_256EAF488;
  if (!qword_256EAF488)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C1D8, &type metadata for RequestContent.SystemPromptResolution.ResolutionInput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF488);
  }
  return result;
}

unint64_t sub_23F86E4A4()
{
  unint64_t result;

  result = qword_256EAF490;
  if (!qword_256EAF490)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C290, &type metadata for RequestContent.SystemPromptResolution.UserAction.ActionCanceledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF490);
  }
  return result;
}

unint64_t sub_23F86E4E4()
{
  unint64_t result;

  result = qword_256EAF498;
  if (!qword_256EAF498)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C348, &type metadata for RequestContent.SystemPromptResolution.UserAction.RequirementAddressedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF498);
  }
  return result;
}

unint64_t sub_23F86E524()
{
  unint64_t result;

  result = qword_256EAF4A0;
  if (!qword_256EAF4A0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C400, &type metadata for RequestContent.SystemPromptResolution.UserAction.DisambiguationIndexSelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF4A0);
  }
  return result;
}

unint64_t sub_23F86E564()
{
  unint64_t result;

  result = qword_256EAF4A8;
  if (!qword_256EAF4A8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C4B8, &type metadata for RequestContent.SystemPromptResolution.UserAction.ParameterItemSelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF4A8);
  }
  return result;
}

unint64_t sub_23F86E5A4()
{
  unint64_t result;

  result = qword_256EAF4B0;
  if (!qword_256EAF4B0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C570, &type metadata for RequestContent.SystemPromptResolution.UserAction.ParameterConfirmedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF4B0);
  }
  return result;
}

unint64_t sub_23F86E5E4()
{
  unint64_t result;

  result = qword_256EAF4B8;
  if (!qword_256EAF4B8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C628, &type metadata for RequestContent.SystemPromptResolution.UserAction.ParameterValueSelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF4B8);
  }
  return result;
}

unint64_t sub_23F86E624()
{
  unint64_t result;

  result = qword_256EAF4C0;
  if (!qword_256EAF4C0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C730, &type metadata for RequestContent.SystemPromptResolution.UserAction.ActionConfirmedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF4C0);
  }
  return result;
}

unint64_t sub_23F86E664()
{
  unint64_t result;

  result = qword_256EAF4C8;
  if (!qword_256EAF4C8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C7E8, &type metadata for RequestContent.SystemPromptResolution.UserAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF4C8);
  }
  return result;
}

unint64_t sub_23F86E6A4()
{
  unint64_t result;

  result = qword_256EAF4D0;
  if (!qword_256EAF4D0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C8A0, &type metadata for RequestContent.SystemPromptResolution.RequirementResolution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF4D0);
  }
  return result;
}

unint64_t sub_23F86E6E4()
{
  unint64_t result;

  result = qword_256EAF4D8;
  if (!qword_256EAF4D8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C9A8, &type metadata for RequestContent.SystemPromptResolution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF4D8);
  }
  return result;
}

unint64_t sub_23F86E724()
{
  unint64_t result;

  result = qword_256EAF4E0;
  if (!qword_256EAF4E0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6CA60, &type metadata for ExternalAgentRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF4E0);
  }
  return result;
}

unint64_t sub_23F86E764()
{
  unint64_t result;

  result = qword_256EAF4E8;
  if (!qword_256EAF4E8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6CB18, &type metadata for RequestPrescribedPlan.KnowledgeToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF4E8);
  }
  return result;
}

unint64_t sub_23F86E7A4()
{
  unint64_t result;

  result = qword_256EAF4F0;
  if (!qword_256EAF4F0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6CBD0, &type metadata for RequestPrescribedPlan.DisplayToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF4F0);
  }
  return result;
}

unint64_t sub_23F86E7E4()
{
  unint64_t result;

  result = qword_256EAF4F8;
  if (!qword_256EAF4F8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6CC88, &type metadata for RequestPrescribedPlan.ConvertToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF4F8);
  }
  return result;
}

unint64_t sub_23F86E824()
{
  unint64_t result;

  result = qword_256EAF500;
  if (!qword_256EAF500)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6CD40, &type metadata for RequestPrescribedPlan.TextToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF500);
  }
  return result;
}

unint64_t sub_23F86E864()
{
  unint64_t result;

  result = qword_256EAF508;
  if (!qword_256EAF508)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6CDF8, &type metadata for RequestPrescribedPlan.LowConfidenceKnowledgeToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF508);
  }
  return result;
}

unint64_t sub_23F86E8A4()
{
  unint64_t result;

  result = qword_256EAF510;
  if (!qword_256EAF510)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6CEB0, &type metadata for RequestPrescribedPlan.SearchToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF510);
  }
  return result;
}

unint64_t sub_23F86E8E4()
{
  unint64_t result;

  result = qword_256EAF518;
  if (!qword_256EAF518)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6CF68, &type metadata for RequestPrescribedPlan.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF518);
  }
  return result;
}

unint64_t sub_23F86E924()
{
  unint64_t result;

  result = qword_256EAF520;
  if (!qword_256EAF520)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D020, &type metadata for RequestPrescribedPlan.SearchTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF520);
  }
  return result;
}

unint64_t sub_23F86E964()
{
  unint64_t result;

  result = qword_256EAF528;
  if (!qword_256EAF528)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D0D8, &type metadata for RequestPrescribedPlan.LowConfidenceKnowledgeTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF528);
  }
  return result;
}

unint64_t sub_23F86E9A4()
{
  unint64_t result;

  result = qword_256EAF530;
  if (!qword_256EAF530)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D190, &type metadata for RequestPrescribedPlan.GenerateRichContentTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF530);
  }
  return result;
}

unint64_t sub_23F86E9E4()
{
  unint64_t result;

  result = qword_256EAF538;
  if (!qword_256EAF538)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D248, &type metadata for RequestPrescribedPlan.GenerateRichContentFromMediaIntentTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF538);
  }
  return result;
}

unint64_t sub_23F86EA24()
{
  unint64_t result;

  result = qword_256EAF540;
  if (!qword_256EAF540)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D300, &type metadata for RequestPrescribedPlan.GenerateImageIntentTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF540);
  }
  return result;
}

unint64_t sub_23F86EA64()
{
  unint64_t result;

  result = qword_256EAF548;
  if (!qword_256EAF548)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D3B8, &type metadata for RequestPrescribedPlan.TextTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF548);
  }
  return result;
}

unint64_t sub_23F86EAA4()
{
  unint64_t result;

  result = qword_256EAF550;
  if (!qword_256EAF550)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D470, &type metadata for RequestPrescribedPlan.ConvertTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF550);
  }
  return result;
}

unint64_t sub_23F86EAE4()
{
  unint64_t result;

  result = qword_256EAF558;
  if (!qword_256EAF558)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D528, &type metadata for RequestPrescribedPlan.DisplayTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF558);
  }
  return result;
}

unint64_t sub_23F86EB24()
{
  unint64_t result;

  result = qword_256EAF560;
  if (!qword_256EAF560)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D5E0, &type metadata for RequestPrescribedPlan.KnowledgeTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF560);
  }
  return result;
}

unint64_t sub_23F86EB64()
{
  unint64_t result;

  result = qword_256EAF568;
  if (!qword_256EAF568)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D698, &type metadata for ProgramStatement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF568);
  }
  return result;
}

unint64_t sub_23F86EBA4()
{
  unint64_t result;

  result = qword_256EAF570;
  if (!qword_256EAF570)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D750, &type metadata for SpeechQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF570);
  }
  return result;
}

unint64_t sub_23F86EBE4()
{
  unint64_t result;

  result = qword_256EAF578;
  if (!qword_256EAF578)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D808, &type metadata for TextQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF578);
  }
  return result;
}

unint64_t sub_23F86EC24()
{
  unint64_t result;

  result = qword_256EAF580;
  if (!qword_256EAF580)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D8C0, &type metadata for ExecutionStepResults.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF580);
  }
  return result;
}

unint64_t sub_23F86EC64()
{
  unint64_t result;

  result = qword_256EAF588;
  if (!qword_256EAF588)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D978, &type metadata for ToolParameterValue.ValueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF588);
  }
  return result;
}

unint64_t sub_23F86ECA4()
{
  unint64_t result;

  result = qword_256EAF590;
  if (!qword_256EAF590)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6DA30, &type metadata for ToolParameterValue.ReferenceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF590);
  }
  return result;
}

unint64_t sub_23F86ECE4()
{
  unint64_t result;

  result = qword_256EAF598;
  if (!qword_256EAF598)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6DAE8, &type metadata for ToolParameterValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF598);
  }
  return result;
}

unint64_t sub_23F86ED24()
{
  unint64_t result;

  result = qword_256EAF5A0;
  if (!qword_256EAF5A0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6DBA0, &type metadata for Action.ParameterValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF5A0);
  }
  return result;
}

unint64_t sub_23F86ED64()
{
  unint64_t result;

  result = qword_256EAF5A8;
  if (!qword_256EAF5A8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6DC58, &type metadata for Action.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF5A8);
  }
  return result;
}

unint64_t sub_23F86EDA4()
{
  unint64_t result;

  result = qword_256EAF5B0;
  if (!qword_256EAF5B0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6DD10, &type metadata for ActionCancellation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF5B0);
  }
  return result;
}

unint64_t sub_23F86EDE4()
{
  unint64_t result;

  result = qword_256EAF5B8;
  if (!qword_256EAF5B8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6DDC8, &type metadata for ClientAction.ShimParameterResolution.UnresolvedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF5B8);
  }
  return result;
}

unint64_t sub_23F86EE24()
{
  unint64_t result;

  result = qword_256EAF5C0;
  if (!qword_256EAF5C0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6DE80, &type metadata for ClientAction.ShimParameterResolution.ResolvedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF5C0);
  }
  return result;
}

unint64_t sub_23F86EE64()
{
  unint64_t result;

  result = qword_256EAF5C8;
  if (!qword_256EAF5C8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6DF38, &type metadata for ClientAction.ShimParameterResolution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF5C8);
  }
  return result;
}

unint64_t sub_23F86EEA4()
{
  unint64_t result;

  result = qword_256EAF5D0;
  if (!qword_256EAF5D0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6DFF0, &type metadata for ClientAction.UnresolvedParameterValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF5D0);
  }
  return result;
}

unint64_t sub_23F86EEE4()
{
  unint64_t result;

  result = qword_256EAF5D8;
  if (!qword_256EAF5D8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E0A8, &type metadata for ClientAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF5D8);
  }
  return result;
}

unint64_t sub_23F86EF24()
{
  unint64_t result;

  result = qword_256EAF5E0;
  if (!qword_256EAF5E0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E160, &type metadata for QueryStep.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF5E0);
  }
  return result;
}

unint64_t sub_23F86EF64()
{
  unint64_t result;

  result = qword_256EAF5E8;
  if (!qword_256EAF5E8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E218, &type metadata for ParameterQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF5E8);
  }
  return result;
}

unint64_t sub_23F86EFA4()
{
  unint64_t result;

  result = qword_256EAF5F0;
  if (!qword_256EAF5F0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E2D0, &type metadata for VariableStep.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF5F0);
  }
  return result;
}

unint64_t sub_23F86EFE4()
{
  unint64_t result;

  result = qword_256EAF5F8;
  if (!qword_256EAF5F8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E388, &type metadata for ExecutionStepResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF5F8);
  }
  return result;
}

unint64_t sub_23F86F024()
{
  unint64_t result;

  result = qword_256EAF600;
  if (!qword_256EAF600)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E440, &type metadata for QueryData.SystemQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF600);
  }
  return result;
}

unint64_t sub_23F86F064()
{
  unint64_t result;

  result = qword_256EAF608;
  if (!qword_256EAF608)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E4F8, &type metadata for QueryData.PropertyQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF608);
  }
  return result;
}

unint64_t sub_23F86F0A4()
{
  unint64_t result;

  result = qword_256EAF610;
  if (!qword_256EAF610)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E5B0, &type metadata for QueryData.StringQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF610);
  }
  return result;
}

unint64_t sub_23F86F0E4()
{
  unint64_t result;

  result = qword_256EAF618;
  if (!qword_256EAF618)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E668, &type metadata for QueryData.IdentifierQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF618);
  }
  return result;
}

unint64_t sub_23F86F124()
{
  unint64_t result;

  result = qword_256EAF620;
  if (!qword_256EAF620)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E720, &type metadata for QueryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF620);
  }
  return result;
}

unint64_t sub_23F86F164()
{
  unint64_t result;

  result = qword_256EAF628;
  if (!qword_256EAF628)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E7D8, &type metadata for PropertyQuery.OrCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF628);
  }
  return result;
}

unint64_t sub_23F86F1A4()
{
  unint64_t result;

  result = qword_256EAF630;
  if (!qword_256EAF630)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E890, &type metadata for PropertyQuery.AndCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF630);
  }
  return result;
}

unint64_t sub_23F86F1E4()
{
  unint64_t result;

  result = qword_256EAF638;
  if (!qword_256EAF638)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E948, &type metadata for PropertyQuery.CompareCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF638);
  }
  return result;
}

unint64_t sub_23F86F224()
{
  unint64_t result;

  result = qword_256EAF640;
  if (!qword_256EAF640)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6EA00, &type metadata for PropertyQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF640);
  }
  return result;
}

unint64_t sub_23F86F264()
{
  unint64_t result;

  result = qword_256EAF648;
  if (!qword_256EAF648)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6EAB8, &type metadata for VariableSetter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF648);
  }
  return result;
}

unint64_t sub_23F86F2A4()
{
  unint64_t result;

  result = qword_256EAF650;
  if (!qword_256EAF650)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6EB70, &type metadata for QueryPredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF650);
  }
  return result;
}

unint64_t sub_23F86F2E4()
{
  unint64_t result;

  result = qword_256EAF658;
  if (!qword_256EAF658)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6EC28, &type metadata for ActionParameterContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF658);
  }
  return result;
}

unint64_t sub_23F86F324()
{
  unint64_t result;

  result = qword_256EAF660;
  if (!qword_256EAF660)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6ECE0, &type metadata for ActionStepResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF660);
  }
  return result;
}

unint64_t sub_23F86F364()
{
  unint64_t result;

  result = qword_256EAF668;
  if (!qword_256EAF668)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6ED98, &type metadata for StatementResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF668);
  }
  return result;
}

unint64_t sub_23F86F3A4()
{
  unint64_t result;

  result = qword_256EAF670;
  if (!qword_256EAF670)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6EE50, &type metadata for StatementResultPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF670);
  }
  return result;
}

unint64_t sub_23F86F3E4()
{
  unint64_t result;

  result = qword_256EAF678;
  if (!qword_256EAF678)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6EF08, &type metadata for ResponseGenerationRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF678);
  }
  return result;
}

unint64_t sub_23F86F424()
{
  unint64_t result;

  result = qword_256EAF680;
  if (!qword_256EAF680)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6EFC0, &type metadata for QueryStepResults.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF680);
  }
  return result;
}

unint64_t sub_23F86F464()
{
  unint64_t result;

  result = qword_256EAF688;
  if (!qword_256EAF688)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F078, &type metadata for QueryResults.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF688);
  }
  return result;
}

unint64_t sub_23F86F4A4()
{
  unint64_t result;

  result = qword_256EAF690;
  if (!qword_256EAF690)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F130, &type metadata for Candidate.PromptStatus.PickedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF690);
  }
  return result;
}

unint64_t sub_23F86F4E4()
{
  unint64_t result;

  result = qword_256EAF698;
  if (!qword_256EAF698)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F288, &type metadata for Candidate.PromptStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF698);
  }
  return result;
}

unint64_t sub_23F86F524()
{
  unint64_t result;

  result = qword_256EAF6A0;
  if (!qword_256EAF6A0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F340, &type metadata for Candidate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF6A0);
  }
  return result;
}

unint64_t sub_23F86F564()
{
  unint64_t result;

  result = qword_256EAF6A8;
  if (!qword_256EAF6A8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F3F8, &type metadata for SpeechRequestCandidate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF6A8);
  }
  return result;
}

unint64_t sub_23F86F5A4()
{
  unint64_t result;

  result = qword_256EAF6B0;
  if (!qword_256EAF6B0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F4B0, &type metadata for ClientEffectInvocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF6B0);
  }
  return result;
}

unint64_t sub_23F86F5E4()
{
  unint64_t result;

  result = qword_256EAF6B8;
  if (!qword_256EAF6B8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F568, &type metadata for ClientEffectResult.ErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF6B8);
  }
  return result;
}

unint64_t sub_23F86F624()
{
  unint64_t result;

  result = qword_256EAF6C0;
  if (!qword_256EAF6C0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F620, &type metadata for ClientEffectResult.CompleteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF6C0);
  }
  return result;
}

unint64_t sub_23F86F664()
{
  unint64_t result;

  result = qword_256EAF6C8;
  if (!qword_256EAF6C8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F6D8, &type metadata for ClientEffectResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF6C8);
  }
  return result;
}

unint64_t sub_23F86F6A4()
{
  unint64_t result;

  result = qword_256EAF6D0;
  if (!qword_256EAF6D0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F790, &type metadata for ActionResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF6D0);
  }
  return result;
}

unint64_t sub_23F86F6E4()
{
  unint64_t result;

  result = qword_256EAF6D8;
  if (!qword_256EAF6D8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F848, &type metadata for ActionResolverRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF6D8);
  }
  return result;
}

unint64_t sub_23F86F724()
{
  unint64_t result;

  result = qword_256EAF6E0;
  if (!qword_256EAF6E0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F900, &type metadata for ParameterPath.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF6E0);
  }
  return result;
}

unint64_t sub_23F86F764()
{
  unint64_t result;

  result = qword_256EAF6E8;
  if (!qword_256EAF6E8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F9B8, &type metadata for ClientInitiatedClientAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF6E8);
  }
  return result;
}

unint64_t sub_23F86F7A4()
{
  unint64_t result;

  result = qword_256EAF6F0;
  if (!qword_256EAF6F0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6FA70, &type metadata for ContextPrewarmRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF6F0);
  }
  return result;
}

unint64_t sub_23F86F7E4()
{
  unint64_t result;

  result = qword_256EAF6F8;
  if (!qword_256EAF6F8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6FB28, &type metadata for ContextPrewarmCompleted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF6F8);
  }
  return result;
}

unint64_t sub_23F86F824()
{
  unint64_t result;

  result = qword_256EAF700;
  if (!qword_256EAF700)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6FC30, &type metadata for SafetyModeException.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF700);
  }
  return result;
}

unint64_t sub_23F86F864()
{
  unint64_t result;

  result = qword_256EAF708;
  if (!qword_256EAF708)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6FCE8, &type metadata for ContextRetrieved.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF708);
  }
  return result;
}

unint64_t sub_23F86F8A4()
{
  unint64_t result;

  result = qword_256EAF710;
  if (!qword_256EAF710)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6FDA0, &type metadata for RetrievedContextStatement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF710);
  }
  return result;
}

unint64_t sub_23F86F8E4()
{
  unint64_t result;

  result = qword_256EAF718;
  if (!qword_256EAF718)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6FE58, &type metadata for DynamicEnumerationEntityStatement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF718);
  }
  return result;
}

unint64_t sub_23F86F924()
{
  unint64_t result;

  result = qword_256EAF720;
  if (!qword_256EAF720)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6FF10, &type metadata for EntitySpanMatchResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF720);
  }
  return result;
}

unint64_t sub_23F86F964()
{
  unint64_t result;

  result = qword_256EAF728;
  if (!qword_256EAF728)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6FFC8, &type metadata for ToolRetrievalResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF728);
  }
  return result;
}

unint64_t sub_23F86F9A4()
{
  unint64_t result;

  result = qword_256EAF730;
  if (!qword_256EAF730)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70080, &type metadata for ExternalAgentTextQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF730);
  }
  return result;
}

unint64_t sub_23F86F9E4()
{
  unint64_t result;

  result = qword_256EAF738;
  if (!qword_256EAF738)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70138, &type metadata for ExternalAgentSpeechQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF738);
  }
  return result;
}

unint64_t sub_23F86FA24()
{
  unint64_t result;

  result = qword_256EAF740;
  if (!qword_256EAF740)
  {
    result = MEMORY[0x242674E5C](&unk_23FB701F0, &type metadata for ExternalAgentOutcome.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF740);
  }
  return result;
}

unint64_t sub_23F86FA64()
{
  unint64_t result;

  result = qword_256EAF748;
  if (!qword_256EAF748)
  {
    result = MEMORY[0x242674E5C](&unk_23FB702A8, &type metadata for ExternalAgentRequestRewriteMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF748);
  }
  return result;
}

unint64_t sub_23F86FAA4()
{
  unint64_t result;

  result = qword_256EAF750;
  if (!qword_256EAF750)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70360, &type metadata for ToolResolution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF750);
  }
  return result;
}

unint64_t sub_23F86FAE4()
{
  unint64_t result;

  result = qword_256EAF758;
  if (!qword_256EAF758)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70418, &type metadata for TypeConversionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF758);
  }
  return result;
}

unint64_t sub_23F86FB24()
{
  unint64_t result;

  result = qword_256EAF760;
  if (!qword_256EAF760)
  {
    result = MEMORY[0x242674E5C](&unk_23FB704D0, &type metadata for TypeConversionResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF760);
  }
  return result;
}

unint64_t sub_23F86FB64()
{
  unint64_t result;

  result = qword_256EAF768;
  if (!qword_256EAF768)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70588, &type metadata for QueryDecorationResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF768);
  }
  return result;
}

unint64_t sub_23F86FBA4()
{
  unint64_t result;

  result = qword_256EAF770;
  if (!qword_256EAF770)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70640, &type metadata for QueryDecorationPrePlannerResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF770);
  }
  return result;
}

unint64_t sub_23F86FBE4()
{
  unint64_t result;

  result = qword_256EAF778;
  if (!qword_256EAF778)
  {
    result = MEMORY[0x242674E5C](&unk_23FB706F8, &type metadata for QueryDecorationPrePlannerResultPayload.ToolQueryOutputsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF778);
  }
  return result;
}

unint64_t sub_23F86FC24()
{
  unint64_t result;

  result = qword_256EAF780;
  if (!qword_256EAF780)
  {
    result = MEMORY[0x242674E5C](&unk_23FB707B0, &type metadata for QueryDecorationPrePlannerResultPayload.RetrievedToolsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF780);
  }
  return result;
}

unint64_t sub_23F86FC64()
{
  unint64_t result;

  result = qword_256EAF788;
  if (!qword_256EAF788)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70868, &type metadata for QueryDecorationPrePlannerResultPayload.EntitySpanMatchResultsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF788);
  }
  return result;
}

unint64_t sub_23F86FCA4()
{
  unint64_t result;

  result = qword_256EAF790;
  if (!qword_256EAF790)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70920, &type metadata for QueryDecorationPrePlannerResultPayload.RetrievedContextsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF790);
  }
  return result;
}

unint64_t sub_23F86FCE4()
{
  unint64_t result;

  result = qword_256EAF798;
  if (!qword_256EAF798)
  {
    result = MEMORY[0x242674E5C](&unk_23FB709D8, &type metadata for QueryDecorationPrePlannerResultPayload.TypedValuesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF798);
  }
  return result;
}

unint64_t sub_23F86FD24()
{
  unint64_t result;

  result = qword_256EAF7A0;
  if (!qword_256EAF7A0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70A90, &type metadata for QueryDecorationPrePlannerResultPayload.StringsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF7A0);
  }
  return result;
}

unint64_t sub_23F86FD64()
{
  unint64_t result;

  result = qword_256EAF7A8;
  if (!qword_256EAF7A8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70B48, &type metadata for QueryDecorationPrePlannerResultPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF7A8);
  }
  return result;
}

unint64_t sub_23F86FDA4()
{
  unint64_t result;

  result = qword_256EAF7B0;
  if (!qword_256EAF7B0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70CA0, &type metadata for UndoOperation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF7B0);
  }
  return result;
}

unint64_t sub_23F86FDE4()
{
  unint64_t result;

  result = qword_256EAF7B8;
  if (!qword_256EAF7B8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70D58, &type metadata for UndoRedoRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF7B8);
  }
  return result;
}

unint64_t sub_23F86FE24()
{
  unint64_t result;

  result = qword_256EAF7C0;
  if (!qword_256EAF7C0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70E10, &type metadata for ClientUndoRedoRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF7C0);
  }
  return result;
}

unint64_t sub_23F86FE64()
{
  unint64_t result;

  result = qword_256EAF7C8;
  if (!qword_256EAF7C8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70E38, &type metadata for ContinuePlanning.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF7C8);
  }
  return result;
}

unint64_t sub_23F86FEA4()
{
  unint64_t result;

  result = qword_256EAF7D0;
  if (!qword_256EAF7D0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70E60, &type metadata for ContinuePlanning.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF7D0);
  }
  return result;
}

unint64_t sub_23F86FEE4()
{
  unint64_t result;

  result = qword_256EAF7D8;
  if (!qword_256EAF7D8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70D80, &type metadata for ClientUndoRedoRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF7D8);
  }
  return result;
}

unint64_t sub_23F86FF24()
{
  unint64_t result;

  result = qword_256EAF7E0;
  if (!qword_256EAF7E0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70DA8, &type metadata for ClientUndoRedoRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF7E0);
  }
  return result;
}

unint64_t sub_23F86FF64()
{
  unint64_t result;

  result = qword_256EAF7E8;
  if (!qword_256EAF7E8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70CC8, &type metadata for UndoRedoRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF7E8);
  }
  return result;
}

unint64_t sub_23F86FFA4()
{
  unint64_t result;

  result = qword_256EAF7F0;
  if (!qword_256EAF7F0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70CF0, &type metadata for UndoRedoRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF7F0);
  }
  return result;
}

unint64_t sub_23F86FFE4()
{
  unint64_t result;

  result = qword_256EAF7F8;
  if (!qword_256EAF7F8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70BC0, &type metadata for UndoOperation.UndoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF7F8);
  }
  return result;
}

unint64_t sub_23F870024()
{
  unint64_t result;

  result = qword_256EAF800;
  if (!qword_256EAF800)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70BE8, &type metadata for UndoOperation.UndoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF800);
  }
  return result;
}

unint64_t sub_23F870064()
{
  unint64_t result;

  result = qword_256EAF808;
  if (!qword_256EAF808)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70B70, &type metadata for UndoOperation.RedoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF808);
  }
  return result;
}

unint64_t sub_23F8700A4()
{
  unint64_t result;

  result = qword_256EAF810;
  if (!qword_256EAF810)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70B98, &type metadata for UndoOperation.RedoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF810);
  }
  return result;
}

unint64_t sub_23F8700E4()
{
  unint64_t result;

  result = qword_256EAF818;
  if (!qword_256EAF818)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70C10, &type metadata for UndoOperation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF818);
  }
  return result;
}

unint64_t sub_23F870124()
{
  unint64_t result;

  result = qword_256EAF820;
  if (!qword_256EAF820)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70C38, &type metadata for UndoOperation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF820);
  }
  return result;
}

unint64_t sub_23F870164()
{
  unint64_t result;

  result = qword_256EAF828;
  if (!qword_256EAF828)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70A00, &type metadata for QueryDecorationPrePlannerResultPayload.StringsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF828);
  }
  return result;
}

unint64_t sub_23F8701A4()
{
  unint64_t result;

  result = qword_256EAF830;
  if (!qword_256EAF830)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70A28, &type metadata for QueryDecorationPrePlannerResultPayload.StringsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF830);
  }
  return result;
}

unint64_t sub_23F8701E4()
{
  unint64_t result;

  result = qword_256EAF838;
  if (!qword_256EAF838)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70948, &type metadata for QueryDecorationPrePlannerResultPayload.TypedValuesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF838);
  }
  return result;
}

unint64_t sub_23F870224()
{
  unint64_t result;

  result = qword_256EAF840;
  if (!qword_256EAF840)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70970, &type metadata for QueryDecorationPrePlannerResultPayload.TypedValuesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF840);
  }
  return result;
}

unint64_t sub_23F870264()
{
  unint64_t result;

  result = qword_256EAF848;
  if (!qword_256EAF848)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70890, &type metadata for QueryDecorationPrePlannerResultPayload.RetrievedContextsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF848);
  }
  return result;
}

unint64_t sub_23F8702A4()
{
  unint64_t result;

  result = qword_256EAF850;
  if (!qword_256EAF850)
  {
    result = MEMORY[0x242674E5C](&unk_23FB708B8, &type metadata for QueryDecorationPrePlannerResultPayload.RetrievedContextsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF850);
  }
  return result;
}

unint64_t sub_23F8702E4()
{
  unint64_t result;

  result = qword_256EAF858;
  if (!qword_256EAF858)
  {
    result = MEMORY[0x242674E5C](&unk_23FB707D8, &type metadata for QueryDecorationPrePlannerResultPayload.EntitySpanMatchResultsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF858);
  }
  return result;
}

unint64_t sub_23F870324()
{
  unint64_t result;

  result = qword_256EAF860;
  if (!qword_256EAF860)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70800, &type metadata for QueryDecorationPrePlannerResultPayload.EntitySpanMatchResultsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF860);
  }
  return result;
}

unint64_t sub_23F870364()
{
  unint64_t result;

  result = qword_256EAF868;
  if (!qword_256EAF868)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70720, &type metadata for QueryDecorationPrePlannerResultPayload.RetrievedToolsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF868);
  }
  return result;
}

unint64_t sub_23F8703A4()
{
  unint64_t result;

  result = qword_256EAF870;
  if (!qword_256EAF870)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70748, &type metadata for QueryDecorationPrePlannerResultPayload.RetrievedToolsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF870);
  }
  return result;
}

unint64_t sub_23F8703E4()
{
  unint64_t result;

  result = qword_256EAF878;
  if (!qword_256EAF878)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70668, &type metadata for QueryDecorationPrePlannerResultPayload.ToolQueryOutputsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF878);
  }
  return result;
}

unint64_t sub_23F870424()
{
  unint64_t result;

  result = qword_256EAF880;
  if (!qword_256EAF880)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70690, &type metadata for QueryDecorationPrePlannerResultPayload.ToolQueryOutputsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF880);
  }
  return result;
}

unint64_t sub_23F870464()
{
  unint64_t result;

  result = qword_256EAF888;
  if (!qword_256EAF888)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70AB8, &type metadata for QueryDecorationPrePlannerResultPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF888);
  }
  return result;
}

unint64_t sub_23F8704A4()
{
  unint64_t result;

  result = qword_256EAF890;
  if (!qword_256EAF890)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70AE0, &type metadata for QueryDecorationPrePlannerResultPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF890);
  }
  return result;
}

unint64_t sub_23F8704E4()
{
  unint64_t result;

  result = qword_256EAF898;
  if (!qword_256EAF898)
  {
    result = MEMORY[0x242674E5C](&unk_23FB705B0, &type metadata for QueryDecorationPrePlannerResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF898);
  }
  return result;
}

unint64_t sub_23F870524()
{
  unint64_t result;

  result = qword_256EAF8A0;
  if (!qword_256EAF8A0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB705D8, &type metadata for QueryDecorationPrePlannerResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF8A0);
  }
  return result;
}

unint64_t sub_23F870564()
{
  unint64_t result;

  result = qword_256EAF8A8;
  if (!qword_256EAF8A8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB704F8, &type metadata for QueryDecorationResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF8A8);
  }
  return result;
}

unint64_t sub_23F8705A4()
{
  unint64_t result;

  result = qword_256EAF8B0;
  if (!qword_256EAF8B0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70520, &type metadata for QueryDecorationResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF8B0);
  }
  return result;
}

unint64_t sub_23F8705E4()
{
  unint64_t result;

  result = qword_256EAF8B8;
  if (!qword_256EAF8B8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70440, &type metadata for TypeConversionResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF8B8);
  }
  return result;
}

unint64_t sub_23F870624()
{
  unint64_t result;

  result = qword_256EAF8C0;
  if (!qword_256EAF8C0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70468, &type metadata for TypeConversionResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF8C0);
  }
  return result;
}

unint64_t sub_23F870664()
{
  unint64_t result;

  result = qword_256EAF8C8;
  if (!qword_256EAF8C8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70388, &type metadata for TypeConversionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF8C8);
  }
  return result;
}

unint64_t sub_23F8706A4()
{
  unint64_t result;

  result = qword_256EAF8D0;
  if (!qword_256EAF8D0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB703B0, &type metadata for TypeConversionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF8D0);
  }
  return result;
}

unint64_t sub_23F8706E4()
{
  unint64_t result;

  result = qword_256EAF8D8;
  if (!qword_256EAF8D8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB702D0, &type metadata for ToolResolution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF8D8);
  }
  return result;
}

unint64_t sub_23F870724()
{
  unint64_t result;

  result = qword_256EAF8E0;
  if (!qword_256EAF8E0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB702F8, &type metadata for ToolResolution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF8E0);
  }
  return result;
}

unint64_t sub_23F870764()
{
  unint64_t result;

  result = qword_256EAF8E8;
  if (!qword_256EAF8E8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70218, &type metadata for ExternalAgentRequestRewriteMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF8E8);
  }
  return result;
}

unint64_t sub_23F8707A4()
{
  unint64_t result;

  result = qword_256EAF8F0;
  if (!qword_256EAF8F0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70240, &type metadata for ExternalAgentRequestRewriteMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF8F0);
  }
  return result;
}

unint64_t sub_23F8707E4()
{
  unint64_t result;

  result = qword_256EAF8F8;
  if (!qword_256EAF8F8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70160, &type metadata for ExternalAgentOutcome.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF8F8);
  }
  return result;
}

unint64_t sub_23F870824()
{
  unint64_t result;

  result = qword_256EAF900;
  if (!qword_256EAF900)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70188, &type metadata for ExternalAgentOutcome.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF900);
  }
  return result;
}

unint64_t sub_23F870864()
{
  unint64_t result;

  result = qword_256EAF908;
  if (!qword_256EAF908)
  {
    result = MEMORY[0x242674E5C](&unk_23FB700A8, &type metadata for ExternalAgentSpeechQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF908);
  }
  return result;
}

unint64_t sub_23F8708A4()
{
  unint64_t result;

  result = qword_256EAF910;
  if (!qword_256EAF910)
  {
    result = MEMORY[0x242674E5C](&unk_23FB700D0, &type metadata for ExternalAgentSpeechQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF910);
  }
  return result;
}

unint64_t sub_23F8708E4()
{
  unint64_t result;

  result = qword_256EAF918;
  if (!qword_256EAF918)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6FFF0, &type metadata for ExternalAgentTextQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF918);
  }
  return result;
}

unint64_t sub_23F870924()
{
  unint64_t result;

  result = qword_256EAF920;
  if (!qword_256EAF920)
  {
    result = MEMORY[0x242674E5C](&unk_23FB70018, &type metadata for ExternalAgentTextQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF920);
  }
  return result;
}

unint64_t sub_23F870964()
{
  unint64_t result;

  result = qword_256EAF928;
  if (!qword_256EAF928)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6FF38, &type metadata for ToolRetrievalResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF928);
  }
  return result;
}

unint64_t sub_23F8709A4()
{
  unint64_t result;

  result = qword_256EAF930;
  if (!qword_256EAF930)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6FF60, &type metadata for ToolRetrievalResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF930);
  }
  return result;
}

unint64_t sub_23F8709E4()
{
  unint64_t result;

  result = qword_256EAF938;
  if (!qword_256EAF938)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6FE80, &type metadata for EntitySpanMatchResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF938);
  }
  return result;
}

unint64_t sub_23F870A24()
{
  unint64_t result;

  result = qword_256EAF940;
  if (!qword_256EAF940)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6FEA8, &type metadata for EntitySpanMatchResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF940);
  }
  return result;
}

unint64_t sub_23F870A64()
{
  unint64_t result;

  result = qword_256EAF948;
  if (!qword_256EAF948)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6FDC8, &type metadata for DynamicEnumerationEntityStatement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF948);
  }
  return result;
}

unint64_t sub_23F870AA4()
{
  unint64_t result;

  result = qword_256EAF950;
  if (!qword_256EAF950)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6FDF0, &type metadata for DynamicEnumerationEntityStatement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF950);
  }
  return result;
}

unint64_t sub_23F870AE4()
{
  unint64_t result;

  result = qword_256EAF958;
  if (!qword_256EAF958)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6FD10, &type metadata for RetrievedContextStatement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF958);
  }
  return result;
}

unint64_t sub_23F870B24()
{
  unint64_t result;

  result = qword_256EAF960;
  if (!qword_256EAF960)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6FD38, &type metadata for RetrievedContextStatement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF960);
  }
  return result;
}

unint64_t sub_23F870B64()
{
  unint64_t result;

  result = qword_256EAF968;
  if (!qword_256EAF968)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6FC58, &type metadata for ContextRetrieved.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF968);
  }
  return result;
}

unint64_t sub_23F870BA4()
{
  unint64_t result;

  result = qword_256EAF970;
  if (!qword_256EAF970)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6FC80, &type metadata for ContextRetrieved.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF970);
  }
  return result;
}

unint64_t sub_23F870BE4()
{
  unint64_t result;

  result = qword_256EAF978;
  if (!qword_256EAF978)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6FBA0, &type metadata for SafetyModeException.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF978);
  }
  return result;
}

unint64_t sub_23F870C24()
{
  unint64_t result;

  result = qword_256EAF980;
  if (!qword_256EAF980)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6FBC8, &type metadata for SafetyModeException.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF980);
  }
  return result;
}

unint64_t sub_23F870C64()
{
  unint64_t result;

  result = qword_256EAF988;
  if (!qword_256EAF988)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6FB50, &type metadata for SafetyModeRelease.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF988);
  }
  return result;
}

unint64_t sub_23F870CA4()
{
  unint64_t result;

  result = qword_256EAF990;
  if (!qword_256EAF990)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6FB78, &type metadata for SafetyModeRelease.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF990);
  }
  return result;
}

unint64_t sub_23F870CE4()
{
  unint64_t result;

  result = qword_256EAF998;
  if (!qword_256EAF998)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6FA98, &type metadata for ContextPrewarmCompleted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF998);
  }
  return result;
}

unint64_t sub_23F870D24()
{
  unint64_t result;

  result = qword_256EAF9A0;
  if (!qword_256EAF9A0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6FAC0, &type metadata for ContextPrewarmCompleted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF9A0);
  }
  return result;
}

unint64_t sub_23F870D64()
{
  unint64_t result;

  result = qword_256EAF9A8;
  if (!qword_256EAF9A8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F9E0, &type metadata for ContextPrewarmRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF9A8);
  }
  return result;
}

unint64_t sub_23F870DA4()
{
  unint64_t result;

  result = qword_256EAF9B0;
  if (!qword_256EAF9B0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6FA08, &type metadata for ContextPrewarmRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF9B0);
  }
  return result;
}

unint64_t sub_23F870DE4()
{
  unint64_t result;

  result = qword_256EAF9B8;
  if (!qword_256EAF9B8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F928, &type metadata for ClientInitiatedClientAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF9B8);
  }
  return result;
}

unint64_t sub_23F870E24()
{
  unint64_t result;

  result = qword_256EAF9C0;
  if (!qword_256EAF9C0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F950, &type metadata for ClientInitiatedClientAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF9C0);
  }
  return result;
}

unint64_t sub_23F870E64()
{
  unint64_t result;

  result = qword_256EAF9C8;
  if (!qword_256EAF9C8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F870, &type metadata for ParameterPath.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF9C8);
  }
  return result;
}

unint64_t sub_23F870EA4()
{
  unint64_t result;

  result = qword_256EAF9D0;
  if (!qword_256EAF9D0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F898, &type metadata for ParameterPath.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF9D0);
  }
  return result;
}

unint64_t sub_23F870EE4()
{
  unint64_t result;

  result = qword_256EAF9D8;
  if (!qword_256EAF9D8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F7B8, &type metadata for ActionResolverRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF9D8);
  }
  return result;
}

unint64_t sub_23F870F24()
{
  unint64_t result;

  result = qword_256EAF9E0;
  if (!qword_256EAF9E0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F7E0, &type metadata for ActionResolverRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF9E0);
  }
  return result;
}

unint64_t sub_23F870F64()
{
  unint64_t result;

  result = qword_256EAF9E8;
  if (!qword_256EAF9E8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F700, &type metadata for ActionResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF9E8);
  }
  return result;
}

unint64_t sub_23F870FA4()
{
  unint64_t result;

  result = qword_256EAF9F0;
  if (!qword_256EAF9F0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F728, &type metadata for ActionResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF9F0);
  }
  return result;
}

unint64_t sub_23F870FE4()
{
  unint64_t result;

  result = qword_256EAF9F8;
  if (!qword_256EAF9F8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F590, &type metadata for ClientEffectResult.CompleteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAF9F8);
  }
  return result;
}

unint64_t sub_23F871024()
{
  unint64_t result;

  result = qword_256EAFA00;
  if (!qword_256EAFA00)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F5B8, &type metadata for ClientEffectResult.CompleteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFA00);
  }
  return result;
}

unint64_t sub_23F871064()
{
  unint64_t result;

  result = qword_256EAFA08;
  if (!qword_256EAFA08)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F4D8, &type metadata for ClientEffectResult.ErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFA08);
  }
  return result;
}

unint64_t sub_23F8710A4()
{
  unint64_t result;

  result = qword_256EAFA10;
  if (!qword_256EAFA10)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F500, &type metadata for ClientEffectResult.ErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFA10);
  }
  return result;
}

unint64_t sub_23F8710E4()
{
  unint64_t result;

  result = qword_256EAFA18;
  if (!qword_256EAFA18)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F648, &type metadata for ClientEffectResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFA18);
  }
  return result;
}

unint64_t sub_23F871124()
{
  unint64_t result;

  result = qword_256EAFA20;
  if (!qword_256EAFA20)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F670, &type metadata for ClientEffectResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFA20);
  }
  return result;
}

unint64_t sub_23F871164()
{
  unint64_t result;

  result = qword_256EAFA28;
  if (!qword_256EAFA28)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F420, &type metadata for ClientEffectInvocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFA28);
  }
  return result;
}

unint64_t sub_23F8711A4()
{
  unint64_t result;

  result = qword_256EAFA30;
  if (!qword_256EAFA30)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F448, &type metadata for ClientEffectInvocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFA30);
  }
  return result;
}

unint64_t sub_23F8711E4()
{
  unint64_t result;

  result = qword_256EAFA38;
  if (!qword_256EAFA38)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F368, &type metadata for SpeechRequestCandidate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFA38);
  }
  return result;
}

unint64_t sub_23F871224()
{
  unint64_t result;

  result = qword_256EAFA40;
  if (!qword_256EAFA40)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F390, &type metadata for SpeechRequestCandidate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFA40);
  }
  return result;
}

unint64_t sub_23F871264()
{
  unint64_t result;

  result = qword_256EAFA48;
  if (!qword_256EAFA48)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F2B0, &type metadata for Candidate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFA48);
  }
  return result;
}

unint64_t sub_23F8712A4()
{
  unint64_t result;

  result = qword_256EAFA50;
  if (!qword_256EAFA50)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F2D8, &type metadata for Candidate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFA50);
  }
  return result;
}

unint64_t sub_23F8712E4()
{
  unint64_t result;

  result = qword_256EAFA58;
  if (!qword_256EAFA58)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F1A8, &type metadata for Candidate.PromptStatus.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFA58);
  }
  return result;
}

unint64_t sub_23F871324()
{
  unint64_t result;

  result = qword_256EAFA60;
  if (!qword_256EAFA60)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F1D0, &type metadata for Candidate.PromptStatus.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFA60);
  }
  return result;
}

unint64_t sub_23F871364()
{
  unint64_t result;

  result = qword_256EAFA68;
  if (!qword_256EAFA68)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F158, &type metadata for Candidate.PromptStatus.ConfirmedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFA68);
  }
  return result;
}

unint64_t sub_23F8713A4()
{
  unint64_t result;

  result = qword_256EAFA70;
  if (!qword_256EAFA70)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F180, &type metadata for Candidate.PromptStatus.ConfirmedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFA70);
  }
  return result;
}

unint64_t sub_23F8713E4()
{
  unint64_t result;

  result = qword_256EAFA78;
  if (!qword_256EAFA78)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F0A0, &type metadata for Candidate.PromptStatus.PickedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFA78);
  }
  return result;
}

unint64_t sub_23F871424()
{
  unint64_t result;

  result = qword_256EAFA80;
  if (!qword_256EAFA80)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F0C8, &type metadata for Candidate.PromptStatus.PickedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFA80);
  }
  return result;
}

unint64_t sub_23F871464()
{
  unint64_t result;

  result = qword_256EAFA88;
  if (!qword_256EAFA88)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F1F8, &type metadata for Candidate.PromptStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFA88);
  }
  return result;
}

unint64_t sub_23F8714A4()
{
  unint64_t result;

  result = qword_256EAFA90;
  if (!qword_256EAFA90)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F220, &type metadata for Candidate.PromptStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFA90);
  }
  return result;
}

unint64_t sub_23F8714E4()
{
  unint64_t result;

  result = qword_256EAFA98;
  if (!qword_256EAFA98)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6EFE8, &type metadata for QueryResults.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFA98);
  }
  return result;
}

unint64_t sub_23F871524()
{
  unint64_t result;

  result = qword_256EAFAA0;
  if (!qword_256EAFAA0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6F010, &type metadata for QueryResults.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFAA0);
  }
  return result;
}

unint64_t sub_23F871564()
{
  unint64_t result;

  result = qword_256EAFAA8;
  if (!qword_256EAFAA8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6EF30, &type metadata for QueryStepResults.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFAA8);
  }
  return result;
}

unint64_t sub_23F8715A4()
{
  unint64_t result;

  result = qword_256EAFAB0;
  if (!qword_256EAFAB0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6EF58, &type metadata for QueryStepResults.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFAB0);
  }
  return result;
}

unint64_t sub_23F8715E4()
{
  unint64_t result;

  result = qword_256EAFAB8;
  if (!qword_256EAFAB8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6EE78, &type metadata for ResponseGenerationRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFAB8);
  }
  return result;
}

unint64_t sub_23F871624()
{
  unint64_t result;

  result = qword_256EAFAC0;
  if (!qword_256EAFAC0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6EEA0, &type metadata for ResponseGenerationRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFAC0);
  }
  return result;
}

unint64_t sub_23F871664()
{
  unint64_t result;

  result = qword_256EAFAC8;
  if (!qword_256EAFAC8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6EDC0, &type metadata for StatementResultPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFAC8);
  }
  return result;
}

unint64_t sub_23F8716A4()
{
  unint64_t result;

  result = qword_256EAFAD0;
  if (!qword_256EAFAD0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6EDE8, &type metadata for StatementResultPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFAD0);
  }
  return result;
}

unint64_t sub_23F8716E4()
{
  unint64_t result;

  result = qword_256EAFAD8;
  if (!qword_256EAFAD8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6ED08, &type metadata for StatementResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFAD8);
  }
  return result;
}

unint64_t sub_23F871724()
{
  unint64_t result;

  result = qword_256EAFAE0;
  if (!qword_256EAFAE0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6ED30, &type metadata for StatementResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFAE0);
  }
  return result;
}

unint64_t sub_23F871764()
{
  unint64_t result;

  result = qword_256EAFAE8;
  if (!qword_256EAFAE8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6EC50, &type metadata for ActionStepResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFAE8);
  }
  return result;
}

unint64_t sub_23F8717A4()
{
  unint64_t result;

  result = qword_256EAFAF0;
  if (!qword_256EAFAF0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6EC78, &type metadata for ActionStepResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFAF0);
  }
  return result;
}

unint64_t sub_23F8717E4()
{
  unint64_t result;

  result = qword_256EAFAF8;
  if (!qword_256EAFAF8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6EB98, &type metadata for ActionParameterContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFAF8);
  }
  return result;
}

unint64_t sub_23F871824()
{
  unint64_t result;

  result = qword_256EAFB00;
  if (!qword_256EAFB00)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6EBC0, &type metadata for ActionParameterContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFB00);
  }
  return result;
}

unint64_t sub_23F871864()
{
  unint64_t result;

  result = qword_256EAFB08;
  if (!qword_256EAFB08)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6EAE0, &type metadata for QueryPredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFB08);
  }
  return result;
}

unint64_t sub_23F8718A4()
{
  unint64_t result;

  result = qword_256EAFB10;
  if (!qword_256EAFB10)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6EB08, &type metadata for QueryPredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFB10);
  }
  return result;
}

unint64_t sub_23F8718E4()
{
  unint64_t result;

  result = qword_256EAFB18;
  if (!qword_256EAFB18)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6EA28, &type metadata for VariableSetter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFB18);
  }
  return result;
}

unint64_t sub_23F871924()
{
  unint64_t result;

  result = qword_256EAFB20;
  if (!qword_256EAFB20)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6EA50, &type metadata for VariableSetter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFB20);
  }
  return result;
}

unint64_t sub_23F871964()
{
  unint64_t result;

  result = qword_256EAFB28;
  if (!qword_256EAFB28)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E8B8, &type metadata for PropertyQuery.CompareCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFB28);
  }
  return result;
}

unint64_t sub_23F8719A4()
{
  unint64_t result;

  result = qword_256EAFB30;
  if (!qword_256EAFB30)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E8E0, &type metadata for PropertyQuery.CompareCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFB30);
  }
  return result;
}

unint64_t sub_23F8719E4()
{
  unint64_t result;

  result = qword_256EAFB38;
  if (!qword_256EAFB38)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E800, &type metadata for PropertyQuery.AndCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFB38);
  }
  return result;
}

unint64_t sub_23F871A24()
{
  unint64_t result;

  result = qword_256EAFB40;
  if (!qword_256EAFB40)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E828, &type metadata for PropertyQuery.AndCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFB40);
  }
  return result;
}

unint64_t sub_23F871A64()
{
  unint64_t result;

  result = qword_256EAFB48;
  if (!qword_256EAFB48)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E748, &type metadata for PropertyQuery.OrCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFB48);
  }
  return result;
}

unint64_t sub_23F871AA4()
{
  unint64_t result;

  result = qword_256EAFB50;
  if (!qword_256EAFB50)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E770, &type metadata for PropertyQuery.OrCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFB50);
  }
  return result;
}

unint64_t sub_23F871AE4()
{
  unint64_t result;

  result = qword_256EAFB58;
  if (!qword_256EAFB58)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E970, &type metadata for PropertyQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFB58);
  }
  return result;
}

unint64_t sub_23F871B24()
{
  unint64_t result;

  result = qword_256EAFB60;
  if (!qword_256EAFB60)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E998, &type metadata for PropertyQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFB60);
  }
  return result;
}

unint64_t sub_23F871B64()
{
  unint64_t result;

  result = qword_256EAFB68;
  if (!qword_256EAFB68)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E5D8, &type metadata for QueryData.IdentifierQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFB68);
  }
  return result;
}

unint64_t sub_23F871BA4()
{
  unint64_t result;

  result = qword_256EAFB70;
  if (!qword_256EAFB70)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E600, &type metadata for QueryData.IdentifierQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFB70);
  }
  return result;
}

unint64_t sub_23F871BE4()
{
  unint64_t result;

  result = qword_256EAFB78;
  if (!qword_256EAFB78)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E520, &type metadata for QueryData.StringQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFB78);
  }
  return result;
}

unint64_t sub_23F871C24()
{
  unint64_t result;

  result = qword_256EAFB80;
  if (!qword_256EAFB80)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E548, &type metadata for QueryData.StringQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFB80);
  }
  return result;
}

unint64_t sub_23F871C64()
{
  unint64_t result;

  result = qword_256EAFB88;
  if (!qword_256EAFB88)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E468, &type metadata for QueryData.PropertyQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFB88);
  }
  return result;
}

unint64_t sub_23F871CA4()
{
  unint64_t result;

  result = qword_256EAFB90;
  if (!qword_256EAFB90)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E490, &type metadata for QueryData.PropertyQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFB90);
  }
  return result;
}

unint64_t sub_23F871CE4()
{
  unint64_t result;

  result = qword_256EAFB98;
  if (!qword_256EAFB98)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E3B0, &type metadata for QueryData.SystemQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFB98);
  }
  return result;
}

unint64_t sub_23F871D24()
{
  unint64_t result;

  result = qword_256EAFBA0;
  if (!qword_256EAFBA0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E3D8, &type metadata for QueryData.SystemQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFBA0);
  }
  return result;
}

unint64_t sub_23F871D64()
{
  unint64_t result;

  result = qword_256EAFBA8;
  if (!qword_256EAFBA8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E690, &type metadata for QueryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFBA8);
  }
  return result;
}

unint64_t sub_23F871DA4()
{
  unint64_t result;

  result = qword_256EAFBB0;
  if (!qword_256EAFBB0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E6B8, &type metadata for QueryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFBB0);
  }
  return result;
}

unint64_t sub_23F871DE4()
{
  unint64_t result;

  result = qword_256EAFBB8;
  if (!qword_256EAFBB8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E2F8, &type metadata for ExecutionStepResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFBB8);
  }
  return result;
}

unint64_t sub_23F871E24()
{
  unint64_t result;

  result = qword_256EAFBC0;
  if (!qword_256EAFBC0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E320, &type metadata for ExecutionStepResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFBC0);
  }
  return result;
}

unint64_t sub_23F871E64()
{
  unint64_t result;

  result = qword_256EAFBC8;
  if (!qword_256EAFBC8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E240, &type metadata for VariableStep.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFBC8);
  }
  return result;
}

unint64_t sub_23F871EA4()
{
  unint64_t result;

  result = qword_256EAFBD0;
  if (!qword_256EAFBD0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E268, &type metadata for VariableStep.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFBD0);
  }
  return result;
}

unint64_t sub_23F871EE4()
{
  unint64_t result;

  result = qword_256EAFBD8;
  if (!qword_256EAFBD8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E188, &type metadata for ParameterQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFBD8);
  }
  return result;
}

unint64_t sub_23F871F24()
{
  unint64_t result;

  result = qword_256EAFBE0;
  if (!qword_256EAFBE0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E1B0, &type metadata for ParameterQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFBE0);
  }
  return result;
}

unint64_t sub_23F871F64()
{
  unint64_t result;

  result = qword_256EAFBE8;
  if (!qword_256EAFBE8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E0D0, &type metadata for QueryStep.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFBE8);
  }
  return result;
}

unint64_t sub_23F871FA4()
{
  unint64_t result;

  result = qword_256EAFBF0;
  if (!qword_256EAFBF0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E0F8, &type metadata for QueryStep.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFBF0);
  }
  return result;
}

unint64_t sub_23F871FE4()
{
  unint64_t result;

  result = qword_256EAFBF8;
  if (!qword_256EAFBF8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E018, &type metadata for ClientAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFBF8);
  }
  return result;
}

unint64_t sub_23F872024()
{
  unint64_t result;

  result = qword_256EAFC00;
  if (!qword_256EAFC00)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6E040, &type metadata for ClientAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFC00);
  }
  return result;
}

unint64_t sub_23F872064()
{
  unint64_t result;

  result = qword_256EAFC08;
  if (!qword_256EAFC08)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6DF60, &type metadata for ClientAction.UnresolvedParameterValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFC08);
  }
  return result;
}

unint64_t sub_23F8720A4()
{
  unint64_t result;

  result = qword_256EAFC10;
  if (!qword_256EAFC10)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6DF88, &type metadata for ClientAction.UnresolvedParameterValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFC10);
  }
  return result;
}

unint64_t sub_23F8720E4()
{
  unint64_t result;

  result = qword_256EAFC18;
  if (!qword_256EAFC18)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6DDF0, &type metadata for ClientAction.ShimParameterResolution.ResolvedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFC18);
  }
  return result;
}

unint64_t sub_23F872124()
{
  unint64_t result;

  result = qword_256EAFC20;
  if (!qword_256EAFC20)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6DE18, &type metadata for ClientAction.ShimParameterResolution.ResolvedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFC20);
  }
  return result;
}

unint64_t sub_23F872164()
{
  unint64_t result;

  result = qword_256EAFC28;
  if (!qword_256EAFC28)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6DD38, &type metadata for ClientAction.ShimParameterResolution.UnresolvedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFC28);
  }
  return result;
}

unint64_t sub_23F8721A4()
{
  unint64_t result;

  result = qword_256EAFC30;
  if (!qword_256EAFC30)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6DD60, &type metadata for ClientAction.ShimParameterResolution.UnresolvedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFC30);
  }
  return result;
}

unint64_t sub_23F8721E4()
{
  unint64_t result;

  result = qword_256EAFC38;
  if (!qword_256EAFC38)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6DEA8, &type metadata for ClientAction.ShimParameterResolution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFC38);
  }
  return result;
}

unint64_t sub_23F872224()
{
  unint64_t result;

  result = qword_256EAFC40;
  if (!qword_256EAFC40)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6DED0, &type metadata for ClientAction.ShimParameterResolution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFC40);
  }
  return result;
}

unint64_t sub_23F872264()
{
  unint64_t result;

  result = qword_256EAFC48;
  if (!qword_256EAFC48)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6DC80, &type metadata for ActionCancellation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFC48);
  }
  return result;
}

unint64_t sub_23F8722A4()
{
  unint64_t result;

  result = qword_256EAFC50;
  if (!qword_256EAFC50)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6DCA8, &type metadata for ActionCancellation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFC50);
  }
  return result;
}

unint64_t sub_23F8722E4()
{
  unint64_t result;

  result = qword_256EAFC58;
  if (!qword_256EAFC58)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6DBC8, &type metadata for Action.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFC58);
  }
  return result;
}

unint64_t sub_23F872324()
{
  unint64_t result;

  result = qword_256EAFC60;
  if (!qword_256EAFC60)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6DBF0, &type metadata for Action.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFC60);
  }
  return result;
}

unint64_t sub_23F872364()
{
  unint64_t result;

  result = qword_256EAFC68;
  if (!qword_256EAFC68)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6DB10, &type metadata for Action.ParameterValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFC68);
  }
  return result;
}

unint64_t sub_23F8723A4()
{
  unint64_t result;

  result = qword_256EAFC70;
  if (!qword_256EAFC70)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6DB38, &type metadata for Action.ParameterValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFC70);
  }
  return result;
}

unint64_t sub_23F8723E4()
{
  unint64_t result;

  result = qword_256EAFC78;
  if (!qword_256EAFC78)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D9A0, &type metadata for ToolParameterValue.ReferenceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFC78);
  }
  return result;
}

unint64_t sub_23F872424()
{
  unint64_t result;

  result = qword_256EAFC80;
  if (!qword_256EAFC80)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D9C8, &type metadata for ToolParameterValue.ReferenceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFC80);
  }
  return result;
}

unint64_t sub_23F872464()
{
  unint64_t result;

  result = qword_256EAFC88;
  if (!qword_256EAFC88)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D8E8, &type metadata for ToolParameterValue.ValueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFC88);
  }
  return result;
}

unint64_t sub_23F8724A4()
{
  unint64_t result;

  result = qword_256EAFC90;
  if (!qword_256EAFC90)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D910, &type metadata for ToolParameterValue.ValueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFC90);
  }
  return result;
}

unint64_t sub_23F8724E4()
{
  unint64_t result;

  result = qword_256EAFC98;
  if (!qword_256EAFC98)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6DA58, &type metadata for ToolParameterValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFC98);
  }
  return result;
}

unint64_t sub_23F872524()
{
  unint64_t result;

  result = qword_256EAFCA0;
  if (!qword_256EAFCA0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6DA80, &type metadata for ToolParameterValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFCA0);
  }
  return result;
}

unint64_t sub_23F872564()
{
  unint64_t result;

  result = qword_256EAFCA8;
  if (!qword_256EAFCA8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D830, &type metadata for ExecutionStepResults.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFCA8);
  }
  return result;
}

unint64_t sub_23F8725A4()
{
  unint64_t result;

  result = qword_256EAFCB0;
  if (!qword_256EAFCB0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D858, &type metadata for ExecutionStepResults.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFCB0);
  }
  return result;
}

unint64_t sub_23F8725E4()
{
  unint64_t result;

  result = qword_256EAFCB8;
  if (!qword_256EAFCB8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D778, &type metadata for TextQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFCB8);
  }
  return result;
}

unint64_t sub_23F872624()
{
  unint64_t result;

  result = qword_256EAFCC0;
  if (!qword_256EAFCC0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D7A0, &type metadata for TextQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFCC0);
  }
  return result;
}

unint64_t sub_23F872664()
{
  unint64_t result;

  result = qword_256EAFCC8;
  if (!qword_256EAFCC8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D6C0, &type metadata for SpeechQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFCC8);
  }
  return result;
}

unint64_t sub_23F8726A4()
{
  unint64_t result;

  result = qword_256EAFCD0;
  if (!qword_256EAFCD0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D6E8, &type metadata for SpeechQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFCD0);
  }
  return result;
}

unint64_t sub_23F8726E4()
{
  unint64_t result;

  result = qword_256EAFCD8;
  if (!qword_256EAFCD8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D608, &type metadata for ProgramStatement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFCD8);
  }
  return result;
}

unint64_t sub_23F872724()
{
  unint64_t result;

  result = qword_256EAFCE0;
  if (!qword_256EAFCE0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D630, &type metadata for ProgramStatement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFCE0);
  }
  return result;
}

unint64_t sub_23F872764()
{
  unint64_t result;

  result = qword_256EAFCE8;
  if (!qword_256EAFCE8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D550, &type metadata for RequestPrescribedPlan.KnowledgeTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFCE8);
  }
  return result;
}

unint64_t sub_23F8727A4()
{
  unint64_t result;

  result = qword_256EAFCF0;
  if (!qword_256EAFCF0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D578, &type metadata for RequestPrescribedPlan.KnowledgeTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFCF0);
  }
  return result;
}

unint64_t sub_23F8727E4()
{
  unint64_t result;

  result = qword_256EAFCF8;
  if (!qword_256EAFCF8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D498, &type metadata for RequestPrescribedPlan.DisplayTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFCF8);
  }
  return result;
}

unint64_t sub_23F872824()
{
  unint64_t result;

  result = qword_256EAFD00;
  if (!qword_256EAFD00)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D4C0, &type metadata for RequestPrescribedPlan.DisplayTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFD00);
  }
  return result;
}

unint64_t sub_23F872864()
{
  unint64_t result;

  result = qword_256EAFD08;
  if (!qword_256EAFD08)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D3E0, &type metadata for RequestPrescribedPlan.ConvertTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFD08);
  }
  return result;
}

unint64_t sub_23F8728A4()
{
  unint64_t result;

  result = qword_256EAFD10;
  if (!qword_256EAFD10)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D408, &type metadata for RequestPrescribedPlan.ConvertTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFD10);
  }
  return result;
}

unint64_t sub_23F8728E4()
{
  unint64_t result;

  result = qword_256EAFD18;
  if (!qword_256EAFD18)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D328, &type metadata for RequestPrescribedPlan.TextTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFD18);
  }
  return result;
}

unint64_t sub_23F872924()
{
  unint64_t result;

  result = qword_256EAFD20;
  if (!qword_256EAFD20)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D350, &type metadata for RequestPrescribedPlan.TextTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFD20);
  }
  return result;
}

unint64_t sub_23F872964()
{
  unint64_t result;

  result = qword_256EAFD28;
  if (!qword_256EAFD28)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D270, &type metadata for RequestPrescribedPlan.GenerateImageIntentTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFD28);
  }
  return result;
}

unint64_t sub_23F8729A4()
{
  unint64_t result;

  result = qword_256EAFD30;
  if (!qword_256EAFD30)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D298, &type metadata for RequestPrescribedPlan.GenerateImageIntentTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFD30);
  }
  return result;
}

unint64_t sub_23F8729E4()
{
  unint64_t result;

  result = qword_256EAFD38;
  if (!qword_256EAFD38)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D1B8, &type metadata for RequestPrescribedPlan.GenerateRichContentFromMediaIntentTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFD38);
  }
  return result;
}

unint64_t sub_23F872A24()
{
  unint64_t result;

  result = qword_256EAFD40;
  if (!qword_256EAFD40)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D1E0, &type metadata for RequestPrescribedPlan.GenerateRichContentFromMediaIntentTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFD40);
  }
  return result;
}

unint64_t sub_23F872A64()
{
  unint64_t result;

  result = qword_256EAFD48;
  if (!qword_256EAFD48)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D100, &type metadata for RequestPrescribedPlan.GenerateRichContentTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFD48);
  }
  return result;
}

unint64_t sub_23F872AA4()
{
  unint64_t result;

  result = qword_256EAFD50;
  if (!qword_256EAFD50)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D128, &type metadata for RequestPrescribedPlan.GenerateRichContentTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFD50);
  }
  return result;
}

unint64_t sub_23F872AE4()
{
  unint64_t result;

  result = qword_256EAFD58;
  if (!qword_256EAFD58)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D048, &type metadata for RequestPrescribedPlan.LowConfidenceKnowledgeTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFD58);
  }
  return result;
}

unint64_t sub_23F872B24()
{
  unint64_t result;

  result = qword_256EAFD60;
  if (!qword_256EAFD60)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6D070, &type metadata for RequestPrescribedPlan.LowConfidenceKnowledgeTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFD60);
  }
  return result;
}

unint64_t sub_23F872B64()
{
  unint64_t result;

  result = qword_256EAFD68;
  if (!qword_256EAFD68)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6CF90, &type metadata for RequestPrescribedPlan.SearchTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFD68);
  }
  return result;
}

unint64_t sub_23F872BA4()
{
  unint64_t result;

  result = qword_256EAFD70;
  if (!qword_256EAFD70)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6CFB8, &type metadata for RequestPrescribedPlan.SearchTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFD70);
  }
  return result;
}

unint64_t sub_23F872BE4()
{
  unint64_t result;

  result = qword_256EAFD78;
  if (!qword_256EAFD78)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6CE20, &type metadata for RequestPrescribedPlan.SearchToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFD78);
  }
  return result;
}

unint64_t sub_23F872C24()
{
  unint64_t result;

  result = qword_256EAFD80;
  if (!qword_256EAFD80)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6CE48, &type metadata for RequestPrescribedPlan.SearchToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFD80);
  }
  return result;
}

unint64_t sub_23F872C64()
{
  unint64_t result;

  result = qword_256EAFD88;
  if (!qword_256EAFD88)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6CD68, &type metadata for RequestPrescribedPlan.LowConfidenceKnowledgeToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFD88);
  }
  return result;
}

unint64_t sub_23F872CA4()
{
  unint64_t result;

  result = qword_256EAFD90;
  if (!qword_256EAFD90)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6CD90, &type metadata for RequestPrescribedPlan.LowConfidenceKnowledgeToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFD90);
  }
  return result;
}

unint64_t sub_23F872CE4()
{
  unint64_t result;

  result = qword_256EAFD98;
  if (!qword_256EAFD98)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6CCB0, &type metadata for RequestPrescribedPlan.TextToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFD98);
  }
  return result;
}

unint64_t sub_23F872D24()
{
  unint64_t result;

  result = qword_256EAFDA0;
  if (!qword_256EAFDA0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6CCD8, &type metadata for RequestPrescribedPlan.TextToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFDA0);
  }
  return result;
}

unint64_t sub_23F872D64()
{
  unint64_t result;

  result = qword_256EAFDA8;
  if (!qword_256EAFDA8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6CBF8, &type metadata for RequestPrescribedPlan.ConvertToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFDA8);
  }
  return result;
}

unint64_t sub_23F872DA4()
{
  unint64_t result;

  result = qword_256EAFDB0;
  if (!qword_256EAFDB0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6CC20, &type metadata for RequestPrescribedPlan.ConvertToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFDB0);
  }
  return result;
}

unint64_t sub_23F872DE4()
{
  unint64_t result;

  result = qword_256EAFDB8;
  if (!qword_256EAFDB8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6CB40, &type metadata for RequestPrescribedPlan.DisplayToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFDB8);
  }
  return result;
}

unint64_t sub_23F872E24()
{
  unint64_t result;

  result = qword_256EAFDC0;
  if (!qword_256EAFDC0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6CB68, &type metadata for RequestPrescribedPlan.DisplayToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFDC0);
  }
  return result;
}

unint64_t sub_23F872E64()
{
  unint64_t result;

  result = qword_256EAFDC8;
  if (!qword_256EAFDC8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6CA88, &type metadata for RequestPrescribedPlan.KnowledgeToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFDC8);
  }
  return result;
}

unint64_t sub_23F872EA4()
{
  unint64_t result;

  result = qword_256EAFDD0;
  if (!qword_256EAFDD0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6CAB0, &type metadata for RequestPrescribedPlan.KnowledgeToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFDD0);
  }
  return result;
}

unint64_t sub_23F872EE4()
{
  unint64_t result;

  result = qword_256EAFDD8;
  if (!qword_256EAFDD8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6CED8, &type metadata for RequestPrescribedPlan.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFDD8);
  }
  return result;
}

unint64_t sub_23F872F24()
{
  unint64_t result;

  result = qword_256EAFDE0;
  if (!qword_256EAFDE0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6CF00, &type metadata for RequestPrescribedPlan.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFDE0);
  }
  return result;
}

unint64_t sub_23F872F64()
{
  unint64_t result;

  result = qword_256EAFDE8;
  if (!qword_256EAFDE8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C9D0, &type metadata for ExternalAgentRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFDE8);
  }
  return result;
}

unint64_t sub_23F872FA4()
{
  unint64_t result;

  result = qword_256EAFDF0;
  if (!qword_256EAFDF0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C9F8, &type metadata for ExternalAgentRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFDF0);
  }
  return result;
}

unint64_t sub_23F872FE4()
{
  unint64_t result;

  result = qword_256EAFDF8;
  if (!qword_256EAFDF8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C918, &type metadata for RequestContent.SystemPromptResolution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFDF8);
  }
  return result;
}

unint64_t sub_23F873024()
{
  unint64_t result;

  result = qword_256EAFE00;
  if (!qword_256EAFE00)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C940, &type metadata for RequestContent.SystemPromptResolution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFE00);
  }
  return result;
}

unint64_t sub_23F873064()
{
  unint64_t result;

  result = qword_256EAFE08;
  if (!qword_256EAFE08)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C8C8, &type metadata for RequestContent.SystemPromptResolution.ActionCancellation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFE08);
  }
  return result;
}

unint64_t sub_23F8730A4()
{
  unint64_t result;

  result = qword_256EAFE10;
  if (!qword_256EAFE10)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C8F0, &type metadata for RequestContent.SystemPromptResolution.ActionCancellation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFE10);
  }
  return result;
}

unint64_t sub_23F8730E4()
{
  unint64_t result;

  result = qword_256EAFE18;
  if (!qword_256EAFE18)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C810, &type metadata for RequestContent.SystemPromptResolution.RequirementResolution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFE18);
  }
  return result;
}

unint64_t sub_23F873124()
{
  unint64_t result;

  result = qword_256EAFE20;
  if (!qword_256EAFE20)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C838, &type metadata for RequestContent.SystemPromptResolution.RequirementResolution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFE20);
  }
  return result;
}

unint64_t sub_23F873164()
{
  unint64_t result;

  result = qword_256EAFE28;
  if (!qword_256EAFE28)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C6A0, &type metadata for RequestContent.SystemPromptResolution.UserAction.ActionConfirmedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFE28);
  }
  return result;
}

unint64_t sub_23F8731A4()
{
  unint64_t result;

  result = qword_256EAFE30;
  if (!qword_256EAFE30)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C6C8, &type metadata for RequestContent.SystemPromptResolution.UserAction.ActionConfirmedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFE30);
  }
  return result;
}

unint64_t sub_23F8731E4()
{
  unint64_t result;

  result = qword_256EAFE38;
  if (!qword_256EAFE38)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C650, &type metadata for RequestContent.SystemPromptResolution.UserAction.DeviceUnlockedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFE38);
  }
  return result;
}

unint64_t sub_23F873224()
{
  unint64_t result;

  result = qword_256EAFE40;
  if (!qword_256EAFE40)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C678, &type metadata for RequestContent.SystemPromptResolution.UserAction.DeviceUnlockedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFE40);
  }
  return result;
}

unint64_t sub_23F873264()
{
  unint64_t result;

  result = qword_256EAFE48;
  if (!qword_256EAFE48)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C598, &type metadata for RequestContent.SystemPromptResolution.UserAction.ParameterValueSelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFE48);
  }
  return result;
}

unint64_t sub_23F8732A4()
{
  unint64_t result;

  result = qword_256EAFE50;
  if (!qword_256EAFE50)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C5C0, &type metadata for RequestContent.SystemPromptResolution.UserAction.ParameterValueSelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFE50);
  }
  return result;
}

unint64_t sub_23F8732E4()
{
  unint64_t result;

  result = qword_256EAFE58;
  if (!qword_256EAFE58)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C4E0, &type metadata for RequestContent.SystemPromptResolution.UserAction.ParameterConfirmedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFE58);
  }
  return result;
}

unint64_t sub_23F873324()
{
  unint64_t result;

  result = qword_256EAFE60;
  if (!qword_256EAFE60)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C508, &type metadata for RequestContent.SystemPromptResolution.UserAction.ParameterConfirmedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFE60);
  }
  return result;
}

unint64_t sub_23F873364()
{
  unint64_t result;

  result = qword_256EAFE68;
  if (!qword_256EAFE68)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C428, &type metadata for RequestContent.SystemPromptResolution.UserAction.ParameterItemSelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFE68);
  }
  return result;
}

unint64_t sub_23F8733A4()
{
  unint64_t result;

  result = qword_256EAFE70;
  if (!qword_256EAFE70)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C450, &type metadata for RequestContent.SystemPromptResolution.UserAction.ParameterItemSelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFE70);
  }
  return result;
}

unint64_t sub_23F8733E4()
{
  unint64_t result;

  result = qword_256EAFE78;
  if (!qword_256EAFE78)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C370, &type metadata for RequestContent.SystemPromptResolution.UserAction.DisambiguationIndexSelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFE78);
  }
  return result;
}

unint64_t sub_23F873424()
{
  unint64_t result;

  result = qword_256EAFE80;
  if (!qword_256EAFE80)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C398, &type metadata for RequestContent.SystemPromptResolution.UserAction.DisambiguationIndexSelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFE80);
  }
  return result;
}

unint64_t sub_23F873464()
{
  unint64_t result;

  result = qword_256EAFE88;
  if (!qword_256EAFE88)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C2B8, &type metadata for RequestContent.SystemPromptResolution.UserAction.RequirementAddressedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFE88);
  }
  return result;
}

unint64_t sub_23F8734A4()
{
  unint64_t result;

  result = qword_256EAFE90;
  if (!qword_256EAFE90)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C2E0, &type metadata for RequestContent.SystemPromptResolution.UserAction.RequirementAddressedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFE90);
  }
  return result;
}

unint64_t sub_23F8734E4()
{
  unint64_t result;

  result = qword_256EAFE98;
  if (!qword_256EAFE98)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C200, &type metadata for RequestContent.SystemPromptResolution.UserAction.ActionCanceledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFE98);
  }
  return result;
}

unint64_t sub_23F873524()
{
  unint64_t result;

  result = qword_256EAFEA0;
  if (!qword_256EAFEA0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C228, &type metadata for RequestContent.SystemPromptResolution.UserAction.ActionCanceledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFEA0);
  }
  return result;
}

unint64_t sub_23F873564()
{
  unint64_t result;

  result = qword_256EAFEA8;
  if (!qword_256EAFEA8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C758, &type metadata for RequestContent.SystemPromptResolution.UserAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFEA8);
  }
  return result;
}

unint64_t sub_23F8735A4()
{
  unint64_t result;

  result = qword_256EAFEB0;
  if (!qword_256EAFEB0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C780, &type metadata for RequestContent.SystemPromptResolution.UserAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFEB0);
  }
  return result;
}

unint64_t sub_23F8735E4()
{
  unint64_t result;

  result = qword_256EAFEB8;
  if (!qword_256EAFEB8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C0F8, &type metadata for RequestContent.SystemPromptResolution.ResolutionInput.TouchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFEB8);
  }
  return result;
}

unint64_t sub_23F873624()
{
  unint64_t result;

  result = qword_256EAFEC0;
  if (!qword_256EAFEC0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C120, &type metadata for RequestContent.SystemPromptResolution.ResolutionInput.TouchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFEC0);
  }
  return result;
}

unint64_t sub_23F873664()
{
  unint64_t result;

  result = qword_256EAFEC8;
  if (!qword_256EAFEC8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C0A8, &type metadata for RequestContent.SystemPromptResolution.ResolutionInput.HeadGestureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFEC8);
  }
  return result;
}

unint64_t sub_23F8736A4()
{
  unint64_t result;

  result = qword_256EAFED0;
  if (!qword_256EAFED0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C0D0, &type metadata for RequestContent.SystemPromptResolution.ResolutionInput.HeadGestureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFED0);
  }
  return result;
}

unint64_t sub_23F8736E4()
{
  unint64_t result;

  result = qword_256EAFED8;
  if (!qword_256EAFED8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6BFF0, &type metadata for RequestContent.SystemPromptResolution.ResolutionInput.TextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFED8);
  }
  return result;
}

unint64_t sub_23F873724()
{
  unint64_t result;

  result = qword_256EAFEE0;
  if (!qword_256EAFEE0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C018, &type metadata for RequestContent.SystemPromptResolution.ResolutionInput.TextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFEE0);
  }
  return result;
}

unint64_t sub_23F873764()
{
  unint64_t result;

  result = qword_256EAFEE8;
  if (!qword_256EAFEE8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6BF38, &type metadata for RequestContent.SystemPromptResolution.ResolutionInput.SpeechCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFEE8);
  }
  return result;
}

unint64_t sub_23F8737A4()
{
  unint64_t result;

  result = qword_256EAFEF0;
  if (!qword_256EAFEF0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6BF60, &type metadata for RequestContent.SystemPromptResolution.ResolutionInput.SpeechCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFEF0);
  }
  return result;
}

unint64_t sub_23F8737E4()
{
  unint64_t result;

  result = qword_256EAFEF8;
  if (!qword_256EAFEF8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C148, &type metadata for RequestContent.SystemPromptResolution.ResolutionInput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFEF8);
  }
  return result;
}

unint64_t sub_23F873824()
{
  unint64_t result;

  result = qword_256EAFF00;
  if (!qword_256EAFF00)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6C170, &type metadata for RequestContent.SystemPromptResolution.ResolutionInput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFF00);
  }
  return result;
}

unint64_t sub_23F873864()
{
  unint64_t result;

  result = qword_256EAFF08;
  if (!qword_256EAFF08)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6BE80, &type metadata for RequestContent.SpeechContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFF08);
  }
  return result;
}

unint64_t sub_23F8738A4()
{
  unint64_t result;

  result = qword_256EAFF10;
  if (!qword_256EAFF10)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6BEA8, &type metadata for RequestContent.SpeechContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFF10);
  }
  return result;
}

unint64_t sub_23F8738E4()
{
  unint64_t result;

  result = qword_256EAFF18;
  if (!qword_256EAFF18)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6BDC8, &type metadata for RequestContent.TextContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFF18);
  }
  return result;
}

unint64_t sub_23F873924()
{
  unint64_t result;

  result = qword_256EAFF20;
  if (!qword_256EAFF20)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6BDF0, &type metadata for RequestContent.TextContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFF20);
  }
  return result;
}

unint64_t sub_23F873964()
{
  unint64_t result;

  result = qword_256EAFF28;
  if (!qword_256EAFF28)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6BD78, &type metadata for RequestContent.StopContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFF28);
  }
  return result;
}

unint64_t sub_23F8739A4()
{
  unint64_t result;

  result = qword_256EAFF30;
  if (!qword_256EAFF30)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6BDA0, &type metadata for RequestContent.StopContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFF30);
  }
  return result;
}

unint64_t sub_23F8739E4()
{
  unint64_t result;

  result = qword_256EAFF38;
  if (!qword_256EAFF38)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6BC08, &type metadata for RequestContent.StopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFF38);
  }
  return result;
}

unint64_t sub_23F873A24()
{
  unint64_t result;

  result = qword_256EAFF40;
  if (!qword_256EAFF40)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6BC30, &type metadata for RequestContent.StopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFF40);
  }
  return result;
}

unint64_t sub_23F873A64()
{
  unint64_t result;

  result = qword_256EAFF48;
  if (!qword_256EAFF48)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6BB50, &type metadata for RequestContent.TextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFF48);
  }
  return result;
}

unint64_t sub_23F873AA4()
{
  unint64_t result;

  result = qword_256EAFF50;
  if (!qword_256EAFF50)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6BB78, &type metadata for RequestContent.TextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFF50);
  }
  return result;
}

unint64_t sub_23F873AE4()
{
  unint64_t result;

  result = qword_256EAFF58;
  if (!qword_256EAFF58)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6BA98, &type metadata for RequestContent.SpeechCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFF58);
  }
  return result;
}

unint64_t sub_23F873B24()
{
  unint64_t result;

  result = qword_256EAFF60;
  if (!qword_256EAFF60)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6BAC0, &type metadata for RequestContent.SpeechCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFF60);
  }
  return result;
}

unint64_t sub_23F873B64()
{
  unint64_t result;

  result = qword_256EAFF68;
  if (!qword_256EAFF68)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B9E0, &type metadata for RequestContent.PromptResolutionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFF68);
  }
  return result;
}

unint64_t sub_23F873BA4()
{
  unint64_t result;

  result = qword_256EAFF70;
  if (!qword_256EAFF70)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6BA08, &type metadata for RequestContent.PromptResolutionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFF70);
  }
  return result;
}

unint64_t sub_23F873BE4()
{
  unint64_t result;

  result = qword_256EAFF78;
  if (!qword_256EAFF78)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6BCC0, &type metadata for RequestContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFF78);
  }
  return result;
}

unint64_t sub_23F873C24()
{
  unint64_t result;

  result = qword_256EAFF80;
  if (!qword_256EAFF80)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6BCE8, &type metadata for RequestContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFF80);
  }
  return result;
}

unint64_t sub_23F873C64()
{
  unint64_t result;

  result = qword_256EAFF88;
  if (!qword_256EAFF88)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B928, &type metadata for Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFF88);
  }
  return result;
}

unint64_t sub_23F873CA4()
{
  unint64_t result;

  result = qword_256EAFF90;
  if (!qword_256EAFF90)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B950, &type metadata for Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFF90);
  }
  return result;
}

unint64_t sub_23F873CE4()
{
  unint64_t result;

  result = qword_256EAFF98;
  if (!qword_256EAFF98)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B870, &type metadata for SessionStart.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFF98);
  }
  return result;
}

unint64_t sub_23F873D24()
{
  unint64_t result;

  result = qword_256EAFFA0;
  if (!qword_256EAFFA0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B898, &type metadata for SessionStart.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFFA0);
  }
  return result;
}

unint64_t sub_23F873D64()
{
  unint64_t result;

  result = qword_256EAFFA8;
  if (!qword_256EAFFA8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B7B8, &type metadata for Session.PlanGenerationModelOutputError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFFA8);
  }
  return result;
}

unint64_t sub_23F873DA4()
{
  unint64_t result;

  result = qword_256EAFFB0;
  if (!qword_256EAFFB0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B7E0, &type metadata for Session.PlanGenerationModelOutputError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFFB0);
  }
  return result;
}

unint64_t sub_23F873DE4()
{
  unint64_t result;

  result = qword_256EAFFB8;
  if (!qword_256EAFFB8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B648, &type metadata for Session.PlanGenerationError.ModelOutputErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFFB8);
  }
  return result;
}

unint64_t sub_23F873E24()
{
  unint64_t result;

  result = qword_256EAFFC0;
  if (!qword_256EAFFC0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B670, &type metadata for Session.PlanGenerationError.ModelOutputErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFFC0);
  }
  return result;
}

unint64_t sub_23F873E64()
{
  unint64_t result;

  result = qword_256EAFFC8;
  if (!qword_256EAFFC8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B700, &type metadata for Session.PlanGenerationError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFFC8);
  }
  return result;
}

unint64_t sub_23F873EA4()
{
  unint64_t result;

  result = qword_256EAFFD0;
  if (!qword_256EAFFD0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B728, &type metadata for Session.PlanGenerationError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFFD0);
  }
  return result;
}

unint64_t sub_23F873EE4()
{
  unint64_t result;

  result = qword_256EAFFD8;
  if (!qword_256EAFFD8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B4D8, &type metadata for Session.RecoverableError.PlanGenerationErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFFD8);
  }
  return result;
}

unint64_t sub_23F873F24()
{
  unint64_t result;

  result = qword_256EAFFE0;
  if (!qword_256EAFFE0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B500, &type metadata for Session.RecoverableError.PlanGenerationErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFFE0);
  }
  return result;
}

unint64_t sub_23F873F64()
{
  unint64_t result;

  result = qword_256EAFFE8;
  if (!qword_256EAFFE8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B590, &type metadata for Session.RecoverableError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFFE8);
  }
  return result;
}

unint64_t sub_23F873FA4()
{
  unint64_t result;

  result = qword_256EAFFF0;
  if (!qword_256EAFFF0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B5B8, &type metadata for Session.RecoverableError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFFF0);
  }
  return result;
}

unint64_t sub_23F873FE4()
{
  unint64_t result;

  result = qword_256EAFFF8;
  if (!qword_256EAFFF8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B420, &type metadata for Session.Plan.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EAFFF8);
  }
  return result;
}

unint64_t sub_23F874024()
{
  unint64_t result;

  result = qword_256EB0000;
  if (!qword_256EB0000)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B448, &type metadata for Session.Plan.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0000);
  }
  return result;
}

unint64_t sub_23F874064()
{
  unint64_t result;

  result = qword_256EB0008;
  if (!qword_256EB0008)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B368, &type metadata for Session.Plan.DecompositionResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0008);
  }
  return result;
}

unint64_t sub_23F8740A4()
{
  unint64_t result;

  result = qword_256EB0010;
  if (!qword_256EB0010)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B390, &type metadata for Session.Plan.DecompositionResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0010);
  }
  return result;
}

unint64_t sub_23F8740E4()
{
  unint64_t result;

  result = qword_256EB0018;
  if (!qword_256EB0018)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B260, &type metadata for Session.Plan.Source.NotSetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0018);
  }
  return result;
}

unint64_t sub_23F874124()
{
  unint64_t result;

  result = qword_256EB0020;
  if (!qword_256EB0020)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B288, &type metadata for Session.Plan.Source.NotSetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0020);
  }
  return result;
}

unint64_t sub_23F874164()
{
  unint64_t result;

  result = qword_256EB0028;
  if (!qword_256EB0028)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B210, &type metadata for Session.Plan.Source.PrescribedPlanGeneratorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0028);
  }
  return result;
}

unint64_t sub_23F8741A4()
{
  unint64_t result;

  result = qword_256EB0030;
  if (!qword_256EB0030)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B238, &type metadata for Session.Plan.Source.PrescribedPlanGeneratorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0030);
  }
  return result;
}

unint64_t sub_23F8741E4()
{
  unint64_t result;

  result = qword_256EB0038;
  if (!qword_256EB0038)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B1C0, &type metadata for Session.Plan.Source.DummyPlannerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0038);
  }
  return result;
}

unint64_t sub_23F874224()
{
  unint64_t result;

  result = qword_256EB0040;
  if (!qword_256EB0040)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B1E8, &type metadata for Session.Plan.Source.DummyPlannerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0040);
  }
  return result;
}

unint64_t sub_23F874264()
{
  unint64_t result;

  result = qword_256EB0048;
  if (!qword_256EB0048)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B170, &type metadata for Session.Plan.Source.PlanOverrideCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0048);
  }
  return result;
}

unint64_t sub_23F8742A4()
{
  unint64_t result;

  result = qword_256EB0050;
  if (!qword_256EB0050)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B198, &type metadata for Session.Plan.Source.PlanOverrideCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0050);
  }
  return result;
}

unint64_t sub_23F8742E4()
{
  unint64_t result;

  result = qword_256EB0058;
  if (!qword_256EB0058)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B120, &type metadata for Session.Plan.Source.FullPlannerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0058);
  }
  return result;
}

unint64_t sub_23F874324()
{
  unint64_t result;

  result = qword_256EB0060;
  if (!qword_256EB0060)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B148, &type metadata for Session.Plan.Source.FullPlannerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0060);
  }
  return result;
}

unint64_t sub_23F874364()
{
  unint64_t result;

  result = qword_256EB0068;
  if (!qword_256EB0068)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B2B0, &type metadata for Session.Plan.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0068);
  }
  return result;
}

unint64_t sub_23F8743A4()
{
  unint64_t result;

  result = qword_256EB0070;
  if (!qword_256EB0070)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B2D8, &type metadata for Session.Plan.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0070);
  }
  return result;
}

unint64_t sub_23F8743E4()
{
  unint64_t result;

  result = qword_256EB0078;
  if (!qword_256EB0078)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B068, &type metadata for Session.Event.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0078);
  }
  return result;
}

unint64_t sub_23F874424()
{
  unint64_t result;

  result = qword_256EB0080;
  if (!qword_256EB0080)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6B090, &type metadata for Session.Event.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0080);
  }
  return result;
}

unint64_t sub_23F874464()
{
  unint64_t result;

  result = qword_256EB0088;
  if (!qword_256EB0088)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6AEF8, &type metadata for Session.Event.Payload.SessionStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0088);
  }
  return result;
}

unint64_t sub_23F8744A4()
{
  unint64_t result;

  result = qword_256EB0090;
  if (!qword_256EB0090)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6AF20, &type metadata for Session.Event.Payload.SessionStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0090);
  }
  return result;
}

unint64_t sub_23F8744E4()
{
  unint64_t result;

  result = qword_256EB0098;
  if (!qword_256EB0098)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6AE08, &unk_250FFF530);
    atomic_store(result, (unint64_t *)&qword_256EB0098);
  }
  return result;
}

unint64_t sub_23F874524()
{
  unint64_t result;

  result = qword_256EB00A0;
  if (!qword_256EB00A0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6AE30, &unk_250FFF530);
    atomic_store(result, (unint64_t *)&qword_256EB00A0);
  }
  return result;
}

unint64_t sub_23F874564()
{
  unint64_t result;

  result = qword_256EB00A8;
  if (!qword_256EB00A8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6AD18, &unk_250FFF5C0);
    atomic_store(result, (unint64_t *)&qword_256EB00A8);
  }
  return result;
}

unint64_t sub_23F8745A4()
{
  unint64_t result;

  result = qword_256EB00B0;
  if (!qword_256EB00B0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6AD40, &unk_250FFF5C0);
    atomic_store(result, (unint64_t *)&qword_256EB00B0);
  }
  return result;
}

unint64_t sub_23F8745E4()
{
  unint64_t result;

  result = qword_256EB00B8;
  if (!qword_256EB00B8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6AC60, &type metadata for Session.Event.Payload.RequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB00B8);
  }
  return result;
}

unint64_t sub_23F874624()
{
  unint64_t result;

  result = qword_256EB00C0;
  if (!qword_256EB00C0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6AC88, &type metadata for Session.Event.Payload.RequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB00C0);
  }
  return result;
}

unint64_t sub_23F874664()
{
  unint64_t result;

  result = qword_256EB00C8;
  if (!qword_256EB00C8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6AB70, &unk_250FFF6E0);
    atomic_store(result, (unint64_t *)&qword_256EB00C8);
  }
  return result;
}

unint64_t sub_23F8746A4()
{
  unint64_t result;

  result = qword_256EB00D0;
  if (!qword_256EB00D0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6AB98, &unk_250FFF6E0);
    atomic_store(result, (unint64_t *)&qword_256EB00D0);
  }
  return result;
}

unint64_t sub_23F8746E4()
{
  unint64_t result;

  result = qword_256EB00D8;
  if (!qword_256EB00D8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6AAB8, &type metadata for Session.Event.Payload.ActionCreatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB00D8);
  }
  return result;
}

unint64_t sub_23F874724()
{
  unint64_t result;

  result = qword_256EB00E0;
  if (!qword_256EB00E0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6AAE0, &type metadata for Session.Event.Payload.ActionCreatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB00E0);
  }
  return result;
}

unint64_t sub_23F874764()
{
  unint64_t result;

  result = qword_256EB00E8;
  if (!qword_256EB00E8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6AA00, &type metadata for Session.Event.Payload.ActionCanceledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB00E8);
  }
  return result;
}

unint64_t sub_23F8747A4()
{
  unint64_t result;

  result = qword_256EB00F0;
  if (!qword_256EB00F0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6AA28, &type metadata for Session.Event.Payload.ActionCanceledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB00F0);
  }
  return result;
}

unint64_t sub_23F8747E4()
{
  unint64_t result;

  result = qword_256EB00F8;
  if (!qword_256EB00F8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A948, &type metadata for Session.Event.Payload.ClientActionCreatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB00F8);
  }
  return result;
}

unint64_t sub_23F874824()
{
  unint64_t result;

  result = qword_256EB0100;
  if (!qword_256EB0100)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A970, &type metadata for Session.Event.Payload.ClientActionCreatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0100);
  }
  return result;
}

unint64_t sub_23F874864()
{
  unint64_t result;

  result = qword_256EB0108;
  if (!qword_256EB0108)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A890, &type metadata for Session.Event.Payload.QueriesCreatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0108);
  }
  return result;
}

unint64_t sub_23F8748A4()
{
  unint64_t result;

  result = qword_256EB0110;
  if (!qword_256EB0110)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A8B8, &type metadata for Session.Event.Payload.QueriesCreatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0110);
  }
  return result;
}

unint64_t sub_23F8748E4()
{
  unint64_t result;

  result = qword_256EB0118;
  if (!qword_256EB0118)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A7D8, &type metadata for Session.Event.Payload.VariablesSetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0118);
  }
  return result;
}

unint64_t sub_23F874924()
{
  unint64_t result;

  result = qword_256EB0120;
  if (!qword_256EB0120)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A800, &type metadata for Session.Event.Payload.VariablesSetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0120);
  }
  return result;
}

unint64_t sub_23F874964()
{
  unint64_t result;

  result = qword_256EB0128;
  if (!qword_256EB0128)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A720, &type metadata for Session.Event.Payload.StepsExecutedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0128);
  }
  return result;
}

unint64_t sub_23F8749A4()
{
  unint64_t result;

  result = qword_256EB0130;
  if (!qword_256EB0130)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A748, &type metadata for Session.Event.Payload.StepsExecutedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0130);
  }
  return result;
}

unint64_t sub_23F8749E4()
{
  unint64_t result;

  result = qword_256EB0138;
  if (!qword_256EB0138)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A6D0, &type metadata for Session.Event.Payload.ExecutorFinishedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0138);
  }
  return result;
}

unint64_t sub_23F874A24()
{
  unint64_t result;

  result = qword_256EB0140;
  if (!qword_256EB0140)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A6F8, &type metadata for Session.Event.Payload.ExecutorFinishedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0140);
  }
  return result;
}

unint64_t sub_23F874A64()
{
  unint64_t result;

  result = qword_256EB0148;
  if (!qword_256EB0148)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A618, &type metadata for Session.Event.Payload.ClientIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0148);
  }
  return result;
}

unint64_t sub_23F874AA4()
{
  unint64_t result;

  result = qword_256EB0150;
  if (!qword_256EB0150)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A640, &type metadata for Session.Event.Payload.ClientIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0150);
  }
  return result;
}

unint64_t sub_23F874AE4()
{
  unint64_t result;

  result = qword_256EB0158;
  if (!qword_256EB0158)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A560, &type metadata for Session.Event.Payload.RecoverableErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0158);
  }
  return result;
}

unint64_t sub_23F874B24()
{
  unint64_t result;

  result = qword_256EB0160;
  if (!qword_256EB0160)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A588, &type metadata for Session.Event.Payload.RecoverableErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0160);
  }
  return result;
}

unint64_t sub_23F874B64()
{
  unint64_t result;

  result = qword_256EB0168;
  if (!qword_256EB0168)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A4A8, &type metadata for Session.Event.Payload.CriticalErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0168);
  }
  return result;
}

unint64_t sub_23F874BA4()
{
  unint64_t result;

  result = qword_256EB0170;
  if (!qword_256EB0170)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A4D0, &type metadata for Session.Event.Payload.CriticalErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0170);
  }
  return result;
}

unint64_t sub_23F874BE4()
{
  unint64_t result;

  result = qword_256EB0178;
  if (!qword_256EB0178)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A3F0, &type metadata for Session.Event.Payload.ClientCustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0178);
  }
  return result;
}

unint64_t sub_23F874C24()
{
  unint64_t result;

  result = qword_256EB0180;
  if (!qword_256EB0180)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A418, &type metadata for Session.Event.Payload.ClientCustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0180);
  }
  return result;
}

unint64_t sub_23F874C64()
{
  unint64_t result;

  result = qword_256EB0188;
  if (!qword_256EB0188)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A3A0, &type metadata for Session.Event.Payload.EndOfPlanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0188);
  }
  return result;
}

unint64_t sub_23F874CA4()
{
  unint64_t result;

  result = qword_256EB0190;
  if (!qword_256EB0190)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A3C8, &type metadata for Session.Event.Payload.EndOfPlanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0190);
  }
  return result;
}

unint64_t sub_23F874CE4()
{
  unint64_t result;

  result = qword_256EB0198;
  if (!qword_256EB0198)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A350, &type metadata for Session.Event.Payload.SessionSuspendedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0198);
  }
  return result;
}

unint64_t sub_23F874D24()
{
  unint64_t result;

  result = qword_256EB01A0;
  if (!qword_256EB01A0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A378, &type metadata for Session.Event.Payload.SessionSuspendedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB01A0);
  }
  return result;
}

unint64_t sub_23F874D64()
{
  unint64_t result;

  result = qword_256EB01A8;
  if (!qword_256EB01A8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A300, &type metadata for Session.Event.Payload.TerminateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB01A8);
  }
  return result;
}

unint64_t sub_23F874DA4()
{
  unint64_t result;

  result = qword_256EB01B0;
  if (!qword_256EB01B0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A328, &type metadata for Session.Event.Payload.TerminateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB01B0);
  }
  return result;
}

unint64_t sub_23F874DE4()
{
  unint64_t result;

  result = qword_256EB01B8;
  if (!qword_256EB01B8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A248, &type metadata for Session.Event.Payload.SystemPromptRequestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB01B8);
  }
  return result;
}

unint64_t sub_23F874E24()
{
  unint64_t result;

  result = qword_256EB01C0;
  if (!qword_256EB01C0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A270, &type metadata for Session.Event.Payload.SystemPromptRequestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB01C0);
  }
  return result;
}

unint64_t sub_23F874E64()
{
  unint64_t result;

  result = qword_256EB01C8;
  if (!qword_256EB01C8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A190, &type metadata for Session.Event.Payload.SystemPromptResolvedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB01C8);
  }
  return result;
}

unint64_t sub_23F874EA4()
{
  unint64_t result;

  result = qword_256EB01D0;
  if (!qword_256EB01D0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A1B8, &type metadata for Session.Event.Payload.SystemPromptResolvedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB01D0);
  }
  return result;
}

unint64_t sub_23F874EE4()
{
  unint64_t result;

  result = qword_256EB01D8;
  if (!qword_256EB01D8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A0D8, &type metadata for Session.Event.Payload.ActionExecutedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB01D8);
  }
  return result;
}

unint64_t sub_23F874F24()
{
  unint64_t result;

  result = qword_256EB01E0;
  if (!qword_256EB01E0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A100, &type metadata for Session.Event.Payload.ActionExecutedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB01E0);
  }
  return result;
}

unint64_t sub_23F874F64()
{
  unint64_t result;

  result = qword_256EB01E8;
  if (!qword_256EB01E8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A020, &type metadata for Session.Event.Payload.QueriesExecutedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB01E8);
  }
  return result;
}

unint64_t sub_23F874FA4()
{
  unint64_t result;

  result = qword_256EB01F0;
  if (!qword_256EB01F0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6A048, &type metadata for Session.Event.Payload.QueriesExecutedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB01F0);
  }
  return result;
}

unint64_t sub_23F874FE4()
{
  unint64_t result;

  result = qword_256EB01F8;
  if (!qword_256EB01F8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69F68, &type metadata for Session.Event.Payload.ActionResponseGeneratedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB01F8);
  }
  return result;
}

unint64_t sub_23F875024()
{
  unint64_t result;

  result = qword_256EB0200;
  if (!qword_256EB0200)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69F90, &type metadata for Session.Event.Payload.ActionResponseGeneratedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0200);
  }
  return result;
}

unint64_t sub_23F875064()
{
  unint64_t result;

  result = qword_256EB0208;
  if (!qword_256EB0208)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69EB0, &type metadata for Session.Event.Payload.ActionResolverRequestCreatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0208);
  }
  return result;
}

unint64_t sub_23F8750A4()
{
  unint64_t result;

  result = qword_256EB0210;
  if (!qword_256EB0210)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69ED8, &type metadata for Session.Event.Payload.ActionResolverRequestCreatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0210);
  }
  return result;
}

unint64_t sub_23F8750E4()
{
  unint64_t result;

  result = qword_256EB0218;
  if (!qword_256EB0218)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69DF8, &type metadata for Session.Event.Payload.ResponseGenerationRequestCreatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0218);
  }
  return result;
}

unint64_t sub_23F875124()
{
  unint64_t result;

  result = qword_256EB0220;
  if (!qword_256EB0220)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69E20, &type metadata for Session.Event.Payload.ResponseGenerationRequestCreatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0220);
  }
  return result;
}

unint64_t sub_23F875164()
{
  unint64_t result;

  result = qword_256EB0228;
  if (!qword_256EB0228)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69D40, &type metadata for Session.Event.Payload.ClientInitiatedClientActionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0228);
  }
  return result;
}

unint64_t sub_23F8751A4()
{
  unint64_t result;

  result = qword_256EB0230;
  if (!qword_256EB0230)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69D68, &type metadata for Session.Event.Payload.ClientInitiatedClientActionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0230);
  }
  return result;
}

unint64_t sub_23F8751E4()
{
  unint64_t result;

  result = qword_256EB0238;
  if (!qword_256EB0238)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69C88, &type metadata for Session.Event.Payload.ContextPrewarmRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0238);
  }
  return result;
}

unint64_t sub_23F875224()
{
  unint64_t result;

  result = qword_256EB0240;
  if (!qword_256EB0240)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69CB0, &type metadata for Session.Event.Payload.ContextPrewarmRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0240);
  }
  return result;
}

unint64_t sub_23F875264()
{
  unint64_t result;

  result = qword_256EB0248;
  if (!qword_256EB0248)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69BD0, &type metadata for Session.Event.Payload.ContextPrewarmCompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0248);
  }
  return result;
}

unint64_t sub_23F8752A4()
{
  unint64_t result;

  result = qword_256EB0250;
  if (!qword_256EB0250)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69BF8, &type metadata for Session.Event.Payload.ContextPrewarmCompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0250);
  }
  return result;
}

unint64_t sub_23F8752E4()
{
  unint64_t result;

  result = qword_256EB0258;
  if (!qword_256EB0258)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69B18, &type metadata for Session.Event.Payload.SafetyModeReleaseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0258);
  }
  return result;
}

unint64_t sub_23F875324()
{
  unint64_t result;

  result = qword_256EB0260;
  if (!qword_256EB0260)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69B40, &type metadata for Session.Event.Payload.SafetyModeReleaseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0260);
  }
  return result;
}

unint64_t sub_23F875364()
{
  unint64_t result;

  result = qword_256EB0268;
  if (!qword_256EB0268)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69A60, &type metadata for Session.Event.Payload.SafetyModeExceptionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0268);
  }
  return result;
}

unint64_t sub_23F8753A4()
{
  unint64_t result;

  result = qword_256EB0270;
  if (!qword_256EB0270)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69A88, &type metadata for Session.Event.Payload.SafetyModeExceptionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0270);
  }
  return result;
}

unint64_t sub_23F8753E4()
{
  unint64_t result;

  result = qword_256EB0278;
  if (!qword_256EB0278)
  {
    result = MEMORY[0x242674E5C](&unk_23FB699A8, &type metadata for Session.Event.Payload.ContextRetrievedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0278);
  }
  return result;
}

unint64_t sub_23F875424()
{
  unint64_t result;

  result = qword_256EB0280;
  if (!qword_256EB0280)
  {
    result = MEMORY[0x242674E5C](&unk_23FB699D0, &type metadata for Session.Event.Payload.ContextRetrievedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0280);
  }
  return result;
}

unint64_t sub_23F875464()
{
  unint64_t result;

  result = qword_256EB0288;
  if (!qword_256EB0288)
  {
    result = MEMORY[0x242674E5C](&unk_23FB698F0, &type metadata for Session.Event.Payload.ToolsRetrievedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0288);
  }
  return result;
}

unint64_t sub_23F8754A4()
{
  unint64_t result;

  result = qword_256EB0290;
  if (!qword_256EB0290)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69918, &type metadata for Session.Event.Payload.ToolsRetrievedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0290);
  }
  return result;
}

unint64_t sub_23F8754E4()
{
  unint64_t result;

  result = qword_256EB0298;
  if (!qword_256EB0298)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69838, &type metadata for Session.Event.Payload.EntitySpanMatchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0298);
  }
  return result;
}

unint64_t sub_23F875524()
{
  unint64_t result;

  result = qword_256EB02A0;
  if (!qword_256EB02A0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69860, &type metadata for Session.Event.Payload.EntitySpanMatchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB02A0);
  }
  return result;
}

unint64_t sub_23F875564()
{
  unint64_t result;

  result = qword_256EB02A8;
  if (!qword_256EB02A8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69780, &type metadata for Session.Event.Payload.SystemResponseGeneratedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB02A8);
  }
  return result;
}

unint64_t sub_23F8755A4()
{
  unint64_t result;

  result = qword_256EB02B0;
  if (!qword_256EB02B0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB697A8, &type metadata for Session.Event.Payload.SystemResponseGeneratedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB02B0);
  }
  return result;
}

unint64_t sub_23F8755E4()
{
  unint64_t result;

  result = qword_256EB02B8;
  if (!qword_256EB02B8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB696C8, &type metadata for Session.Event.Payload.StatementEvaluatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB02B8);
  }
  return result;
}

unint64_t sub_23F875624()
{
  unint64_t result;

  result = qword_256EB02C0;
  if (!qword_256EB02C0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB696F0, &type metadata for Session.Event.Payload.StatementEvaluatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB02C0);
  }
  return result;
}

unint64_t sub_23F875664()
{
  unint64_t result;

  result = qword_256EB02C8;
  if (!qword_256EB02C8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69610, &type metadata for Session.Event.Payload.ExternalAgentTextQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB02C8);
  }
  return result;
}

unint64_t sub_23F8756A4()
{
  unint64_t result;

  result = qword_256EB02D0;
  if (!qword_256EB02D0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69638, &type metadata for Session.Event.Payload.ExternalAgentTextQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB02D0);
  }
  return result;
}

unint64_t sub_23F8756E4()
{
  unint64_t result;

  result = qword_256EB02D8;
  if (!qword_256EB02D8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69558, &type metadata for Session.Event.Payload.ExternalAgentSpeechQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB02D8);
  }
  return result;
}

unint64_t sub_23F875724()
{
  unint64_t result;

  result = qword_256EB02E0;
  if (!qword_256EB02E0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69580, &type metadata for Session.Event.Payload.ExternalAgentSpeechQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB02E0);
  }
  return result;
}

unint64_t sub_23F875764()
{
  unint64_t result;

  result = qword_256EB02E8;
  if (!qword_256EB02E8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB694A0, &type metadata for Session.Event.Payload.ExternalAgentRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB02E8);
  }
  return result;
}

unint64_t sub_23F8757A4()
{
  unint64_t result;

  result = qword_256EB02F0;
  if (!qword_256EB02F0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB694C8, &type metadata for Session.Event.Payload.ExternalAgentRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB02F0);
  }
  return result;
}

unint64_t sub_23F8757E4()
{
  unint64_t result;

  result = qword_256EB02F8;
  if (!qword_256EB02F8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB693E8, &type metadata for Session.Event.Payload.ExternalAgentOutcomeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB02F8);
  }
  return result;
}

unint64_t sub_23F875824()
{
  unint64_t result;

  result = qword_256EB0300;
  if (!qword_256EB0300)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69410, &type metadata for Session.Event.Payload.ExternalAgentOutcomeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0300);
  }
  return result;
}

unint64_t sub_23F875864()
{
  unint64_t result;

  result = qword_256EB0308;
  if (!qword_256EB0308)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69330, &type metadata for Session.Event.Payload.ExternalAgentRequestRewriteMetadataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0308);
  }
  return result;
}

unint64_t sub_23F8758A4()
{
  unint64_t result;

  result = qword_256EB0310;
  if (!qword_256EB0310)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69358, &type metadata for Session.Event.Payload.ExternalAgentRequestRewriteMetadataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0310);
  }
  return result;
}

unint64_t sub_23F8758E4()
{
  unint64_t result;

  result = qword_256EB0318;
  if (!qword_256EB0318)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69278, &type metadata for Session.Event.Payload.ToolResolutionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0318);
  }
  return result;
}

unint64_t sub_23F875924()
{
  unint64_t result;

  result = qword_256EB0320;
  if (!qword_256EB0320)
  {
    result = MEMORY[0x242674E5C](&unk_23FB692A0, &type metadata for Session.Event.Payload.ToolResolutionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0320);
  }
  return result;
}

unint64_t sub_23F875964()
{
  unint64_t result;

  result = qword_256EB0328;
  if (!qword_256EB0328)
  {
    result = MEMORY[0x242674E5C](&unk_23FB691C0, &type metadata for Session.Event.Payload.UndoRedoRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0328);
  }
  return result;
}

unint64_t sub_23F8759A4()
{
  unint64_t result;

  result = qword_256EB0330;
  if (!qword_256EB0330)
  {
    result = MEMORY[0x242674E5C](&unk_23FB691E8, &type metadata for Session.Event.Payload.UndoRedoRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0330);
  }
  return result;
}

unint64_t sub_23F8759E4()
{
  unint64_t result;

  result = qword_256EB0338;
  if (!qword_256EB0338)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69108, &type metadata for Session.Event.Payload.ClientUndoRedoRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0338);
  }
  return result;
}

unint64_t sub_23F875A24()
{
  unint64_t result;

  result = qword_256EB0340;
  if (!qword_256EB0340)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69130, &type metadata for Session.Event.Payload.ClientUndoRedoRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0340);
  }
  return result;
}

unint64_t sub_23F875A64()
{
  unint64_t result;

  result = qword_256EB0348;
  if (!qword_256EB0348)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69050, &type metadata for Session.Event.Payload.TypeConversionRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0348);
  }
  return result;
}

unint64_t sub_23F875AA4()
{
  unint64_t result;

  result = qword_256EB0350;
  if (!qword_256EB0350)
  {
    result = MEMORY[0x242674E5C](&unk_23FB69078, &type metadata for Session.Event.Payload.TypeConversionRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0350);
  }
  return result;
}

unint64_t sub_23F875AE4()
{
  unint64_t result;

  result = qword_256EB0358;
  if (!qword_256EB0358)
  {
    result = MEMORY[0x242674E5C](&unk_23FB68F98, &type metadata for Session.Event.Payload.TypeConversionResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0358);
  }
  return result;
}

unint64_t sub_23F875B24()
{
  unint64_t result;

  result = qword_256EB0360;
  if (!qword_256EB0360)
  {
    result = MEMORY[0x242674E5C](&unk_23FB68FC0, &type metadata for Session.Event.Payload.TypeConversionResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0360);
  }
  return result;
}

unint64_t sub_23F875B64()
{
  unint64_t result;

  result = qword_256EB0368;
  if (!qword_256EB0368)
  {
    result = MEMORY[0x242674E5C](&unk_23FB68EE0, &type metadata for Session.Event.Payload.QueryDecorationResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0368);
  }
  return result;
}

unint64_t sub_23F875BA4()
{
  unint64_t result;

  result = qword_256EB0370;
  if (!qword_256EB0370)
  {
    result = MEMORY[0x242674E5C](&unk_23FB68F08, &type metadata for Session.Event.Payload.QueryDecorationResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0370);
  }
  return result;
}

unint64_t sub_23F875BE4()
{
  unint64_t result;

  result = qword_256EB0378;
  if (!qword_256EB0378)
  {
    result = MEMORY[0x242674E5C](&unk_23FB68E28, &type metadata for Session.Event.Payload.ContinuePlanningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0378);
  }
  return result;
}

unint64_t sub_23F875C24()
{
  unint64_t result;

  result = qword_256EB0380;
  if (!qword_256EB0380)
  {
    result = MEMORY[0x242674E5C](&unk_23FB68E50, &type metadata for Session.Event.Payload.ContinuePlanningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0380);
  }
  return result;
}

unint64_t sub_23F875C64()
{
  unint64_t result;

  result = qword_256EB0388;
  if (!qword_256EB0388)
  {
    result = MEMORY[0x242674E5C](&unk_23FB68D70, &type metadata for Session.Event.Payload.QueryDecorationPrePlannerResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0388);
  }
  return result;
}

unint64_t sub_23F875CA4()
{
  unint64_t result;

  result = qword_256EB0390;
  if (!qword_256EB0390)
  {
    result = MEMORY[0x242674E5C](&unk_23FB68D98, &type metadata for Session.Event.Payload.QueryDecorationPrePlannerResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0390);
  }
  return result;
}

unint64_t sub_23F875CE4()
{
  unint64_t result;

  result = qword_256EB0398;
  if (!qword_256EB0398)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6AFB0, &type metadata for Session.Event.Payload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0398);
  }
  return result;
}

unint64_t sub_23F875D24()
{
  unint64_t result;

  result = qword_256EB03A0;
  if (!qword_256EB03A0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB6AFD8, &type metadata for Session.Event.Payload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB03A0);
  }
  return result;
}

unint64_t sub_23F875D64()
{
  unint64_t result;

  result = qword_256EB03A8;
  if (!qword_256EB03A8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB68C68, &type metadata for Session.Event.Payload.QueryTrackingBehavior.StandardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB03A8);
  }
  return result;
}

unint64_t sub_23F875DA4()
{
  unint64_t result;

  result = qword_256EB03B0;
  if (!qword_256EB03B0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB68C90, &type metadata for Session.Event.Payload.QueryTrackingBehavior.StandardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB03B0);
  }
  return result;
}

unint64_t sub_23F875DE4()
{
  unint64_t result;

  result = qword_256EB03B8;
  if (!qword_256EB03B8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB68C18, &type metadata for Session.Event.Payload.QueryTrackingBehavior.QueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB03B8);
  }
  return result;
}

unint64_t sub_23F875E24()
{
  unint64_t result;

  result = qword_256EB03C0;
  if (!qword_256EB03C0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB68C40, &type metadata for Session.Event.Payload.QueryTrackingBehavior.QueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB03C0);
  }
  return result;
}

unint64_t sub_23F875E64()
{
  unint64_t result;

  result = qword_256EB03C8;
  if (!qword_256EB03C8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB68BC8, &type metadata for Session.Event.Payload.QueryTrackingBehavior.AdvisoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB03C8);
  }
  return result;
}

unint64_t sub_23F875EA4()
{
  unint64_t result;

  result = qword_256EB03D0;
  if (!qword_256EB03D0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB68BF0, &type metadata for Session.Event.Payload.QueryTrackingBehavior.AdvisoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB03D0);
  }
  return result;
}

unint64_t sub_23F875EE4()
{
  unint64_t result;

  result = qword_256EB03D8;
  if (!qword_256EB03D8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB68B78, &type metadata for Session.Event.Payload.QueryTrackingBehavior.AdvisoryWorkAllowingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB03D8);
  }
  return result;
}

unint64_t sub_23F875F24()
{
  unint64_t result;

  result = qword_256EB03E0;
  if (!qword_256EB03E0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB68BA0, &type metadata for Session.Event.Payload.QueryTrackingBehavior.AdvisoryWorkAllowingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB03E0);
  }
  return result;
}

unint64_t sub_23F875F64()
{
  unint64_t result;

  result = qword_256EB03E8;
  if (!qword_256EB03E8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB68CB8, &type metadata for Session.Event.Payload.QueryTrackingBehavior.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB03E8);
  }
  return result;
}

unint64_t sub_23F875FA4()
{
  unint64_t result;

  result = qword_256EB03F0;
  if (!qword_256EB03F0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB68CE0, &type metadata for Session.Event.Payload.QueryTrackingBehavior.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB03F0);
  }
  return result;
}

unint64_t sub_23F875FE4()
{
  unint64_t result;

  result = qword_256EB03F8;
  if (!qword_256EB03F8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB68AC0, &type metadata for Session.Transcript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB03F8);
  }
  return result;
}

unint64_t sub_23F876024()
{
  unint64_t result;

  result = qword_256EB0400;
  if (!qword_256EB0400)
  {
    result = MEMORY[0x242674E5C](&unk_23FB68AE8, &type metadata for Session.Transcript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EB0400);
  }
  return result;
}

unint64_t sub_23F876060()
{
  unint64_t result;

  result = qword_256EB0408;
  if (!qword_256EB0408)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for TranscriptProtoParameterNotAllowed.Reason, &type metadata for TranscriptProtoParameterNotAllowed.Reason);
    atomic_store(result, (unint64_t *)&qword_256EB0408);
  }
  return result;
}

unint64_t sub_23F87609C()
{
  unint64_t result;

  result = qword_256EB0410;
  if (!qword_256EB0410)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for TranscriptProtoUndoOperation, &type metadata for TranscriptProtoUndoOperation);
    atomic_store(result, (unint64_t *)&qword_256EB0410);
  }
  return result;
}

unint64_t sub_23F8760D8()
{
  unint64_t result;

  result = qword_256EB0418;
  if (!qword_256EB0418)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for TranscriptProtoUpdateParameterExpression_UpdateKind, &type metadata for TranscriptProtoUpdateParameterExpression_UpdateKind);
    atomic_store(result, (unint64_t *)&qword_256EB0418);
  }
  return result;
}

unint64_t sub_23F876114()
{
  unint64_t result;

  result = qword_256EB0420;
  if (!qword_256EB0420)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for TranscriptProtoASTPrefixOp, &type metadata for TranscriptProtoASTPrefixOp);
    atomic_store(result, (unint64_t *)&qword_256EB0420);
  }
  return result;
}

unint64_t sub_23F876150()
{
  unint64_t result;

  result = qword_256EB0428;
  if (!qword_256EB0428)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for TranscriptProtoASTInfixOp, &type metadata for TranscriptProtoASTInfixOp);
    atomic_store(result, (unint64_t *)&qword_256EB0428);
  }
  return result;
}

unint64_t sub_23F87618C()
{
  unint64_t result;

  result = qword_256EB0430;
  if (!qword_256EB0430)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for TranscriptProtoInfixExpression_InfixOp, &type metadata for TranscriptProtoInfixExpression_InfixOp);
    atomic_store(result, (unint64_t *)&qword_256EB0430);
  }
  return result;
}

unint64_t sub_23F8761C8()
{
  unint64_t result;

  result = qword_256EB0438;
  if (!qword_256EB0438)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for TranscriptProtoPrefixExpression_PrefixOp, &type metadata for TranscriptProtoPrefixExpression_PrefixOp);
    atomic_store(result, (unint64_t *)&qword_256EB0438);
  }
  return result;
}

unint64_t sub_23F876204()
{
  unint64_t result;

  result = qword_256EB0440;
  if (!qword_256EB0440)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for TranscriptProtoASTUpdateKind, &type metadata for TranscriptProtoASTUpdateKind);
    atomic_store(result, (unint64_t *)&qword_256EB0440);
  }
  return result;
}

unint64_t sub_23F876240()
{
  unint64_t result;

  result = qword_256EB0448;
  if (!qword_256EB0448)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for TranscriptProtoResponseDialogPresentationHint, &type metadata for TranscriptProtoResponseDialogPresentationHint);
    atomic_store(result, (unint64_t *)&qword_256EB0448);
  }
  return result;
}

unint64_t sub_23F87627C()
{
  unint64_t result;

  result = qword_256EB0450;
  if (!qword_256EB0450)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for TranscriptProtoResponseType, &type metadata for TranscriptProtoResponseType);
    atomic_store(result, (unint64_t *)&qword_256EB0450);
  }
  return result;
}

unint64_t sub_23F8762B8()
{
  unint64_t result;

  result = qword_256EB0458;
  if (!qword_256EB0458)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for TranscriptProtoQueryOperator, &type metadata for TranscriptProtoQueryOperator);
    atomic_store(result, (unint64_t *)&qword_256EB0458);
  }
  return result;
}

unint64_t sub_23F8762F4()
{
  unint64_t result;

  result = qword_256EB0460;
  if (!qword_256EB0460)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for TranscriptProtoPlanSource, &type metadata for TranscriptProtoPlanSource);
    atomic_store(result, (unint64_t *)&qword_256EB0460);
  }
  return result;
}

unint64_t sub_23F876330()
{
  unint64_t result;

  result = qword_256EB0468;
  if (!qword_256EB0468)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for TranscriptProtoSystemRequirement, &type metadata for TranscriptProtoSystemRequirement);
    atomic_store(result, (unint64_t *)&qword_256EB0468);
  }
  return result;
}

unint64_t sub_23F87636C()
{
  unint64_t result;

  result = qword_256EB0470;
  if (!qword_256EB0470)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for TranscriptProtoCandidateSource, &type metadata for TranscriptProtoCandidateSource);
    atomic_store(result, (unint64_t *)&qword_256EB0470);
  }
  return result;
}

unint64_t sub_23F8763A8()
{
  unint64_t result;

  result = qword_256EB0478;
  if (!qword_256EB0478)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for Candidate.Source, &type metadata for Candidate.Source);
    atomic_store(result, (unint64_t *)&qword_256EB0478);
  }
  return result;
}

unint64_t sub_23F8763E4()
{
  unint64_t result;

  result = qword_256EB0480;
  if (!qword_256EB0480)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for QueryOperator, &type metadata for QueryOperator);
    atomic_store(result, (unint64_t *)&qword_256EB0480);
  }
  return result;
}

unint64_t sub_23F876420()
{
  unint64_t result;

  result = qword_256EB0490;
  if (!qword_256EB0490)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for Session.Transcript.MockError, &type metadata for Session.Transcript.MockError);
    atomic_store(result, (unint64_t *)&qword_256EB0490);
  }
  return result;
}

void sub_23F87645C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    objc_opt_self();
    atomic_store(swift_getObjCClassMetadata(), a2);
  }
  sub_23F694CC8();
}

uint64_t sub_23F87661C()
{
  return sub_23FB2F9F8();
}

uint64_t sub_23F87663C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 256) + 8))(v2, v1);
}

uint64_t sub_23F876650()
{
  return sub_23FB2F9F8();
}

uint64_t sub_23F876660()
{
  return sub_23FB2FB18();
}

uint64_t sub_23F876680()
{
  return sub_23FB2FAA0();
}

uint64_t sub_23F87669C()
{
  return sub_23FB2FA7C();
}

uint64_t sub_23F8766B4()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23F8766C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 256) + 8))(v2, v1);
}

uint64_t sub_23F8766D4()
{
  return sub_23FB2FA7C();
}

void sub_23F8766E0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F83A7D4(v2, a2);
}

void sub_23F8766E8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v2)(_QWORD);

  sub_23F83A7A4(a1, *(_QWORD *)(a2 - 256), v2);
}

uint64_t sub_23F8766F8()
{
  return sub_23FB2FB18();
}

uint64_t sub_23F876708()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23F876710()
{
  return swift_allocObject();
}

uint64_t sub_23F876730()
{
  return sub_23FB2F9F8();
}

uint64_t sub_23F876738()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23F876748()
{
  return sub_23FB2FB18();
}

_QWORD *sub_23F876754(_QWORD *a1)
{
  uint64_t v1;

  return sub_23F6ADC98(a1, v1);
}

void sub_23F87676C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F83A7A4(a1, a2, v2);
}

uint64_t sub_23F876774()
{
  return sub_23FB2F254();
}

uint64_t sub_23F876798()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F8767A0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F8767B0()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_23F8767C4()
{
  return sub_23FB2FB18();
}

uint64_t sub_23F8767CC()
{
  return sub_23FB2F254();
}

uint64_t sub_23F8767D8()
{
  return swift_arrayInitWithCopy();
}

uint64_t sub_23F8767E8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 224);
}

void sub_23F8767F4(uint64_t a1)
{
  uint64_t *v1;

  sub_23F7F6110(a1, v1);
}

uint64_t sub_23F8767FC()
{
  return sub_23FB2F9F8();
}

void sub_23F876818(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F83A800(a1, a2, v2);
}

void sub_23F876820(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F83A7D4(a1, v1);
}

uint64_t sub_23F876828()
{
  return sub_23FB2FADC();
}

uint64_t sub_23F876834()
{
  return sub_23FB2FAD0();
}

uint64_t sub_23F876840()
{
  return sub_23FB2F254();
}

uint64_t sub_23F876854()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return 0;
}

uint64_t sub_23F87686C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return sub_23FB2FADC();
}

uint64_t sub_23F876898()
{
  return sub_23FB2F944();
}

void sub_23F8768B4(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, uint64_t a3@<X8>)
{
  sub_23F83A800(a1, *(_QWORD *)(a3 - 256), a2);
}

void sub_23F8768C0(uint64_t a1)
{
  uint64_t *v1;

  sub_23F7F6110(a1, v1);
}

uint64_t sub_23F8768C8()
{
  unsigned __int8 v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F73515C(v5, v4, v0);
  sub_23F73515C(v3, v2, v1);
  sub_23F735FE8(v3, v2, v1);
  return sub_23F735FE8(v5, v4, v0);
}

uint64_t sub_23F876910()
{
  return sub_23FB2FAA0();
}

uint64_t sub_23F876928()
{
  uint64_t v0;

  return v0;
}

void sub_23F876934(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F83A7A4(a1, a2, v2);
}

uint64_t sub_23F87693C()
{
  return sub_23FB2FB18();
}

void sub_23F876958(uint64_t a1)
{
  sub_23F6B4EEC(a1);
}

uint64_t sub_23F876960()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F7893FC(v1, v0);
}

uint64_t sub_23F876970()
{
  return 0;
}

uint64_t sub_23F87698C()
{
  return sub_23FB2FADC();
}

uint64_t sub_23F87699C()
{
  return sub_23FB2F9F8();
}

uint64_t sub_23F8769B8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F8769D8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F8769F0()
{
  return sub_23FB2FA7C();
}

uint64_t sub_23F8769F8()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23F876A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  return a4(0);
}

_QWORD *sub_23F876A18(_QWORD *a1)
{
  uint64_t v1;

  return sub_23F6ADC98(a1, v1);
}

void sub_23F876A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;

  *(_QWORD *)(v12 - 104) = v10;
  sub_23F7DCCDC(v10, (uint64_t)&a9 - v9, v11);
}

void sub_23F876A50(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F83A7D4(v2, a2);
}

uint64_t sub_23F876A58(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return swift_retain();
}

uint64_t sub_23F876A70()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F876A84()
{
  return sub_23FB2F11C();
}

uint64_t sub_23F876A98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 88) + 8))(v1, v0);
}

uint64_t sub_23F876AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t sub_23F876AB8()
{
  return sub_23FB2F9F8();
}

uint64_t sub_23F876ACC()
{
  return sub_23FB2F254();
}

uint64_t sub_23F876AE4()
{
  return sub_23FB2FA7C();
}

void sub_23F876B04(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F83A800(a1, v3, a3);
}

uint64_t sub_23F876B0C()
{
  return sub_23FB2F200();
}

void sub_23F876B14(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23F7F6110(v2, a2);
}

uint64_t sub_23F876B1C()
{
  return sub_23FB2F254();
}

uint64_t sub_23F876B44()
{
  return sub_23FB2F9F8();
}

uint64_t sub_23F876B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t sub_23F876B6C()
{
  return sub_23FB2FAAC();
}

uint64_t sub_23F876B7C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  return a2(0);
}

uint64_t sub_23F876B8C()
{
  return sub_23FB2F9F8();
}

uint64_t sub_23F876B94()
{
  return sub_23FB2F254();
}

uint64_t sub_23F876B9C(uint64_t a1)
{
  return *(_QWORD *)a1;
}

void sub_23F876BC8()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 64) = 0;
  *(_QWORD *)(v0 - 56) = 0xE000000000000000;
}

_QWORD *sub_23F876BD8(_QWORD *a1)
{
  uint64_t v1;

  return sub_23F6ADC98(a1, v1);
}

uint64_t sub_23F876C04(uint64_t (*a1)(_QWORD))
{
  return a1(0);
}

void sub_23F876C10(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F7DCCDC(a1, a2, v2);
}

uint64_t sub_23F876C18()
{
  return swift_initStructMetadata();
}

uint64_t sub_23F876C3C()
{
  return sub_23FB2D0B8();
}

void sub_23F876C50(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23F7F6110(v2, a2);
}

void *sub_23F876C58(uint64_t a1)
{
  void *v1;
  const void *v2;

  return memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

uint64_t sub_23F876C6C()
{
  uint64_t v0;
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v0, 0, 1, v1);
}

uint64_t sub_23F876C80()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v0);
  return swift_bridgeObjectRelease();
}

void sub_23F876C98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  sub_23F7DCCDC(v1, v0, v2);
}

uint64_t sub_23F876CC0()
{
  return sub_23FB2F254();
}

uint64_t sub_23F876CD8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 0;
  return sub_23FB2FA40();
}

uint64_t sub_23F876D00()
{
  return sub_23FB2FAA0();
}

void sub_23F876D28(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F7DCCDC(a1, a2, v2);
}

uint64_t sub_23F876D30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  int v3;

  v2 = *(_QWORD *)(v1 + a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  v3 = v2 - 1;
  if (v3 < 0)
    v3 = -1;
  return (v3 + 1);
}

void sub_23F876D58(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F7DCCDC(a1, a2, v2);
}

uint64_t sub_23F876D60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(v1, *(_QWORD *)(v2 - 96));
}

void sub_23F876D70(uint64_t a1)
{
  uint64_t *v1;

  sub_23F7F6110(a1, v1);
}

uint64_t sub_23F876D78()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F876D84(uint64_t a1)
{
  uint64_t v1;

  return v1 + *(int *)(a1 + 20);
}

uint64_t sub_23F876D94()
{
  return sub_23FB2F254();
}

uint64_t sub_23F876DA0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 120));
}

uint64_t sub_23F876DA8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F876DBC()
{
  uint64_t v0;

  return v0;
}

void sub_23F876DC8(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, uint64_t a3@<X8>)
{
  sub_23F83A800(a1, *(_QWORD *)(a3 - 256), a2);
}

void sub_23F876E18(uint64_t (*a1)(_QWORD)@<X2>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;

  sub_23F83A800(v3, (uint64_t)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
}

uint64_t sub_23F876E38()
{
  return sub_23FB2F254();
}

uint64_t sub_23F876E44()
{
  return 0;
}

uint64_t sub_23F876E58()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23F876E60()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F876E6C(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F876E8C@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 280) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_23F876EB0@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 384) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_23F876ED4@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 288) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_23F876EF8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 112));
}

uint64_t sub_23F876F00()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(int *)(v1 + 20);
}

uint64_t sub_23F876F10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 96))(v0, v1);
}

uint64_t sub_23F876F20()
{
  return swift_initStructMetadata();
}

uint64_t sub_23F876F34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(a1 + 8))(*(_QWORD *)(v1 - 104), *(_QWORD *)(v1 - 112));
}

uint64_t sub_23F876F4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 96))(v2, v0);
}

uint64_t sub_23F876F5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 192));
}

uint64_t sub_23F876F78()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(int *)(v1 + 20);
}

uint64_t sub_23F876F84()
{
  return sub_23FB2FCC8();
}

uint64_t sub_23F876F94()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t sub_23F876FA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_23F876FB8()
{
  return sub_23FB2FAA0();
}

uint64_t sub_23F876FD0()
{
  return sub_23FB2F9F8();
}

uint64_t sub_23F876FE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v0, v1, v2);
}

uint64_t sub_23F876FF4()
{
  return sub_23FB2F254();
}

uint64_t sub_23F877000(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v2, v1);
}

uint64_t sub_23F877014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  return a5(0);
}

uint64_t _s30IntelligenceFlowPlannerSupport11SpeechQueryV10candidatesSayAA0E16RequestCandidateVGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F87702C()
{
  uint64_t v0;
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v0, 1, v1);
}

uint64_t sub_23F87703C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F87704C()
{
  return swift_arrayInitWithCopy();
}

uint64_t sub_23F877054()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  return v4(v2 + *(int *)(v0 + 24), v1 + *(int *)(v0 + 24), v3);
}

void sub_23F877068(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F83A7D4(a1, v1);
}

uint64_t sub_23F877070()
{
  return sub_23FB2F074();
}

uint64_t sub_23F877084()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F8770D0()
{
  return type metadata accessor for Session.Event(0);
}

uint64_t sub_23F8770FC()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t sub_23F877104()
{
  return 0;
}

uint64_t sub_23F877128()
{
  return sub_23FB2FCB0();
}

void sub_23F877130()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 - 136);
  *(_QWORD *)(v1 - 112) = *(_QWORD *)(v1 - 144);
  *(_QWORD *)(v1 - 104) = v2;
  *(_BYTE *)(v1 - 96) = v0;
}

uint64_t sub_23F877144()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 2;
  return 0;
}

void sub_23F87715C(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F83A7D4(a1, v1);
}

uint64_t sub_23F877164@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 192) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_23F877184()
{
  return swift_allocObject();
}

uint64_t sub_23F87718C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 96), *(_QWORD *)(v1 - 104));
}

uint64_t sub_23F877198()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 144), *(_QWORD *)(v1 - 136));
}

uint64_t sub_23F8771A4()
{
  return sub_23FB2FB18();
}

uint64_t sub_23F8771B0()
{
  return sub_23FB2FCB0();
}

uint64_t sub_23F8771C8()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 104), *(_QWORD *)(v1 - 96));
}

void sub_23F8771D4(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, uint64_t a3@<X8>)
{
  sub_23F83A7A4(a1, *(_QWORD *)(a3 - 256), a2);
}

uint64_t sub_23F8771E0@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 72) = a1;
  return sub_23FB2FAE8();
}

uint64_t sub_23F8771F8@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 72) = a1;
  return sub_23FB2FA4C();
}

void sub_23F877210()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 2;
}

uint64_t sub_23F87721C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 2;
  return sub_23FB2FA7C();
}

uint64_t sub_23F877248()
{
  return sub_23FB2FB48();
}

void sub_23F877254(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_23F7DCCDC(v3, v4, a3);
}

uint64_t sub_23F877260()
{
  return _s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0();
}

void sub_23F87726C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v1 + *(int *)(a1 + 40));
  *v2 = 0;
  v2[1] = 0;
  StatementID.init(fromExprId:)();
}

uint64_t sub_23F877298()
{
  return sub_23FB2F254();
}

uint64_t sub_23F8772A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v2, v1, a1);
}

uint64_t sub_23F8772B8()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t sub_23F8772C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + a1);
}

uint64_t sub_23F8772CC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F8772DC()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23F8772E4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 68) = 3;
  return v0 - 68;
}

uint64_t sub_23F8772F4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 68) = 3;
  return sub_23FB2FAAC();
}

uint64_t sub_23F87731C(uint64_t a1)
{
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 1, 1, v1);
}

uint64_t sub_23F87732C(uint64_t a1)
{
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 1, 1, v1);
}

uint64_t sub_23F87734C()
{
  return sub_23FB2FA40();
}

uint64_t sub_23F877354()
{
  uint64_t v0;

  return _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(*(_QWORD *)(v0 - 112));
}

_QWORD *sub_23F87735C(_QWORD *a1)
{
  uint64_t v1;

  return sub_23F6ADC98(a1, v1);
}

void sub_23F877374(uint64_t a1)
{
  uint64_t *v1;

  sub_23F7F6110(a1, v1);
}

uint64_t sub_23F87737C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F77D90C(v1, v0);
}

uint64_t sub_23F87738C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F7893FC(v0, v1);
}

uint64_t sub_23F87739C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F77D90C(v0, v1);
}

uint64_t sub_23F8773AC()
{
  return sub_23FB2C74C();
}

uint64_t sub_23F8773D8()
{
  return sub_23FB2FAAC();
}

_QWORD *sub_23F8773E8()
{
  uint64_t v0;
  _QWORD *v1;

  return sub_23F6ADC98(v1, v0);
}

uint64_t sub_23F877414()
{
  return sub_23FB2F254();
}

uint64_t sub_23F877458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t sub_23F877474()
{
  return sub_23FB2FAE8();
}

uint64_t sub_23F877484()
{
  return sub_23FB2FB18();
}

uint64_t sub_23F877494(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t sub_23F8774B0()
{
  return 0;
}

uint64_t sub_23F8774C8()
{
  return sub_23FB2F254();
}

uint64_t sub_23F8774EC@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 104) = a1;
  return sub_23FB2FA40();
}

uint64_t sub_23F877500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 32))(v1, v2, v3);
}

uint64_t sub_23F877514()
{
  return sub_23FB2F254();
}

unint64_t sub_23F877520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v0 + *(int *)(v1 + 24);
  v4 = *(_QWORD *)(v3 + 16);
  *(_OWORD *)(v2 - 96) = *(_OWORD *)v3;
  *(_QWORD *)(v2 - 80) = v4;
  *(_BYTE *)(v2 - 97) = 2;
  return sub_23F83C454();
}

uint64_t sub_23F877544()
{
  return sub_23FB2FA34();
}

uint64_t sub_23F87757C()
{
  return 0x52747865746E6F63;
}

uint64_t sub_23F8775A0()
{
  return 0x61636F5669726973;
}

uint64_t sub_23F8775C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v1 + 32))(*(_QWORD *)(v3 - 168) + *(int *)(*(_QWORD *)(v3 - 184) + 20), v2, v0);
}

void sub_23F8775E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F83A800(a1, v3, a3);
}

_QWORD *sub_23F8775F0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 88) = v1;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v1, 1, 1, a1);
  return sub_23F6ADC98(v2, v2[3]);
}

uint64_t sub_23F87762C()
{
  return sub_23FB2FA7C();
}

uint64_t sub_23F877638()
{
  uint64_t v0;

  return _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v0);
}

uint64_t sub_23F877654()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 96) + 8))(v0, *(_QWORD *)(v1 - 144));
}

uint64_t sub_23F877668()
{
  return sub_23FB2D0B8();
}

uint64_t sub_23F87768C@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 320) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for StatementResult(0);
}

uint64_t sub_23F8776B0@<X0>(uint64_t (*a1)(_QWORD, _QWORD)@<X8>)
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 - 96), *(_QWORD *)(v1 - 104));
}

uint64_t sub_23F8776B8@<X0>(uint64_t (*a1)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, *(_QWORD *)(v2 - 144));
}

uint64_t sub_23F8776C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_23F8776CC()
{
  return sub_23FB2F254();
}

uint64_t sub_23F8776F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  return a4(319);
}

uint64_t sub_23F8776FC()
{
  return sub_23FB2D0B8();
}

uint64_t sub_23F877704()
{
  return type metadata accessor for ActionResolverRequest(0);
}

uint64_t sub_23F87770C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F87772C()
{
  return 0x61566E7275746572;
}

uint64_t sub_23F87774C()
{
  return swift_willThrow();
}

uint64_t sub_23F877754()
{
  uint64_t v0;

  return v0 - 72;
}

void sub_23F877760()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 152) = 0;
  *(_QWORD *)(v0 - 144) = 0xE000000000000000;
}

uint64_t sub_23F877780()
{
  uint64_t v0;

  return _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v0);
}

uint64_t sub_23F877788()
{
  return 0;
}

void sub_23F8777A0()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 152) = 0x203A72657375;
  *(_QWORD *)(v0 - 144) = 0xE600000000000000;
}

uint64_t sub_23F8777B8()
{
  return 0x656D6F646167656DLL;
}

uint64_t sub_23F877804()
{
  uint64_t v0;

  return _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v0);
}

uint64_t sub_23F87780C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 2;
  return v0 - 67;
}

uint64_t sub_23F87781C()
{
  uint64_t v0;

  return v0;
}

void sub_23F877828(uint64_t (*a1)(_QWORD)@<X2>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;

  sub_23F83A800(v3, (uint64_t)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
}

uint64_t sub_23F877848()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F877870()
{
  return sub_23FB2FCB0();
}

uint64_t sub_23F877878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 184) = v0;
  *(_QWORD *)(v5 - 176) = v3;
  *(_QWORD *)(v5 - 192) = v2;
  *(_QWORD *)(v5 - 168) = v4;
  *(_QWORD *)(v5 - 88) = v1;
  return sub_23FB2FA94();
}

uint64_t sub_23F877898()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F8778B4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F8778C4()
{
  return sub_23FB2FB18();
}

void sub_23F8778CC(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F83A800(a1, a2, v2);
}

uint64_t sub_23F8778D4()
{
  return 0x6D6F725072657375;
}

void sub_23F8778F4(void *a1)
{
  free(a1);
}

uint64_t sub_23F877908()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F877930(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

void sub_23F877938(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F83A800(a1, v3, a3);
}

uint64_t sub_23F877974(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 80) = *(_QWORD *)(v1 + *(int *)(result + 20));
  *(_BYTE *)(v2 - 81) = 1;
  return result;
}

uint64_t sub_23F87798C()
{
  return type metadata accessor for RequestContent.SystemPromptResolution(0);
}

uint64_t sub_23F877994()
{
  return type metadata accessor for StatementResult(0);
}

uint64_t sub_23F8779B4()
{
  return sub_23FB2F254();
}

uint64_t sub_23F8779C0()
{
  return sub_23FB2FCB0();
}

uint64_t sub_23F8779DC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F8779E4()
{
  return sub_23FB2FA4C();
}

uint64_t sub_23F8779EC()
{
  return sub_23FB2FA10();
}

void sub_23F8779F4(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, uint64_t a3@<X8>)
{
  sub_23F83A800(a1, *(_QWORD *)(a3 - 256), a2);
}

void sub_23F877A00()
{
  StatementID.init(fromExprId:)();
}

void sub_23F877A0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)(v0 + *(int *)(v1 + 24));
  v4 = *v3;
  LOBYTE(v3) = *((_BYTE *)v3 + 8);
  *(_QWORD *)(v2 - 80) = v4;
  *(_BYTE *)(v2 - 72) = (_BYTE)v3;
  *(_BYTE *)(v2 - 81) = 2;
}

uint64_t sub_23F877A3C(uint64_t result, int a2)
{
  *(_QWORD *)(result + 8) = (a2 - 1);
  return result;
}

uint64_t sub_23F877A48()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F877A50()
{
  return sub_23FB2FB48();
}

uint64_t sub_23F877A60()
{
  return sub_23FB2FCC8();
}

uint64_t sub_23F877A70()
{
  return sub_23FB2FB48();
}

uint64_t sub_23F877A7C()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23F877A88()
{
  unint64_t v0;
  uint64_t v1;

  return sub_23F6BC34C(v1, v0);
}

uint64_t sub_23F877A94()
{
  return sub_23FB2F9F8();
}

uint64_t sub_23F877AB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD, uint64_t, uint64_t);
  uint64_t v3;

  return v2(*(_QWORD *)(v3 - 168) + *(int *)(*(_QWORD *)(v3 - 184) + 24), v0, v1);
}

uint64_t sub_23F877ACC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F877ADC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for QueryStep(0);
}

uint64_t sub_23F877AEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_23F877AFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 152) + 32))(v0 + *(int *)(v1 + 20), v3, v2);
}

unint64_t sub_23F877B18(uint64_t a1)
{
  uint64_t v1;

  return sub_23F78C7B0(a1, v1, 0, 1);
}

uint64_t sub_23F877B28(uint64_t a1)
{
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 1, 1, v1);
}

_QWORD *sub_23F877B38()
{
  _QWORD *v0;
  uint64_t v1;

  return sub_23F6ADC98(v0, v1);
}

uint64_t sub_23F877B54()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 112), *(_QWORD *)(v1 - 104));
}

uint64_t sub_23F877B60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 152));
}

void sub_23F877B70(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F840E4C(v3, v2 + a1, v1);
}

uint64_t sub_23F877B9C()
{
  return _s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0();
}

void sub_23F877BA4(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_23F83A7A4(a1, v2, v1);
}

void sub_23F877BB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F83A800(a1, v3, a3);
}

void sub_23F877BB8()
{
  sub_23F711208();
}

uint64_t sub_23F877BC8()
{
  return type metadata accessor for Timepoint();
}

uint64_t sub_23F877BE4()
{
  return type metadata accessor for RequestContent(0);
}

uint64_t sub_23F877C24()
{
  return _s30IntelligenceFlowPlannerSupport20PlatformPnRTelemetryC7startedy10Foundation4UUIDVAA12StartedStateO_0aE7Library0aB11IdentifiersVSgAGtFZfA1__0();
}

uint64_t sub_23F877C40()
{
  return type metadata accessor for ClientAction.ShimParameterResolution(0);
}

uint64_t sub_23F877C5C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, uint64_t a3)
{
  _QWORD *v3;

  v3 = (uint64_t *)((char *)&a3 + *(int *)(result + 28) - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v3 = 0;
  v3[1] = 0;
  return result;
}

uint64_t sub_23F877C80()
{
  return type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
}

uint64_t sub_23F877C9C@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 400) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_23F877CC0@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 304) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_23F877CE4@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 264) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_23F877D08@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 336) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_23F877D2C()
{
  uint64_t *v0;

  return sub_23F77D90C(*v0, v0[1]);
}

uint64_t sub_23F877D38()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 88) + 8))(*(_QWORD *)(v0 - 96), *(_QWORD *)(v0 - 104));
}

void sub_23F877D48()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_23F6957CC(v1, v0);
}

void *sub_23F877D54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v1 + 24) = v2;
  return malloc(*(_QWORD *)(v2 + 64));
}

uint64_t sub_23F877D70()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 176) + 8))(*(_QWORD *)(v0 - 96), *(_QWORD *)(v0 - 168));
}

void *sub_23F877D80@<X0>(uint64_t a1@<X8>)
{
  return malloc(*(_QWORD *)(a1 + 64));
}

uint64_t sub_23F877D88()
{
  uint64_t *v0;

  return sub_23F77D90C(*v0, v0[1]);
}

void sub_23F877D94(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F83A7A4(a1, v3, a3);
}

uint64_t sub_23F877D9C()
{
  return sub_23FB2FCC8();
}

uint64_t sub_23F877DB8()
{
  return swift_bridgeObjectRelease();
}

void *sub_23F877DC4()
{
  return malloc(0x30uLL);
}

void sub_23F877DD0(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F7DCCDC(v2 + a1, v3, v1);
}

void sub_23F877DE0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_23F83A800(v3, v4, a3);
}

void sub_23F877DEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_23F83A800(v3, v4, a3);
}

uint64_t sub_23F877DF8()
{
  return sub_23FB2D0DC();
}

BOOL _s30IntelligenceFlowPlannerSupport14RequestContentO22SystemPromptResolutionV011RequirementI0V2eeoiySbAG_AGtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_23F877E18()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

uint64_t sub_23F877E38()
{
  return sub_23FB2F7AC();
}

_BYTE *sub_23F877E50@<X0>(char a1@<W8>)
{
  uint64_t v1;
  _BYTE *v2;

  v2 = *(_BYTE **)(v1 - 256);
  *v2 = a1;
  return v2;
}

uint64_t sub_23F877E64()
{
  uint64_t v0;

  return v0;
}

void sub_23F877E74(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F7DCCDC(a1, a2, v2);
}

uint64_t sub_23F877E7C()
{
  uint64_t v0;
  _QWORD *v1;

  *v1 = v0;
  return sub_23FB2FA04();
}

uint64_t sub_23F877E94()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F877EA4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F877EC0()
{
  return 0x736E6961746E6F63;
}

uint64_t sub_23F877ED8()
{
  uint64_t v0;
  uint64_t v1;

  return *(_QWORD *)(v0 + *(int *)(v1 + 32));
}

uint64_t sub_23F877EEC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F877F0C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 192);
}

uint64_t sub_23F877F1C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F877F48()
{
  return 0;
}

uint64_t sub_23F877F7C()
{
  return sub_23FB2FA34();
}

void sub_23F877F84()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
}

void sub_23F877F94(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F83A7A4(a1, v3, a3);
}

uint64_t sub_23F877F9C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F877FA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;

  result = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v3, 1, 1, a1);
  v5 = (_QWORD *)(v1 + *(int *)(v2 + 24));
  *v5 = 0;
  v5[1] = 0;
  v5[2] = 0;
  return result;
}

uint64_t sub_23F877FD8()
{
  return 1;
}

uint64_t sub_23F877FF8()
{
  return 1;
}

void sub_23F878018()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 81) = 2;
}

uint64_t sub_23F878024()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F878034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 160) = v0;
  *(_QWORD *)(v2 - 72) = v1;
  return sub_23FB2FA94();
}

void sub_23F878064(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  *(_QWORD *)(v2 + a1 + 8) = (v1 - 1);
}

void sub_23F878074()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
  sub_23F711208();
}

uint64_t sub_23F8780AC@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 248) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

char *sub_23F87811C(__n128 *a1, __n128 a2)
{
  uint64_t v2;

  a1[1] = a2;
  return (char *)a1 + v2;
}

void sub_23F878128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 144) = v1;
  *(_QWORD *)(v2 - 136) = v0;
  *(_BYTE *)(v2 - 65) = 0;
}

uint64_t sub_23F87813C()
{
  return 0;
}

void sub_23F878150(_QWORD *a1, _QWORD *a2)
{
  sub_23F6957CC(a1, a2);
}

void sub_23F87815C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F83A7A4(a1, a2, v2);
}

uint64_t sub_23F878170()
{
  uint64_t v0;

  return v0;
}

char *sub_23F878184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  return (char *)&a9 - v9;
}

void sub_23F878194(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F83A800(a1, a2, v2);
}

void sub_23F87819C(uint64_t a1)
{
  uint64_t *v1;

  sub_23F7F6110(a1, v1);
}

uint64_t sub_23F8781A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23F8781AC()
{
  uint64_t v0;

  return v0;
}

void sub_23F8781B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  *(_QWORD *)(v3 + 40) = a1;
  sub_23F7DCCDC(v2, v1, v4);
}

uint64_t sub_23F8781D0()
{
  return 0;
}

uint64_t sub_23F8781F0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F878208()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return sub_23FB2D0B8();
}

uint64_t sub_23F878220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 88) = v0;
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v0 + 32))(v1, *(_QWORD *)(v2 - 120), *(_QWORD *)(v2 - 112));
}

uint64_t sub_23F878238()
{
  return type metadata accessor for ActionStepResult(0);
}

uint64_t sub_23F878240()
{
  return type metadata accessor for ExternalAgentRequest(0);
}

uint64_t sub_23F878248()
{
  return type metadata accessor for ActionCancellation(0);
}

uint64_t sub_23F878260()
{
  return type metadata accessor for ActionResult(0);
}

uint64_t sub_23F878268()
{
  return sub_23FB2C80C();
}

uint64_t sub_23F878270()
{
  return type metadata accessor for ClientAction(0);
}

void sub_23F878278(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  *v3 = v1;
  v3[1] = a1;
  *v4 = v2;
  v4[1] = v5;
  sub_23F83BC6C();
}

uint64_t sub_23F87828C()
{
  uint64_t *v0;

  return sub_23F77D90C(*v0, v0[1]);
}

uint64_t sub_23F8782A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  return a3(a1, a2);
}

uint64_t sub_23F8782B8(char a1)
{
  return a1 & 1;
}

uint64_t sub_23F8782C4()
{
  return type metadata accessor for ActionResolverRequest(0);
}

uint64_t _s30IntelligenceFlowPlannerSupport16ContextRetrievedV09utteranceE0SayAA0fE9StatementVGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F878300()
{
  return sub_23FB2F8FC();
}

uint64_t sub_23F87830C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 112), *(_QWORD *)(v1 - 120));
}

uint64_t sub_23F878318()
{
  return sub_23FB2FA34();
}

uint64_t sub_23F878320()
{
  uint64_t v0;

  return v0;
}

void *sub_23F87832C()
{
  void *v0;
  uint64_t v1;
  const void *v2;

  return memcpy(v0, v2, *(_QWORD *)(*(_QWORD *)(v1 - 8) + 64));
}

uint64_t sub_23F878358()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F878374()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 65) = 0;
  return v0;
}

uint64_t sub_23F878390()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 0;
  return 0;
}

void sub_23F87839C()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 72) = *(_QWORD *)(v0 - 120);
}

uint64_t sub_23F8783A8()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 152) = 0;
  *(_QWORD *)(v0 - 144) = 0xE000000000000000;
  return sub_23FB2F7AC();
}

uint64_t sub_23F8783BC()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(int *)(v1 + 28);
}

uint64_t sub_23F8783C8()
{
  return sub_23FB2FCB0();
}

uint64_t sub_23F8783D4()
{
  return sub_23FB2FA40();
}

uint64_t sub_23F8783DC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F8783E8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F878400(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v4 = (_QWORD *)(v3 + *(int *)(result + 20));
  *v4 = v2;
  v4[1] = v1;
  return result;
}

void sub_23F878428()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 1;
}

uint64_t sub_23F878434()
{
  uint64_t v0;

  return _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(*(_QWORD *)(v0 - 136));
}

unint64_t sub_23F878464()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_23F83D138();
}

void sub_23F878470(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F83A7D4(v2, a2);
}

uint64_t sub_23F878478()
{
  return sub_23FB2FCB0();
}

uint64_t sub_23F878480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v10;

  return a10(a1, a2, v10);
}

uint64_t sub_23F87848C()
{
  return sub_23FB2F9F8();
}

uint64_t sub_23F8784A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 176) + 32))(*(_QWORD *)(v2 - 168), v1, v0);
}

void sub_23F8784B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 184) = v0;
  *(_QWORD *)(v4 - 176) = v1;
  *(_QWORD *)(v4 - 168) = v3;
  *(_QWORD *)(v4 - 88) = v2;
  *(_BYTE *)(v4 - 65) = 0;
}

void sub_23F8784E4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = v1;
}

void sub_23F878500(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F7DCCDC(a1, a2, v2);
}

void sub_23F878508(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23F7F6110(v2, a2);
}

uint64_t sub_23F87852C()
{
  uint64_t (*v0)(uint64_t);

  return v0(319);
}

void sub_23F878540(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F840E4C(a1, v3, a3);
}

__uint64_t sub_23F87859C()
{
  return clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
}

uint64_t sub_23F8785D0()
{
  return type metadata accessor for Session.Event(0);
}

uint64_t sub_23F8785F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, a2, v2);
}

void *sub_23F87860C(void *__dst, const void *__src, size_t __n)
{
  return memcpy(__dst, __src, __n);
}

uint64_t _s30IntelligenceFlowPlannerSupport015ClientInitiatedE6ActionV10parametersSDySS7ToolKit10TypedValueOGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F878638(uint64_t a1, uint64_t a2)
{
  return sub_23F7893FC(a1, a2);
}

uint64_t sub_23F878640()
{
  return sub_23FB2ED14();
}

uint64_t sub_23F878648()
{
  uint64_t *v0;

  return sub_23F77D90C(*v0, v0[1]);
}

unint64_t sub_23F878654()
{
  return 0xD000000000000014;
}

uint64_t sub_23F878668@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = a1;
  *(_QWORD *)(v2 - 88) = v1;
  return sub_23FB2F254();
}

uint64_t sub_23F87867C()
{
  return type metadata accessor for Session.Event(0);
}

uint64_t sub_23F878688()
{
  return sub_23FB2FCB0();
}

uint64_t sub_23F878690()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_23F87869C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F7DCCDC(a1, a2, v2);
}

uint64_t sub_23F8786A4()
{
  return sub_23FB2FA7C();
}

uint64_t sub_23F8786B8()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F6BC34C(v0, *(_QWORD *)(v1 - 232));
}

void sub_23F8786C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_23F83A800(v3, v4, a3);
}

uint64_t sub_23F8786D0()
{
  return type metadata accessor for UndoRedoRequest(0);
}

uint64_t sub_23F8786D8()
{
  return type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
}

uint64_t sub_23F8786E0()
{
  return sub_23FB2ED5C();
}

uint64_t sub_23F8786E8()
{
  return type metadata accessor for QueryStepResults(0);
}

uint64_t sub_23F8786F0()
{
  return type metadata accessor for ClientUndoRedoRequest(0);
}

uint64_t sub_23F8786F8()
{
  return type metadata accessor for ParameterQuery(0);
}

uint64_t sub_23F878700()
{
  return type metadata accessor for Candidate(0);
}

uint64_t sub_23F878708()
{
  return type metadata accessor for TypeConversionRequest(0);
}

uint64_t sub_23F878710()
{
  return sub_23FB2F254();
}

uint64_t sub_23F878718()
{
  return sub_23FB2D3B8();
}

void sub_23F878738()
{
  Session.Event.formingResponse(id:_:)();
}

uint64_t sub_23F878748()
{
  uint64_t v0;
  uint64_t v1;

  return v1 + *(int *)(v0 + 24);
}

uint64_t sub_23F878758()
{
  uint64_t v0;

  return sub_23F6BC34C(*(_QWORD *)(v0 - 264), *(_QWORD *)(v0 - 256));
}

uint64_t sub_23F8787BC()
{
  return sub_23FB2F254();
}

uint64_t sub_23F8787CC()
{
  return sub_23FB2C878();
}

uint64_t sub_23F8787DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(v1, *(_QWORD *)(v2 - 232));
}

uint64_t sub_23F878804()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F878834()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 248) + 8))(*(_QWORD *)(v0 - 184), *(_QWORD *)(v0 - 192));
}

uint64_t sub_23F878844()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 160));
}

uint64_t sub_23F878854()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 136);
}

uint64_t sub_23F87886C()
{
  uint64_t v0;

  return v0;
}

void sub_23F878878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 72) = *(_QWORD *)(v0 + *(int *)(v1 + 32));
  *(_BYTE *)(v2 - 73) = 4;
}

uint64_t sub_23F878890()
{
  uint64_t v0;

  return _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v0);
}

void sub_23F8788B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 72) = *(_QWORD *)(v0 + *(int *)(v1 + 24));
  *(_BYTE *)(v2 - 73) = 2;
}

uint64_t sub_23F8788D0()
{
  return sub_23FB2F8FC();
}

uint64_t sub_23F8788F0()
{
  return sub_23FB2FB48();
}

void sub_23F87890C()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 152) = 0;
  *(_QWORD *)(v0 - 144) = 0xE000000000000000;
}

uint64_t sub_23F878924()
{
  uint64_t v0;
  uint64_t v1;

  return *(_QWORD *)(v0 + *(int *)(v1 + 28) + 8);
}

uint64_t sub_23F878948()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F878964()
{
  return sub_23FB2F254();
}

uint64_t sub_23F87896C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 104) + 8))(v0, *(_QWORD *)(v1 - 96));
}

uint64_t sub_23F87897C()
{
  uint64_t v0;

  return _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(*(_QWORD *)(v0 - 96));
}

uint64_t sub_23F878984()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F87899C()
{
  return swift_bridgeObjectRelease();
}

void sub_23F8789A4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
}

__uint64_t sub_23F8789B4()
{
  return clock_gettime_nsec_np(_CLOCK_UPTIME_RAW);
}

void sub_23F8789BC(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 272) = a1;
}

uint64_t sub_23F8789C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for VariableStep(0);
}

uint64_t sub_23F8789D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return sub_23FB2D004();
}

void sub_23F8789E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  ClientAction.init(statementId:toolId:parameters:)(a1, v3, v2, v1);
}

uint64_t sub_23F8789F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 32))(a1, v3, v2);
}

uint64_t sub_23F878A08@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 128));
}

void sub_23F878A10()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 0;
}

uint64_t sub_23F878A28(uint64_t a1)
{
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 1, 1, v1);
}

uint64_t sub_23F878A38(uint64_t a1)
{
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 1, 1, v1);
}

uint64_t sub_23F878A54()
{
  uint64_t *v0;

  return sub_23F6916B8(v0);
}

uint64_t sub_23F878A5C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F878A68()
{
  return sub_23FB2F9F8();
}

uint64_t sub_23F878A84()
{
  return sub_23FB2FA34();
}

uint64_t sub_23F878A8C()
{
  return sub_23FB2FA40();
}

void sub_23F878A94(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
}

uint64_t sub_23F878AA4()
{
  return sub_23FB2FA34();
}

uint64_t sub_23F878AB4()
{
  return sub_23FB2FA94();
}

uint64_t sub_23F878AD4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

void sub_23F878AE4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 68) = 2;
}

void sub_23F878AF0(uint64_t a1@<X8>)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;
  uint64_t v3;

  sub_23F83B7F8(v3, v2 + a1, v1);
}

uint64_t sub_23F878B18(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_23F878B20()
{
  return sub_23FB2FB0C();
}

void sub_23F878B30(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_23F7DCCDC(v3, *(_QWORD *)(v4 - 88), a3);
}

uint64_t sub_23F878B40()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F878B4C()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;

  return sub_23F73515C(v1, v0, v2);
}

uint64_t sub_23F878B5C()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;

  return sub_23F735FE8(v1, v0, v2);
}

uint64_t sub_23F878B6C()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;

  return sub_23F78942C(v1, v0, v2);
}

uint64_t sub_23F878B7C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23F878B84()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 96) + 8))(*(_QWORD *)(v0 - 112), *(_QWORD *)(v0 - 120));
}

uint64_t sub_23F878B94@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v2 + a1);
  result = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *v1 = *v3;
  v1[1] = v5;
  v1[2] = v6;
  return result;
}

void sub_23F878BAC(uint64_t a1@<X8>)
{
  unsigned int v1;
  uint64_t v2;

  *(_QWORD *)(v2 + a1 + 8) = v1;
}

uint64_t sub_23F878BD4()
{
  uint64_t v0;

  return v0;
}

void sub_23F878BE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + *(int *)(v0 + 20)) = *(_QWORD *)(v2 - 88);
}

uint64_t sub_23F878C00()
{
  return sub_23FB2FA4C();
}

uint64_t sub_23F878C10()
{
  return sub_23FB2FA10();
}

uint64_t sub_23F878C30()
{
  return sub_23FB2FCC8();
}

uint64_t sub_23F878C44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 192));
}

void sub_23F878C4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v4 = (_QWORD *)(v2 + *(int *)(v3 + 20));
  *v4 = v1;
  v4[1] = v0;
}

uint64_t sub_23F878C68(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(a1);
}

void sub_23F878C80()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = v0;
  sub_23F6B9FF0();
}

uint64_t sub_23F878C90()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F878C98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v0, v1, v2);
}

void sub_23F878CA8()
{
  StatementID.init(fromExprId:)();
}

uint64_t sub_23F878CB8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  _QWORD *v4;

  v4 = (_QWORD *)(v3 + a3);
  *v4 = result;
  v4[1] = a2;
  return result;
}

__n128 sub_23F878CDC()
{
  uint64_t v0;
  __n128 result;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = *(__n128 *)(v0 - 128);
  v2 = *(_OWORD *)(v0 - 112);
  v3 = *(_QWORD *)(v0 - 96);
  v4 = *(_QWORD *)(v0 - 88);
  v5 = *(_QWORD *)(v0 - 144);
  *(__n128 *)v5 = result;
  *(_OWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 32) = v3;
  *(_QWORD *)(v5 + 40) = v4;
  return result;
}

uint64_t sub_23F878CF4(uint64_t a1)
{
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v1);
}

uint64_t sub_23F878D04@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
  return sub_23FB2FA04();
}

void sub_23F878D14()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = *(_QWORD *)(v1 - 72);
}

void sub_23F878D20(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F7DCCDC(a1, a2, v2);
}

__n128 sub_23F878D28()
{
  uint64_t v0;
  uint64_t v1;
  __n128 result;
  uint64_t v3;

  result = *(__n128 *)(v1 - 176);
  *(_OWORD *)(v1 - 128) = *(_OWORD *)(v1 - 160);
  *(__n128 *)(v1 - 112) = result;
  v3 = *(_QWORD *)(v1 - 184);
  *(_QWORD *)(v1 - 96) = v0;
  *(_QWORD *)(v1 - 88) = v3;
  return result;
}

uint64_t sub_23F878D40()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23F878D70()
{
  return 8236;
}

uint64_t sub_23F878D7C()
{
  return sub_23FB2FC8C();
}

uint64_t sub_23F878D84()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F878DB4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F878DD4()
{
  return type metadata accessor for PreassignedEventID();
}

uint64_t sub_23F878DE4(_QWORD *a1, _QWORD *a2)
{
  uint64_t result;

  result = a2[1];
  *a1 = *a2;
  a1[1] = result;
  return result;
}

void sub_23F878DF4(uint64_t a1@<X8>)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;
  uint64_t v3;

  sub_23F83A800(v2 + a1, v3, v1);
}

uint64_t sub_23F878E04(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23F878E0C()
{
  return sub_23FB2F200();
}

uint64_t sub_23F878E1C()
{
  uint64_t v0;

  return v0;
}

void sub_23F878E28(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_23F840E4C(v3, *(_QWORD *)(v4 - 128), a3);
}

uint64_t sub_23F878E38(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return _s30IntelligenceFlowPlannerSupport20PlatformPnRTelemetryC7startedy10Foundation4UUIDVAA12StartedStateO_0aE7Library0aB11IdentifiersVSgAGtFZfA1__0();
}

uint64_t sub_23F878E48()
{
  return type metadata accessor for Action(0);
}

uint64_t sub_23F878E64(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v4 = (_QWORD *)(v3 + *(int *)(result + 20));
  *v4 = v2;
  v4[1] = v1;
  return result;
}

uint64_t sub_23F878E7C()
{
  return type metadata accessor for ToolResolution(0);
}

uint64_t sub_23F878E84()
{
  return type metadata accessor for ProgramStatement(0);
}

uint64_t sub_23F878E8C()
{
  return type metadata accessor for TypeConversionResult(0);
}

uint64_t sub_23F878E94()
{
  return type metadata accessor for RequestContent.TextContent(0);
}

uint64_t sub_23F878E9C()
{
  return type metadata accessor for Action(0);
}

uint64_t sub_23F878EA4()
{
  return type metadata accessor for ExternalAgentTextQuery(0);
}

uint64_t sub_23F878EAC()
{
  return type metadata accessor for SessionStart(0);
}

uint64_t sub_23F878EB4()
{
  return type metadata accessor for RequestContent.SystemPromptResolution(0);
}

uint64_t sub_23F878EBC()
{
  return type metadata accessor for Session.Transcript(0);
}

uint64_t sub_23F878ED8()
{
  return type metadata accessor for ActionResolverRequest(0);
}

uint64_t sub_23F878EE0()
{
  return type metadata accessor for SpeechRequestCandidate(0);
}

uint64_t sub_23F878EF8()
{
  return type metadata accessor for Request(0);
}

uint64_t sub_23F878F00()
{
  return type metadata accessor for ExternalAgentSpeechQuery(0);
}

uint64_t sub_23F878F08()
{
  uint64_t *v0;

  return sub_23F77D90C(*v0, v0[1]);
}

void sub_23F878F14()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 56);
  *(_QWORD *)(v0 - 64) = *(_QWORD *)(v0 - 64);
  *(_QWORD *)(v0 - 56) = v1;
}

void sub_23F878F34(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v1;
  a1[1] = v2;
}

void sub_23F878F3C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v1 + *(int *)(v0 + 24));
  *v2 = 0;
  v2[1] = 0;
  v2[2] = 0;
}

uint64_t sub_23F878F78(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t sub_23F878F8C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F878F94()
{
  return sub_23FB2F7AC();
}

uint64_t sub_23F878F9C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 128), *(_QWORD *)(v1 - 120));
}

uint64_t sub_23F878FA8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F878FE4()
{
  uint64_t v0;
  uint64_t v1;

  return *(_QWORD *)(v0 + *(int *)(v1 + 40));
}

void sub_23F878FF8(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23F83B990(*(_QWORD *)(v1 + a1));
}

uint64_t sub_23F879004()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 112);
}

uint64_t sub_23F879024()
{
  return sub_23FB2C854();
}

uint64_t sub_23F879038()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F879040()
{
  return sub_23FB2FCC8();
}

uint64_t sub_23F879048(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 128) = result;
  return result;
}

void sub_23F879054()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = v0;
}

uint64_t sub_23F879060()
{
  return sub_23FB2FA04();
}

uint64_t sub_23F87906C()
{
  uint64_t v0;

  return _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v0);
}

void sub_23F879074(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F83A7D4(v2, a2);
}

void sub_23F87907C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F83A7A4(v3, a2, a3);
}

unint64_t sub_23F879084()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 4;
  return sub_23F841158();
}

unint64_t sub_23F879090()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 4;
  return sub_23F83D598();
}

unint64_t sub_23F87909C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 69) = 4;
  return sub_23F83E214();
}

void sub_23F8790A8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 69) = 4;
}

unint64_t sub_23F8790BC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 112) = 4;
  return sub_23F83E55C();
}

uint64_t sub_23F8790C8()
{
  uint64_t v0;

  return v0;
}

void sub_23F8790D4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 3;
}

unint64_t sub_23F8790E0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 3;
  return sub_23F841194();
}

unint64_t sub_23F8790EC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 70) = 3;
  return sub_23F83E250();
}

unint64_t sub_23F8790F8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 3;
  return sub_23F83D5D4();
}

unint64_t sub_23F879104()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 3;
  return sub_23F83DFBC();
}

unint64_t sub_23F879110()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 3;
  return sub_23F83B8A0();
}

unint64_t sub_23F87911C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 3;
  return sub_23F83F7B0();
}

unint64_t sub_23F879128()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 3;
  return sub_23F83DBF4();
}

unint64_t sub_23F879134()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 112) = 3;
  return sub_23F83E5D4();
}

uint64_t sub_23F879140()
{
  uint64_t v0;

  return v0 - 72;
}

uint64_t sub_23F879154()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F879160()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 120);
}

uint64_t sub_23F879174()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F879188()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F87919C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F8791BC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F8791D0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F8791E8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 0;
  return v0 - 65;
}

uint64_t sub_23F8791F4()
{
  uint64_t v0;

  return v0 - 152;
}

void sub_23F87920C()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 152) = 0;
  *(_QWORD *)(v0 - 144) = 0xE000000000000000;
}

uint64_t sub_23F87922C()
{
  uint64_t v0;

  return v0;
}

void sub_23F879254()
{
  _QWORD *v0;

  *v0 = 0;
  v0[1] = 0;
  v0[2] = 0;
}

uint64_t sub_23F879260@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(*(_QWORD *)(a1 - 256) + 20));
}

uint64_t sub_23F879274@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return v1 + *(int *)(*(_QWORD *)(a1 - 256) + 20);
}

uint64_t sub_23F879288()
{
  return sub_23FB2FB18();
}

void sub_23F879294()
{
  RequestContent.SystemPromptResolution.description.getter();
}

uint64_t sub_23F87929C()
{
  return sub_23FB2F8FC();
}

uint64_t sub_23F8792A8()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23F8792D4(uint64_t a1)
{
  return *(_QWORD *)(*(_QWORD *)(a1 - 8) + 32);
}

void sub_23F8792E8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + a1) |= v1;
}

void sub_23F8792FC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F83A7D4(*(_QWORD *)(v2 - 96), a2);
}

uint64_t sub_23F879304()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_23F879318()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 1;
  return sub_23F841288();
}

unint64_t sub_23F879324()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 1;
  return sub_23F83E2C8();
}

unint64_t sub_23F879330()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 1;
  return sub_23F83F994();
}

unint64_t sub_23F87933C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 1;
  return sub_23F83F828();
}

unint64_t sub_23F879348()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 1;
  return sub_23F83DCA8();
}

unint64_t sub_23F879354()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 1;
  return sub_23F83E034();
}

unint64_t sub_23F879360()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 1;
  return sub_23F83B918();
}

void sub_23F87936C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 104) = 1;
}

unint64_t sub_23F879378()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return sub_23F83FFFC();
}

uint64_t sub_23F879384()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return v0 - 66;
}

unint64_t sub_23F879398()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_23F83ED84();
}

unint64_t sub_23F8793A4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_23F841434();
}

unint64_t sub_23F8793B0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_23F83F01C();
}

unint64_t sub_23F8793BC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_23F8402EC();
}

unint64_t sub_23F8793C8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 68) = 1;
  return sub_23F83D64C();
}

void sub_23F8793D4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 82) = 1;
}

unint64_t sub_23F8793E0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 112) = 1;
  return sub_23F83E6C4();
}

uint64_t sub_23F8793EC(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 240) = result;
  return result;
}

uint64_t sub_23F8793F8()
{
  return swift_bridgeObjectRetain();
}

void sub_23F879400(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23F7F6110(*(_QWORD *)(v2 - 88), a2);
}

uint64_t sub_23F879414()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = v0;
  return sub_23FB2FA94();
}

void sub_23F879420()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 144) = v0;
  *(_BYTE *)(v1 - 65) = 0;
}

void sub_23F879440(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23F7F6110(v2, a2);
}

uint64_t sub_23F879448()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F87945C()
{
  return sub_23FB2FA34();
}

uint64_t sub_23F879468()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F879474()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 144), *(_QWORD *)(v1 - 136));
}

void *sub_23F879480(uint64_t a1)
{
  size_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a1;
  return malloc(v1);
}

uint64_t sub_23F87948C()
{
  return swift_willThrow();
}

void sub_23F879494()
{
  JUMPOUT(0x242674058);
}

uint64_t sub_23F87949C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  _QWORD *v4;

  v4 = (_QWORD *)(v3 + a3);
  *v4 = result;
  v4[1] = a2;
  return result;
}

void sub_23F8794B4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F840E4C(a1, *(_QWORD *)(v3 - 88), a3);
}

void sub_23F8794BC(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v4 = (_QWORD *)(v3 + a1);
  *v4 = v2;
  v4[1] = v1;
}

uint64_t sub_23F8794E8()
{
  return 0x7551797469746E65;
}

uint64_t sub_23F87950C()
{
  return sub_23FB2FA34();
}

unint64_t sub_23F879518()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 71) = 2;
  return sub_23F83E28C();
}

unint64_t sub_23F879524()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 2;
  return sub_23F83F8DC();
}

unint64_t sub_23F879530()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 2;
  return sub_23F8411D0();
}

unint64_t sub_23F87953C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 2;
  return sub_23F83D610();
}

unint64_t sub_23F879548()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 2;
  return sub_23F83DC30();
}

unint64_t sub_23F879554()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 2;
  return sub_23F83DFF8();
}

unint64_t sub_23F879560()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 2;
  return sub_23F83F7EC();
}

unint64_t sub_23F87956C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 2;
  return sub_23F83B8DC();
}

void sub_23F879578()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
}

unint64_t sub_23F879584()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_23F83FFC0();
}

unint64_t sub_23F879590()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 112) = 2;
  return sub_23F83E64C();
}

void sub_23F8795B0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F7DCCDC(a1, v3, a3);
}

uint64_t sub_23F8795B8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F8795D0()
{
  return sub_23FB2F8FC();
}

uint64_t sub_23F8795DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 88) = v1;
  *(_QWORD *)(v2 - 144) = a1;
  return 0;
}

uint64_t sub_23F8795F0()
{
  return 0;
}

uint64_t sub_23F879604(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_23F87960C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F879614()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F879620()
{
  return type metadata accessor for Session.Event.Payload(0);
}

unint64_t sub_23F87962C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 7;
  return sub_23F83E0E8();
}

unint64_t sub_23F879638()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 6;
  return sub_23F83E160();
}

unint64_t sub_23F879644()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 5;
  return sub_23F8410A0();
}

unint64_t sub_23F879650()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 68) = 5;
  return sub_23F83E1D8();
}

unint64_t sub_23F87965C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 112) = 5;
  return sub_23F83E4E4();
}

void sub_23F879668()
{
  sub_23F753F14();
}

uint64_t sub_23F879674()
{
  return sub_23FB2FA70();
}

void sub_23F879680(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F83A7D4(v2, a2);
}

uint64_t sub_23F879688()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F8796A8()
{
  return 319;
}

uint64_t sub_23F8796BC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_23F6ADC98(a1, v1);
  return (*(uint64_t (**)(void))(v2 - 96))();
}

uint64_t sub_23F8796F0()
{
  return sub_23FB2FB48();
}

uint64_t sub_23F8796FC()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void sub_23F879704(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F83A7D4(v2, a2);
}

void sub_23F87970C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;

  sub_23F6986A4(v20, v21, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

void sub_23F879718()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_23F6957CC(v0, v1);
}

uint64_t sub_23F879724()
{
  return sub_23FB2FA40();
}

uint64_t sub_23F879738()
{
  return type metadata accessor for StatementResult(0);
}

uint64_t sub_23F879744()
{
  return type metadata accessor for Request(0);
}

uint64_t sub_23F879750()
{
  return type metadata accessor for Candidate(0);
}

uint64_t sub_23F87975C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F879764@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + a1 + 8);
}

uint64_t sub_23F879778()
{
  return 15649;
}

uint64_t sub_23F879784()
{
  return 15676;
}

uint64_t sub_23F879790()
{
  return 15678;
}

void sub_23F8797D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23F7F6110(v2, a2);
}

uint64_t sub_23F8797D8()
{
  uint64_t *v0;

  return sub_23F6916B8(v0);
}

unint64_t sub_23F8797E0()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23F6ADC98(v1, v0);
  return sub_23F83DBB8();
}

unint64_t sub_23F8797FC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F6ADC98(v0, v1);
  return sub_23F83C1C0();
}

uint64_t sub_23F879818()
{
  return sub_23FB2F044();
}

uint64_t sub_23F879834()
{
  return sub_23FB2F8FC();
}

uint64_t sub_23F879840()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F87986C()
{
  return sub_23FB2D0C4();
}

uint64_t sub_23F879878()
{
  return sub_23FB2F8FC();
}

uint64_t sub_23F879884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  *a3 = a1;
  a3[1] = a2;
  *(_BYTE *)(v3 - 69) = 4;
  return v3 - 69;
}

uint64_t _s30IntelligenceFlowPlannerSupport7SessionO4PlanV19DecompositionResultV6prompt7queriesAGSSSg_SaySSGtcfC_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t _s30IntelligenceFlowPlannerSupport21ContextPrewarmRequestV07prewarmG2IdACSS_tcfC_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_23F8798AC()
{
  return sub_23FB2F254();
}

uint64_t sub_23F8798C4()
{
  return sub_23FB2F254();
}

uint64_t sub_23F8798CC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F8798E0()
{
  return sub_23FB2FC5C();
}

uint64_t sub_23F87990C()
{
  return sub_23FB2FC80();
}

uint64_t sub_23F879918(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(int *)(a1 + 20);
  *(_QWORD *)(v2 - 104) = v1;
  return v1 + v3;
}

uint64_t sub_23F87992C()
{
  return type metadata accessor for StatementResult(0);
}

uint64_t sub_23F879938()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F879944()
{
  return sub_23FB2FC74();
}

uint64_t sub_23F879950()
{
  return sub_23FB2FC80();
}

uint64_t sub_23F87995C()
{
  return sub_23FB2FC74();
}

void sub_23F879968(uint64_t a1)
{
  sub_23F8405A4(a1);
}

uint64_t sub_23F879970(uint64_t a1, ...)
{
  uint64_t (*v1)(char *, uint64_t);
  uint64_t v2;
  va_list va;

  va_start(va, a1);
  return v1(va, v2);
}

uint64_t sub_23F87997C()
{
  return sub_23FB2FADC();
}

void sub_23F879984(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_23F840E4C(v3, *(_QWORD *)(v4 - 96), a3);
}

void sub_23F879990(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_23F840E4C(v3, v4, a3);
}

uint64_t sub_23F87999C()
{
  uint64_t v0;
  unint64_t v1;

  return sub_23F6BC34C(v0, v1);
}

uint64_t sub_23F8799A8()
{
  return sub_23FB2FB48();
}

void sub_23F8799B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_23F83A7A4(v3, v4, a3);
}

unint64_t sub_23F8799C0()
{
  return sub_23F83DE88();
}

unint64_t sub_23F8799C8()
{
  return sub_23F732270();
}

unint64_t sub_23F8799D0()
{
  return sub_23F840944();
}

uint64_t sub_23F8799D8()
{
  return sub_23FB2F98C();
}

void sub_23F8799E4(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 152) = a1;
}

uint64_t sub_23F8799F0(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t sub_23F879A18()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t sub_23F879A20()
{
  return type metadata accessor for QueryDecorationPrePlannerResult(0);
}

uint64_t sub_23F879A28()
{
  return type metadata accessor for TextQuery(0);
}

uint64_t sub_23F879A30()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t sub_23F879A38()
{
  return type metadata accessor for ClientEffectInvocation(0);
}

uint64_t sub_23F879A40(uint64_t a1, unint64_t a2)
{
  return ((uint64_t (*)(void))((char *)sub_23F879A64 + 4 * byte_23FB74BC8[a2 >> 62]))();
}

BOOL sub_23F879A64(uint64_t a1, uint64_t a2)
{
  return BYTE6(a2) == 0;
}

uint64_t sub_23F879A8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB04C0);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB04C0);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB89940;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "ENTITY_QUERY";
  *(_QWORD *)(v7 + 8) = 12;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "SIRI_VOCABULARY";
  *(_QWORD *)(v11 + 8) = 15;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "USER_FEEDBACK_LEARNING";
  *((_QWORD *)v13 + 1) = 22;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "MEGADOME_ECR";
  *((_QWORD *)v15 + 1) = 12;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "CONTEXT_REGISTRY";
  *((_QWORD *)v17 + 1) = 16;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "RETURN_VALUE";
  *((_QWORD *)v19 + 1) = 12;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "USER_PROMPT";
  *((_QWORD *)v21 + 1) = 11;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 7;
  *(_QWORD *)v23 = "OMNISEARCH";
  *((_QWORD *)v23 + 1) = 10;
  v23[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoCandidateSource._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0AD8, (uint64_t)qword_256EB04C0, a1);
}

uint64_t sub_23F879D54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB04D8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB04D8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "deviceUnlockRequired";
  *(_QWORD *)(v7 + 8) = 20;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "appLaunchRequired";
  *((_QWORD *)v11 + 1) = 17;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoSystemRequirement._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0AE0, (uint64_t)qword_256EB04D8, a1);
}

uint64_t sub_23F879EC0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_23F924C64();
  v6 = sub_23F6BF1A4(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

