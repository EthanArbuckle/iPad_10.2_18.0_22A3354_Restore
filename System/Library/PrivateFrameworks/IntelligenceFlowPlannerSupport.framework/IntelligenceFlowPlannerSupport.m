uint64_t AssetInfo.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AssetInfo.location.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for AssetInfo() + 20);
  return sub_23F691670(v3, a1);
}

uint64_t type metadata accessor for AssetInfo()
{
  uint64_t result;

  result = qword_256EA1318;
  if (!qword_256EA1318)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F691670(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F6916B8(&qword_256EA12B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F6916B8(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x242674E44]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t AssetInfo.metadata.getter()
{
  type metadata accessor for AssetInfo();
  return swift_bridgeObjectRetain();
}

uint64_t default argument 1 of EntitySpanMatchService.init(matcherRegistry:maxMatchTasks:)()
{
  return 3;
}

uint64_t default argument 2 of ModelCache.getModel<A>(modelType:prewarm:keepAlive:)()
{
  return 0;
}

uint64_t default argument 1 of HandleEndedPayload.init(error:eventIds:)()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t default argument 0 of Session.StatementIdCounter.init(baseStatementIdIndex:)()
{
  return 1;
}

uint64_t default argument 1 of Toolbox.init(toolDatabase:schemaProvider:clientActions:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23FB2EF00();
  result = sub_23FB2EEF4();
  a1[3] = v2;
  a1[4] = (uint64_t)&protocol witness table for AssistantSchemaProvider;
  *a1 = result;
  return result;
}

uint64_t default argument 2 of Toolbox.init(toolDatabase:schemaProvider:clientActions:)()
{
  return MEMORY[0x24BEE4AF8];
}

void default argument 5 of Session.Plan.init(prompt:promptResponse:statements:overrideId:source:program:)(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4AF8];
}

uint64_t default argument 2 of ActionResolverRequest.init(statementId:toolId:resolvedParameters:unresolvedParameterSets:userSpecifiedParameters:isClientAction:isConfirmed:isAuthenticated:)()
{
  type metadata accessor for Candidate(0);
  sub_23F691800();
  return sub_23FB2F050();
}

unint64_t sub_23F691800()
{
  unint64_t result;

  result = qword_256EA12B8;
  if (!qword_256EA12B8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ParameterPath, &type metadata for ParameterPath);
    atomic_store(result, (unint64_t *)&qword_256EA12B8);
  }
  return result;
}

uint64_t default argument 3 of ActionResolverRequest.init(statementId:toolId:resolvedParameters:unresolvedParameterSets:userSpecifiedParameters:isClientAction:isConfirmed:isAuthenticated:)()
{
  return MEMORY[0x24BEE4B08];
}

uint64_t default argument 2 of ActionResolverRequest.init(statementId:toolId:resolvedParameters:unresolvedParameterSets:userSpecifiedParameters:isClientAction:isConfirmed:clientQueryId:isAuthenticated:)()
{
  type metadata accessor for Candidate(0);
  return sub_23FB2F050();
}

uint64_t default argument 3 of ActionResolverRequest.init(statementId:toolId:resolvedParameters:unresolvedParameterSets:userSpecifiedParameters:isClientAction:isConfirmed:clientQueryId:isAuthenticated:)()
{
  return MEMORY[0x24BEE4B08];
}

uint64_t default argument 4 of ActionResolverRequest.init(statementId:toolId:resolvedParameters:unresolvedParameterSets:userSpecifiedParameters:isClientAction:isConfirmed:clientQueryId:isAuthenticated:)()
{
  type metadata accessor for AST.FlatValue(0);
  return sub_23FB2F050();
}

uint64_t *initializeBufferWithCopyOfBuffer for AssetInfo(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FB2C320();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA12B0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v14 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    v15 = *(void **)((char *)a2 + v14);
    *(uint64_t *)((char *)v4 + v14) = (uint64_t)v15;
    swift_bridgeObjectRetain();
    v16 = v15;
  }
  return v4;
}

uint64_t _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

void destroy for AssetInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23FB2C320();
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for AssetInfo(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23FB2C320();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F6916B8(&qword_256EA12B0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v12 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v13 = *(void **)((char *)a2 + v12);
  *(_QWORD *)((char *)a1 + v12) = v13;
  swift_bridgeObjectRetain();
  v14 = v13;
  return a1;
}

_QWORD *assignWithCopy for AssetInfo(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2C320();
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = sub_23F6916B8(&qword_256EA12B0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[7];
  v15 = *(void **)((char *)a1 + v14);
  v16 = *(void **)((char *)a2 + v14);
  *(_QWORD *)((char *)a1 + v14) = v16;
  v17 = v16;

  return a1;
}

_OWORD *initializeWithTake for AssetInfo(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2C320();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA12B0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v11 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  return a1;
}

_QWORD *assignWithTake for AssetInfo(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23FB2C320();
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v10);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    v13 = *(_QWORD *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v14 = sub_23F6916B8(&qword_256EA12B0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  v15 = a3[7];
  v16 = *(void **)((char *)a1 + v15);
  *(_QWORD *)((char *)a1 + v15) = *(_QWORD *)((char *)a2 + v15);

  return a1;
}

uint64_t getEnumTagSinglePayload for AssetInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F691ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23F6916B8(&qword_256EA12B0);
    return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for AssetInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F691F5C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_23F6916B8(&qword_256EA12B0);
    return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_23F691FCC()
{
  unint64_t v0;

  sub_23F69204C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_23F69204C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256EA1328[0])
  {
    sub_23FB2C320();
    v0 = sub_23FB2F65C();
    if (!v1)
      atomic_store(v0, qword_256EA1328);
  }
}

void type metadata accessor for os_unfair_lock_s()
{
  unint64_t ForeignTypeMetadata;
  uint64_t v1;

  if (!qword_256EA1360)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1)
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_256EA1360);
  }
}

uint64_t _s16IntelligenceFlow3ASTO0aB14PlannerSupportE7BuiltinO6SearchV5query24isLowConfidenceKnowledge7pickOneAHSS_S2btcfcfA0__0()
{
  return 0;
}

void sub_23F6920F8()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F693D90();
  v0 = sub_23F7A3534();
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, sel_bundlePath);
    v3 = sub_23FB2F140();
    v5 = v4;

  }
  else
  {
    v3 = 0;
    v5 = 0;
  }
  qword_256EA1550 = v3;
  *(_QWORD *)algn_256EA1558 = v5;
}

uint64_t static AssetsManager.shared.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  if (qword_256EA0950 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_256EA1558;
  *a1 = qword_256EA1550;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void sub_23F6921E0(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  NSObject *v33;
  os_log_type_t v34;
  _DWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v6 = v5;
  v47 = a5;
  v11 = sub_23F693F0C();
  v45 = *(_QWORD *)(v11 - 8);
  v46 = v11;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  v44 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_23F693F04();
  v14 = *(_QWORD *)(v48 - 8);
  sub_23F693E20();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v43 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v49 = (char *)&v43 - v22;
  v23 = *a1;
  if (!a4)
  {
    if (!*(_QWORD *)(v6 + 8))
    {
      sub_23F693EC8();
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v36, v37, v38, v39);
      return;
    }
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  v24 = v49;
  sub_23FB2C2C0();
  swift_bridgeObjectRelease();
  v50 = a2;
  v51 = a3;
  v25 = v24;
  swift_bridgeObjectRetain();
  sub_23FB2F254();
  sub_23FB2C2D8();
  sub_23F693E04();
  v26 = v14;
  v27 = v24;
  v28 = v48;
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v27, v21, v48);
  v29 = v23;
  if ((_DWORD)v23 && (_DWORD)v23 != 5)
  {
    v32 = v44;
    sub_23FB2E3A8();
    v33 = sub_23FB2E7E0();
    v34 = sub_23FB2F608();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (_DWORD *)sub_23F693DF4();
      v52 = sub_23F693DF4();
      *v35 = 136315394;
      sub_23F693E2C();
      __asm { BR              X9 }
    }

    (*(void (**)(char *, uint64_t))(v45 + 8))(v32, v46);
    sub_23F693EC8();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v40, v41, v42, v28);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v25, v28);
  }
  else
  {
    v30 = v47;
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v18, v25, v28);
    sub_23FB2C2D8();
    sub_23F693E04();
    v31 = *(void (**)(char *, uint64_t))(v26 + 8);
    v31(v18, v28);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v30, 0, 1, v28);
    v31(v25, v28);
  }
  sub_23F693DDC();
}

void AssetsManager.sideloadedAsset(for:locale:in:)(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  __int128 *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  unsigned int v34;
  char *v35;
  NSObject *v36;
  int v37;
  _DWORD *v38;
  NSObject *v39;
  os_log_type_t v40;
  _DWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;

  v54 = a5;
  v10 = sub_23F693F0C();
  v52 = *(_QWORD *)(v10 - 8);
  v53 = v10;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F693E0C();
  v47 = v12;
  MEMORY[0x24BDAC7A8](v13);
  v50 = (char *)&v46 - v14;
  sub_23F6916B8(&qword_256EA12B0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F693E0C();
  v48 = v16;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v46 - v18;
  v20 = sub_23F693F04();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  sub_23F693E0C();
  v49 = v22;
  v24 = MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v46 - v25;
  v27 = MEMORY[0x24BDAC7A8](v24);
  v29 = (char *)&v46 - v28;
  v30 = *a1;
  v31 = v27;
  v56 = *v5;
  v51 = v30;
  LOBYTE(v55) = v30;
  sub_23F6921E0((unsigned __int8 *)&v55, a2, a3, a4, (uint64_t)v19);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, v31) == 1)
  {
    sub_23F693B4C((uint64_t)v19, &qword_256EA12B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v29, v19, v31);
    v32 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    sub_23FB2C2FC();
    v33 = (void *)sub_23FB2F134();
    sub_23F693DFC();
    v34 = objc_msgSend(v32, sel_fileExistsAtPath_, v33);

    if (v34)
    {
      v35 = v50;
      sub_23FB2E3A8();
      sub_23F693EDC((uint64_t)v26, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 16));
      v36 = sub_23FB2E7E0();
      v37 = sub_23FB2F608();
      if (os_log_type_enabled(v36, (os_log_type_t)v37))
      {
        LODWORD(v49) = v37;
        v38 = (_DWORD *)sub_23F693DF4();
        v47 = sub_23F693DF4();
        *(_QWORD *)&v56 = v47;
        *v38 = 136315394;
        sub_23F693E2C();
        __asm { BR              X9 }
      }
      sub_23F693EA0();

      (*(void (**)(char *, uint64_t))(v52 + 8))(v35, v53);
      __asm { BR              X9 }
    }
    sub_23FB2E3A8();
    sub_23F693EDC(v49, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 16));
    v39 = sub_23FB2E7E0();
    v40 = sub_23FB2F608();
    if (os_log_type_enabled(v39, v40))
    {
      v50 = v29;
      v41 = (_DWORD *)sub_23F693DF4();
      v48 = sub_23F693DF4();
      *(_QWORD *)&v56 = v48;
      *v41 = 136315394;
      sub_23F693E2C();
      __asm { BR              X9 }
    }

    sub_23F693E90();
    sub_23F693E80();
    ((void (*)(char *, uint64_t))v32)(v29, v31);
  }
  sub_23F693E38();
  sub_23F693EC8();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v42, v43, v44, v45);
  sub_23F693DDC();
}

void AssetsManager.uafAsset(for:set:usages:)(char *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char v11;
  int v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t *v21;
  void *v22;
  id v23;
  uint64_t *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;

  sub_23F693F0C();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6916B8(&qword_256EA12B0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F693EB0();
  v11 = *a1;
  v12 = *a2;
  v13 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  v14 = (void *)sub_23FB2F134();
  swift_bridgeObjectRelease();
  v15 = sub_23F693AD8((uint64_t)v14, a3, v13);

  LOBYTE(v50) = v11;
  static AssetUtils.assetName(for:with:)((uint64_t)&v50);
  v17 = v16;
  v19 = v18;
  if (v15
    && (v20 = v15,
        v21 = a4,
        v22 = (void *)sub_23FB2F134(),
        v23 = objc_msgSend(v20, sel_assetNamed_, v22),
        v20,
        v22,
        v24 = v21,
        v23))
  {
    v25 = swift_bridgeObjectRelease();
    v26 = sub_23F693EFC(v25, sel_name);
    v27 = sub_23FB2F140();
    v29 = v28;

    v31 = sub_23F693EFC(v30, sel_location);
    if (v31)
    {
      v32 = v31;
      sub_23FB2C2E4();

      v33 = sub_23F693F04();
      v34 = 0;
    }
    else
    {
      v33 = sub_23FB2C320();
      v34 = 1;
    }
    v46 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v4, v34, 1, v33);
    v47 = sub_23F693EFC(v46, sel_metadata);
    v48 = sub_23FB2F038();

    *v24 = v27;
    v24[1] = v29;
    v49 = (int *)sub_23F693E38();
    sub_23F69341C(v4, (uint64_t)v24 + v49[5]);
    *(uint64_t *)((char *)v24 + v49[6]) = v48;
    *(uint64_t *)((char *)v24 + v49[7]) = (uint64_t)v15;
    sub_23F693E60();
  }
  else
  {
    sub_23FB2E3A8();
    swift_bridgeObjectRetain();
    v35 = sub_23FB2E7E0();
    v36 = sub_23FB2F608();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = sub_23F693DF4();
      v50 = sub_23F693DF4();
      *(_DWORD *)v37 = 136315394;
      swift_bridgeObjectRetain();
      sub_23F69334C(v17, v19, &v50);
      sub_23F693E70();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v37 + 12) = 2080;
      v38 = 0xD00000000000001ELL;
      v39 = 0x800000023FB305D0;
      if (v12 != 1)
      {
        v38 = 0xD00000000000001CLL;
        v39 = 0x800000023FB305F0;
      }
      if (v12)
        v40 = v38;
      else
        v40 = 0xD000000000000014;
      if (v12)
        v41 = v39;
      else
        v41 = 0x800000023FB305B0;
      sub_23F69334C(v40, v41, &v50);
      sub_23F693E70();
      swift_bridgeObjectRelease();
      sub_23F693E48(&dword_23F68F000, v35, v36, "Asset %s not found in asset set %s", (uint8_t *)v37);
      sub_23F693E40();
      sub_23F693DD0();
    }

    swift_bridgeObjectRelease_n();
    sub_23F693E50();
    sub_23F693E38();
    sub_23F693EC8();
  }
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v42, v43, v44, v45);
  sub_23F693DDC();
}

uint64_t AssetsManager.info(for:locale:in:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  __int128 *v5;
  uint64_t v6;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  __int128 v23;

  sub_23F6916B8(&qword_256EA1568);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F693EB0();
  v13 = *a1;
  v23 = *v5;
  v22 = v13;
  AssetsManager.sideloadedAsset(for:locale:in:)(&v22, a2, a3, a4, v6);
  v14 = sub_23F693E38();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v6, 1, v14) == 1)
  {
    sub_23F693B4C(v6, &qword_256EA1568);
    LOBYTE(v23) = v13;
    v22 = 0x2010100010101uLL >> (8 * v13);
    v21 = v13;
    static AssetUtils.getUsages(for:locale:)((uint64_t)&v21);
    AssetsManager.uafAsset(for:set:usages:)((char *)&v23, &v22, v15, a5);
    return sub_23F693DFC();
  }
  else
  {
    sub_23F693B88(v6, (uint64_t)a5);
    sub_23F693E60();
    return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, v18, v19, v20);
  }
}

uint64_t sub_23F69334C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t ObjectType;

  v6 = sub_23F6934A4(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_23F693D50((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_23F693D50((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v12);
  return v7;
}

uint64_t sub_23F69341C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F6916B8(&qword_256EA12B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_23F693464()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256EA1560;
  if (!qword_256EA1560)
  {
    v1 = sub_23FB2C320();
    result = MEMORY[0x242674E5C](MEMORY[0x24BDCDB28], v1);
    atomic_store(result, (unint64_t *)&qword_256EA1560);
  }
  return result;
}

uint64_t sub_23F6934A4(_QWORD *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_23F6935F8((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_23FB2F68C();
      result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    result = sub_23F6936BC(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    v8 = sub_23FB2F83C();
    if (!v8)
    {
      result = sub_23FB2F938();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

void *sub_23F6935F8(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_23FB2F9B0();
  __break(1u);
  return result;
}

uint64_t sub_23F6936BC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_23F693750(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (uint64_t)sub_23F6938C0(0, *(_QWORD *)(v2 + 16) + 1, 1, v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = (uint64_t)sub_23F6938C0((char *)(v3 > 1), v4 + 1, 1, v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_23F693750(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
  {
    v2 = sub_23FB2F284();
    if (v2)
      goto LABEL_6;
    return MEMORY[0x24BEE4AF8];
  }
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return MEMORY[0x24BEE4AF8];
LABEL_6:
  sub_23F7E4004(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = v3;
    v5 = sub_23FB2F7B8();
    if ((v6 & 1) != 0 || v5 != v2)
      goto LABEL_14;
    return v4;
  }
  sub_23FB2F9B0();
  __break(1u);
LABEL_14:
  result = sub_23FB2F938();
  __break(1u);
  return result;
}

char *sub_23F6938C0(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_23F6916B8(&qword_256EA1570);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_23F693A58(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23F693994(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_23F693994(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_23FB2F9B0();
  __break(1u);
  return result;
}

char *sub_23F693A58(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_23FB2F9B0();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

id sub_23F693AD8(uint64_t a1, uint64_t a2, void *a3)
{
  void *v5;
  id v6;

  v5 = (void *)sub_23FB2F02C();
  v6 = objc_msgSend(a3, sel_retrieveAssetSet_usages_, a1, v5);

  return v6;
}

uint64_t sub_23F693B4C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_23F6916B8(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23F693B88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AssetInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *initializeBufferWithCopyOfBuffer for AssetsManager(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for AssetsManager()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for AssetsManager(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for AssetsManager(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *assignWithTake for AssetsManager(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetsManager(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetsManager(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetsManager()
{
  return &type metadata for AssetsManager;
}

uint64_t _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_23F693D50(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_23F693D90()
{
  unint64_t result;

  result = qword_256EA1578;
  if (!qword_256EA1578)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256EA1578);
  }
  return result;
}

void sub_23F693DD0()
{
  JUMPOUT(0x242674F4CLL);
}

uint64_t sub_23F693DF4()
{
  return swift_slowAlloc();
}

uint64_t sub_23F693DFC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F693E04()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F693E38()
{
  return type metadata accessor for AssetInfo();
}

uint64_t sub_23F693E40()
{
  return swift_arrayDestroy();
}

void sub_23F693E48(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0x16u);
}

uint64_t sub_23F693E50()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 112) + 8))(v0, *(_QWORD *)(v1 - 104));
}

uint64_t sub_23F693E70()
{
  return sub_23FB2F680();
}

uint64_t sub_23F693E80()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 128) + 8))(v0, *(_QWORD *)(v1 - 120));
}

uint64_t sub_23F693E90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23F693EA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_23F693ED4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;

  return sub_23F69334C(a1, v3, a3);
}

uint64_t sub_23F693EDC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t sub_23F693EE8()
{
  return sub_23FB2F680();
}

uint64_t sub_23F693EF0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_23F69334C(a1, a2, (uint64_t *)(v2 - 96));
}

id sub_23F693EFC(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_23F693F04()
{
  return sub_23FB2C320();
}

uint64_t sub_23F693F0C()
{
  return sub_23FB2E7F8();
}

unint64_t AssetFolderName.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD00000000000001DLL;
  if (*v0 != 1)
    v1 = 0xD00000000000001BLL;
  if (*v0)
    return v1;
  else
    return 0xD000000000000011;
}

uint64_t IntelligenceEngineAsset.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23F693FA8 + 4 * byte_23FB46C90[*v0]))(0xD00000000000001ELL, 0x800000023FB30380);
}

uint64_t sub_23F693FA8(uint64_t a1)
{
  return a1 + 14;
}

void static AssetUtils.assetName(for:with:)(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_23F694084(uint64_t a1)
{
  return a1 + 14;
}

unint64_t IntelligenceEngineAssetSet.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD00000000000001ELL;
  if (*v0 != 1)
    v1 = 0xD00000000000001CLL;
  if (*v0)
    return v1;
  else
    return 0xD000000000000014;
}

void static AssetUtils.getUsages(for:locale:)(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23F694228()
{
  __n128 *inited;
  __n128 *v1;
  uint64_t v2;

  sub_23F6916B8(&qword_256EA1580);
  inited = (__n128 *)swift_initStackObject();
  v1 = sub_23F694C58(inited, (__n128)xmmword_23FB47010);
  sub_23F694CB0(v1, v2 + 264);
  swift_bridgeObjectRetain();
  return sub_23FB2F050();
}

IntelligenceFlowPlannerSupport::IntelligenceEngineAsset_optional __swiftcall IntelligenceEngineAsset.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  unint64_t v2;
  char v3;
  IntelligenceFlowPlannerSupport::IntelligenceEngineAsset_optional result;

  sub_23F694C90();
  sub_23F694CF8();
  sub_23F694C78();
  v3 = 8;
  if (v2 < 8)
    v3 = v2;
  *v1 = v3;
  sub_23F694C84();
  return result;
}

void sub_23F694378(char *a1)
{
  sub_23F6BE9E0(*a1);
}

void sub_23F694384()
{
  sub_23F7F6D70();
}

void sub_23F69438C(uint64_t a1)
{
  char *v1;

  sub_23F7F7744(a1, *v1);
}

void sub_23F694394()
{
  sub_23F7F78C8();
}

IntelligenceFlowPlannerSupport::IntelligenceEngineAsset_optional sub_23F69439C(Swift::String *a1)
{
  return IntelligenceEngineAsset.init(rawValue:)(*a1);
}

void sub_23F6943A8(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = IntelligenceEngineAsset.rawValue.getter();
  a1[1] = v2;
  sub_23F694CC8();
}

IntelligenceFlowPlannerSupport::AssetFolderName_optional __swiftcall AssetFolderName.init(rawValue:)(Swift::String rawValue)
{
  IntelligenceFlowPlannerSupport::AssetFolderName_optional result;

  sub_23F69452C();
  return result;
}

void sub_23F6943D4(char *a1, char *a2)
{
  sub_23F6BE39C(*a1, *a2);
}

void sub_23F6943E0()
{
  char *v0;

  sub_23F7F6D7C(*v0);
}

uint64_t sub_23F6943E8(uint64_t a1)
{
  char *v1;

  return sub_23F7F73EC(a1, *v1);
}

void sub_23F6943F0(uint64_t a1)
{
  char *v1;

  sub_23F7F79F8(a1, *v1);
}

IntelligenceFlowPlannerSupport::AssetFolderName_optional sub_23F6943F8(Swift::String *a1)
{
  return AssetFolderName.init(rawValue:)(*a1);
}

void sub_23F694404(unint64_t *a1@<X8>)
{
  unint64_t v2;

  *a1 = AssetFolderName.rawValue.getter();
  a1[1] = v2;
  sub_23F694CC8();
}

IntelligenceFlowPlannerSupport::AssetsUsageKey_optional __swiftcall AssetsUsageKey.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  unint64_t v2;
  char v3;
  IntelligenceFlowPlannerSupport::AssetsUsageKey_optional result;

  sub_23F694C90();
  sub_23F694CF8();
  sub_23F694C78();
  v3 = 5;
  if (v2 < 5)
    v3 = v2;
  *v1 = v3;
  sub_23F694C84();
  return result;
}

uint64_t AssetsUsageKey.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F694498 + 4 * byte_23FB46CA8[*v0]))(0x75676E616C2E6561, 0xEB00000000656761);
}

uint64_t sub_23F694498(uint64_t a1)
{
  return a1 + 264;
}

uint64_t sub_23F6944A0(uint64_t a1)
{
  return a1 + 529;
}

uint64_t sub_23F6944A8(uint64_t a1)
{
  return a1 + 1805;
}

uint64_t sub_23F6944B0()
{
  return 0x73697373612E6C6ELL;
}

void sub_23F6944D0(char *a1)
{
  sub_23F6BE468(*a1);
}

void sub_23F6944DC()
{
  sub_23F7F6D88();
}

void sub_23F6944E4(uint64_t a1)
{
  char *v1;

  sub_23F7F7450(a1, *v1);
}

void sub_23F6944EC()
{
  sub_23F7F79EC();
}

IntelligenceFlowPlannerSupport::AssetsUsageKey_optional sub_23F6944F4(Swift::String *a1)
{
  return AssetsUsageKey.init(rawValue:)(*a1);
}

void sub_23F694500(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = AssetsUsageKey.rawValue.getter();
  a1[1] = v2;
  sub_23F694CC8();
}

IntelligenceFlowPlannerSupport::IntelligenceEngineAssetSet_optional __swiftcall IntelligenceEngineAssetSet.init(rawValue:)(Swift::String rawValue)
{
  IntelligenceFlowPlannerSupport::IntelligenceEngineAssetSet_optional result;

  sub_23F69452C();
  return result;
}

void sub_23F69452C()
{
  char *v0;
  unint64_t v1;
  char v2;

  sub_23F694C90();
  sub_23F694CF8();
  sub_23F694C78();
  v2 = 3;
  if (v1 < 3)
    v2 = v1;
  *v0 = v2;
  sub_23F694C84();
}

void sub_23F694564(char *a1, char *a2)
{
  sub_23F6BE914(*a1, *a2);
}

void sub_23F694570()
{
  char *v0;

  sub_23F7F6D94(*v0);
}

uint64_t sub_23F694578(uint64_t a1)
{
  char *v1;

  return sub_23F7F76E0(a1, *v1);
}

void sub_23F694580(uint64_t a1)
{
  char *v1;

  sub_23F7F78D4(a1, *v1);
}

IntelligenceFlowPlannerSupport::IntelligenceEngineAssetSet_optional sub_23F694588(Swift::String *a1)
{
  return IntelligenceEngineAssetSet.init(rawValue:)(*a1);
}

void sub_23F694594(unint64_t *a1@<X8>)
{
  unint64_t v2;

  *a1 = IntelligenceEngineAssetSet.rawValue.getter();
  a1[1] = v2;
  sub_23F694CC8();
}

uint64_t sub_23F6945B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  char v5;
  uint64_t v6;

  if (!*(_QWORD *)(a3 + 16))
    return 0;
  v4 = sub_23F78C6DC();
  if ((v5 & 1) == 0)
    return 0;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 16 * v4);
  swift_bridgeObjectRetain();
  return v6;
}

unint64_t sub_23F69460C()
{
  unint64_t result;

  result = qword_256EA1588;
  if (!qword_256EA1588)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for IntelligenceEngineAsset, &type metadata for IntelligenceEngineAsset);
    atomic_store(result, (unint64_t *)&qword_256EA1588);
  }
  return result;
}

unint64_t sub_23F69464C()
{
  unint64_t result;

  result = qword_256EA1590;
  if (!qword_256EA1590)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AssetFolderName, &type metadata for AssetFolderName);
    atomic_store(result, (unint64_t *)&qword_256EA1590);
  }
  return result;
}

unint64_t sub_23F69468C()
{
  unint64_t result;

  result = qword_256EA1598;
  if (!qword_256EA1598)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AssetsUsageKey, &type metadata for AssetsUsageKey);
    atomic_store(result, (unint64_t *)&qword_256EA1598);
  }
  return result;
}

unint64_t sub_23F6946CC()
{
  unint64_t result;

  result = qword_256EA15A0;
  if (!qword_256EA15A0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for IntelligenceEngineAssetSet, &type metadata for IntelligenceEngineAssetSet);
    atomic_store(result, (unint64_t *)&qword_256EA15A0);
  }
  return result;
}

_BYTE *initializeBufferWithCopyOfBuffer for IntelligenceEngineAsset(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for IntelligenceEngineAsset(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 7) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v5 = v6 - 8;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for IntelligenceEngineAsset(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_23F6947EC + 4 * byte_23FB46CB2[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_23F694820 + 4 * byte_23FB46CAD[v4]))();
}

uint64_t sub_23F694820(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F694828(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F694830);
  return result;
}

uint64_t sub_23F69483C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F694844);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_23F694848(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F694850(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F69485C(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_23F694868(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

void type metadata accessor for IntelligenceEngineAsset()
{
  sub_23F694C70();
}

void type metadata accessor for AssetFolderName()
{
  sub_23F694C70();
}

uint64_t getEnumTagSinglePayload for AssetsUsageKey(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 4) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v5 = v6 - 5;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetsUsageKey(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23F694964 + 4 * byte_23FB46CBC[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23F694998 + 4 * byte_23FB46CB7[v4]))();
}

uint64_t sub_23F694998(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F6949A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F6949A8);
  return result;
}

uint64_t sub_23F6949B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F6949BCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23F6949C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F6949C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for AssetsUsageKey()
{
  sub_23F694C70();
}

uint64_t _s19InstrumentableEventV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 2) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v5 = v6 - 3;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s30IntelligenceFlowPlannerSupport15AssetFolderNameOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23F694AB4 + 4 * byte_23FB46CC6[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23F694AE8 + 4 * byte_23FB46CC1[v4]))();
}

uint64_t sub_23F694AE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F694AF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F694AF8);
  return result;
}

uint64_t sub_23F694B04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F694B0CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23F694B10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F694B18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for IntelligenceEngineAssetSet()
{
  sub_23F694C70();
}

void type metadata accessor for AssetUtils()
{
  sub_23F694C70();
}

uint64_t sub_23F694B3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (*(_QWORD *)(a3 + 16) && (v4 = sub_23F78C6DC(), (v5 & 1) != 0))
  {
    v6 = v4;
    v7 = *(_QWORD *)(a3 + 56);
    v8 = sub_23FB2C764();
    sub_23F694CA0(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v6, *(_QWORD *)(v8 - 8));
    v9 = sub_23F694CE4();
  }
  else
  {
    sub_23FB2C764();
    v9 = sub_23F694CD0();
  }
  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v9, v10, v11, v12);
}

uint64_t sub_23F694BAC(uint64_t a1, uint64_t a2)
{
  return sub_23F694BD4(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BEB8F30], (uint64_t (*)(void))sub_23F78C904);
}

uint64_t sub_23F694BC0(uint64_t a1, uint64_t a2)
{
  return sub_23F694BD4(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE53330], (uint64_t (*)(void))sub_23F78CA30);
}

uint64_t sub_23F694BD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(void))
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (*(_QWORD *)(a2 + 16) && (v6 = a4(), (v7 & 1) != 0))
  {
    v8 = v6;
    v9 = *(_QWORD *)(a2 + 56);
    v10 = a3(0);
    sub_23F694CA0(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v8, *(_QWORD *)(v10 - 8));
    v11 = sub_23F694CE4();
  }
  else
  {
    a3(0);
    v11 = sub_23F694CD0();
  }
  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v11, v12, v13, v14);
}

__n128 *sub_23F694C58(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

uint64_t sub_23F694C78()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F694CA0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(v2, a1, v3);
}

_QWORD *sub_23F694CB0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  result[4] = a2;
  result[5] = 0xEB00000000656761;
  result[6] = v3;
  result[7] = v2;
  return result;
}

uint64_t sub_23F694CD0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F694CE4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F694CF8()
{
  return sub_23FB2F9E0();
}

uint64_t (*AST.Program.stmts.modify())()
{
  return nullsub_1;
}

uint64_t static AST.Program.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_23F699AA4(*a1, *a2);
}

void sub_23F694D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  char v42;
  char v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  BOOL v49;

  sub_23F6B50E8();
  a19 = v23;
  a20 = v24;
  v25 = sub_23F6B53E0();
  v26 = type metadata accessor for ParameterQuery(v25);
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F6B543C();
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&a9 - v30;
  v32 = *(_QWORD *)(v21 + 16);
  if (v32 == *(_QWORD *)(v20 + 16) && v32 && v21 != v20)
  {
    v33 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    v34 = *(_QWORD *)(v29 + 72);
    while (1)
    {
      sub_23F6B5798(v21 + v33, (uint64_t)v31);
      sub_23F6B5798(v20 + v33, v22);
      sub_23F6B6098();
      if ((_s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0() & 1) == 0)
        break;
      v35 = type metadata accessor for ActionParameterContext(0);
      sub_23F6B6AEC(*(int *)(v35 + 20));
      v38 = v38 && v36 == v37;
      if (!v38 && (sub_23F6B5280() & 1) == 0)
        break;
      sub_23F6B6AEC(*(int *)(v35 + 24));
      v41 = v38 && v39 == v40;
      if (!v41 && (sub_23F6B5280() & 1) == 0)
        break;
      static QueryData.== infix(_:_:)();
      if ((v42 & 1) == 0)
        break;
      sub_23F69AAE8();
      if ((v43 & 1) == 0)
        break;
      v44 = *(int *)(v26 + 28);
      v45 = &v31[v44];
      v46 = *(_QWORD *)&v31[v44 + 8];
      v47 = (_QWORD *)(v22 + v44);
      v48 = v47[1];
      if (v46)
      {
        if (!v48)
          break;
        v49 = *(_QWORD *)v45 == *v47 && v46 == v48;
        if (!v49 && (sub_23F6B5280() & 1) == 0)
          break;
      }
      else if (v48)
      {
        break;
      }
      sub_23F6B54E0();
      sub_23F6B54E0();
      v33 += v34;
      if (!--v32)
        goto LABEL_30;
    }
    sub_23F6B5178();
    sub_23F6B5178();
  }
LABEL_30:
  sub_23F693DDC();
}

void sub_23F694EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  char v36;

  sub_23F6B50E8();
  a19 = v25;
  a20 = v26;
  v27 = sub_23F6B53E0();
  type metadata accessor for VariableSetter(v27);
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F6B543C();
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&a9 - v30;
  sub_23F6B5518();
  if (v33 && v32 && v21 != v20)
  {
    sub_23F6B56C8();
    while (1)
    {
      sub_23F6B5798(v21 + v23, (uint64_t)v31);
      sub_23F6B5798(v20 + v23, v22);
      sub_23F69AAE8();
      if ((v34 & 1) == 0)
        break;
      v35 = sub_23F6B7148();
      sub_23F6B54E0();
      sub_23F6B54E0();
      sub_23F6B64E8();
      if ((v35 & 1) != 0)
      {
        v23 += v24;
        if ((v36 & 1) != 0)
          continue;
      }
      goto LABEL_12;
    }
    sub_23F6B5178();
    sub_23F6B5178();
  }
LABEL_12:
  sub_23F6B626C();
  sub_23F693DDC();
}

void sub_23F694FA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;

  sub_23F6B50E8();
  v6 = v5;
  sub_23F6B5AC8();
  v7 = sub_23FB2D0B8();
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F693EB0();
  sub_23F6916B8(&qword_256EA2780);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B53AC();
  v47 = sub_23F6916B8(&qword_256EA2788);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5208();
  type metadata accessor for ExecutionStepResult(0);
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B5C48();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v38 - v15;
  v17 = *(_QWORD *)(v0 + 16);
  if (v17 == *(_QWORD *)(v6 + 16))
  {
    v42 = v14;
    if (v17)
    {
      if (v0 != v6)
      {
        v46 = v13;
        v39 = v2;
        v40 = v4;
        v41 = v1;
        sub_23F6B71F8();
        v43 = v18;
        v19 = type metadata accessor for ExecutionStepResult;
        v20 = v42;
        v44 = v0;
        v45 = v16;
        while (1)
        {
          sub_23F6B5AC0(v0 + v1, (uint64_t)v16);
          v21 = v6;
          v22 = v19;
          sub_23F6B5AC0(v6 + v1, v20);
          sub_23F6B6F88();
          if ((sub_23FB2C4A0() & 1) == 0)
            break;
          v23 = *(int *)(v46 + 20);
          v24 = &v16[v23];
          v25 = v20 + v23;
          if ((sub_23FB2C800() & 1) == 0)
            break;
          v26 = *(int *)(type metadata accessor for ActionResult(0) + 20);
          v27 = (uint64_t)&v24[v26];
          v28 = v25 + v26;
          v29 = v3 + *(int *)(v47 + 48);
          sub_23F6B6474(v27, v3);
          sub_23F6B6474(v28, v29);
          sub_23F6B5164(v3, 1, v7);
          if (v30)
          {
            sub_23F6B5164(v29, 1, v7);
            if (!v30)
              goto LABEL_17;
            sub_23F6B4F84(v3, &qword_256EA2780);
            v16 = v45;
          }
          else
          {
            sub_23F6B6474(v3, v40);
            sub_23F6B5164(v29, 1, v7);
            if (v30)
            {
              v36 = sub_23F6B61D0();
              v37(v36, v7);
LABEL_17:
              sub_23F6B4F84(v3, &qword_256EA2788);
              break;
            }
            v31 = v41;
            v32 = v39;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 32))(v39, v29, v7);
            sub_23F6B4EEC((uint64_t)&unk_256EA2790);
            sub_23F6B6F88();
            v33 = sub_23F6B5624();
            v34 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
            v34(v32, v7);
            v35 = sub_23F6B6F9C();
            ((void (*)(uint64_t))v34)(v35);
            sub_23F6B4F84(v3, &qword_256EA2780);
            v20 = v42;
            v16 = v45;
            if ((v33 & 1) == 0)
              break;
          }
          v19 = v22;
          sub_23F6B6418();
          sub_23F6B6418();
          v1 += v43;
          --v17;
          v6 = v21;
          v0 = v44;
          if (!v17)
            goto LABEL_19;
        }
        sub_23F6B5178();
        sub_23F6B5178();
      }
    }
  }
LABEL_19:
  sub_23F693DDC();
}

void sub_23F695290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t);
  void (*v67)(uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  sub_23F6B50E8();
  v6 = v5;
  v88 = v7;
  v87 = sub_23FB2D0B8();
  v83 = *(_QWORD *)(v87 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B57BC(v9, v74);
  sub_23F6916B8(&qword_256EA2780);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5268();
  v11 = sub_23F6916B8(&qword_256EA2788);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5C2C();
  v13 = sub_23FB2C4B8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA2798);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B52B0();
  v16 = sub_23F6916B8(&qword_256EA27A0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B5298();
  type metadata accessor for StatementResult(0);
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B5C48();
  v20 = MEMORY[0x24BDAC7A8](v19);
  v24 = *(_QWORD *)(v88 + 16);
  if (v24 != *(_QWORD *)(v6 + 16))
    goto LABEL_41;
  v84 = (char *)&v74 - v22;
  v80 = v0;
  v81 = v16;
  v76 = v1;
  v77 = v2;
  v79 = v14;
  v86 = v4;
  if (!v24 || v88 == v6)
    goto LABEL_41;
  v89 = v20;
  v25 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v74 = *(_QWORD *)(v21 + 72);
  v75 = v6;
  v26 = v24 - 1;
  v27 = v3;
  v78 = v11;
  v28 = v13;
  v29 = v79;
  v30 = v80;
  v31 = v23;
  v32 = (uint64_t)v84;
  while (1)
  {
    v85 = v26;
    sub_23F6B5510(v88 + v25, v32);
    sub_23F6B5510(v6 + v25, v31);
    v33 = v30 + *(int *)(v81 + 48);
    v34 = sub_23F6B6AAC();
    sub_23F6B6264(v34, v35);
    v36 = sub_23F6B5994();
    sub_23F6B6264(v36, v37);
    sub_23F6B5164(v30, 1, v28);
    if (v39)
    {
      sub_23F6B5164(v33, 1, v28);
      if (!v39)
        goto LABEL_36;
      sub_23F6B7188();
    }
    else
    {
      v38 = v77;
      sub_23F6B6264(v30, v77);
      sub_23F6B5164(v33, 1, v28);
      if (v39)
      {
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v38, v28);
LABEL_36:
        v70 = &qword_256EA27A0;
        v71 = v30;
        goto LABEL_39;
      }
      v40 = v76;
      sub_23F6B6B04(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 32));
      sub_23F6B4EEC((uint64_t)&qword_256EA27A8);
      sub_23F6B6ED4();
      v41 = sub_23F6B5D84();
      v42 = v38;
      v43 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
      v44 = v40;
      v30 = v80;
      v43(v44, v28);
      v45 = v42;
      v32 = (uint64_t)v84;
      v43(v45, v28);
      sub_23F6B7188();
      if ((v41 & 1) == 0)
        goto LABEL_40;
    }
    v46 = *(int *)(v89 + 20);
    v47 = (_QWORD *)(v32 + v46);
    v48 = *(_QWORD *)(v32 + v46 + 8);
    v49 = (_QWORD *)(v31 + v46);
    v50 = v49[1];
    if (v48)
    {
      if (!v50)
        goto LABEL_40;
      v51 = *v47 == *v49 && v48 == v50;
      if (!v51 && (sub_23F6B5280() & 1) == 0)
        goto LABEL_40;
    }
    else if (v50)
    {
      goto LABEL_40;
    }
    sub_23F6B6F5C();
    v53 = v32 + v52;
    v54 = v31 + v52;
    if ((sub_23FB2D0D0() & 1) == 0)
      goto LABEL_40;
    v55 = *(int *)(type metadata accessor for StatementResultPayload(0) + 20);
    v56 = v53 + v55;
    v57 = v54 + v55;
    v58 = v27 + *(int *)(v78 + 48);
    sub_23F6B6264(v56, v27);
    sub_23F6B6264(v57, v58);
    v59 = v87;
    sub_23F6B5164(v27, 1, v87);
    if (!v39)
      break;
    sub_23F6B5164(v58, 1, v59);
    if (!v39)
      goto LABEL_38;
    v60 = sub_23F6B6854();
    sub_23F6B4F84(v60, v61);
LABEL_29:
    if ((sub_23F6B63C0() & 1) == 0 || (sub_23F6B63C0() & 1) == 0)
      goto LABEL_40;
    sub_23F6B63C0();
    sub_23F6B6878();
    sub_23F6B5B40();
    sub_23F6B5B40();
    v26 = v85 - 1;
    if ((v58 & 1) != 0)
    {
      v6 = v75;
      v25 += v74;
      if (v85)
        continue;
    }
    goto LABEL_41;
  }
  sub_23F6B6264(v27, v86);
  sub_23F6B5164(v58, 1, v59);
  if (!v62)
  {
    v63 = v82;
    v64 = v83;
    v65 = sub_23F6B6AB8();
    v66(v65);
    sub_23F6B4EEC((uint64_t)&unk_256EA2790);
    LOBYTE(v58) = sub_23F6B5D5C();
    v67 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
    v68 = v63;
    v32 = (uint64_t)v84;
    v67(v68, v59);
    v67(v86, v59);
    v69 = v79;
    sub_23F6B4F84(v27, &qword_256EA2780);
    v29 = v69;
    if ((v58 & 1) == 0)
      goto LABEL_40;
    goto LABEL_29;
  }
  v72 = sub_23F6B640C();
  v73(v72, v59);
LABEL_38:
  v70 = &qword_256EA2788;
  v71 = v27;
LABEL_39:
  sub_23F6B4F84(v71, v70);
LABEL_40:
  sub_23F6B5500();
  sub_23F6B5500();
LABEL_41:
  sub_23F6B5694();
  sub_23F693DDC();
}

void sub_23F69579C()
{
  sub_23F6958A4();
}

void sub_23F6957B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_23F695D6C(a1, a2, (uint64_t)type metadata accessor for ProgramStatement, (uint64_t)MEMORY[0x24BE52120], a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_23F6957CC(_QWORD *a1, _QWORD *a2)
{
  unint64_t v2;
  BOOL v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v8;
  BOOL v9;

  v2 = a1[2];
  if (v2 == a2[2]
    && v2
    && a1 != a2
    && (a1[4] == a2[4] ? (v5 = a1[5] == a2[5]) : (v5 = 0), (v5 || (sub_23F6B5280() & 1) != 0) && v2 != 1))
  {
    v6 = a2 + 7;
    v7 = a1 + 7;
    v8 = 1;
    while (v8 < v2)
    {
      v9 = *(v7 - 1) == *(v6 - 1) && *v7 == *v6;
      if (v9 || (sub_23F6B5280() & 1) != 0)
      {
        ++v8;
        v6 += 2;
        v7 += 2;
        if (v2 != v8)
          continue;
      }
      goto LABEL_18;
    }
    __break(1u);
  }
  else
  {
LABEL_18:
    sub_23F694C84();
  }
}

void sub_23F695888()
{
  sub_23F6958A4();
}

void sub_23F6958A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, unint64_t, uint64_t);
  uint64_t v32;

  sub_23F6B50E8();
  v4 = v3;
  v6 = v5;
  v10 = sub_23F6B5B80(v7, v8, v9);
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B631C();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B62F8();
  sub_23F6B6160();
  if (v15 && v12 && v1 != v0)
  {
    v32 = v13;
    v16 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v29 = *(_QWORD *)(v13 + 72);
    v30 = v1;
    v31 = *(void (**)(uint64_t, unint64_t, uint64_t))(v13 + 16);
    v17 = v12 - 1;
    v18 = v14;
    do
    {
      v31(v2, v1 + v16, v10);
      v19 = v0;
      v31(v18, v0 + v16, v10);
      v20 = v6;
      v21 = v6;
      v22 = v4;
      sub_23F6B4EEC(v21);
      sub_23F6B6224();
      v23 = sub_23F6B5624();
      v24 = *(void (**)(uint64_t))(v32 + 8);
      v25 = sub_23F6B6F9C();
      v24(v25);
      v26 = sub_23F6B69B8();
      v24(v26);
      v28 = v17-- != 0;
      if ((v23 & 1) == 0)
        break;
      v16 += v29;
      v4 = v22;
      v6 = v20;
      v0 = v19;
      v1 = v30;
    }
    while (v28);
  }
  sub_23F693DDC();
}

void sub_23F6959F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_23F695D6C(a1, a2, (uint64_t)type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant, (uint64_t)static TranscriptProtoASTFlatExprUpdateVariant.== infix(_:_:), a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_23F695A0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  char v39;
  int v40;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  sub_23F6B50E8();
  v5 = v4;
  v6 = sub_23F6B5AC8();
  v7 = type metadata accessor for TranscriptProtoStatementID(v6);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B52B0();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA25E8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_23F6B51D0();
  type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter(v11);
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B55D0();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B6B2C();
  v15 = *(_QWORD *)(v0 + 16);
  if (v15 == *(_QWORD *)(v5 + 16) && v15 && v0 != v5)
  {
    v46 = v0;
    v47 = v14;
    v45 = v5;
    sub_23F6B7014();
    v18 = v17 & ~v16;
    v43 = *(_QWORD *)(v19 + 72);
    v44 = v7;
    v21 = v20 - 1;
    while (1)
    {
      sub_23F6B5510(v46 + v18, v3);
      sub_23F6B5510(v5 + v18, v2);
      v22 = *(_QWORD *)v3 == *(_QWORD *)v2 && *(_QWORD *)(v3 + 8) == *(_QWORD *)(v2 + 8);
      if (!v22 && (sub_23F6B5280() & 1) == 0 || *(unsigned __int8 *)(v3 + 16) != *(unsigned __int8 *)(v2 + 16))
        break;
      sub_23F6B6F5C();
      v24 = v2 + v23;
      sub_23F6B5D08();
      sub_23F6B568C(v25, v26);
      sub_23F6B568C(v24, (uint64_t)type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
      v27 = sub_23F6B6468();
      sub_23F6B5164(v27, v28, v7);
      if (v22)
      {
        sub_23F6B5164((uint64_t)type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter, 1, v7);
        if (!v22)
          goto LABEL_38;
        sub_23F6B62DC(v1);
      }
      else
      {
        v29 = sub_23F6B6218();
        sub_23F6B568C(v29, v30);
        sub_23F6B5164((uint64_t)type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter, 1, v7);
        if (v31)
          goto LABEL_37;
        v32 = sub_23F6B689C();
        sub_23F6B4FD0(v32, v33, type metadata accessor for TranscriptProtoStatementID);
        sub_23F6B610C();
        if (!v22)
          goto LABEL_36;
        sub_23F6B6CD8();
        if (v35)
        {
          if (!v34 || ((sub_23F6B60FC(), v22) ? (v38 = v36 == v37) : (v38 = 0), !v38 && (sub_23F6B5280() & 1) == 0))
          {
LABEL_36:
            sub_23F6B6540();
LABEL_37:
            sub_23F6B693C();
LABEL_38:
            sub_23F6B64F4(v1);
            break;
          }
        }
        else if (v34)
        {
          goto LABEL_36;
        }
        v39 = sub_23F6B53A4();
        sub_23F6B4EEC((uint64_t)&qword_256EA2598);
        sub_23F6B6ED4();
        sub_23F6B5624();
        sub_23F6B6860();
        sub_23F6B5684();
        sub_23F6B5684();
        sub_23F6B4F84(v1, &qword_256EA25E0);
        if ((v39 & 1) == 0)
          break;
      }
      v40 = v3 + *(_DWORD *)(v47 + 28);
      sub_23F6B53A4();
      sub_23F6B4EEC((uint64_t)&qword_256EA2598);
      sub_23F6B5D5C();
      sub_23F6B686C();
      sub_23F6B5684();
      sub_23F6B5684();
      v42 = v21-- != 0;
      if ((v40 & 1) != 0)
      {
        v7 = v44;
        v18 += v43;
        v5 = v45;
        if (v42)
          continue;
      }
      goto LABEL_40;
    }
    sub_23F6B5178();
    sub_23F6B5178();
  }
LABEL_40:
  sub_23F6B5694();
  sub_23F693DDC();
}

void sub_23F695D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_23F695D6C(a1, a2, (uint64_t)type metadata accessor for TranscriptProtoStatementResult, (uint64_t)static TranscriptProtoStatementResult.== infix(_:_:), a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_23F695D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(_QWORD);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;

  sub_23F6B50E8();
  a19 = v25;
  a20 = v26;
  sub_23F6B5B80(v27, v28, v29);
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F6B55B4();
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)&a9 - v32;
  sub_23F6B6160();
  if (v35 && v34 && v21 != v20)
  {
    sub_23F6B56C8();
    do
    {
      sub_23F6B5510(v21 + v23, (uint64_t)v33);
      sub_23F6B5510(v20 + v23, v22);
      v36 = sub_23F6B6EE0();
      sub_23F6B5500();
      sub_23F6B5500();
      sub_23F6B64E8();
      if ((v36 & 1) == 0)
        break;
      v23 += v24;
    }
    while ((v37 & 1) != 0);
  }
  sub_23F6B626C();
  sub_23F693DDC();
}

void sub_23F695E2C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  char v38;
  char v39;
  char v40;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  sub_23F6B50E8();
  v4 = v3;
  v6 = v5;
  v7 = type metadata accessor for TranscriptProtoStatementID(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F693EB0();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA25E8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_23F6B51D0();
  type metadata accessor for TranscriptProtoSpeechRequestCandidate(v11);
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B55D0();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B6B2C();
  v15 = *(_QWORD *)(v6 + 16);
  if (v15 == *(_QWORD *)(v4 + 16))
  {
    v46 = v7;
    if (v15)
    {
      if (v6 != v4)
      {
        v47 = v14;
        v45 = v4;
        sub_23F6B7014();
        v18 = v17 & ~v16;
        v43 = *(_QWORD *)(v19 + 72);
        v44 = v6;
        v21 = v20 - 1;
        while (1)
        {
          sub_23F6B5510(v6 + v18, (uint64_t)v2);
          sub_23F6B5510(v4 + v18, (uint64_t)v1);
          v22 = *v2 == *v1 && v2[1] == v1[1];
          if (!v22 && (sub_23F6B5280() & 1) == 0)
            break;
          v23 = (uint64_t)v1 + *(int *)(v47 + 20);
          sub_23F6B5D08();
          sub_23F6B5F8C(v24, v25);
          sub_23F6B5F8C(v23, (uint64_t)type metadata accessor for TranscriptProtoSpeechRequestCandidate);
          v26 = sub_23F6B6468();
          sub_23F6B5164(v26, v27, v46);
          if (v22)
          {
            sub_23F6B5164((uint64_t)type metadata accessor for TranscriptProtoSpeechRequestCandidate, 1, v46);
            if (!v22)
              goto LABEL_37;
            sub_23F6B6884(v0);
          }
          else
          {
            v28 = sub_23F6B6218();
            sub_23F6B58F8(v28, v29);
            sub_23F6B5164((uint64_t)type metadata accessor for TranscriptProtoSpeechRequestCandidate, 1, v46);
            if (v30)
              goto LABEL_36;
            v31 = sub_23F6B689C();
            sub_23F6B4FD0(v31, v32, type metadata accessor for TranscriptProtoStatementID);
            sub_23F6B610C();
            if (!v22)
              goto LABEL_35;
            sub_23F6B6CD8();
            if (v34)
            {
              if (!v33 || ((sub_23F6B60FC(), v22) ? (v37 = v35 == v36) : (v37 = 0), !v37 && (sub_23F6B5280() & 1) == 0))
              {
LABEL_35:
                sub_23F6B6540();
LABEL_36:
                sub_23F6B693C();
LABEL_37:
                sub_23F6B64F4(v0);
                break;
              }
            }
            else if (v33)
            {
              goto LABEL_35;
            }
            v38 = sub_23F6B53A4();
            sub_23F6B4EEC((uint64_t)&qword_256EA2598);
            sub_23F6B5624();
            sub_23F6B6860();
            sub_23F6B5684();
            sub_23F6B5684();
            sub_23F6B4F84(v0, &qword_256EA25E0);
            if ((v38 & 1) == 0)
              break;
          }
          sub_23F6B6F5C();
          v40 = (_BYTE)v2 + v39;
          sub_23F6B53A4();
          sub_23F6B4EEC((uint64_t)&qword_256EA2598);
          sub_23F6B5D5C();
          sub_23F6B686C();
          sub_23F6B5684();
          sub_23F6B5684();
          v42 = v21-- != 0;
          if ((v40 & 1) != 0)
          {
            v6 = v44;
            v18 += v43;
            v4 = v45;
            if (v42)
              continue;
          }
          goto LABEL_39;
        }
        sub_23F6B5178();
        sub_23F6B5178();
      }
    }
  }
LABEL_39:
  sub_23F6B5694();
  sub_23F693DDC();
}

void sub_23F696170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;

  sub_23F6B50E8();
  v4 = v3;
  v5 = sub_23F6B5AC8();
  v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(v5);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA25F0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5268();
  sub_23F6916B8(&qword_256EA25F8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F6B51D0();
  type metadata accessor for TranscriptProtoASTFlatValue(v10);
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B55D0();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5BBC();
  if (!v22)
    goto LABEL_20;
  if (!v13)
    goto LABEL_20;
  sub_23F6B6708();
  if (v22)
    goto LABEL_20;
  sub_23F6B5964(v14);
  while (1)
  {
    v15 = sub_23F6B66EC();
    sub_23F6B5510(v15, v16);
    sub_23F6B5510((uint64_t)v4 + v0, v2);
    v17 = sub_23F6B5E14();
    sub_23F6B58F8(v17, v18);
    sub_23F6B58F8(v2, (uint64_t)type metadata accessor for TranscriptProtoASTFlatValue);
    sub_23F6B5164(v1, 1, v6);
    if (!v22)
      break;
    v19 = sub_23F6B5164((uint64_t)type metadata accessor for TranscriptProtoASTFlatValue, 1, v6);
    if (!v22)
      goto LABEL_18;
    sub_23F6B4F84(v1, &qword_256EA25F0);
LABEL_13:
    v27 = sub_23F6B53A4();
    sub_23F6B4EEC((uint64_t)&qword_256EA2598);
    sub_23F6B5624();
    sub_23F6B686C();
    v4 = type metadata accessor for TranscriptProtoASTFlatValue;
    sub_23F6B53D0();
    sub_23F6B53D0();
    sub_23F6B669C();
    if ((v27 & 1) != 0)
    {
      sub_23F6B668C();
      if ((v28 & 1) != 0)
        continue;
    }
    goto LABEL_20;
  }
  v20 = sub_23F6B6F08();
  sub_23F6B4F58(v20, v21, &qword_256EA25F0);
  sub_23F6B5164((uint64_t)type metadata accessor for TranscriptProtoASTFlatValue, 1, v6);
  if (!v22)
  {
    v23 = sub_23F6B6180();
    sub_23F6B6E24(v23, v24);
    v25 = sub_23F6B6848();
    v26 = static TranscriptProtoAstflatValueEnum.== infix(_:_:)(v25);
    sub_23F6B5B40();
    sub_23F6B5B40();
    sub_23F6B4F84(v1, &qword_256EA25F0);
    if ((v26 & 1) == 0)
      goto LABEL_19;
    goto LABEL_13;
  }
  sub_23F6B6E2C();
LABEL_18:
  sub_23F6B6034(v19, &qword_256EA25F8);
LABEL_19:
  sub_23F6B5178();
  sub_23F6B5178();
LABEL_20:
  sub_23F6B5694();
  sub_23F693DDC();
}

void sub_23F6963CC()
{
  sub_23F6958A4();
}

void sub_23F6963E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_23F695D6C(a1, a2, (uint64_t)type metadata accessor for ContextProtoRetrievedTool, (uint64_t)static ContextProtoRetrievedTool.== infix(_:_:), a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_23F6963FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_23F695D6C(a1, a2, (uint64_t)type metadata accessor for ContextProtoToolRetrievalType, (uint64_t)static ContextProtoToolRetrievalType.== infix(_:_:), a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_23F696410()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  char v50;
  uint64_t v51;
  void (*v52)(uint64_t);
  _QWORD v53[2];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;

  sub_23F6B50E8();
  v7 = v6;
  v9 = v8;
  type metadata accessor for ContextProtoEntityMatch(0);
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B62E4();
  v12 = sub_23FB2EB1C();
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B59E0();
  sub_23F6916B8(&qword_256EA2610);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B5268();
  v64 = sub_23F6916B8(&qword_256EA2618);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v15);
  v65 = (uint64_t)v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for ContextProtoSpanMatchedEntity(0);
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B7254();
  v67 = (uint64_t *)v18;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)v53 - v20;
  v22 = *(_QWORD *)(v9 + 16);
  if (v22 == *(_QWORD *)(v7 + 16) && v22 && v9 != v7)
  {
    v53[1] = v2;
    v54 = v3;
    sub_23F6B72DC();
    v61 = v7 + v24;
    v62 = v9 + v24;
    v60 = *(_QWORD *)(v25 + 72);
    v57 = v4;
    v58 = v12;
    v55 = v26;
    v56 = v5;
    v59 = v21;
    while (1)
    {
      v63 = v23;
      v27 = v60 * v23;
      sub_23F6B5DE8(v62 + v60 * v23, (uint64_t)v21);
      v28 = v61 + v27;
      v29 = (uint64_t)v67;
      sub_23F6B5DE8(v28, (uint64_t)v67);
      v30 = v65;
      v31 = *(int *)(v66 + 20);
      v32 = v29 + v31;
      v33 = v65 + *(int *)(v64 + 48);
      sub_23F6B58F8((uint64_t)&v21[v31], v65);
      sub_23F6B58F8(v32, v33);
      sub_23F6B5164(v30, 1, v12);
      if (v34)
      {
        sub_23F6B5164(v33, 1, v12);
        if (!v34)
          goto LABEL_23;
        sub_23F6B6884(v30);
        v21 = v59;
      }
      else
      {
        sub_23F6B58F8(v30, v5);
        sub_23F6B5164(v33, 1, v12);
        if (v34)
        {
          v51 = sub_23F6B6854();
          v52(v51);
LABEL_23:
          sub_23F6B4F84(v30, &qword_256EA2618);
          goto LABEL_24;
        }
        v35 = v30;
        v36 = v54;
        sub_23F6B5DD4();
        sub_23F6B4EEC((uint64_t)&unk_256EA2620);
        v37 = sub_23FB2F11C();
        v38 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
        v38(v4, v12);
        v39 = sub_23F6B6854();
        ((void (*)(uint64_t))v38)(v39);
        sub_23F6B6884(v35);
        v21 = v59;
        if ((v37 & 1) == 0)
          goto LABEL_24;
      }
      v40 = *(_QWORD *)v21;
      v41 = *v67;
      v42 = *(_QWORD *)(*(_QWORD *)v21 + 16);
      if (v42 != *(_QWORD *)(*v67 + 16))
        goto LABEL_24;
      if (v42 && v40 != v41)
        break;
LABEL_18:
      sub_23F6B53A4();
      sub_23F6B4EEC((uint64_t)&qword_256EA2598);
      v50 = sub_23F6B5624();
      sub_23F6B60A4();
      sub_23F6B60A4();
      if ((v50 & 1) != 0)
      {
        v23 = v63 + 1;
        v5 = v56;
        v4 = v57;
        v12 = v58;
        if (v63 + 1 != v55)
          continue;
      }
      goto LABEL_25;
    }
    sub_23F6B71EC();
    v45 = v44 & ~v43;
    v47 = *(_QWORD *)(v46 + 72);
    while (1)
    {
      sub_23F6B5A28(v40 + v45, v1);
      sub_23F6B5A28(v41 + v45, v0);
      sub_23F6B69FC();
      static ContextProtoEntityMatch.== infix(_:_:)();
      v49 = v48;
      sub_23F6B53D0();
      sub_23F6B53D0();
      if ((v49 & 1) == 0)
        break;
      v45 += v47;
      if (!--v42)
        goto LABEL_18;
    }
LABEL_24:
    sub_23F6B5178();
    sub_23F6B5178();
  }
LABEL_25:
  sub_23F6B5694();
  sub_23F693DDC();
}

void sub_23F6967E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_23F695D6C(a1, a2, (uint64_t)type metadata accessor for TranscriptProtoRetrievedContextStatement, (uint64_t)static TranscriptProtoRetrievedContextStatement.== infix(_:_:), a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_23F6967FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_23F695D6C(a1, a2, (uint64_t)type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement, (uint64_t)static TranscriptProtoDynamicEnumerationEntityStatement.== infix(_:_:), a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_23F696810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t *v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  sub_23F6B50E8();
  v74 = v5;
  v6 = type metadata accessor for TranscriptProtoCandidate(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B5298();
  sub_23F6916B8(&qword_256EA2628);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5208();
  v9 = sub_23F6916B8(&qword_256EA2630);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_23F6B5C2C();
  v12 = type metadata accessor for TranscriptProtoParameter(v11);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v14);
  v15 = sub_23F6B6308();
  type metadata accessor for TranscriptProtoParameterSet(v15);
  sub_23F6B51B8();
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (uint64_t *)((char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = MEMORY[0x24BDAC7A8](v17);
  v23 = *(_QWORD *)(v74 + 16);
  if (v23 == *(_QWORD *)(v22 + 16) && (v68 = (char *)&v58 - v21, v63 = v13, v75 = v12, v71 = v9, v23) && v74 != v22)
  {
    v62 = v20;
    v65 = v0;
    v66 = v2;
    sub_23F6B72DC();
    v27 = v26 + v25;
    v29 = v28 + v25;
    v31 = *(_QWORD *)(v30 + 72);
    v72 = v6;
    v32 = (uint64_t *)v68;
    v64 = v19;
    v60 = v27;
    v61 = v33;
    v58 = v31;
    v59 = v29;
    while (1)
    {
      v67 = v24;
      v34 = v31 * v24;
      sub_23F6B5AE0(v27 + v31 * v24, (uint64_t)v32);
      sub_23F6B5AE0(v29 + v34, (uint64_t)v19);
      v35 = *v32;
      v36 = *v19;
      v73 = v35;
      v37 = *(_QWORD *)(v35 + 16);
      v38 = *(_QWORD *)(v36 + 16);
      v74 = v37;
      v39 = v71;
      if (v37 != v38)
      {
LABEL_35:
        sub_23F6B5178();
        sub_23F6B5178();
        goto LABEL_36;
      }
      if (v74 && v73 != v36)
        break;
LABEL_28:
      v32 = (uint64_t *)v68;
      v19 = v64;
      sub_23F6B53A4();
      sub_23F6B4EEC((uint64_t)&qword_256EA2598);
      v57 = sub_23F6B6060();
      sub_23F6B6418();
      sub_23F6B6418();
      if ((v57 & 1) != 0)
      {
        v24 = v67 + 1;
        v27 = v60;
        v6 = v72;
        v31 = v58;
        v29 = v59;
        if (v67 + 1 != v61)
          continue;
      }
      goto LABEL_36;
    }
    v40 = 0;
    sub_23F6B71EC();
    v43 = v42 & ~v41;
    v69 = *(_QWORD *)(v44 + 72);
    v70 = v36;
    while (1)
    {
      sub_23F6B5510(v73 + v43, v4);
      if (v40 >= *(_QWORD *)(v36 + 16))
        break;
      sub_23F6B5510(v36 + v43, v3);
      v45 = *(_QWORD *)v4 == *(_QWORD *)v3 && *(_QWORD *)(v4 + 8) == *(_QWORD *)(v3 + 8);
      v46 = v75;
      if (!v45 && (sub_23F6B5280() & 1) == 0)
        goto LABEL_34;
      if ((*(_BYTE *)(v4 + 24) & 1) != 0)
      {
        if (!*(_BYTE *)(v3 + 24))
          goto LABEL_34;
      }
      else
      {
        sub_23F6B6FE0();
        if ((v47 & 1) != 0)
          goto LABEL_34;
      }
      v48 = *(int *)(v46 + 24);
      v49 = v3 + v48;
      v50 = v1 + *(int *)(v39 + 48);
      sub_23F6B568C(v4 + v48, v1);
      sub_23F6B5F8C(v49, v50);
      sub_23F6B5164(v1, 1, v6);
      if (v45)
      {
        sub_23F6B5164(v50, 1, v6);
        if (!v45)
          goto LABEL_33;
        sub_23F6B6EF8(v1);
        v36 = v70;
      }
      else
      {
        sub_23F6B5F8C(v1, v66);
        sub_23F6B5164(v50, 1, v6);
        if (v51)
        {
          sub_23F6B4FAC();
LABEL_33:
          sub_23F6B4F84(v1, &qword_256EA2630);
LABEL_34:
          sub_23F6B5178();
          sub_23F6B5178();
          goto LABEL_35;
        }
        sub_23F6B6B14(v50, v65);
        sub_23F6B63F4();
        static TranscriptProtoCandidate.== infix(_:_:)();
        v53 = v52;
        sub_23F6B54E0();
        sub_23F6B54E0();
        v54 = sub_23F6B6098();
        sub_23F6B4F84(v54, v55);
        v36 = v70;
        v39 = v71;
        if ((v53 & 1) == 0)
          goto LABEL_34;
      }
      sub_23F6B53A4();
      sub_23F6B4EEC((uint64_t)&qword_256EA2598);
      v6 = v72;
      v56 = sub_23F6B5624();
      sub_23F6B5684();
      sub_23F6B5684();
      if ((v56 & 1) == 0)
        goto LABEL_35;
      ++v40;
      v43 += v69;
      if (v74 == v40)
        goto LABEL_28;
    }
    __break(1u);
  }
  else
  {
LABEL_36:
    sub_23F6B5694();
    sub_23F693DDC();
  }
}

void sub_23F696CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_23F695D6C(a1, a2, (uint64_t)type metadata accessor for TranscriptProtoParameter, (uint64_t)static TranscriptProtoParameter.== infix(_:_:), a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_23F696CD4()
{
  sub_23F6958A4();
}

void sub_23F696CF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  char v39;
  char v40;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  v8 = sub_23F6B632C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B6B5C();
  sub_23F6916B8(&qword_256EA2610);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5298();
  v11 = sub_23F6916B8(&qword_256EA2618);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23F6B51D0();
  type metadata accessor for TranscriptProtoQueryPredicate(v13);
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B5C64();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v43 - v17;
  v19 = *(_QWORD *)(v7 + 16);
  if (v19 == *(_QWORD *)(v5 + 16))
  {
    v51 = v8;
    v52 = v16;
    v47 = v11;
    if (v19)
    {
      if (v7 != v5)
      {
        v44 = v1;
        v45 = v0;
        v46 = v9;
        sub_23F6B7014();
        v22 = v21 & ~v20;
        v48 = *(_QWORD *)(v23 + 72);
        v49 = v7;
        v25 = v24 - 1;
        v26 = v47;
        v50 = v5;
        while (1)
        {
          sub_23F6B5510(v7 + v22, (uint64_t)v18);
          sub_23F6B5510(v5 + v22, v3);
          v27 = *(_QWORD *)v18 == *(_QWORD *)v3 && *((_QWORD *)v18 + 1) == *(_QWORD *)(v3 + 8);
          v28 = v52;
          if (!v27 && (sub_23F6B5280() & 1) == 0)
            break;
          if (v18[16] != *(_BYTE *)(v3 + 16))
            break;
          v29 = *(int *)(v28 + 24);
          v30 = v3 + v29;
          v31 = v26;
          v32 = v2 + *(int *)(v26 + 48);
          sub_23F6B6A10((uint64_t)&v18[v29], v2);
          sub_23F6B6A10(v30, v32);
          v33 = sub_23F6B6468();
          v34 = v51;
          sub_23F6B5164(v33, v35, v51);
          if (v27)
          {
            v36 = sub_23F6B5164(v32, 1, v34);
            if (!v27)
              goto LABEL_26;
            v37 = sub_23F6B6224();
            sub_23F6B4F84(v37, v38);
            v26 = v31;
          }
          else
          {
            sub_23F6B6474(v2, v45);
            sub_23F6B5164(v32, 1, v34);
            if (v39)
            {
              v36 = sub_23F6B6900(v46);
LABEL_26:
              sub_23F6B6034(v36, &qword_256EA2618);
              break;
            }
            sub_23F6B633C(v44, v32, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 32));
            sub_23F6B4EEC((uint64_t)&qword_256EA2620);
            sub_23F6B6060();
            sub_23F6B63CC();
            sub_23F6B6E70();
            sub_23F6B4F84(v2, &qword_256EA2610);
            v26 = v47;
            if ((v32 & 1) == 0)
              break;
          }
          sub_23F6B53A4();
          sub_23F6B4EEC((uint64_t)&qword_256EA2598);
          v40 = sub_23F6B5624();
          sub_23F6B53D0();
          sub_23F6B53D0();
          v42 = v25-- != 0;
          if ((v40 & 1) != 0)
          {
            v7 = v49;
            v22 += v48;
            v5 = v50;
            if (v42)
              continue;
          }
          goto LABEL_28;
        }
        sub_23F6B5178();
        sub_23F6B5178();
      }
    }
  }
LABEL_28:
  sub_23F6B5694();
  sub_23F693DDC();
}

void sub_23F697008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_23F695D6C(a1, a2, (uint64_t)type metadata accessor for ContextProtoRetrievedContext, (uint64_t)static ContextProtoRetrievedContext.== infix(_:_:), a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_23F69701C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_23F695D6C(a1, a2, (uint64_t)type metadata accessor for ContextProtoDynamicEnumerationEntity, (uint64_t)static ContextProtoDynamicEnumerationEntity.== infix(_:_:), a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_23F697030()
{
  sub_23F6958A4();
}

void sub_23F69704C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Results;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  type metadata accessor for TranscriptProtoCandidate(0);
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F6B62E4();
  Results = type metadata accessor for TranscriptProtoQueryResults(v10);
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B65C4();
  MEMORY[0x24BDAC7A8](v13);
  v15 = *(_QWORD *)(v7 + 16);
  if (v15 == *(_QWORD *)(v5 + 16) && (v41 = (char *)v33 - v14, v15) && v7 != v5)
  {
    v33[1] = v2;
    sub_23F6B6BB0();
    v38 = v5 + v17;
    v39 = v18;
    v37 = *(_QWORD *)(v19 + 72);
    v20 = (uint64_t)v41;
    v35 = Results;
    v36 = v3;
    v34 = v21;
    while (1)
    {
      v40 = v16;
      v22 = v37 * v16;
      sub_23F6B5AC0(v39 + v37 * v16, v20);
      sub_23F6B5AC0(v38 + v22, v3);
      v23 = *(_QWORD *)v20;
      v24 = *(_QWORD *)v3;
      v25 = *(_QWORD *)(*(_QWORD *)v20 + 16);
      if (v25 != *(_QWORD *)(*(_QWORD *)v3 + 16))
      {
LABEL_16:
        sub_23F6B5178();
        sub_23F6B5178();
        goto LABEL_17;
      }
      if (v25 && v23 != v24)
        break;
LABEL_12:
      v3 = v36;
      v20 = (uint64_t)v41;
      sub_23F6B53A4();
      sub_23F6B4EEC((uint64_t)&qword_256EA2598);
      sub_23F6B6ED4();
      v32 = sub_23F6B5624();
      sub_23F6B5B58();
      sub_23F6B5B58();
      if ((v32 & 1) != 0)
      {
        v16 = v40 + 1;
        if (v40 + 1 != v34)
          continue;
      }
      goto LABEL_17;
    }
    v26 = 0;
    sub_23F6B71EC();
    v29 = v28 & ~v27;
    v31 = *(_QWORD *)(v30 + 72);
    while (1)
    {
      sub_23F6B5EDC(v23 + v29, v1);
      if (v26 >= *(_QWORD *)(v24 + 16))
        break;
      sub_23F6B5EDC(v24 + v29, v0);
      sub_23F6B69FC();
      static TranscriptProtoCandidate.== infix(_:_:)();
      sub_23F6B6878();
      sub_23F6B6058();
      sub_23F6B6058();
      if ((v22 & 1) == 0)
        goto LABEL_16;
      ++v26;
      v29 += v31;
      if (v25 == v26)
        goto LABEL_12;
    }
    __break(1u);
  }
  else
  {
LABEL_17:
    sub_23F6B5694();
    sub_23F693DDC();
  }
}

void sub_23F697284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_23F695D6C(a1, a2, (uint64_t)type metadata accessor for TranscriptProtoCandidate, (uint64_t)static TranscriptProtoCandidate.== infix(_:_:), a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_23F697298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_23F695D6C(a1, a2, (uint64_t)type metadata accessor for TranscriptProtoResponseParameter, (uint64_t)static TranscriptProtoResponseParameter.== infix(_:_:), a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_23F6972AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_23F695D6C(a1, a2, (uint64_t)type metadata accessor for TranscriptProtoInterpretedStatementResult, (uint64_t)static TranscriptProtoInterpretedStatementResult.== infix(_:_:), a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_23F6972C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;

  sub_23F6B50E8();
  v4 = v3;
  v5 = sub_23F6B5AC8();
  v6 = type metadata accessor for TranscriptProtoUitype(v5);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA2650);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5268();
  sub_23F6916B8(&qword_256EA2658);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F6B51D0();
  type metadata accessor for TranscriptProtoUIType(v10);
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B55D0();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5BBC();
  if (!v22)
    goto LABEL_20;
  if (!v13)
    goto LABEL_20;
  sub_23F6B6708();
  if (v22)
    goto LABEL_20;
  sub_23F6B5964(v14);
  while (1)
  {
    v15 = sub_23F6B66EC();
    sub_23F6B5510(v15, v16);
    sub_23F6B5510((uint64_t)v4 + v0, v2);
    v17 = sub_23F6B5E14();
    sub_23F6B58F8(v17, v18);
    sub_23F6B58F8(v2, (uint64_t)type metadata accessor for TranscriptProtoUIType);
    sub_23F6B5164(v1, 1, v6);
    if (!v22)
      break;
    v19 = sub_23F6B5164((uint64_t)type metadata accessor for TranscriptProtoUIType, 1, v6);
    if (!v22)
      goto LABEL_18;
    sub_23F6B4F84(v1, &qword_256EA2650);
LABEL_13:
    v27 = sub_23F6B53A4();
    sub_23F6B4EEC((uint64_t)&qword_256EA2598);
    sub_23F6B5624();
    sub_23F6B686C();
    v4 = type metadata accessor for TranscriptProtoUIType;
    sub_23F6B53D0();
    sub_23F6B53D0();
    sub_23F6B669C();
    if ((v27 & 1) != 0)
    {
      sub_23F6B668C();
      if ((v28 & 1) != 0)
        continue;
    }
    goto LABEL_20;
  }
  v20 = sub_23F6B6F08();
  sub_23F6B4F58(v20, v21, &qword_256EA2650);
  sub_23F6B5164((uint64_t)type metadata accessor for TranscriptProtoUIType, 1, v6);
  if (!v22)
  {
    v23 = sub_23F6B6180();
    sub_23F6B6E24(v23, v24);
    sub_23F6B6848();
    static TranscriptProtoUitype.== infix(_:_:)();
    v26 = v25;
    sub_23F6B5B40();
    sub_23F6B5B40();
    sub_23F6B4F84(v1, &qword_256EA2650);
    if ((v26 & 1) == 0)
      goto LABEL_19;
    goto LABEL_13;
  }
  sub_23F6B6E2C();
LABEL_18:
  sub_23F6B6034(v19, &qword_256EA2658);
LABEL_19:
  sub_23F6B5178();
  sub_23F6B5178();
LABEL_20:
  sub_23F6B5694();
  sub_23F693DDC();
}

void sub_23F69751C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  BOOL v34;
  BOOL v35;
  char v36;
  BOOL v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  type metadata accessor for TranscriptProtoUIConfirmationLabel(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F693E0C();
  v44 = v9;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B6580();
  v52 = v11;
  v46 = sub_23F6916B8(&qword_256EA2638);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5810(v13, v41);
  v14 = type metadata accessor for TranscriptProtoLabel(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B5420(v16, v42);
  sub_23F6916B8(&qword_256EA2640);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F693EB0();
  v49 = sub_23F6916B8(&qword_256EA2648);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v18);
  v19 = sub_23F6B51D0();
  type metadata accessor for TranscriptProtoUILabel(v19);
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B65A8();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B6B4C();
  v50 = v7;
  v51 = v5;
  sub_23F6B5E3C();
  if (!v32 || !v22 || v7 == v5)
    goto LABEL_33;
  v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v25 = *(_QWORD *)(v23 + 72);
  v26 = v22 - 1;
  v47 = v14;
  v43 = v0;
  while (1)
  {
    sub_23F6B5A28(v50 + v24, v1);
    sub_23F6B5A28(v51 + v24, v0);
    v27 = v3 + *(int *)(v49 + 48);
    sub_23F6B58F8(v1, v3);
    v28 = sub_23F6B5994();
    sub_23F6B58F8(v28, v29);
    v30 = sub_23F6B6468();
    sub_23F6B5164(v30, v31, v14);
    if (!v32)
      break;
    sub_23F6B5164(v27, 1, v14);
    if (!v32)
      goto LABEL_32;
LABEL_23:
    sub_23F6B6884(v3);
    sub_23F6B53A4();
    sub_23F6B4EEC((uint64_t)&qword_256EA2598);
    sub_23F6B63E8();
    v36 = sub_23F6B5D5C();
    sub_23F6B53D0();
    sub_23F6B53D0();
    v38 = v26-- != 0;
    if ((v36 & 1) != 0)
    {
      v24 += v25;
      v14 = v47;
      if (v38)
        continue;
    }
    goto LABEL_33;
  }
  sub_23F6B58F8(v3, v2);
  sub_23F6B5164(v27, 1, v14);
  if (v32)
    goto LABEL_31;
  sub_23F6B625C(v27, v48);
  v33 = v45 + *(int *)(v46 + 48);
  sub_23F6B5AB8(v2, v45);
  sub_23F6B5AB8(v48, v33);
  sub_23F6B625C(v45, (uint64_t)v52);
  sub_23F6B625C(v33, (uint64_t)v44);
  v34 = *v52 == *v44 && v52[1] == v44[1];
  if (v34 || (sub_23F6B5280() & 1) != 0)
  {
    v35 = v52[2] == v44[2] && v52[3] == v44[3];
    if (v35 || (sub_23F6B5280() & 1) != 0)
    {
      sub_23F6B53A4();
      sub_23F6B4EEC((uint64_t)&qword_256EA2598);
      if ((sub_23F6B5624() & 1) != 0)
      {
        sub_23F6B5178();
        sub_23F6B5178();
        sub_23F6B5178();
        sub_23F6B5178();
        v0 = v43;
        goto LABEL_23;
      }
    }
  }
  sub_23F6B5500();
  sub_23F6B5500();
  sub_23F6B4FAC();
LABEL_31:
  sub_23F6B4FAC();
LABEL_32:
  v39 = sub_23F6B69B8();
  sub_23F6B4F84(v39, v40);
  sub_23F6B5500();
  sub_23F6B5500();
LABEL_33:
  sub_23F6B5694();
  sub_23F693DDC();
}

void sub_23F69795C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;

  sub_23F6B50E8();
  v4 = v3;
  v5 = sub_23F6B5AC8();
  v6 = type metadata accessor for TranscriptProtoVisualOutputType(v5);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA2660);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5268();
  sub_23F6916B8(&qword_256EA2668);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F6B51D0();
  type metadata accessor for TranscriptProtoVisualOutput(v10);
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B55D0();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5BBC();
  if (!v22)
    goto LABEL_20;
  if (!v13)
    goto LABEL_20;
  sub_23F6B6708();
  if (v22)
    goto LABEL_20;
  sub_23F6B5964(v14);
  while (1)
  {
    v15 = sub_23F6B66EC();
    sub_23F6B5510(v15, v16);
    sub_23F6B5510((uint64_t)v4 + v0, v2);
    v17 = sub_23F6B5E14();
    sub_23F6B58F8(v17, v18);
    sub_23F6B58F8(v2, (uint64_t)type metadata accessor for TranscriptProtoVisualOutput);
    sub_23F6B5164(v1, 1, v6);
    if (!v22)
      break;
    v19 = sub_23F6B5164((uint64_t)type metadata accessor for TranscriptProtoVisualOutput, 1, v6);
    if (!v22)
      goto LABEL_18;
    sub_23F6B4F84(v1, &qword_256EA2660);
LABEL_13:
    v27 = sub_23F6B53A4();
    sub_23F6B4EEC((uint64_t)&qword_256EA2598);
    sub_23F6B5624();
    sub_23F6B686C();
    v4 = type metadata accessor for TranscriptProtoVisualOutput;
    sub_23F6B53D0();
    sub_23F6B53D0();
    sub_23F6B669C();
    if ((v27 & 1) != 0)
    {
      sub_23F6B668C();
      if ((v28 & 1) != 0)
        continue;
    }
    goto LABEL_20;
  }
  v20 = sub_23F6B6F08();
  sub_23F6B4F58(v20, v21, &qword_256EA2660);
  sub_23F6B5164((uint64_t)type metadata accessor for TranscriptProtoVisualOutput, 1, v6);
  if (!v22)
  {
    v23 = sub_23F6B6180();
    sub_23F6B6E24(v23, v24);
    sub_23F6B6848();
    static TranscriptProtoVisualOutputType.== infix(_:_:)();
    v26 = v25;
    sub_23F6B5B40();
    sub_23F6B5B40();
    sub_23F6B4F84(v1, &qword_256EA2660);
    if ((v26 & 1) == 0)
      goto LABEL_19;
    goto LABEL_13;
  }
  sub_23F6B6E2C();
LABEL_18:
  sub_23F6B6034(v19, &qword_256EA2668);
LABEL_19:
  sub_23F6B5178();
  sub_23F6B5178();
LABEL_20:
  sub_23F6B5694();
  sub_23F693DDC();
}

void sub_23F697BB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  _QWORD v17[2];

  sub_23F6B50E8();
  v3 = v2;
  v5 = v4;
  v17[1] = type metadata accessor for TranscriptProtoStatementID(0);
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B55B4();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v17 - v8;
  v10 = *(_QWORD *)(v5 + 16);
  if (v10 == *(_QWORD *)(v3 + 16) && v10 && v5 != v3)
  {
    sub_23F6B71F8();
    v17[0] = v11;
    while (1)
    {
      sub_23F6B5AC0(v5 + v0, (uint64_t)v9);
      sub_23F6B5AC0(v3 + v0, v1);
      sub_23F6B610C();
      if (!v16)
        break;
      sub_23F6B6CD8();
      if (v13)
      {
        if (!v12)
          break;
        sub_23F6B60FC();
        v16 = v16 && v14 == v15;
        if (!v16 && (sub_23F6B5280() & 1) == 0)
          break;
      }
      else if (v12)
      {
        break;
      }
      sub_23F6B6F5C();
      sub_23F6B53A4();
      sub_23F6B4EEC((uint64_t)&qword_256EA2598);
      if ((sub_23F6B5624() & 1) == 0)
        break;
      sub_23F6B5B58();
      sub_23F6B5B58();
      v0 += v17[0];
      if (!--v10)
        goto LABEL_20;
    }
    sub_23F6B5178();
    sub_23F6B5178();
  }
LABEL_20:
  sub_23F693DDC();
}

void sub_23F697D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_23F695D6C(a1, a2, (uint64_t)type metadata accessor for ContextProtoEntityMatch, (uint64_t)static ContextProtoEntityMatch.== infix(_:_:), a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_23F697D2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  v8 = sub_23F6B632C();
  v34 = *(_QWORD *)(v8 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B537C(v10, v31);
  sub_23F6916B8(&qword_256EA2610);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B5298();
  v36 = sub_23F6916B8(&qword_256EA2618);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23F6B51D0();
  v35 = type metadata accessor for TranscriptProtoVariableSetter(v13);
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B5C64();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v31 - v16;
  v37 = v7;
  v38 = v5;
  sub_23F6B5E3C();
  if (!v27 || !v18 || v37 == v38)
    goto LABEL_24;
  sub_23F6B7034();
  v31 = v0;
  v32 = v19;
  v21 = v20 - 1;
  v22 = v35;
  while (1)
  {
    sub_23F6B5A28(v37 + v1, (uint64_t)v17);
    sub_23F6B5A28(v38 + v1, v3);
    v23 = v3 + *(int *)(v22 + 20);
    sub_23F6B5D08();
    sub_23F6B568C(v24, v25);
    sub_23F6B568C(v23, v5);
    sub_23F6B5164(v2, 1, v8);
    if (!v27)
      break;
    v26 = sub_23F6B5164(v5, 1, v8);
    if (!v27)
      goto LABEL_22;
    sub_23F6B62DC(v2);
LABEL_13:
    sub_23F69C368();
    if ((v28 & 1) == 0)
      goto LABEL_23;
    sub_23F6B53A4();
    sub_23F6B4EEC((uint64_t)&qword_256EA2598);
    v5 = sub_23F6B5624();
    sub_23F6B53D0();
    sub_23F6B53D0();
    v30 = v21-- != 0;
    if ((v5 & 1) != 0)
    {
      v1 += v32;
      if (v30)
        continue;
    }
    goto LABEL_24;
  }
  sub_23F6B568C(v2, v31);
  sub_23F6B5164(v5, 1, v8);
  if (!v27)
  {
    sub_23F6B633C(v33, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 32));
    sub_23F6B4EEC((uint64_t)&qword_256EA2620);
    sub_23F6B6060();
    sub_23F6B63CC();
    sub_23F6B6E70();
    sub_23F6B4F84(v2, &qword_256EA2610);
    v22 = v35;
    if ((v5 & 1) == 0)
      goto LABEL_23;
    goto LABEL_13;
  }
  v26 = sub_23F6B6900(v34);
LABEL_22:
  sub_23F6B6034(v26, &qword_256EA2618);
LABEL_23:
  sub_23F6B5178();
  sub_23F6B5178();
LABEL_24:
  sub_23F6B5694();
  sub_23F693DDC();
}

void sub_23F697FF4()
{
  unint64_t *v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t *v55;

  sub_23F6B50E8();
  v7 = v6;
  v9 = v8;
  type metadata accessor for TranscriptProtoASTForInStmt(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B631C();
  v13 = v11 - v12;
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B62F8();
  type metadata accessor for TranscriptProtoASTIfStmt(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B6B3C();
  v17 = sub_23F6B6B74();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B6618();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F6B5F6C();
  type metadata accessor for TranscriptProtoASTStmt(0);
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5C48();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B6B4C();
  v24 = *(_QWORD *)(v9 + 16);
  if (v24 != *(_QWORD *)(v7 + 16))
    goto LABEL_32;
  v55 = v23;
  if (!v24 || v9 == v7)
    goto LABEL_32;
  v49 = v4;
  v47 = v3;
  v48 = v13;
  v51 = v2;
  v50 = v1;
  v25 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v53 = *(_QWORD *)(v22 + 72);
  v52 = v7;
  v54 = v9;
  v26 = v23;
  while (1)
  {
    sub_23F6B5A28(v9 + v25, (uint64_t)v0);
    sub_23F6B5A28(v7 + v25, (uint64_t)v26);
    v27 = *v0;
    v28 = *v26;
    v29 = v28 & 0xF000000000000007;
    if ((~*v0 & 0xF000000000000007) == 0)
    {
      if (v29 != 0xF000000000000007)
        goto LABEL_28;
      goto LABEL_24;
    }
    if (v29 == 0xF000000000000007)
    {
LABEL_28:
      sub_23F6B5A98();
      sub_23F6B4E2C(v27);
      v46 = v28;
      goto LABEL_29;
    }
    v30 = v28 >> 62;
    if (v27 >> 62)
      break;
    if (v30)
      goto LABEL_30;
    v34 = swift_projectBox();
    v35 = swift_projectBox();
    sub_23F6B5DE8(v34, (uint64_t)v51);
    sub_23F6B5DE8(v35, (uint64_t)v50);
    sub_23F6B4E14(v27);
    v36 = *v50;
    if ((~*v51 & 0xF000000000000007) != 0)
    {
      if ((~v36 & 0xF000000000000007) == 0)
      {
        sub_23F6B5E8C();
        sub_23F6B677C();
        swift_release();
LABEL_34:
        sub_23F6B6A28();
LABEL_35:
        sub_23F6B5500();
        sub_23F6B5500();
        swift_release();
        sub_23F6B6E08();
        sub_23F6B4E2C(v27);
        v46 = v27;
LABEL_29:
        sub_23F6B4E2C(v46);
        goto LABEL_31;
      }
      sub_23F6B5E8C();
      sub_23F6B5FA4();
      v42 = v41;
      swift_release();
      sub_23F6B68B4();
      if ((v42 & 1) == 0)
        goto LABEL_35;
    }
    else
    {
      sub_23F6B4E14(v27);
      sub_23F6B5A98();
      if ((~v36 & 0xF000000000000007) != 0)
        goto LABEL_34;
    }
    v43 = (_BYTE)v51 + *(_DWORD *)(v17 + 20);
    sub_23F6B53A4();
    sub_23F6B4EEC((uint64_t)&qword_256EA2598);
    sub_23F6B5D44();
    sub_23F6B6878();
    sub_23F6B60A4();
    sub_23F6B60A4();
    swift_release();
    sub_23F6B6E08();
    sub_23F6B6434();
    v7 = v52;
    if ((v43 & 1) == 0)
      goto LABEL_31;
LABEL_24:
    v26 = v55;
    sub_23F6B53A4();
    sub_23F6B4EEC((uint64_t)&qword_256EA2598);
    v44 = sub_23F6B5D44();
    sub_23F6B53D0();
    sub_23F6B53D0();
    sub_23F6B64E8();
    if ((v44 & 1) != 0)
    {
      v9 = v54;
      v25 += v53;
      if ((v45 & 1) != 0)
        continue;
    }
    goto LABEL_32;
  }
  if (v27 >> 62 == 1)
  {
    if (v30 != 1)
      goto LABEL_30;
    v31 = swift_projectBox();
    v32 = swift_projectBox();
    sub_23F6B5AB8(v31, v5);
    sub_23F6B5AB8(v32, v49);
    sub_23F6B4E14(v27);
    sub_23F6B4E14(v27);
    sub_23F6B5A98();
    sub_23F6B689C();
    static TranscriptProtoASTIfStmt.== infix(_:_:)();
    LOBYTE(v31) = v33;
    sub_23F6B5178();
    sub_23F6B5178();
    v7 = v52;
    swift_release();
    swift_release();
    sub_23F6B6434();
    if ((v31 & 1) == 0)
      goto LABEL_31;
    goto LABEL_24;
  }
  if (v30 == 2)
  {
    v37 = swift_projectBox();
    v38 = swift_projectBox();
    sub_23F6B5AB8(v37, v47);
    v39 = v38;
    v7 = v52;
    sub_23F6B5AB8(v39, v48);
    sub_23F6B4E14(v27);
    sub_23F6B4E14(v27);
    sub_23F6B5A98();
    sub_23F6B6AB8();
    static TranscriptProtoASTForInStmt.== infix(_:_:)();
    LOBYTE(v37) = v40;
    sub_23F6B5178();
    sub_23F6B5178();
    swift_release();
    swift_release();
    sub_23F6B6434();
    if ((v37 & 1) == 0)
      goto LABEL_31;
    goto LABEL_24;
  }
LABEL_30:
  sub_23F6B5A98();
  sub_23F6B6E08();
  swift_release();
LABEL_31:
  sub_23F6B5500();
  sub_23F6B5500();
LABEL_32:
  sub_23F6B5694();
  sub_23F693DDC();
}

void sub_23F698510()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  char v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  uint64_t v18;
  uint64_t v19;

  sub_23F6B50E8();
  v3 = v2;
  v5 = v4;
  type metadata accessor for ContextProtoSampleInvocation(0);
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B55B4();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v18 - v8;
  v10 = *(_QWORD *)(v5 + 16);
  if (v10 == *(_QWORD *)(v3 + 16) && v10 && v5 != v3)
  {
    sub_23F6B6A94();
    v12 = v11 - 1;
    while (1)
    {
      sub_23F6B5AC0(v5 + v1, (uint64_t)v9);
      sub_23F6B5AC0(v3 + v1, v0);
      v13 = *(_QWORD *)v9 == *(_QWORD *)v0 && *((_QWORD *)v9 + 1) == *(_QWORD *)(v0 + 8);
      if (!v13 && (sub_23F6B5280() & 1) == 0 || *((float *)v9 + 4) != *(float *)(v0 + 16))
        break;
      v19 = v12;
      v14 = sub_23F6B53A4();
      sub_23F6B4EEC((uint64_t)&qword_256EA2598);
      sub_23F6B6854();
      v15 = v19;
      sub_23F6B5624();
      sub_23F6B6860();
      sub_23F6B5B58();
      sub_23F6B5B58();
      v16 = v15 != 0;
      v12 = v15 - 1;
      v17 = v16;
      if ((v14 & 1) != 0)
      {
        v1 += v18;
        if ((v17 & 1) != 0)
          continue;
      }
      goto LABEL_19;
    }
    sub_23F6B5178();
    sub_23F6B5178();
  }
LABEL_19:
  sub_23F6B5694();
  sub_23F693DDC();
}

void sub_23F698690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_23F695D6C(a1, a2, (uint64_t)type metadata accessor for TranscriptProtoParameterQuery, (uint64_t)static TranscriptProtoParameterQuery.== infix(_:_:), a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_23F6986A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  char v36;
  char v37;

  sub_23F6B50E8();
  a19 = v25;
  a20 = v26;
  v27 = sub_23F6B53E0();
  type metadata accessor for SpeechRequestCandidate(v27);
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F6B543C();
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&a9 - v30;
  sub_23F6B5518();
  if (v35 && v32 && v21 != v20)
  {
    sub_23F6B56C8();
    while (1)
    {
      sub_23F6B5798(v21 + v23, (uint64_t)v31);
      sub_23F6B5798(v20 + v23, v22);
      sub_23F6B6754();
      v35 = v35 && v33 == v34;
      if (!v35 && (sub_23F6B5280() & 1) == 0)
        break;
      v36 = sub_23F6B6534();
      sub_23F6B54E0();
      sub_23F6B54E0();
      sub_23F6B64E8();
      if ((v36 & 1) != 0)
      {
        v23 += v24;
        if ((v37 & 1) != 0)
          continue;
      }
      goto LABEL_16;
    }
    sub_23F6B5178();
    sub_23F6B5178();
  }
LABEL_16:
  sub_23F6B626C();
  sub_23F693DDC();
}

void sub_23F69879C()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  BOOL v18;
  uint64_t v19;

  sub_23F6B50E8();
  v4 = v3;
  v6 = v5;
  sub_23F6B6B74();
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B65A8();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B6B4C();
  v9 = *(_QWORD *)(v6 + 16);
  if (v9 != *(_QWORD *)(v4 + 16) || !v9 || v6 == v4)
    goto LABEL_20;
  sub_23F6B7020();
  v19 = v10;
  v12 = v11 - 1;
  while (1)
  {
    sub_23F6B5EDC(v6 + v2, (uint64_t)v1);
    sub_23F6B5EDC(v4 + v2, (uint64_t)v0);
    v13 = *v0;
    if ((~*v1 & 0xF000000000000007) != 0)
      break;
    if ((~v13 & 0xF000000000000007) != 0)
      goto LABEL_18;
LABEL_10:
    v16 = sub_23F6B53A4();
    sub_23F6B4EEC((uint64_t)&qword_256EA2598);
    sub_23F6B5624();
    sub_23F6B6878();
    sub_23F6B6058();
    sub_23F6B6058();
    v18 = v12-- != 0;
    if ((v16 & 1) != 0)
    {
      v2 += v19;
      if (v18)
        continue;
    }
    goto LABEL_20;
  }
  if ((~v13 & 0xF000000000000007) != 0)
  {
    v14 = swift_retain_n();
    v15 = sub_23F6B5FA4(v14);
    swift_release();
    sub_23F6B68B4();
    if ((v15 & 1) == 0)
      goto LABEL_19;
    goto LABEL_10;
  }
  sub_23F6B678C();
LABEL_18:
  sub_23F6B6A28();
LABEL_19:
  sub_23F6B5500();
  sub_23F6B5500();
LABEL_20:
  sub_23F6B5694();
  sub_23F693DDC();
}

uint64_t sub_23F698958(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  BOOL v11;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return _s16IntelligenceFlow3ASTO0aB14PlannerSupportE7BuiltinO6SearchV5query24isLowConfidenceKnowledge7pickOneAHSS_S2btcfcfA0__0();
  if (!v2 || a1 == a2)
    return _s16IntelligenceFlow3ASTO0aB14PlannerSupportE7BuiltinO14NoMatchingToolV2eeoiySbAH_AHtFZ_0();
  v3 = (unsigned __int8 *)(a1 + 32);
  v4 = (unsigned __int8 *)(a2 + 32);
  v5 = v2 - 1;
  do
  {
    v7 = *v3++;
    v6 = v7;
    v9 = *v4++;
    v8 = v9;
    v11 = v5-- != 0;
    result = v6 == v8;
  }
  while (v6 == v8 && v11);
  return result;
}

void sub_23F6989AC()
{
  sub_23F6958A4();
}

void sub_23F6989C8()
{
  sub_23F6989F0();
}

void sub_23F6989DC()
{
  sub_23F6989F0();
}

void sub_23F6989F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(char *, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  BOOL v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t);

  sub_23F6B50E8();
  v22 = v3;
  v7 = sub_23F6B5B80(v4, v5, v6);
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B65C4();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v21 - v10;
  sub_23F6B6160();
  if (v14 && v12 && v1 != v0)
  {
    v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v16 = *(_QWORD *)(v13 + 72);
    v17 = v12 - 1;
    while (1)
    {
      sub_23F6B5AB8(v1 + v15, (uint64_t)v11);
      sub_23F6B5AB8(v0 + v15, v2);
      sub_23F6B6218();
      if ((_s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0() & 1) == 0)
        break;
      v18 = v22(&v11[*(int *)(v7 + 20)], v2 + *(int *)(v7 + 20));
      sub_23F6B5178();
      sub_23F6B5178();
      v20 = v17-- != 0;
      if ((v18 & 1) != 0)
      {
        v15 += v16;
        if (v20)
          continue;
      }
      goto LABEL_15;
    }
    sub_23F6B5178();
    sub_23F6B5178();
  }
LABEL_15:
  sub_23F693DDC();
}

void sub_23F698AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_23F695D6C(a1, a2, (uint64_t)type metadata accessor for TranscriptProtoProgramStatement, (uint64_t)static TranscriptProtoProgramStatement.== infix(_:_:), a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

uint64_t sub_23F698B10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  BOOL v9;
  char v10;

  sub_23F6B66DC();
  if (v3)
  {
    if (!v2 || v0 == v1)
    {
      v10 = 1;
    }
    else
    {
      v4 = v0 + 32;
      v5 = v1 + 32;
      v6 = v2 - 1;
      do
      {
        v4 += 8;
        v5 += 8;
        sub_23F6B54F8();
        sub_23F6B6254();
        sub_23F6B68CC();
        sub_23F698BA0();
        v10 = v7;
        sub_23F693DFC();
        sub_23F6B5AB0();
        v9 = v6-- != 0;
      }
      while ((v10 & 1) != 0 && v9);
    }
  }
  else
  {
    v10 = 0;
  }
  return v10 & 1;
}

void sub_23F698BA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v11[3];
  uint64_t v12;

  sub_23F6B50E8();
  v4 = sub_23F6B53E0();
  type metadata accessor for Candidate(v4);
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B543C();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v11 - v7;
  v9 = *(_QWORD *)(v1 + 16);
  v12 = v0;
  if (v9 == *(_QWORD *)(v0 + 16) && v9 && v1 != v12)
  {
    sub_23F6B6A94();
    v11[1] = "ntityQuery";
    sub_23F6B5798(v1 + v3, (uint64_t)v8);
    sub_23F6B5798(v12 + v3, v2);
    sub_23F6B6098();
    if ((sub_23FB2ED14() & 1) != 0)
    {
      sub_23F6B72F0();
      __asm { BR              X10 }
    }
    sub_23F6B5178();
    sub_23F6B5178();
  }
  sub_23F6B626C();
  sub_23F693DDC();
}

void sub_23F698E80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  _QWORD v14[2];

  sub_23F6B50E8();
  v4 = sub_23F6B53E0();
  type metadata accessor for QueryPredicate(v4);
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B543C();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v14 - v7;
  sub_23F6B5518();
  if (v13 && v9 && v1 != v0)
  {
    sub_23F6B7020();
    v14[1] = v10;
    v14[0] = v1;
    sub_23F6B5AE0(v1 + v3, (uint64_t)v8);
    sub_23F6B5AE0(v0 + v3, v2);
    sub_23F6B6754();
    v13 = v13 && v11 == v12;
    if (v13 || (sub_23F6B5280() & 1) != 0)
      __asm { BR              X10 }
    sub_23F6B5178();
    sub_23F6B5178();
  }
  sub_23F6B626C();
  sub_23F693DDC();
}

void sub_23F699158()
{
  sub_23F6958A4();
}

void sub_23F699174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  char v36;
  char v37;
  char v38;

  sub_23F6B50E8();
  a19 = v25;
  a20 = v26;
  v27 = sub_23F6B53E0();
  type metadata accessor for UpdateParametersExpression.UpdateParameter(v27);
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F6B543C();
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&a9 - v30;
  sub_23F6B5518();
  if (v35 && v32 && v21 != v20)
  {
    sub_23F6B56C8();
    while (1)
    {
      sub_23F6B5798(v21 + v23, (uint64_t)v31);
      sub_23F6B5798(v20 + v23, v22);
      sub_23F6B6754();
      v35 = v35 && v33 == v34;
      if (!v35 && (sub_23F6B5280() & 1) == 0)
        break;
      if ((v31[24] & 1) != 0)
      {
        if (!*(_BYTE *)(v22 + 24))
          break;
      }
      else
      {
        sub_23F6B6FE0();
        if ((v36 & 1) != 0)
          break;
      }
      if (v31[25] != *(_BYTE *)(v22 + 25))
        break;
      v37 = sub_23F6B6534();
      sub_23F6B54E0();
      sub_23F6B54E0();
      sub_23F6B64E8();
      if ((v37 & 1) != 0)
      {
        v23 += v24;
        if ((v38 & 1) != 0)
          continue;
      }
      goto LABEL_21;
    }
    sub_23F6B5178();
    sub_23F6B5178();
  }
LABEL_21:
  sub_23F6B626C();
  sub_23F693DDC();
}

void sub_23F6992A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t Output;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  sub_23F6B50E8();
  v3 = sub_23F6B53E0();
  v52 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(v3);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B6B5C();
  sub_23F6916B8(&qword_256EA2578);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B5848(v6, v48);
  v51 = sub_23F6916B8(&qword_256EA2580);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B57F4(v8, v48);
  v64 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B5404(v10, v48);
  sub_23F6916B8(&qword_256EA2588);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B5420(v12, v48);
  v56 = sub_23F6916B8(&qword_256EA2590);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B51A4();
  v65 = v14;
  Output = type metadata accessor for ContextProtoToolQueryOutput(0);
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B7254();
  v62 = v16;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v17);
  v63 = (uint64_t)&v48 - v18;
  v57 = v1;
  v58 = v0;
  sub_23F6B5518();
  if (!v34 || !v19 || v57 == v58)
    goto LABEL_34;
  v49 = v2;
  sub_23F6B7014();
  v22 = v21 & ~v20;
  v53 = *(_QWORD *)(v23 + 72);
  v25 = v24 - 1;
  v26 = &qword_256EA2598;
  while (1)
  {
    sub_23F6B60F4(v57 + v22, v63);
    v27 = v62;
    sub_23F6B60F4(v58 + v22, v62);
    v28 = v65 + *(int *)(v56 + 48);
    v29 = sub_23F6B63F4();
    sub_23F6B568C(v29, v30);
    sub_23F6B568C(v27, v28);
    v31 = sub_23F6B6F68();
    sub_23F6B5164(v31, v32, v64);
    v60 = v22;
    if (!v34)
      break;
    sub_23F6B5164(v28, 1, v64);
    if (!v34)
      goto LABEL_32;
    sub_23F6B62DC(v65);
    v33 = (uint64_t)v26;
LABEL_20:
    sub_23F6B53A4();
    sub_23F6B4EEC(v33);
    v45 = sub_23F6B6200();
    sub_23F6B5684();
    sub_23F6B5684();
    v47 = v25-- != 0;
    if ((v45 & 1) != 0)
    {
      v22 = v60 + v53;
      v26 = (uint64_t *)v33;
      if (v47)
        continue;
    }
    goto LABEL_34;
  }
  sub_23F6B568C(v65, v61);
  sub_23F6B5164(v28, 1, v64);
  if (v34)
    goto LABEL_31;
  sub_23F6B4FD0(v28, v55, type metadata accessor for ContextProtoRetrievedTool.Definition);
  v35 = v59 + *(int *)(v51 + 48);
  sub_23F6B568C(v61, v59);
  v36 = sub_23F6B5994();
  sub_23F6B568C(v36, v37);
  v38 = sub_23F6B6F68();
  v39 = v52;
  sub_23F6B5164(v38, v40, v52);
  if (v34)
  {
    sub_23F6B5164(v35, 1, v39);
    if (!v34)
      goto LABEL_29;
    sub_23F6B62DC(v59);
    goto LABEL_19;
  }
  sub_23F6B568C(v59, v50);
  sub_23F6B5164(v35, 1, v39);
  if (!v41)
  {
    sub_23F6B6B14(v35, v49);
    v42 = sub_23F6B69FC();
    static ContextProtoRetrievedTool.ContextProtoDefinitionEnum.== infix(_:_:)(v42, v43);
    sub_23F6B6878();
    sub_23F6B54E0();
    sub_23F6B54E0();
    sub_23F6B62DC(v59);
    if ((v35 & 1) == 0)
      goto LABEL_30;
LABEL_19:
    sub_23F6B53A4();
    v33 = (uint64_t)v26;
    sub_23F6B4EEC((uint64_t)v26);
    v44 = sub_23F6B5624();
    sub_23F6B5684();
    sub_23F6B5684();
    sub_23F6B4F84(v65, &qword_256EA2588);
    if ((v44 & 1) == 0)
      goto LABEL_33;
    goto LABEL_20;
  }
  sub_23F6B69F4();
LABEL_29:
  sub_23F6B4F84(v59, &qword_256EA2580);
LABEL_30:
  sub_23F6B4FAC();
LABEL_31:
  sub_23F6B4FAC();
LABEL_32:
  sub_23F6B64F4(v65);
LABEL_33:
  sub_23F6B5178();
  sub_23F6B5178();
LABEL_34:
  sub_23F6B5694();
  sub_23F693DDC();
}

void sub_23F699750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_23F695D6C(a1, a2, (uint64_t)type metadata accessor for ResponseGenerationProtoStatementResultDigest, (uint64_t)static ResponseGenerationProtoStatementResultDigest.== infix(_:_:), a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_23F699764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_23F695D6C(a1, a2, (uint64_t)type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress, (uint64_t)static ContextProtoStructuredContextSiriRequestContextAddress.== infix(_:_:), a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_23F699778()
{
  sub_23F6958A4();
}

void sub_23F699794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_23F695D6C(a1, a2, (uint64_t)type metadata accessor for ToolQuery.Output, (uint64_t)MEMORY[0x24BE57560], a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_23F6997A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_23F695D6C(a1, a2, (uint64_t)type metadata accessor for TranscriptProtoEvent, (uint64_t)static TranscriptProtoEvent.== infix(_:_:), a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_23F6997BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  v8 = type metadata accessor for ContextProtoBoundingBox(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F693EB0();
  sub_23F6916B8(&qword_256EA2800);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5208();
  v39 = sub_23F6916B8(&qword_256EA2808);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  v12 = sub_23F6B51D0();
  v13 = type metadata accessor for ContextProtoSurroundingText(v12);
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B5C64();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (uint64_t *)((char *)&v34 - v16);
  v40 = v7;
  v41 = v5;
  sub_23F6B5E3C();
  if (!v24 || !v18 || v40 == v41)
    goto LABEL_32;
  v36 = v0;
  v37 = v1;
  sub_23F6B7034();
  v38 = v19;
  v21 = v20 - 1;
  v35 = v8;
  while (1)
  {
    sub_23F6B5A28(v40 + v1, (uint64_t)v17);
    sub_23F6B5A28(v41 + v1, (uint64_t)v3);
    v22 = v17[1];
    v23 = v3[1];
    if (v22)
    {
      if (!v23)
        goto LABEL_31;
      v24 = *v17 == *v3 && v22 == v23;
      if (!v24 && (sub_23F6B5280() & 1) == 0)
        goto LABEL_31;
    }
    else if (v23)
    {
      goto LABEL_31;
    }
    v25 = (uint64_t)v3 + *(int *)(v13 + 20);
    sub_23F6B5D08();
    sub_23F6B568C(v26, v27);
    sub_23F6B568C(v25, v5);
    sub_23F6B5164(v2, 1, v8);
    if (!v24)
      break;
    v28 = sub_23F6B5164(v5, 1, v8);
    if (!v24)
      goto LABEL_30;
    sub_23F6B62DC(v2);
LABEL_22:
    sub_23F6B53A4();
    sub_23F6B4EEC((uint64_t)&qword_256EA2598);
    v5 = sub_23F6B5624();
    sub_23F6B53D0();
    sub_23F6B53D0();
    v33 = v21-- != 0;
    if ((v5 & 1) != 0)
    {
      v1 += v38;
      if (v33)
        continue;
    }
    goto LABEL_32;
  }
  sub_23F6B568C(v2, v37);
  sub_23F6B5164(v5, 1, v8);
  if (!v29)
  {
    v30 = sub_23F6B6180();
    sub_23F6B625C(v30, v31);
    sub_23F6B6F88();
    static ContextProtoBoundingBox.== infix(_:_:)();
    sub_23F6B6860();
    sub_23F6B5178();
    sub_23F6B4FAC();
    v8 = v35;
    sub_23F6B4F84(v2, &qword_256EA2800);
    if ((v5 & 1) == 0)
      goto LABEL_31;
    goto LABEL_22;
  }
  sub_23F6B6F94();
LABEL_30:
  sub_23F6B6034(v28, &qword_256EA2808);
LABEL_31:
  sub_23F6B5178();
  sub_23F6B5178();
LABEL_32:
  sub_23F6B5694();
  sub_23F693DDC();
}

uint64_t sub_23F699AA4(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  BOOL v20;
  char v21;
  char v22;
  uint64_t v23;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_retain();
  LOBYTE(v5) = static AST.Stmt.== infix(_:_:)(v5, v6);
  swift_release();
  result = swift_release();
  if ((v5 & 1) == 0)
    return 0;
  if (v2 == 1)
    return 1;
  v8 = 0;
  v23 = a1 + 40;
  while (v8 + 1 < v2)
  {
    v9 = *(_QWORD *)(v23 + 8 * v8);
    v10 = *(_QWORD *)(a2 + 40 + 8 * v8);
    v11 = v10 >> 62;
    if (v9 >> 62)
    {
      if (v9 >> 62 == 1)
      {
        if (v11 != 1)
          return 0;
        v13 = *(_QWORD *)(v9 + 24);
        v12 = *(_QWORD *)(v9 + 32);
        v14 = *(_QWORD *)(v10 + 32);
        swift_retain();
        swift_retain();
        static AST.Expr.== infix(_:_:)();
        if ((v15 & 1) == 0 || (sub_23F699AA4(v13) & 1) == 0)
          goto LABEL_34;
        if (v12)
        {
          if (!v14)
            goto LABEL_34;
          swift_bridgeObjectRetain();
          v16 = swift_bridgeObjectRetain();
          v17 = sub_23F699AA4(v16);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v17 & 1) == 0)
            return 0;
        }
        else
        {
          if (v14)
            goto LABEL_34;
          swift_release();
          swift_release();
        }
      }
      else
      {
        if (v11 != 2)
          return 0;
        v19 = *(_QWORD *)(v9 + 40);
        v20 = *(_QWORD *)(v9 + 16) == *(_QWORD *)(v10 + 16) && *(_QWORD *)(v9 + 24) == *(_QWORD *)(v10 + 24);
        if (!v20 && (sub_23FB2FB78() & 1) == 0)
          return 0;
        swift_retain();
        swift_retain();
        static AST.Expr.== infix(_:_:)();
        if ((v21 & 1) == 0)
        {
LABEL_34:
          swift_release();
          swift_release();
          return 0;
        }
        v22 = sub_23F699AA4(v19);
        swift_release();
        swift_release();
        if ((v22 & 1) == 0)
          return 0;
      }
    }
    else
    {
      if (v11)
        return 0;
      static AST.Expr.== infix(_:_:)();
      if ((v18 & 1) == 0)
        return 0;
    }
    ++v8;
    result = 1;
    if (v2 - 1 == v8)
      return result;
  }
  __break(1u);
  return result;
}

void sub_23F699D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_23F695D6C(a1, a2, (uint64_t)type metadata accessor for AST.FlatValue, (uint64_t)static AST.FlatValue.== infix(_:_:), a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_23F699D38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  char v36;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  sub_23F6B50E8();
  v4 = v3;
  v6 = v5;
  v7 = type metadata accessor for AST.FlatValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v37 - v10;
  v12 = type metadata accessor for AST.Update(0);
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B55B4();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B6B2C();
  v15 = *(_QWORD *)(v6 + 16);
  if (v15 == *(_QWORD *)(v4 + 16) && v15 && v6 != v4)
  {
    v37[1] = v8;
    sub_23F6B6BB0();
    v40 = v4 + v17;
    v41 = v18;
    v39 = *(_QWORD *)(v19 + 72);
    v43 = v12;
    v44 = v2;
    v45 = v1;
    v38 = v20;
    while (1)
    {
      v42 = v16;
      v21 = v39 * v16;
      sub_23F6B5798(v41 + v39 * v16, v2);
      sub_23F6B5798(v40 + v21, v1);
      sub_23F6B6848();
      static AST.FlatValue.== infix(_:_:)();
      if ((v22 & 1) == 0
        || (v23 = *(int *)(v43 + 20),
            v24 = *(_QWORD *)(v44 + v23),
            v25 = *(_QWORD *)(v45 + v23),
            v26 = *(_QWORD *)(v24 + 16),
            v26 != *(_QWORD *)(v25 + 16)))
      {
LABEL_18:
        sub_23F6B5178();
        sub_23F6B5178();
        goto LABEL_19;
      }
      if (v26 && v24 != v25)
        break;
LABEL_13:
      if (*(unsigned __int8 *)(v44 + *(int *)(v43 + 24)) != *(unsigned __int8 *)(v45 + *(int *)(v43 + 24)))
        goto LABEL_18;
      v2 = v44;
      v1 = v45;
      static AST.FlatValue.== infix(_:_:)();
      v36 = v35;
      sub_23F6B54E0();
      sub_23F6B54E0();
      if ((v36 & 1) != 0)
      {
        v16 = v42 + 1;
        if (v42 + 1 != v38)
          continue;
      }
      goto LABEL_19;
    }
    v27 = 0;
    sub_23F6B71EC();
    v30 = v29 & ~v28;
    v32 = *(_QWORD *)(v31 + 72);
    while (1)
    {
      sub_23F6B5AC0(v24 + v30, (uint64_t)v11);
      if (v27 >= *(_QWORD *)(v25 + 16))
        break;
      sub_23F6B5AC0(v25 + v30, v0);
      sub_23F6B6190();
      static AST.FlatValue.== infix(_:_:)();
      v34 = v33;
      sub_23F6B5B58();
      sub_23F6B5B58();
      if ((v34 & 1) == 0)
        goto LABEL_18;
      ++v27;
      v30 += v32;
      if (v26 == v27)
        goto LABEL_13;
    }
    __break(1u);
  }
  else
  {
LABEL_19:
    sub_23F693DDC();
  }
}

void sub_23F699F88()
{
  sub_23F6958A4();
}

uint64_t sub_23F699FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  BOOL v11;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v9 = 1;
    }
    else
    {
      v3 = (uint64_t *)(a1 + 32);
      v4 = (uint64_t *)(a2 + 32);
      v5 = v2 - 1;
      do
      {
        v7 = *v3++;
        v6 = v7;
        v8 = *v4++;
        v13 = v8;
        v14 = v6;
        v9 = static AST.Expr.== infix(_:_:)(&v14, &v13);
        v11 = v5-- != 0;
      }
      while ((v9 & 1) != 0 && v11);
    }
  }
  else
  {
    v9 = 0;
  }
  return v9 & 1;
}

uint64_t static AST.Stmt.== infix(_:_:)(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  if (!(a1 >> 62))
  {
    if (!(a2 >> 62))
    {
      v6 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)&v16 = *(_QWORD *)(a1 + 16);
      *(_QWORD *)&v13 = v6;
      static AST.Expr.== infix(_:_:)();
      return v5 & 1;
    }
LABEL_9:
    v5 = 0;
    return v5 & 1;
  }
  if (a1 >> 62 != 1)
  {
    if (a2 >> 62 == 2)
    {
      v8 = *(_QWORD *)(a1 + 32);
      v7 = *(_QWORD *)(a1 + 40);
      v9 = *(_OWORD *)(a2 + 16);
      v10 = *(_QWORD *)(a2 + 32);
      v11 = *(_QWORD *)(a2 + 40);
      v16 = *(_OWORD *)(a1 + 16);
      v17 = v8;
      v18 = v7;
      v13 = v9;
      v14 = v10;
      v15 = v11;
      static AST.ForInStmt.== infix(_:_:)(&v16, &v13);
      return v5 & 1;
    }
    goto LABEL_9;
  }
  if (a2 >> 62 != 1)
    goto LABEL_9;
  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  v16 = *(_OWORD *)(a1 + 16);
  v17 = v2;
  v13 = v3;
  v14 = v4;
  static AST.IfStmt.== infix(_:_:)((uint64_t)&v16, (uint64_t)&v13);
  return v5 & 1;
}

void static AST.Expr.== infix(_:_:)()
{
  sub_23F6B50E8();
  sub_23F6B53E0();
  type metadata accessor for AST.UpdateParameters();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5C80();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B58C8();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5F5C();
  __asm { BR              X10 }
}

void sub_23F69A1B0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  sub_23F6B5258();
  if (!v2 && (*(_QWORD *)(v1 + 16) != *(_QWORD *)(v0 + 16) || *(_QWORD *)(v1 + 24) != *(_QWORD *)(v0 + 24)))
    sub_23F6B5280();
  sub_23F6B58A0();
  sub_23F6B54B0();
  sub_23F693DDC();
}

void static AST.IfStmt.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a2 + 16);
  sub_23F6B6380();
  if ((v4 & 1) != 0)
  {
    v5 = sub_23F6B5EE4();
    if ((sub_23F699AA4(v5) & 1) != 0 && v2 && v3)
    {
      sub_23F6B5508();
      v6 = sub_23F6B54F8();
      sub_23F699AA4(v6);
      sub_23F693DFC();
      sub_23F693E04();
    }
  }
  sub_23F6B6664();
}

void static AST.ForInStmt.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;
  char v3;
  uint64_t v4;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if ((v2 || (sub_23F6B5280() & 1) != 0) && (sub_23F6B6380(), (v3 & 1) != 0))
  {
    v4 = sub_23F6B5994();
    sub_23F699AA4(v4);
  }
  else
  {
    sub_23F6B6664();
  }
}

uint64_t sub_23F69A8D4(unint64_t *a1, unint64_t *a2)
{
  return static AST.Stmt.== infix(_:_:)(*a1, *a2);
}

uint64_t static AST.Literal.== infix(_:_:)(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  return ((uint64_t (*)(void))((char *)sub_23F69A8FC + 4 * byte_23FB4707E[a3]))();
}

uint64_t sub_23F69A8FC(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  char v6;

  if (a6)
    v6 = 0;
  else
    v6 = ((a1 & 1) == 0) ^ a4;
  return v6 & 1;
}

BOOL static AST.InfixOp.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void sub_23F69A9D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  char v15;

  sub_23F6B50E8();
  if (v4 == v5 || (v6 = v5, v7 = v4, sub_23F6B66DC(), !v8))
  {
LABEL_23:
    sub_23F693DDC();
    return;
  }
  sub_23F6B592C();
  while (1)
  {
    if (v3)
    {
      sub_23F6B6BC8();
      goto LABEL_21;
    }
    v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v1)
      goto LABEL_23;
    ++v2;
    if (!*(_QWORD *)(v0 + 8 * v10))
    {
      v2 = v10 + 1;
      if (v10 + 1 >= v1)
        goto LABEL_23;
      if (!*(_QWORD *)(v0 + 8 * v2))
      {
        v2 = v10 + 2;
        if (v10 + 2 >= v1)
          goto LABEL_23;
        if (!*(_QWORD *)(v0 + 8 * v2))
          break;
      }
    }
LABEL_20:
    sub_23F6B6B98();
LABEL_21:
    v12 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v9);
    sub_23F6B5F1C();
    sub_23F6B5EE4();
    v13 = sub_23F78C62C();
    v15 = v14;
    sub_23F6B5908();
    if ((v15 & 1) == 0 || *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v13) != v12)
      goto LABEL_23;
  }
  v11 = v10 + 3;
  if (v11 >= v1)
    goto LABEL_23;
  if (*(_QWORD *)(v0 + 8 * v11))
  {
    v2 = v11;
    goto LABEL_20;
  }
  while (1)
  {
    v2 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v2 >= v1)
      goto LABEL_23;
    ++v11;
    if (*(_QWORD *)(v0 + 8 * v2))
      goto LABEL_20;
  }
LABEL_25:
  __break(1u);
}

void sub_23F69AAE8()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_23F6B50E8();
  sub_23F6B53E0();
  sub_23FB2ED38();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v5);
  v33 = (uint64_t)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t)v30 - v8;
  v10 = sub_23F6B58C8();
  v37 = *(_QWORD *)(v10 - 8);
  v38 = v10;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B537C(v12, v30[0]);
  sub_23F6916B8(&qword_256EA2700);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B5C80();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B7234();
  if (v26)
  {
    v35 = 1;
LABEL_39:
    sub_23F693DDC();
    return;
  }
  sub_23F6B5518();
  if (!v26)
  {
LABEL_38:
    v35 = 0;
    goto LABEL_39;
  }
  sub_23F6B56F4();
  while (1)
  {
    if (v4)
    {
      sub_23F6B6550();
LABEL_7:
      sub_23F6B5F24();
      v15 = sub_23F6B5D68();
      sub_23F6B5DF0(v1 + *(int *)(v15 + 48), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
      sub_23F6B5BAC(v1);
      goto LABEL_30;
    }
    sub_23F6B6EC8();
    if (v16)
    {
      __break(1u);
      goto LABEL_41;
    }
    sub_23F6B7154();
    if (v18 != v16)
    {
      if (*(_QWORD *)(v31 + 8 * v17))
        goto LABEL_12;
      sub_23F6B7120(v17);
      if (v18 != v16)
      {
        if (*(_QWORD *)(v31 + 8 * v19))
          goto LABEL_16;
        sub_23F6B70E4();
        if (v18 != v16)
          break;
      }
    }
LABEL_29:
    v22 = sub_23F6B5D68();
    sub_23F6B6008(v1, v23, v24, v22);
LABEL_30:
    sub_23F6B4EC0(v1, v3, &qword_256EA2700);
    v25 = sub_23F6B5D68();
    sub_23F6B5164(v3, 1, v25);
    if (v26)
      v27 = 1;
    else
      v27 = 0;
    v35 = v27;
    if (v26)
      goto LABEL_39;
    sub_23F6B59B0();
    sub_23F6B5DD4();
    v28 = v32;
    sub_23F78C678();
    sub_23F6B606C();
    if ((v0 & 1) == 0)
    {
      sub_23F6B6A84();
      goto LABEL_38;
    }
    v29 = *(_QWORD *)(v28 + 56) + *(_QWORD *)(v1 + 72) * v9;
    v9 = v33;
    sub_23F6B5EF0(v33, v29, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
    sub_23F6B4EEC((uint64_t)&unk_256EA2710);
    sub_23F6B61E8();
    sub_23F6B634C();
    sub_23F6B6EEC();
    sub_23F6B7000();
    v4 = v36;
  }
  if (*(_QWORD *)(v31 + 8 * v20))
  {
    v17 = v20;
    goto LABEL_12;
  }
  sub_23F6B7094();
  if (v18 == v16)
    goto LABEL_29;
  if (*(_QWORD *)(v31 + 8 * v19))
  {
LABEL_16:
    v17 = v19;
LABEL_12:
    sub_23F6B64FC(v17);
    goto LABEL_7;
  }
  while (!__OFADD__(v19, 1))
  {
    sub_23F6B7154();
    if (v18 == v16)
    {
      v34 = v30[1];
      goto LABEL_29;
    }
    sub_23F6B56E8();
    if (v21)
      goto LABEL_12;
  }
LABEL_41:
  __break(1u);
}

void sub_23F69AD78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  uint64_t *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t (*v55)(uint64_t);
  unint64_t v56;
  char v57;
  char v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  void (*v71)(uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  BOOL v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t);
  char v93;
  uint64_t v94;
  char v95;
  void (*v96)(uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(uint64_t, uint64_t);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;

  sub_23F6B50E8();
  v6 = v5;
  sub_23F6B5AC8();
  v127 = sub_23FB2D040();
  v109 = *(_QWORD *)(v127 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B5314((uint64_t)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23F6916B8(&qword_256EA2750);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B5BF4(v10, v104);
  v119 = sub_23F6916B8(&qword_256EA2758);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B51D0();
  v12 = sub_23FB2ED38();
  v113 = *(_QWORD *)(v12 - 8);
  v114 = v12;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B57D8(v14, v104);
  v15 = type metadata accessor for ToolParameterValue(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F693E0C();
  v121 = v17;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B6580();
  v112 = (uint64_t *)v19;
  v122 = sub_23F6916B8(&qword_256EA2760);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v20);
  v21 = sub_23F6B5864();
  v118 = type metadata accessor for Action.ParameterValue(v21);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v22);
  v128 = (uint64_t)&v104 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6B5F5C();
  sub_23F6916B8(&qword_256EA2768);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F6B5644(v26, v104);
  MEMORY[0x24BDAC7A8](v27);
  v126 = v6;
  if (v0 == v6 || *(_QWORD *)(v0 + 16) != *(_QWORD *)(v126 + 16))
  {
LABEL_55:
    sub_23F693DDC();
    return;
  }
  v116 = (uint64_t)&v104 - v28;
  v120 = 0;
  v108 = v0;
  v105 = v0 + 64;
  sub_23F6B5460();
  v106 = v30;
  v104 = v30 - 1;
  v31 = type metadata accessor for ToolParameterValue;
  v32 = &qword_256EA2750;
  v123 = v2;
  v117 = v3;
  v115 = v4;
  while (1)
  {
    v33 = v125;
    if (v29)
    {
      sub_23F6B6FB4();
      v124 = v34;
LABEL_6:
      sub_23F6B64A4();
      v37 = *v35;
      v36 = v35[1];
      v40 = v39 + *(_QWORD *)(v4 + 72) * v38;
      v41 = sub_23F6916B8(&qword_256EA2770);
      v42 = v40;
      v33 = v125;
      sub_23F6B4F24(v42, (uint64_t)v125 + *(int *)(v41 + 48), type metadata accessor for Action.ParameterValue);
      *v33 = v37;
      v33[1] = v36;
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v33, 0, 1, v41);
      sub_23F6B5508();
      v3 = v117;
      goto LABEL_24;
    }
    v43 = v120 + 1;
    if (__OFADD__(v120, 1))
    {
      __break(1u);
      goto LABEL_57;
    }
    if (v43 < v106)
    {
      if (*(_QWORD *)(v105 + 8 * v43))
        goto LABEL_10;
      v46 = v120 + 2;
      ++v120;
      if (v43 + 1 < v106)
      {
        if (*(_QWORD *)(v105 + 8 * v46))
          goto LABEL_10;
        v120 = v43 + 1;
        if (v43 + 2 < v106)
        {
          if (*(_QWORD *)(v105 + 8 * (v43 + 2)))
            goto LABEL_10;
          v47 = v43 + 3;
          v120 = v43 + 2;
          if (v43 + 3 < v106)
            break;
        }
      }
    }
LABEL_23:
    v49 = sub_23F6916B8(&qword_256EA2770);
    sub_23F6B5A8C((uint64_t)v33, v50, v51, v49);
    v124 = 0;
LABEL_24:
    v52 = v116;
    sub_23F6B4EC0((uint64_t)v33, v116, &qword_256EA2768);
    v53 = sub_23F6916B8(&qword_256EA2770);
    sub_23F6B5164(v52, 1, v53);
    if (v79)
      goto LABEL_55;
    v54 = v32;
    v55 = v31;
    sub_23F6B7064(v52 + *(int *)(v53 + 48), v3);
    v56 = sub_23F78C6DC();
    v58 = v57;
    sub_23F6B644C();
    if ((v58 & 1) == 0)
      goto LABEL_54;
    sub_23F6B5AE0(*(_QWORD *)(v126 + 56) + *(_QWORD *)(v4 + 72) * v56, v128);
    v59 = (uint64_t *)(v1 + *(int *)(v122 + 48));
    v60 = sub_23F6B5FE0();
    sub_23F6B60F4(v60, v61);
    v62 = sub_23F6B6F9C();
    sub_23F6B60F4(v62, v63);
    sub_23F6B6AAC();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F6B5AE0(v1, v121);
      if (sub_23F6B5FBC() != 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v121, v114);
LABEL_49:
        v100 = &qword_256EA2760;
        v101 = v1;
        goto LABEL_52;
      }
      v65 = v113;
      v64 = v114;
      v66 = v121;
      v67 = v1;
      v68 = v15;
      v69 = v111;
      sub_23F6B6B04(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v113 + 32));
      sub_23F6B6848();
      v70 = sub_23FB2ED14();
      v71 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
      v3 = v117;
      v72 = v69;
      v15 = v68;
      v1 = v67;
      v4 = v115;
      v71(v72, v64);
      v73 = v66;
      v31 = v55;
      v71(v73, v64);
    }
    else
    {
      v74 = v112;
      sub_23F6B5AE0(v1, (uint64_t)v112);
      v75 = *v74;
      v76 = v74[1];
      if (sub_23F6B5FBC() == 1)
      {
        sub_23F6B644C();
        goto LABEL_49;
      }
      v77 = *v59;
      v78 = v59[1];
      v79 = v75 == v77 && v76 == v78;
      if (v79)
      {
        sub_23F6B6740();
        v32 = v54;
        goto LABEL_38;
      }
      v70 = sub_23F6B5280();
      sub_23F693DFC();
      sub_23F6B644C();
    }
    v32 = v54;
    if ((v70 & 1) == 0)
    {
      sub_23F6B4FAC();
      goto LABEL_53;
    }
LABEL_38:
    sub_23F6B6418();
    v80 = v123;
    v81 = v123 + *(int *)(v119 + 48);
    sub_23F6B5F8C(v128 + *(int *)(v118 + 20), v123);
    v82 = sub_23F6B5994();
    sub_23F6B5F8C(v82, v83);
    v84 = sub_23F6B6468();
    sub_23F6B5164(v84, v85, v127);
    if (v79)
    {
      sub_23F6B5164(v81, 1, v127);
      if (!v79)
        goto LABEL_51;
      sub_23F6B6EF8(v80);
    }
    else
    {
      v86 = v110;
      sub_23F6B5F8C(v80, v110);
      sub_23F6B5164(v81, 1, v127);
      if (v87)
      {
        v102 = sub_23F6B61DC();
        v103(v102, v127);
LABEL_51:
        v100 = &qword_256EA2758;
        v101 = v80;
LABEL_52:
        sub_23F6B4F84(v101, v100);
LABEL_53:
        sub_23F6B6E3C();
LABEL_54:
        sub_23F6B6F94();
        goto LABEL_55;
      }
      v88 = v109;
      v89 = v107;
      v90 = sub_23F6B69B8();
      v91 = v127;
      v92(v90);
      sub_23F6B4EEC((uint64_t)&unk_256EA2778);
      v93 = sub_23F6B5D5C();
      v94 = v86;
      v95 = v93;
      v96 = *(void (**)(uint64_t, uint64_t))(v88 + 8);
      v96(v94, v91);
      v97 = v89;
      v98 = v123;
      v99 = v91;
      v4 = v115;
      v96(v97, v99);
      sub_23F6B6EF8(v98);
      if ((v95 & 1) == 0)
        goto LABEL_53;
    }
    sub_23F6B5178();
    sub_23F6B5178();
    v29 = v124;
  }
  if (*(_QWORD *)(v105 + 8 * v47))
  {
LABEL_10:
    sub_23F6B5DC0();
    v124 = v44;
    v120 = v45;
    goto LABEL_6;
  }
  while (!__OFADD__(v47, 1))
  {
    if (v47 + 1 >= v106)
    {
      v120 = v104;
      goto LABEL_23;
    }
    sub_23F6B56E8();
    if (v48)
      goto LABEL_10;
  }
LABEL_57:
  __break(1u);
}

void sub_23F69B4BC()
{
  uint64_t v0;
  unsigned __int8 *v1;
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  char *v62;
  unsigned __int8 *v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  sub_23F6B50E8();
  v5 = v4;
  v6 = sub_23F6B5AC8();
  v72 = type metadata accessor for TranscriptProtoASTExpr(v6);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B5404(v8, v58);
  sub_23F6916B8(&qword_256EA25A0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B57F4(v10, v58);
  v66 = sub_23F6916B8(&qword_256EA25A8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B5268();
  v12 = type metadata accessor for TranscriptProtoASTUpdateExpr(0);
  v70 = *(_QWORD *)(v12 - 8);
  v71 = v12;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B65E0();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B5F5C();
  sub_23F6916B8(&qword_256EA25B0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B631C();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v58 - v17;
  v68 = v0;
  v73 = v5;
  if (v0 == v5 || *(_QWORD *)(v68 + 16) != *(_QWORD *)(v73 + 16))
  {
LABEL_50:
    sub_23F693DDC();
    return;
  }
  v63 = v3;
  v64 = 0;
  v59 = v68 + 64;
  sub_23F6B5460();
  v60 = v20;
  v61 = v21;
  v58 = v20 - 1;
  v62 = v18;
  while (1)
  {
    if (v19)
    {
      sub_23F6B6FB4();
      v67 = v22;
LABEL_6:
      sub_23F6B64A4();
      v25 = *v23;
      v24 = v23[1];
      v28 = v27 + *(_QWORD *)(v70 + 72) * v26;
      v29 = sub_23F6B6E54();
      v30 = v61;
      sub_23F6B4F24(v28, (uint64_t)v61 + *(int *)(v29 + 48), type metadata accessor for TranscriptProtoASTUpdateExpr);
      *v30 = v25;
      v30[1] = v24;
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v30, 0, 1, v29);
      sub_23F6B5F1C();
      v18 = v62;
      v3 = v63;
      goto LABEL_24;
    }
    v31 = v64 + 1;
    if (__OFADD__(v64, 1))
    {
      __break(1u);
      goto LABEL_52;
    }
    v32 = (uint64_t)v61;
    if (v31 < v60)
    {
      if (*(_QWORD *)(v59 + 8 * v31))
        goto LABEL_10;
      v35 = v64 + 2;
      ++v64;
      if (v31 + 1 < v60)
      {
        if (*(_QWORD *)(v59 + 8 * v35))
          goto LABEL_10;
        v64 = v31 + 1;
        if (v31 + 2 < v60)
        {
          if (*(_QWORD *)(v59 + 8 * (v31 + 2)))
            goto LABEL_10;
          v36 = v31 + 3;
          v64 = v31 + 2;
          if (v31 + 3 < v60)
            break;
        }
      }
    }
LABEL_23:
    v38 = sub_23F6B6E54();
    sub_23F6B5A8C(v32, v39, v40, v38);
    v67 = 0;
LABEL_24:
    v41 = sub_23F6B619C();
    sub_23F6B4EC0(v41, v42, &qword_256EA25B0);
    v43 = sub_23F6B6E54();
    sub_23F6B5164((uint64_t)v18, 1, v43);
    if (v50)
      goto LABEL_50;
    sub_23F6B625C((uint64_t)&v18[*(int *)(v43 + 48)], (uint64_t)v1);
    v44 = sub_23F78C6DC();
    v46 = v45;
    sub_23F6B644C();
    if ((v46 & 1) == 0)
      goto LABEL_49;
    sub_23F6B5AB8(*(_QWORD *)(v73 + 56) + *(_QWORD *)(v70 + 72) * v44, (uint64_t)v3);
    if (*v3 != *v1)
      goto LABEL_48;
    v47 = *(int *)(v71 + 20);
    v48 = (uint64_t)&v1[v47];
    v49 = v2 + *(int *)(v66 + 48);
    sub_23F6B71D0((uint64_t)&v3[v47], v2);
    sub_23F6B71D0(v48, v49);
    sub_23F6B5164(v2, 1, v72);
    if (v50)
    {
      sub_23F6B5164(v49, 1, v72);
      if (!v50)
        goto LABEL_47;
      sub_23F6B4F84(v2, &qword_256EA25A0);
    }
    else
    {
      sub_23F6B71D0(v2, (uint64_t)v69);
      sub_23F6B5164(v49, 1, v72);
      if (v50)
        goto LABEL_46;
      v51 = v65;
      sub_23F6B4FD0(v49, (uint64_t)v65, type metadata accessor for TranscriptProtoASTExpr);
      v52 = *v69;
      v53 = *v51;
      if ((~*v69 & 0xF000000000000007) != 0)
      {
        v75 = *v69;
        if ((~v53 & 0xF000000000000007) == 0)
        {
          sub_23F6B4DDC(v52);
LABEL_44:
          sub_23F6B6944();
LABEL_45:
          sub_23F6B4FAC();
LABEL_46:
          sub_23F6B4FAC();
LABEL_47:
          sub_23F6B64F4(v2);
LABEL_48:
          sub_23F6B4FAC();
LABEL_49:
          sub_23F6B6F94();
          goto LABEL_50;
        }
        v74 = v53;
        sub_23F6B4DDC(v52);
        v54 = swift_retain();
        v55 = sub_23F6B5FA4(v54);
        swift_release();
        sub_23F6B68B4();
        if ((v55 & 1) == 0)
          goto LABEL_45;
      }
      else if ((~v53 & 0xF000000000000007) != 0)
      {
        goto LABEL_44;
      }
      sub_23F6B53A4();
      sub_23F6B4EEC((uint64_t)&qword_256EA2598);
      v56 = sub_23F6B5A5C();
      v3 = v63;
      sub_23F6B53D0();
      v18 = v62;
      sub_23F6B53D0();
      sub_23F6B4F84(v2, &qword_256EA25A0);
      if ((v56 & 1) == 0)
        goto LABEL_48;
    }
    sub_23F6B53A4();
    sub_23F6B4EEC((uint64_t)&qword_256EA2598);
    v57 = sub_23F6B5A5C();
    sub_23F6B5178();
    sub_23F6B5178();
    v19 = v67;
    if ((v57 & 1) == 0)
      goto LABEL_50;
  }
  if (*(_QWORD *)(v59 + 8 * v36))
  {
LABEL_10:
    sub_23F6B5DC0();
    v67 = v33;
    v64 = v34;
    goto LABEL_6;
  }
  while (!__OFADD__(v36, 1))
  {
    if (v36 + 1 >= v60)
    {
      v64 = v58;
      goto LABEL_23;
    }
    sub_23F6B56E8();
    if (v37)
      goto LABEL_10;
  }
LABEL_52:
  __break(1u);
}

void sub_23F69BAAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  int v47;
  unint64_t v48;
  _QWORD *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char v63;
  char v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  sub_23F6B50E8();
  v4 = sub_23F6B53E0();
  v83 = type metadata accessor for TranscriptProtoAstflatValueEnum(v4);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B5544(v6, v66);
  sub_23F6916B8(&qword_256EA25F0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B582C(v8, v66);
  v77 = sub_23F6916B8(&qword_256EA25F8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F6B5864();
  v75 = type metadata accessor for TranscriptProtoASTFlatValue(v10);
  v81 = *(_QWORD *)(v75 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  v82 = (uint64_t)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v66 - v14;
  sub_23F6916B8(&qword_256EA2600);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B5CD4();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B6580();
  v78 = v18;
  if (v1 == v0)
  {
    v79 = 1;
LABEL_49:
    sub_23F693DDC();
    return;
  }
  sub_23F6B5518();
  if (!v46)
  {
LABEL_48:
    v79 = 0;
    goto LABEL_49;
  }
  v73 = v2;
  v74 = v0;
  v80 = v15;
  v76 = 0;
  v72 = v1;
  v21 = *(_QWORD *)(v1 + 64);
  v20 = v1 + 64;
  v19 = v21;
  v22 = 1 << *(_BYTE *)(v20 - 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v19;
  sub_23F6B5AE8();
  v68 = v20;
  v69 = v25;
  v67 = v25 - 1;
  v26 = &unk_256EA2608;
  while (1)
  {
    if (v24)
    {
      v27 = __clz(__rbit64(v24));
      v28 = (v24 - 1) & v24;
      v29 = v27 | (v76 << 6);
LABEL_9:
      v30 = (uint64_t *)(*(_QWORD *)(v72 + 48) + 16 * v29);
      v31 = *v30;
      v32 = v30[1];
      sub_23F6B6CFC();
      v36 = v35 + v33 * v34;
      v37 = sub_23F6B6F00();
      sub_23F6B5AE0(v36, (uint64_t)v3 + *(int *)(v37 + 48));
      *v3 = v31;
      v3[1] = v32;
      sub_23F6B5BAC((uint64_t)v3);
      sub_23F6B54F8();
      v38 = v78;
      goto LABEL_29;
    }
    if (__OFADD__(v76, 1))
    {
      __break(1u);
      goto LABEL_51;
    }
    sub_23F6B6E10();
    v38 = v78;
    if (v40 != v41)
    {
      v42 = *(_QWORD *)(v68 + 8 * v39);
      if (v42)
        goto LABEL_14;
      v43 = v39 + 1;
      v76 = v39;
      if (v39 + 1 < v69)
      {
        v42 = *(_QWORD *)(v68 + 8 * v43);
        if (v42)
          goto LABEL_17;
        v76 = v39 + 1;
        if (v39 + 2 < v69)
        {
          v42 = *(_QWORD *)(v68 + 8 * (v39 + 2));
          if (v42)
          {
            v39 += 2;
            goto LABEL_14;
          }
          v43 = v39 + 3;
          v76 = v39 + 2;
          if (v39 + 3 < v69)
            break;
        }
      }
    }
LABEL_28:
    v44 = sub_23F6B6F00();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v3, 1, 1, v44);
    v28 = 0;
LABEL_29:
    sub_23F6B4EC0((uint64_t)v3, v38, &qword_256EA2600);
    v45 = sub_23F6B6F00();
    sub_23F6B5164(v38, 1, v45);
    if (v46)
      v47 = 1;
    else
      v47 = 0;
    v79 = v47;
    if (v46)
      goto LABEL_49;
    v48 = v28;
    v49 = v3;
    v50 = v26;
    v51 = v83;
    v52 = (uint64_t)v80;
    sub_23F6B7064(v38 + *(int *)(v45 + 48), (uint64_t)v80);
    sub_23F6B68CC();
    v53 = v74;
    v54 = sub_23F78C6DC();
    v56 = v55;
    sub_23F6B5AB0();
    if ((v56 & 1) == 0)
      goto LABEL_47;
    sub_23F6B5AE0(*(_QWORD *)(v53 + 56) + *(_QWORD *)(v81 + 72) * v54, v82);
    v57 = v73;
    v58 = v73 + *(int *)(v77 + 48);
    v59 = sub_23F6B69FC();
    sub_23F6B705C(v59, v60);
    sub_23F6B705C(v52, v58);
    sub_23F6B5164(v57, 1, v51);
    if (v46)
    {
      v61 = sub_23F6B5164(v58, 1, v83);
      if (!v46)
        goto LABEL_45;
      sub_23F6B6F14();
    }
    else
    {
      sub_23F6B705C(v57, v71);
      sub_23F6B5164(v58, 1, v83);
      if (v62)
      {
        sub_23F6B69F4();
LABEL_45:
        sub_23F6B6034(v61, &qword_256EA25F8);
LABEL_46:
        sub_23F6B6E3C();
LABEL_47:
        sub_23F6B69B0();
        goto LABEL_48;
      }
      sub_23F6B6B14(v58, v70);
      static TranscriptProtoAstflatValueEnum.== infix(_:_:)();
      v64 = v63;
      sub_23F6B54E0();
      sub_23F6B54E0();
      sub_23F6B6F14();
      if ((v64 & 1) == 0)
        goto LABEL_46;
    }
    sub_23F6B53A4();
    sub_23F6B4EEC((uint64_t)&qword_256EA2598);
    v65 = sub_23F6B6200();
    sub_23F6B5B40();
    sub_23F6B5B40();
    v26 = v50;
    v3 = v49;
    v24 = v48;
    if ((v65 & 1) == 0)
      goto LABEL_49;
  }
  v42 = *(_QWORD *)(v68 + 8 * v43);
  if (v42)
  {
LABEL_17:
    v39 = v43;
LABEL_14:
    v28 = (v42 - 1) & v42;
    v29 = __clz(__rbit64(v42)) + (v39 << 6);
    v76 = v39;
    goto LABEL_9;
  }
  while (!__OFADD__(v43, 1))
  {
    sub_23F6B6E10();
    if (v40 == v41)
    {
      v76 = v67;
      goto LABEL_28;
    }
    sub_23F6B56E8();
    if (v42)
      goto LABEL_14;
  }
LABEL_51:
  __break(1u);
}

void sub_23F69BFA0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  sub_23F6B50E8();
  v2 = v1;
  v4 = v3;
  v57 = sub_23F6B6B74();
  v60 = *(_QWORD *)(v57 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B631C();
  v8 = (uint64_t *)(v6 - v7);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v53 - v10);
  sub_23F6916B8(&qword_256EA25C0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5CD4();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v53 - v14;
  if (v4 == v2 || *(_QWORD *)(v4 + 16) != *(_QWORD *)(v2 + 16))
  {
LABEL_44:
    sub_23F693DDC();
    return;
  }
  v58 = 0;
  v56 = v4;
  v18 = *(_QWORD *)(v4 + 64);
  v17 = v4 + 64;
  v16 = v18;
  v19 = 1 << *(_BYTE *)(v17 - 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & v16;
  sub_23F6B5AE8();
  v54 = v17;
  v55 = v22;
  v53 = v22 - 1;
  v59 = v15;
  while (1)
  {
    if (v21)
    {
      v21 &= v21 - 1;
LABEL_8:
      sub_23F6B64A4();
      v25 = *v23;
      v24 = v23[1];
      sub_23F6B6CFC();
      v29 = v28 + v26 * v27;
      v30 = sub_23F6B5D68();
      sub_23F6B5798(v29, (uint64_t)v0 + *(int *)(v30 + 48));
      *v0 = v25;
      v0[1] = v24;
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v0, 0, 1, v30);
      sub_23F6B54F8();
      v15 = v59;
      goto LABEL_30;
    }
    sub_23F6B6EC8();
    if (v31)
    {
      __break(1u);
      goto LABEL_46;
    }
    sub_23F6B6400();
    if (v33 != v31)
    {
      if (*(_QWORD *)(v54 + 8 * v32))
        goto LABEL_13;
      sub_23F6B710C(v32);
      if (v33 != v31)
      {
        if (*(_QWORD *)(v54 + 8 * v35))
          goto LABEL_13;
        sub_23F6B70D0();
        if (v33 != v31)
        {
          if (*(_QWORD *)(v54 + 8 * v36))
            goto LABEL_13;
          sub_23F6B70A8();
          if (v33 != v31)
            break;
        }
      }
    }
LABEL_29:
    v39 = sub_23F6B5D68();
    sub_23F6B6008((uint64_t)v0, v40, v41, v39);
LABEL_30:
    v42 = sub_23F6B6F88();
    sub_23F6B4EC0(v42, v43, &qword_256EA25C0);
    v44 = sub_23F6B5D68();
    sub_23F6B5164((uint64_t)v15, 1, v44);
    if (v45)
      goto LABEL_44;
    sub_23F6B6B14((uint64_t)&v15[*(int *)(v44 + 48)], (uint64_t)v11);
    v46 = sub_23F78C6DC();
    v48 = v47;
    sub_23F6B5AB0();
    if ((v48 & 1) == 0)
      goto LABEL_43;
    sub_23F6B5798(*(_QWORD *)(v2 + 56) + *(_QWORD *)(v60 + 72) * v46, (uint64_t)v8);
    v49 = *v11;
    if ((~*v8 & 0xF000000000000007) != 0)
    {
      v62 = *v8;
      if ((~v49 & 0xF000000000000007) == 0)
      {
        sub_23F6B678C();
LABEL_41:
        sub_23F6B6944();
LABEL_42:
        sub_23F6B69F4();
LABEL_43:
        sub_23F6B4FAC();
        goto LABEL_44;
      }
      v61 = v49;
      v50 = swift_retain_n();
      v51 = sub_23F6B5FA4(v50);
      swift_release();
      sub_23F6B68B4();
      if ((v51 & 1) == 0)
        goto LABEL_42;
    }
    else if ((~v49 & 0xF000000000000007) != 0)
    {
      goto LABEL_41;
    }
    sub_23F6B53A4();
    sub_23F6B4EEC((uint64_t)&qword_256EA2598);
    v52 = sub_23F6B5A5C();
    sub_23F6B54E0();
    sub_23F6B54E0();
    v15 = v59;
    if ((v52 & 1) == 0)
      goto LABEL_44;
  }
  if (*(_QWORD *)(v54 + 8 * v37))
  {
LABEL_13:
    sub_23F6B6AD4();
    v58 = v34;
    goto LABEL_8;
  }
  while (!__OFADD__(v37, 1))
  {
    sub_23F6B6400();
    if (v33 == v31)
    {
      v58 = v53;
      goto LABEL_29;
    }
    sub_23F6B56E8();
    if (v38)
      goto LABEL_13;
  }
LABEL_46:
  __break(1u);
}

void sub_23F69C368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _DWORD *v4;
  unsigned int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int v41;
  unint64_t v42;
  char v43;
  char v44;
  void (*v45)(uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  sub_23F6B50E8();
  sub_23F6B53E0();
  sub_23FB2EB1C();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B6618();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5F6C();
  sub_23F6916B8(&qword_256EA2670);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B7220();
  if (v11 || (sub_23F6B5518(), !v11))
  {
LABEL_31:
    sub_23F693DDC();
    return;
  }
  v54 = v0;
  v55 = 0;
  v53 = v1;
  sub_23F6B5754();
  v14 = v13 & v12;
  sub_23F6B5AE8();
  v51 = v1 + 64;
  v52 = v15;
  v50 = v15 - 1;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v55 << 6);
LABEL_7:
      v18 = *(_DWORD *)(*(_QWORD *)(v53 + 48) + 4 * v17);
      v19 = *(_QWORD *)(v53 + 56) + *(_QWORD *)(v6 + 72) * v17;
      v20 = sub_23F6B5D90();
      sub_23F6B633C((uint64_t)v4 + *(int *)(v20 + 48), v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
      *v4 = v18;
      v21 = sub_23F6B6230();
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v21, v22, v23, v24);
      v25 = v54;
      goto LABEL_25;
    }
    v26 = v55 + 1;
    if (__OFADD__(v55, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    v25 = v54;
    if (v26 < v52)
    {
      if (*(_QWORD *)(v51 + 8 * v26))
        goto LABEL_11;
      v31 = v55 + 2;
      ++v55;
      if (v26 + 1 < v52)
      {
        if (*(_QWORD *)(v51 + 8 * v31))
          goto LABEL_11;
        v55 = v26 + 1;
        if (v26 + 2 < v52)
        {
          if (*(_QWORD *)(v51 + 8 * (v26 + 2)))
            goto LABEL_11;
          v32 = v26 + 3;
          v55 = v26 + 2;
          if (v26 + 3 < v52)
            break;
        }
      }
    }
LABEL_24:
    v34 = sub_23F6B5D90();
    sub_23F6B5A8C((uint64_t)v4, v35, v36, v34);
    v14 = 0;
LABEL_25:
    v37 = sub_23F6B6224();
    sub_23F6B4EC0(v37, v38, &qword_256EA2670);
    v39 = sub_23F6B5D90();
    sub_23F6B5164((uint64_t)v5, 1, v39);
    if (v11)
      goto LABEL_31;
    v40 = (uint64_t)v5 + *(int *)(v39 + 48);
    v41 = *v5;
    sub_23F6B633C(v3, v40, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32));
    v42 = sub_23F78C718(v41);
    if ((v43 & 1) == 0)
    {
      v48 = sub_23F6B6964();
      v49(v48);
      goto LABEL_31;
    }
    sub_23F6B633C(v2, *(_QWORD *)(v25 + 56) + *(_QWORD *)(v6 + 72) * v42, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
    sub_23F6B4EEC((uint64_t)&qword_256EA2620);
    sub_23F6B7194();
    v44 = sub_23F6B6060();
    v45 = *(void (**)(uint64_t))(v6 + 8);
    v46 = sub_23F6B6098();
    v45(v46);
    v47 = sub_23F6B6964();
    v45(v47);
    if ((v44 & 1) == 0)
      goto LABEL_31;
  }
  if (*(_QWORD *)(v51 + 8 * v32))
  {
LABEL_11:
    sub_23F6B6AC4();
    v14 = v28 & v27;
    v17 = v30 + (v29 << 6);
    v55 = v29;
    goto LABEL_7;
  }
  while (!__OFADD__(v32, 1))
  {
    if (v32 + 1 >= v52)
    {
      v55 = v50;
      goto LABEL_24;
    }
    sub_23F6B56E8();
    if (v33)
      goto LABEL_11;
  }
LABEL_33:
  __break(1u);
}

void sub_23F69C660()
{
  sub_23F69D608();
}

void sub_23F69C684()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  sub_23F6B50E8();
  v5 = sub_23F6B53E0();
  v53 = type metadata accessor for TranscriptProtoStatementID(v5);
  v55 = *(_QWORD *)(v53 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B5C9C();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v48 - v8;
  sub_23F6916B8(&qword_256EA25D0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B7220();
  if (!v47)
  {
    sub_23F6B5518();
    if (v47)
    {
      v54 = 0;
      v51 = v4;
      v52 = v1;
      v14 = *(_QWORD *)(v1 + 64);
      v13 = v1 + 64;
      v12 = v14;
      v15 = 1 << *(_BYTE *)(v13 - 32);
      v16 = -1;
      if (v15 < 64)
        v16 = ~(-1 << v15);
      v17 = v16 & v12;
      sub_23F6B5AE8();
      v49 = v13;
      v50 = v18;
      v48 = v18 - 1;
      if (!v17)
        goto LABEL_9;
LABEL_7:
      v19 = v2;
      v20 = v0;
      v21 = &qword_256EA25D8;
      v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v23 = v22 | (v54 << 6);
LABEL_8:
      v24 = (uint64_t *)(*(_QWORD *)(v52 + 48) + 16 * v23);
      v25 = *v24;
      v26 = v24[1];
      v27 = *(_QWORD *)(v52 + 56) + *(_QWORD *)(v55 + 72) * v23;
      v28 = sub_23F6916B8(v21);
      sub_23F6B4F24(v27, (uint64_t)v3 + *(int *)(v28 + 48), type metadata accessor for TranscriptProtoStatementID);
      *v3 = v25;
      v3[1] = v26;
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v3, 0, 1, v28);
      sub_23F6B54F8();
      v0 = v20;
      v2 = v19;
      v4 = v51;
      while (1)
      {
        v37 = sub_23F6B6224();
        sub_23F6B4EC0(v37, v38, &qword_256EA25D0);
        v39 = sub_23F6916B8(&qword_256EA25D8);
        sub_23F6B5164(v4, 1, v39);
        if (v47)
          goto LABEL_45;
        sub_23F6B4FD0(v4 + *(int *)(v39 + 48), (uint64_t)v9, type metadata accessor for TranscriptProtoStatementID);
        sub_23F6B619C();
        v40 = sub_23F78C6DC();
        v42 = v41;
        sub_23F6B5908();
        if ((v42 & 1) == 0)
          goto LABEL_44;
        sub_23F6B60F4(*(_QWORD *)(v0 + 56) + *(_QWORD *)(v55 + 72) * v40, v2);
        sub_23F6B610C();
        if (!v47)
        {
LABEL_43:
          sub_23F6B693C();
LABEL_44:
          sub_23F6B6540();
          goto LABEL_45;
        }
        sub_23F6B6CD8();
        if (v44)
        {
          if (!v43)
            goto LABEL_43;
          sub_23F6B60FC();
          v47 = v47 && v45 == v46;
          if (!v47 && (sub_23F6B5280() & 1) == 0)
            goto LABEL_43;
        }
        else if (v43)
        {
          goto LABEL_43;
        }
        sub_23F6B53A4();
        sub_23F6B4EEC((uint64_t)&qword_256EA2598);
        sub_23F6B619C();
        if ((sub_23FB2F11C() & 1) == 0)
          goto LABEL_43;
        sub_23F6B5500();
        sub_23F6B5500();
        if (v17)
          goto LABEL_7;
LABEL_9:
        v29 = v54 + 1;
        if (__OFADD__(v54, 1))
          break;
        if (v29 < v50)
        {
          if (*(_QWORD *)(v49 + 8 * v29))
            goto LABEL_12;
          v31 = v54 + 2;
          ++v54;
          if (v29 + 1 < v50)
          {
            if (*(_QWORD *)(v49 + 8 * v31))
              goto LABEL_12;
            v54 = v29 + 1;
            if (v29 + 2 < v50)
            {
              if (*(_QWORD *)(v49 + 8 * (v29 + 2)))
                goto LABEL_12;
              v32 = v29 + 3;
              v54 = v29 + 2;
              if (v29 + 3 < v50)
              {
                if (*(_QWORD *)(v49 + 8 * v32))
                {
LABEL_12:
                  v19 = v2;
                  v20 = v0;
                  sub_23F6B6AD4();
                  v54 = v30;
                  goto LABEL_8;
                }
                while (!__OFADD__(v32, 1))
                {
                  if (v32 + 1 >= v50)
                  {
                    v54 = v48;
                    goto LABEL_25;
                  }
                  sub_23F6B56E8();
                  if (v33)
                    goto LABEL_12;
                }
                goto LABEL_47;
              }
            }
          }
        }
LABEL_25:
        v34 = sub_23F6916B8(&qword_256EA25D8);
        sub_23F6B6008((uint64_t)v3, v35, v36, v34);
      }
      __break(1u);
LABEL_47:
      __break(1u);
      return;
    }
  }
LABEL_45:
  sub_23F693DDC();
}

void sub_23F69CA44()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  sub_23F6B632C();
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5644(v9, v32);
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5F6C();
  sub_23F6916B8(&qword_256EA26A8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B52C8();
  v13 = MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5F44(v13, v14, v15, v16, v17, v18, v19, v20, v33);
  if (v21 || (sub_23F6B5E3C(), !v21))
  {
LABEL_36:
    sub_23F693DDC();
    return;
  }
  sub_23F6B5338();
  while (1)
  {
    if (v1)
    {
      sub_23F6B5AF4();
LABEL_7:
      v22 = sub_23F6B5778();
      sub_23F6B5910(v22);
      *v2 = v7;
      v2[1] = v5;
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v2, 0, 1, v3);
      sub_23F6B54F8();
      goto LABEL_30;
    }
    if (__OFADD__(v36, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    sub_23F6B6398();
    if (v24 != v25)
    {
      if (*(_QWORD *)(v35 + 8 * v23))
        goto LABEL_12;
      sub_23F6B62C8(v23);
      if (v24 != v25)
      {
        if (*(_QWORD *)(v35 + 8 * v26))
          goto LABEL_16;
        sub_23F6B62B4();
        if (v24 != v25)
          break;
      }
    }
LABEL_29:
    v29 = sub_23F6B5D98();
    sub_23F6B5E48(v29);
LABEL_30:
    v30 = sub_23F6B69A0();
    sub_23F6B4EC0(v30, v31, &qword_256EA26A8);
    v5 = sub_23F6B5D98();
    sub_23F6B5164(v0, 1, v5);
    if (v21)
      goto LABEL_36;
    sub_23F6B5480();
    sub_23F6B5FC8();
    sub_23F6B5D1C();
    if ((v7 & 1) == 0)
    {
      sub_23F6B5F94();
      goto LABEL_36;
    }
    sub_23F6B5880();
    sub_23F6B4EEC((uint64_t)&qword_256EA2620);
    sub_23F6B5A74();
    sub_23F6B5D70();
    sub_23F6B60AC((uint64_t)v2);
    sub_23F6B61BC();
    if ((v5 & 1) == 0)
      goto LABEL_36;
  }
  if (*(_QWORD *)(v35 + 8 * v27))
  {
    v23 = v27;
    goto LABEL_12;
  }
  sub_23F6B6298();
  if (v24 == v25)
    goto LABEL_29;
  if (*(_QWORD *)(v35 + 8 * v26))
  {
LABEL_16:
    v23 = v26;
LABEL_12:
    sub_23F6B5B90(v23);
    goto LABEL_7;
  }
  while (!__OFADD__(v26, 1))
  {
    sub_23F6B6398();
    if (v24 == v25)
    {
      v36 = v34;
      goto LABEL_29;
    }
    sub_23F6B56E8();
    if (v28)
      goto LABEL_12;
  }
LABEL_38:
  __break(1u);
}

void sub_23F69CC68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  int v55;
  uint64_t *v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  char v73;
  char v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t);
  void (*v80)(uint64_t);
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;

  sub_23F6B50E8();
  v7 = sub_23F6B53E0();
  type metadata accessor for TranscriptProtoUnresolvedParameterValue(v7);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F6B632C();
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B53AC();
  v99 = sub_23F6916B8(&qword_256EA2680);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B5544(v14, v86);
  v107 = type metadata accessor for TranscriptProtoShimParameterResolutionEnum(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B5CD4();
  MEMORY[0x24BDAC7A8](v16);
  v96 = (uint64_t)&v86 - v17;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B6580();
  v104 = v19;
  sub_23F6916B8(&qword_256EA2688);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5598(v21, v86);
  v106 = sub_23F6916B8(&qword_256EA2690);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v22);
  v23 = sub_23F6B5864();
  v103 = type metadata accessor for TranscriptProtoShimParameterResolution(v23);
  v111 = *(_QWORD *)(v103 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v24);
  v112 = (uint64_t)&v86 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F6B6580();
  v101 = v27;
  sub_23F6916B8(&qword_256EA2698);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v28);
  v108 = (char *)&v86 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F6B6B3C();
  if (v1 == v0 || (sub_23F6B5518(), !v54))
  {
LABEL_53:
    sub_23F693DDC();
    return;
  }
  v92 = v5;
  v88 = v4;
  v90 = v3;
  v91 = v11;
  v89 = v10;
  v102 = v0;
  v31 = 0;
  v98 = v1;
  v93 = v1 + 64;
  sub_23F6B5460();
  v95 = v33;
  v87 = v33 - 1;
  v34 = &qword_256EA2688;
  v35 = v101;
  while (1)
  {
    if (v32)
    {
      sub_23F6B5EF8();
      v36 = v108;
LABEL_7:
      sub_23F6B64A4();
      v39 = *v37;
      v38 = v37[1];
      sub_23F6B6CFC();
      v43 = v42 + v40 * v41;
      v44 = sub_23F6B6244();
      sub_23F6B4F24(v43, (uint64_t)v36 + *(int *)(v44 + 48), type metadata accessor for TranscriptProtoShimParameterResolution);
      *v36 = v39;
      v36[1] = v38;
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v36, 0, 1, v44);
      sub_23F6B5508();
      goto LABEL_25;
    }
    v45 = v31 + 1;
    v36 = v108;
    if (__OFADD__(v31, 1))
    {
      __break(1u);
      goto LABEL_55;
    }
    if (v45 < v95)
    {
      if (*(_QWORD *)(v93 + 8 * v45))
        goto LABEL_11;
      v47 = v31 + 2;
      ++v31;
      if (v45 + 1 < v95)
      {
        if (*(_QWORD *)(v93 + 8 * v47))
          goto LABEL_11;
        v31 = v45 + 1;
        if (v45 + 2 < v95)
        {
          if (*(_QWORD *)(v93 + 8 * (v45 + 2)))
            goto LABEL_11;
          v48 = v45 + 3;
          v31 = v45 + 2;
          if (v45 + 3 < v95)
            break;
        }
      }
    }
LABEL_24:
    v50 = sub_23F6B6244();
    sub_23F6B6920((uint64_t)v36, v51, v52, v50);
LABEL_25:
    sub_23F6B4EC0((uint64_t)v36, v6, &qword_256EA2698);
    v53 = sub_23F6B6244();
    sub_23F6B5164(v6, 1, v53);
    if (v54)
      v55 = 1;
    else
      v55 = 0;
    if (v54)
      goto LABEL_53;
    v109 = v55;
    v56 = v34;
    sub_23F6B4FD0(v6 + *(int *)(v53 + 48), v35, type metadata accessor for TranscriptProtoShimParameterResolution);
    sub_23F6B68CC();
    v57 = v102;
    v58 = sub_23F78C6DC();
    v60 = v59;
    sub_23F6B5AB0();
    if ((v60 & 1) == 0)
      goto LABEL_52;
    sub_23F6B5EDC(*(_QWORD *)(v57 + 56) + *(_QWORD *)(v111 + 72) * v58, v112);
    v61 = v2 + *(int *)(v106 + 48);
    v62 = sub_23F6B5EE4();
    sub_23F6B6A10(v62, v63);
    v64 = sub_23F6B69B8();
    sub_23F6B6A10(v64, v65);
    v66 = v107;
    sub_23F6B5164(v2, 1, v107);
    if (v54)
    {
      sub_23F6B5164(v61, 1, v66);
      if (!v54)
        goto LABEL_51;
    }
    else
    {
      v67 = v105;
      sub_23F6B6474(v2, v105);
      sub_23F6B5164(v61, 1, v66);
      if (v68)
        goto LABEL_50;
      v97 = v31;
      v69 = v104;
      sub_23F6B7064(v61, v104);
      v70 = v100;
      v71 = v100 + *(int *)(v99 + 48);
      sub_23F6B5AE0(v67, v100);
      sub_23F6B5AE0(v69, v71);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_23F6B5EDC(v70, v92);
        v72 = sub_23F6B5FBC();
        v31 = v97;
        if (v72 != 1)
        {
          sub_23F6B69B0();
LABEL_48:
          sub_23F6B4F84(v70, &qword_256EA2680);
LABEL_49:
          sub_23F6B6540();
LABEL_50:
          sub_23F6B69F4();
LABEL_51:
          sub_23F6B64F4(v2);
          sub_23F6B6E3C();
LABEL_52:
          sub_23F6B69B0();
          goto LABEL_53;
        }
        sub_23F6B4FD0(v71, (uint64_t)v89, type metadata accessor for TranscriptProtoUnresolvedParameterValue);
        static TranscriptProtoUnresolvedParameterValue.== infix(_:_:)();
        v74 = v73;
        sub_23F6B53D0();
        sub_23F6B53D0();
        sub_23F6B6058();
        v35 = v101;
        if ((v74 & 1) == 0)
          goto LABEL_49;
      }
      else
      {
        sub_23F6B4F24(v70, v96, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
        v75 = sub_23F6B5FBC();
        v31 = v97;
        if (v75 == 1)
        {
          v84 = sub_23F6B5288();
          v85(v84, v91);
          goto LABEL_48;
        }
        v76 = v90;
        v77 = v88;
        v78 = sub_23F6B69B8();
        v79(v78);
        v94 = sub_23FB2EB10();
        v80 = *(void (**)(uint64_t))(v76 + 8);
        v81 = v77;
        v35 = v101;
        sub_23F6B60AC(v81);
        v82 = sub_23F6B6AAC();
        v80(v82);
        sub_23F6B5500();
        if ((v94 & 1) == 0)
          goto LABEL_49;
      }
      sub_23F6B6058();
      sub_23F6B6058();
      v34 = v56;
    }
    sub_23F6B4F84(v2, v34);
    v83 = v112 + *(_DWORD *)(v103 + 20);
    sub_23F6B53A4();
    sub_23F6B4EEC((uint64_t)&qword_256EA2598);
    sub_23F6B68CC();
    sub_23F6B5D84();
    sub_23F6B6860();
    sub_23F6B5684();
    sub_23F6B5684();
    v32 = v110;
    if ((v83 & 1) == 0)
      goto LABEL_53;
  }
  if (*(_QWORD *)(v93 + 8 * v48))
  {
LABEL_11:
    sub_23F6B6518();
    v31 = v46;
    goto LABEL_7;
  }
  while (!__OFADD__(v48, 1))
  {
    if (v48 + 1 >= v95)
    {
      v31 = v87;
      goto LABEL_24;
    }
    sub_23F6B56E8();
    if (v49)
      goto LABEL_11;
  }
LABEL_55:
  __break(1u);
}

void sub_23F69D3C0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  sub_23F6B6634();
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5644(v9, v32);
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5F6C();
  sub_23F6916B8((uint64_t *)&unk_256EA27B0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B52C8();
  v13 = MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5F44(v13, v14, v15, v16, v17, v18, v19, v20, v33);
  if (v21 || (sub_23F6B5E3C(), !v21))
  {
LABEL_36:
    sub_23F693DDC();
    return;
  }
  sub_23F6B5338();
  while (1)
  {
    if (v1)
    {
      sub_23F6B5AF4();
LABEL_7:
      v22 = sub_23F6B5778();
      sub_23F6B5910(v22);
      *v2 = v7;
      v2[1] = v5;
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v2, 0, 1, v3);
      sub_23F6B54F8();
      goto LABEL_30;
    }
    if (__OFADD__(v36, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    sub_23F6B6398();
    if (v24 != v25)
    {
      if (*(_QWORD *)(v35 + 8 * v23))
        goto LABEL_12;
      sub_23F6B62C8(v23);
      if (v24 != v25)
      {
        if (*(_QWORD *)(v35 + 8 * v26))
          goto LABEL_16;
        sub_23F6B62B4();
        if (v24 != v25)
          break;
      }
    }
LABEL_29:
    v29 = sub_23F6B5D98();
    sub_23F6B5E48(v29);
LABEL_30:
    v30 = sub_23F6B69A0();
    sub_23F6B4EC0(v30, v31, (uint64_t *)&unk_256EA27B0);
    v5 = sub_23F6B5D98();
    sub_23F6B5164(v0, 1, v5);
    if (v21)
      goto LABEL_36;
    sub_23F6B5480();
    sub_23F6B5FC8();
    sub_23F6B5D1C();
    if ((v7 & 1) == 0)
    {
      sub_23F6B5F94();
      goto LABEL_36;
    }
    sub_23F6B5880();
    sub_23F6B4EEC((uint64_t)&unk_256EA2710);
    sub_23F6B5A74();
    sub_23F6B5D70();
    sub_23F6B60AC((uint64_t)v2);
    sub_23F6B61BC();
    if ((v5 & 1) == 0)
      goto LABEL_36;
  }
  if (*(_QWORD *)(v35 + 8 * v27))
  {
    v23 = v27;
    goto LABEL_12;
  }
  sub_23F6B6298();
  if (v24 == v25)
    goto LABEL_29;
  if (*(_QWORD *)(v35 + 8 * v26))
  {
LABEL_16:
    v23 = v26;
LABEL_12:
    sub_23F6B5B90(v23);
    goto LABEL_7;
  }
  while (!__OFADD__(v26, 1))
  {
    sub_23F6B6398();
    if (v24 == v25)
    {
      v36 = v34;
      goto LABEL_29;
    }
    sub_23F6B56E8();
    if (v28)
      goto LABEL_12;
  }
LABEL_38:
  __break(1u);
}

void sub_23F69D5E4()
{
  sub_23F69D608();
}

void sub_23F69D608()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t, uint64_t);
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  sub_23F6B50E8();
  v53 = v3;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v57 = *(_QWORD *)(sub_23F6B60B4(v10, v8, v12) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  v52 = (uint64_t)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B5F5C();
  v54 = v7;
  sub_23F6B6088();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B6B3C();
  if (v11 == v9 || (sub_23F6B5E3C(), !v18))
  {
LABEL_32:
    sub_23F693DDC();
    return;
  }
  v55 = 0;
  v56 = v5;
  v51 = v11;
  sub_23F6B5754();
  v21 = v20 & v19;
  sub_23F6B5AE8();
  v49 = v11 + 64;
  v50 = v22;
  v48 = v22 - 1;
  while (1)
  {
    if (v21)
    {
      v21 &= v21 - 1;
LABEL_7:
      sub_23F6B64A4();
      v25 = *v23;
      v24 = v23[1];
      v28 = v27 + *(_QWORD *)(v57 + 72) * v26;
      v29 = sub_23F6B6088();
      sub_23F6B5AB8(v28, (uint64_t)v1 + *(int *)(v29 + 48));
      *v1 = v25;
      v1[1] = v24;
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v1, 0, 1, v29);
      sub_23F6B6254();
      goto LABEL_26;
    }
    if (__OFADD__(v55, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    sub_23F6B6400();
    if (v31 != v32)
    {
      if (*(_QWORD *)(v49 + 8 * v30))
        goto LABEL_12;
      v55 = v30;
      if (v30 + 1 < v50)
      {
        if (*(_QWORD *)(v49 + 8 * (v30 + 1)))
          goto LABEL_12;
        v55 = v30 + 1;
        if (v30 + 2 < v50)
        {
          if (*(_QWORD *)(v49 + 8 * (v30 + 2)))
            goto LABEL_12;
          v36 = v30 + 3;
          v55 = v30 + 2;
          if (v30 + 3 < v50)
            break;
        }
      }
    }
LABEL_25:
    v38 = sub_23F6B6088();
    sub_23F6B5A8C((uint64_t)v1, v39, v40, v38);
    v21 = 0;
LABEL_26:
    sub_23F6B4EC0((uint64_t)v1, v2, v54);
    v41 = sub_23F6B6088();
    sub_23F6B5164(v2, 1, v41);
    if (v18)
      goto LABEL_32;
    sub_23F6B625C(v2 + *(int *)(v41 + 48), v0);
    v42 = sub_23F78C6DC();
    v44 = v43;
    sub_23F6B644C();
    if ((v44 & 1) == 0)
    {
      sub_23F6B5178();
      goto LABEL_32;
    }
    v45 = *(_QWORD *)(v9 + 56) + *(_QWORD *)(v57 + 72) * v42;
    v46 = v52;
    sub_23F6B5AB8(v45, v52);
    v47 = v53(v46, v0);
    sub_23F6B5178();
    sub_23F6B5178();
    if ((v47 & 1) == 0)
      goto LABEL_32;
  }
  if (*(_QWORD *)(v49 + 8 * v36))
  {
LABEL_12:
    sub_23F6B6AC4();
    v21 = v34 & v33;
    v55 = v35;
    goto LABEL_7;
  }
  while (!__OFADD__(v36, 1))
  {
    sub_23F6B6400();
    if (v31 == v32)
    {
      v55 = v48;
      goto LABEL_25;
    }
    sub_23F6B56E8();
    if (v37)
      goto LABEL_12;
  }
LABEL_34:
  __break(1u);
}

void sub_23F69D90C()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  sub_23F6B50E8();
  sub_23F6B53E0();
  sub_23FB2ED8C();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v6);
  v32 = (uint64_t)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B6308();
  v9 = sub_23FB2EDD4();
  v36 = *(_QWORD *)(v9 - 8);
  v37 = v9;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B537C(v11, v29[0]);
  sub_23F6916B8(&qword_256EA2718);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5C80();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B7234();
  if (v25)
  {
    v34 = 1;
LABEL_39:
    sub_23F693DDC();
    return;
  }
  sub_23F6B5518();
  if (!v25)
  {
LABEL_38:
    v34 = 0;
    goto LABEL_39;
  }
  sub_23F6B56F4();
  while (1)
  {
    if (v5)
    {
      sub_23F6B6550();
LABEL_7:
      sub_23F6B5F24();
      v14 = sub_23F6B5D68();
      sub_23F6B5DF0(v1 + *(int *)(v14 + 48), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
      sub_23F6B5BAC(v1);
      goto LABEL_30;
    }
    sub_23F6B6EC8();
    if (v15)
    {
      __break(1u);
      goto LABEL_41;
    }
    sub_23F6B7154();
    if (v17 != v15)
    {
      if (*(_QWORD *)(v30 + 8 * v16))
        goto LABEL_12;
      sub_23F6B7120(v16);
      if (v17 != v15)
      {
        if (*(_QWORD *)(v30 + 8 * v18))
          goto LABEL_16;
        sub_23F6B70E4();
        if (v17 != v15)
          break;
      }
    }
LABEL_29:
    v21 = sub_23F6B5D68();
    sub_23F6B6008(v1, v22, v23, v21);
LABEL_30:
    sub_23F6B4EC0(v1, v3, &qword_256EA2718);
    v24 = sub_23F6B5D68();
    sub_23F6B5164(v3, 1, v24);
    if (v25)
      v26 = 1;
    else
      v26 = 0;
    v34 = v26;
    if (v25)
      goto LABEL_39;
    sub_23F6B59B0();
    sub_23F6B5DD4();
    v27 = v31;
    sub_23F78C74C();
    sub_23F6B606C();
    if ((v0 & 1) == 0)
    {
      sub_23F6B6A84();
      goto LABEL_38;
    }
    v28 = *(_QWORD *)(v27 + 56) + *(_QWORD *)(v1 + 72) * v4;
    v4 = v32;
    sub_23F6B5EF0(v32, v28, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
    sub_23F6B4EEC((uint64_t)&unk_256EA2728);
    sub_23F6B61E8();
    sub_23F6B634C();
    sub_23F6B6EEC();
    sub_23F6B7000();
    v5 = v35;
  }
  if (*(_QWORD *)(v30 + 8 * v19))
  {
    v16 = v19;
    goto LABEL_12;
  }
  sub_23F6B7094();
  if (v17 == v15)
    goto LABEL_29;
  if (*(_QWORD *)(v30 + 8 * v18))
  {
LABEL_16:
    v16 = v18;
LABEL_12:
    sub_23F6B64FC(v16);
    goto LABEL_7;
  }
  while (!__OFADD__(v18, 1))
  {
    sub_23F6B7154();
    if (v17 == v15)
    {
      v33 = v29[1];
      goto LABEL_29;
    }
    sub_23F6B56E8();
    if (v20)
      goto LABEL_12;
  }
LABEL_41:
  __break(1u);
}

void sub_23F69DB94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;

  sub_23F6B50E8();
  v4 = v3;
  v5 = sub_23F6B5AC8();
  v67 = *(_QWORD *)(type metadata accessor for Candidate(v5) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B5C9C();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v57 - v8;
  sub_23F6916B8(&qword_256EA26E8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v68 = (uint64_t)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v57 - v13;
  if (v0 == v4)
    goto LABEL_35;
  sub_23F6B5E3C();
  if (!v15)
    goto LABEL_35;
  v64 = 0;
  v62 = v0;
  v63 = v4;
  sub_23F6B5460();
  v60 = v0 + 64;
  v61 = v16;
  v58 = v16 - 1;
  v59 = "ntityQuery";
  v66 = v14;
  if (v17)
  {
    sub_23F6B71A8();
    sub_23F6B5EF8();
    v19 = v18 | (v64 << 6);
    v20 = v62;
LABEL_6:
    v21 = *(_QWORD *)(v20 + 48) + 32 * v19;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v24 = *(_QWORD *)(v21 + 16);
    v25 = *(_BYTE *)(v21 + 24);
    v26 = *(_QWORD *)(v20 + 56) + *(_QWORD *)(v67 + 72) * v19;
    v27 = sub_23F6B5D90();
    sub_23F6B4F24(v26, v2 + *(int *)(v27 + 48), type metadata accessor for Candidate);
    *(_QWORD *)v2 = v22;
    *(_QWORD *)(v2 + 8) = v23;
    *(_QWORD *)(v2 + 16) = v24;
    *(_BYTE *)(v2 + 24) = v25;
    v28 = sub_23F6B6230();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v28, v29, v30, v31);
    swift_bridgeObjectRetain();
    v9 = (char *)v1;
    v1 = v4;
    v14 = v66;
    goto LABEL_28;
  }
  sub_23F6B6EC8();
  if (v32)
  {
    __break(1u);
LABEL_37:
    __break(1u);
    JUMPOUT(0x23F69E0C8);
  }
  sub_23F6B6400();
  if (v34 != v32)
  {
    if (!*(_QWORD *)(v60 + 8 * v33))
    {
      sub_23F6B710C(v33);
      if (v34 == v32)
        goto LABEL_27;
      if (!*(_QWORD *)(v60 + 8 * v38))
      {
        sub_23F6B70D0();
        if (v34 == v32)
          goto LABEL_27;
        if (!*(_QWORD *)(v60 + 8 * v39))
        {
          sub_23F6B70A8();
          if (v34 == v32)
            goto LABEL_27;
          if (!*(_QWORD *)(v60 + 8 * v40))
          {
            while (1)
            {
              if (__OFADD__(v40, 1))
                goto LABEL_37;
              sub_23F6B6400();
              if (v34 == v32)
                break;
              sub_23F6B56E8();
              if (v41)
                goto LABEL_11;
            }
            v64 = v58;
            goto LABEL_27;
          }
        }
      }
    }
LABEL_11:
    sub_23F6B71A8();
    sub_23F6B5DC0();
    v64 = v35;
    v65 = v36;
    v19 = v37 + (v35 << 6);
    goto LABEL_6;
  }
LABEL_27:
  v42 = sub_23F6B5D90();
  sub_23F6B6920(v68, v43, v44, v42);
LABEL_28:
  sub_23F6B4EC0(v68, (uint64_t)v14, &qword_256EA26E8);
  v45 = sub_23F6B5D90();
  v46 = sub_23F6B6F68();
  sub_23F6B5164(v46, v47, v45);
  if (!v15)
  {
    v48 = (uint64_t)&v14[*(int *)(v45 + 48)];
    v49 = *(_QWORD *)v14;
    v50 = *((_QWORD *)v14 + 1);
    v51 = *((_QWORD *)v14 + 2);
    v52 = v14[24];
    sub_23F6B4FD0(v48, (uint64_t)v9, type metadata accessor for Candidate);
    v53 = v63;
    v54 = sub_23F78C7B0(v49, v50, v51, v52);
    LOBYTE(v51) = v55;
    swift_bridgeObjectRelease();
    if ((v51 & 1) != 0)
    {
      sub_23F6B5AC0(*(_QWORD *)(v53 + 56) + *(_QWORD *)(v67 + 72) * v54, v1);
      sub_23F6B6964();
      if ((sub_23FB2ED14() & 1) != 0)
      {
        sub_23F6B72F0();
        __asm { BR              X10 }
      }
      sub_23F6B693C();
    }
    sub_23F6B4FAC();
  }
LABEL_35:
  sub_23F693DDC();
}

void sub_23F69E108()
{
  sub_23F69D608();
}

void sub_23F69E12C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  char v15;

  sub_23F6B50E8();
  if (v4 == v5 || (v6 = v5, v7 = v4, sub_23F6B66DC(), !v8))
  {
LABEL_23:
    sub_23F693DDC();
    return;
  }
  sub_23F6B592C();
  while (1)
  {
    if (v3)
    {
      sub_23F6B6BC8();
      goto LABEL_21;
    }
    v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v1)
      goto LABEL_23;
    ++v2;
    if (!*(_QWORD *)(v0 + 8 * v10))
    {
      v2 = v10 + 1;
      if (v10 + 1 >= v1)
        goto LABEL_23;
      if (!*(_QWORD *)(v0 + 8 * v2))
      {
        v2 = v10 + 2;
        if (v10 + 2 >= v1)
          goto LABEL_23;
        if (!*(_QWORD *)(v0 + 8 * v2))
          break;
      }
    }
LABEL_20:
    sub_23F6B6B98();
LABEL_21:
    v12 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v9);
    sub_23F6B5F1C();
    sub_23F6B5EE4();
    v13 = sub_23F78C6DC();
    v15 = v14;
    sub_23F6B5908();
    if ((v15 & 1) == 0 || *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v13) != v12)
      goto LABEL_23;
  }
  v11 = v10 + 3;
  if (v11 >= v1)
    goto LABEL_23;
  if (*(_QWORD *)(v0 + 8 * v11))
  {
    v2 = v11;
    goto LABEL_20;
  }
  while (1)
  {
    v2 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v2 >= v1)
      goto LABEL_23;
    ++v11;
    if (*(_QWORD *)(v0 + 8 * v2))
      goto LABEL_20;
  }
LABEL_25:
  __break(1u);
}

void sub_23F69E240()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  void (*v65)(uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  sub_23F6B50E8();
  v5 = v4;
  v6 = sub_23F6B5AC8();
  v72 = type metadata accessor for ClientAction.UnresolvedParameterValue(v6);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B5560(v8, v69);
  v9 = sub_23F6B6634();
  v76 = *(_QWORD *)(v9 - 8);
  v77 = v9;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5848(v11, v69);
  v83 = sub_23F6916B8(&qword_256EA2738);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23F6B5C2C();
  v86 = *(_QWORD *)(type metadata accessor for ClientAction.ShimParameterResolution(v13) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v14);
  v88 = (uint64_t)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v16);
  v75 = (uint64_t)&v69 - v17;
  sub_23F6B5664();
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v69 - v20;
  MEMORY[0x24BDAC7A8](v19);
  sub_23F6B62F8();
  sub_23F6916B8(&qword_256EA2740);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6B65E0();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F6B6580();
  v87 = v24;
  if (v0 == v5 || (sub_23F6B5E3C(), !v25))
  {
LABEL_44:
    sub_23F693DDC();
    return;
  }
  v81 = v2;
  v82 = 0;
  v78 = v0;
  v79 = v5;
  sub_23F6B5460();
  v70 = v0 + 64;
  v71 = v27;
  v69 = v27 - 1;
  v28 = &unk_256EA2748;
  v80 = v21;
  v84 = v3;
  while (1)
  {
    v29 = v87;
    if (v26)
    {
      sub_23F6B5EF8();
LABEL_7:
      sub_23F6B64A4();
      v32 = *v30;
      v31 = v30[1];
      sub_23F6B6CFC();
      v36 = v35 + v33 * v34;
      v37 = (uint64_t)v84 + *(int *)(sub_23F6B6088() + 48);
      v38 = v36;
      v3 = v84;
      sub_23F6B4F24(v38, v37, type metadata accessor for ClientAction.ShimParameterResolution);
      *v3 = v32;
      v3[1] = v31;
      sub_23F6B5BAC((uint64_t)v3);
      sub_23F6B5508();
      v2 = v81;
      v29 = v87;
      goto LABEL_26;
    }
    if (__OFADD__(v82, 1))
    {
      __break(1u);
      goto LABEL_46;
    }
    sub_23F6B6FD4();
    if (v40 != v41)
    {
      if (*(_QWORD *)(v70 + 8 * v39))
        goto LABEL_12;
      v82 = v39;
      if (v39 + 1 < v71)
      {
        if (*(_QWORD *)(v70 + 8 * (v39 + 1)))
          goto LABEL_12;
        v82 = v39 + 1;
        if (v39 + 2 < v71)
        {
          if (*(_QWORD *)(v70 + 8 * (v39 + 2)))
            goto LABEL_12;
          v43 = v39 + 3;
          v82 = v39 + 2;
          if (v39 + 3 < v71)
            break;
        }
      }
    }
LABEL_25:
    sub_23F6B6088();
    v45 = sub_23F6B6ED4();
    sub_23F6B6920(v45, v46, v47, v48);
LABEL_26:
    sub_23F6B4EC0((uint64_t)v3, v29, &qword_256EA2740);
    v49 = v28;
    v50 = sub_23F6B6088();
    v51 = sub_23F6B6F68();
    sub_23F6B5164(v51, v52, v50);
    if (v25)
      goto LABEL_44;
    sub_23F6B4FD0(v29 + *(int *)(v50 + 48), v2, type metadata accessor for ClientAction.ShimParameterResolution);
    sub_23F6B63F4();
    v53 = sub_23F78C6DC();
    v55 = v54;
    sub_23F6B5AB0();
    if ((v55 & 1) == 0)
      goto LABEL_43;
    v56 = (uint64_t)v80;
    sub_23F6B5DE8(*(_QWORD *)(v5 + 56) + *(_QWORD *)(v86 + 72) * v53, (uint64_t)v80);
    v57 = v1 + *(int *)(v83 + 48);
    sub_23F6B5DE8(v56, v1);
    sub_23F6B5DE8(v2, v57);
    sub_23F6B7194();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F6B5DE8(v1, v88);
      if (sub_23F6B6E5C() != 1)
      {
        sub_23F6B4FAC();
LABEL_41:
        sub_23F6B4F84(v1, &qword_256EA2738);
LABEL_42:
        sub_23F6B4FAC();
LABEL_43:
        sub_23F6B69B0();
        goto LABEL_44;
      }
      sub_23F6B4FD0(v57, v74, type metadata accessor for ClientAction.UnresolvedParameterValue);
      if ((sub_23FB2ED14() & 1) == 0 || (sub_23F6958A4(), (v58 & 1) == 0))
      {
        sub_23F6B5178();
        sub_23F6B5178();
LABEL_38:
        sub_23F6B6540();
        goto LABEL_42;
      }
      sub_23F6B5500();
      sub_23F6B5500();
    }
    else
    {
      v59 = v75;
      sub_23F6B5DE8(v1, v75);
      if (sub_23F6B6E5C() == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v59, v77);
        goto LABEL_41;
      }
      v60 = v76;
      v61 = v77;
      v62 = v1;
      v63 = v73;
      sub_23F6B5EF0(v73, v57, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v76 + 32));
      sub_23F6B689C();
      v64 = sub_23FB2ED14();
      v65 = *(void (**)(uint64_t))(v60 + 8);
      v66 = sub_23F6B68A8();
      v65(v66);
      v67 = v63;
      v1 = v62;
      v68 = v61;
      v2 = v81;
      ((void (*)(uint64_t, uint64_t))v65)(v67, v68);
      if ((v64 & 1) == 0)
        goto LABEL_38;
    }
    sub_23F6B6098();
    sub_23F6B4FAC();
    sub_23F6B60A4();
    sub_23F6B60A4();
    v5 = v79;
    v3 = v84;
    v26 = v85;
    v28 = v49;
  }
  if (*(_QWORD *)(v70 + 8 * v43))
  {
LABEL_12:
    sub_23F6B6518();
    v82 = v42;
    goto LABEL_7;
  }
  while (!__OFADD__(v43, 1))
  {
    sub_23F6B6FD4();
    if (v40 == v41)
    {
      v82 = v69;
      goto LABEL_25;
    }
    sub_23F6B56E8();
    if (v44)
      goto LABEL_12;
  }
LABEL_46:
  __break(1u);
}

void sub_23F69E78C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  sub_23F6B58C8();
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5644(v9, v32);
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5F6C();
  sub_23F6916B8(&qword_256EA27E0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B52C8();
  v13 = MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5F44(v13, v14, v15, v16, v17, v18, v19, v20, v33);
  if (v21 || (sub_23F6B5E3C(), !v21))
  {
LABEL_36:
    sub_23F693DDC();
    return;
  }
  sub_23F6B5338();
  while (1)
  {
    if (v1)
    {
      sub_23F6B5AF4();
LABEL_7:
      v22 = sub_23F6B5778();
      sub_23F6B5910(v22);
      *v2 = v7;
      v2[1] = v5;
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v2, 0, 1, v3);
      sub_23F6B54F8();
      goto LABEL_30;
    }
    if (__OFADD__(v36, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    sub_23F6B6398();
    if (v24 != v25)
    {
      if (*(_QWORD *)(v35 + 8 * v23))
        goto LABEL_12;
      sub_23F6B62C8(v23);
      if (v24 != v25)
      {
        if (*(_QWORD *)(v35 + 8 * v26))
          goto LABEL_16;
        sub_23F6B62B4();
        if (v24 != v25)
          break;
      }
    }
LABEL_29:
    v29 = sub_23F6B5D98();
    sub_23F6B5E48(v29);
LABEL_30:
    v30 = sub_23F6B69A0();
    sub_23F6B4EC0(v30, v31, &qword_256EA27E0);
    v5 = sub_23F6B5D98();
    sub_23F6B5164(v0, 1, v5);
    if (v21)
      goto LABEL_36;
    sub_23F6B5480();
    sub_23F6B5FC8();
    sub_23F6B5D1C();
    if ((v7 & 1) == 0)
    {
      sub_23F6B5F94();
      goto LABEL_36;
    }
    sub_23F6B5880();
    sub_23F6B4EEC((uint64_t)&unk_256EA27F0);
    sub_23F6B5A74();
    sub_23F6B5D70();
    sub_23F6B60AC((uint64_t)v2);
    sub_23F6B61BC();
    if ((v5 & 1) == 0)
      goto LABEL_36;
  }
  if (*(_QWORD *)(v35 + 8 * v27))
  {
    v23 = v27;
    goto LABEL_12;
  }
  sub_23F6B6298();
  if (v24 == v25)
    goto LABEL_29;
  if (*(_QWORD *)(v35 + 8 * v26))
  {
LABEL_16:
    v23 = v26;
LABEL_12:
    sub_23F6B5B90(v23);
    goto LABEL_7;
  }
  while (!__OFADD__(v26, 1))
  {
    sub_23F6B6398();
    if (v24 == v25)
    {
      v36 = v34;
      goto LABEL_29;
    }
    sub_23F6B56E8();
    if (v28)
      goto LABEL_12;
  }
LABEL_38:
  __break(1u);
}

unint64_t sub_23F69E9B0(unint64_t result, uint64_t a2)
{
  unint64_t v3;
  int64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  unsigned __int8 *v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v23 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    v9 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v10 = v9 | (v4 << 6);
LABEL_22:
    v14 = (unsigned __int8 *)(*(_QWORD *)(v3 + 56) + 16 * v10);
    v15 = *v14;
    v16 = *((_QWORD *)v14 + 1);
    swift_bridgeObjectRetain();
    sub_23F6A3728(v16);
    v17 = sub_23F78C6DC();
    v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0 || (v20 = *(_QWORD *)(a2 + 56), v15 != *(unsigned __int8 *)(v20 + 16 * v17)))
    {
      sub_23F6A3764(v16);
      return 0;
    }
    v21 = *(_QWORD *)(v20 + 16 * v17 + 8);
    v24 = v16;
    v25 = v21;
    v22 = static AST.Expr.== infix(_:_:)(&v25, &v24);
    result = sub_23F6A3764(v16);
    if ((v22 & 1) == 0)
      return 0;
  }
  v11 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v11 >= v23)
    return 1;
  v12 = *(_QWORD *)(v5 + 8 * v11);
  ++v4;
  if (v12)
    goto LABEL_21;
  v4 = v11 + 1;
  if (v11 + 1 >= v23)
    return 1;
  v12 = *(_QWORD *)(v5 + 8 * v4);
  if (v12)
    goto LABEL_21;
  v4 = v11 + 2;
  if (v11 + 2 >= v23)
    return 1;
  v12 = *(_QWORD *)(v5 + 8 * v4);
  if (v12)
  {
LABEL_21:
    v8 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
    goto LABEL_22;
  }
  v13 = v11 + 3;
  if (v13 >= v23)
    return 1;
  v12 = *(_QWORD *)(v5 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v23)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_21;
  }
LABEL_31:
  __break(1u);
  return result;
}

unint64_t sub_23F69EBAC(unint64_t result, uint64_t a2)
{
  unint64_t v3;
  int64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  unint64_t v21;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v12 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
        {
          v4 = v12 + 3;
          if (v12 + 3 >= v9)
            return 1;
          v13 = *(_QWORD *)(v5 + 8 * v4);
          if (!v13)
            break;
        }
      }
    }
LABEL_23:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v11);
    v15 = v21;
    swift_bridgeObjectRetain();
    sub_23F6A3728(v15);
    v16 = sub_23F78C6DC();
    v18 = v17;
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
    {
      sub_23F6A3764(v15);
      return 0;
    }
    v20 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v16);
    v19 = static AST.Expr.== infix(_:_:)(&v20, &v21);
    result = sub_23F6A3764(v15);
    if ((v19 & 1) == 0)
      return 0;
  }
  v14 = v12 + 4;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_23;
  }
LABEL_32:
  __break(1u);
  return result;
}

void static AST.Builtin.Pick.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1])
    sub_23F6B5280();
  sub_23F694C84();
}

void static AST.Builtin.Search.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1])
    sub_23F6B5280();
  sub_23F694C84();
}

void static AST.Builtin.ResolveTool.== infix(_:_:)(_QWORD **a1, _QWORD **a2)
{
  sub_23F6957CC(*a1, *a2);
}

uint64_t static AST.Builtin.Undo.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;

  v3 = a1[1];
  v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      v5 = *a1 == *a2 && v3 == v4;
      if (v5 || (sub_23F6B5280() & 1) != 0)
        return 1;
    }
  }
  else if (!v4)
  {
    return 1;
  }
  return 0;
}

uint64_t _s16IntelligenceFlow3ASTO0aB14PlannerSupportE7BuiltinO7ConfirmV2eeoiySbAH_AHtFZ_0(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return _s16IntelligenceFlow3ASTO0aB14PlannerSupportE7BuiltinO14NoMatchingToolV2eeoiySbAH_AHtFZ_0();
  else
    return sub_23F6B5280();
}

void static AST.UpdateParameters.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6B6B7C();
  if ((_s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0() & 1) != 0)
  {
    v2 = *(int *)(sub_23F6B5CF0() + 20);
    sub_23F69E9B0(*(_QWORD *)(v1 + v2), *(_QWORD *)(v0 + v2));
  }
  else
  {
    sub_23F694CC8();
  }
}

void AST.Expr.hash(into:)()
{
  sub_23F6B5CF0();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5864();
  sub_23FB2C764();
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5208();
  sub_23F6B6F74();
  __asm { BR              X11 }
}

uint64_t sub_23F69EFD0()
{
  sub_23F6B53D8();
  sub_23F6B69E0();
  return sub_23FB2F200();
}

void sub_23F69F000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = sub_23F6B603C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v3, v0);
  sub_23F6B53D8();
  sub_23F6B4EEC((uint64_t)&unk_256EA15A8);
  sub_23F6B6428();
  sub_23F6B6970();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
  sub_23F6B69E0();
}

uint64_t sub_23F69F398(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 28262 && a2 == 0xE200000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574656D61726170 && a2 == 0xEA00000000007372)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F69F478(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6574656D61726170;
  else
    return 28262;
}

uint64_t sub_23F69F4AC()
{
  char *v0;

  return sub_23F69F478(*v0);
}

uint64_t sub_23F69F4B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F69F398(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F69F4D8()
{
  sub_23F6AE2D4();
  return sub_23FB2FD10();
}

uint64_t sub_23F69F500()
{
  sub_23F6AE2D4();
  return sub_23FB2FD1C();
}

BOOL sub_23F69F528(char a1, char a2)
{
  return a1 == a2;
}

uint64_t _s16IntelligenceFlow3ASTO0aB14PlannerSupportE8PrefixOpO4hash4intoys6HasherVz_tF_0()
{
  return sub_23FB2FC68();
}

uint64_t sub_23F69F55C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;
  char v24;

  v2 = a1 == 0x746E656469 && a2 == 0xE500000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6C61726574696CLL && a2 == 0xE700000000000000;
      if (v7 || (sub_23FB2FB78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x786966657270 && a2 == 0xE600000000000000;
        if (v8 || (sub_23FB2FB78() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x7869666E69 && a2 == 0xE500000000000000;
          if (v9 || (sub_23FB2FB78() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 7630692 && a2 == 0xE300000000000000;
            if (v10 || (sub_23FB2FB78() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 0x7865646E69 && a2 == 0xE500000000000000;
              if (v11 || (sub_23FB2FB78() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                v12 = a1 == 1819042147 && a2 == 0xE400000000000000;
                if (v12 || (sub_23FB2FB78() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else
                {
                  v13 = a1 == 7954803 && a2 == 0xE300000000000000;
                  if (v13 || (sub_23FB2FB78() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 8;
                  }
                  else
                  {
                    v14 = a1 == 1801677168 && a2 == 0xE400000000000000;
                    if (v14 || (sub_23FB2FB78() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 9;
                    }
                    else
                    {
                      v15 = a1 == 0x6D7269666E6F63 && a2 == 0xE700000000000000;
                      if (v15 || (sub_23FB2FB78() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 10;
                      }
                      else
                      {
                        v16 = a1 == 0x686372616573 && a2 == 0xE600000000000000;
                        if (v16 || (sub_23FB2FB78() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 11;
                        }
                        else
                        {
                          v17 = a1 == 0x656E4F6B636970 && a2 == 0xE700000000000000;
                          if (v17 || (sub_23FB2FB78() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 12;
                          }
                          else
                          {
                            v18 = a1 == 0x5465766C6F736572 && a2 == 0xEB000000006C6F6FLL;
                            if (v18 || (sub_23FB2FB78() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 13;
                            }
                            else
                            {
                              v19 = a1 == 0x69686374614D6F6ELL && a2 == 0xEE006C6F6F54676ELL;
                              if (v19 || (sub_23FB2FB78() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 14;
                              }
                              else
                              {
                                v20 = a1 == 1868852853 && a2 == 0xE400000000000000;
                                if (v20 || (sub_23FB2FB78() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 15;
                                }
                                else
                                {
                                  v21 = a1 == 0x7463656A6572 && a2 == 0xE600000000000000;
                                  if (v21 || (sub_23FB2FB78() & 1) != 0)
                                  {
                                    swift_bridgeObjectRelease();
                                    return 16;
                                  }
                                  else
                                  {
                                    v22 = a1 == 0x6C65636E6163 && a2 == 0xE600000000000000;
                                    if (v22 || (sub_23FB2FB78() & 1) != 0)
                                    {
                                      swift_bridgeObjectRelease();
                                      return 17;
                                    }
                                    else if (a1 == 0xD000000000000010 && a2 == 0x800000023FB30E70
                                           || (sub_23FB2FB78() & 1) != 0)
                                    {
                                      swift_bridgeObjectRelease();
                                      return 18;
                                    }
                                    else if (a1 == 0xD000000000000010 && a2 == 0x800000023FB30E90
                                           || (sub_23FB2FB78() & 1) != 0)
                                    {
                                      swift_bridgeObjectRelease();
                                      return 19;
                                    }
                                    else
                                    {
                                      v23 = a1 == 0x616C50664F646E65 && a2 == 0xE90000000000006ELL;
                                      if (v23 || (sub_23FB2FB78() & 1) != 0)
                                      {
                                        swift_bridgeObjectRelease();
                                        return 20;
                                      }
                                      else if (a1 == 0xD000000000000010 && a2 == 0x800000023FB30EB0)
                                      {
                                        swift_bridgeObjectRelease();
                                        return 21;
                                      }
                                      else
                                      {
                                        v24 = sub_23FB2FB78();
                                        swift_bridgeObjectRelease();
                                        if ((v24 & 1) != 0)
                                          return 21;
                                        else
                                          return 22;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_23F69FD90()
{
  return 22;
}

uint64_t sub_23F69FD9C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F69FDCC + 4 * byte_23FB4709A[a1]))(0x746E656469, 0xE500000000000000);
}

uint64_t sub_23F69FDCC()
{
  return 0x6E656D6574617473;
}

uint64_t sub_23F69FDEC()
{
  return 0x6C61726574696CLL;
}

uint64_t sub_23F69FE04()
{
  return 0x786966657270;
}

uint64_t sub_23F69FE18()
{
  return 0x7869666E69;
}

uint64_t sub_23F69FE44()
{
  return 1819042147;
}

uint64_t sub_23F69FE54()
{
  return 7954803;
}

uint64_t sub_23F69FE64()
{
  return 1801677168;
}

uint64_t sub_23F69FE74()
{
  return 0x6D7269666E6F63;
}

uint64_t sub_23F69FE8C()
{
  return 0x686372616573;
}

uint64_t sub_23F69FEA0()
{
  return 0x656E4F6B636970;
}

uint64_t sub_23F69FEB8()
{
  return 0x5465766C6F736572;
}

uint64_t sub_23F69FED8()
{
  return 0x69686374614D6F6ELL;
}

uint64_t sub_23F69FEFC()
{
  return 1868852853;
}

uint64_t sub_23F69FF0C()
{
  return 0x7463656A6572;
}

uint64_t sub_23F69FF20()
{
  return 0x6C65636E6163;
}

unint64_t sub_23F69FF34()
{
  return 0xD000000000000010;
}

uint64_t sub_23F69FF84(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7865646E69;
  else
    return 7563372;
}

void sub_23F69FFB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  BOOL v5;

  v4 = a1 == 7563372 && a2 == 0xE300000000000000;
  if (v4
    || (sub_23F6B6B7C(), (sub_23F6B5280() & 1) != 0)
    || (v3 == 0x7865646E69 ? (v5 = v2 == 0xE500000000000000) : (v5 = 0), v5))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F6B5280();
    sub_23F693E04();
  }
  sub_23F694CC8();
}

uint64_t sub_23F6A0070(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 12639 && a2 == 0xE200000000000000;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 12895 && a2 == 0xE200000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23FB2FB78();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F6A0178()
{
  return 3;
}

unint64_t sub_23F6A0180(unsigned __int8 a1)
{
  return ((unint64_t)a1 << 8) + 12383;
}

uint64_t sub_23F6A0194(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F6A0258(char a1)
{
  if ((a1 & 1) != 0)
    return 12639;
  else
    return 12383;
}

uint64_t _s16IntelligenceFlow3ASTO0aB14PlannerSupportE7BuiltinO14NoMatchingToolV2eeoiySbAH_AHtFZ_0()
{
  return 1;
}

uint64_t sub_23F6A0278()
{
  return sub_23FB2FC68();
}

uint64_t sub_23F6A029C()
{
  return 12383;
}

void sub_23F6A02AC()
{
  sub_23F6A7684();
}

uint64_t sub_23F6A02CC()
{
  sub_23F6ADE24();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A02F4()
{
  sub_23F6ADE24();
  return sub_23FB2FD1C();
}

BOOL sub_23F6A031C(char *a1, char *a2)
{
  return sub_23F69F528(*a1, *a2);
}

void sub_23F6A0328()
{
  _s16IntelligenceFlow3ASTO0aB14PlannerSupportE8PrefixOpO9hashValueSivg_0();
}

uint64_t sub_23F6A0340()
{
  return _s16IntelligenceFlow3ASTO0aB14PlannerSupportE8PrefixOpO4hash4intoys6HasherVz_tF_0();
}

uint64_t sub_23F6A0348()
{
  unsigned __int8 *v0;

  return sub_23F69FD9C(*v0);
}

uint64_t sub_23F6A0350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F69F55C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F6A0374()
{
  return sub_23F6A5E70();
}

uint64_t sub_23F6A0390@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F69FD90();
  *a1 = result;
  return result;
}

uint64_t sub_23F6A03B4()
{
  sub_23F6ADCBC();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A03DC()
{
  sub_23F6ADCBC();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A0404()
{
  sub_23F6AE16C();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A042C()
{
  sub_23F6AE16C();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A0458()
{
  sub_23F6ADCF8();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A0480()
{
  sub_23F6ADCF8();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A04A8()
{
  char *v0;

  return sub_23F69FF84(*v0);
}

void sub_23F6A04B0(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23F69FFB0(a1, a2);
  *a3 = v4;
}

uint64_t sub_23F6A04D4()
{
  sub_23F6AE3CC();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A04FC()
{
  sub_23F6AE3CC();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A0524()
{
  sub_23F6ADD34();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A054C()
{
  sub_23F6ADD34();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A0574()
{
  sub_23F6ADDAC();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A059C()
{
  sub_23F6ADDAC();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A05C4()
{
  sub_23F6AE5AC();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A05EC()
{
  sub_23F6AE5AC();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A0614()
{
  sub_23F6AE390();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A063C()
{
  sub_23F6AE390();
  return sub_23FB2FD1C();
}

unint64_t sub_23F6A0664()
{
  unsigned __int8 *v0;

  return sub_23F6A0180(*v0);
}

uint64_t sub_23F6A066C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F6A0070(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F6A0690@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F6A0178();
  *a1 = result;
  return result;
}

uint64_t sub_23F6A06B4()
{
  sub_23F6AE408();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A06DC()
{
  sub_23F6AE408();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A0704()
{
  sub_23F6AE4F8();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A072C()
{
  sub_23F6AE4F8();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A0754()
{
  sub_23F6ADF8C();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A077C()
{
  sub_23F6ADF8C();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A07A4()
{
  sub_23F6AE1E4();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A07CC()
{
  sub_23F6AE1E4();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A07F4()
{
  sub_23F6AE07C();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A081C()
{
  sub_23F6AE07C();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A0844()
{
  char *v0;

  return sub_23F6A0258(*v0);
}

uint64_t sub_23F6A084C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F6A0194(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F6A0870()
{
  sub_23F6AE480();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A0898()
{
  sub_23F6AE480();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A08C0()
{
  sub_23F6ADE9C();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A08E8()
{
  sub_23F6ADE9C();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A0910()
{
  sub_23F6AE004();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A0938()
{
  sub_23F6AE004();
  return sub_23FB2FD1C();
}

void sub_23F6A0960(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23F6A7624(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_23F6A0988()
{
  sub_23F6AE25C();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A09B0()
{
  sub_23F6AE25C();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A09D8()
{
  sub_23F6AE0F4();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A0A00()
{
  sub_23F6AE0F4();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A0A28()
{
  sub_23F6AE570();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A0A50()
{
  sub_23F6AE570();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A0A78()
{
  sub_23F6ADF14();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A0AA0()
{
  sub_23F6ADF14();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A0AC8()
{
  sub_23F6ADD70();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A0AF0()
{
  sub_23F6ADD70();
  return sub_23FB2FD1C();
}

void AST.Expr.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64[27];
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD v82[3];
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  sub_23F6B5220();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v25 = sub_23F6916B8(&qword_256EA15B0);
  sub_23F6B53F8(v25, (uint64_t)&v69);
  v64[4] = v26;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B51A4();
  sub_23F6B5314(v27);
  v28 = sub_23F6916B8(&qword_256EA15B8);
  sub_23F6B53F8(v28, (uint64_t)&v68);
  v64[1] = v29;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B51A4();
  sub_23F6B5314(v30);
  v81 = sub_23F6916B8(&qword_256EA15C0);
  v64[19] = *(_QWORD *)(v81 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B582C(v31, v64[0]);
  v80 = sub_23F6B5CF0();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5544(v32, v64[0]);
  v79 = sub_23F6916B8(&qword_256EA15C8);
  v64[18] = *(_QWORD *)(v79 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B557C(v33, v64[0]);
  v78 = sub_23F6916B8(&qword_256EA15D0);
  v64[17] = *(_QWORD *)(v78 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B57D8(v34, v64[0]);
  v77 = sub_23F6916B8(&qword_256EA15D8);
  v64[16] = *(_QWORD *)(v77 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5528(v35, v64[0]);
  v76 = sub_23F6916B8(&qword_256EA15E0);
  v64[15] = *(_QWORD *)(v76 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5314((uint64_t)v64 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v75 = sub_23F6916B8(&qword_256EA15E8);
  v64[14] = *(_QWORD *)(v75 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5314((uint64_t)v64 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  v74 = sub_23F6916B8(&qword_256EA15F0);
  v64[13] = *(_QWORD *)(v74 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5314((uint64_t)v64 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  v73 = sub_23F6916B8(&qword_256EA15F8);
  v64[12] = *(_QWORD *)(v73 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B51A4();
  sub_23F6B5314(v39);
  v72 = sub_23F6916B8(&qword_256EA1600);
  v64[11] = *(_QWORD *)(v72 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B51A4();
  sub_23F6B5314(v40);
  v41 = sub_23F6916B8(&qword_256EA1608);
  sub_23F6B53F8(v41, (uint64_t)&a9);
  v64[10] = v42;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5314((uint64_t)v64 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  v44 = sub_23F6916B8(&qword_256EA1610);
  sub_23F6B53F8(v44, (uint64_t)&v85);
  v64[9] = v45;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B51A4();
  sub_23F6B5314(v46);
  v47 = sub_23F6916B8(&qword_256EA1618);
  sub_23F6B53F8(v47, (uint64_t)v82);
  v64[7] = v48;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B51A4();
  sub_23F6B5314(v49);
  v71 = sub_23F6916B8(&qword_256EA1620);
  v64[23] = *(_QWORD *)(v71 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5314((uint64_t)v64 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0));
  v70 = sub_23F6916B8(&qword_256EA1628);
  v64[22] = *(_QWORD *)(v70 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B51A4();
  sub_23F6B5314(v51);
  v68 = sub_23F6916B8(&qword_256EA1630);
  v64[21] = *(_QWORD *)(v68 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5314((uint64_t)v64 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0));
  v53 = sub_23F6916B8(&qword_256EA1638);
  sub_23F6B53F8(v53, (uint64_t)&v84);
  v64[8] = v54;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B51A4();
  sub_23F6B5314(v55);
  v67 = sub_23F6916B8(&qword_256EA1640);
  v64[20] = *(_QWORD *)(v67 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B51A4();
  sub_23F6B5314(v56);
  v57 = sub_23F6916B8(&qword_256EA1648);
  sub_23F6B67F4(v57);
  v66 = v58;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B51A4();
  sub_23F6B5314(v59);
  v60 = sub_23F6916B8(&qword_256EA1650);
  sub_23F6B53F8(v60, (uint64_t)&v78);
  v64[6] = v61;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B51A4();
  sub_23F6B5314(v62);
  v65 = sub_23F6B58C8();
  v64[24] = *(_QWORD *)(v65 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5268();
  sub_23F6916B8(&qword_256EA1658);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B53AC();
  v83 = sub_23F6916B8(&qword_256EA1660);
  v82[1] = *(_QWORD *)(v83 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B52B0();
  v63 = *v20;
  sub_23F6ADC98(v24, v24[3]);
  sub_23F6ADCBC();
  sub_23FB2FCC8();
  __asm { BR              X10 }
}

void sub_23F6A1118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  *(_BYTE *)(v2 - 120) = 0;
  sub_23F6AE5AC();
  v3 = *(_QWORD *)(v2 - 136);
  sub_23F6B6748();
  sub_23FB2FAA0();
  sub_23F6B5FE0();
  sub_23FB2FADC();
  sub_23F6B563C(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  v4 = sub_23F6B640C();
  v5(v4, v3);
  sub_23F6B6CA0();
  sub_23F6B5100();
}

void AST.Expr.hashValue.getter()
{
  sub_23FB2FC5C();
  AST.Expr.hash(into:)();
  sub_23FB2FC8C();
  sub_23F6B5398();
}

void AST.Expr.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD v127[5];
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;

  sub_23F6B5220();
  a19 = v24;
  a20 = v25;
  v129 = v20;
  v27 = v26;
  v127[1] = v28;
  v29 = sub_23F6916B8(&qword_256EA17B8);
  sub_23F6B53F8(v29, (uint64_t)&a14);
  v120 = v30;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5598(v31, v82);
  v32 = sub_23F6916B8(&qword_256EA17C0);
  sub_23F6B53F8(v32, (uint64_t)&a12);
  v119 = v33;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5810(v34, v82);
  v121 = sub_23F6916B8(&qword_256EA17C8);
  v107 = *(_QWORD *)(v121 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B57BC(v35, v82);
  v118 = sub_23F6916B8(&qword_256EA17D0);
  v106 = *(_QWORD *)(v118 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5404(v36, v82);
  v117 = sub_23F6916B8(&qword_256EA17D8);
  v105 = *(_QWORD *)(v117 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B57A0(v37, v82);
  v38 = sub_23F6916B8(&qword_256EA17E0);
  sub_23F6B53F8(v38, (uint64_t)&v130);
  v104 = v39;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B582C(v40, v82);
  v116 = sub_23F6916B8(&qword_256EA17E8);
  v103 = *(_QWORD *)(v116 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5544(v41, v82);
  v115 = sub_23F6916B8(&qword_256EA17F0);
  v102 = *(_QWORD *)(v115 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5560(v42, v82);
  v114 = sub_23F6916B8(&qword_256EA17F8);
  v101 = *(_QWORD *)(v114 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5C10(v43, v82);
  v113 = sub_23F6916B8(&qword_256EA1800);
  v99 = *(_QWORD *)(v113 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5420(v44, v82);
  v112 = sub_23F6916B8(&qword_256EA1808);
  v100 = *(_QWORD *)(v112 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B537C(v45, v82);
  v111 = sub_23F6916B8(&qword_256EA1810);
  v98 = *(_QWORD *)(v111 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5848(v46, v82);
  v47 = sub_23F6916B8(&qword_256EA1818);
  sub_23F6B53F8(v47, (uint64_t)&v126);
  v96 = v48;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B557C(v49, v82);
  v50 = sub_23F6916B8(&qword_256EA1820);
  sub_23F6B53F8(v50, (uint64_t)&v125);
  v95 = v51;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B57D8(v52, v82);
  v53 = sub_23F6916B8(&qword_256EA1828);
  sub_23F6B53F8(v53, (uint64_t)v127);
  v97 = v54;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B658C(v55, v82);
  v56 = sub_23F6916B8(&qword_256EA1830);
  sub_23F6B53F8(v56, (uint64_t)&v124);
  v94 = v57;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5BF4(v58, v82);
  v110 = sub_23F6916B8(&qword_256EA1838);
  v92 = *(_QWORD *)(v110 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B51A4();
  v122 = v59;
  v60 = sub_23F6916B8(&qword_256EA1840);
  sub_23F6B53F8(v60, (uint64_t)&v123);
  v93 = v61;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5528(v62, v82);
  v109 = sub_23F6916B8(&qword_256EA1848);
  v91 = *(_QWORD *)(v109 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5314((uint64_t)&v82 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0));
  v108 = sub_23F6916B8(&qword_256EA1850);
  v90 = *(_QWORD *)(v108 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5314((uint64_t)&v82 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0));
  v65 = sub_23F6916B8(&qword_256EA1858);
  sub_23F6B67F4(v65);
  v89 = v66;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5314((uint64_t)&v82 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0));
  v68 = sub_23F6916B8(&qword_256EA1860);
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5268();
  v69 = sub_23F6916B8(&qword_256EA1868);
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B573C();
  v128 = v27;
  sub_23F6B6280(v27);
  sub_23F6ADCBC();
  sub_23F6B6D08();
  sub_23FB2FCB0();
  if (!v20)
  {
    v87 = v23;
    v85 = v21;
    v86 = v68;
    v88 = v22;
    v129 = v69;
    v70 = sub_23FB2FA94();
    v72 = *(_QWORD *)(v70 + 16);
    if (v72)
    {
      v84 = 0;
      v83 = *(unsigned __int8 *)(v70 + 32);
      sub_23F6B6278(1, v72, v70, v70 + 32, v71, (2 * v72) | 1);
      v74 = v73;
      v76 = v75;
      sub_23F693E04();
      if (v74 == v76 >> 1)
        __asm { BR              X9 }
    }
    sub_23F6B6334();
    sub_23F6B5AD4();
    v78 = v77;
    sub_23F6916B8(&qword_256EA1870);
    *v78 = &type metadata for AST.Expr;
    sub_23FB2FA04();
    v79 = sub_23F6B56B8();
    sub_23F6B5DAC(v79, *MEMORY[0x24BEE26D0]);
    swift_willThrow();
    swift_unknownObjectRelease();
    v80 = sub_23F6B66C4();
    v81(v80);
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v128);
  sub_23F6B5100();
}

void sub_23F6A2430()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6B66FC();
  sub_23F6AE570();
  v2 = *(_QWORD *)(v1 - 280);
  sub_23F6B514C();
  if (!v0)
  {
    sub_23F6B58C8();
    swift_allocBox();
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    sub_23F6B6CAC();
    sub_23F6B56E0(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 616) + 8));
    sub_23F6B51C8();
    sub_23F6B60CC();
    JUMPOUT(0x23F6A33D8);
  }
  sub_23F6B51C8();
  sub_23F6B66AC();
  JUMPOUT(0x23F6A2414);
}

void sub_23F6A24F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v2 - 65) = 2;
  sub_23F6AE4F8();
  v3 = *(_QWORD *)(v2 - 272);
  sub_23F6B5194();
  if (!v0)
  {
    v4 = sub_23F6B56B0();
    sub_23F6AEAF8();
    sub_23F6B6748();
    sub_23F6B5458();
    v5 = *(_QWORD *)(v2 - 624);
    sub_23F6B51EC(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 608) + 8));
    sub_23F6B51C8();
    sub_23F6B56E0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    **(_QWORD **)(v2 - 136) = v4 | 0x1000000000000000;
    JUMPOUT(0x23F6A241CLL);
  }
  sub_23F6B51C8();
  JUMPOUT(0x23F6A2414);
}

void sub_23F6A25B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v1 - 65) = 3;
  sub_23F6AE480();
  v2 = *(_QWORD *)(v1 - 264);
  sub_23F6B514C();
  if (!v0)
  {
    v3 = sub_23F6B56B0();
    *(_BYTE *)(v1 - 65) = 0;
    sub_23F6AEA68();
    sub_23F6B6134();
    sub_23F6B5244();
    sub_23F6B6910();
    sub_23F6B6134();
    sub_23F6B5244();
    sub_23F6B530C(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 600) + 8));
    sub_23F6B51C8();
    sub_23F6B50D0();
    **(_QWORD **)(v1 - 136) = v3 | 0x1000000000000004;
    JUMPOUT(0x23F6A241CLL);
  }
  sub_23F6B51C8();
  sub_23F6B66AC();
  JUMPOUT(0x23F6A2414);
}

void sub_23F6A2D5C()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 65) = 18;
  sub_23F6ADDAC();
  sub_23F6B514C();
  if (!v0)
  {
    swift_allocEmptyBox();
    sub_23F6AE5E8();
    sub_23F6B5244();
    sub_23F6B51F4(v1 - 224);
    sub_23F6B51C8();
    sub_23F6B50D0();
    JUMPOUT(0x23F6A33D0);
  }
  sub_23F6B51C8();
  sub_23F6B66AC();
  JUMPOUT(0x23F6A2414);
}

void sub_23F6A2DCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 - 65) = 19;
  sub_23F6ADD70();
  v2 = *(_QWORD *)(v1 - 144);
  sub_23F6B5194();
  if (!v0)
  {
    sub_23F6B5CF0();
    swift_allocBox();
    sub_23F6B4EEC((uint64_t)&unk_256EA1878);
    sub_23F6B5458();
    sub_23F6B530C(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 472) + 8));
    swift_unknownObjectRelease();
    sub_23F6B5A10();
    JUMPOUT(0x23F6A33D0);
  }
  JUMPOUT(0x23F6A2408);
}

void sub_23F6A2E94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _QWORD);

  *(_BYTE *)(v2 - 65) = 20;
  sub_23F6ADD34();
  sub_23F6B5194();
  if (!v0)
  {
    v3 = sub_23F6B61D0();
    sub_23F6B6344(v3, v4);
    sub_23F6B51C8();
    sub_23F6B56E0(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 624) + 8));
    **(_QWORD **)(v2 - 136) = 0xA000000000000000;
    JUMPOUT(0x23F6A241CLL);
  }
  sub_23F6B51C8();
  JUMPOUT(0x23F6A2414);
}

void sub_23F6A2F00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _QWORD);

  *(_BYTE *)(v2 - 65) = 21;
  sub_23F6ADCF8();
  sub_23F6B5194();
  if (v0)
    JUMPOUT(0x23F6A2F38);
  v3 = sub_23F6B61D0();
  sub_23F6B6344(v3, v4);
  sub_23F6B51C8();
  sub_23F6B56E0(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 624) + 8));
  **(_QWORD **)(v2 - 136) = 0xA000000000000008;
  JUMPOUT(0x23F6A241CLL);
}

uint64_t sub_23F6A340C()
{
  sub_23FB2FC5C();
  AST.Expr.hash(into:)();
  return sub_23FB2FC8C();
}

#error "23F6A3458: call analysis failed (funcsize=5)"

#error "23F6A346C: call analysis failed (funcsize=5)"

uint64_t (*AST.Builtin.Say.eventIds.modify())()
{
  return nullsub_1;
}

uint64_t AST.Builtin.Say.init(eventIds:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_23F6A3494(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x736449746E657665 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F6A3518()
{
  return 0x736449746E657665;
}

uint64_t sub_23F6A3534@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F6A3494(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F6A355C()
{
  sub_23F6AEB34();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A3584()
{
  sub_23F6AEB34();
  return sub_23FB2FD1C();
}

void AST.Builtin.Say.encode(to:)()
{
  sub_23F6A4758();
}

void AST.Builtin.Say.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  sub_23F6A48A0(a1, (uint64_t)&unk_256EA1928, (uint64_t)sub_23F6AEB34, (uint64_t)&_s7BuiltinO3SayV10CodingKeysON, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F6A360C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  AST.Builtin.Say.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_23F6A3620()
{
  AST.Builtin.Say.encode(to:)();
}

void AST.Builtin.Pick.eventId.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void AST.Builtin.Pick.eventId.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_23F6B5CF8();
  *v1 = v2;
  v1[1] = v0;
  sub_23F694C84();
}

uint64_t (*AST.Builtin.Pick.eventId.modify())()
{
  return nullsub_1;
}

uint64_t AST.Builtin.Pick.type.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t AST.Builtin.Pick.type.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*AST.Builtin.Pick.type.modify())()
{
  return nullsub_1;
}

uint64_t AST.Builtin.Pick.init(eventId:type:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_BYTE *)(a5 + 24) = a4 & 1;
  return result;
}

uint64_t static AST.PickType.== infix(_:_:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if ((a2 & 1) == 0)
  {
    if ((a4 & 1) == 0)
      return a1 == a3;
    return _s16IntelligenceFlow3ASTO0aB14PlannerSupportE7BuiltinO6SearchV5query24isLowConfidenceKnowledge7pickOneAHSS_S2btcfcfA0__0();
  }
  if ((a4 & 1) == 0)
    return _s16IntelligenceFlow3ASTO0aB14PlannerSupportE7BuiltinO6SearchV5query24isLowConfidenceKnowledge7pickOneAHSS_S2btcfcfA0__0();
  return _s16IntelligenceFlow3ASTO0aB14PlannerSupportE7BuiltinO14NoMatchingToolV2eeoiySbAH_AHtFZ_0();
}

uint64_t type metadata accessor for AST.UpdateParameters()
{
  uint64_t result;

  result = qword_256EA1F40;
  if (!qword_256EA1F40)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23F6A3728(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_23F6A3764(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

void AST.Builtin.Pick.hash(into:)()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 24);
  sub_23F6B6548();
  sub_23F6B5EE4();
  sub_23F6B611C();
  sub_23F6B6090();
  if ((v1 & 1) == 0)
    sub_23FB2FC68();
  sub_23FB2FC68();
  sub_23F6B5F7C();
}

uint64_t sub_23F6A3800(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6449746E657665 && a2 == 0xE700000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F6A38DC(char a1)
{
  if ((a1 & 1) != 0)
    return 1701869940;
  else
    return 0x6449746E657665;
}

uint64_t sub_23F6A390C()
{
  char *v0;

  return sub_23F6A38DC(*v0);
}

uint64_t sub_23F6A3914@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F6A3800(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F6A3938()
{
  sub_23F6AEBC0();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A3960()
{
  sub_23F6AEBC0();
  return sub_23FB2FD1C();
}

void AST.Builtin.Pick.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  sub_23F6B5220();
  v2 = v1;
  sub_23F6916B8(&qword_256EA1938);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B52B0();
  sub_23F6ADC98(v2, v2[3]);
  sub_23F6AEBC0();
  sub_23F6B6DE8();
  sub_23F6B6224();
  sub_23FB2FADC();
  if (!v0)
  {
    sub_23F6B6360();
    sub_23F6AEBFC();
    sub_23F6B6048();
  }
  v3 = sub_23F6B54C8();
  sub_23F6B56E0(v3, v4);
  sub_23F6B5100();
}

void AST.Builtin.Pick.hashValue.getter()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 24);
  sub_23F6B53C4();
  sub_23F6B5F1C();
  sub_23FB2F200();
  sub_23F6B5908();
  if ((v1 & 1) == 0)
    sub_23F6B5FB0();
  sub_23F6B5A48();
  sub_23F6B5608();
  sub_23F6B5B30();
}

void AST.Builtin.Pick.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;

  sub_23F6B5220();
  v3 = v2;
  v5 = v4;
  sub_23F6916B8(&qword_256EA1950);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5B10();
  sub_23F6AEBC0();
  sub_23F6B5DA0();
  if (v0)
  {
    sub_23F6B6E68();
  }
  else
  {
    v8 = sub_23F6B7248();
    v10 = v9;
    sub_23F6B6360();
    sub_23F6AEC38();
    swift_bridgeObjectRetain();
    sub_23FB2FA7C();
    sub_23F6B563C((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    v11 = v13;
    v12 = v14;
    *(_QWORD *)v5 = v8;
    *(_QWORD *)(v5 + 8) = v10;
    *(_QWORD *)(v5 + 16) = v11;
    *(_BYTE *)(v5 + 24) = v12;
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v3);
    sub_23F6B6A48();
  }
  sub_23F6B5100();
}

void sub_23F6A3C38()
{
  AST.Builtin.Pick.init(from:)();
}

void sub_23F6A3C4C()
{
  AST.Builtin.Pick.encode(to:)();
}

uint64_t sub_23F6A3C68()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 24);
  sub_23FB2FC5C();
  swift_bridgeObjectRetain();
  sub_23FB2F200();
  swift_bridgeObjectRelease();
  if ((v1 & 1) == 0)
    sub_23FB2FC68();
  sub_23FB2FC68();
  return sub_23FB2FC8C();
}

uint64_t (*AST.Builtin.Confirm.eventId.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F6A3D08()
{
  sub_23F6AEC74();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A3D30()
{
  sub_23F6AEC74();
  return sub_23FB2FD1C();
}

void AST.Builtin.Confirm.encode(to:)()
{
  sub_23F6A50D0();
}

void AST.Builtin.Confirm.init(from:)()
{
  sub_23F6A51EC();
}

void sub_23F6A3DC0()
{
  AST.Builtin.Confirm.init(from:)();
}

void sub_23F6A3DD4()
{
  AST.Builtin.Confirm.encode(to:)();
}

void AST.Builtin.Search.query.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void AST.Builtin.Search.query.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_23F6B5CF8();
  *v1 = v2;
  v1[1] = v0;
  sub_23F694C84();
}

uint64_t (*AST.Builtin.Search.query.modify())()
{
  return nullsub_1;
}

uint64_t AST.Builtin.Search.isLowConfidenceKnowledge.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t AST.Builtin.Search.isLowConfidenceKnowledge.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*AST.Builtin.Search.isLowConfidenceKnowledge.modify())()
{
  return nullsub_1;
}

uint64_t AST.Builtin.Search.pickOne.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t AST.Builtin.Search.pickOne.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = result;
  return result;
}

uint64_t (*AST.Builtin.Search.pickOne.modify())()
{
  return nullsub_1;
}

uint64_t AST.Builtin.Search.init(query:isLowConfidenceKnowledge:pickOne:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 16) = a3;
  *(_BYTE *)(a5 + 17) = a4;
  return result;
}

void AST.Builtin.Search.hash(into:)()
{
  sub_23F6B5F1C();
  sub_23F6B5B48();
  sub_23F6B5908();
  sub_23FB2FC74();
  sub_23FB2FC74();
  sub_23F6B5F7C();
}

uint64_t sub_23F6A3EE0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x7972657571 && a2 == 0xE500000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023FB30ED0 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656E4F6B636970 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v7 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23F6A4020(char a1)
{
  if (!a1)
    return 0x7972657571;
  if (a1 == 1)
    return 0xD000000000000018;
  return 0x656E4F6B636970;
}

uint64_t sub_23F6A4078()
{
  char *v0;

  return sub_23F6A4020(*v0);
}

uint64_t sub_23F6A4080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F6A3EE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F6A40A4()
{
  sub_23F6AECB0();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A40CC()
{
  sub_23F6AECB0();
  return sub_23FB2FD1C();
}

void AST.Builtin.Search.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_23F6B5220();
  v4 = v3;
  sub_23F6916B8(&qword_256EA1978);
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B52B0();
  sub_23F6B6280(v4);
  sub_23F6AECB0();
  sub_23FB2FCC8();
  sub_23FB2FADC();
  if (!v0)
  {
    sub_23F6B6360();
    sub_23F6B6A18();
    sub_23F6B6A18();
  }
  sub_23F6B56E0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F6B5100();
}

uint64_t AST.Builtin.Search.hashValue.getter()
{
  sub_23F6B53C4();
  sub_23F6B6254();
  sub_23FB2F200();
  sub_23F6B5AB0();
  sub_23FB2FC74();
  sub_23FB2FC74();
  return sub_23F6B5608();
}

void AST.Builtin.Search.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, char a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;

  sub_23F6B5220();
  a23 = v26;
  a24 = v27;
  v29 = v28;
  v31 = v30;
  sub_23F6916B8(&qword_256EA1988);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8]();
  v33 = (char *)&a9 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5B10();
  sub_23F6AECB0();
  sub_23F6B5DA0();
  if (v24)
  {
    sub_23F6B6E68();
  }
  else
  {
    a14 = 0;
    v34 = sub_23F6B7248();
    v36 = v35;
    sub_23F6B6360();
    swift_bridgeObjectRetain();
    a10 = sub_23F6B6B1C();
    a12 = 2;
    v37 = sub_23F6B6B1C();
    a10 &= 1u;
    sub_23F6B51EC((uint64_t)v33, *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8));
    *(_QWORD *)v31 = v34;
    *(_QWORD *)(v31 + 8) = v36;
    *(_BYTE *)(v31 + 16) = a10;
    *(_BYTE *)(v31 + 17) = v37 & 1;
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v29);
    sub_23F6B6A48();
  }
  sub_23F6B5100();
}

#error "23F6A43C0: call analysis failed (funcsize=5)"

void sub_23F6A43CC()
{
  AST.Builtin.Search.encode(to:)();
}

uint64_t sub_23F6A43E8()
{
  sub_23FB2FC5C();
  swift_bridgeObjectRetain();
  sub_23FB2F200();
  swift_bridgeObjectRelease();
  sub_23FB2FC74();
  sub_23FB2FC74();
  return sub_23FB2FC8C();
}

uint64_t (*AST.Builtin.PickOne.eventId.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F6A4480()
{
  sub_23F6AECEC();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A44A8()
{
  sub_23F6AECEC();
  return sub_23FB2FD1C();
}

void AST.Builtin.PickOne.encode(to:)()
{
  sub_23F6A50D0();
}

void AST.Builtin.PickOne.init(from:)()
{
  sub_23F6A51EC();
}

void sub_23F6A4534()
{
  AST.Builtin.PickOne.init(from:)();
}

void sub_23F6A4548()
{
  AST.Builtin.PickOne.encode(to:)();
}

uint64_t AST.Builtin.ResolveTool.toolIds.getter()
{
  return swift_bridgeObjectRetain();
}

void AST.Builtin.ResolveTool.toolIds.setter(uint64_t a1)
{
  _QWORD *v1;

  swift_bridgeObjectRelease();
  *v1 = a1;
  sub_23F694CC8();
}

uint64_t (*AST.Builtin.ResolveTool.toolIds.modify())()
{
  return nullsub_1;
}

void _s16IntelligenceFlow3ASTO0aB14PlannerSupportE7BuiltinO3SayV4hash4intoys6HasherVz_tF_0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  sub_23FB2FC68();
  if (v2)
  {
    sub_23F6B5508();
    v3 = v1 + 40;
    do
    {
      sub_23F6B6548();
      sub_23F6B6AB8();
      sub_23F6B611C();
      sub_23F6B6090();
      v3 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F6B5F7C();
  }
}

uint64_t sub_23F6A4614(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7364496C6F6F74 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F6A4698()
{
  return 0x7364496C6F6F74;
}

uint64_t sub_23F6A46B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F6A4614(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F6A46DC()
{
  sub_23F6AED28();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A4704()
{
  sub_23F6AED28();
  return sub_23FB2FD1C();
}

void AST.Builtin.ResolveTool.encode(to:)()
{
  sub_23F6A4758();
}

void sub_23F6A4758()
{
  uint64_t v0;
  void (*v1)(void);
  void (*v2)(void);
  uint64_t v3;
  uint64_t *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F6B5220();
  v2 = v1;
  v7 = *(_QWORD *)(sub_23F6B63B8(v3, v4) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B59E0();
  v5 = (_QWORD *)sub_23F6B6F08();
  sub_23F6ADC98(v5, v6);
  v2();
  sub_23F6B6DE8();
  sub_23F6916B8(&qword_256EA1918);
  sub_23F6AEB70((uint64_t)&unk_256EA1920);
  sub_23FB2FB18();
  sub_23F6B56E0(v0, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  sub_23F6B5100();
}

void _s16IntelligenceFlow3ASTO0aB14PlannerSupportE7BuiltinO3SayV9hashValueSivg_0()
{
  uint64_t v0;

  sub_23F6B53C4();
  v0 = sub_23F6B5508();
  sub_23F6B6C88(v0);
  sub_23F693E04();
  sub_23F6B5608();
  sub_23F6B5398();
}

void AST.Builtin.ResolveTool.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  sub_23F6A48A0(a1, (uint64_t)&unk_256EA19B8, (uint64_t)sub_23F6AED28, (uint64_t)&_s7BuiltinO11ResolveToolV10CodingKeysON, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F6A48A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  sub_23F6B5220();
  sub_23F6B729C();
  v18 = v12;
  v19 = *(_QWORD *)(sub_23F6B63B8(v13, v14) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  v16 = (char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B67D4();
  sub_23F6B5E6C();
  if (!v11)
  {
    v17 = v18;
    sub_23F6916B8(&qword_256EA1918);
    sub_23F6AEB70((uint64_t)&unk_256EA1930);
    sub_23F6B6E1C();
    sub_23F6B51EC((uint64_t)v16, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
    *v17 = a10;
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v10);
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23F6A4984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  AST.Builtin.ResolveTool.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_23F6A4998()
{
  AST.Builtin.ResolveTool.encode(to:)();
}

void sub_23F6A49AC()
{
  uint64_t v0;

  sub_23F6B63E0();
  v0 = sub_23F6B5508();
  sub_23F6B6C88(v0);
  sub_23F693E04();
  sub_23F6B5608();
  sub_23F6B5398();
}

uint64_t sub_23F6A49E0()
{
  sub_23F6AED64();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A4A08()
{
  sub_23F6AED64();
  return sub_23FB2FD1C();
}

void AST.Builtin.NoMatchingTool.encode(to:)()
{
  sub_23F6A5380();
}

void AST.Builtin.NoMatchingTool.hashValue.getter()
{
  sub_23F6B53C4();
  sub_23F6B5608();
  sub_23F6B5398();
}

uint64_t AST.Builtin.NoMatchingTool.init(from:)(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(a1);
}

uint64_t sub_23F6A4AA0(uint64_t a1)
{
  return AST.Builtin.NoMatchingTool.init(from:)(a1);
}

void sub_23F6A4AB4()
{
  AST.Builtin.NoMatchingTool.encode(to:)();
}

void sub_23F6A4AC8()
{
  AST.Builtin.NoMatchingTool.hashValue.getter();
}

uint64_t sub_23F6A4ADC()
{
  sub_23FB2FC5C();
  return sub_23FB2FC8C();
}

void AST.Builtin.Undo.eventId.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void AST.Builtin.Undo.eventId.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_23F6B5CF8();
  *v1 = v2;
  v1[1] = v0;
  sub_23F694C84();
}

uint64_t (*AST.Builtin.Undo.eventId.modify())()
{
  return nullsub_1;
}

uint64_t AST.Builtin.Undo.init(eventId:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

void AST.Builtin.Undo.hash(into:)()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
  {
    sub_23FB2FC74();
    sub_23F6B5508();
    sub_23F6B5EE4();
    sub_23FB2F200();
    sub_23F6B5A3C();
  }
  else
  {
    sub_23FB2FC74();
    sub_23F694C84();
  }
}

uint64_t sub_23F6A4BC0()
{
  return 0x6449746E657665;
}

void sub_23F6A4BD8(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23F6A4FD4(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_23F6A4C00()
{
  sub_23F6AEDA0();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A4C28()
{
  sub_23F6AEDA0();
  return sub_23FB2FD1C();
}

void AST.Builtin.Undo.encode(to:)()
{
  sub_23F6A50D0();
}

void AST.Builtin.Undo.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_23F6B53C4();
  sub_23FB2FC74();
  if (v1)
  {
    sub_23F6B5508();
    sub_23FB2F200();
    sub_23F693E04();
  }
  sub_23F6B5608();
  sub_23F6B5B30();
}

void AST.Builtin.Undo.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F6B5220();
  v4 = v3;
  v6 = v5;
  sub_23F6916B8(&qword_256EA19E0);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5208();
  sub_23F6B5B10();
  sub_23F6AEDA0();
  sub_23F6B5DA0();
  if (!v0)
  {
    v7 = sub_23FB2FA10();
    v9 = v8;
    sub_23F6B51EC(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    *v6 = v7;
    v6[1] = v9;
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v4);
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23F6A4DA8()
{
  AST.Builtin.Undo.init(from:)();
}

void sub_23F6A4DBC()
{
  AST.Builtin.Undo.encode(to:)();
}

uint64_t sub_23F6A4DD8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_23FB2FC5C();
  sub_23FB2FC74();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_23FB2F200();
    swift_bridgeObjectRelease();
  }
  return sub_23FB2FC8C();
}

uint64_t (*AST.Builtin.Reject.eventId.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F6A4E64()
{
  sub_23F6AEDDC();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A4E8C()
{
  sub_23F6AEDDC();
  return sub_23FB2FD1C();
}

void AST.Builtin.Reject.encode(to:)()
{
  sub_23F6A50D0();
}

void AST.Builtin.Reject.init(from:)()
{
  sub_23F6A51EC();
}

void sub_23F6A4F18()
{
  AST.Builtin.Reject.init(from:)();
}

void sub_23F6A4F2C()
{
  AST.Builtin.Reject.encode(to:)();
}

void AST.Builtin.Cancel.eventId.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void AST.Builtin.Cancel.eventId.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_23F6B5CF8();
  *v1 = v2;
  v1[1] = v0;
  sub_23F694C84();
}

uint64_t (*AST.Builtin.Cancel.eventId.modify())()
{
  return nullsub_1;
}

uint64_t AST.Builtin.Cancel.init(eventId:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t _s16IntelligenceFlow3ASTO0aB14PlannerSupportE7BuiltinO7ConfirmV4hash4intoys6HasherVz_tF_0()
{
  sub_23F6B54F8();
  sub_23FB2F200();
  return sub_23F6B5A3C();
}

void sub_23F6A4FD4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6449746E657665 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F6B5280();
    sub_23F693E04();
  }
  sub_23F694CC8();
}

uint64_t sub_23F6A504C()
{
  sub_23F6AEE18();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A5074()
{
  sub_23F6AEE18();
  return sub_23FB2FD1C();
}

void AST.Builtin.Cancel.encode(to:)()
{
  sub_23F6A50D0();
}

void sub_23F6A50D0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  void (*v4)(void);
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  void (*v12)(uint64_t, uint64_t);

  sub_23F6B5220();
  v12 = v3;
  v11 = v4;
  sub_23F6B63B8(v5, v6);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5268();
  v7 = v0[1];
  v10 = *v0;
  v8 = (_QWORD *)sub_23F6B6218();
  sub_23F6ADC98(v8, v9);
  v11();
  sub_23FB2FCC8();
  v12(v10, v7);
  sub_23F6B5900(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F6B5100();
}

void _s16IntelligenceFlow3ASTO0aB14PlannerSupportE7BuiltinO7ConfirmV9hashValueSivg_0()
{
  sub_23F6B53C4();
  sub_23F6B54F8();
  sub_23F6B6730();
  sub_23F693DFC();
  sub_23F6B5608();
  sub_23F6B5398();
}

void AST.Builtin.Cancel.init(from:)()
{
  sub_23F6A51EC();
}

void sub_23F6A51EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;

  sub_23F6B5220();
  sub_23F6B729C();
  v13 = v3;
  sub_23F6B63B8(v4, v5);
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B67D4();
  sub_23F6B5E6C();
  if (!v1)
  {
    v8 = v13;
    v9 = sub_23FB2FA40();
    v11 = v10;
    sub_23F6B6420((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    *v8 = v9;
    v8[1] = v11;
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v0);
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23F6A52A4()
{
  AST.Builtin.Cancel.init(from:)();
}

void sub_23F6A52B8()
{
  AST.Builtin.Cancel.encode(to:)();
}

void sub_23F6A52CC()
{
  sub_23F6B63E0();
  sub_23F6B54F8();
  sub_23F6B6730();
  sub_23F693DFC();
  sub_23F6B5608();
  sub_23F6B5398();
}

uint64_t sub_23F6A5304()
{
  sub_23F6AEE54();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A532C()
{
  sub_23F6AEE54();
  return sub_23FB2FD1C();
}

void AST.Builtin.GetMentionedApps.encode(to:)()
{
  sub_23F6A5380();
}

void sub_23F6A5380()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  void (*v3)(void);
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;

  sub_23F6B5220();
  v3 = v2;
  v5 = (_QWORD *)v4;
  sub_23F6B63B8(v4, v6);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B53AC();
  sub_23F6ADC98(v5, v5[3]);
  v3();
  sub_23FB2FCC8();
  sub_23F6B563C(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F6B5100();
}

uint64_t AST.Builtin.GetMentionedApps.init(from:)(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(a1);
}

void sub_23F6A5438()
{
  AST.Builtin.GetMentionedApps.encode(to:)();
}

uint64_t AST.UpdateParameters.statementId.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F6B58C8();
  v0 = sub_23F6B5994();
  return sub_23F6B64B0(v0, v1, v2, v3);
}

uint64_t AST.UpdateParameters.statementId.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F6B58C8();
  v0 = sub_23F6B6190();
  return sub_23F6B64B0(v0, v1, v2, v3);
}

uint64_t (*AST.UpdateParameters.statementId.modify())()
{
  return nullsub_1;
}

uint64_t AST.UpdateParameters.parameters.getter()
{
  sub_23F6B5CF0();
  return swift_bridgeObjectRetain();
}

void AST.UpdateParameters.parameters.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(sub_23F6B5CF0() + 20);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  sub_23F694C84();
}

uint64_t (*AST.UpdateParameters.parameters.modify())()
{
  sub_23F6B5CF0();
  return nullsub_1;
}

void AST.UpdateParameters.init(statementId:parameters:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F6B6B7C();
  v3 = v2;
  v4 = sub_23F6B58C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, v1, v4);
  *(_QWORD *)(v3 + *(int *)(sub_23F6B5CF0() + 20)) = v0;
  sub_23F694C84();
}

uint64_t AST.UpdateParameters.hash(into:)()
{
  sub_23F6B58C8();
  sub_23F6B4EEC((uint64_t)&unk_256EA15A8);
  sub_23F6B63F4();
  sub_23FB2F074();
  sub_23F6B5CF0();
  sub_23F6B54F8();
  sub_23F6B6E88();
  return sub_23F6B5A3C();
}

uint64_t sub_23F6A55D4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574656D61726170 && a2 == 0xEA00000000007372)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F6A56E4(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6574656D61726170;
  else
    return 0x6E656D6574617473;
}

uint64_t sub_23F6A5728()
{
  char *v0;

  return sub_23F6A56E4(*v0);
}

uint64_t sub_23F6A5730@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F6A55D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F6A5754()
{
  sub_23F6AEE90();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A577C()
{
  sub_23F6AEE90();
  return sub_23FB2FD1C();
}

uint64_t AST.UpdateParameters.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  sub_23F6916B8(&qword_256EA1A28);
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B52B0();
  v3 = (_QWORD *)sub_23F6B68A8();
  sub_23F6ADC98(v3, v4);
  sub_23F6AEE90();
  sub_23F6B63A4();
  sub_23F6B58C8();
  sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
  sub_23F6B6490();
  if (!v0)
  {
    sub_23F6B5CF0();
    sub_23F6916B8(&qword_256EA1A38);
    sub_23F6AEECC((uint64_t)&unk_256EA1A40);
    sub_23F6B6490();
  }
  return sub_23F6B56E0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
}

void AST.UpdateParameters.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v2[72];

  sub_23F6B53C4();
  sub_23F6B58C8();
  sub_23F6B4EEC((uint64_t)&unk_256EA15A8);
  sub_23FB2F074();
  v1 = *(_QWORD *)(v0 + *(int *)(sub_23F6B5CF0() + 20));
  sub_23F6B5508();
  sub_23F6AD218((uint64_t)v2, v1);
  sub_23F693E04();
  sub_23F6B5608();
  sub_23F6B5398();
}

void AST.UpdateParameters.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t updated;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_23F6B5220();
  v6 = v5;
  v11 = v7;
  v13 = sub_23F6B58C8();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B537C(v8, v10);
  sub_23F6916B8(&qword_256EA1A50);
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B51D0();
  updated = type metadata accessor for AST.UpdateParameters();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5208();
  sub_23F6ADC98(v6, v6[3]);
  sub_23F6AEE90();
  sub_23F6B6DF4();
  if (v0)
  {
    sub_23F6B6E34();
  }
  else
  {
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    sub_23F6B6E1C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v3, v12, v13);
    sub_23F6916B8(&qword_256EA1A38);
    sub_23F6B6360();
    sub_23F6AEECC((uint64_t)&unk_256EA1A58);
    sub_23F6B6E1C();
    sub_23F6B563C(v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    *(_QWORD *)(v3 + *(int *)(updated + 20)) = v14;
    sub_23F6B4F24(v3, v11, (uint64_t (*)(_QWORD))type metadata accessor for AST.UpdateParameters);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v6);
    sub_23F6B6F9C();
    sub_23F6B4FAC();
  }
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23F6A5B7C()
{
  AST.UpdateParameters.init(from:)();
}

uint64_t sub_23F6A5B90()
{
  return AST.UpdateParameters.encode(to:)();
}

uint64_t sub_23F6A5BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _BYTE v6[72];

  sub_23FB2FC5C();
  sub_23FB2C764();
  sub_23F6B4EEC((uint64_t)&unk_256EA15A8);
  sub_23FB2F074();
  v4 = *(_QWORD *)(v2 + *(int *)(a2 + 20));
  swift_bridgeObjectRetain();
  sub_23F6AD218((uint64_t)v6, v4);
  swift_bridgeObjectRelease();
  return sub_23FB2FC8C();
}

void AST.UpdateExpr.kind.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *AST.UpdateExpr.kind.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*AST.UpdateExpr.kind.modify())()
{
  return nullsub_1;
}

unint64_t AST.UpdateExpr.expr.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 8);
  *a1 = v2;
  return sub_23F6A3728(v2);
}

void AST.UpdateExpr.expr.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  sub_23F6A3764(*(_QWORD *)(v1 + 8));
  *(_QWORD *)(v1 + 8) = v2;
  sub_23F694CC8();
}

uint64_t (*AST.UpdateExpr.expr.modify())()
{
  return nullsub_1;
}

_BYTE *AST.UpdateExpr.init(kind:expr:)@<X0>(_BYTE *result@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  v3 = *a2;
  *(_BYTE *)a3 = *result;
  *(_QWORD *)(a3 + 8) = v3;
  return result;
}

uint64_t static AST.UpdateExpr.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  char v2;

  if (*a1 == *a2)
    sub_23F6B6380();
  else
    v2 = 0;
  return v2 & 1;
}

BOOL static AST.UpdateKind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void AST.UpdateExpr.hash(into:)()
{
  sub_23F6B53D8();
  sub_23F6B5FD8();
}

BOOL sub_23F6A5D60(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_23F6A5D70()
{
  return sub_23FB2FC68();
}

uint64_t sub_23F6A5D94(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 1684957547 && a2 == 0xE400000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1919973477 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F6A5E68()
{
  return 2;
}

uint64_t sub_23F6A5E70()
{
  return 0;
}

uint64_t sub_23F6A5E7C(char a1)
{
  if ((a1 & 1) != 0)
    return 1919973477;
  else
    return 1684957547;
}

BOOL sub_23F6A5E9C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23F6A5D60(*a1, *a2);
}

void sub_23F6A5EA8()
{
  sub_23F6A6ADC();
}

uint64_t sub_23F6A5EC0()
{
  return sub_23F6A5D70();
}

uint64_t sub_23F6A5EC8()
{
  char *v0;

  return sub_23F6A5E7C(*v0);
}

uint64_t sub_23F6A5ED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F6A5D94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F6A5EF4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F6A5E68();
  *a1 = result;
  return result;
}

uint64_t sub_23F6A5F18()
{
  sub_23F6AEF94();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A5F40()
{
  sub_23F6AEF94();
  return sub_23FB2FD1C();
}

void AST.UpdateExpr.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_23F6B5220();
  v4 = v3;
  sub_23F6916B8(&qword_256EA1A68);
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B52B0();
  sub_23F6ADC98(v4, v4[3]);
  sub_23F6AEF94();
  sub_23F6B63A4();
  sub_23F6AEFD0();
  sub_23F6B6048();
  if (!v0)
  {
    sub_23F6AE354();
    sub_23F6B6048();
  }
  sub_23F6B56E0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F6B5100();
}

void AST.UpdateExpr.hashValue.getter()
{
  sub_23F6B53C4();
  sub_23F6B5A48();
  AST.Expr.hash(into:)();
  sub_23F6B5608();
  sub_23F6B5B30();
}

void AST.UpdateExpr.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD v20[2];

  sub_23F6B5220();
  v16 = v15;
  sub_23F6916B8(&qword_256EA1A80);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8]();
  v18 = (char *)v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5B10();
  sub_23F6AEF94();
  sub_23F6B5DA0();
  if (!v13)
  {
    sub_23F6AF00C();
    sub_23F6B5458();
    sub_23F6AE968();
    sub_23F6B5458();
    sub_23F6B51EC((uint64_t)v18, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
    v19 = v20[1];
    *(_BYTE *)v16 = a13;
    *(_QWORD *)(v16 + 8) = v19;
  }
  sub_23F6B6E68();
  sub_23F6B5100();
}

void sub_23F6A61CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  AST.UpdateExpr.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_23F6A61E0()
{
  AST.UpdateExpr.encode(to:)();
}

uint64_t sub_23F6A61FC()
{
  sub_23FB2FC5C();
  sub_23FB2FC68();
  AST.Expr.hash(into:)();
  return sub_23FB2FC8C();
}

void AST.UpdateKind.hash(into:)()
{
  sub_23FB2FC68();
  sub_23F694CC8();
}

uint64_t sub_23F6A627C()
{
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t _s7ToolKit12TypeInstanceO30IntelligenceFlowPlannerSupportE06pythonC0SSvg_0()
{
  return 0;
}

uint64_t sub_23F6A62A4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x646E65707061 && a2 == 0xE600000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6563616C706572 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F6A6388(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6563616C706572;
  else
    return 0x646E65707061;
}

uint64_t sub_23F6A63BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F6A627C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23F6A63E4()
{
  return sub_23F6A5E70();
}

uint64_t sub_23F6A63FC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s16IntelligenceFlow3ASTO0aB14PlannerSupportE7BuiltinO14NoMatchingToolV2eeoiySbAH_AHtFZ_0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23F6A6424()
{
  sub_23F6AF0C0();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A644C()
{
  sub_23F6AF0C0();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A6474()
{
  char *v0;

  return sub_23F6A6388(*v0);
}

uint64_t sub_23F6A647C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F6A62A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F6A64A0()
{
  sub_23F6AF048();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A64C8()
{
  sub_23F6AF048();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A64F0()
{
  sub_23F6AF084();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A6518()
{
  sub_23F6AF084();
  return sub_23FB2FD1C();
}

void AST.UpdateKind.encode(to:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F6B5220();
  v4 = v3;
  v5 = sub_23F6916B8(&qword_256EA1A90);
  v10 = *(_QWORD *)(v5 - 8);
  v11 = v5;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B53AC();
  sub_23F6916B8(&qword_256EA1A98);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5268();
  v12 = *(_QWORD *)(sub_23F6916B8(&qword_256EA1AA0) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5208();
  v6 = *v0;
  sub_23F6ADC98(v4, v4[3]);
  sub_23F6AF048();
  sub_23F6B636C();
  if ((v6 & 1) != 0)
  {
    sub_23F6B6C38();
    sub_23F6B54D4();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v2, v11);
  }
  else
  {
    sub_23F6AF0C0();
    sub_23F6B54D4();
    v7 = sub_23F6B640C();
    v9(v7, v8);
  }
  sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  sub_23F6B5100();
}

void AST.UpdateKind.hashValue.getter()
{
  sub_23F6B53C4();
  sub_23F6B5A48();
  sub_23F6B5608();
  sub_23F6B5398();
}

void AST.UpdateKind.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _BYTE *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;

  sub_23F6B5220();
  v4 = v3;
  v30 = v5;
  v28 = sub_23F6916B8(&qword_256EA1AC0);
  v32 = *(_QWORD *)(v28 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5BD8(v6, v26);
  v29 = sub_23F6916B8(&qword_256EA1AC8);
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5298();
  v7 = sub_23F6916B8(&qword_256EA1AD0);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B52B0();
  sub_23F6ADC98(v4, v4[3]);
  sub_23F6AF048();
  sub_23F6B5DA0();
  if (v0)
    goto LABEL_7;
  v27 = v4;
  v8 = sub_23FB2FA94();
  v11 = *(_QWORD *)(v8 + 16);
  if (!v11
    || (v12 = *(_BYTE *)(v8 + 32),
        sub_23F6B6024(v8, v11, v9, v8 + 32, v10, (2 * v11) | 1),
        v14 = v13,
        v16 = v15,
        sub_23F6B6E44(),
        v14 != v16 >> 1))
  {
    sub_23F6B6334();
    sub_23F6B5AD4();
    v19 = v18;
    sub_23F6916B8(&qword_256EA1870);
    *v19 = &type metadata for AST.UpdateKind;
    sub_23FB2FA04();
    sub_23F6B6BE0();
    v20 = sub_23F6B56B8();
    sub_23F6B6650(v20, *MEMORY[0x24BEE26D0]);
    swift_willThrow();
    sub_23F6B5770();
    v21 = sub_23F6B63E8();
    v22(v21);
    v4 = v27;
LABEL_7:
    v23 = (uint64_t)v4;
    goto LABEL_8;
  }
  if ((v12 & 1) != 0)
  {
    sub_23F6B6C38();
    sub_23F6B6FA8();
    sub_23FB2F9F8();
    v17 = v30;
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v28);
    sub_23F6B5770();
    sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }
  else
  {
    sub_23F6AF0C0();
    sub_23F6B6FA8();
    sub_23FB2F9F8();
    v17 = v30;
    v24 = sub_23F6B61D0();
    v25(v24, v29);
    sub_23F6B5770();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v7);
  }
  *v17 = v12;
  v23 = (uint64_t)v27;
LABEL_8:
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v23);
  sub_23F6B6CA0();
  sub_23F6B5100();
}

void sub_23F6A69A8()
{
  AST.UpdateKind.init(from:)();
}

void sub_23F6A69BC()
{
  AST.UpdateKind.encode(to:)();
}

void AST.PickType.hash(into:)(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
    sub_23FB2FC68();
  sub_23FB2FC68();
  sub_23F694CC8();
}

uint64_t sub_23F6A6A08(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x7865646E69 && a2 == 0xE500000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701736302 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_23F6A6ADC()
{
  sub_23F6B53C4();
  sub_23FB2FC68();
  sub_23F6B5608();
  sub_23F6B5398();
}

uint64_t sub_23F6A6B0C(char a1)
{
  if ((a1 & 1) != 0)
    return 1701736302;
  else
    return 0x7865646E69;
}

void sub_23F6A6B38()
{
  sub_23F6B63E0();
  sub_23F6B5A48();
  sub_23F6B5608();
  sub_23F6B5398();
}

uint64_t sub_23F6A6B60()
{
  char *v0;

  return sub_23F6A6B0C(*v0);
}

uint64_t sub_23F6A6B68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F6A6A08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F6A6B8C()
{
  sub_23F6AF0FC();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A6BB4()
{
  sub_23F6AF0FC();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A6BDC()
{
  sub_23F6AF174();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A6C04()
{
  sub_23F6AF174();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A6C2C()
{
  sub_23F6AF138();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A6C54()
{
  sub_23F6AF138();
  return sub_23FB2FD1C();
}

void AST.PickType.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  char v9;

  sub_23F6B5220();
  v9 = v3;
  sub_23F6916B8(&qword_256EA1AD8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5268();
  v8 = *(_QWORD *)(sub_23F6916B8(&qword_256EA1AE0) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B573C();
  sub_23F6916B8(&qword_256EA1AE8);
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5208();
  v4 = (_QWORD *)sub_23F6B6190();
  sub_23F6ADC98(v4, v5);
  sub_23F6AF0FC();
  sub_23F6B636C();
  if ((v9 & 1) != 0)
  {
    sub_23F6B6C44();
    sub_23F6B54D4();
    v6 = sub_23F6B640C();
    v7(v6);
  }
  else
  {
    sub_23F6AF174();
    sub_23F6B54D4();
    sub_23FB2FB0C();
    sub_23F6B5900(v2, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  }
  sub_23F6B530C(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F6B5100();
}

void AST.PickType.hashValue.getter(uint64_t a1, char a2)
{
  sub_23F6B53C4();
  if ((a2 & 1) == 0)
    sub_23F6B5FB0();
  sub_23F6B5A48();
  sub_23F6B5608();
  sub_23F6B5398();
}

void AST.PickType.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;

  sub_23F6B5220();
  v6 = v5;
  sub_23F6916B8(&qword_256EA1B08);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5BD8(v7, v25);
  sub_23F6916B8(&qword_256EA1B10);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5298();
  v8 = sub_23F6916B8(&qword_256EA1B18);
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5208();
  sub_23F6ADC98(v6, v6[3]);
  sub_23F6AF0FC();
  sub_23FB2FCB0();
  if (v1)
    goto LABEL_9;
  v26 = v2;
  v9 = sub_23FB2FA94();
  v12 = *(_QWORD *)(v9 + 16);
  v13 = v8;
  if (!v12)
  {
LABEL_8:
    v20 = sub_23F6B6334();
    sub_23F6B5AD4();
    v22 = v21;
    sub_23F6916B8(&qword_256EA1870);
    *v22 = &type metadata for AST.PickType;
    sub_23FB2FA04();
    sub_23F6B6BE0();
    sub_23F6B56B8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x24BEE26D0], v20);
    swift_willThrow();
    sub_23F6B5770();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v3, v13);
    goto LABEL_9;
  }
  v14 = v8;
  v15 = *(_BYTE *)(v9 + 32);
  sub_23F6B6024(v9, v12, v10, v9 + 32, v11, (2 * v12) | 1);
  v17 = v16;
  v19 = v18;
  sub_23F6B6E44();
  if (v17 != v19 >> 1)
  {
    v13 = v14;
    goto LABEL_8;
  }
  if ((v15 & 1) != 0)
  {
    sub_23F6B6C44();
    sub_23F6B663C();
    v23 = sub_23F6B61DC();
    sub_23F6B51EC(v23, v24);
    sub_23F6B5770();
  }
  else
  {
    sub_23F6AF174();
    sub_23F6B663C();
    sub_23FB2FA70();
    sub_23F6B6178(v0, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    sub_23F6B68E0();
  }
  sub_23F6B530C(v3, *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
LABEL_9:
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v6);
  sub_23F6B6834();
}

uint64_t sub_23F6A715C(uint64_t a1, uint64_t a2)
{
  return static AST.PickType.== infix(_:_:)(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
}

void sub_23F6A7178(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  AST.PickType.init(from:)();
  if (!v1)
  {
    *(_QWORD *)a1 = v3;
    *(_BYTE *)(a1 + 8) = v4 & 1;
  }
}

void sub_23F6A71A8()
{
  AST.PickType.encode(to:)();
}

void sub_23F6A71C4()
{
  uint64_t v0;

  AST.PickType.hashValue.getter(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

void sub_23F6A71D0(uint64_t a1)
{
  uint64_t v1;

  AST.PickType.hash(into:)(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

uint64_t sub_23F6A71DC()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 8);
  sub_23FB2FC5C();
  if ((v1 & 1) == 0)
    sub_23FB2FC68();
  sub_23FB2FC68();
  return sub_23FB2FC8C();
}

void AST.Literal.hash(into:)()
{
  sub_23F6B6B7C();
  __asm { BR              X10 }
}

void sub_23F6A7268()
{
  sub_23FB2FC68();
  sub_23FB2FC74();
  sub_23F694C84();
}

uint64_t sub_23F6A7310(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  char v12;

  v2 = a1 == 1819047278 && a2 == 0xE400000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1819242338 && a2 == 0xE400000000000000;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 7630441 && a2 == 0xE300000000000000;
      if (v7 || (sub_23FB2FB78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x656C62756F64 && a2 == 0xE600000000000000;
        if (v8 || (sub_23FB2FB78() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x676E69727473 && a2 == 0xE600000000000000;
          if (v9 || (sub_23FB2FB78() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x7961727261 && a2 == 0xE500000000000000;
            if (v10 || (sub_23FB2FB78() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 1952672100 && a2 == 0xE400000000000000)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              v12 = sub_23FB2FB78();
              swift_bridgeObjectRelease();
              if ((v12 & 1) != 0)
                return 6;
              else
                return 7;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_23F6A758C()
{
  return 7;
}

uint64_t sub_23F6A7594(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F6A75C0 + 4 * byte_23FB47135[a1]))(1819047278, 0xE400000000000000);
}

uint64_t sub_23F6A75C0()
{
  return 1819242338;
}

uint64_t sub_23F6A75CC()
{
  return 7630441;
}

uint64_t sub_23F6A75DC()
{
  return 0x656C62756F64;
}

uint64_t sub_23F6A75F0()
{
  return 0x676E69727473;
}

uint64_t sub_23F6A7604()
{
  return 0x7961727261;
}

uint64_t sub_23F6A7618()
{
  return 1952672100;
}

void sub_23F6A7624(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F6B5280();
    sub_23F693E04();
  }
  sub_23F694CC8();
}

void sub_23F6A7684()
{
  sub_23F6B53C4();
  sub_23F6B5FB0();
  sub_23F6B5608();
  sub_23F6B5398();
}

uint64_t sub_23F6A76A8()
{
  sub_23F6AF228();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A76D0()
{
  sub_23F6AF228();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A76F8()
{
  sub_23F6AF318();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A7720()
{
  sub_23F6AF318();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A7748()
{
  unsigned __int8 *v0;

  return sub_23F6A7594(*v0);
}

uint64_t sub_23F6A7750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F6A7310(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F6A7774@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F6A758C();
  *a1 = result;
  return result;
}

uint64_t sub_23F6A7798()
{
  sub_23F6AF1B0();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A77C0()
{
  sub_23F6AF1B0();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A77E8()
{
  sub_23F6AF1EC();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A7810()
{
  sub_23F6AF1EC();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A7838()
{
  sub_23F6AF2A0();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A7860()
{
  sub_23F6AF2A0();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A7888()
{
  sub_23F6AF2DC();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A78B0()
{
  sub_23F6AF2DC();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A78D8()
{
  sub_23F6AF354();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A7900()
{
  sub_23F6AF354();
  return sub_23FB2FD1C();
}

void sub_23F6A7928()
{
  sub_23F6B63E0();
  sub_23F6B5FB0();
  sub_23F6B5608();
  sub_23F6B5398();
}

uint64_t sub_23F6A794C()
{
  sub_23F6AF264();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A7974()
{
  sub_23F6AF264();
  return sub_23FB2FD1C();
}

void AST.Literal.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F6916B8(&qword_256EA1B20);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5404(v5, v9);
  sub_23F6916B8(&qword_256EA1B28);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5560(v6, v10);
  sub_23F6916B8(&qword_256EA1B30);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B557C(v7, v11);
  sub_23F6916B8(&qword_256EA1B38);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5528(v8, v12);
  sub_23F6916B8(&qword_256EA1B40);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B52B0();
  sub_23F6916B8(&qword_256EA1B48);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5298();
  sub_23F6916B8(&qword_256EA1B50);
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B53AC();
  sub_23F6916B8(&qword_256EA1B58);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B573C();
  sub_23F6ADC98(a1, a1[3]);
  sub_23F6AF1B0();
  sub_23FB2FCC8();
  __asm { BR              X10 }
}

uint64_t sub_23F6A7B84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F6B6C5C();
  v3 = *(_QWORD *)(v1 - 128);
  v2 = *(_QWORD *)(v1 - 120);
  sub_23F6B54D4();
  sub_23FB2FAE8();
  sub_23F6B530C(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 280) + 8));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 136) + 8))(v3, v2);
}

void sub_23F6A7E30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v2 - 96) = 0;
  sub_23F6AF354();
  v3 = *(_QWORD *)(v2 - 128);
  sub_23F6B5238();
  sub_23F6B5900(v1, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23F6B56E0(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 136) + 8));
  JUMPOUT(0x23F6A7E08);
}

void AST.Literal.hashValue.getter()
{
  sub_23F6B53C4();
  AST.Literal.hash(into:)();
  sub_23F6B5608();
  sub_23F6B5B30();
}

void AST.Literal.init(from:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_23F6916B8(&qword_256EA1BB0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5598(v2, v21);
  sub_23F6916B8(&qword_256EA1BB8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5420(v3, v22);
  sub_23F6916B8(&qword_256EA1BC0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B57BC(v4, v23);
  sub_23F6916B8(&qword_256EA1BC8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B57F4(v5, v24);
  sub_23F6916B8(&qword_256EA1BD0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5810(v6, v25);
  sub_23F6916B8(&qword_256EA1BD8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5404(v7, v26);
  sub_23F6916B8(&qword_256EA1BE0);
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5298();
  sub_23F6916B8(&qword_256EA1BE8);
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B53AC();
  sub_23F6B6280(a1);
  sub_23F6AF1B0();
  sub_23F6B6DF4();
  if (!v27)
  {
    v8 = sub_23FB2FA94();
    v10 = *(_QWORD *)(v8 + 16);
    if (v10)
    {
      v11 = *(unsigned __int8 *)(v8 + 32);
      sub_23F6B6278(1, v10, v8, v8 + 32, v9, (2 * v10) | 1);
      v13 = v12;
      v15 = v14;
      swift_bridgeObjectRelease();
      if (v13 == v15 >> 1)
        __asm { BR              X9 }
    }
    sub_23F6B6334();
    sub_23F6B5AD4();
    v17 = v16;
    sub_23F6916B8(&qword_256EA1870);
    *v17 = &type metadata for AST.Literal;
    sub_23FB2FA04();
    v18 = sub_23F6B56B8();
    sub_23F6B5DAC(v18, *MEMORY[0x24BEE26D0]);
    swift_willThrow();
    sub_23F6B51C8();
    v19 = sub_23F6B63E8();
    v20(v19);
  }
  sub_23F6B6E34();
  sub_23F6B5994();
  sub_23F6B6CA0();
}

void sub_23F6A8218()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F6B6C5C();
  v3 = *(_QWORD *)(v2 - 168);
  sub_23F6B55EC();
  if (v0)
  {
    sub_23F6B51C8();
    sub_23F6B60E4();
    sub_23F6B6AAC();
    JUMPOUT(0x23F6A81E0);
  }
  sub_23FB2FA4C();
  sub_23F6B67C4();
  sub_23F6B563C(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 256) + 8));
  sub_23F6B51C8();
  sub_23F6B51EC(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23F6B6E34();
  JUMPOUT(0x23F6A81ECLL);
}

void sub_23F6A824C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);

  sub_23F6B6D84();
  v4 = *(_QWORD *)(v3 - 160);
  sub_23F6B55EC();
  sub_23F6B638C();
  if (v0)
  {
    sub_23F6B51C8();
    sub_23F6B60E4();
  }
  else
  {
    sub_23FB2FA70();
    sub_23F6B67C4();
    if (!v2)
    {
      sub_23F6B563C(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 240) + 8));
      sub_23F6B51C8();
      sub_23F6B51EC(v1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
      sub_23F6B6E34();
      JUMPOUT(0x23F6A81ECLL);
    }
    sub_23F6B563C(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 240) + 8));
    sub_23F6B51C8();
    v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
  }
  sub_23F6B51EC(v1, v5);
  JUMPOUT(0x23F6A81E8);
}

void sub_23F6A8398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6B6CCC();
  v2 = *(_QWORD *)(v1 - 152);
  sub_23F6B6748();
  v3 = *(_QWORD *)(v1 - 104);
  sub_23F6B58D0();
  sub_23F6B638C();
  if (v0)
  {
    sub_23F6B51C8();
    sub_23F6B60E4();
    JUMPOUT(0x23F6A8574);
  }
  sub_23F6916B8(&qword_256EA1748);
  v4 = v2;
  sub_23F6AE918((uint64_t)&unk_256EA18D8);
  sub_23F6B6CAC();
  v5 = *(_QWORD *)(v1 - 264);
  sub_23F6B530C(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 176) + 8));
  sub_23F6B51C8();
  sub_23F6B51EC(v3, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  JUMPOUT(0x23F6A86A0);
}

uint64_t sub_23F6A86A8(uint64_t a1)
{
  return static AST.Literal.== infix(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_23F6A86C4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;

  AST.Literal.init(from:)(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6;
  }
}

void sub_23F6A86F0(_QWORD *a1)
{
  uint64_t v1;

  AST.Literal.encode(to:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
}

void sub_23F6A870C()
{
  AST.Literal.hashValue.getter();
}

void sub_23F6A8718()
{
  AST.Literal.hash(into:)();
}

uint64_t sub_23F6A8724()
{
  sub_23FB2FC5C();
  AST.Literal.hash(into:)();
  return sub_23FB2FC8C();
}

uint64_t sub_23F6A8778(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 1937075312 && a2 == 0xE400000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x73756E696DLL && a2 == 0xE500000000000000;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 7630702 && a2 == 0xE300000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23FB2FB78();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F6A889C(char a1)
{
  if (!a1)
    return 1937075312;
  if (a1 == 1)
    return 0x73756E696DLL;
  return 7630702;
}

uint64_t sub_23F6A88E0()
{
  char *v0;

  return sub_23F6A889C(*v0);
}

uint64_t sub_23F6A88E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F6A8778(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F6A890C()
{
  sub_23F6AF3E4();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A8934()
{
  sub_23F6AF3E4();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A895C()
{
  sub_23F6AF45C();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A8984()
{
  sub_23F6AF45C();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A89AC()
{
  sub_23F6AF420();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A89D4()
{
  sub_23F6AF420();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A89FC()
{
  sub_23F6AF498();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A8A24()
{
  sub_23F6AF498();
  return sub_23FB2FD1C();
}

void AST.PrefixOp.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  sub_23F6B5220();
  v17 = v4;
  sub_23F6916B8(&qword_256EA1BF8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5420(v5, v13);
  v6 = sub_23F6916B8(&qword_256EA1C00);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B573C();
  v7 = sub_23F6916B8(&qword_256EA1C08);
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5208();
  v16 = *(_QWORD *)(sub_23F6916B8(&qword_256EA1C10) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F693EB0();
  v8 = (_QWORD *)sub_23F6B63E8();
  sub_23F6ADC98(v8, v9);
  sub_23F6AF3E4();
  sub_23FB2FCC8();
  if (v17)
  {
    if (v17 == 1)
    {
      sub_23F6AF45C();
      sub_23F6B54E8();
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v3, v15);
    }
    else
    {
      sub_23F6B6D6C();
      sub_23F6B54E8();
      v10 = sub_23F6B61DC();
      v12(v10, v11);
    }
  }
  else
  {
    sub_23F6AF498();
    sub_23F6B54E8();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v7);
  }
  sub_23F6B530C(v0, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
  sub_23F6B5100();
}

void AST.PrefixOp.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_23F6B5220();
  v4 = v3;
  v30 = sub_23F6916B8(&qword_256EA1C38);
  v32 = *(_QWORD *)(v30 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5BD8(v5, v27);
  sub_23F6916B8(&qword_256EA1C40);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5C10(v6, v28);
  v29 = sub_23F6916B8(&qword_256EA1C48);
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8]();
  sub_23F693EB0();
  v7 = sub_23F6916B8(&qword_256EA1C50);
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B52B0();
  sub_23F6ADC98(v4, v4[3]);
  sub_23F6AF3E4();
  sub_23F6B6DF4();
  if (v1)
    goto LABEL_11;
  v33 = (uint64_t)v4;
  v8 = sub_23FB2FA94();
  v10 = *(_QWORD *)(v8 + 16);
  if (!v10)
  {
LABEL_8:
    sub_23F6B6334();
    sub_23F6B5AD4();
    v19 = v18;
    sub_23F6916B8(&qword_256EA1870);
    *v19 = &type metadata for AST.PrefixOp;
    sub_23FB2FA04();
    sub_23F6B6BE0();
    v20 = sub_23F6B56B8();
    sub_23F6B6650(v20, *MEMORY[0x24BEE26D0]);
    swift_willThrow();
    sub_23F6B68E0();
    (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v2, v7);
    v4 = (_QWORD *)v33;
LABEL_11:
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v4);
    goto LABEL_12;
  }
  v11 = v7;
  v12 = *(unsigned __int8 *)(v8 + 32);
  sub_23F6B6278(1, v10, v8, v8 + 32, v9, (2 * v10) | 1);
  v14 = v13;
  v16 = v15;
  sub_23F693E04();
  if (v14 != v16 >> 1)
  {
    v7 = v11;
    goto LABEL_8;
  }
  if (v12)
  {
    if (v12 == 1)
    {
      sub_23F6B6360();
      sub_23F6AF45C();
      sub_23F6B53F0();
      v17 = sub_23F6B61DC();
      v24(v17, v23);
    }
    else
    {
      sub_23F6B6D6C();
      sub_23F6B53F0();
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v30);
    }
  }
  else
  {
    sub_23F6AF498();
    sub_23F6B6FA8();
    sub_23F6B53F0();
    v21 = sub_23F6B61D0();
    v22(v21, v29);
  }
  swift_unknownObjectRelease();
  v25 = sub_23F6B68A8();
  v26(v25);
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v33);
LABEL_12:
  sub_23F6B6CA0();
  sub_23F6B5100();
}

void sub_23F6A8F38(_BYTE *a1@<X8>)
{
  uint64_t v1;
  char v3;

  AST.PrefixOp.init(from:)();
  if (!v1)
    *a1 = v3;
}

void sub_23F6A8F60()
{
  AST.PrefixOp.encode(to:)();
}

uint64_t sub_23F6A8F78(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  char v23;

  v2 = a1 == 0x6E6769737361 && a2 == 0xE600000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 6579297 && a2 == 0xE300000000000000;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6769737341646461 && a2 == 0xE90000000000006ELL;
      if (v7 || (sub_23FB2FB78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x7463617274627573 && a2 == 0xE800000000000000;
        if (v8 || (sub_23FB2FB78() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x7463617274627573 && a2 == 0xEE006E6769737341;
          if (v9 || (sub_23FB2FB78() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x656469766964 && a2 == 0xE600000000000000;
            if (v10 || (sub_23FB2FB78() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 0x7341656469766964 && a2 == 0xEC0000006E676973;
              if (v11 || (sub_23FB2FB78() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                v12 = a1 == 0x796C7069746C756DLL && a2 == 0xE800000000000000;
                if (v12 || (sub_23FB2FB78() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else
                {
                  v13 = a1 == 0x796C7069746C756DLL && a2 == 0xEE006E6769737341;
                  if (v13 || (sub_23FB2FB78() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 8;
                  }
                  else
                  {
                    v14 = a1 == 0x746E656E6F707865 && a2 == 0xE800000000000000;
                    if (v14 || (sub_23FB2FB78() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 9;
                    }
                    else
                    {
                      v15 = a1 == 0x6C61757165 && a2 == 0xE500000000000000;
                      if (v15 || (sub_23FB2FB78() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 10;
                      }
                      else
                      {
                        v16 = a1 == 0x6C61757145746F6ELL && a2 == 0xE800000000000000;
                        if (v16 || (sub_23FB2FB78() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 11;
                        }
                        else
                        {
                          v17 = a1 == 28265 && a2 == 0xE200000000000000;
                          if (v17 || (sub_23FB2FB78() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 12;
                          }
                          else if (a1 == 0xD000000000000010 && a2 == 0x800000023FB30EF0
                                 || (sub_23FB2FB78() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 13;
                          }
                          else
                          {
                            v18 = a1 == 0x5472657461657267 && a2 == 0xEB000000006E6168;
                            if (v18 || (sub_23FB2FB78() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 14;
                            }
                            else
                            {
                              v19 = a1 == 0x6E6168547373656CLL && a2 == 0xED00006C61757145;
                              if (v19 || (sub_23FB2FB78() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 15;
                              }
                              else
                              {
                                v20 = a1 == 0x6E6168547373656CLL && a2 == 0xE800000000000000;
                                if (v20 || (sub_23FB2FB78() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 16;
                                }
                                else
                                {
                                  v21 = a1 == 6581857 && a2 == 0xE300000000000000;
                                  if (v21 || (sub_23FB2FB78() & 1) != 0)
                                  {
                                    swift_bridgeObjectRelease();
                                    return 17;
                                  }
                                  else if (a1 == 29295 && a2 == 0xE200000000000000)
                                  {
                                    swift_bridgeObjectRelease();
                                    return 18;
                                  }
                                  else
                                  {
                                    v23 = sub_23FB2FB78();
                                    swift_bridgeObjectRelease();
                                    if ((v23 & 1) != 0)
                                      return 18;
                                    else
                                      return 19;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_23F6A96C4()
{
  return 19;
}

uint64_t sub_23F6A96CC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F6A96FC + 4 * byte_23FB4714A[a1]))(0x6E6769737361, 0xE600000000000000);
}

uint64_t sub_23F6A96FC()
{
  return 6579297;
}

uint64_t sub_23F6A970C()
{
  return 0x6769737341646461;
}

uint64_t sub_23F6A9728()
{
  return 0x7463617274627573;
}

uint64_t sub_23F6A9740()
{
  return 0x7463617274627573;
}

uint64_t sub_23F6A97C0()
{
  return 0x746E656E6F707865;
}

uint64_t sub_23F6A97D8()
{
  return 0x6C61757165;
}

uint64_t sub_23F6A97EC()
{
  return 0x6C61757145746F6ELL;
}

uint64_t sub_23F6A9804()
{
  return 28265;
}

unint64_t sub_23F6A9810()
{
  return 0xD000000000000010;
}

uint64_t sub_23F6A982C()
{
  return 0x5472657461657267;
}

uint64_t sub_23F6A984C()
{
  return 0x6E6168547373656CLL;
}

uint64_t sub_23F6A9878()
{
  return 6581857;
}

uint64_t sub_23F6A9890()
{
  return 29295;
}

uint64_t sub_23F6A989C()
{
  sub_23F6AF8D0();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A98C4()
{
  sub_23F6AF8D0();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A98EC()
{
  sub_23F6AF90C();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A9914()
{
  sub_23F6AF90C();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A993C()
{
  sub_23F6AF54C();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A9964()
{
  sub_23F6AF54C();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A998C()
{
  sub_23F6AF948();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A99B4()
{
  sub_23F6AF948();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A99DC()
{
  unsigned __int8 *v0;

  return sub_23F6A96CC(*v0);
}

uint64_t sub_23F6A99E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F6A8F78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F6A9A08@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F6A96C4();
  *a1 = result;
  return result;
}

uint64_t sub_23F6A9A2C()
{
  sub_23F6AF4D4();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A9A54()
{
  sub_23F6AF4D4();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A9A7C()
{
  sub_23F6AF7E0();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A9AA4()
{
  sub_23F6AF7E0();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A9ACC()
{
  sub_23F6AF81C();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A9AF4()
{
  sub_23F6AF81C();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A9B1C()
{
  sub_23F6AF6F0();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A9B44()
{
  sub_23F6AF6F0();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A9B6C()
{
  sub_23F6AF72C();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A9B94()
{
  sub_23F6AF72C();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A9BBC()
{
  sub_23F6AF600();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A9BE4()
{
  sub_23F6AF600();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A9C0C()
{
  sub_23F6AF63C();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A9C34()
{
  sub_23F6AF63C();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A9C5C()
{
  sub_23F6AF678();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A9C84()
{
  sub_23F6AF678();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A9CAC()
{
  sub_23F6AF588();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A9CD4()
{
  sub_23F6AF588();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A9CFC()
{
  sub_23F6AF5C4();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A9D24()
{
  sub_23F6AF5C4();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A9D4C()
{
  sub_23F6AF768();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A9D74()
{
  sub_23F6AF768();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A9D9C()
{
  sub_23F6AF7A4();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A9DC4()
{
  sub_23F6AF7A4();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A9DEC()
{
  sub_23F6AF6B4();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A9E14()
{
  sub_23F6AF6B4();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A9E3C()
{
  sub_23F6AF510();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A9E64()
{
  sub_23F6AF510();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A9E8C()
{
  sub_23F6AF858();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A9EB4()
{
  sub_23F6AF858();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6A9EDC()
{
  sub_23F6AF894();
  return sub_23FB2FD10();
}

uint64_t sub_23F6A9F04()
{
  sub_23F6AF894();
  return sub_23FB2FD1C();
}

void AST.InfixOp.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55[3];
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v83[2];
  uint64_t v84;
  _QWORD v85[3];
  uint64_t v86;

  sub_23F6B5220();
  a19 = v20;
  a20 = v21;
  v84 = v22;
  v24 = v23;
  v25 = sub_23F6916B8(&qword_256EA1C58);
  v83[0] = *(_QWORD *)(v25 - 8);
  v83[1] = v25;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5598(v26, v55[0]);
  v27 = sub_23F6916B8(&qword_256EA1C60);
  v81 = *(_QWORD *)(v27 - 8);
  v82 = v27;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B57A0(v28, v55[0]);
  v29 = sub_23F6916B8(&qword_256EA1C68);
  v79 = *(_QWORD *)(v29 - 8);
  v80 = v29;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5560(v30, v55[0]);
  v31 = sub_23F6916B8(&qword_256EA1C70);
  v77 = *(_QWORD *)(v31 - 8);
  v78 = v31;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B557C(v32, v55[0]);
  v33 = sub_23F6916B8(&qword_256EA1C78);
  v75 = *(_QWORD *)(v33 - 8);
  v76 = v33;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5528(v34, v55[0]);
  v74 = sub_23F6916B8(&qword_256EA1C80);
  v73 = *(_QWORD *)(v74 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5314((uint64_t)v55 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  v36 = sub_23F6916B8(&qword_256EA1C88);
  sub_23F6B53F8(v36, (uint64_t)&a16);
  v72 = v37;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5314((uint64_t)v55 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  v71 = sub_23F6916B8(&qword_256EA1C90);
  v70 = *(_QWORD *)(v71 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B51A4();
  sub_23F6B5314(v39);
  v40 = sub_23F6916B8(&qword_256EA1C98);
  sub_23F6B53F8(v40, (uint64_t)&a10);
  v69 = v41;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5314((uint64_t)v55 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  v68 = sub_23F6916B8(&qword_256EA1CA0);
  v67 = *(_QWORD *)(v68 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B51A4();
  sub_23F6B5314(v43);
  v44 = sub_23F6916B8(&qword_256EA1CA8);
  sub_23F6B53F8(v44, (uint64_t)v85);
  v66 = v45;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5314((uint64_t)v55 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  v47 = sub_23F6916B8(&qword_256EA1CB0);
  sub_23F6B53F8(v47, (uint64_t)v83);
  v65 = v48;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B51A4();
  sub_23F6B5314(v49);
  v64 = sub_23F6916B8(&qword_256EA1CB8);
  v63 = *(_QWORD *)(v64 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5314((uint64_t)v55 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0));
  v62 = sub_23F6916B8(&qword_256EA1CC0);
  v61 = *(_QWORD *)(v62 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B51A4();
  sub_23F6B5314(v51);
  v60 = sub_23F6916B8(&qword_256EA1CC8);
  v59 = *(_QWORD *)(v60 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B51A4();
  sub_23F6B5314(v52);
  v58 = sub_23F6916B8(&qword_256EA1CD0);
  v57 = *(_QWORD *)(v58 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B51A4();
  sub_23F6B5314(v53);
  v56 = sub_23F6916B8(&qword_256EA1CD8);
  v55[2] = *(_QWORD *)(v56 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B51A4();
  sub_23F6B5314(v54);
  v55[0] = sub_23F6916B8(&qword_256EA1CE0);
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B53AC();
  sub_23F6916B8(&qword_256EA1CE8);
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5298();
  v86 = sub_23F6916B8(&qword_256EA1CF0);
  v85[1] = *(_QWORD *)(v86 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B59E0();
  sub_23F6ADC98(v24, v24[3]);
  sub_23F6AF4D4();
  sub_23FB2FCC8();
  __asm { BR              X10 }
}

void sub_23F6AA3E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);

  *(_BYTE *)(v2 - 65) = 0;
  sub_23F6AF948();
  sub_23FB2FAA0();
  sub_23F6B6178(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  v3 = sub_23F6B619C();
  v4(v3);
  sub_23F6B5100();
}

void _s16IntelligenceFlow3ASTO0aB14PlannerSupportE8PrefixOpO9hashValueSivg_0()
{
  sub_23F6B53C4();
  sub_23FB2FC68();
  sub_23F6B5608();
  sub_23F6B5398();
}

void AST.InfixOp.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;

  sub_23F6B5220();
  a19 = v23;
  a20 = v24;
  v90 = v20;
  v26 = v25;
  sub_23F6916B8(&qword_256EA1D98);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B57F4(v27, v67);
  sub_23F6916B8(&qword_256EA1DA0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B57BC(v28, v68);
  v29 = sub_23F6916B8(&qword_256EA1DA8);
  sub_23F6B53F8(v29, (uint64_t)&a15);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5598(v30, v69);
  sub_23F6916B8(&qword_256EA1DB0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5810(v31, v70);
  v32 = sub_23F6916B8(&qword_256EA1DB8);
  sub_23F6B53F8(v32, (uint64_t)&a11);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5404(v33, v71);
  v34 = sub_23F6916B8(&qword_256EA1DC0);
  sub_23F6B53F8(v34, (uint64_t)&a9);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B57A0(v35, v72);
  sub_23F6916B8(&qword_256EA1DC8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B582C(v36, v73);
  v37 = sub_23F6916B8(&qword_256EA1DD0);
  sub_23F6B53F8(v37, (uint64_t)&v88);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5544(v38, v74);
  v39 = sub_23F6916B8(&qword_256EA1DD8);
  sub_23F6B53F8(v39, (uint64_t)&v87);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5C10(v40, v75);
  v41 = sub_23F6916B8(&qword_256EA1DE0);
  sub_23F6B53F8(v41, (uint64_t)&v86);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5420(v42, v76);
  v43 = sub_23F6916B8(&qword_256EA1DE8);
  sub_23F6B53F8(v43, (uint64_t)&v85);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5560(v44, v77);
  sub_23F6916B8(&qword_256EA1DF0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B537C(v45, v78);
  sub_23F6916B8(&qword_256EA1DF8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5848(v46, v79);
  v47 = sub_23F6916B8(&qword_256EA1E00);
  sub_23F6B67F4(v47);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B658C(v48, v80);
  sub_23F6916B8(&qword_256EA1E08);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B557C(v49, v81);
  sub_23F6916B8(&qword_256EA1E10);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B57D8(v50, v82);
  sub_23F6916B8(&qword_256EA1E18);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5BF4(v51, v83);
  sub_23F6916B8(&qword_256EA1E20);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5528(v52, v84);
  sub_23F6916B8(&qword_256EA1E28);
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B5298();
  v53 = sub_23F6916B8(&qword_256EA1E30);
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B573C();
  v89 = v26;
  sub_23F6B6280(v26);
  sub_23F6AF4D4();
  sub_23F6B6D08();
  sub_23FB2FCB0();
  if (!v20)
  {
    v90 = v21;
    v54 = sub_23FB2FA94();
    v57 = *(_QWORD *)(v54 + 16);
    if (v57)
    {
      v58 = *(unsigned __int8 *)(v54 + 32);
      sub_23F6B6024(v54, v57, v55, v54 + 32, v56, (2 * v57) | 1);
      v60 = v59;
      v62 = v61;
      sub_23F6B6E44();
      if (v60 == v62 >> 1)
        __asm { BR              X9 }
    }
    v63 = v90;
    sub_23F6B6334();
    sub_23F6B5AD4();
    v65 = v64;
    sub_23F6916B8(&qword_256EA1870);
    *v65 = &type metadata for AST.InfixOp;
    sub_23FB2FA04();
    v66 = sub_23F6B56B8();
    sub_23F6B5DAC(v66, *MEMORY[0x24BEE26D0]);
    swift_willThrow();
    sub_23F6B5770();
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v22, v53);
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v89);
  sub_23F6B5100();
}

BOOL sub_23F6AB158(char *a1, char *a2)
{
  return static AST.InfixOp.== infix(_:_:)(*a1, *a2);
}

#error "23F6AB174: call analysis failed (funcsize=10)"

#error "23F6AB198: call analysis failed (funcsize=6)"

uint64_t sub_23F6AB1A4()
{
  unsigned __int8 *v0;

  return j___s16IntelligenceFlow3ASTO0aB14PlannerSupportE8PrefixOpO9hashValueSivg_0(*v0);
}

uint64_t AST.Program.description.getter()
{
  uint64_t v0;

  v0 = sub_23F6B5508();
  sub_23F6AB240(v0);
  sub_23F693E04();
  sub_23F6916B8(&qword_256EA1918);
  sub_23F6AF984();
  sub_23FB2F110();
  sub_23F6B6FC8();
  sub_23F6B5AB0();
  return sub_23F6B5994();
}

uint64_t AST.Stmt.description.getter(unint64_t a1)
{
  return sub_23F6ABAB8(0, a1);
}

uint64_t sub_23F6AB240(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v20 = MEMORY[0x24BEE4AF8];
    sub_23F711194(0, v1, 0);
    v2 = v20;
    v4 = (unint64_t *)(a1 + 32);
    do
    {
      v6 = *v4++;
      v5 = v6;
      v7 = v6 >> 62;
      if (v6 >> 62)
      {
        if ((_DWORD)v7 == 1)
          v8 = sub_23F6AC1D0(0);
        else
          v8 = sub_23F6AC324(0);
        v12 = v8;
        v13 = v9;
      }
      else
      {
        v10 = *(_QWORD *)(v5 + 16);
        swift_retain();
        sub_23F6A3728(v10);
        v18 = MEMORY[0x242673F50](32, 0xE100000000000000, 0);
        v19 = v11;
        AST.Expr.description.getter();
        sub_23FB2F254();
        swift_bridgeObjectRelease();
        sub_23F6A3764(v10);
        swift_release();
        v13 = v19;
        v12 = v18;
      }
      v15 = *(_QWORD *)(v20 + 16);
      v14 = *(_QWORD *)(v20 + 24);
      if (v15 >= v14 >> 1)
        sub_23F711194(v14 > 1, v15 + 1, 1);
      *(_QWORD *)(v20 + 16) = v15 + 1;
      v16 = v20 + 16 * v15;
      *(_QWORD *)(v16 + 32) = v12;
      *(_QWORD *)(v16 + 40) = v13;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_23F6AB3C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v12 = MEMORY[0x24BEE4AF8];
    sub_23F711194(0, v1, 0);
    v2 = v12;
    v4 = a1 + 32;
    do
    {
      v4 += 8;
      v5 = AST.Expr.description.getter();
      v7 = v6;
      v9 = *(_QWORD *)(v12 + 16);
      v8 = *(_QWORD *)(v12 + 24);
      if (v9 >= v8 >> 1)
        sub_23F711194(v8 > 1, v9 + 1, 1);
      *(_QWORD *)(v12 + 16) = v9 + 1;
      v10 = v12 + 16 * v9;
      *(_QWORD *)(v10 + 32) = v5;
      *(_QWORD *)(v10 + 40) = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_23F6AB4AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v21 = MEMORY[0x24BEE4AF8];
    sub_23F711194(0, v1, 0);
    v3 = v21;
    v4 = sub_23F7AE664(a1);
    if ((v4 & 0x8000000000000000) == 0)
    {
      v6 = v4;
      if (v4 < 1 << *(_BYTE *)(a1 + 32))
      {
        v7 = a1 + 64;
        while ((*(_QWORD *)(v7 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
        {
          if (v5 != *(_DWORD *)(a1 + 36))
            goto LABEL_18;
          v18 = v1;
          v19 = v5;
          v8 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v6);
          v9 = v3;
          v10 = *v8;
          v11 = v8[1];
          v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v6);
          swift_bridgeObjectRetain();
          sub_23F6A3728(v12);
          swift_bridgeObjectRetain();
          sub_23F6A3728(v12);
          swift_bridgeObjectRelease();
          sub_23F6A3764(v12);
          v20 = v10;
          swift_bridgeObjectRetain();
          v13 = sub_23FB2F254();
          AST.Expr.description.getter(v13);
          sub_23FB2F254();
          v3 = v9;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_23F6A3764(v12);
          v22 = v9;
          v14 = *(_QWORD *)(v9 + 16);
          v15 = *(_QWORD *)(v3 + 24);
          if (v14 >= v15 >> 1)
          {
            sub_23F711194(v15 > 1, v14 + 1, 1);
            v3 = v22;
          }
          *(_QWORD *)(v3 + 16) = v14 + 1;
          v16 = v3 + 16 * v14;
          *(_QWORD *)(v16 + 32) = v20;
          *(_QWORD *)(v16 + 40) = v11;
          if ((uint64_t)v6 >= -(-1 << *(_BYTE *)(a1 + 32)))
            goto LABEL_19;
          v7 = a1 + 64;
          if ((*(_QWORD *)(a1 + 64 + 8 * (v6 >> 6)) & (1 << v6)) == 0)
            goto LABEL_20;
          if (v19 != *(_DWORD *)(a1 + 36))
            goto LABEL_21;
          v17 = sub_23FB2F740();
          v1 = v18 - 1;
          if (v18 == 1)
            return;
          v6 = v17;
          if ((v17 & 0x8000000000000000) == 0)
          {
            v5 = *(_DWORD *)(a1 + 36);
            if (v17 < 1 << *(_BYTE *)(a1 + 32))
              continue;
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

uint64_t sub_23F6AB6E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_23F711194(0, v1, 0);
    v2 = v11;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1)
        sub_23F711194(v7 > 1, v8 + 1, 1);
      v4 += 2;
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t AST.Program.encode(to:)()
{
  uint64_t v0;

  v0 = sub_23F6B6548();
  sub_23F6AB240(v0);
  sub_23F6916B8(&qword_256EA1918);
  sub_23F6AF984();
  sub_23FB2F110();
  sub_23F6B6090();
  swift_bridgeObjectRelease();
  sub_23F6B6AB8();
  sub_23FB2F260();
  return sub_23F693E04();
}

uint64_t AST.Program.init(from:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  uint64_t v8[5];

  sub_23F6AF9C8(a1, (uint64_t)v8);
  v5 = sub_23FB2F1F4();
  if (v2)
    return _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(a1);
  static Parser.parse(string:)(v5, v6, v8);
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(a1);
  result = sub_23F6B6090();
  *a2 = v8[0];
  return result;
}

uint64_t sub_23F6AB904@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return AST.Program.init(from:)(a1, a2);
}

uint64_t sub_23F6AB918()
{
  return AST.Program.encode(to:)();
}

uint64_t sub_23F6AB92C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v3 = *(_QWORD *)(a2 + 16);
  if (!v3)
    return 0;
  v5 = a1 + 0x4000000000000000;
  v6 = 2 * a1;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    v9 = *(_QWORD *)(a2 + 8 * v8 + 32);
    if (v9 >> 62)
    {
      if (v9 >> 62 == 1)
      {
        swift_retain();
        sub_23F6AC1D0(a1);
      }
      else
      {
        swift_retain();
        sub_23F6AC324(a1);
      }
      goto LABEL_9;
    }
    if (v5 < 0)
      break;
    v10 = *(_QWORD *)(v9 + 16);
    swift_retain();
    sub_23F6A3728(v10);
    MEMORY[0x242673F50](32, 0xE100000000000000, v6);
    AST.Expr.description.getter();
    sub_23FB2F254();
    swift_bridgeObjectRelease();
    sub_23F6A3764(v10);
LABEL_9:
    ++v8;
    sub_23FB2F254();
    swift_bridgeObjectRelease();
    sub_23FB2F254();
    result = swift_release();
    if (v3 == v8)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23F6ABAB8(uint64_t result, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  if (a2 >> 62)
  {
    if (a2 >> 62 == 1)
      return sub_23F6AC1D0(result);
    else
      return sub_23F6AC324(result);
  }
  else if (result + 0x4000000000000000 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = 2 * result;
    sub_23F6B6A08();
    v3 = MEMORY[0x242673F50](32, 0xE100000000000000, v2);
    AST.Expr.description.getter();
    sub_23F6B68F8();
    sub_23F693E04();
    sub_23F6B624C();
    return v3;
  }
  return result;
}

void AST.Expr.description.getter()
{
  sub_23F6B5CF0();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8]();
  sub_23F6B58C8();
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8]();
  sub_23F693EB0();
  sub_23F6B6F74();
  __asm { BR              X11 }
}

void sub_23F6ABC14()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F6B69E0();
}

void sub_23F6AC0C0()
{
  JUMPOUT(0x23F6AC0A4);
}

void sub_23F6AC0D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = sub_23F6B603C();
  sub_23F6B5A28(v3, v1);
  *(_QWORD *)(v2 - 80) = 0;
  *(_QWORD *)(v2 - 72) = 0xE000000000000000;
  sub_23FB2F7AC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 - 80) = v0 - 1;
  *(_QWORD *)(v2 - 72) = 0x800000023FB30E10;
  sub_23F6B4EEC((uint64_t)&unk_256EA1E40);
  sub_23FB2FB48();
  sub_23F6B6840();
  sub_23F693E04();
  sub_23F6B5D50();
  sub_23F6B5508();
  sub_23FB2F044();
  sub_23FB2F254();
  sub_23F693E04();
  sub_23F6B5908();
  sub_23F6B5A54();
  sub_23F6B53D0();
  JUMPOUT(0x23F6AC0A4);
}

void sub_23F6AC1A8()
{
  JUMPOUT(0x23F6AC0A4);
}

uint64_t sub_23F6AC1D0(uint64_t result)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (result + 0x4000000000000000 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = result;
    v4 = v1[1];
    v3 = v1[2];
    v5 = *v1;
    v6 = MEMORY[0x242673F50](32, 0xE100000000000000, 2 * result);
    swift_bridgeObjectRetain();
    sub_23FB2F254();
    sub_23F6A3728(v5);
    AST.Expr.description.getter();
    sub_23FB2F254();
    swift_bridgeObjectRelease();
    sub_23F6A3764(v5);
    sub_23FB2F254();
    v7 = v2 + 1;
    sub_23F6AB92C(v7, v4);
    sub_23FB2F254();
    swift_bridgeObjectRelease();
    if (v3)
    {
      sub_23FB2F254();
      sub_23FB2F254();
      swift_bridgeObjectRelease();
      sub_23F6AB92C(v7, v3);
      sub_23FB2F254();
    }
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t sub_23F6AC324(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (result + 0x4000000000000000 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = result;
    v4 = *(_QWORD *)(v1 + 16);
    v3 = *(_QWORD *)(v1 + 24);
    v5 = MEMORY[0x242673F50](32, 0xE100000000000000, 2 * result);
    sub_23FB2F7AC();
    swift_bridgeObjectRelease();
    sub_23FB2F254();
    swift_bridgeObjectRetain();
    sub_23FB2F254();
    swift_bridgeObjectRelease();
    sub_23FB2F254();
    sub_23F6A3728(v4);
    AST.Expr.description.getter();
    sub_23FB2F254();
    swift_bridgeObjectRelease();
    sub_23F6A3764(v4);
    sub_23FB2F254();
    sub_23F6AB92C(v2 + 1, v3);
    sub_23FB2F254();
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

uint64_t sub_23F6AC464()
{
  unint64_t *v0;

  return AST.Stmt.description.getter(*v0);
}

void AST.Literal.description.getter(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_23F6AC4BC()
{
  char v0;

  if ((v0 & 1) != 0)
    return 1702195796;
  else
    return 0x65736C6146;
}

uint64_t sub_23F6AC7C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23F6AC860(a3);
  v6 = v5;
  swift_bridgeObjectRetain();
  sub_23FB2F254();
  sub_23F6ACCC0(v4, v6);
  sub_23FB2F254();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23FB2F254();
  return a1;
}

uint64_t sub_23F6AC860(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  char v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = 0;
    v4 = MEMORY[0x24BEE4AF8];
    do
    {
      sub_23FB2FB48();
      sub_23FB2F254();
      swift_bridgeObjectRelease();
      sub_23FB2F254();
      swift_bridgeObjectRetain();
      v5 = sub_23F78C6DC();
      v7 = v6;
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
      {
        swift_isUniquelyReferenced_nonNull_native();
        sub_23F6916B8(&qword_256EA2810);
        sub_23FB2F914();
        swift_bridgeObjectRelease();
        v8 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v5);
        sub_23FB2F92C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23F6A3728(v8);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F753B64();
          v4 = v10;
        }
        v9 = *(_QWORD *)(v4 + 16);
        if (v9 >= *(_QWORD *)(v4 + 24) >> 1)
        {
          sub_23F753B64();
          v4 = v11;
        }
        *(_QWORD *)(v4 + 16) = v9 + 1;
        *(_QWORD *)(v4 + 8 * v9 + 32) = v8;
        sub_23F6A3764(v8);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a1;
}

void sub_23F6ACA7C(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;

  if (!a1)
  {
    sub_23F694C84();
    return;
  }
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = v1[1];
    if ((v2 & 0x2000000000000000) != 0)
      v3 = HIBYTE(v2) & 0xF;
    else
      v3 = *v1 & 0xFFFFFFFFFFFFLL;
    v4 = sub_23FB2F230();
    if ((v5 & 1) != 0)
      goto LABEL_12;
    if (4 * v3 >= v4 >> 14)
    {
      sub_23FB2F1AC();
      return;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
}

void sub_23F6ACB10()
{
  uint64_t v0;

  AST.Literal.description.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t AST.PrefixOp.description.getter(char a1)
{
  if (!a1)
    return 43;
  if (a1 == 1)
    return 45;
  return 544501614;
}

uint64_t sub_23F6ACB54()
{
  char *v0;

  return AST.PrefixOp.description.getter(*v0);
}

uint64_t AST.InfixOp.description.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F6ACB84 + 4 * byte_23FB471C0[a1]))(61, 0xE100000000000000);
}

uint64_t sub_23F6ACB84()
{
  return 43;
}

uint64_t sub_23F6ACB8C()
{
  return 15659;
}

uint64_t sub_23F6ACB98()
{
  return 45;
}

uint64_t sub_23F6ACBA0()
{
  return 15661;
}

uint64_t sub_23F6ACBAC()
{
  return 47;
}

uint64_t sub_23F6ACBB4()
{
  return 15663;
}

uint64_t sub_23F6ACBC0()
{
  return 42;
}

uint64_t sub_23F6ACBC8()
{
  return 15658;
}

uint64_t sub_23F6ACBD4()
{
  return 10794;
}

uint64_t sub_23F6ACBE0()
{
  return 15677;
}

uint64_t sub_23F6ACBEC()
{
  return 15649;
}

uint64_t sub_23F6ACBF8()
{
  return 28265;
}

uint64_t sub_23F6ACC04()
{
  return 15678;
}

uint64_t sub_23F6ACC10()
{
  return 62;
}

uint64_t sub_23F6ACC18()
{
  return 15676;
}

uint64_t sub_23F6ACC24()
{
  return 60;
}

uint64_t sub_23F6ACC2C()
{
  return 6581857;
}

uint64_t sub_23F6ACC3C()
{
  return 29295;
}

uint64_t sub_23F6ACC48()
{
  unsigned __int8 *v0;

  return AST.InfixOp.description.getter(*v0);
}

void AST.IfStmt.description.getter()
{
  sub_23F6AC1D0(0);
  sub_23F6B6BFC();
}

void AST.ForInStmt.description.getter()
{
  sub_23F6AC324(0);
  sub_23F6B6BFC();
}

uint64_t sub_23F6ACCC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRetain();
  sub_23F6AB3C8(a2);
  swift_bridgeObjectRelease();
  v3 = swift_bridgeObjectRetain();
  sub_23F6AB4AC(v3);
  swift_bridgeObjectRelease();
  sub_23F6B96FC();
  sub_23F6916B8(&qword_256EA1918);
  sub_23F6AF984();
  v4 = sub_23FB2F110();
  swift_bridgeObjectRelease();
  return v4;
}

void sub_23F6ACD8C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _OWORD v53[4];
  uint64_t v54;

  sub_23F6B50E8();
  v4 = v3;
  v5 = sub_23F6B5AC8();
  v49 = *(_QWORD *)(type metadata accessor for AST.FlatValue(v5) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B57A0(v7, v45);
  sub_23F6916B8(&qword_256EA27D0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5C9C();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B62F8();
  v47 = v4 + 64;
  v10 = 1 << *(_BYTE *)(v4 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v4 + 64);
  sub_23F6B5AE8();
  v48 = v13;
  v46 = v13 - 1;
  v50 = v4;
  sub_23F6B54F8();
  v14 = 0;
  v52 = 0;
  v15 = &qword_256EA27D8;
  if (!v12)
    goto LABEL_6;
LABEL_4:
  v16 = v14;
  v17 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  v18 = v17 | (v52 << 6);
  while (2)
  {
    v19 = (uint64_t *)(*(_QWORD *)(v50 + 48) + 16 * v18);
    v21 = *v19;
    v20 = v19[1];
    v22 = *(_QWORD *)(v50 + 56) + *(_QWORD *)(v49 + 72) * v18;
    v23 = v15;
    v24 = sub_23F6B5D90();
    sub_23F6B4F24(v22, (uint64_t)v1 + *(int *)(v24 + 48), type metadata accessor for AST.FlatValue);
    *v1 = v21;
    v1[1] = v20;
    v25 = v24;
    v15 = v23;
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v1, 0, 1, v25);
    sub_23F6B54F8();
    v14 = v16;
    while (1)
    {
      sub_23F6B4EC0((uint64_t)v1, v2, &qword_256EA27D0);
      v38 = sub_23F6B5D90();
      v39 = sub_23F6B6468();
      sub_23F6B5164(v39, v40, v38);
      if (v41)
      {
        swift_release();
        sub_23F6B53D8();
        sub_23F693DDC();
        return;
      }
      sub_23F6B4FD0(v2 + *(int *)(v38 + 48), v51, type metadata accessor for AST.FlatValue);
      v42 = *(_QWORD *)(v0 + 64);
      v43 = *(_OWORD *)(v0 + 16);
      v53[0] = *(_OWORD *)v0;
      v53[1] = v43;
      v44 = *(_OWORD *)(v0 + 48);
      v53[2] = *(_OWORD *)(v0 + 32);
      v53[3] = v44;
      v54 = v42;
      sub_23F6B611C();
      sub_23F6B6090();
      AST.FlatValue.hash(into:)(v53);
      sub_23F6B5684();
      v14 ^= sub_23FB2FC8C();
      if (v12)
        goto LABEL_4;
LABEL_6:
      if (__OFADD__(v52, 1))
      {
        __break(1u);
        goto LABEL_26;
      }
      sub_23F6B6E10();
      if (v27 != v28)
      {
        if (*(_QWORD *)(v47 + 8 * v26))
          goto LABEL_10;
        v52 = v26;
        if (v26 + 1 < v48)
        {
          if (*(_QWORD *)(v47 + 8 * (v26 + 1)))
            goto LABEL_10;
          v33 = v26 + 2;
          v52 = v26 + 1;
          if (v26 + 2 < v48)
            break;
        }
      }
LABEL_20:
      v35 = sub_23F6B5D90();
      sub_23F6B5A8C((uint64_t)v1, v36, v37, v35);
      v12 = 0;
    }
    if (*(_QWORD *)(v47 + 8 * v33))
    {
LABEL_10:
      v16 = v14;
      sub_23F6B6AC4();
      v12 = v30 & v29;
      v18 = v32 + (v31 << 6);
      v52 = v31;
      continue;
    }
    break;
  }
  while (!__OFADD__(v33, 1))
  {
    sub_23F6B6E10();
    if (v27 == v28)
    {
      v52 = v46;
      goto LABEL_20;
    }
    sub_23F6B56E8();
    if (v34)
      goto LABEL_10;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_23F6AD064(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v3 = a2 + 64;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  v10 = 0;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    v16 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    sub_23F6A3728(v16);
    sub_23FB2F200();
    swift_bridgeObjectRelease();
    AST.Expr.hash(into:)();
    sub_23F6A3764(v16);
    result = sub_23FB2FC8C();
    v9 ^= result;
    if (v6)
      goto LABEL_4;
LABEL_5:
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v13 >= v7)
      goto LABEL_19;
    v14 = *(_QWORD *)(v3 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v7)
        goto LABEL_19;
      v14 = *(_QWORD *)(v3 + 8 * v10);
      if (!v14)
        break;
    }
LABEL_16:
    v6 = (v14 - 1) & v14;
  }
  v15 = v13 + 2;
  if (v15 >= v7)
  {
LABEL_19:
    swift_release();
    return sub_23FB2FC68();
  }
  v14 = *(_QWORD *)(v3 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_16;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v7)
      goto LABEL_19;
    v14 = *(_QWORD *)(v3 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_16;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_23F6AD218(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;

  v16 = a2 + 64;
  v3 = 1 << *(_BYTE *)(a2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a2 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  v9 = 0;
  if (!v5)
    goto LABEL_5;
LABEL_4:
  v10 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (i = v10 | (v9 << 6); ; i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    v15 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 16 * i + 8);
    swift_bridgeObjectRetain();
    sub_23F6A3728(v15);
    sub_23FB2F200();
    swift_bridgeObjectRelease();
    sub_23FB2FC68();
    AST.Expr.hash(into:)();
    sub_23F6A3764(v15);
    result = sub_23FB2FC8C();
    v8 ^= result;
    if (v5)
      goto LABEL_4;
LABEL_5:
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v12 >= v6)
      goto LABEL_19;
    v13 = *(_QWORD *)(v16 + 8 * v12);
    ++v9;
    if (!v13)
    {
      v9 = v12 + 1;
      if (v12 + 1 >= v6)
        goto LABEL_19;
      v13 = *(_QWORD *)(v16 + 8 * v9);
      if (!v13)
        break;
    }
LABEL_16:
    v5 = (v13 - 1) & v13;
  }
  v14 = v12 + 2;
  if (v14 >= v6)
  {
LABEL_19:
    swift_release();
    return sub_23FB2FC68();
  }
  v13 = *(_QWORD *)(v16 + 8 * v14);
  if (v13)
  {
    v9 = v14;
    goto LABEL_16;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v6)
      goto LABEL_19;
    v13 = *(_QWORD *)(v16 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_16;
  }
LABEL_21:
  __break(1u);
  return result;
}

void sub_23F6AD3EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  sub_23F6B50E8();
  v4 = v3;
  v5 = type metadata accessor for Candidate(0);
  v42 = *(_QWORD *)(v5 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F693EB0();
  sub_23F6916B8(&qword_256EA26E8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5F5C();
  v40 = v4 + 64;
  sub_23F6B5754();
  v11 = v10 & v9;
  sub_23F6B5AE8();
  v41 = v12;
  v44 = v4;
  sub_23F6B5508();
  v43 = v5;
  if (v11)
  {
    v13 = __clz(__rbit64(v11));
LABEL_3:
    v14 = *(_QWORD *)(v4 + 48) + 32 * v13;
    v16 = *(_QWORD *)v14;
    v15 = *(_QWORD *)(v14 + 8);
    v17 = *(_QWORD *)(v14 + 16);
    v18 = *(_BYTE *)(v14 + 24);
    v19 = *(_QWORD *)(v44 + 56) + *(_QWORD *)(v42 + 72) * v13;
    v20 = sub_23F6B6244();
    sub_23F6B4F24(v19, v1 + *(int *)(v20 + 48), type metadata accessor for Candidate);
    *(_QWORD *)v1 = v16;
    *(_QWORD *)(v1 + 8) = v15;
    *(_QWORD *)(v1 + 16) = v17;
    *(_BYTE *)(v1 + 24) = v18;
    v21 = sub_23F6B6230();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v21, v22, v23, v24);
    sub_23F6B54F8();
    v5 = v43;
    goto LABEL_18;
  }
  sub_23F6B6FD4();
  if (v26 != v27)
  {
    if (!*(_QWORD *)(v40 + 8 * v25))
    {
      if (v25 + 1 >= v41)
        goto LABEL_17;
      if (!*(_QWORD *)(v40 + 8 * (v25 + 1)))
      {
        v30 = v25 + 2;
        if (v25 + 2 >= v41)
          goto LABEL_17;
        if (!*(_QWORD *)(v40 + 8 * v30))
        {
          do
          {
            if (__OFADD__(v30, 1))
            {
              __break(1u);
              JUMPOUT(0x23F6AD8F4);
            }
            sub_23F6B6FD4();
            if (v26 == v27)
              goto LABEL_17;
            sub_23F6B56E8();
          }
          while (!v31);
        }
      }
    }
    sub_23F6B5DC0();
    v13 = v29 + (v28 << 6);
    goto LABEL_3;
  }
LABEL_17:
  v32 = sub_23F6B6244();
  sub_23F6B5A8C(v1, v33, v34, v32);
LABEL_18:
  v35 = sub_23F6B6224();
  sub_23F6B4EC0(v35, v36, &qword_256EA26E8);
  v37 = sub_23F6B6244();
  sub_23F6B5164(v2, 1, v37);
  if (!v38)
  {
    v39 = *(unsigned __int8 *)(v2 + 24);
    sub_23F6B4FD0(v2 + *(int *)(v37 + 48), v0, type metadata accessor for Candidate);
    swift_bridgeObjectRetain();
    sub_23FB2F200();
    swift_bridgeObjectRelease();
    sub_23FB2FC74();
    if (v39 != 1)
      sub_23FB2FC68();
    swift_bridgeObjectRelease();
    sub_23F6B6634();
    sub_23F6B4EEC((uint64_t)&unk_256EA26F8);
    sub_23FB2F074();
    __asm { BR              X9 }
  }
  swift_release();
  sub_23FB2FC68();
  sub_23F693DDC();
}

void sub_23F6AD914()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13[6];

  sub_23F6B50E8();
  v3 = v2;
  sub_23F6B5AC8();
  v4 = sub_23FB2C4B8();
  v13[4] = *(_QWORD *)(v4 - 8);
  v13[5] = v4;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v5);
  v13[3] = (uint64_t)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F6B58C8();
  v13[1] = *(_QWORD *)(v7 - 8);
  v13[2] = v7;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B537C(v9, v13[0]);
  type metadata accessor for AST.FlatValue(0);
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B59E0();
  v11 = *(_QWORD *)(v3 + 16);
  sub_23F6B53D8();
  if (v11)
  {
    sub_23F6B60F4(v3 + ((*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80)), v1);
    v12 = (char *)&loc_23F6ADA08 + 4 * byte_23FB471D3[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  sub_23F693DDC();
}

void sub_23F6ADBC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 16);
  sub_23FB2FC68();
  if (v3)
  {
    v4 = a2 + 32;
    do
    {
      v4 += 8;
      AST.Expr.hash(into:)();
      --v3;
    }
    while (v3);
  }
}

uint64_t sub_23F6ADC24(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_23FB2FC68();
  if (v3)
  {
    v5 = a2 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_23FB2F200();
      result = swift_bridgeObjectRelease();
      v5 += 16;
      --v3;
    }
    while (v3);
  }
  return result;
}

_QWORD *sub_23F6ADC98(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_23F6ADCBC()
{
  unint64_t result;

  result = qword_256EA1668;
  if (!qword_256EA1668)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4C8BC, &_s4ExprO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1668);
  }
  return result;
}

unint64_t sub_23F6ADCF8()
{
  unint64_t result;

  result = qword_256EA1670;
  if (!qword_256EA1670)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4C86C, &_s4ExprO26ContinuePlanningCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1670);
  }
  return result;
}

unint64_t sub_23F6ADD34()
{
  unint64_t result;

  result = qword_256EA1678;
  if (!qword_256EA1678)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4C81C, &_s4ExprO19EndOfPlanCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1678);
  }
  return result;
}

unint64_t sub_23F6ADD70()
{
  unint64_t result;

  result = qword_256EA1680;
  if (!qword_256EA1680)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4C7CC, &_s4ExprO26UpdateParametersCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1680);
  }
  return result;
}

unint64_t sub_23F6ADDAC()
{
  unint64_t result;

  result = qword_256EA1690;
  if (!qword_256EA1690)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4C77C, &_s4ExprO26GetMentionedAppsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1690);
  }
  return result;
}

unint64_t sub_23F6ADDE8()
{
  unint64_t result;

  result = qword_256EA1698;
  if (!qword_256EA1698)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.GetMentionedApps, &type metadata for AST.Builtin.GetMentionedApps);
    atomic_store(result, (unint64_t *)&qword_256EA1698);
  }
  return result;
}

unint64_t sub_23F6ADE24()
{
  unint64_t result;

  result = qword_256EA16A0;
  if (!qword_256EA16A0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4C72C, &_s4ExprO16CancelCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA16A0);
  }
  return result;
}

unint64_t sub_23F6ADE60()
{
  unint64_t result;

  result = qword_256EA16A8;
  if (!qword_256EA16A8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.Cancel, &type metadata for AST.Builtin.Cancel);
    atomic_store(result, (unint64_t *)&qword_256EA16A8);
  }
  return result;
}

unint64_t sub_23F6ADE9C()
{
  unint64_t result;

  result = qword_256EA16B0;
  if (!qword_256EA16B0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4C6DC, &_s4ExprO16RejectCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA16B0);
  }
  return result;
}

unint64_t sub_23F6ADED8()
{
  unint64_t result;

  result = qword_256EA16B8;
  if (!qword_256EA16B8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.Reject, &type metadata for AST.Builtin.Reject);
    atomic_store(result, (unint64_t *)&qword_256EA16B8);
  }
  return result;
}

unint64_t sub_23F6ADF14()
{
  unint64_t result;

  result = qword_256EA16C0;
  if (!qword_256EA16C0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4C68C, &_s4ExprO14UndoCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA16C0);
  }
  return result;
}

unint64_t sub_23F6ADF50()
{
  unint64_t result;

  result = qword_256EA16C8;
  if (!qword_256EA16C8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.Undo, &type metadata for AST.Builtin.Undo);
    atomic_store(result, (unint64_t *)&qword_256EA16C8);
  }
  return result;
}

unint64_t sub_23F6ADF8C()
{
  unint64_t result;

  result = qword_256EA16D0;
  if (!qword_256EA16D0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4C63C, &_s4ExprO24NoMatchingToolCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA16D0);
  }
  return result;
}

unint64_t sub_23F6ADFC8()
{
  unint64_t result;

  result = qword_256EA16D8;
  if (!qword_256EA16D8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.NoMatchingTool, &type metadata for AST.Builtin.NoMatchingTool);
    atomic_store(result, (unint64_t *)&qword_256EA16D8);
  }
  return result;
}

unint64_t sub_23F6AE004()
{
  unint64_t result;

  result = qword_256EA16E0;
  if (!qword_256EA16E0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4C5EC, &_s4ExprO21ResolveToolCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA16E0);
  }
  return result;
}

unint64_t sub_23F6AE040()
{
  unint64_t result;

  result = qword_256EA16E8;
  if (!qword_256EA16E8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.ResolveTool, &type metadata for AST.Builtin.ResolveTool);
    atomic_store(result, (unint64_t *)&qword_256EA16E8);
  }
  return result;
}

unint64_t sub_23F6AE07C()
{
  unint64_t result;

  result = qword_256EA16F0;
  if (!qword_256EA16F0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4C59C, &_s4ExprO17PickOneCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA16F0);
  }
  return result;
}

unint64_t sub_23F6AE0B8()
{
  unint64_t result;

  result = qword_256EA16F8;
  if (!qword_256EA16F8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.PickOne, &type metadata for AST.Builtin.PickOne);
    atomic_store(result, (unint64_t *)&qword_256EA16F8);
  }
  return result;
}

unint64_t sub_23F6AE0F4()
{
  unint64_t result;

  result = qword_256EA1700;
  if (!qword_256EA1700)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4C54C, &_s4ExprO16SearchCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1700);
  }
  return result;
}

unint64_t sub_23F6AE130()
{
  unint64_t result;

  result = qword_256EA1708;
  if (!qword_256EA1708)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.Search, &type metadata for AST.Builtin.Search);
    atomic_store(result, (unint64_t *)&qword_256EA1708);
  }
  return result;
}

unint64_t sub_23F6AE16C()
{
  unint64_t result;

  result = qword_256EA1710;
  if (!qword_256EA1710)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4C4FC, &_s4ExprO17ConfirmCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1710);
  }
  return result;
}

unint64_t sub_23F6AE1A8()
{
  unint64_t result;

  result = qword_256EA1718;
  if (!qword_256EA1718)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.Confirm, &type metadata for AST.Builtin.Confirm);
    atomic_store(result, (unint64_t *)&qword_256EA1718);
  }
  return result;
}

unint64_t sub_23F6AE1E4()
{
  unint64_t result;

  result = qword_256EA1720;
  if (!qword_256EA1720)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4C4AC, &_s4ExprO14PickCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1720);
  }
  return result;
}

unint64_t sub_23F6AE220()
{
  unint64_t result;

  result = qword_256EA1728;
  if (!qword_256EA1728)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.Pick, &type metadata for AST.Builtin.Pick);
    atomic_store(result, (unint64_t *)&qword_256EA1728);
  }
  return result;
}

unint64_t sub_23F6AE25C()
{
  unint64_t result;

  result = qword_256EA1730;
  if (!qword_256EA1730)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4C45C, &_s4ExprO13SayCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1730);
  }
  return result;
}

unint64_t sub_23F6AE298()
{
  unint64_t result;

  result = qword_256EA1738;
  if (!qword_256EA1738)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.Say, &type metadata for AST.Builtin.Say);
    atomic_store(result, (unint64_t *)&qword_256EA1738);
  }
  return result;
}

unint64_t sub_23F6AE2D4()
{
  unint64_t result;

  result = qword_256EA1740;
  if (!qword_256EA1740)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4C40C, &_s4ExprO14CallCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1740);
  }
  return result;
}

uint64_t sub_23F6AE310(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x242674E50](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_23F6AE354()
{
  unint64_t result;

  result = qword_256EA1758;
  if (!qword_256EA1758)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Expr, &type metadata for AST.Expr);
    atomic_store(result, (unint64_t *)&qword_256EA1758);
  }
  return result;
}

unint64_t sub_23F6AE390()
{
  unint64_t result;

  result = qword_256EA1760;
  if (!qword_256EA1760)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4C3BC, &_s4ExprO15IndexCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1760);
  }
  return result;
}

unint64_t sub_23F6AE3CC()
{
  unint64_t result;

  result = qword_256EA1768;
  if (!qword_256EA1768)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4C36C, &_s4ExprO13DotCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1768);
  }
  return result;
}

unint64_t sub_23F6AE408()
{
  unint64_t result;

  result = qword_256EA1770;
  if (!qword_256EA1770)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4C31C, &_s4ExprO15InfixCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1770);
  }
  return result;
}

unint64_t sub_23F6AE444()
{
  unint64_t result;

  result = qword_256EA1778;
  if (!qword_256EA1778)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.InfixOp, &type metadata for AST.InfixOp);
    atomic_store(result, (unint64_t *)&qword_256EA1778);
  }
  return result;
}

unint64_t sub_23F6AE480()
{
  unint64_t result;

  result = qword_256EA1780;
  if (!qword_256EA1780)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4C2CC, &_s4ExprO16PrefixCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1780);
  }
  return result;
}

unint64_t sub_23F6AE4BC()
{
  unint64_t result;

  result = qword_256EA1788;
  if (!qword_256EA1788)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.PrefixOp, &type metadata for AST.PrefixOp);
    atomic_store(result, (unint64_t *)&qword_256EA1788);
  }
  return result;
}

unint64_t sub_23F6AE4F8()
{
  unint64_t result;

  result = qword_256EA1790;
  if (!qword_256EA1790)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4C27C, &_s4ExprO17LiteralCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1790);
  }
  return result;
}

unint64_t sub_23F6AE534()
{
  unint64_t result;

  result = qword_256EA1798;
  if (!qword_256EA1798)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Literal, &type metadata for AST.Literal);
    atomic_store(result, (unint64_t *)&qword_256EA1798);
  }
  return result;
}

unint64_t sub_23F6AE570()
{
  unint64_t result;

  result = qword_256EA17A0;
  if (!qword_256EA17A0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4C22C, &_s4ExprO21StatementIdCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA17A0);
  }
  return result;
}

unint64_t sub_23F6AE5AC()
{
  unint64_t result;

  result = qword_256EA17B0;
  if (!qword_256EA17B0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4C1DC, &_s4ExprO15IdentCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA17B0);
  }
  return result;
}

unint64_t sub_23F6AE5E8()
{
  unint64_t result;

  result = qword_256EA1880;
  if (!qword_256EA1880)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.GetMentionedApps, &type metadata for AST.Builtin.GetMentionedApps);
    atomic_store(result, (unint64_t *)&qword_256EA1880);
  }
  return result;
}

uint64_t sub_23F6AE624()
{
  sub_23F6B6A60();
  sub_23F6B688C();
  return swift_deallocObject();
}

unint64_t sub_23F6AE63C()
{
  unint64_t result;

  result = qword_256EA1888;
  if (!qword_256EA1888)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.Cancel, &type metadata for AST.Builtin.Cancel);
    atomic_store(result, (unint64_t *)&qword_256EA1888);
  }
  return result;
}

unint64_t sub_23F6AE678()
{
  unint64_t result;

  result = qword_256EA1890;
  if (!qword_256EA1890)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.Reject, &type metadata for AST.Builtin.Reject);
    atomic_store(result, (unint64_t *)&qword_256EA1890);
  }
  return result;
}

unint64_t sub_23F6AE6B4()
{
  unint64_t result;

  result = qword_256EA1898;
  if (!qword_256EA1898)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.Undo, &type metadata for AST.Builtin.Undo);
    atomic_store(result, (unint64_t *)&qword_256EA1898);
  }
  return result;
}

unint64_t sub_23F6AE6F0()
{
  unint64_t result;

  result = qword_256EA18A0;
  if (!qword_256EA18A0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.NoMatchingTool, &type metadata for AST.Builtin.NoMatchingTool);
    atomic_store(result, (unint64_t *)&qword_256EA18A0);
  }
  return result;
}

unint64_t sub_23F6AE72C()
{
  unint64_t result;

  result = qword_256EA18A8;
  if (!qword_256EA18A8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.ResolveTool, &type metadata for AST.Builtin.ResolveTool);
    atomic_store(result, (unint64_t *)&qword_256EA18A8);
  }
  return result;
}

unint64_t sub_23F6AE768()
{
  unint64_t result;

  result = qword_256EA18B0;
  if (!qword_256EA18B0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.PickOne, &type metadata for AST.Builtin.PickOne);
    atomic_store(result, (unint64_t *)&qword_256EA18B0);
  }
  return result;
}

uint64_t sub_23F6AE7A4()
{
  sub_23F6B6A60();
  return swift_deallocObject();
}

unint64_t sub_23F6AE7C4()
{
  unint64_t result;

  result = qword_256EA18B8;
  if (!qword_256EA18B8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.Search, &type metadata for AST.Builtin.Search);
    atomic_store(result, (unint64_t *)&qword_256EA18B8);
  }
  return result;
}

unint64_t sub_23F6AE800()
{
  unint64_t result;

  result = qword_256EA18C0;
  if (!qword_256EA18C0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.Confirm, &type metadata for AST.Builtin.Confirm);
    atomic_store(result, (unint64_t *)&qword_256EA18C0);
  }
  return result;
}

uint64_t sub_23F6AE83C()
{
  sub_23F6B6A60();
  return swift_deallocObject();
}

unint64_t sub_23F6AE85C()
{
  unint64_t result;

  result = qword_256EA18C8;
  if (!qword_256EA18C8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.Pick, &type metadata for AST.Builtin.Pick);
    atomic_store(result, (unint64_t *)&qword_256EA18C8);
  }
  return result;
}

uint64_t sub_23F6AE898()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_23F6AE8BC()
{
  unint64_t result;

  result = qword_256EA18D0;
  if (!qword_256EA18D0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.Say, &type metadata for AST.Builtin.Say);
    atomic_store(result, (unint64_t *)&qword_256EA18D0);
  }
  return result;
}

uint64_t sub_23F6AE8F8()
{
  sub_23F6B6A60();
  swift_bridgeObjectRelease();
  sub_23F6B68BC();
  return swift_deallocObject();
}

void sub_23F6AE918(uint64_t a1)
{
  void (*v1)(void);
  void (*v2)(void);

  if (!sub_23F6B6A68(a1))
  {
    v2 = v1;
    sub_23F6AE310(&qword_256EA1748);
    v2();
    sub_23F6B64B8();
  }
  sub_23F6B647C();
}

unint64_t sub_23F6AE968()
{
  unint64_t result;

  result = qword_256EA18E0;
  if (!qword_256EA18E0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Expr, &type metadata for AST.Expr);
    atomic_store(result, (unint64_t *)&qword_256EA18E0);
  }
  return result;
}

uint64_t sub_23F6AE9A4()
{
  uint64_t v0;

  sub_23F6A3764(*(_QWORD *)(v0 + 16));
  sub_23F6A3764(*(_QWORD *)(v0 + 24));
  sub_23F6B688C();
  return swift_deallocObject();
}

uint64_t sub_23F6AE9C8()
{
  uint64_t v0;

  sub_23F6A3764(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease();
  sub_23F6B68BC();
  return swift_deallocObject();
}

uint64_t sub_23F6AE9EC()
{
  uint64_t v0;

  sub_23F6A3764(*(_QWORD *)(v0 + 24));
  sub_23F6A3764(*(_QWORD *)(v0 + 32));
  sub_23F6B68BC();
  return swift_deallocObject();
}

unint64_t sub_23F6AEA10()
{
  unint64_t result;

  result = qword_256EA18E8;
  if (!qword_256EA18E8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.InfixOp, &type metadata for AST.InfixOp);
    atomic_store(result, (unint64_t *)&qword_256EA18E8);
  }
  return result;
}

uint64_t sub_23F6AEA4C()
{
  uint64_t v0;

  sub_23F6A3764(*(_QWORD *)(v0 + 24));
  sub_23F6B688C();
  return swift_deallocObject();
}

unint64_t sub_23F6AEA68()
{
  unint64_t result;

  result = qword_256EA18F0;
  if (!qword_256EA18F0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.PrefixOp, &type metadata for AST.PrefixOp);
    atomic_store(result, (unint64_t *)&qword_256EA18F0);
  }
  return result;
}

uint64_t sub_23F6AEAA4()
{
  uint64_t v0;

  sub_23F6AEACC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_23F6AEACC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 3 || a3 == 5 || a3 == 4)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_23F6AEAF8()
{
  unint64_t result;

  result = qword_256EA18F8;
  if (!qword_256EA18F8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Literal, &type metadata for AST.Literal);
    atomic_store(result, (unint64_t *)&qword_256EA18F8);
  }
  return result;
}

unint64_t sub_23F6AEB34()
{
  unint64_t result;

  result = qword_256EA1910;
  if (!qword_256EA1910)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4C18C, &_s7BuiltinO3SayV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1910);
  }
  return result;
}

void sub_23F6AEB70(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (!sub_23F6B6A68(a1))
  {
    v4 = v3;
    v5 = v2;
    v6 = sub_23F6AE310(&qword_256EA1918);
    v7 = v5;
    atomic_store(MEMORY[0x242674E5C](v4, v6, &v7), v1);
  }
  sub_23F6B6664();
}

unint64_t sub_23F6AEBC0()
{
  unint64_t result;

  result = qword_256EA1940;
  if (!qword_256EA1940)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4C13C, &_s7BuiltinO4PickV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1940);
  }
  return result;
}

unint64_t sub_23F6AEBFC()
{
  unint64_t result;

  result = qword_256EA1948;
  if (!qword_256EA1948)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.PickType, &type metadata for AST.PickType);
    atomic_store(result, (unint64_t *)&qword_256EA1948);
  }
  return result;
}

unint64_t sub_23F6AEC38()
{
  unint64_t result;

  result = qword_256EA1958;
  if (!qword_256EA1958)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.PickType, &type metadata for AST.PickType);
    atomic_store(result, (unint64_t *)&qword_256EA1958);
  }
  return result;
}

unint64_t sub_23F6AEC74()
{
  unint64_t result;

  result = qword_256EA1968;
  if (!qword_256EA1968)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4C0EC, &_s7BuiltinO7ConfirmV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1968);
  }
  return result;
}

unint64_t sub_23F6AECB0()
{
  unint64_t result;

  result = qword_256EA1980;
  if (!qword_256EA1980)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4C09C, &_s7BuiltinO6SearchV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1980);
  }
  return result;
}

unint64_t sub_23F6AECEC()
{
  unint64_t result;

  result = qword_256EA1998;
  if (!qword_256EA1998)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4C04C, &_s7BuiltinO7PickOneV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1998);
  }
  return result;
}

unint64_t sub_23F6AED28()
{
  unint64_t result;

  result = qword_256EA19B0;
  if (!qword_256EA19B0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4BFFC, &_s7BuiltinO11ResolveToolV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA19B0);
  }
  return result;
}

unint64_t sub_23F6AED64()
{
  unint64_t result;

  result = qword_256EA19C8;
  if (!qword_256EA19C8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4BFAC, &_s7BuiltinO14NoMatchingToolV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA19C8);
  }
  return result;
}

unint64_t sub_23F6AEDA0()
{
  unint64_t result;

  result = qword_256EA19D8;
  if (!qword_256EA19D8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4BF5C, &_s7BuiltinO4UndoV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA19D8);
  }
  return result;
}

unint64_t sub_23F6AEDDC()
{
  unint64_t result;

  result = qword_256EA19F0;
  if (!qword_256EA19F0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4BF0C, &_s7BuiltinO6RejectV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA19F0);
  }
  return result;
}

unint64_t sub_23F6AEE18()
{
  unint64_t result;

  result = qword_256EA1A08;
  if (!qword_256EA1A08)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4BEBC, &_s7BuiltinO6CancelV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1A08);
  }
  return result;
}

unint64_t sub_23F6AEE54()
{
  unint64_t result;

  result = qword_256EA1A20;
  if (!qword_256EA1A20)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4BE6C, &_s7BuiltinO16GetMentionedAppsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1A20);
  }
  return result;
}

unint64_t sub_23F6AEE90()
{
  unint64_t result;

  result = qword_256EA1A30;
  if (!qword_256EA1A30)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4BE1C, &_s16UpdateParametersV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1A30);
  }
  return result;
}

void sub_23F6AEECC(uint64_t a1)
{
  void (*v1)(void);
  void (*v2)(void);

  if (!sub_23F6B6A68(a1))
  {
    v2 = v1;
    sub_23F6AE310(&qword_256EA1A38);
    v2();
    sub_23F6B64B8();
  }
  sub_23F6B647C();
}

unint64_t sub_23F6AEF1C()
{
  unint64_t result;

  result = qword_256EA1A48;
  if (!qword_256EA1A48)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.UpdateExpr, &type metadata for AST.UpdateExpr);
    atomic_store(result, (unint64_t *)&qword_256EA1A48);
  }
  return result;
}

unint64_t sub_23F6AEF58()
{
  unint64_t result;

  result = qword_256EA1A60;
  if (!qword_256EA1A60)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.UpdateExpr, &type metadata for AST.UpdateExpr);
    atomic_store(result, (unint64_t *)&qword_256EA1A60);
  }
  return result;
}

unint64_t sub_23F6AEF94()
{
  unint64_t result;

  result = qword_256EA1A70;
  if (!qword_256EA1A70)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4BDCC, &_s10UpdateExprV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1A70);
  }
  return result;
}

unint64_t sub_23F6AEFD0()
{
  unint64_t result;

  result = qword_256EA1A78;
  if (!qword_256EA1A78)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.UpdateKind, &type metadata for AST.UpdateKind);
    atomic_store(result, (unint64_t *)&qword_256EA1A78);
  }
  return result;
}

unint64_t sub_23F6AF00C()
{
  unint64_t result;

  result = qword_256EA1A88;
  if (!qword_256EA1A88)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.UpdateKind, &type metadata for AST.UpdateKind);
    atomic_store(result, (unint64_t *)&qword_256EA1A88);
  }
  return result;
}

unint64_t sub_23F6AF048()
{
  unint64_t result;

  result = qword_256EA1AA8;
  if (!qword_256EA1AA8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4BD7C, &_s10UpdateKindO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1AA8);
  }
  return result;
}

unint64_t sub_23F6AF084()
{
  unint64_t result;

  result = qword_256EA1AB0;
  if (!qword_256EA1AB0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4BD2C, &_s10UpdateKindO17ReplaceCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1AB0);
  }
  return result;
}

unint64_t sub_23F6AF0C0()
{
  unint64_t result;

  result = qword_256EA1AB8;
  if (!qword_256EA1AB8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4BCDC, &_s10UpdateKindO16AppendCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1AB8);
  }
  return result;
}

unint64_t sub_23F6AF0FC()
{
  unint64_t result;

  result = qword_256EA1AF0;
  if (!qword_256EA1AF0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4BC8C, &_s8PickTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1AF0);
  }
  return result;
}

unint64_t sub_23F6AF138()
{
  unint64_t result;

  result = qword_256EA1AF8;
  if (!qword_256EA1AF8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4BC3C, &_s8PickTypeO14NoneCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1AF8);
  }
  return result;
}

unint64_t sub_23F6AF174()
{
  unint64_t result;

  result = qword_256EA1B00;
  if (!qword_256EA1B00)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4BBEC, &_s8PickTypeO15IndexCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1B00);
  }
  return result;
}

unint64_t sub_23F6AF1B0()
{
  unint64_t result;

  result = qword_256EA1B60;
  if (!qword_256EA1B60)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4BB9C, &_s7LiteralO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1B60);
  }
  return result;
}

unint64_t sub_23F6AF1EC()
{
  unint64_t result;

  result = qword_256EA1B68;
  if (!qword_256EA1B68)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4BB4C, &_s7LiteralO14DictCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1B68);
  }
  return result;
}

unint64_t sub_23F6AF228()
{
  unint64_t result;

  result = qword_256EA1B70;
  if (!qword_256EA1B70)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4BAFC, &_s7LiteralO15ArrayCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1B70);
  }
  return result;
}

unint64_t sub_23F6AF264()
{
  unint64_t result;

  result = qword_256EA1B88;
  if (!qword_256EA1B88)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4BAAC, &_s7LiteralO16StringCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1B88);
  }
  return result;
}

unint64_t sub_23F6AF2A0()
{
  unint64_t result;

  result = qword_256EA1B90;
  if (!qword_256EA1B90)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4BA5C, &_s7LiteralO16DoubleCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1B90);
  }
  return result;
}

unint64_t sub_23F6AF2DC()
{
  unint64_t result;

  result = qword_256EA1B98;
  if (!qword_256EA1B98)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4BA0C, &_s7LiteralO13IntCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1B98);
  }
  return result;
}

unint64_t sub_23F6AF318()
{
  unint64_t result;

  result = qword_256EA1BA0;
  if (!qword_256EA1BA0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B9BC, &_s7LiteralO14BoolCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1BA0);
  }
  return result;
}

unint64_t sub_23F6AF354()
{
  unint64_t result;

  result = qword_256EA1BA8;
  if (!qword_256EA1BA8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B96C, &_s7LiteralO14NullCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1BA8);
  }
  return result;
}

void sub_23F6AF390(uint64_t a1)
{
  unint64_t *v1;
  void (*v2)(void);
  void (*v3)(void);
  uint64_t v4;

  if (!sub_23F6B6A68(a1))
  {
    v3 = v2;
    sub_23F6AE310(&qword_256EA1B78);
    v3();
    v4 = sub_23F6B619C();
    atomic_store(MEMORY[0x242674E5C](v4), v1);
  }
  sub_23F6B6664();
}

unint64_t sub_23F6AF3E4()
{
  unint64_t result;

  result = qword_256EA1C18;
  if (!qword_256EA1C18)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B91C, &_s8PrefixOpO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1C18);
  }
  return result;
}

unint64_t sub_23F6AF420()
{
  unint64_t result;

  result = qword_256EA1C20;
  if (!qword_256EA1C20)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B8CC, &_s8PrefixOpO13NotCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1C20);
  }
  return result;
}

unint64_t sub_23F6AF45C()
{
  unint64_t result;

  result = qword_256EA1C28;
  if (!qword_256EA1C28)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B87C, &_s8PrefixOpO15MinusCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1C28);
  }
  return result;
}

unint64_t sub_23F6AF498()
{
  unint64_t result;

  result = qword_256EA1C30;
  if (!qword_256EA1C30)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B82C, &_s8PrefixOpO14PlusCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1C30);
  }
  return result;
}

unint64_t sub_23F6AF4D4()
{
  unint64_t result;

  result = qword_256EA1CF8;
  if (!qword_256EA1CF8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B7DC, &_s7InfixOpO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1CF8);
  }
  return result;
}

unint64_t sub_23F6AF510()
{
  unint64_t result;

  result = qword_256EA1D00;
  if (!qword_256EA1D00)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B78C, &_s7InfixOpO12OrCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1D00);
  }
  return result;
}

unint64_t sub_23F6AF54C()
{
  unint64_t result;

  result = qword_256EA1D08;
  if (!qword_256EA1D08)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B73C, &_s7InfixOpO13AndCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1D08);
  }
  return result;
}

unint64_t sub_23F6AF588()
{
  unint64_t result;

  result = qword_256EA1D10;
  if (!qword_256EA1D10)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B6EC, &_s7InfixOpO18LessThanCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1D10);
  }
  return result;
}

unint64_t sub_23F6AF5C4()
{
  unint64_t result;

  result = qword_256EA1D18;
  if (!qword_256EA1D18)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B69C, &_s7InfixOpO23LessThanEqualCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1D18);
  }
  return result;
}

unint64_t sub_23F6AF600()
{
  unint64_t result;

  result = qword_256EA1D20;
  if (!qword_256EA1D20)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B64C, &_s7InfixOpO21GreaterThanCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1D20);
  }
  return result;
}

unint64_t sub_23F6AF63C()
{
  unint64_t result;

  result = qword_256EA1D28;
  if (!qword_256EA1D28)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B5FC, &_s7InfixOpO26GreaterThanEqualCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1D28);
  }
  return result;
}

unint64_t sub_23F6AF678()
{
  unint64_t result;

  result = qword_256EA1D30;
  if (!qword_256EA1D30)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B5AC, &_s7InfixOpO12InCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1D30);
  }
  return result;
}

unint64_t sub_23F6AF6B4()
{
  unint64_t result;

  result = qword_256EA1D38;
  if (!qword_256EA1D38)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B55C, &_s7InfixOpO18NotEqualCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1D38);
  }
  return result;
}

unint64_t sub_23F6AF6F0()
{
  unint64_t result;

  result = qword_256EA1D40;
  if (!qword_256EA1D40)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B50C, &_s7InfixOpO15EqualCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1D40);
  }
  return result;
}

unint64_t sub_23F6AF72C()
{
  unint64_t result;

  result = qword_256EA1D48;
  if (!qword_256EA1D48)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B4BC, &_s7InfixOpO18ExponentCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1D48);
  }
  return result;
}

unint64_t sub_23F6AF768()
{
  unint64_t result;

  result = qword_256EA1D50;
  if (!qword_256EA1D50)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B46C, &_s7InfixOpO24MultiplyAssignCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1D50);
  }
  return result;
}

unint64_t sub_23F6AF7A4()
{
  unint64_t result;

  result = qword_256EA1D58;
  if (!qword_256EA1D58)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B41C, &_s7InfixOpO18MultiplyCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1D58);
  }
  return result;
}

unint64_t sub_23F6AF7E0()
{
  unint64_t result;

  result = qword_256EA1D60;
  if (!qword_256EA1D60)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B3CC, &_s7InfixOpO22DivideAssignCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1D60);
  }
  return result;
}

unint64_t sub_23F6AF81C()
{
  unint64_t result;

  result = qword_256EA1D68;
  if (!qword_256EA1D68)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B37C, &_s7InfixOpO16DivideCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1D68);
  }
  return result;
}

unint64_t sub_23F6AF858()
{
  unint64_t result;

  result = qword_256EA1D70;
  if (!qword_256EA1D70)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B32C, &_s7InfixOpO24SubtractAssignCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1D70);
  }
  return result;
}

unint64_t sub_23F6AF894()
{
  unint64_t result;

  result = qword_256EA1D78;
  if (!qword_256EA1D78)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B2DC, &_s7InfixOpO18SubtractCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1D78);
  }
  return result;
}

unint64_t sub_23F6AF8D0()
{
  unint64_t result;

  result = qword_256EA1D80;
  if (!qword_256EA1D80)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B28C, &_s7InfixOpO19AddAssignCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1D80);
  }
  return result;
}

unint64_t sub_23F6AF90C()
{
  unint64_t result;

  result = qword_256EA1D88;
  if (!qword_256EA1D88)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B23C, &_s7InfixOpO13AddCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1D88);
  }
  return result;
}

unint64_t sub_23F6AF948()
{
  unint64_t result;

  result = qword_256EA1D90;
  if (!qword_256EA1D90)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B1EC, &_s7InfixOpO16AssignCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1D90);
  }
  return result;
}

unint64_t sub_23F6AF984()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256EA1E38;
  if (!qword_256EA1E38)
  {
    v1 = sub_23F6AE310(&qword_256EA1918);
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_256EA1E38);
  }
  return result;
}

uint64_t sub_23F6AF9C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_23F6AFA0C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 3 || a3 == 5 || a3 == 4)
    return swift_bridgeObjectRetain();
  return result;
}

unint64_t sub_23F6AFA38()
{
  unint64_t result;

  result = qword_256EA1E48;
  if (!qword_256EA1E48)
  {
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE17B0], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_256EA1E48);
  }
  return result;
}

unint64_t sub_23F6AFA78()
{
  unint64_t result;

  result = qword_256EA1E50;
  if (!qword_256EA1E50)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Expr, &type metadata for AST.Expr);
    atomic_store(result, (unint64_t *)&qword_256EA1E50);
  }
  return result;
}

unint64_t sub_23F6AFAB8()
{
  unint64_t result;

  result = qword_256EA1E58;
  if (!qword_256EA1E58)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.Say, &type metadata for AST.Builtin.Say);
    atomic_store(result, (unint64_t *)&qword_256EA1E58);
  }
  return result;
}

unint64_t sub_23F6AFAF8()
{
  unint64_t result;

  result = qword_256EA1E60;
  if (!qword_256EA1E60)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.Pick, &type metadata for AST.Builtin.Pick);
    atomic_store(result, (unint64_t *)&qword_256EA1E60);
  }
  return result;
}

unint64_t sub_23F6AFB38()
{
  unint64_t result;

  result = qword_256EA1E68;
  if (!qword_256EA1E68)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.Confirm, &type metadata for AST.Builtin.Confirm);
    atomic_store(result, (unint64_t *)&qword_256EA1E68);
  }
  return result;
}

unint64_t sub_23F6AFB78()
{
  unint64_t result;

  result = qword_256EA1E70;
  if (!qword_256EA1E70)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.Search, &type metadata for AST.Builtin.Search);
    atomic_store(result, (unint64_t *)&qword_256EA1E70);
  }
  return result;
}

unint64_t sub_23F6AFBB8()
{
  unint64_t result;

  result = qword_256EA1E78;
  if (!qword_256EA1E78)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.PickOne, &type metadata for AST.Builtin.PickOne);
    atomic_store(result, (unint64_t *)&qword_256EA1E78);
  }
  return result;
}

unint64_t sub_23F6AFBF8()
{
  unint64_t result;

  result = qword_256EA1E80;
  if (!qword_256EA1E80)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.ResolveTool, &type metadata for AST.Builtin.ResolveTool);
    atomic_store(result, (unint64_t *)&qword_256EA1E80);
  }
  return result;
}

unint64_t sub_23F6AFC38()
{
  unint64_t result;

  result = qword_256EA1E88;
  if (!qword_256EA1E88)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.NoMatchingTool, &type metadata for AST.Builtin.NoMatchingTool);
    atomic_store(result, (unint64_t *)&qword_256EA1E88);
  }
  return result;
}

unint64_t sub_23F6AFC78()
{
  unint64_t result;

  result = qword_256EA1E90;
  if (!qword_256EA1E90)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.Undo, &type metadata for AST.Builtin.Undo);
    atomic_store(result, (unint64_t *)&qword_256EA1E90);
  }
  return result;
}

unint64_t sub_23F6AFCB8()
{
  unint64_t result;

  result = qword_256EA1E98;
  if (!qword_256EA1E98)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.Reject, &type metadata for AST.Builtin.Reject);
    atomic_store(result, (unint64_t *)&qword_256EA1E98);
  }
  return result;
}

unint64_t sub_23F6AFCF8()
{
  unint64_t result;

  result = qword_256EA1EA0;
  if (!qword_256EA1EA0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.Cancel, &type metadata for AST.Builtin.Cancel);
    atomic_store(result, (unint64_t *)&qword_256EA1EA0);
  }
  return result;
}

unint64_t sub_23F6AFD38()
{
  unint64_t result;

  result = qword_256EA1EA8;
  if (!qword_256EA1EA8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.GetMentionedApps, &type metadata for AST.Builtin.GetMentionedApps);
    atomic_store(result, (unint64_t *)&qword_256EA1EA8);
  }
  return result;
}

void sub_23F6AFD74()
{
  sub_23F6B4EEC((uint64_t)&unk_256EA1EB0);
}

unint64_t sub_23F6AFDA4()
{
  unint64_t result;

  result = qword_256EA1EB8;
  if (!qword_256EA1EB8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.UpdateExpr, &type metadata for AST.UpdateExpr);
    atomic_store(result, (unint64_t *)&qword_256EA1EB8);
  }
  return result;
}

unint64_t sub_23F6AFDE4()
{
  unint64_t result;

  result = qword_256EA1EC0;
  if (!qword_256EA1EC0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.UpdateKind, &type metadata for AST.UpdateKind);
    atomic_store(result, (unint64_t *)&qword_256EA1EC0);
  }
  return result;
}

unint64_t sub_23F6AFE24()
{
  unint64_t result;

  result = qword_256EA1EC8;
  if (!qword_256EA1EC8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.PickType, &type metadata for AST.PickType);
    atomic_store(result, (unint64_t *)&qword_256EA1EC8);
  }
  return result;
}

unint64_t sub_23F6AFE64()
{
  unint64_t result;

  result = qword_256EA1ED0;
  if (!qword_256EA1ED0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Literal, &type metadata for AST.Literal);
    atomic_store(result, (unint64_t *)&qword_256EA1ED0);
  }
  return result;
}

unint64_t sub_23F6AFEA4()
{
  unint64_t result;

  result = qword_256EA1ED8;
  if (!qword_256EA1ED8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.PrefixOp, &type metadata for AST.PrefixOp);
    atomic_store(result, (unint64_t *)&qword_256EA1ED8);
  }
  return result;
}

unint64_t sub_23F6AFEE4()
{
  unint64_t result;

  result = qword_256EA1EE0;
  if (!qword_256EA1EE0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.InfixOp, &type metadata for AST.InfixOp);
    atomic_store(result, (unint64_t *)&qword_256EA1EE0);
  }
  return result;
}

void type metadata accessor for AST.Program()
{
  sub_23F694C70();
}

_QWORD *_s4StmtOwCP(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t _s4StmtOwxx()
{
  return swift_release();
}

_QWORD *_s4StmtOwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *_s4ExprOwtk(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

_QWORD *_s4StmtOwta(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t _s4StmtOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7E && *(_BYTE *)(a1 + 8))
    {
      v2 = *(_DWORD *)a1 + 125;
    }
    else
    {
      v2 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7D)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t _s4StmtOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7D)
  {
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_23F6B008C(_QWORD *a1)
{
  return *a1 >> 62;
}

_QWORD *sub_23F6B0098(_QWORD *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t *sub_23F6B00A8(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  return result;
}

void type metadata accessor for AST.Stmt()
{
  sub_23F694C70();
}

unint64_t *_s4ExprOwCP(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  sub_23F6A3728(*a2);
  *a1 = v3;
  return a1;
}

unint64_t _s4ExprOwxx(unint64_t *a1)
{
  return sub_23F6A3764(*a1);
}

unint64_t *_s4ExprOwca(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a2;
  sub_23F6A3728(*a2);
  v4 = *a1;
  *a1 = v3;
  sub_23F6A3764(v4);
  return a1;
}

unint64_t *_s4ExprOwta(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  sub_23F6A3764(v3);
  return a1;
}

uint64_t _s4ExprOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x6C && *(_BYTE *)(a1 + 8))
    {
      v2 = *(_DWORD *)a1 + 107;
    }
    else
    {
      v2 = ((((*(_QWORD *)a1 >> 57) & 0x78 | *(_QWORD *)a1 & 7) >> 2) & 0xFFFFFF9F | (32 * (*(_QWORD *)a1 & 3))) ^ 0x7F;
      if (v2 >= 0x6B)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t _s4ExprOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x6B)
  {
    *(_QWORD *)result = a2 - 108;
    if (a3 >= 0x6C)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x6C)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 5) & 3 | (4 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_23F6B020C(_QWORD *a1)
{
  unsigned int v1;

  v1 = (*a1 >> 59) & 0x1E | (*a1 >> 2) & 1;
  if (v1 <= 0x13)
    return v1;
  else
    return (*a1 >> 3) + 20;
}

_QWORD *sub_23F6B0230(_QWORD *result)
{
  *result &= 0xFFFFFFFFFFFFFFBuLL;
  return result;
}

unint64_t *sub_23F6B0244(unint64_t *result, uint64_t a2)
{
  unint64_t v2;

  if (a2 < 0x14)
    v2 = (a2 << 59) & 0xF000000000000000 | (4 * (a2 & 1)) | *result & 0xFFFFFFFFFFFFFF8;
  else
    v2 = (8 * (a2 - 20)) | 0xA000000000000000;
  *result = v2;
  return result;
}

void type metadata accessor for AST.Expr()
{
  sub_23F694C70();
}

void type metadata accessor for AST.Builtin()
{
  sub_23F694C70();
}

void type metadata accessor for AST.Builtin.Say()
{
  sub_23F694C70();
}

uint64_t _s7BuiltinO4PickVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t _s7BuiltinO4PickVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s7BuiltinO4PickVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  return a1;
}

__n128 _s7BuiltinO4PickVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s7BuiltinO4PickVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t _s7BuiltinO4PickVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 25))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s7BuiltinO4PickVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AST.Builtin.Pick()
{
  sub_23F694C70();
}

void type metadata accessor for AST.Builtin.Confirm()
{
  sub_23F694C70();
}

void sub_23F6B0468(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  sub_23F694CC8();
}

uint64_t _s7BuiltinO6SearchVwca(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

__n128 _s7BuiltinO6SearchVwtk(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t _s7BuiltinO6SearchVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

uint64_t _s7BuiltinO6SearchVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 18))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s7BuiltinO6SearchVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 18) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AST.Builtin.Search()
{
  sub_23F694C70();
}

void type metadata accessor for AST.Builtin.PickOne()
{
  sub_23F694C70();
}

void type metadata accessor for AST.Builtin.ResolveTool()
{
  sub_23F694C70();
}

void type metadata accessor for AST.Builtin.NoMatchingTool()
{
  sub_23F694C70();
}

void type metadata accessor for AST.Builtin.Undo()
{
  sub_23F694C70();
}

void type metadata accessor for AST.Builtin.Reject()
{
  sub_23F694C70();
}

void _s7BuiltinO7ConfirmVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  sub_23F693DFC();
  sub_23F694CC8();
}

uint64_t getEnumTagSinglePayload for ContextRetrievalServiceInput(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContextRetrievalServiceInput(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AST.Builtin.Cancel()
{
  sub_23F694C70();
}

void type metadata accessor for AST.Builtin.GetMentionedApps()
{
  sub_23F694C70();
}

uint64_t *_s16UpdateParametersVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FB2C764();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s16UpdateParametersVwxx(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t _s16UpdateParametersVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s16UpdateParametersVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s16UpdateParametersVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s16UpdateParametersVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s16UpdateParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F6B0948(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  if (*(_DWORD *)(*(_QWORD *)(sub_23F6B58C8() - 8) + 84) == (_DWORD)a2)
  {
    v3 = sub_23F6B6428();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v3, a2, v4);
  }
  else
  {
    sub_23F694C84();
  }
}

uint64_t _s16UpdateParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F6B09BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_23F6B58C8();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
    sub_23F694C84();
  }
}

uint64_t sub_23F6B0A24()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FB2C764();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s10UpdateExprVwCP(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  sub_23F6A3728(v3);
  *(_QWORD *)(a1 + 8) = v3;
  return a1;
}

unint64_t _s10UpdateExprVwxx(uint64_t a1)
{
  return sub_23F6A3764(*(_QWORD *)(a1 + 8));
}

uint64_t _s10UpdateExprVwca(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  sub_23F6A3728(v3);
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  sub_23F6A3764(v4);
  return a1;
}

uint64_t _s10UpdateExprVwta(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_23F6A3764(v3);
  return a1;
}

uint64_t _s10UpdateExprVwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && a1[16])
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 2;
      v2 = v3 - 2;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s10UpdateExprVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

void type metadata accessor for AST.UpdateExpr()
{
  sub_23F694C70();
}

void type metadata accessor for AST.UpdateKind()
{
  sub_23F694C70();
}

uint64_t _s8PickTypeOwCP(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t _s8PickTypeOwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s8PickTypeOwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_23F6B0C50(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_23F6B0C6C(uint64_t result, int a2)
{
  char v2;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    v2 = 1;
  }
  else
  {
    v2 = 0;
  }
  *(_BYTE *)(result + 8) = v2;
  return result;
}

void type metadata accessor for AST.PickType()
{
  sub_23F694C70();
}

uint64_t _s7LiteralOwxx(uint64_t a1)
{
  return sub_23F6AEACC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void _s7LiteralOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  v6 = sub_23F6B68CC();
  sub_23F6AFA0C(v6, v7, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_23F694C84();
}

uint64_t _s7LiteralOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23F6AFA0C(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_23F6AEACC(v6, v7, v8);
  return a1;
}

__n128 _s7LiteralOwtk(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t _s7LiteralOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_23F6AEACC(v4, v5, v6);
  return a1;
}

uint64_t _s7LiteralOwet(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFA && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 249;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 6)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s7LiteralOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 250;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_23F6B0E18(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 5u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 6);
}

uint64_t sub_23F6B0E30(uint64_t result, unsigned int a2)
{
  if (a2 >= 6)
  {
    *(_QWORD *)result = a2 - 6;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 6;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

void type metadata accessor for AST.Literal()
{
  sub_23F694C70();
}

void type metadata accessor for AST.PrefixOp()
{
  sub_23F694C70();
}

void type metadata accessor for AST.InfixOp()
{
  sub_23F694C70();
}

uint64_t _s9ForInStmtVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_23F6A3764(*(_QWORD *)(a1 + 16));
  return swift_bridgeObjectRelease();
}

_QWORD *_s9ForInStmtVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  swift_bridgeObjectRetain();
  sub_23F6A3728(v5);
  v6 = a2[3];
  a1[2] = v5;
  a1[3] = v6;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s9ForInStmtVwca(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  unint64_t v5;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[2];
  sub_23F6A3728(v4);
  v5 = a1[2];
  a1[2] = v4;
  sub_23F6A3764(v5);
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s9ForInStmtVwtk(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *_s9ForInStmtVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a1[2];
  a1[2] = a2[2];
  sub_23F6A3764(v5);
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s9ForInStmtVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s9ForInStmtVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AST.ForInStmt()
{
  sub_23F694C70();
}

uint64_t _s6IfStmtVwxx(unint64_t *a1)
{
  sub_23F6A3764(*a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void _s6IfStmtVwCP_0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6B6B7C();
  v3 = *v2;
  sub_23F6B6A08();
  v4 = *(_QWORD *)(v0 + 8);
  v5 = *(_QWORD *)(v0 + 16);
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v5;
  swift_bridgeObjectRetain();
  sub_23F6B5508();
  sub_23F694C84();
}

unint64_t *_s6IfStmtVwca(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = *a2;
  sub_23F6A3728(*a2);
  v5 = *a1;
  *a1 = v4;
  sub_23F6A3764(v5);
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s6IfStmtVwtk(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t _s6IfStmtVwta(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_23F6A3764(v4);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s6IfStmtVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s6IfStmtVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AST.IfStmt()
{
  sub_23F694C70();
}

uint64_t _s7InfixOpOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_23F6B6EC0(-1);
  if (a2 < 0xEE)
    goto LABEL_17;
  if (a2 + 18 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 18) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_23F6B6EC0((*a1 | (v4 << 8)) - 19);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_23F6B6EC0((*a1 | (v4 << 8)) - 19);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_23F6B6EC0((*a1 | (v4 << 8)) - 19);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x13;
  v8 = v6 - 19;
  if (!v7)
    v8 = -1;
  return sub_23F6B6EC0(v8);
}

uint64_t _s7InfixOpOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 18 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 18) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xED)
    return ((uint64_t (*)(void))((char *)&loc_23F6B1304 + 4 * byte_23FB471E3[v4]))();
  *a1 = a2 + 18;
  return ((uint64_t (*)(void))((char *)sub_23F6B1338 + 4 * byte_23FB471DE[v4]))();
}

uint64_t sub_23F6B133C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F6B1344);
  return result;
}

uint64_t sub_23F6B134C(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F6B1354);
  return sub_23F6B6EB0();
}

ValueMetadata *_s7InfixOpO10CodingKeysOMa()
{
  return &_s7InfixOpO10CodingKeysON;
}

ValueMetadata *_s7InfixOpO16AssignCodingKeysOMa()
{
  return &_s7InfixOpO16AssignCodingKeysON;
}

ValueMetadata *_s7InfixOpO13AddCodingKeysOMa()
{
  return &_s7InfixOpO13AddCodingKeysON;
}

ValueMetadata *_s7InfixOpO19AddAssignCodingKeysOMa()
{
  return &_s7InfixOpO19AddAssignCodingKeysON;
}

ValueMetadata *_s7InfixOpO18SubtractCodingKeysOMa()
{
  return &_s7InfixOpO18SubtractCodingKeysON;
}

ValueMetadata *_s7InfixOpO24SubtractAssignCodingKeysOMa()
{
  return &_s7InfixOpO24SubtractAssignCodingKeysON;
}

ValueMetadata *_s7InfixOpO16DivideCodingKeysOMa()
{
  return &_s7InfixOpO16DivideCodingKeysON;
}

ValueMetadata *_s7InfixOpO22DivideAssignCodingKeysOMa()
{
  return &_s7InfixOpO22DivideAssignCodingKeysON;
}

ValueMetadata *_s7InfixOpO18MultiplyCodingKeysOMa()
{
  return &_s7InfixOpO18MultiplyCodingKeysON;
}

ValueMetadata *_s7InfixOpO24MultiplyAssignCodingKeysOMa()
{
  return &_s7InfixOpO24MultiplyAssignCodingKeysON;
}

ValueMetadata *_s7InfixOpO18ExponentCodingKeysOMa()
{
  return &_s7InfixOpO18ExponentCodingKeysON;
}

ValueMetadata *_s7InfixOpO15EqualCodingKeysOMa()
{
  return &_s7InfixOpO15EqualCodingKeysON;
}

ValueMetadata *_s7InfixOpO18NotEqualCodingKeysOMa()
{
  return &_s7InfixOpO18NotEqualCodingKeysON;
}

ValueMetadata *_s7InfixOpO12InCodingKeysOMa()
{
  return &_s7InfixOpO12InCodingKeysON;
}

ValueMetadata *_s7InfixOpO26GreaterThanEqualCodingKeysOMa()
{
  return &_s7InfixOpO26GreaterThanEqualCodingKeysON;
}

ValueMetadata *_s7InfixOpO21GreaterThanCodingKeysOMa()
{
  return &_s7InfixOpO21GreaterThanCodingKeysON;
}

ValueMetadata *_s7InfixOpO23LessThanEqualCodingKeysOMa()
{
  return &_s7InfixOpO23LessThanEqualCodingKeysON;
}

ValueMetadata *_s7InfixOpO18LessThanCodingKeysOMa()
{
  return &_s7InfixOpO18LessThanCodingKeysON;
}

ValueMetadata *_s7InfixOpO13AndCodingKeysOMa()
{
  return &_s7InfixOpO13AndCodingKeysON;
}

ValueMetadata *_s7InfixOpO12OrCodingKeysOMa()
{
  return &_s7InfixOpO12OrCodingKeysON;
}

ValueMetadata *_s8PrefixOpO10CodingKeysOMa()
{
  return &_s8PrefixOpO10CodingKeysON;
}

ValueMetadata *_s8PrefixOpO14PlusCodingKeysOMa()
{
  return &_s8PrefixOpO14PlusCodingKeysON;
}

ValueMetadata *_s8PrefixOpO15MinusCodingKeysOMa()
{
  return &_s8PrefixOpO15MinusCodingKeysON;
}

ValueMetadata *_s8PrefixOpO13NotCodingKeysOMa()
{
  return &_s8PrefixOpO13NotCodingKeysON;
}

uint64_t _s7LiteralO10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 6) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v5 = v6 - 7;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s7LiteralO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23F6B15B8 + 4 * byte_23FB471ED[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23F6B15EC + 4 * byte_23FB471E8[v4]))();
}

uint64_t sub_23F6B15EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F6B15F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F6B15FCLL);
  return result;
}

uint64_t sub_23F6B1608(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F6B1610);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23F6B1614(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F6B161C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s7LiteralO10CodingKeysOMa()
{
  return &_s7LiteralO10CodingKeysON;
}

ValueMetadata *_s7LiteralO14NullCodingKeysOMa()
{
  return &_s7LiteralO14NullCodingKeysON;
}

ValueMetadata *_s7LiteralO14BoolCodingKeysOMa()
{
  return &_s7LiteralO14BoolCodingKeysON;
}

ValueMetadata *_s7LiteralO13IntCodingKeysOMa()
{
  return &_s7LiteralO13IntCodingKeysON;
}

ValueMetadata *_s7LiteralO16DoubleCodingKeysOMa()
{
  return &_s7LiteralO16DoubleCodingKeysON;
}

ValueMetadata *_s7LiteralO16StringCodingKeysOMa()
{
  return &_s7LiteralO16StringCodingKeysON;
}

ValueMetadata *_s7LiteralO15ArrayCodingKeysOMa()
{
  return &_s7LiteralO15ArrayCodingKeysON;
}

ValueMetadata *_s7LiteralO14DictCodingKeysOMa()
{
  return &_s7LiteralO14DictCodingKeysON;
}

ValueMetadata *_s8PickTypeO10CodingKeysOMa()
{
  return &_s8PickTypeO10CodingKeysON;
}

ValueMetadata *_s8PickTypeO15IndexCodingKeysOMa()
{
  return &_s8PickTypeO15IndexCodingKeysON;
}

ValueMetadata *_s8PickTypeO14NoneCodingKeysOMa()
{
  return &_s8PickTypeO14NoneCodingKeysON;
}

ValueMetadata *_s10UpdateKindO10CodingKeysOMa()
{
  return &_s10UpdateKindO10CodingKeysON;
}

ValueMetadata *_s10UpdateKindO16AppendCodingKeysOMa()
{
  return &_s10UpdateKindO16AppendCodingKeysON;
}

ValueMetadata *_s10UpdateKindO17ReplaceCodingKeysOMa()
{
  return &_s10UpdateKindO17ReplaceCodingKeysON;
}

_BYTE *sub_23F6B1714(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *_s10UpdateExprV10CodingKeysOMa()
{
  return &_s10UpdateExprV10CodingKeysON;
}

ValueMetadata *_s16UpdateParametersV10CodingKeysOMa()
{
  return &_s16UpdateParametersV10CodingKeysON;
}

ValueMetadata *_s7BuiltinO16GetMentionedAppsV10CodingKeysOMa()
{
  return &_s7BuiltinO16GetMentionedAppsV10CodingKeysON;
}

ValueMetadata *_s7BuiltinO6CancelV10CodingKeysOMa()
{
  return &_s7BuiltinO6CancelV10CodingKeysON;
}

ValueMetadata *_s7BuiltinO6RejectV10CodingKeysOMa()
{
  return &_s7BuiltinO6RejectV10CodingKeysON;
}

ValueMetadata *_s7BuiltinO4UndoV10CodingKeysOMa()
{
  return &_s7BuiltinO4UndoV10CodingKeysON;
}

ValueMetadata *_s7BuiltinO14NoMatchingToolV10CodingKeysOMa()
{
  return &_s7BuiltinO14NoMatchingToolV10CodingKeysON;
}

ValueMetadata *_s7BuiltinO11ResolveToolV10CodingKeysOMa()
{
  return &_s7BuiltinO11ResolveToolV10CodingKeysON;
}

ValueMetadata *_s7BuiltinO7PickOneV10CodingKeysOMa()
{
  return &_s7BuiltinO7PickOneV10CodingKeysON;
}

ValueMetadata *_s7BuiltinO6SearchV10CodingKeysOMa()
{
  return &_s7BuiltinO6SearchV10CodingKeysON;
}

ValueMetadata *_s7BuiltinO7ConfirmV10CodingKeysOMa()
{
  return &_s7BuiltinO7ConfirmV10CodingKeysON;
}

ValueMetadata *_s7BuiltinO4PickV10CodingKeysOMa()
{
  return &_s7BuiltinO4PickV10CodingKeysON;
}

ValueMetadata *_s7BuiltinO3SayV10CodingKeysOMa()
{
  return &_s7BuiltinO3SayV10CodingKeysON;
}

uint64_t _s4ExprO10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xEB)
  {
    if (a2 + 21 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 21) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 22;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x16;
  v5 = v6 - 22;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s4ExprO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 21 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 21) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEA)
    return ((uint64_t (*)(void))((char *)&loc_23F6B18C4 + 4 * byte_23FB471F7[v4]))();
  *a1 = a2 + 21;
  return ((uint64_t (*)(void))((char *)sub_23F6B18F8 + 4 * byte_23FB471F2[v4]))();
}

uint64_t sub_23F6B18F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F6B1900(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F6B1908);
  return result;
}

uint64_t sub_23F6B1914(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F6B191CLL);
  *(_BYTE *)result = a2 + 21;
  return result;
}

uint64_t sub_23F6B1920(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F6B1928(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s4ExprO10CodingKeysOMa()
{
  return &_s4ExprO10CodingKeysON;
}

ValueMetadata *_s4ExprO15IdentCodingKeysOMa()
{
  return &_s4ExprO15IdentCodingKeysON;
}

ValueMetadata *_s4ExprO21StatementIdCodingKeysOMa()
{
  return &_s4ExprO21StatementIdCodingKeysON;
}

ValueMetadata *_s4ExprO17LiteralCodingKeysOMa()
{
  return &_s4ExprO17LiteralCodingKeysON;
}

ValueMetadata *_s4ExprO16PrefixCodingKeysOMa()
{
  return &_s4ExprO16PrefixCodingKeysON;
}

uint64_t _s8PrefixOpOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_23F6B6EC0(-1);
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_23F6B6EC0((*a1 | (v4 << 8)) - 3);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_23F6B6EC0((*a1 | (v4 << 8)) - 3);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_23F6B6EC0((*a1 | (v4 << 8)) - 3);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return sub_23F6B6EC0(v8);
}

uint64_t _s8PrefixOpOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23F6B1A54 + 4 * byte_23FB47201[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23F6B1A88 + 4 * byte_23FB471FC[v4]))();
}

uint64_t sub_23F6B1A8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F6B1A94);
  return result;
}

uint64_t sub_23F6B1A9C(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F6B1AA4);
  return sub_23F6B6EB0();
}

ValueMetadata *_s4ExprO15InfixCodingKeysOMa()
{
  return &_s4ExprO15InfixCodingKeysON;
}

ValueMetadata *_s4ExprO13DotCodingKeysOMa()
{
  return &_s4ExprO13DotCodingKeysON;
}

ValueMetadata *_s4ExprO15IndexCodingKeysOMa()
{
  return &_s4ExprO15IndexCodingKeysON;
}

uint64_t _s10UpdateKindOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_23F6B6EC0(-1);
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_23F6B6EC0((*a1 | (v4 << 8)) - 2);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_23F6B6EC0((*a1 | (v4 << 8)) - 2);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_23F6B6EC0((*a1 | (v4 << 8)) - 2);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return sub_23F6B6EC0(v8);
}

uint64_t _s10UpdateKindOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F6B1BB4 + 4 * byte_23FB4720B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F6B1BE8 + 4 * byte_23FB47206[v4]))();
}

uint64_t sub_23F6B1BEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F6B1BF4);
  return result;
}

uint64_t sub_23F6B1BFC(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F6B1C04);
  return sub_23F6B6EB0();
}

ValueMetadata *_s4ExprO14CallCodingKeysOMa()
{
  return &_s4ExprO14CallCodingKeysON;
}

ValueMetadata *_s4ExprO13SayCodingKeysOMa()
{
  return &_s4ExprO13SayCodingKeysON;
}

ValueMetadata *_s4ExprO14PickCodingKeysOMa()
{
  return &_s4ExprO14PickCodingKeysON;
}

ValueMetadata *_s4ExprO17ConfirmCodingKeysOMa()
{
  return &_s4ExprO17ConfirmCodingKeysON;
}

ValueMetadata *_s4ExprO16SearchCodingKeysOMa()
{
  return &_s4ExprO16SearchCodingKeysON;
}

ValueMetadata *_s4ExprO17PickOneCodingKeysOMa()
{
  return &_s4ExprO17PickOneCodingKeysON;
}

ValueMetadata *_s4ExprO21ResolveToolCodingKeysOMa()
{
  return &_s4ExprO21ResolveToolCodingKeysON;
}

ValueMetadata *_s4ExprO24NoMatchingToolCodingKeysOMa()
{
  return &_s4ExprO24NoMatchingToolCodingKeysON;
}

ValueMetadata *_s4ExprO14UndoCodingKeysOMa()
{
  return &_s4ExprO14UndoCodingKeysON;
}

ValueMetadata *_s4ExprO16RejectCodingKeysOMa()
{
  return &_s4ExprO16RejectCodingKeysON;
}

ValueMetadata *_s4ExprO16CancelCodingKeysOMa()
{
  return &_s4ExprO16CancelCodingKeysON;
}

ValueMetadata *_s4ExprO26GetMentionedAppsCodingKeysOMa()
{
  return &_s4ExprO26GetMentionedAppsCodingKeysON;
}

uint64_t _s7LiteralO14BoolCodingKeysOwet_0(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return _s16IntelligenceFlow3ASTO0aB14PlannerSupportE7BuiltinO6SearchV5query24isLowConfidenceKnowledge7pickOneAHSS_S2btcfcfA0__0();
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s7LiteralO14BoolCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F6B1D60 + 4 * byte_23FB47210[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F6B1D80 + 4 * byte_23FB47215[v4]))();
}

_BYTE *sub_23F6B1D60(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F6B1D80(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F6B1D88(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F6B1D90(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F6B1D98(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F6B1DA0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s4ExprO26UpdateParametersCodingKeysOMa()
{
  return &_s4ExprO26UpdateParametersCodingKeysON;
}

ValueMetadata *_s4ExprO19EndOfPlanCodingKeysOMa()
{
  return &_s4ExprO19EndOfPlanCodingKeysON;
}

ValueMetadata *_s4ExprO26ContinuePlanningCodingKeysOMa()
{
  return &_s4ExprO26ContinuePlanningCodingKeysON;
}

unint64_t sub_23F6B1DE0()
{
  unint64_t result;

  result = qword_256EA1F78;
  if (!qword_256EA1F78)
  {
    result = MEMORY[0x242674E5C](&unk_23FB48A1C, &_s4ExprO26UpdateParametersCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1F78);
  }
  return result;
}

unint64_t sub_23F6B1E20()
{
  unint64_t result;

  result = qword_256EA1F80;
  if (!qword_256EA1F80)
  {
    result = MEMORY[0x242674E5C](&unk_23FB48AD4, &_s4ExprO26GetMentionedAppsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1F80);
  }
  return result;
}

unint64_t sub_23F6B1E60()
{
  unint64_t result;

  result = qword_256EA1F88;
  if (!qword_256EA1F88)
  {
    result = MEMORY[0x242674E5C](&unk_23FB48B8C, &_s4ExprO16CancelCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1F88);
  }
  return result;
}

unint64_t sub_23F6B1EA0()
{
  unint64_t result;

  result = qword_256EA1F90;
  if (!qword_256EA1F90)
  {
    result = MEMORY[0x242674E5C](&unk_23FB48C44, &_s4ExprO16RejectCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1F90);
  }
  return result;
}

unint64_t sub_23F6B1EE0()
{
  unint64_t result;

  result = qword_256EA1F98;
  if (!qword_256EA1F98)
  {
    result = MEMORY[0x242674E5C](&unk_23FB48CFC, &_s4ExprO14UndoCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1F98);
  }
  return result;
}

unint64_t sub_23F6B1F20()
{
  unint64_t result;

  result = qword_256EA1FA0;
  if (!qword_256EA1FA0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB48DB4, &_s4ExprO24NoMatchingToolCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1FA0);
  }
  return result;
}

unint64_t sub_23F6B1F60()
{
  unint64_t result;

  result = qword_256EA1FA8;
  if (!qword_256EA1FA8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB48E6C, &_s4ExprO21ResolveToolCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1FA8);
  }
  return result;
}

unint64_t sub_23F6B1FA0()
{
  unint64_t result;

  result = qword_256EA1FB0;
  if (!qword_256EA1FB0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB48F24, &_s4ExprO17PickOneCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1FB0);
  }
  return result;
}

unint64_t sub_23F6B1FE0()
{
  unint64_t result;

  result = qword_256EA1FB8;
  if (!qword_256EA1FB8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB48FDC, &_s4ExprO16SearchCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1FB8);
  }
  return result;
}

unint64_t sub_23F6B2020()
{
  unint64_t result;

  result = qword_256EA1FC0;
  if (!qword_256EA1FC0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49094, &_s4ExprO17ConfirmCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1FC0);
  }
  return result;
}

unint64_t sub_23F6B2060()
{
  unint64_t result;

  result = qword_256EA1FC8;
  if (!qword_256EA1FC8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4914C, &_s4ExprO14PickCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1FC8);
  }
  return result;
}

unint64_t sub_23F6B20A0()
{
  unint64_t result;

  result = qword_256EA1FD0;
  if (!qword_256EA1FD0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49204, &_s4ExprO13SayCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1FD0);
  }
  return result;
}

unint64_t sub_23F6B20E0()
{
  unint64_t result;

  result = qword_256EA1FD8;
  if (!qword_256EA1FD8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB492BC, &_s4ExprO14CallCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1FD8);
  }
  return result;
}

unint64_t sub_23F6B2120()
{
  unint64_t result;

  result = qword_256EA1FE0;
  if (!qword_256EA1FE0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49374, &_s4ExprO15IndexCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1FE0);
  }
  return result;
}

unint64_t sub_23F6B2160()
{
  unint64_t result;

  result = qword_256EA1FE8;
  if (!qword_256EA1FE8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4942C, &_s4ExprO13DotCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1FE8);
  }
  return result;
}

unint64_t sub_23F6B21A0()
{
  unint64_t result;

  result = qword_256EA1FF0;
  if (!qword_256EA1FF0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB494E4, &_s4ExprO15InfixCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1FF0);
  }
  return result;
}

unint64_t sub_23F6B21E0()
{
  unint64_t result;

  result = qword_256EA1FF8;
  if (!qword_256EA1FF8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4959C, &_s4ExprO16PrefixCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA1FF8);
  }
  return result;
}

unint64_t sub_23F6B2220()
{
  unint64_t result;

  result = qword_256EA2000;
  if (!qword_256EA2000)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49654, &_s4ExprO17LiteralCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2000);
  }
  return result;
}

unint64_t sub_23F6B2260()
{
  unint64_t result;

  result = qword_256EA2008;
  if (!qword_256EA2008)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4970C, &_s4ExprO21StatementIdCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2008);
  }
  return result;
}

unint64_t sub_23F6B22A0()
{
  unint64_t result;

  result = qword_256EA2010;
  if (!qword_256EA2010)
  {
    result = MEMORY[0x242674E5C](&unk_23FB497C4, &_s4ExprO15IdentCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2010);
  }
  return result;
}

unint64_t sub_23F6B22E0()
{
  unint64_t result;

  result = qword_256EA2018;
  if (!qword_256EA2018)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4987C, &_s4ExprO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2018);
  }
  return result;
}

unint64_t sub_23F6B2320()
{
  unint64_t result;

  result = qword_256EA2020;
  if (!qword_256EA2020)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49934, &_s7BuiltinO3SayV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2020);
  }
  return result;
}

unint64_t sub_23F6B2360()
{
  unint64_t result;

  result = qword_256EA2028;
  if (!qword_256EA2028)
  {
    result = MEMORY[0x242674E5C](&unk_23FB499EC, &_s7BuiltinO4PickV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2028);
  }
  return result;
}

unint64_t sub_23F6B23A0()
{
  unint64_t result;

  result = qword_256EA2030;
  if (!qword_256EA2030)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49AA4, &_s7BuiltinO7ConfirmV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2030);
  }
  return result;
}

unint64_t sub_23F6B23E0()
{
  unint64_t result;

  result = qword_256EA2038;
  if (!qword_256EA2038)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49B5C, &_s7BuiltinO6SearchV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2038);
  }
  return result;
}

unint64_t sub_23F6B2420()
{
  unint64_t result;

  result = qword_256EA2040;
  if (!qword_256EA2040)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49C14, &_s7BuiltinO7PickOneV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2040);
  }
  return result;
}

unint64_t sub_23F6B2460()
{
  unint64_t result;

  result = qword_256EA2048;
  if (!qword_256EA2048)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49CCC, &_s7BuiltinO11ResolveToolV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2048);
  }
  return result;
}

unint64_t sub_23F6B24A0()
{
  unint64_t result;

  result = qword_256EA2050;
  if (!qword_256EA2050)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49DD4, &_s7BuiltinO4UndoV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2050);
  }
  return result;
}

unint64_t sub_23F6B24E0()
{
  unint64_t result;

  result = qword_256EA2058;
  if (!qword_256EA2058)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49E8C, &_s7BuiltinO6RejectV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2058);
  }
  return result;
}

unint64_t sub_23F6B2520()
{
  unint64_t result;

  result = qword_256EA2060;
  if (!qword_256EA2060)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49F44, &_s7BuiltinO6CancelV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2060);
  }
  return result;
}

unint64_t sub_23F6B2560()
{
  unint64_t result;

  result = qword_256EA2068;
  if (!qword_256EA2068)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A04C, &_s16UpdateParametersV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2068);
  }
  return result;
}

unint64_t sub_23F6B25A0()
{
  unint64_t result;

  result = qword_256EA2070;
  if (!qword_256EA2070)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A104, &_s10UpdateExprV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2070);
  }
  return result;
}

unint64_t sub_23F6B25E0()
{
  unint64_t result;

  result = qword_256EA2078;
  if (!qword_256EA2078)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A25C, &_s10UpdateKindO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2078);
  }
  return result;
}

unint64_t sub_23F6B2620()
{
  unint64_t result;

  result = qword_256EA2080;
  if (!qword_256EA2080)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A364, &_s8PickTypeO15IndexCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2080);
  }
  return result;
}

unint64_t sub_23F6B2660()
{
  unint64_t result;

  result = qword_256EA2088;
  if (!qword_256EA2088)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A41C, &_s8PickTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2088);
  }
  return result;
}

unint64_t sub_23F6B26A0()
{
  unint64_t result;

  result = qword_256EA2090;
  if (!qword_256EA2090)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A4D4, &_s7LiteralO14DictCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2090);
  }
  return result;
}

unint64_t sub_23F6B26E0()
{
  unint64_t result;

  result = qword_256EA2098;
  if (!qword_256EA2098)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A58C, &_s7LiteralO15ArrayCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2098);
  }
  return result;
}

unint64_t sub_23F6B2720()
{
  unint64_t result;

  result = qword_256EA20A0;
  if (!qword_256EA20A0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A644, &_s7LiteralO16StringCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA20A0);
  }
  return result;
}

unint64_t sub_23F6B2760()
{
  unint64_t result;

  result = qword_256EA20A8;
  if (!qword_256EA20A8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A6FC, &_s7LiteralO16DoubleCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA20A8);
  }
  return result;
}

unint64_t sub_23F6B27A0()
{
  unint64_t result;

  result = qword_256EA20B0;
  if (!qword_256EA20B0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A7B4, &_s7LiteralO13IntCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA20B0);
  }
  return result;
}

unint64_t sub_23F6B27E0()
{
  unint64_t result;

  result = qword_256EA20B8;
  if (!qword_256EA20B8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A86C, &_s7LiteralO14BoolCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA20B8);
  }
  return result;
}

unint64_t sub_23F6B2820()
{
  unint64_t result;

  result = qword_256EA20C0;
  if (!qword_256EA20C0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A974, &_s7LiteralO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA20C0);
  }
  return result;
}

unint64_t sub_23F6B2860()
{
  unint64_t result;

  result = qword_256EA20C8;
  if (!qword_256EA20C8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4AB1C, &_s8PrefixOpO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA20C8);
  }
  return result;
}

unint64_t sub_23F6B28A0()
{
  unint64_t result;

  result = qword_256EA20D0;
  if (!qword_256EA20D0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B1C4, &_s7InfixOpO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA20D0);
  }
  return result;
}

unint64_t sub_23F6B28E0()
{
  unint64_t result;

  result = qword_256EA20D8;
  if (!qword_256EA20D8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B0E4, &_s7InfixOpO16AssignCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA20D8);
  }
  return result;
}

unint64_t sub_23F6B2920()
{
  unint64_t result;

  result = qword_256EA20E0;
  if (!qword_256EA20E0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B10C, &_s7InfixOpO16AssignCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA20E0);
  }
  return result;
}

unint64_t sub_23F6B2960()
{
  unint64_t result;

  result = qword_256EA20E8;
  if (!qword_256EA20E8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B094, &_s7InfixOpO13AddCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA20E8);
  }
  return result;
}

unint64_t sub_23F6B29A0()
{
  unint64_t result;

  result = qword_256EA20F0;
  if (!qword_256EA20F0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B0BC, &_s7InfixOpO13AddCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA20F0);
  }
  return result;
}

unint64_t sub_23F6B29E0()
{
  unint64_t result;

  result = qword_256EA20F8;
  if (!qword_256EA20F8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B044, &_s7InfixOpO19AddAssignCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA20F8);
  }
  return result;
}

unint64_t sub_23F6B2A20()
{
  unint64_t result;

  result = qword_256EA2100;
  if (!qword_256EA2100)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B06C, &_s7InfixOpO19AddAssignCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2100);
  }
  return result;
}

unint64_t sub_23F6B2A60()
{
  unint64_t result;

  result = qword_256EA2108;
  if (!qword_256EA2108)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4AFF4, &_s7InfixOpO18SubtractCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2108);
  }
  return result;
}

unint64_t sub_23F6B2AA0()
{
  unint64_t result;

  result = qword_256EA2110;
  if (!qword_256EA2110)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B01C, &_s7InfixOpO18SubtractCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2110);
  }
  return result;
}

unint64_t sub_23F6B2AE0()
{
  unint64_t result;

  result = qword_256EA2118;
  if (!qword_256EA2118)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4AFA4, &_s7InfixOpO24SubtractAssignCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2118);
  }
  return result;
}

unint64_t sub_23F6B2B20()
{
  unint64_t result;

  result = qword_256EA2120;
  if (!qword_256EA2120)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4AFCC, &_s7InfixOpO24SubtractAssignCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2120);
  }
  return result;
}

unint64_t sub_23F6B2B60()
{
  unint64_t result;

  result = qword_256EA2128;
  if (!qword_256EA2128)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4AF54, &_s7InfixOpO16DivideCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2128);
  }
  return result;
}

unint64_t sub_23F6B2BA0()
{
  unint64_t result;

  result = qword_256EA2130;
  if (!qword_256EA2130)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4AF7C, &_s7InfixOpO16DivideCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2130);
  }
  return result;
}

unint64_t sub_23F6B2BE0()
{
  unint64_t result;

  result = qword_256EA2138;
  if (!qword_256EA2138)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4AF04, &_s7InfixOpO22DivideAssignCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2138);
  }
  return result;
}

unint64_t sub_23F6B2C20()
{
  unint64_t result;

  result = qword_256EA2140;
  if (!qword_256EA2140)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4AF2C, &_s7InfixOpO22DivideAssignCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2140);
  }
  return result;
}

unint64_t sub_23F6B2C60()
{
  unint64_t result;

  result = qword_256EA2148;
  if (!qword_256EA2148)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4AEB4, &_s7InfixOpO18MultiplyCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2148);
  }
  return result;
}

unint64_t sub_23F6B2CA0()
{
  unint64_t result;

  result = qword_256EA2150;
  if (!qword_256EA2150)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4AEDC, &_s7InfixOpO18MultiplyCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2150);
  }
  return result;
}

unint64_t sub_23F6B2CE0()
{
  unint64_t result;

  result = qword_256EA2158;
  if (!qword_256EA2158)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4AE64, &_s7InfixOpO24MultiplyAssignCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2158);
  }
  return result;
}

unint64_t sub_23F6B2D20()
{
  unint64_t result;

  result = qword_256EA2160;
  if (!qword_256EA2160)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4AE8C, &_s7InfixOpO24MultiplyAssignCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2160);
  }
  return result;
}

unint64_t sub_23F6B2D60()
{
  unint64_t result;

  result = qword_256EA2168;
  if (!qword_256EA2168)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4AE14, &_s7InfixOpO18ExponentCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2168);
  }
  return result;
}

unint64_t sub_23F6B2DA0()
{
  unint64_t result;

  result = qword_256EA2170;
  if (!qword_256EA2170)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4AE3C, &_s7InfixOpO18ExponentCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2170);
  }
  return result;
}

unint64_t sub_23F6B2DE0()
{
  unint64_t result;

  result = qword_256EA2178;
  if (!qword_256EA2178)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4ADC4, &_s7InfixOpO15EqualCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2178);
  }
  return result;
}

unint64_t sub_23F6B2E20()
{
  unint64_t result;

  result = qword_256EA2180;
  if (!qword_256EA2180)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4ADEC, &_s7InfixOpO15EqualCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2180);
  }
  return result;
}

unint64_t sub_23F6B2E60()
{
  unint64_t result;

  result = qword_256EA2188;
  if (!qword_256EA2188)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4AD74, &_s7InfixOpO18NotEqualCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2188);
  }
  return result;
}

unint64_t sub_23F6B2EA0()
{
  unint64_t result;

  result = qword_256EA2190;
  if (!qword_256EA2190)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4AD9C, &_s7InfixOpO18NotEqualCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2190);
  }
  return result;
}

unint64_t sub_23F6B2EE0()
{
  unint64_t result;

  result = qword_256EA2198;
  if (!qword_256EA2198)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4AD24, &_s7InfixOpO12InCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2198);
  }
  return result;
}

unint64_t sub_23F6B2F20()
{
  unint64_t result;

  result = qword_256EA21A0;
  if (!qword_256EA21A0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4AD4C, &_s7InfixOpO12InCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA21A0);
  }
  return result;
}

unint64_t sub_23F6B2F60()
{
  unint64_t result;

  result = qword_256EA21A8;
  if (!qword_256EA21A8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4ACD4, &_s7InfixOpO26GreaterThanEqualCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA21A8);
  }
  return result;
}

unint64_t sub_23F6B2FA0()
{
  unint64_t result;

  result = qword_256EA21B0;
  if (!qword_256EA21B0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4ACFC, &_s7InfixOpO26GreaterThanEqualCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA21B0);
  }
  return result;
}

unint64_t sub_23F6B2FE0()
{
  unint64_t result;

  result = qword_256EA21B8;
  if (!qword_256EA21B8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4AC84, &_s7InfixOpO21GreaterThanCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA21B8);
  }
  return result;
}

unint64_t sub_23F6B3020()
{
  unint64_t result;

  result = qword_256EA21C0;
  if (!qword_256EA21C0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4ACAC, &_s7InfixOpO21GreaterThanCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA21C0);
  }
  return result;
}

unint64_t sub_23F6B3060()
{
  unint64_t result;

  result = qword_256EA21C8;
  if (!qword_256EA21C8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4AC34, &_s7InfixOpO23LessThanEqualCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA21C8);
  }
  return result;
}

unint64_t sub_23F6B30A0()
{
  unint64_t result;

  result = qword_256EA21D0;
  if (!qword_256EA21D0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4AC5C, &_s7InfixOpO23LessThanEqualCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA21D0);
  }
  return result;
}

unint64_t sub_23F6B30E0()
{
  unint64_t result;

  result = qword_256EA21D8;
  if (!qword_256EA21D8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4ABE4, &_s7InfixOpO18LessThanCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA21D8);
  }
  return result;
}

unint64_t sub_23F6B3120()
{
  unint64_t result;

  result = qword_256EA21E0;
  if (!qword_256EA21E0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4AC0C, &_s7InfixOpO18LessThanCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA21E0);
  }
  return result;
}

unint64_t sub_23F6B3160()
{
  unint64_t result;

  result = qword_256EA21E8;
  if (!qword_256EA21E8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4AB94, &_s7InfixOpO13AndCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA21E8);
  }
  return result;
}

unint64_t sub_23F6B31A0()
{
  unint64_t result;

  result = qword_256EA21F0;
  if (!qword_256EA21F0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4ABBC, &_s7InfixOpO13AndCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA21F0);
  }
  return result;
}

unint64_t sub_23F6B31E0()
{
  unint64_t result;

  result = qword_256EA21F8;
  if (!qword_256EA21F8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4AB44, &_s7InfixOpO12OrCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA21F8);
  }
  return result;
}

unint64_t sub_23F6B3220()
{
  unint64_t result;

  result = qword_256EA2200;
  if (!qword_256EA2200)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4AB6C, &_s7InfixOpO12OrCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2200);
  }
  return result;
}

unint64_t sub_23F6B3260()
{
  unint64_t result;

  result = qword_256EA2208;
  if (!qword_256EA2208)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B134, &_s7InfixOpO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2208);
  }
  return result;
}

unint64_t sub_23F6B32A0()
{
  unint64_t result;

  result = qword_256EA2210;
  if (!qword_256EA2210)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4B15C, &_s7InfixOpO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2210);
  }
  return result;
}

unint64_t sub_23F6B32E0()
{
  unint64_t result;

  result = qword_256EA2218;
  if (!qword_256EA2218)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4AA3C, &_s8PrefixOpO14PlusCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2218);
  }
  return result;
}

unint64_t sub_23F6B3320()
{
  unint64_t result;

  result = qword_256EA2220;
  if (!qword_256EA2220)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4AA64, &_s8PrefixOpO14PlusCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2220);
  }
  return result;
}

unint64_t sub_23F6B3360()
{
  unint64_t result;

  result = qword_256EA2228;
  if (!qword_256EA2228)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A9EC, &_s8PrefixOpO15MinusCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2228);
  }
  return result;
}

unint64_t sub_23F6B33A0()
{
  unint64_t result;

  result = qword_256EA2230;
  if (!qword_256EA2230)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4AA14, &_s8PrefixOpO15MinusCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2230);
  }
  return result;
}

unint64_t sub_23F6B33E0()
{
  unint64_t result;

  result = qword_256EA2238;
  if (!qword_256EA2238)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A99C, &_s8PrefixOpO13NotCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2238);
  }
  return result;
}

unint64_t sub_23F6B3420()
{
  unint64_t result;

  result = qword_256EA2240;
  if (!qword_256EA2240)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A9C4, &_s8PrefixOpO13NotCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2240);
  }
  return result;
}

unint64_t sub_23F6B3460()
{
  unint64_t result;

  result = qword_256EA2248;
  if (!qword_256EA2248)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4AA8C, &_s8PrefixOpO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2248);
  }
  return result;
}

unint64_t sub_23F6B34A0()
{
  unint64_t result;

  result = qword_256EA2250;
  if (!qword_256EA2250)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4AAB4, &_s8PrefixOpO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2250);
  }
  return result;
}

unint64_t sub_23F6B34E0()
{
  unint64_t result;

  result = qword_256EA2258;
  if (!qword_256EA2258)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A894, &_s7LiteralO14NullCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2258);
  }
  return result;
}

unint64_t sub_23F6B3520()
{
  unint64_t result;

  result = qword_256EA2260;
  if (!qword_256EA2260)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A8BC, &_s7LiteralO14NullCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2260);
  }
  return result;
}

unint64_t sub_23F6B3560()
{
  unint64_t result;

  result = qword_256EA2268;
  if (!qword_256EA2268)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A7DC, &_s7LiteralO14BoolCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2268);
  }
  return result;
}

unint64_t sub_23F6B35A0()
{
  unint64_t result;

  result = qword_256EA2270;
  if (!qword_256EA2270)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A804, &_s7LiteralO14BoolCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2270);
  }
  return result;
}

unint64_t sub_23F6B35E0()
{
  unint64_t result;

  result = qword_256EA2278;
  if (!qword_256EA2278)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A724, &_s7LiteralO13IntCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2278);
  }
  return result;
}

unint64_t sub_23F6B3620()
{
  unint64_t result;

  result = qword_256EA2280;
  if (!qword_256EA2280)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A74C, &_s7LiteralO13IntCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2280);
  }
  return result;
}

unint64_t sub_23F6B3660()
{
  unint64_t result;

  result = qword_256EA2288;
  if (!qword_256EA2288)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A66C, &_s7LiteralO16DoubleCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2288);
  }
  return result;
}

unint64_t sub_23F6B36A0()
{
  unint64_t result;

  result = qword_256EA2290;
  if (!qword_256EA2290)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A694, &_s7LiteralO16DoubleCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2290);
  }
  return result;
}

unint64_t sub_23F6B36E0()
{
  unint64_t result;

  result = qword_256EA2298;
  if (!qword_256EA2298)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A5B4, &_s7LiteralO16StringCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2298);
  }
  return result;
}

unint64_t sub_23F6B3720()
{
  unint64_t result;

  result = qword_256EA22A0;
  if (!qword_256EA22A0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A5DC, &_s7LiteralO16StringCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA22A0);
  }
  return result;
}

unint64_t sub_23F6B3760()
{
  unint64_t result;

  result = qword_256EA22A8;
  if (!qword_256EA22A8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A4FC, &_s7LiteralO15ArrayCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA22A8);
  }
  return result;
}

unint64_t sub_23F6B37A0()
{
  unint64_t result;

  result = qword_256EA22B0;
  if (!qword_256EA22B0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A524, &_s7LiteralO15ArrayCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA22B0);
  }
  return result;
}

unint64_t sub_23F6B37E0()
{
  unint64_t result;

  result = qword_256EA22B8;
  if (!qword_256EA22B8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A444, &_s7LiteralO14DictCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA22B8);
  }
  return result;
}

unint64_t sub_23F6B3820()
{
  unint64_t result;

  result = qword_256EA22C0;
  if (!qword_256EA22C0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A46C, &_s7LiteralO14DictCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA22C0);
  }
  return result;
}

unint64_t sub_23F6B3860()
{
  unint64_t result;

  result = qword_256EA22C8;
  if (!qword_256EA22C8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A8E4, &_s7LiteralO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA22C8);
  }
  return result;
}

unint64_t sub_23F6B38A0()
{
  unint64_t result;

  result = qword_256EA22D0;
  if (!qword_256EA22D0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A90C, &_s7LiteralO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA22D0);
  }
  return result;
}

unint64_t sub_23F6B38E0()
{
  unint64_t result;

  result = qword_256EA22D8;
  if (!qword_256EA22D8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A2D4, &_s8PickTypeO15IndexCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA22D8);
  }
  return result;
}

unint64_t sub_23F6B3920()
{
  unint64_t result;

  result = qword_256EA22E0;
  if (!qword_256EA22E0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A2FC, &_s8PickTypeO15IndexCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA22E0);
  }
  return result;
}

unint64_t sub_23F6B3960()
{
  unint64_t result;

  result = qword_256EA22E8;
  if (!qword_256EA22E8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A284, &_s8PickTypeO14NoneCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA22E8);
  }
  return result;
}

unint64_t sub_23F6B39A0()
{
  unint64_t result;

  result = qword_256EA22F0;
  if (!qword_256EA22F0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A2AC, &_s8PickTypeO14NoneCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA22F0);
  }
  return result;
}

unint64_t sub_23F6B39E0()
{
  unint64_t result;

  result = qword_256EA22F8;
  if (!qword_256EA22F8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A38C, &_s8PickTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA22F8);
  }
  return result;
}

unint64_t sub_23F6B3A20()
{
  unint64_t result;

  result = qword_256EA2300;
  if (!qword_256EA2300)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A3B4, &_s8PickTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2300);
  }
  return result;
}

unint64_t sub_23F6B3A60()
{
  unint64_t result;

  result = qword_256EA2308;
  if (!qword_256EA2308)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A17C, &_s10UpdateKindO16AppendCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2308);
  }
  return result;
}

unint64_t sub_23F6B3AA0()
{
  unint64_t result;

  result = qword_256EA2310;
  if (!qword_256EA2310)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A1A4, &_s10UpdateKindO16AppendCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2310);
  }
  return result;
}

unint64_t sub_23F6B3AE0()
{
  unint64_t result;

  result = qword_256EA2318;
  if (!qword_256EA2318)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A12C, &_s10UpdateKindO17ReplaceCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2318);
  }
  return result;
}

unint64_t sub_23F6B3B20()
{
  unint64_t result;

  result = qword_256EA2320;
  if (!qword_256EA2320)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A154, &_s10UpdateKindO17ReplaceCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2320);
  }
  return result;
}

unint64_t sub_23F6B3B60()
{
  unint64_t result;

  result = qword_256EA2328;
  if (!qword_256EA2328)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A1CC, &_s10UpdateKindO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2328);
  }
  return result;
}

unint64_t sub_23F6B3BA0()
{
  unint64_t result;

  result = qword_256EA2330;
  if (!qword_256EA2330)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A1F4, &_s10UpdateKindO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2330);
  }
  return result;
}

unint64_t sub_23F6B3BE0()
{
  unint64_t result;

  result = qword_256EA2338;
  if (!qword_256EA2338)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A074, &_s10UpdateExprV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2338);
  }
  return result;
}

unint64_t sub_23F6B3C20()
{
  unint64_t result;

  result = qword_256EA2340;
  if (!qword_256EA2340)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4A09C, &_s10UpdateExprV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2340);
  }
  return result;
}

unint64_t sub_23F6B3C60()
{
  unint64_t result;

  result = qword_256EA2348;
  if (!qword_256EA2348)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49FBC, &_s16UpdateParametersV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2348);
  }
  return result;
}

unint64_t sub_23F6B3CA0()
{
  unint64_t result;

  result = qword_256EA2350;
  if (!qword_256EA2350)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49FE4, &_s16UpdateParametersV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2350);
  }
  return result;
}

unint64_t sub_23F6B3CE0()
{
  unint64_t result;

  result = qword_256EA2358;
  if (!qword_256EA2358)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49F6C, &_s7BuiltinO16GetMentionedAppsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2358);
  }
  return result;
}

unint64_t sub_23F6B3D20()
{
  unint64_t result;

  result = qword_256EA2360;
  if (!qword_256EA2360)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49F94, &_s7BuiltinO16GetMentionedAppsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2360);
  }
  return result;
}

unint64_t sub_23F6B3D60()
{
  unint64_t result;

  result = qword_256EA2368;
  if (!qword_256EA2368)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49EB4, &_s7BuiltinO6CancelV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2368);
  }
  return result;
}

unint64_t sub_23F6B3DA0()
{
  unint64_t result;

  result = qword_256EA2370;
  if (!qword_256EA2370)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49EDC, &_s7BuiltinO6CancelV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2370);
  }
  return result;
}

unint64_t sub_23F6B3DE0()
{
  unint64_t result;

  result = qword_256EA2378;
  if (!qword_256EA2378)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49DFC, &_s7BuiltinO6RejectV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2378);
  }
  return result;
}

unint64_t sub_23F6B3E20()
{
  unint64_t result;

  result = qword_256EA2380;
  if (!qword_256EA2380)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49E24, &_s7BuiltinO6RejectV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2380);
  }
  return result;
}

unint64_t sub_23F6B3E60()
{
  unint64_t result;

  result = qword_256EA2388;
  if (!qword_256EA2388)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49D44, &_s7BuiltinO4UndoV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2388);
  }
  return result;
}

unint64_t sub_23F6B3EA0()
{
  unint64_t result;

  result = qword_256EA2390;
  if (!qword_256EA2390)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49D6C, &_s7BuiltinO4UndoV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2390);
  }
  return result;
}

unint64_t sub_23F6B3EE0()
{
  unint64_t result;

  result = qword_256EA2398;
  if (!qword_256EA2398)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49CF4, &_s7BuiltinO14NoMatchingToolV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2398);
  }
  return result;
}

unint64_t sub_23F6B3F20()
{
  unint64_t result;

  result = qword_256EA23A0;
  if (!qword_256EA23A0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49D1C, &_s7BuiltinO14NoMatchingToolV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA23A0);
  }
  return result;
}

unint64_t sub_23F6B3F60()
{
  unint64_t result;

  result = qword_256EA23A8;
  if (!qword_256EA23A8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49C3C, &_s7BuiltinO11ResolveToolV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA23A8);
  }
  return result;
}

unint64_t sub_23F6B3FA0()
{
  unint64_t result;

  result = qword_256EA23B0;
  if (!qword_256EA23B0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49C64, &_s7BuiltinO11ResolveToolV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA23B0);
  }
  return result;
}

unint64_t sub_23F6B3FE0()
{
  unint64_t result;

  result = qword_256EA23B8;
  if (!qword_256EA23B8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49B84, &_s7BuiltinO7PickOneV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA23B8);
  }
  return result;
}

unint64_t sub_23F6B4020()
{
  unint64_t result;

  result = qword_256EA23C0;
  if (!qword_256EA23C0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49BAC, &_s7BuiltinO7PickOneV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA23C0);
  }
  return result;
}

unint64_t sub_23F6B4060()
{
  unint64_t result;

  result = qword_256EA23C8;
  if (!qword_256EA23C8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49ACC, &_s7BuiltinO6SearchV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA23C8);
  }
  return result;
}

unint64_t sub_23F6B40A0()
{
  unint64_t result;

  result = qword_256EA23D0;
  if (!qword_256EA23D0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49AF4, &_s7BuiltinO6SearchV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA23D0);
  }
  return result;
}

unint64_t sub_23F6B40E0()
{
  unint64_t result;

  result = qword_256EA23D8;
  if (!qword_256EA23D8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49A14, &_s7BuiltinO7ConfirmV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA23D8);
  }
  return result;
}

unint64_t sub_23F6B4120()
{
  unint64_t result;

  result = qword_256EA23E0;
  if (!qword_256EA23E0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49A3C, &_s7BuiltinO7ConfirmV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA23E0);
  }
  return result;
}

unint64_t sub_23F6B4160()
{
  unint64_t result;

  result = qword_256EA23E8;
  if (!qword_256EA23E8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4995C, &_s7BuiltinO4PickV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA23E8);
  }
  return result;
}

unint64_t sub_23F6B41A0()
{
  unint64_t result;

  result = qword_256EA23F0;
  if (!qword_256EA23F0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49984, &_s7BuiltinO4PickV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA23F0);
  }
  return result;
}

unint64_t sub_23F6B41E0()
{
  unint64_t result;

  result = qword_256EA23F8;
  if (!qword_256EA23F8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB498A4, &_s7BuiltinO3SayV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA23F8);
  }
  return result;
}

unint64_t sub_23F6B4220()
{
  unint64_t result;

  result = qword_256EA2400;
  if (!qword_256EA2400)
  {
    result = MEMORY[0x242674E5C](&unk_23FB498CC, &_s7BuiltinO3SayV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2400);
  }
  return result;
}

unint64_t sub_23F6B4260()
{
  unint64_t result;

  result = qword_256EA2408;
  if (!qword_256EA2408)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49734, &_s4ExprO15IdentCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2408);
  }
  return result;
}

unint64_t sub_23F6B42A0()
{
  unint64_t result;

  result = qword_256EA2410;
  if (!qword_256EA2410)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4975C, &_s4ExprO15IdentCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2410);
  }
  return result;
}

unint64_t sub_23F6B42E0()
{
  unint64_t result;

  result = qword_256EA2418;
  if (!qword_256EA2418)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4967C, &_s4ExprO21StatementIdCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2418);
  }
  return result;
}

unint64_t sub_23F6B4320()
{
  unint64_t result;

  result = qword_256EA2420;
  if (!qword_256EA2420)
  {
    result = MEMORY[0x242674E5C](&unk_23FB496A4, &_s4ExprO21StatementIdCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2420);
  }
  return result;
}

unint64_t sub_23F6B4360()
{
  unint64_t result;

  result = qword_256EA2428;
  if (!qword_256EA2428)
  {
    result = MEMORY[0x242674E5C](&unk_23FB495C4, &_s4ExprO17LiteralCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2428);
  }
  return result;
}

unint64_t sub_23F6B43A0()
{
  unint64_t result;

  result = qword_256EA2430;
  if (!qword_256EA2430)
  {
    result = MEMORY[0x242674E5C](&unk_23FB495EC, &_s4ExprO17LiteralCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2430);
  }
  return result;
}

unint64_t sub_23F6B43E0()
{
  unint64_t result;

  result = qword_256EA2438;
  if (!qword_256EA2438)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4950C, &_s4ExprO16PrefixCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2438);
  }
  return result;
}

unint64_t sub_23F6B4420()
{
  unint64_t result;

  result = qword_256EA2440;
  if (!qword_256EA2440)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49534, &_s4ExprO16PrefixCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2440);
  }
  return result;
}

unint64_t sub_23F6B4460()
{
  unint64_t result;

  result = qword_256EA2448;
  if (!qword_256EA2448)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49454, &_s4ExprO15InfixCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2448);
  }
  return result;
}

unint64_t sub_23F6B44A0()
{
  unint64_t result;

  result = qword_256EA2450;
  if (!qword_256EA2450)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4947C, &_s4ExprO15InfixCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2450);
  }
  return result;
}

unint64_t sub_23F6B44E0()
{
  unint64_t result;

  result = qword_256EA2458;
  if (!qword_256EA2458)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4939C, &_s4ExprO13DotCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2458);
  }
  return result;
}

unint64_t sub_23F6B4520()
{
  unint64_t result;

  result = qword_256EA2460;
  if (!qword_256EA2460)
  {
    result = MEMORY[0x242674E5C](&unk_23FB493C4, &_s4ExprO13DotCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2460);
  }
  return result;
}

unint64_t sub_23F6B4560()
{
  unint64_t result;

  result = qword_256EA2468;
  if (!qword_256EA2468)
  {
    result = MEMORY[0x242674E5C](&unk_23FB492E4, &_s4ExprO15IndexCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2468);
  }
  return result;
}

unint64_t sub_23F6B45A0()
{
  unint64_t result;

  result = qword_256EA2470;
  if (!qword_256EA2470)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4930C, &_s4ExprO15IndexCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2470);
  }
  return result;
}

unint64_t sub_23F6B45E0()
{
  unint64_t result;

  result = qword_256EA2478;
  if (!qword_256EA2478)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4922C, &_s4ExprO14CallCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2478);
  }
  return result;
}

unint64_t sub_23F6B4620()
{
  unint64_t result;

  result = qword_256EA2480;
  if (!qword_256EA2480)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49254, &_s4ExprO14CallCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2480);
  }
  return result;
}

unint64_t sub_23F6B4660()
{
  unint64_t result;

  result = qword_256EA2488;
  if (!qword_256EA2488)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49174, &_s4ExprO13SayCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2488);
  }
  return result;
}

unint64_t sub_23F6B46A0()
{
  unint64_t result;

  result = qword_256EA2490;
  if (!qword_256EA2490)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4919C, &_s4ExprO13SayCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2490);
  }
  return result;
}

unint64_t sub_23F6B46E0()
{
  unint64_t result;

  result = qword_256EA2498;
  if (!qword_256EA2498)
  {
    result = MEMORY[0x242674E5C](&unk_23FB490BC, &_s4ExprO14PickCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2498);
  }
  return result;
}

unint64_t sub_23F6B4720()
{
  unint64_t result;

  result = qword_256EA24A0;
  if (!qword_256EA24A0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB490E4, &_s4ExprO14PickCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA24A0);
  }
  return result;
}

unint64_t sub_23F6B4760()
{
  unint64_t result;

  result = qword_256EA24A8;
  if (!qword_256EA24A8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49004, &_s4ExprO17ConfirmCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA24A8);
  }
  return result;
}

unint64_t sub_23F6B47A0()
{
  unint64_t result;

  result = qword_256EA24B0;
  if (!qword_256EA24B0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4902C, &_s4ExprO17ConfirmCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA24B0);
  }
  return result;
}

unint64_t sub_23F6B47E0()
{
  unint64_t result;

  result = qword_256EA24B8;
  if (!qword_256EA24B8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB48F4C, &_s4ExprO16SearchCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA24B8);
  }
  return result;
}

unint64_t sub_23F6B4820()
{
  unint64_t result;

  result = qword_256EA24C0;
  if (!qword_256EA24C0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB48F74, &_s4ExprO16SearchCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA24C0);
  }
  return result;
}

unint64_t sub_23F6B4860()
{
  unint64_t result;

  result = qword_256EA24C8;
  if (!qword_256EA24C8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB48E94, &_s4ExprO17PickOneCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA24C8);
  }
  return result;
}

unint64_t sub_23F6B48A0()
{
  unint64_t result;

  result = qword_256EA24D0;
  if (!qword_256EA24D0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB48EBC, &_s4ExprO17PickOneCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA24D0);
  }
  return result;
}

unint64_t sub_23F6B48E0()
{
  unint64_t result;

  result = qword_256EA24D8;
  if (!qword_256EA24D8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB48DDC, &_s4ExprO21ResolveToolCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA24D8);
  }
  return result;
}

unint64_t sub_23F6B4920()
{
  unint64_t result;

  result = qword_256EA24E0;
  if (!qword_256EA24E0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB48E04, &_s4ExprO21ResolveToolCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA24E0);
  }
  return result;
}

unint64_t sub_23F6B4960()
{
  unint64_t result;

  result = qword_256EA24E8;
  if (!qword_256EA24E8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB48D24, &_s4ExprO24NoMatchingToolCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA24E8);
  }
  return result;
}

unint64_t sub_23F6B49A0()
{
  unint64_t result;

  result = qword_256EA24F0;
  if (!qword_256EA24F0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB48D4C, &_s4ExprO24NoMatchingToolCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA24F0);
  }
  return result;
}

unint64_t sub_23F6B49E0()
{
  unint64_t result;

  result = qword_256EA24F8;
  if (!qword_256EA24F8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB48C6C, &_s4ExprO14UndoCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA24F8);
  }
  return result;
}

unint64_t sub_23F6B4A20()
{
  unint64_t result;

  result = qword_256EA2500;
  if (!qword_256EA2500)
  {
    result = MEMORY[0x242674E5C](&unk_23FB48C94, &_s4ExprO14UndoCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2500);
  }
  return result;
}

unint64_t sub_23F6B4A60()
{
  unint64_t result;

  result = qword_256EA2508;
  if (!qword_256EA2508)
  {
    result = MEMORY[0x242674E5C](&unk_23FB48BB4, &_s4ExprO16RejectCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2508);
  }
  return result;
}

unint64_t sub_23F6B4AA0()
{
  unint64_t result;

  result = qword_256EA2510;
  if (!qword_256EA2510)
  {
    result = MEMORY[0x242674E5C](&unk_23FB48BDC, &_s4ExprO16RejectCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2510);
  }
  return result;
}

unint64_t sub_23F6B4AE0()
{
  unint64_t result;

  result = qword_256EA2518;
  if (!qword_256EA2518)
  {
    result = MEMORY[0x242674E5C](&unk_23FB48AFC, &_s4ExprO16CancelCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2518);
  }
  return result;
}

unint64_t sub_23F6B4B20()
{
  unint64_t result;

  result = qword_256EA2520;
  if (!qword_256EA2520)
  {
    result = MEMORY[0x242674E5C](&unk_23FB48B24, &_s4ExprO16CancelCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2520);
  }
  return result;
}

unint64_t sub_23F6B4B60()
{
  unint64_t result;

  result = qword_256EA2528;
  if (!qword_256EA2528)
  {
    result = MEMORY[0x242674E5C](&unk_23FB48A44, &_s4ExprO26GetMentionedAppsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2528);
  }
  return result;
}

unint64_t sub_23F6B4BA0()
{
  unint64_t result;

  result = qword_256EA2530;
  if (!qword_256EA2530)
  {
    result = MEMORY[0x242674E5C](&unk_23FB48A6C, &_s4ExprO26GetMentionedAppsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2530);
  }
  return result;
}

unint64_t sub_23F6B4BE0()
{
  unint64_t result;

  result = qword_256EA2538;
  if (!qword_256EA2538)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4898C, &_s4ExprO26UpdateParametersCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2538);
  }
  return result;
}

unint64_t sub_23F6B4C20()
{
  unint64_t result;

  result = qword_256EA2540;
  if (!qword_256EA2540)
  {
    result = MEMORY[0x242674E5C](&unk_23FB489B4, &_s4ExprO26UpdateParametersCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2540);
  }
  return result;
}

unint64_t sub_23F6B4C60()
{
  unint64_t result;

  result = qword_256EA2548;
  if (!qword_256EA2548)
  {
    result = MEMORY[0x242674E5C](&unk_23FB4893C, &_s4ExprO19EndOfPlanCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2548);
  }
  return result;
}

unint64_t sub_23F6B4CA0()
{
  unint64_t result;

  result = qword_256EA2550;
  if (!qword_256EA2550)
  {
    result = MEMORY[0x242674E5C](&unk_23FB48964, &_s4ExprO19EndOfPlanCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2550);
  }
  return result;
}

unint64_t sub_23F6B4CE0()
{
  unint64_t result;

  result = qword_256EA2558;
  if (!qword_256EA2558)
  {
    result = MEMORY[0x242674E5C](&unk_23FB488EC, &_s4ExprO26ContinuePlanningCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2558);
  }
  return result;
}

unint64_t sub_23F6B4D20()
{
  unint64_t result;

  result = qword_256EA2560;
  if (!qword_256EA2560)
  {
    result = MEMORY[0x242674E5C](&unk_23FB48914, &_s4ExprO26ContinuePlanningCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2560);
  }
  return result;
}

unint64_t sub_23F6B4D60()
{
  unint64_t result;

  result = qword_256EA2568;
  if (!qword_256EA2568)
  {
    result = MEMORY[0x242674E5C](&unk_23FB497EC, &_s4ExprO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2568);
  }
  return result;
}

unint64_t sub_23F6B4DA0()
{
  unint64_t result;

  result = qword_256EA2570;
  if (!qword_256EA2570)
  {
    result = MEMORY[0x242674E5C](&unk_23FB49814, &_s4ExprO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256EA2570);
  }
  return result;
}

uint64_t sub_23F6B4DDC(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_retain();
  return result;
}

uint64_t sub_23F6B4DF8(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_release();
  return result;
}

uint64_t sub_23F6B4E14(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_retain();
  return result;
}

uint64_t sub_23F6B4E2C(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_release();
  return result;
}

uint64_t sub_23F6B4E48(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2)
    goto LABEL_10;
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0)
    return swift_unknownObjectRetain();
LABEL_12:
  __break(1u);
  return result;
}

void sub_23F6B4EC0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_23F6B6B88(a1, a2, a3);
  sub_23F6B5FFC(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_23F694CC8();
}

void sub_23F6B4EEC(uint64_t a1)
{
  unint64_t *v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (!sub_23F6B6A68(a1))
  {
    v4 = v3;
    v5 = v2(255);
    atomic_store(MEMORY[0x242674E5C](v4, v5), v1);
  }
  sub_23F694CC8();
}

void sub_23F6B4F24(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_23F6B60B4(a1, a2, a3);
  sub_23F6B5FFC(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_23F694CC8();
}

void sub_23F6B4F58(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_23F6B6B88(a1, a2, a3);
  sub_23F6B5FFC(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_23F694CC8();
}

void sub_23F6B4F84(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = sub_23F6916B8(a2);
  sub_23F6B6454(v2);
  sub_23F694CC8();
}

void sub_23F6B4FAC()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v0 = sub_23F6B5AC8();
  v2 = v1(v0);
  sub_23F6B6454(v2);
  sub_23F694CC8();
}

void sub_23F6B4FD0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_23F6B60B4(a1, a2, a3);
  sub_23F6B5FFC(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_23F694CC8();
}

uint64_t sub_23F6B50D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 624) + 8))(v1, v0);
}

uint64_t sub_23F6B5118()
{
  return sub_23FB2F9F8();
}

uint64_t sub_23F6B5134()
{
  return sub_23FB2F9F8();
}

uint64_t sub_23F6B514C()
{
  return sub_23FB2F9F8();
}

uint64_t sub_23F6B5164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, a2, a3);
}

void sub_23F6B5178()
{
  sub_23F6B4FAC();
}

uint64_t sub_23F6B5180()
{
  return sub_23FB2FAA0();
}

uint64_t sub_23F6B5194()
{
  return sub_23FB2F9F8();
}

uint64_t sub_23F6B51C8()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23F6B51D0()
{
  return 0;
}

uint64_t sub_23F6B51EC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23F6B51F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 256) + 8))(v2, v1);
}

uint64_t sub_23F6B5238()
{
  return sub_23FB2FAA0();
}

uint64_t sub_23F6B5244()
{
  return sub_23FB2FA7C();
}

uint64_t sub_23F6B5280()
{
  return sub_23FB2FB78();
}

uint64_t sub_23F6B5288()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_23F6B52E4()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F6A3728(v0);
  sub_23F6A3728(v1);
  sub_23F6A3764(v1);
  return sub_23F6A3764(v0);
}

uint64_t sub_23F6B530C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

void sub_23F6B5314(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

uint64_t sub_23F6B5320()
{
  return sub_23FB2FAA0();
}

void sub_23F6B5338()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  *(_QWORD *)(v2 - 104) = 0;
  *(_QWORD *)(v2 - 144) = v1;
  *(_QWORD *)(v2 - 136) = v0;
  v3 = v1 + 64;
  v4 = (unint64_t)((1 << *(_BYTE *)(v3 - 32)) + 63) >> 6;
  *(_QWORD *)(v2 - 160) = v3;
  *(_QWORD *)(v2 - 152) = v4;
  *(_QWORD *)(v2 - 168) = v4 - 1;
}

void sub_23F6B537C(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 128) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23F6B53A4()
{
  return sub_23FB2D718();
}

uint64_t sub_23F6B53C4()
{
  return sub_23FB2FC5C();
}

void sub_23F6B53D0()
{
  sub_23F6B4FAC();
}

uint64_t sub_23F6B53D8()
{
  return sub_23FB2FC68();
}

uint64_t sub_23F6B53E0()
{
  return 0;
}

uint64_t sub_23F6B53F0()
{
  return sub_23FB2F9F8();
}

uint64_t sub_23F6B53F8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 - 256) = result;
  return result;
}

void sub_23F6B5404(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 168) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_23F6B5420(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23F6B5458()
{
  return sub_23FB2FA7C();
}

uint64_t sub_23F6B5480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v3 - 136) + 32))(v2, v0 + *(int *)(v1 + 48), *(_QWORD *)(v3 - 88));
}

unint64_t sub_23F6B54B0()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F6A3764(v1);
  return sub_23F6A3764(v0);
}

uint64_t sub_23F6B54C8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B54D4()
{
  return sub_23FB2FAA0();
}

void sub_23F6B54E0()
{
  sub_23F6B4FAC();
}

uint64_t sub_23F6B54E8()
{
  return sub_23FB2FAA0();
}

uint64_t sub_23F6B54F8()
{
  return swift_bridgeObjectRetain();
}

void sub_23F6B5500()
{
  sub_23F6B4FAC();
}

uint64_t sub_23F6B5508()
{
  return swift_bridgeObjectRetain();
}

void sub_23F6B5510(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F6B4F24(a1, a2, v2);
}

void sub_23F6B5528(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 248) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_23F6B5544(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 192) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_23F6B5560(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 200) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_23F6B557C(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 224) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_23F6B5598(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23F6B55EC()
{
  return sub_23FB2F9F8();
}

uint64_t sub_23F6B5608()
{
  return sub_23FB2FC8C();
}

uint64_t sub_23F6B5610()
{
  return sub_23FB2FAA0();
}

uint64_t sub_23F6B561C()
{
  return sub_23FB2FB18();
}

uint64_t sub_23F6B5624()
{
  return sub_23FB2F11C();
}

uint64_t sub_23F6B563C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

void sub_23F6B5644(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23F6B5670()
{
  return sub_23FB2FAA0();
}

void sub_23F6B5684()
{
  sub_23F6B4FAC();
}

void sub_23F6B568C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F6B4F58(a1, a2, v2);
}

uint64_t sub_23F6B5694()
{
  char v0;

  return v0 & 1;
}

uint64_t sub_23F6B56A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t sub_23F6B56B0()
{
  return swift_allocObject();
}

uint64_t sub_23F6B56B8()
{
  return sub_23FB2F80C();
}

uint64_t sub_23F6B56E0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

void sub_23F6B56F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  *(_QWORD *)(v3 - 152) = v2;
  *(_QWORD *)(v3 - 144) = v0;
  *(_QWORD *)(v3 - 120) = 0;
  *(_QWORD *)(v3 - 160) = v1;
  v4 = v1 + 64;
  v5 = (unint64_t)((1 << *(_BYTE *)(v4 - 32)) + 63) >> 6;
  *(_QWORD *)(v3 - 176) = v4;
  *(_QWORD *)(v3 - 168) = v5;
  *(_QWORD *)(v3 - 184) = v5 - 1;
}

uint64_t sub_23F6B5770()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23F6B5778()
{
  uint64_t *v0;

  return sub_23F6916B8(v0);
}

void sub_23F6B5798(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F6B4F24(a1, a2, v2);
}

void sub_23F6B57A0(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_23F6B57BC(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 144) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_23F6B57D8(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 232) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_23F6B57F4(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_23F6B5810(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_23F6B582C(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 184) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_23F6B5848(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 208) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23F6B5864()
{
  return 0;
}

uint64_t sub_23F6B5880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v0 + 16))(*(_QWORD *)(v4 - 120), *(_QWORD *)(v1 + 56) + *(_QWORD *)(v0 + 72) * v3, v2);
}

unint64_t sub_23F6B58A0()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F6A3728(v0);
  return sub_23F6A3728(v1);
}

uint64_t sub_23F6B58C8()
{
  return sub_23FB2C764();
}

uint64_t sub_23F6B58D0()
{
  return sub_23FB2F9F8();
}

uint64_t sub_23F6B58DC()
{
  return sub_23FB2FB18();
}

void sub_23F6B58F8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F6B4F58(a1, a2, v2);
}

uint64_t sub_23F6B5900@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23F6B5908()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F6B5910(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v1 + 16))(v2 + *(int *)(a1 + 48), v3, *(_QWORD *)(v4 - 88));
}

uint64_t sub_23F6B5964(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 128) = v2;
  *(_QWORD *)(v3 - 120) = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v3 - 112) = result;
  return result;
}

uint64_t sub_23F6B5994()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B59B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = v1;
  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v2 - 96) + 32))(*(_QWORD *)(v2 - 128), v0, *(_QWORD *)(v2 - 88));
}

uint64_t sub_23F6B5A10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 624) + 8))(v1, v0);
}

void sub_23F6B5A28(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F6B4F24(a1, a2, v2);
}

uint64_t sub_23F6B5A30()
{
  uint64_t v0;

  return static AST.Expr.== infix(_:_:)(v0 - 88, v0 - 96);
}

uint64_t sub_23F6B5A3C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F6B5A48()
{
  return sub_23FB2FC68();
}

uint64_t sub_23F6B5A54()
{
  return sub_23FB2F254();
}

uint64_t sub_23F6B5A5C()
{
  return sub_23FB2F11C();
}

uint64_t sub_23F6B5A74()
{
  return sub_23FB2F11C();
}

uint64_t sub_23F6B5A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 1, 1, a4);
}

uint64_t sub_23F6B5A98()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F6B4E14(v0);
  return sub_23F6B4E14(v1);
}

uint64_t sub_23F6B5AB0()
{
  return swift_bridgeObjectRelease();
}

void sub_23F6B5AB8(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F6B4F24(a1, a2, v2);
}

void sub_23F6B5AC0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F6B4F24(a1, a2, v2);
}

uint64_t sub_23F6B5AC8()
{
  return 0;
}

uint64_t sub_23F6B5AD4()
{
  return swift_allocError();
}

void sub_23F6B5AE0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F6B4F24(a1, a2, v2);
}

_QWORD *sub_23F6B5B10()
{
  _QWORD *v0;

  return sub_23F6ADC98(v0, v0[3]);
}

void sub_23F6B5B40()
{
  sub_23F6B4FAC();
}

uint64_t sub_23F6B5B48()
{
  return sub_23FB2F200();
}

void sub_23F6B5B58()
{
  sub_23F6B4FAC();
}

uint64_t sub_23F6B5B60()
{
  return sub_23FB2FAA0();
}

uint64_t sub_23F6B5B80(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

void sub_23F6B5B90(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = a1;
}

uint64_t sub_23F6B5BAC(uint64_t a1)
{
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v1);
}

void sub_23F6B5BD8(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_23F6B5BF4(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 240) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_23F6B5C10(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23F6B5C2C()
{
  return 0;
}

uint64_t sub_23F6B5CF0()
{
  return type metadata accessor for AST.UpdateParameters();
}

uint64_t sub_23F6B5CF8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F6B5D1C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F6B5D30()
{
  uint64_t v0;

  return *(_QWORD *)((v0 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
}

uint64_t sub_23F6B5D44()
{
  return sub_23FB2F11C();
}

uint64_t sub_23F6B5D50()
{
  return sub_23FB2F254();
}

uint64_t sub_23F6B5D5C()
{
  return sub_23FB2F11C();
}

uint64_t sub_23F6B5D68()
{
  uint64_t *v0;

  return sub_23F6916B8(v0);
}

uint64_t sub_23F6B5D70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_23F6B5D84()
{
  return sub_23FB2F11C();
}

uint64_t sub_23F6B5D90()
{
  uint64_t *v0;

  return sub_23F6916B8(v0);
}

uint64_t sub_23F6B5D98()
{
  uint64_t *v0;

  return sub_23F6916B8(v0);
}

uint64_t sub_23F6B5DA0()
{
  return sub_23FB2FCB0();
}

uint64_t sub_23F6B5DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, a2, v2);
}

uint64_t sub_23F6B5DD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v3, v0, v2);
}

void sub_23F6B5DE8(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F6B4F24(a1, a2, v2);
}

uint64_t sub_23F6B5DF0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

uint64_t sub_23F6B5DFC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B5E14()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B5E48(uint64_t a1)
{
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v1, 1, 1, a1);
}

uint64_t sub_23F6B5E6C()
{
  return sub_23FB2FCB0();
}

uint64_t sub_23F6B5E8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6B4E14(v1);
  sub_23F6B4DDC(v0);
  sub_23F6B4E14(v1);
  sub_23F6B4DDC(v0);
  return sub_23F6B4E14(v2);
}

void sub_23F6B5EDC(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F6B4F24(a1, a2, v2);
}

uint64_t sub_23F6B5EE4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B5EF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

void sub_23F6B5EF8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = (v0 - 1) & v0;
}

uint64_t sub_23F6B5F1C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F6B5F24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 - 96) + 16))(v1, *(_QWORD *)(*(_QWORD *)(v2 - 160) + 48) + *(_QWORD *)(*(_QWORD *)(v2 - 96) + 72) * v0, *(_QWORD *)(v2 - 88));
}

void sub_23F6B5F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 112) = (char *)&a9 - v9;
}

void sub_23F6B5F8C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F6B4F58(a1, a2, v2);
}

uint64_t sub_23F6B5F94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

void sub_23F6B5FA4()
{
  static TranscriptProtoAstexprEnum.== infix(_:_:)();
}

uint64_t sub_23F6B5FB0()
{
  return sub_23FB2FC68();
}

uint64_t sub_23F6B5FBC()
{
  return swift_getEnumCaseMultiPayload();
}

unint64_t sub_23F6B5FC8()
{
  return sub_23F78C6DC();
}

void sub_23F6B5FD8()
{
  AST.Expr.hash(into:)();
}

uint64_t sub_23F6B5FE0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B5FEC()
{
  return sub_23FB2F200();
}

uint64_t sub_23F6B5FFC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23F6B6008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 1, 1, a4);
}

uint64_t sub_23F6B6024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;

  return sub_23F6B4E48(1, a2, v6, a4, 0, a6);
}

void sub_23F6B6034(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23F6B4F84(v2, a2);
}

uint64_t sub_23F6B603C()
{
  return swift_projectBox();
}

uint64_t sub_23F6B6048()
{
  return sub_23FB2FB18();
}

void sub_23F6B6058()
{
  sub_23F6B4FAC();
}

uint64_t sub_23F6B6060()
{
  return sub_23FB2F11C();
}

uint64_t sub_23F6B606C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_23F6B6088()
{
  uint64_t *v0;

  return sub_23F6916B8(v0);
}

uint64_t sub_23F6B6090()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F6B6098()
{
  uint64_t v0;

  return v0;
}

void sub_23F6B60A4()
{
  sub_23F6B4FAC();
}

uint64_t sub_23F6B60AC(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23F6B60B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

uint64_t sub_23F6B60CC()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 624) + 8))(v0, *(_QWORD *)(v1 - 96));
}

void sub_23F6B60F4(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F6B4F24(a1, a2, v2);
}

uint64_t sub_23F6B60FC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_23F6B611C()
{
  return sub_23FB2F200();
}

uint64_t sub_23F6B6170(uint64_t a1)
{
  return AST.Expr.description.getter(a1);
}

uint64_t sub_23F6B6178@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23F6B6180()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B6190()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B619C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B61A8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B61D0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B61DC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B61E8()
{
  return sub_23FB2F11C();
}

uint64_t sub_23F6B6200()
{
  return sub_23FB2F11C();
}

uint64_t sub_23F6B6218()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B6224()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B6230()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B6244()
{
  uint64_t *v0;

  return sub_23F6916B8(v0);
}

unint64_t sub_23F6B624C()
{
  unint64_t v0;

  return sub_23F6A3764(v0);
}

uint64_t sub_23F6B6254()
{
  return swift_bridgeObjectRetain();
}

void sub_23F6B625C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F6B4FD0(a1, a2, v2);
}

void sub_23F6B6264(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F6B4F58(a1, a2, v2);
}

uint64_t sub_23F6B626C()
{
  char v0;

  return v0 & 1;
}

uint64_t sub_23F6B6278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  return sub_23F6B4E48(a1, a2, a3, a4, 0, a6);
}

_QWORD *sub_23F6B6280(_QWORD *a1)
{
  uint64_t v1;

  return sub_23F6ADC98(a1, v1);
}

void sub_23F6B6298()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = v0;
}

unint64_t sub_23F6B62AC()
{
  unint64_t v0;

  return sub_23F6A3728(v0);
}

void sub_23F6B62B4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = v0;
}

void sub_23F6B62C8(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = a1;
}

void sub_23F6B62DC(uint64_t a1)
{
  uint64_t *v1;

  sub_23F6B4F84(a1, v1);
}

uint64_t sub_23F6B62E4()
{
  return 0;
}

uint64_t sub_23F6B6308()
{
  return 0;
}

uint64_t sub_23F6B632C()
{
  return sub_23FB2EB1C();
}

uint64_t sub_23F6B6334()
{
  return sub_23FB2F818();
}

uint64_t sub_23F6B633C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_23F6B6344@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 256));
}

uint64_t sub_23F6B634C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

void sub_23F6B6360()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
}

uint64_t sub_23F6B636C()
{
  return sub_23FB2FCC8();
}

void sub_23F6B6380()
{
  static AST.Expr.== infix(_:_:)();
}

uint64_t sub_23F6B63A4()
{
  return sub_23FB2FCC8();
}

uint64_t sub_23F6B63B8(uint64_t a1, uint64_t *a2)
{
  return sub_23F6916B8(a2);
}

uint64_t sub_23F6B63C0()
{
  return _s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0();
}

uint64_t sub_23F6B63CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_23F6B63E0()
{
  return sub_23FB2FC5C();
}

uint64_t sub_23F6B63E8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B63F4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B640C()
{
  uint64_t v0;

  return v0;
}

void sub_23F6B6418()
{
  sub_23F6B4FAC();
}

uint64_t sub_23F6B6420@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23F6B6428()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B6434()
{
  uint64_t v0;

  sub_23F6B4E2C(v0);
  return sub_23F6B4E2C(v0);
}

uint64_t sub_23F6B644C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F6B6454(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_23F6B6468()
{
  uint64_t v0;

  return v0;
}

void sub_23F6B6474(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F6B4F58(a1, a2, v2);
}

uint64_t sub_23F6B6490()
{
  return sub_23FB2FB18();
}

uint64_t sub_23F6B64B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

void sub_23F6B64B8()
{
  JUMPOUT(0x242674E5CLL);
}

void sub_23F6B64F4(uint64_t a1)
{
  uint64_t *v1;

  sub_23F6B4F84(a1, v1);
}

void sub_23F6B64FC(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = a1;
}

void sub_23F6B6518()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = (v0 - 1) & v0;
}

uint64_t sub_23F6B6534()
{
  return _s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0();
}

void sub_23F6B6540()
{
  sub_23F6B4FAC();
}

uint64_t sub_23F6B6548()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F6B656C()
{
  return sub_23FB2FB18();
}

void sub_23F6B658C(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 216) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23F6B6634()
{
  return sub_23FB2ED38();
}

uint64_t sub_23F6B663C()
{
  return sub_23FB2F9F8();
}

uint64_t sub_23F6B6650(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, a2, v2);
}

uint64_t sub_23F6B6674()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B66AC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B66C4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B66EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 88) = v0;
  return v1 + v2;
}

void sub_23F6B66FC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
}

uint64_t sub_23F6B6718()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B6730()
{
  return sub_23FB2F200();
}

uint64_t sub_23F6B6740()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23F6B6754()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_23F6B6764()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B677C()
{
  uint64_t v0;

  return v0 & 0xFFFFFFFFFFFFFFBLL;
}

uint64_t sub_23F6B678C()
{
  return swift_retain();
}

uint64_t sub_23F6B67AC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B67D4()
{
  _QWORD *v0;
  uint64_t (*v1)(void);

  sub_23F6ADC98(v0, v0[3]);
  return v1();
}

uint64_t sub_23F6B67F4(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 464) = result;
  return result;
}

uint64_t sub_23F6B6804()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B681C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B6840()
{
  return sub_23FB2F254();
}

uint64_t sub_23F6B6848()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B6854()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B6860()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B686C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B6878()
{
  uint64_t v0;

  return v0;
}

void sub_23F6B6884(uint64_t a1)
{
  uint64_t *v1;

  sub_23F6B4F84(a1, v1);
}

uint64_t sub_23F6B688C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B689C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B68A8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B68B4()
{
  uint64_t v0;

  return sub_23F6B4DF8(v0);
}

uint64_t sub_23F6B68BC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B68CC()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_23F6B68D8()
{
  unint64_t v0;

  return sub_23F6A3728(v0);
}

uint64_t sub_23F6B68E0()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23F6B68E8()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F6AEACC(v0, v1, 4);
}

uint64_t sub_23F6B68F8()
{
  return sub_23FB2F254();
}

uint64_t sub_23F6B6900@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v1, v2);
}

unint64_t sub_23F6B6910()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_23F6AE968();
}

uint64_t sub_23F6B6920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;

  result = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 1, 1, a4);
  *(_QWORD *)(v4 - 112) = 0;
  return result;
}

void sub_23F6B693C()
{
  sub_23F6B4FAC();
}

uint64_t sub_23F6B6944()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F6B4DDC(v1);
  sub_23F6B4DF8(v0);
  return sub_23F6B4DF8(v1);
}

uint64_t sub_23F6B6964()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B6970()
{
  return sub_23FB2F074();
}

uint64_t sub_23F6B6978()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_23F6A3764(v3);
  sub_23F6A3764(v1);
  sub_23F6A3764(v2);
  return v0;
}

uint64_t sub_23F6B69A0()
{
  uint64_t v0;

  return v0;
}

void sub_23F6B69B0()
{
  sub_23F6B4FAC();
}

uint64_t sub_23F6B69B8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B69D0@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
}

void sub_23F6B69F4()
{
  sub_23F6B4FAC();
}

uint64_t sub_23F6B69FC()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_23F6B6A08()
{
  unint64_t v0;

  return sub_23F6A3728(v0);
}

void sub_23F6B6A10(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F6B4F58(a1, a2, v2);
}

uint64_t sub_23F6B6A18()
{
  return sub_23FB2FAE8();
}

uint64_t sub_23F6B6A28()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F6B4DDC(v1);
  sub_23F6B4DF8(v0);
  return sub_23F6B4DF8(v1);
}

uint64_t sub_23F6B6A48()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F6B6A50()
{
  return sub_23FB2FA40();
}

uint64_t sub_23F6B6A60()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F6B6A68(uint64_t a1)
{
  return *(_QWORD *)a1;
}

unint64_t sub_23F6B6A74()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 0;
  return sub_23F6AE968();
}

uint64_t sub_23F6B6A84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

void sub_23F6B6A94()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = *(_QWORD *)(v0 + 72);
}

uint64_t sub_23F6B6AAC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B6AB8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B6AEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + a1);
}

uint64_t sub_23F6B6B04@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v2, v1, v3);
}

void sub_23F6B6B14(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F6B4FD0(a1, a2, v2);
}

uint64_t sub_23F6B6B1C()
{
  return sub_23FB2FA4C();
}

uint64_t sub_23F6B6B74()
{
  return type metadata accessor for TranscriptProtoASTExpr(0);
}

uint64_t sub_23F6B6B88(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_23F6916B8(a3);
}

unint64_t sub_23F6B6BF0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 13;
  return sub_23F6AF63C();
}

unint64_t sub_23F6B6C08()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 12;
  return sub_23F6AF678();
}

unint64_t sub_23F6B6C14()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 11;
  return sub_23F6AF6B4();
}

unint64_t sub_23F6B6C20()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 10;
  return sub_23F6AF6F0();
}

unint64_t sub_23F6B6C2C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_23F6AF90C();
}

unint64_t sub_23F6B6C38()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_23F6AF084();
}

unint64_t sub_23F6B6C44()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_23F6AF138();
}

unint64_t sub_23F6B6C50()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_23F6AE354();
}

unint64_t sub_23F6B6C5C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 96) = 1;
  return sub_23F6AF318();
}

uint64_t sub_23F6B6C68()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_23F6B6C7C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 9;
  return sub_23F6AF72C();
}

uint64_t sub_23F6B6C88(uint64_t a1, ...)
{
  uint64_t v1;
  va_list va;

  va_start(va, a1);
  return sub_23F6ADC24((uint64_t)va, v1);
}

unint64_t sub_23F6B6C94()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 8;
  return sub_23F6AF768();
}

uint64_t sub_23F6B6CAC()
{
  return sub_23FB2FA7C();
}

unint64_t sub_23F6B6CB4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 7;
  return sub_23F6AF7A4();
}

unint64_t sub_23F6B6CC0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 6;
  return sub_23F6AF7E0();
}

unint64_t sub_23F6B6CCC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 96) = 6;
  return sub_23F6AF1EC();
}

unint64_t sub_23F6B6CE4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 5;
  return sub_23F6AF81C();
}

unint64_t sub_23F6B6CF0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 96) = 5;
  return sub_23F6AF228();
}

unint64_t sub_23F6B6D1C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 4;
  return sub_23F6AF858();
}

unint64_t sub_23F6B6D28()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 96) = 4;
  return sub_23F6AF264();
}

unint64_t sub_23F6B6D48()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 3;
  return sub_23F6AF894();
}

unint64_t sub_23F6B6D54()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 96) = 3;
  return sub_23F6AF2A0();
}

uint64_t sub_23F6B6D60()
{
  uint64_t v0;

  return v0 - 120;
}

unint64_t sub_23F6B6D6C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_23F6AF420();
}

unint64_t sub_23F6B6D78()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_23F6AF8D0();
}

unint64_t sub_23F6B6D84()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 96) = 2;
  return sub_23F6AF2DC();
}

uint64_t sub_23F6B6D90()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F6B6DD0()
{
  return swift_projectBox();
}

unint64_t sub_23F6B6DDC()
{
  unint64_t v0;

  return sub_23F6A3764(v0);
}

uint64_t sub_23F6B6DE8()
{
  return sub_23FB2FCC8();
}

uint64_t sub_23F6B6DF4()
{
  return sub_23FB2FCB0();
}

uint64_t sub_23F6B6E08()
{
  return swift_release();
}

uint64_t sub_23F6B6E1C()
{
  return sub_23FB2FA7C();
}

void sub_23F6B6E24(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F6B4FD0(a1, a2, v2);
}

void sub_23F6B6E2C()
{
  sub_23F6B4FAC();
}

uint64_t sub_23F6B6E34()
{
  uint64_t v0;

  return _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v0);
}

void sub_23F6B6E3C()
{
  sub_23F6B4FAC();
}

uint64_t sub_23F6B6E44()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_23F6B6E4C()
{
  unint64_t v0;

  return sub_23F6A3764(v0);
}

uint64_t sub_23F6B6E54()
{
  uint64_t *v0;

  return sub_23F6916B8(v0);
}

uint64_t sub_23F6B6E5C()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23F6B6E68()
{
  uint64_t v0;

  return _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v0);
}

uint64_t sub_23F6B6E70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t sub_23F6B6E7C()
{
  return sub_23FB2F254();
}

uint64_t sub_23F6B6E88()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F6AD218(v0, v1);
}

void sub_23F6B6E94()
{
  sub_23F6ACA7C(2);
}

uint64_t sub_23F6B6EA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F6B6EA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_23F6B6EB0@<X0>(_BYTE *result@<X0>, char a2@<W8>)
{
  *result = a2;
  return result;
}

uint64_t sub_23F6B6EB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F6B6EC0@<X0>(int a1@<W8>)
{
  return (a1 + 1);
}

uint64_t sub_23F6B6ED4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B6EE0()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t sub_23F6B6EEC()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

void sub_23F6B6EF8(uint64_t a1)
{
  uint64_t *v1;

  sub_23F6B4F84(a1, v1);
}

uint64_t sub_23F6B6F00()
{
  uint64_t *v0;

  return sub_23F6916B8(v0);
}

uint64_t sub_23F6B6F08()
{
  uint64_t v0;

  return v0;
}

void sub_23F6B6F14()
{
  uint64_t v0;
  uint64_t *v1;

  sub_23F6B4F84(v0, v1);
}

uint64_t sub_23F6B6F68()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B6F88()
{
  uint64_t v0;

  return v0;
}

void sub_23F6B6F94()
{
  sub_23F6B4FAC();
}

uint64_t sub_23F6B6F9C()
{
  uint64_t v0;

  return v0;
}

void sub_23F6B705C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F6B4F58(a1, a2, v2);
}

void sub_23F6B7064(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F6B4FD0(a1, a2, v2);
}

void sub_23F6B7094()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = v0;
}

void sub_23F6B70A8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = v0;
}

void sub_23F6B70D0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = v0;
}

void sub_23F6B70E4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = v0;
}

void sub_23F6B710C(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = a1;
}

void sub_23F6B7120(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = a1;
}

uint64_t sub_23F6B7148()
{
  return sub_23FB2ED14();
}

void sub_23F6B7188()
{
  uint64_t v0;
  uint64_t *v1;

  sub_23F6B4F84(v0, v1);
}

uint64_t sub_23F6B7194()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_23F6B71A0()
{
  unint64_t v0;

  return sub_23F6A3728(v0);
}

uint64_t sub_23F6B71BC()
{
  return 0x72616573696E6D6FLL;
}

void sub_23F6B71D0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F6B4F58(a1, a2, v2);
}

uint64_t sub_23F6B71D8()
{
  return 0x6D6F725072657375;
}

uint64_t sub_23F6B720C()
{
  return 0x61566E7275746572;
}

uint64_t sub_23F6B7248()
{
  return sub_23FB2FA40();
}

uint64_t sub_23F6B7268()
{
  return 0x52747865746E6F63;
}

uint64_t sub_23F6B727C()
{
  return 0x656D6F646167656DLL;
}

unint64_t sub_23F6B7290()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 18;
  return sub_23F6AF510();
}

unint64_t sub_23F6B72B0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 17;
  return sub_23F6AF54C();
}

unint64_t sub_23F6B72BC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 16;
  return sub_23F6AF588();
}

uint64_t sub_23F6B72C8()
{
  return 0x61636F5669726973;
}

uint64_t sub_23F6B72F0()
{
  return 0x7551797469746E65;
}

unint64_t sub_23F6B7304()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 15;
  return sub_23F6AF5C4();
}

unint64_t sub_23F6B7310()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 14;
  return sub_23F6AF600();
}

uint64_t AsyncFIFOQueue.perform<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  sub_23FB2D640();
  v5[7] = sub_23F6B74C8();
  v5[8] = sub_23FB2F4A0();
  v5[9] = v6;
  return sub_23F6B79B4();
}

uint64_t sub_23F6B737C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v3;
  v4 = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  *(_OWORD *)(v3 + 32) = v4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v5;
  *v5 = v0;
  v5[1] = sub_23F6B742C;
  return sub_23FB2FBC0();
}

uint64_t sub_23F6B742C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
    return sub_23F6B79B4();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23F6B7494()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_23F6B74C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256EA2820;
  if (!qword_256EA2820)
  {
    v1 = sub_23FB2D640();
    result = MEMORY[0x242674E5C](MEMORY[0x24BE7A590], v1);
    atomic_store(result, (unint64_t *)&qword_256EA2820);
  }
  return result;
}

uint64_t sub_23F6B7508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char *v14;
  uint64_t v16;

  sub_23F6AE310(&qword_256EA2828);
  v9 = sub_23FB2F4C4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v16 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v16 - v11, a1, v9);
  v13 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v14 = (char *)swift_allocObject();
  *((_QWORD *)v14 + 2) = a5;
  *((_QWORD *)v14 + 3) = a3;
  *((_QWORD *)v14 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v14[v13], v12, v9);
  swift_retain();
  sub_23FB2D628();
  return swift_release();
}

uint64_t sub_23F6B7620(uint64_t a1)
{
  uint64_t *v1;

  return sub_23F6B7508(a1, v1[3], v1[4], v1[5], v1[2]);
}

uint64_t sub_23F6B762C(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  v4[3] = a3;
  v4[4] = a4;
  v4[5] = *(_QWORD *)(a4 - 8);
  v4[6] = swift_task_alloc();
  v6 = swift_task_alloc();
  v4[7] = v6;
  v9 = (uint64_t (*)(uint64_t))((char *)a1 + *a1);
  v7 = (_QWORD *)swift_task_alloc();
  v4[8] = v7;
  *v7 = v4;
  v7[1] = sub_23F6B76C8;
  return v9(v6);
}

uint64_t sub_23F6B76C8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23F6B772C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 16))(*(_QWORD *)(v0 + 48), v1, v2);
  sub_23F6AE310(&qword_256EA2828);
  sub_23FB2F4C4();
  sub_23FB2F4B8();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F6B77D4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 72);
  sub_23F6AE310(&qword_256EA2828);
  sub_23F6B79C0();
  sub_23FB2F4AC();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F6B784C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  sub_23F6AE310(&qword_256EA2828);
  v1 = sub_23F6B79C0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23F6B78D8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = v0[2];
  sub_23F6AE310(&qword_256EA2828);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_23F6B79C0() - 8) + 80);
  v4 = (int *)v0[3];
  v5 = v0[4];
  v6 = (uint64_t)v0 + ((v3 + 40) & ~v3);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_23F6B796C;
  return sub_23F6B762C(v4, v5, v6, v2);
}

uint64_t sub_23F6B796C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23F6B79B4()
{
  return swift_task_switch();
}

uint64_t sub_23F6B79C0()
{
  return sub_23FB2F4C4();
}

uint64_t sub_23F6B79CC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  void *v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  _DWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _DWORD *v26;
  uint64_t v27;
  _DWORD *v28;
  id v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  NSObject *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  id v91;
  NSObject *v92;
  os_log_type_t v93;
  unsigned __int16 v94;
  os_log_type_t v95;
  uint64_t v96;
  void *object;
  os_log_type_t v98;
  void (*v99)(NSObject *, uint64_t);
  NSObject *v100;
  os_log_type_t v101;
  uint64_t v102;
  os_log_type_t v103;
  uint8_t *v104;
  void (*v105)(_DWORD *, uint64_t);
  _DWORD *v106;
  NSObject *v107;
  os_log_type_t v108;
  uint8_t *v109;
  uint64_t *v110;
  _QWORD v111[3];
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  Swift::String v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;

  v6 = v5;
  v111[1] = a3;
  v111[2] = a4;
  v116._countAndFlagsBits = a1;
  v116._object = a2;
  v117 = a5;
  v112 = sub_23FB2EDD4();
  v7 = *(_QWORD *)(v112 - 8);
  MEMORY[0x24BDAC7A8](v112);
  sub_23F6B51A4();
  v113 = v8;
  sub_23F6916B8(&qword_256EA2850);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23FB2E7F8();
  v114 = *(_QWORD *)(v10 - 8);
  v115 = v10;
  sub_23F693E20();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v111 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = ((char *)v111 - v16);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = ((char *)v111 - v19);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (_DWORD *)((char *)v111 - v22);
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = (_DWORD *)((char *)v111 - v25);
  MEMORY[0x24BDAC7A8](v24);
  v28 = (_DWORD *)((char *)v111 - v27);
  v29 = objc_msgSend(v6, sel_itemType);
  switch((_DWORD)v29)
  {
    case 0x1E0A:
      v41 = sub_23F6B9234((uint64_t)v29, sel_content);
      objc_opt_self();
      v42 = (void *)swift_dynamicCastObjCClass();
      if (!v42)
      {

        sub_23FB2E390();
        sub_23FB2E7E0();
        v103 = sub_23F6B921C();
        if (sub_23F6B90E0(v103))
        {
          v104 = (uint8_t *)sub_23F693DF4();
          *(_WORD *)v104 = 0;
          _os_log_impl(&dword_23F68F000, v20, (os_log_type_t)v41, "[SiriEntityMatcherShim] CCItemType_Home entity is missing content and cannot be converted to a TypedValue.entityIdentifier, skipping.", v104, 2u);
          sub_23F693DD0();
        }

        sub_23F6B91B0();
        v100 = v17;
        goto LABEL_40;
      }
      v43 = sub_23F7951C4((int)objc_msgSend(v42, sel_entityType));
      if (!v44)
      {
        sub_23FB2E390();
        v107 = sub_23FB2E7E0();
        v108 = sub_23FB2F5F0();
        if (os_log_type_enabled(v107, v108))
        {
          v109 = (uint8_t *)sub_23F693DF4();
          *(_WORD *)v109 = 0;
          _os_log_impl(&dword_23F68F000, v107, v108, "[SiriEntityMatcherShim] couldn't find corresponding SiriOntology.IdentifierConstants type name for given CCItemType_Home entity.", v109, 2u);
          sub_23F693DD0();
        }

        sub_23F6B91B0();
        v100 = v20;
        goto LABEL_40;
      }
      v45 = v43;
      v46 = v44;
      sub_23FB2EC24();
      v47 = swift_allocBox();
      v48 = (_QWORD *)sub_23F6B91DC();
      v48[2] = sub_23FB2F140();
      v48[3] = v49;
      v48[4] = v45;
      v48[5] = v46;
      v50 = v112;
      v51 = v113;
      *v113 = v48;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v51, *MEMORY[0x24BEB9CF8], v50);
      v52 = sub_23F6B91FC();
      sub_23F6B9158(v52);
      sub_23F6B9204();

      *v117 = v47;
      break;
    case 0xB8ED:
      v53 = sub_23F6B9234((uint64_t)v29, sel_content);
      objc_opt_self();
      v54 = (void *)sub_23F6B91A4();
      if (v54 && (v55 = sub_23F6B902C(v54, (SEL *)&selRef_typeIdentifier), v56))
      {
        v28 = (_DWORD *)v55;
        v57 = v56;
        v58 = sub_23F6B902C(v6, (SEL *)&selRef_sourceIdentifier);
        if (v59)
        {
          v60 = v58;
          v61 = v59;
          sub_23FB2EC24();
          v62 = swift_allocBox();
          v63 = (_QWORD *)sub_23F6B91DC();
          v63[2] = v60;
          v63[3] = v61;
          v63[4] = v28;
          v63[5] = v57;
          v64 = v112;
          v65 = v113;
          *v113 = v63;
          (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v65, *MEMORY[0x24BEB9CF8], v64);
          v66 = sub_23F6B91FC();
          sub_23F6B9158(v66);
          sub_23F6B9204();

          *v117 = v62;
          break;
        }

        swift_bridgeObjectRelease();
      }
      else
      {

      }
      sub_23FB2E390();
      sub_23F6B91E8();
      sub_23FB2E7E0();
      v95 = sub_23F6B921C();
      if (sub_23F6B90E0(v95))
      {
        sub_23F693DF4();
        v119 = sub_23F6B90C8();
        *v26 = 136315138;
        sub_23F6B9198();
        v96 = sub_23F6B9138();
        sub_23F6B9100(v96);
        sub_23F6B91F0();
        sub_23F6B918C(&dword_23F68F000, v53, (os_log_type_t)v28, "[SiriEntityMatcherShim] SEM Cascade Entity with id %s is an AppIntentsEntity match, but we don't have enough info to construct TypedValue for it. Skipping");
        sub_23F6B90F0();
        sub_23F693DD0();
      }

      sub_23F6B6740();
      sub_23F6B91B0();
      v106 = v26;
      goto LABEL_42;
    case 0x8E52:
      v67 = sub_23FB2ECE4();
      v68 = swift_allocBox();
      v70 = v69;
      v71 = sub_23F6B91FC();
      sub_23F6B91BC(v71);
      swift_bridgeObjectRetain();
      sub_23FB2EC84();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v67 - 8) + 104))(v70, *MEMORY[0x24BEB9910], v67);
      *v117 = v68;
      break;
    case 0xA673:
      v77 = sub_23F6B9234((uint64_t)v29, sel_content);
      objc_opt_self();
      v78 = (void *)sub_23F6B91A4();
      if (v78 && (v79 = sub_23F6B902C(v78, (SEL *)&selRef_typeIdentifier), v80))
      {
        v28 = (_DWORD *)v79;
        v81 = v80;
        v82 = sub_23F6B902C(v6, (SEL *)&selRef_sourceIdentifier);
        if (v83)
        {
          v84 = v82;
          v85 = v83;
          sub_23FB2EC0C();
          v86 = swift_allocBox();
          v87 = (_QWORD *)sub_23F6B91DC();
          v87[2] = v84;
          v87[3] = v85;
          v87[4] = v28;
          v87[5] = v81;
          v88 = v112;
          v89 = v113;
          *v113 = v87;
          (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v89, *MEMORY[0x24BEB9CF8], v88);
          v90 = sub_23F6B91FC();
          sub_23F6B91BC(v90);
          swift_bridgeObjectRetain();
          sub_23FB2EC00();

          *v117 = v86;
          break;
        }

        swift_bridgeObjectRelease();
      }
      else
      {

      }
      sub_23FB2E390();
      object = v116._object;
      sub_23F6B91E8();
      sub_23FB2E7E0();
      v98 = sub_23F6B921C();
      if (sub_23F6B90E0(v98))
      {
        sub_23F693DF4();
        v119 = sub_23F6B90C8();
        *v23 = 136315138;
        sub_23F6B90D8();
        v118 = sub_23F69334C(v116._countAndFlagsBits, (unint64_t)object, &v119);
        sub_23FB2F680();
        swift_bridgeObjectRelease_n();
        sub_23F6B918C(&dword_23F68F000, v77, (os_log_type_t)v28, "[SiriEntityMatcherShim] SEM Cascade Entity with id %s is an AppIntentsEnum match, but we don't have enough info to construct TypedValue for it. Skipping");
        swift_arrayDestroy();
        sub_23F693DD0();
      }

      sub_23F6B6740();
      sub_23F6B91B0();
      v106 = v23;
LABEL_42:
      v105(v106, v115);
      v110 = v117;
      v76 = sub_23F6B6634();
      v73 = (uint64_t)v110;
      goto LABEL_43;
    case 0x4CD4:
      v30 = sub_23F6B9234((uint64_t)v29, sel_content);
      objc_opt_self();
      if (sub_23F6B91A4())
      {
        CCContactContent.getAsINPerson(contactId:)(v116);
        v31 = sub_23FB2ECE4();
        v32 = swift_allocBox();
        v34 = v33;
        sub_23FB2ECA8();

        (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v34, *MEMORY[0x24BEB9950], v31);
        *v117 = v32;
        v35 = sub_23F6B6634();
        sub_23F6B911C(v35);
        v36 = sub_23F6B9264();
        return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v36, v37, v38, v39);
      }

      sub_23FB2E390();
      sub_23F6B91E8();
      sub_23FB2E7E0();
      v101 = sub_23F6B921C();
      if (sub_23F6B9224(v101))
      {
        sub_23F693DF4();
        v119 = sub_23F6B90C8();
        *v28 = 136315138;
        sub_23F6B9198();
        v102 = sub_23F6B9138();
        sub_23F6B9100(v102);
        sub_23F6B91F0();
        sub_23F6B918C(&dword_23F68F000, v30, (os_log_type_t)v26, "[SiriEntityMatcherShim] cannot get person content from CCContactContent with id %s");
        sub_23F6B90F0();
        sub_23F693DD0();
      }

      sub_23F6B6740();
      sub_23F6B91B0();
      v106 = v28;
      goto LABEL_42;
    default:
      sub_23FB2E390();
      sub_23F6B91E8();
      v91 = v6;
      v92 = sub_23FB2E7E0();
      v93 = sub_23FB2F5E4();
      if (sub_23F6B9224(v93))
      {
        sub_23F693DF4();
        v119 = sub_23F6B90C8();
        *(_DWORD *)v14 = 136315394;
        sub_23F6B9198();
        v118 = sub_23F6B9138();
        sub_23FB2F680();
        sub_23F6B91F0();
        *((_WORD *)v14 + 6) = 512;
        v94 = (unsigned __int16)objc_msgSend(v91, sel_itemType);

        LOWORD(v118) = v94;
        sub_23FB2F680();

        _os_log_impl(&dword_23F68F000, v92, (os_log_type_t)v26, "[SiriEntityMatcherShim] SEM Cascade Entity with id %s has a item type %hu that cannot be converted to TypedValue. Skipping", (uint8_t *)v14, 0x10u);
        sub_23F6B90F0();
        sub_23F693DD0();
      }

      sub_23F6B6740();
      sub_23F6B91B0();
      v100 = v14;
LABEL_40:
      v99(v100, v115);
      v76 = sub_23F6B6634();
      v73 = (uint64_t)v117;
LABEL_43:
      v74 = 1;
      v75 = 1;
      return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v73, v74, v75, v76);
  }
  v72 = sub_23F6B6634();
  sub_23F6B911C(v72);
  v73 = sub_23F6B9264();
  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v73, v74, v75, v76);
}

INPerson __swiftcall CCContactContent.getAsINPerson(contactId:)(Swift::String contactId)
{
  void *v1;
  unint64_t object;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  INPerson result;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  _QWORD v62[4];
  void *v63;
  unint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t countAndFlagsBits;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  object = (unint64_t)contactId._object;
  countAndFlagsBits = contactId._countAndFlagsBits;
  sub_23F6916B8(&qword_256EA2840);
  sub_23F693E20();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v62 - v7;
  v9 = sub_23FB2C278();
  v65 = *(_QWORD *)(v9 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B51A4();
  v75 = v11;
  v13 = sub_23F6B90C0(v12, (SEL *)&selRef_namePrefix);
  v15 = v14;
  v16 = sub_23F6B90C0(v13, (SEL *)&selRef_givenName);
  v74 = v17;
  v18 = sub_23F6B90C0(v16, (SEL *)&selRef_middleName);
  v72 = v19;
  v73 = v18;
  v20 = sub_23F6B90C0(v18, (SEL *)&selRef_familyName);
  v70 = v21;
  v71 = v20;
  v22 = sub_23F6B90C0(v20, (SEL *)&selRef_nameSuffix);
  v68 = v23;
  v69 = v22;
  v24 = sub_23F6B90C0(v22, (SEL *)&selRef_nickname);
  v25 = sub_23F6B8B28(v24);
  v76 = v9;
  v64 = object;
  v66 = v6;
  if (v25)
  {
    v26 = sub_23F6B90C0(v25, (SEL *)&selRef_phoneticGivenName);
    v62[2] = v27;
    v62[3] = v26;
    v28 = sub_23F6B90C0(v26, (SEL *)&selRef_phoneticMiddleName);
    v62[0] = v29;
    v62[1] = v28;
    sub_23F6B90C0(v28, (SEL *)&selRef_phoneticFamilyName);
    object = v15;
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v6, 1, 1, v76);
    v9 = v76;
    sub_23FB2C224();
    v30 = 0;
  }
  else
  {
    v30 = 1;
  }
  sub_23F6B9258((uint64_t)v8, v30);
  sub_23FB2C224();
  v77 = MEMORY[0x24BEE4AF8];
  sub_23F6B8F98(v1, (SEL *)&selRef_phoneNumbers, (unint64_t *)&unk_256EA2860);
  if (v31)
  {
    v32 = v31;
    v63 = v1;
    if (v31 >> 62)
    {
      swift_bridgeObjectRetain();
      if (sub_23F6B9214())
      {
LABEL_7:
        if ((v32 & 0xC000000000000001) != 0)
          MEMORY[0x242674478](0, v32);
        else
          v34 = *(id *)(v32 + 32);
        sub_23F6B8BC0((SEL *)&selRef_stringValue, 2);
        sub_23F6B9250();
      }
    }
    else
    {
      v33 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v33)
        goto LABEL_7;
    }
    sub_23F6B6740();
    v9 = v76;
    v1 = v63;
  }
  sub_23F6B8F98(v1, (SEL *)&selRef_emailAddresses, &qword_256EA2858);
  if (v35)
  {
    v36 = v35;
    if (v35 >> 62)
    {
      sub_23F6B90D8();
      if (sub_23F6B9214())
      {
LABEL_16:
        if ((v36 & 0xC000000000000001) != 0)
          MEMORY[0x242674478](0, v36);
        else
          v38 = *(id *)(v36 + 32);
        sub_23F6B8BC0((SEL *)&selRef_email, 1);
        sub_23F6B9250();
      }
    }
    else
    {
      v37 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
      sub_23F6B90D8();
      if (v37)
        goto LABEL_16;
    }
    sub_23F6B6740();
    v9 = v76;
  }
  v39 = v77;
  if ((unint64_t)v77 >> 62)
  {
    if (v77 < 0)
      v54 = v77;
    else
      v54 = v77 & 0xFFFFFFFFFFFFFF8;
    sub_23F6B90D8();
    sub_23F6B9214();
    sub_23F6B91D0();
    if (!v54)
    {
LABEL_24:
      v40 = objc_allocWithZone(MEMORY[0x24BDD9F38]);
      sub_23F6B8D60(0, 0, 0);
      sub_23F6B9250();
    }
  }
  else if (!*(_QWORD *)((v77 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_24;
  }
  if ((v39 & 0xC000000000000001) != 0)
  {
    v41 = (id)MEMORY[0x242674478](0, v39);
  }
  else
  {
    if (!*(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_45;
    }
    v41 = *(id *)(v39 + 32);
  }
  v1 = v41;
  object = (unint64_t)v39 >> 62;
  if (!((unint64_t)v39 >> 62))
  {
    v42 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10);
    if ((unint64_t)v42 > 1)
    {
      sub_23F6B90D8();
LABEL_31:
      if ((v39 & 0xC000000000000001) != 0)
      {
        sub_23F6B9088(0, &qword_256EA2848);
        v43 = 1;
        do
        {
          v44 = v43 + 1;
          sub_23FB2F7DC();
          v43 = v44;
        }
        while (v42 != v44);
      }
      if (object)
      {
        sub_23F6B90D8();
        v45 = sub_23FB2F980();
        v46 = v49;
        v47 = v50;
        v48 = v51;
        sub_23F6B6740();
      }
      else
      {
        v45 = v39 & 0xFFFFFFFFFFFFFF8;
        v46 = (v39 & 0xFFFFFFFFFFFFFF8) + 32;
        v47 = 1;
        v48 = (2 * v42) | 1;
      }
      v52 = v64;
      v53 = sub_23F6B8C7C(v45, v46, v47, v48, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_23F6BB298);
      goto LABEL_53;
    }
LABEL_52:
    v53 = 0;
    v52 = v64;
LABEL_53:
    v59 = v65;
    v58 = (uint64_t)v66;
    v60 = v75;
    (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v66, v75, v9);
    sub_23F6B9258(v58, 0);
    objc_allocWithZone(MEMORY[0x24BDD9F30]);
    swift_bridgeObjectRetain();
    v61 = sub_23F6B8DC0(v1, v58, 0, 0, 0, countAndFlagsBits, v52, 0, 0, v53, 0);
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v60, v9);
    swift_bridgeObjectRelease();
    return (INPerson)v61;
  }
LABEL_45:
  if (v39 < 0)
    v42 = v39;
  else
    v42 = v39 & 0xFFFFFFFFFFFFFF8;
  sub_23F6B90D8();
  sub_23F6B9214();
  sub_23F6B91D0();
  if (v42 < 2)
    goto LABEL_52;
  sub_23F6B91E8();
  sub_23F6B9278();
  sub_23F6B91D0();
  sub_23F6B90D8();
  v55 = sub_23F6B9278();
  result.super.isa = (Class)swift_bridgeObjectRelease();
  if (v55 >= 1)
  {
    sub_23F6B90D8();
    v57 = sub_23F6B9278();
    swift_bridgeObjectRelease();
    if (v57 >= v42)
      goto LABEL_31;
    __break(1u);
    goto LABEL_52;
  }
  __break(1u);
  return result;
}

BOOL sub_23F6B8B28(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = sub_23F6B90C0(a1, (SEL *)&selRef_phoneticGivenName);
  if (v3)
  {
    sub_23F6B9180();
    sub_23F6B9280();
    if (v4)
      return 1;
  }
  v5 = sub_23F6B90C0(v2, (SEL *)&selRef_phoneticMiddleName);
  if (v6)
  {
    sub_23F6B9180();
    sub_23F6B9280();
    if (v7)
      return 1;
  }
  v8 = sub_23F6B90C0(v5, (SEL *)&selRef_phoneticFamilyName);
  if (!v9)
    return 0;
  v10 = v8;
  sub_23F6B9180();
  v11 = HIBYTE(v1) & 0xF;
  if ((v1 & 0x2000000000000000) == 0)
    v11 = v10 & 0xFFFFFFFFFFFFLL;
  return v11 != 0;
}

void sub_23F6B8BC0(SEL *a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  sub_23F6B90C0((uint64_t)a1, (SEL *)&selRef_label);
  if (v5)
  {
    v6 = (void *)sub_23FB2F134();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = sub_23F6B902C(v2, a1);
  v9 = v8;
  v10 = objc_allocWithZone(MEMORY[0x24BDD9F38]);
  sub_23F6BAFD0(v7, v9, a2, v6);
}

uint64_t sub_23F6B8C58(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_23F6B8C7C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_23F6BB420);
}

uint64_t sub_23F6B8C64(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_23F6B8C7C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_23F6BB530);
}

uint64_t sub_23F6B8C70(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_23F6B8C7C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_23F6BB54C);
}

uint64_t sub_23F6B8C7C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, unint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((a4 & 1) == 0)
    goto LABEL_2;
  sub_23FB2FBA8();
  swift_unknownObjectRetain_n();
  v11 = swift_dynamicCastClass();
  if (!v11)
  {
    sub_23F6B68E0();
    v11 = MEMORY[0x24BEE4AF8];
  }
  v12 = *(_QWORD *)(v11 + 16);
  swift_release();
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v12 != (a4 >> 1) - a3)
  {
LABEL_11:
    swift_unknownObjectRelease();
LABEL_2:
    v10 = a5(a1, a2, a3, a4);
    goto LABEL_9;
  }
  v10 = swift_dynamicCastClass();
  if (!v10)
  {
    sub_23F6B68E0();
    v10 = MEMORY[0x24BEE4AF8];
  }
LABEL_9:
  sub_23F6B68E0();
  return v10;
}

void sub_23F6B8D60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v5;

  if (a2)
  {
    v5 = (void *)sub_23FB2F134();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  objc_msgSend(v3, sel_initWithValue_type_, v5, a3);

  sub_23F694C84();
}

id sub_23F6B8DC0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  id v24;

  v16 = sub_23FB2C278();
  v17 = 0;
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2, 1, v16) != 1)
  {
    v17 = (void *)sub_23FB2C248();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a2, v16);
  }
  if (a4)
  {
    v18 = (void *)sub_23FB2F134();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = 0;
  }
  if (a7)
  {
    v19 = (void *)sub_23FB2F134();
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = 0;
  }
  if (a9)
  {
    v20 = (void *)sub_23FB2F134();
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = 0;
  }
  if (a10)
  {
    sub_23F6B9088(0, &qword_256EA2848);
    v21 = (void *)sub_23FB2F3B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = 0;
  }
  v22 = objc_msgSend(v24, sel_initWithPersonHandle_nameComponents_displayName_image_contactIdentifier_customIdentifier_aliases_suggestionType_, a1, v17, v18, a5, v19, v20, v21, a11);

  return v22;
}

unint64_t sub_23F6B8F74(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

void sub_23F6B8F98(void *a1, SEL *a2, unint64_t *a3)
{
  id v4;
  void *v5;

  v4 = objc_msgSend(a1, *a2);
  if (v4)
  {
    v5 = v4;
    sub_23F6B9088(0, a3);
    sub_23FB2F3BC();

  }
  sub_23F694C84();
}

uint64_t sub_23F6B9000()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F6B902C(void *a1, SEL *a2)
{
  id v2;
  void *v3;
  uint64_t v4;

  v2 = objc_msgSend(a1, *a2);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = sub_23FB2F140();

  return v4;
}

uint64_t sub_23F6B9088(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_23F6B90C0(uint64_t a1, SEL *a2)
{
  void *v2;

  return sub_23F6B902C(v2, a2);
}

uint64_t sub_23F6B90C8()
{
  return swift_slowAlloc();
}

uint64_t sub_23F6B90D8()
{
  return swift_bridgeObjectRetain();
}

BOOL sub_23F6B90E0(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23F6B90F0()
{
  return swift_arrayDestroy();
}

uint64_t sub_23F6B9100(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  return sub_23FB2F680();
}

uint64_t sub_23F6B911C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 104))(v2, v1, a1);
}

uint64_t sub_23F6B9138()
{
  unint64_t v0;
  uint64_t v1;

  return sub_23F69334C(*(_QWORD *)(v1 - 120), v0, (uint64_t *)(v1 - 88));
}

uint64_t sub_23F6B9148()
{
  return sub_23FB2F410();
}

uint64_t sub_23F6B9158(uint64_t a1)
{
  uint64_t v1;

  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v1, 1, 1, a1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F6B9180()
{
  return swift_bridgeObjectRelease();
}

void sub_23F6B918C(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t sub_23F6B9198()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F6B91A4()
{
  return swift_dynamicCastObjCClass();
}

uint64_t sub_23F6B91BC(uint64_t a1)
{
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v1, 1, 1, a1);
}

uint64_t sub_23F6B91D0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F6B91DC()
{
  return swift_allocObject();
}

uint64_t sub_23F6B91E8()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_23F6B91F0()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23F6B91FC()
{
  return sub_23FB2EE88();
}

uint64_t sub_23F6B9204()
{
  return sub_23FB2EC18();
}

uint64_t sub_23F6B9214()
{
  return sub_23FB2F974();
}

uint64_t sub_23F6B921C()
{
  return sub_23FB2F5F0();
}

BOOL sub_23F6B9224(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

id sub_23F6B9234(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

void sub_23F6B9250()
{
  JUMPOUT(0x242674028);
}

uint64_t sub_23F6B9258(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, a2, 1, v2);
}

uint64_t sub_23F6B9264()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6B9278()
{
  return sub_23FB2F974();
}

uint64_t sub_23F6B9294()
{
  return sub_23FB2F44C();
}

uint64_t CNContact.toHandles.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  id v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  id v39;
  id v40;
  unint64_t v41;
  uint64_t v42;
  void *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;

  v4 = v0;
  v5 = MEMORY[0x24BEE4AF8];
  v46 = MEMORY[0x24BEE4AF8];
  v6 = objc_msgSend(v0, sel_phoneNumbers);
  v7 = sub_23F6916B8((uint64_t *)&unk_256EA2870);
  v8 = sub_23FB2F3BC();

  if (v8 >> 62)
  {
    sub_23F6BC498();
    v9 = sub_23F6BC504();
    sub_23F6B5908();
    if (v9)
      goto LABEL_3;
LABEL_14:
    sub_23F6B5908();
    v28 = MEMORY[0x24BEE4AF8];
    goto LABEL_15;
  }
  v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v9)
    goto LABEL_14;
LABEL_3:
  v44 = v5;
  result = sub_23FB2F878();
  if (v9 < 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  v42 = v7;
  v43 = v4;
  v11 = 0;
  do
  {
    if ((v8 & 0xC000000000000001) != 0)
      v12 = (id)MEMORY[0x242674478](v11, v8);
    else
      v12 = sub_23F6BC528(v8 + 8 * v11);
    v1 = v12;
    if (objc_msgSend(v12, sel_label, v42, v43))
    {
      sub_23F6BC3E0();
      sub_23F6BC3D4();
      v14 = sub_23F6BC3F4(v13, sel_value);
      v15 = objc_msgSend(v14, sel_stringValue);

      v16 = sub_23FB2F140();
      v18 = v17;

      v19 = (void *)sub_23FB2F134();
      swift_bridgeObjectRelease();
      v20 = objc_allocWithZone(MEMORY[0x24BDD9F38]);
      sub_23F6BAFD0(v16, v18, 2, v19);
    }
    else
    {
      v22 = sub_23F6BC3F4(0, sel_value);
      v23 = objc_msgSend(v22, sel_stringValue);

      v24 = sub_23FB2F140();
      v26 = v25;

      v27 = objc_allocWithZone(MEMORY[0x24BDD9F38]);
      sub_23F6B8D60(v24, v26, 2);
    }
    v2 = v21;

    ++v11;
    sub_23FB2F854();
    sub_23FB2F884();
    sub_23FB2F890();
    sub_23FB2F860();
  }
  while (v9 != v11);
  v28 = v44;
  sub_23F6B5908();
  v5 = MEMORY[0x24BEE4AF8];
  v4 = v43;
LABEL_15:
  sub_23F6B9798(v28);
  v29 = objc_msgSend(v4, sel_emailAddresses);
  v30 = sub_23FB2F3BC();

  if (!(v30 >> 62))
  {
    v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v31)
      goto LABEL_17;
LABEL_28:
    sub_23F693E04();
    v41 = MEMORY[0x24BEE4AF8];
LABEL_29:
    sub_23F6B9798(v41);
    return v46;
  }
  sub_23F6B5508();
  v31 = sub_23F6BC504();
  sub_23F693E04();
  if (!v31)
    goto LABEL_28;
LABEL_17:
  v45 = v5;
  result = sub_23FB2F878();
  if ((v31 & 0x8000000000000000) == 0)
  {
    v32 = 0;
    do
    {
      if ((v30 & 0xC000000000000001) != 0)
        v33 = (id)MEMORY[0x242674478](v32, v30);
      else
        v33 = sub_23F6BC528(v30 + 8 * v32);
      v34 = v33;
      if (objc_msgSend(v33, sel_label))
      {
        sub_23F6BC3E0();
        sub_23F6BC51C();
        v35 = objc_msgSend(v34, sel_value);
        sub_23F6BC3E0();
        sub_23F6BC3D4();
        v36 = (void *)sub_23FB2F134();
        swift_bridgeObjectRelease();
        v37 = objc_allocWithZone(MEMORY[0x24BDD9F38]);
        sub_23F6BAFD0(v2, v3, 1, v36);
      }
      else
      {
        v39 = objc_msgSend(v34, sel_value);
        sub_23F6BC3E0();
        sub_23F6BC51C();
        v40 = objc_allocWithZone(MEMORY[0x24BDD9F38]);
        sub_23F6B8D60(v5, (uint64_t)v1, 1);
      }
      v5 = v38;

      ++v32;
      sub_23FB2F854();
      sub_23FB2F884();
      sub_23FB2F890();
      sub_23FB2F860();
    }
    while (v31 != v32);
    v41 = v45;
    sub_23F693E04();
    goto LABEL_29;
  }
LABEL_31:
  __break(1u);
  return result;
}

void sub_23F6B96FC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  sub_23F6BC478();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_23F6BC3E8() || v4 > *(_QWORD *)(v2 + 24) >> 1)
  {
    sub_23F753B48();
    v2 = v6;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_23F6BC464();
  if (v7 != v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_23F6BC4F4();
  sub_23F83AA3C();
  if (!v3)
  {
LABEL_11:
    sub_23F693E04();
    *v1 = v2;
    sub_23F6B5F7C();
    return;
  }
  sub_23F6BC48C();
  if (!v5)
  {
    *(_QWORD *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

uint64_t sub_23F6B9798(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_23FB2F974();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_23FB2F974();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
    goto LABEL_24;
  }
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_16;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x242674484](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_16:
    result = sub_23F6BB8B4(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1, (void (*)(uint64_t, _QWORD, uint64_t))sub_23F83AB74, (unint64_t *)&unk_256EA2960, &qword_256EA2958, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_23F6BBA2C);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_23FB2F974();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_20;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_20:
    swift_bridgeObjectRelease();
    return sub_23FB2F3EC();
  }
  __break(1u);
  return result;
}

void sub_23F6B996C()
{
  sub_23F6BA00C();
}

void sub_23F6B9988()
{
  sub_23F6B9D20();
}

uint64_t sub_23F6B99A4(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    sub_23F6B5508();
    v3 = sub_23FB2F974();
    sub_23F693E04();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    sub_23F6B5F1C();
    v5 = sub_23FB2F974();
    sub_23F6B5908();
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
    goto LABEL_24;
  }
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_16;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    sub_23F6B5F1C();
    v4 = MEMORY[0x242674484](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_16:
    result = sub_23F6BB8B4(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1, (void (*)(uint64_t, _QWORD, uint64_t))sub_23F83AC40, &qword_256EA2940, &qword_256EA2938, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_23F6BBA84);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    sub_23F6B5F1C();
    v9 = sub_23FB2F974();
    sub_23F6B5908();
  }
  if (v11 < 1)
    goto LABEL_20;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_20:
    swift_bridgeObjectRelease();
    return sub_23FB2F3EC();
  }
  __break(1u);
  return result;
}

uint64_t sub_23F6B9B5C(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = v2;
  v6 = sub_23FB2F218();
  v7 = *v3;
  v8 = *(_QWORD *)(*v3 + 16);
  v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v10 = v6;
  if (!swift_isUniquelyReferenced_nonNull_native() || (v11 = *(_QWORD *)(v7 + 24) >> 1, v11 < v9))
  {
    sub_23F6BC550();
    v7 = v12;
    v11 = *(_QWORD *)(v12 + 24) >> 1;
  }
  v13 = *(_QWORD *)(v7 + 16);
  v14 = v11 - v13;
  v15 = (uint64_t)sub_23F6BB7FC(&v27, (uint64_t *)(v7 + 16 * v13 + 32), v11 - v13, a1, a2);
  if (v15 < v10)
    goto LABEL_12;
  if (v15 >= 1)
  {
    v16 = *(_QWORD *)(v7 + 16);
    v17 = __OFADD__(v16, v15);
    v18 = v16 + v15;
    if (v17)
    {
      __break(1u);
      goto LABEL_22;
    }
    *(_QWORD *)(v7 + 16) = v18;
  }
  if (v15 == v14)
  {
LABEL_13:
    a1 = *(_QWORD *)(v7 + 16);
    v20 = sub_23FB2F278();
    if (!v21)
      goto LABEL_10;
    while (1)
    {
      v22 = *(_QWORD *)(v7 + 24) >> 1;
      if (v22 < a1 + 1)
      {
        v24 = v20;
        v25 = v21;
        sub_23F6BC550();
        v21 = v25;
        v7 = v26;
        v20 = v24;
        v22 = *(_QWORD *)(v7 + 24) >> 1;
      }
      if (a1 < v22)
        break;
LABEL_20:
      *(_QWORD *)(v7 + 16) = a1;
    }
    v23 = (_QWORD *)(v7 + 16 * a1 + 40);
    while (1)
    {
      *(v23 - 1) = v20;
      *v23 = v21;
      ++a1;
      v20 = sub_23FB2F278();
      if (!v21)
        break;
      v23 += 2;
      if (a1 >= v22)
        goto LABEL_20;
    }
LABEL_22:
    *(_QWORD *)(v7 + 16) = a1;
  }
LABEL_10:
  result = swift_bridgeObjectRelease();
  *v3 = v7;
  return result;
}

void sub_23F6B9CE8()
{
  sub_23F6BA00C();
}

void sub_23F6B9D04()
{
  sub_23F6B9D20();
}

void sub_23F6B9D20()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_23F6B50E8();
  v6 = *(_QWORD *)(v5 + 16);
  sub_23F6BC50C();
  if (v8)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v9 = v7;
  v10 = sub_23F6BC3E8();
  if (!(_DWORD)v10 || v4 > *(_QWORD *)(v2 + 24) >> 1)
  {
    if (v3 <= v4)
      v11 = v4;
    else
      v11 = v3;
    v2 = sub_23F6BC55C(v10, v11);
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v6)
      goto LABEL_14;
    goto LABEL_16;
  }
  if ((*(_QWORD *)(v2 + 24) >> 1) - *(_QWORD *)(v2 + 16) < v6)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v12 = sub_23F6916B8(v9);
  sub_23F6BC3FC(v12);
  if (!v6)
  {
LABEL_14:
    sub_23F693E04();
    *v1 = v2;
    sub_23F693DDC();
    return;
  }
  sub_23F6BC48C();
  if (!v8)
  {
    *(_QWORD *)(v2 + 16) = v13;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

void sub_23F6B9DD0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  sub_23F6BC478();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_23F6BC3E8() || v4 > *(_QWORD *)(v2 + 24) >> 1)
  {
    sub_23F6BC544();
    v2 = v6;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_23F6BC464();
  if (v7 != v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = (char *)sub_23F6BC4F4();
  sub_23F83B3C4(v8, v9, v10);
  if (!v3)
  {
LABEL_11:
    sub_23F693E04();
    *v1 = v2;
    sub_23F6B5F7C();
    return;
  }
  sub_23F6BC48C();
  if (!v5)
  {
    *(_QWORD *)(v2 + 16) = v11;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_23F6B9E64()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_23F6B50E8();
  v4 = v3 >> 1;
  v6 = (v3 >> 1) - v5;
  if (__OFSUB__(v3 >> 1, v5))
  {
    __break(1u);
    goto LABEL_15;
  }
  sub_23F6BC50C();
  if (v9)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v10 = v8;
  v11 = v7;
  if (!sub_23F6BC3E8() || (v12 = *(_QWORD *)(v1 + 24) >> 1, v12 < v2))
  {
    sub_23F6BC544();
    v1 = v13;
    v12 = *(_QWORD *)(v13 + 24) >> 1;
  }
  if (v4 == v10)
  {
    if (v6 <= 0)
    {
LABEL_13:
      swift_unknownObjectRelease();
      *v0 = v1;
      sub_23F693DDC();
      return;
    }
    __break(1u);
  }
  v14 = *(_QWORD *)(v1 + 16);
  if (v12 - v14 < v6)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_23F83B3C4((char *)(v11 + 2 * v10), v6, (char *)(v1 + 2 * v14 + 32));
  if (v6 <= 0)
    goto LABEL_13;
  sub_23F6BC48C();
  if (!v9)
  {
    *(_QWORD *)(v1 + 16) = v15;
    goto LABEL_13;
  }
LABEL_17:
  __break(1u);
}

void sub_23F6B9F34()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  sub_23F6BC478();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_23F6BC3E8() || v4 > *(_QWORD *)(v2 + 24) >> 1)
  {
    sub_23F7543F0();
    v2 = v6;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_23F6BC464();
  if (v7 != v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_23F6BC4F4();
  sub_23F83B458();
  if (!v3)
  {
LABEL_11:
    sub_23F693E04();
    *v1 = v2;
    sub_23F6B5F7C();
    return;
  }
  sub_23F6BC48C();
  if (!v5)
  {
    *(_QWORD *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_23F6B9FD4()
{
  sub_23F6BA00C();
}

void sub_23F6B9FF0()
{
  sub_23F6BA00C();
}

void sub_23F6BA00C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  char v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_23F6B50E8();
  v6 = *(_QWORD *)(v5 + 16);
  sub_23F6BC50C();
  if (v8)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v9 = v7;
  v10 = sub_23F6BC3E8();
  if (!(_DWORD)v10 || v4 > *(_QWORD *)(v2 + 24) >> 1)
  {
    if (v3 <= v4)
      v11 = v4;
    else
      v11 = v3;
    v2 = sub_23F6BC55C(v10, v11);
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v6)
      goto LABEL_14;
    goto LABEL_16;
  }
  v12 = (*(_QWORD *)(v2 + 24) >> 1) - *(_QWORD *)(v2 + 16);
  v13 = v9(0);
  if (v12 < v6)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_23F6BC3FC(v13);
  if (!v6)
  {
LABEL_14:
    sub_23F693E04();
    *v1 = v2;
    sub_23F693DDC();
    return;
  }
  sub_23F6BC48C();
  if (!v8)
  {
    *(_QWORD *)(v2 + 16) = v14;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

void CNContact.toNameComponents.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  id v48;

  sub_23F6B50E8();
  a19 = v22;
  a20 = v23;
  v24 = sub_23F6916B8(&qword_256EA2840);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&a9 - v28;
  v30 = sub_23FB2C278();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  sub_23F693EB0();
  sub_23FB2C26C();
  v32 = objc_msgSend(v20, sel_givenName);
  sub_23F6BC3E0();
  sub_23F6BC3D4();
  sub_23F6BC424();
  v33 = sub_23FB2C200();
  v34 = sub_23F6BC3F4(v33, sel_familyName);
  sub_23F6BC3E0();
  sub_23F6BC3D4();
  sub_23F6BC424();
  v35 = sub_23FB2C20C();
  v36 = sub_23F6BC3F4(v35, sel_nickname);
  sub_23F6BC3E0();
  sub_23F6BC3D4();
  sub_23F6BC424();
  v37 = sub_23FB2C260();
  v38 = sub_23F6BC3F4(v37, sel_namePrefix);
  sub_23F6BC3E0();
  sub_23F6BC3D4();
  sub_23F6BC424();
  v39 = sub_23FB2C230();
  v40 = sub_23F6BC3F4(v39, sel_nameSuffix);
  sub_23F6BC3E0();
  sub_23F6BC3D4();
  sub_23F6BC424();
  v41 = sub_23FB2C23C();
  v42 = sub_23F6BC3F4(v41, sel_middleName);
  sub_23F6BC3E0();
  sub_23F6BC3D4();
  sub_23F6BC424();
  sub_23FB2C218();
  v43 = sub_23FB2C26C();
  v44 = sub_23F6BC3F4(v43, sel_phoneticGivenName);
  sub_23F6BC3E0();
  sub_23F6BC3D4();
  v45 = sub_23FB2C200();
  v46 = sub_23F6BC3F4(v45, sel_phoneticFamilyName);
  sub_23F6BC3E0();
  sub_23F6BC3D4();
  v47 = sub_23FB2C20C();
  v48 = sub_23F6BC3F4(v47, sel_phoneticMiddleName);
  sub_23F6BC3E0();

  sub_23FB2C218();
  (*(void (**)(char *, void *, uint64_t))(v31 + 16))(v27, v21, v30);
  sub_23F6BC4AC((uint64_t)v27);
  sub_23FB2C224();
  sub_23F6BC4AC((uint64_t)v29);
  sub_23FB2C254();
  (*(void (**)(void *, uint64_t))(v31 + 8))(v21, v30);
  sub_23F693DDC();
}

id CNContact.toImage.getter()
{
  void *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v4;
  unint64_t v5;

  v1 = sub_23F6BB6F4(v0);
  if (v2 >> 60 == 15)
    return 0;
  v4 = v1;
  v5 = v2;
  sub_23F6BB754();
  return sub_23F6BA3AC(v4, v5);
}

id sub_23F6BA3AC(uint64_t a1, unint64_t a2)
{
  void *v4;
  id v5;

  v4 = (void *)sub_23FB2C398();
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_imageWithImageData_, v4);
  sub_23F6BC34C(a1, a2);

  return v5;
}

#error "23F6BA4AC: call analysis failed (funcsize=141)"

unint64_t static ContactHelper.fetchContactWithIdentifiers(identifiers:)(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void **v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void **v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t i;
  void *v51;
  id v52;
  unint64_t v53;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v66 = *MEMORY[0x24BDAC8D0];
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBACF8]), sel_init);
  v65 = MEMORY[0x24BEE4AF8];
  sub_23F6916B8(&qword_256EA2888);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_23FB4C9A0;
  v4 = (void *)*MEMORY[0x24BDBA2E0];
  v5 = (void *)*MEMORY[0x24BDBA318];
  v6 = (void **)MEMORY[0x24BDBA2C8];
  *(_QWORD *)(v3 + 32) = *MEMORY[0x24BDBA2E0];
  *(_QWORD *)(v3 + 40) = v5;
  v7 = *v6;
  v8 = (void *)*MEMORY[0x24BDBA310];
  *(_QWORD *)(v3 + 48) = *v6;
  *(_QWORD *)(v3 + 56) = v8;
  v9 = (void *)*MEMORY[0x24BDBA2C0];
  v10 = (void *)*MEMORY[0x24BDBA320];
  *(_QWORD *)(v3 + 64) = *MEMORY[0x24BDBA2C0];
  *(_QWORD *)(v3 + 72) = v10;
  v55 = v10;
  v11 = (void **)MEMORY[0x24BDBA368];
  v56 = (void *)*MEMORY[0x24BDBA328];
  v57 = (void *)*MEMORY[0x24BDBA360];
  *(_QWORD *)(v3 + 80) = *MEMORY[0x24BDBA328];
  *(_QWORD *)(v3 + 88) = v57;
  v58 = *v11;
  v59 = (void *)*MEMORY[0x24BDBA358];
  *(_QWORD *)(v3 + 96) = *v11;
  *(_QWORD *)(v3 + 104) = v59;
  v60 = (void *)*MEMORY[0x24BDBA348];
  v61 = (void *)*MEMORY[0x24BDBA288];
  *(_QWORD *)(v3 + 112) = *MEMORY[0x24BDBA348];
  *(_QWORD *)(v3 + 120) = v61;
  v62 = (void *)*MEMORY[0x24BDBA3C0];
  v63 = (void *)*MEMORY[0x24BDBA2F0];
  *(_QWORD *)(v3 + 128) = *MEMORY[0x24BDBA3C0];
  *(_QWORD *)(v3 + 136) = v63;
  v64 = v3;
  sub_23FB2F3EC();
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v13 = v4;
    v14 = v5;
    v15 = v7;
    v16 = v8;
    v17 = v9;
    v18 = v55;
    v19 = v56;
    v20 = v57;
    v21 = v58;
    v22 = v59;
    v23 = v60;
    v24 = v61;
    v25 = v62;
    v26 = v63;
    swift_bridgeObjectRetain();
    v27 = a1 + 40;
    do
    {
      sub_23F6B6254();
      v28 = (void *)sub_23FB2F134();
      sub_23F6B5AB0();
      sub_23F6916B8(&qword_256EA28F0);
      v29 = (void *)sub_23FB2F3B0();
      v64 = 0;
      v30 = objc_msgSend(v2, sel_unifiedContactWithIdentifier_keysToFetch_error_, v28, v29, &v64);

      if (v30)
      {
        v31 = (id)v64;
      }
      else
      {
        v32 = (id)v64;
        v33 = (void *)sub_23FB2C290();

        swift_willThrow();
      }
      MEMORY[0x242674028](v31);
      if (*(_QWORD *)(v65 + 16) >= *(_QWORD *)(v65 + 24) >> 1)
        sub_23F6BC568();
      v27 += 16;
      sub_23FB2F44C();
      sub_23FB2F3EC();
      --v12;
    }
    while (v12);
    sub_23F6B6090();
    swift_bridgeObjectRelease();
    v34 = v65;
  }
  else
  {
    v35 = v4;
    v36 = v5;
    v37 = v7;
    v38 = v8;
    v39 = v9;
    v40 = v55;
    v41 = v56;
    v42 = v57;
    v43 = v58;
    v44 = v59;
    v45 = v60;
    v46 = v61;
    v47 = v62;
    v48 = v63;
    sub_23F6B6090();
    v34 = MEMORY[0x24BEE4AF8];
  }
  v64 = MEMORY[0x24BEE4AF8];
  v49 = *(_QWORD *)(v34 + 16);
  if (v49)
  {
    swift_bridgeObjectRetain_n();
    for (i = 0; i != v49; ++i)
    {
      v51 = *(void **)(v34 + 8 * i + 32);
      if (v51)
      {
        v52 = v51;
        MEMORY[0x242674028]();
        if (*(_QWORD *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23F6BC568();
        sub_23FB2F44C();
        sub_23FB2F3EC();
      }
    }
    sub_23F6B5AB0();
    v53 = v64;
  }
  else
  {
    sub_23F6B6254();
    v53 = MEMORY[0x24BEE4AF8];
  }
  sub_23F6B5AB0();

  sub_23F6B5AB0();
  return v53;
}

_QWORD *static ContactHelper.getContactIdentifiers(matches:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;

  v1 = MEMORY[0x24BEE4B08];
  v10 = MEMORY[0x24BEE4B08];
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_23FB2DE8C();
    sub_23F6BC450();
    v5 = a1 + v4;
    v7 = *(_QWORD *)(v6 + 72);
    sub_23F6B5508();
    do
    {
      sub_23F6BAB5C((uint64_t)&v10);
      v5 += v7;
      --v2;
    }
    while (v2);
    sub_23F693E04();
    v1 = v10;
  }
  v8 = sub_23F6BB340(v1);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_23F6BAB5C(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void (*v35)(char *, unint64_t, uint64_t);
  uint64_t v36;
  char v38;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v47 = a1;
  v50 = sub_23FB2DBA4();
  v48 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v2 = (char *)&v42 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23FB2ECE4();
  v45 = *(_QWORD *)(v3 - 8);
  v46 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23FB2ECC0();
  v43 = *(_QWORD *)(v6 - 8);
  v44 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v42 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F6916B8(&qword_256EA2950);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23FB2ED38();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v42 - v16;
  sub_23FB2DE74();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11) == 1)
  {
    sub_23F6BC30C((uint64_t)v10);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
    if ((*(unsigned int (**)(char *, uint64_t))(v12 + 88))(v15, v11) == *MEMORY[0x24BEB9A00])
    {
      (*(void (**)(char *, uint64_t))(v12 + 96))(v15, v11);
      v18 = swift_projectBox();
      v20 = v45;
      v19 = v46;
      (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v5, v18, v46);
      if ((*(unsigned int (**)(char *, uint64_t))(v20 + 88))(v5, v19) == *MEMORY[0x24BEB9950])
      {
        (*(void (**)(char *, uint64_t))(v20 + 96))(v5, v19);
        v22 = v42;
        v21 = v43;
        v23 = v5;
        v24 = v44;
        (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v42, v23, v44);
        swift_release();
        v25 = (void *)sub_23FB2ECB4();
        v26 = sub_23F6BB790(v25);
        if (v27)
        {
          sub_23F7F0E60(&v49, v26, v27);
          swift_bridgeObjectRelease();
        }
        (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v24);
        (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
        (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v19);
        swift_release();
      }
    }
    else
    {
      v28 = *(void (**)(char *, uint64_t))(v12 + 8);
      v28(v17, v11);
      v28(v15, v11);
    }
  }
  v29 = v50;
  v30 = sub_23FB2DE80();
  v31 = *(_QWORD *)(v30 + 16);
  if (!v31)
    return swift_bridgeObjectRelease();
  v32 = (*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  v46 = v30;
  v33 = v30 + v32;
  v34 = *(_QWORD *)(v48 + 72);
  v35 = *(void (**)(char *, unint64_t, uint64_t))(v48 + 16);
  while (1)
  {
    v35(v2, v33, v29);
    if (sub_23FB2DB74() == 0x73746361746E6F43 && v36 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    v38 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v38 & 1) != 0)
      break;
    v29 = v50;
    (*(void (**)(char *, uint64_t))(v48 + 8))(v2, v50);
    v33 += v34;
    if (!--v31)
      return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v29 = v50;
LABEL_22:
  v40 = sub_23FB2DB8C();
  sub_23F7F0E60(&v49, v40, v41);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v2, v29);
}

void sub_23F6BAFD0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v4;
  void *v5;
  void *v8;

  v5 = v4;
  if (a2)
  {
    v8 = (void *)sub_23FB2F134();
    sub_23F6B6090();
  }
  else
  {
    v8 = 0;
  }
  objc_msgSend(v5, sel_initWithValue_type_label_, v8, a3, a4);

  sub_23F6B5F7C();
}

id sub_23F6BB040(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;
  void *v10;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;

  v10 = v9;
  v16 = sub_23FB2C278();
  v17 = 0;
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2, 1, v16) != 1)
  {
    v17 = (void *)sub_23FB2C248();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a2, v16);
  }
  if (a4)
  {
    v18 = (void *)sub_23FB2F134();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = 0;
  }
  if (!a7)
  {
    v19 = 0;
    if (a9)
      goto LABEL_8;
LABEL_10:
    v20 = 0;
    goto LABEL_11;
  }
  v19 = (void *)sub_23FB2F134();
  swift_bridgeObjectRelease();
  if (!a9)
    goto LABEL_10;
LABEL_8:
  v20 = (void *)sub_23FB2F134();
  swift_bridgeObjectRelease();
LABEL_11:
  v21 = objc_msgSend(v10, sel_initWithPersonHandle_nameComponents_displayName_image_contactIdentifier_customIdentifier_, a1, v17, v18, a5, v19, v20);

  return v21;
}

void sub_23F6BB1A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  size_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[5];

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    goto LABEL_9;
  sub_23F6916B8(&qword_256EA2930);
  v3 = *(_QWORD *)(*(_QWORD *)(sub_23F6916B8(&qword_256EA27D8) - 8) + 72);
  sub_23F6BC570();
  v6 = v5 & ~v4;
  v7 = (_QWORD *)swift_allocObject();
  v8 = j__malloc_size(v7);
  if (v3)
  {
    v9 = v8 - v6 == 0x8000000000000000 && v3 == -1;
    if (!v9)
    {
      v7[2] = v1;
      v7[3] = 2 * ((uint64_t)(v8 - v6) / v3);
      sub_23F6916B8(&qword_256EA27D8);
      sub_23F6BC570();
      sub_23F6BBBF4(v12, (uint64_t)v7 + (v11 & ~v10), v1, a1);
      sub_23F6BC530();
      swift_bridgeObjectRetain();
      sub_23F6BC4CC();
      if (!v9)
        __break(1u);
LABEL_9:
      sub_23F6BC434();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_23F6BB298(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  _QWORD *v8;
  size_t v9;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
  }
  else
  {
    if (!v5)
      goto LABEL_8;
    if (v5 > 0)
    {
      sub_23F6916B8(&qword_256EA2888);
      v8 = (_QWORD *)sub_23F6BC4BC();
      v9 = j__malloc_size(v8);
      v8[2] = v5;
      v8[3] = (2 * ((uint64_t)(v9 - 32) / 8)) | 1;
    }
    if (v4 != a3)
    {
      sub_23F83AB74(a2 + 8 * a3, v5);
LABEL_8:
      sub_23F6B5F7C();
      return;
    }
  }
  __break(1u);
}

_QWORD *sub_23F6BB340(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_23F6916B8(&qword_256EA2948);
  v3 = (_QWORD *)swift_allocObject();
  v4 = j__malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 16);
  v5 = sub_23F6BBEE8((uint64_t)&v7, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_23F6BC278();
  if (v5 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

void sub_23F6BB420(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  size_t v13;
  uint64_t v15;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v5)
  {
    if (v5 <= 0)
      goto LABEL_11;
    sub_23F6916B8(&qword_256EA2918);
    v8 = *(_QWORD *)(*(_QWORD *)(sub_23F6916B8(&qword_256EA2910) - 8) + 72);
    sub_23F6BC570();
    v11 = v10 & ~v9;
    v12 = (_QWORD *)swift_allocObject();
    v13 = j__malloc_size(v12);
    if (v8)
    {
      if (v13 - v11 != 0x8000000000000000 || v8 != -1)
      {
        v12[2] = v5;
        v12[3] = 2 * ((uint64_t)(v13 - v11) / v8);
LABEL_11:
        if (v4 != a3)
        {
          sub_23F6916B8(&qword_256EA2910);
          sub_23F6BC450();
          sub_23F83AC34(a2 + *(_QWORD *)(v15 + 72) * a3, v5);
          return;
        }
        goto LABEL_16;
      }
LABEL_15:
      __break(1u);
LABEL_16:
      __break(1u);
      return;
    }
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
}

void sub_23F6BB530()
{
  sub_23F6BB568();
}

void sub_23F6BB54C()
{
  sub_23F6BB568();
}

void sub_23F6BB568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t (*v3)(_QWORD);
  void (*v4)(uint64_t, uint64_t, char *);
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, char *);
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  uint64_t v20;

  sub_23F6B50E8();
  v6 = v5 >> 1;
  v7 = (v5 >> 1) - v1;
  if (__OFSUB__(v5 >> 1, v1))
  {
    __break(1u);
    goto LABEL_16;
  }
  if (!v7)
    goto LABEL_14;
  v8 = v4;
  v9 = v3;
  v10 = v1;
  v11 = v0;
  if (v7 > 0)
  {
    sub_23F6916B8(v2);
    v12 = *(_QWORD *)(*(_QWORD *)(v9(0) - 8) + 72);
    sub_23F6BC570();
    v15 = v14 & ~v13;
    v16 = (_QWORD *)swift_allocObject();
    v17 = j__malloc_size(v16);
    if (v12)
    {
      if (v17 - v15 != 0x8000000000000000 || v12 != -1)
      {
        v16[2] = v7;
        v16[3] = 2 * ((uint64_t)(v17 - v15) / v12);
        goto LABEL_12;
      }
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_12:
  if (v6 != v10)
  {
    v9(0);
    sub_23F6BC450();
    v8(v11 + *(_QWORD *)(v20 + 72) * v10, v7, (char *)v16 + v19);
LABEL_14:
    sub_23F693DDC();
    return;
  }
LABEL_18:
  __break(1u);
}

void sub_23F6BB660(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  char v5;
  _QWORD v6[5];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_23F6916B8(&qword_256EA2900);
    v3 = (_QWORD *)sub_23F6BC4BC();
    v4 = j__malloc_size(v3);
    v3[2] = v1;
    v3[3] = 2 * ((uint64_t)(v4 - 32) / 8);
    sub_23F6BC0E4(v6, v3 + 4, v1, a1);
    sub_23F6BC530();
    sub_23F6B6254();
    sub_23F6BC4CC();
    if (!v5)
      __break(1u);
  }
  sub_23F6BC434();
}

uint64_t sub_23F6BB6F4(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_imageData);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_23FB2C3B0();

  return v3;
}

unint64_t sub_23F6BB754()
{
  unint64_t result;

  result = qword_256EA2880;
  if (!qword_256EA2880)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256EA2880);
  }
  return result;
}

uint64_t sub_23F6BB790(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_contactIdentifier);

  if (!v2)
    return 0;
  v3 = sub_23FB2F140();

  return v3;
}

_QWORD *sub_23F6BB7FC(_QWORD *result, uint64_t *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v5 = result;
  v6 = HIBYTE(a5) & 0xF;
  v12 = a4;
  v13 = a5;
  if ((a5 & 0x2000000000000000) == 0)
    v6 = a4 & 0xFFFFFFFFFFFFLL;
  v14 = v6;
  if (!a2)
  {
    v7 = 0;
LABEL_14:
    *v5 = a4;
    v5[1] = a5;
    v5[2] = 0;
    v5[3] = v6;
    return (_QWORD *)v7;
  }
  v7 = a3;
  if (!a3)
    goto LABEL_14;
  if ((a3 & 0x8000000000000000) == 0)
  {
    v8 = a2;
    v9 = 0;
    while (1)
    {
      v10 = sub_23FB2F278();
      if (!v11)
        break;
      ++v9;
      *v8 = v10;
      v8[1] = v11;
      v8 += 2;
      if (v7 == v9)
      {
        a4 = v12;
        a5 = v13;
        goto LABEL_13;
      }
    }
    a4 = v12;
    a5 = v13;
    v7 = v9;
LABEL_13:
    v6 = v14;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_23F6BB8B4(uint64_t result, uint64_t a2, unint64_t a3, void (*a4)(uint64_t, _QWORD, uint64_t), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  uint64_t v19;
  void (*v20)(_BYTE *, _QWORD);
  id *v21;
  id v22;
  _BYTE v23[32];

  v13 = result;
  v14 = a3 >> 62;
  if (a3 >> 62)
  {
    sub_23F6B5508();
    v15 = sub_23F6BC504();
    result = sub_23F693E04();
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (v13)
  {
    if (v14)
    {
      sub_23F6B5508();
      v16 = sub_23FB2F974();
      result = sub_23F693E04();
      if (v16 <= a2)
      {
        if (v15 >= 1)
        {
          v17 = sub_23F6BC390(a5, a6);
          sub_23F6B5508();
          for (i = 0; i != v15; ++i)
          {
            v19 = sub_23F6916B8(a6);
            v20 = (void (*)(_BYTE *, _QWORD))a7(v23, i, a3, v19, v17);
            v22 = *v21;
            v20(v23, 0);
            *(_QWORD *)(v13 + 8 * i) = v22;
          }
          sub_23F693E04();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        a4((a3 & 0xFFFFFFFFFFFFFF8) + 32, *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10), v13);
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t (*sub_23F6BBA2C(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_23F6BBB04(v6, a2, a3);
  return sub_23F6BBA80;
}

uint64_t (*sub_23F6BBA84(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_23F6BBB88(v6, a2, a3);
  return sub_23F6BBA80;
}

void sub_23F6BBAD8(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_23F6BBB04(_QWORD *a1, uint64_t a2, uint64_t a3))(id *a1)
{
  unint64_t v6;
  id v7;

  v6 = a3 & 0xC000000000000001;
  sub_23F6B8F70(a2, (a3 & 0xC000000000000001) == 0);
  if (v6)
    v7 = (id)MEMORY[0x242674478](a2, a3);
  else
    v7 = *(id *)(a3 + 8 * a2 + 32);
  *a1 = v7;
  return destroy for FailedPayload;
}

void destroy for FailedPayload(id *a1)
{

}

ValueMetadata *type metadata accessor for ContactHelper()
{
  return &type metadata for ContactHelper;
}

void (*sub_23F6BBB88(_QWORD *a1, uint64_t a2, uint64_t a3))(id *)
{
  unint64_t v6;
  id v7;

  v6 = a3 & 0xC000000000000001;
  sub_23F6B8F70(a2, (a3 & 0xC000000000000001) == 0);
  if (v6)
    v7 = (id)MEMORY[0x242674478](a2, a3);
  else
    v7 = *(id *)(a3 + 8 * a2 + 32);
  *a1 = v7;
  return j__s30IntelligenceFlowPlannerSupport13FailedPayloadVwxx;
}

uint64_t sub_23F6BBBF4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  _QWORD *v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v8 = sub_23F6916B8(&qword_256EA27D8);
  v41 = *(_QWORD *)(v8 - 8);
  v42 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v34 - v13;
  v43 = a4;
  v17 = *(_QWORD *)(a4 + 64);
  v16 = a4 + 64;
  v15 = v17;
  v39 = v16;
  v18 = -1 << *(_BYTE *)(v16 - 32);
  if (-v18 < 64)
    v19 = ~(-1 << -(char)v18);
  else
    v19 = -1;
  v20 = v19 & v15;
  if (!a2)
  {
    v21 = 0;
    a3 = 0;
LABEL_39:
    v33 = v39;
    *a1 = v43;
    a1[1] = v33;
    a1[2] = ~v18;
    a1[3] = v21;
    a1[4] = v20;
    return a3;
  }
  if (!a3)
  {
    v21 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v36 = -1 << *(_BYTE *)(v16 - 32);
  v37 = a1;
  v21 = 0;
  v22 = 0;
  v38 = (unint64_t)(63 - v18) >> 6;
  v35 = v38 - 1;
  v40 = a3;
  if (!v20)
    goto LABEL_9;
LABEL_8:
  v23 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  v24 = v23 | (v21 << 6);
  while (1)
  {
    ++v22;
    v28 = *(_QWORD *)(v43 + 56);
    v29 = (uint64_t *)(*(_QWORD *)(v43 + 48) + 16 * v24);
    v30 = *v29;
    v31 = v29[1];
    v32 = type metadata accessor for AST.FlatValue(0);
    sub_23F6BC280(v28 + *(_QWORD *)(*(_QWORD *)(v32 - 8) + 72) * v24, (uint64_t)v11 + *(int *)(v42 + 48));
    *v11 = v30;
    v11[1] = v31;
    sub_23F6BC2C4((uint64_t)v11, (uint64_t)v14);
    sub_23F6BC2C4((uint64_t)v14, a2);
    a3 = v40;
    if (v22 == v40)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    a2 += *(_QWORD *)(v41 + 72);
    result = swift_bridgeObjectRetain();
    if (v20)
      goto LABEL_8;
LABEL_9:
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v25 >= v38)
      goto LABEL_33;
    v26 = *(_QWORD *)(v39 + 8 * v25);
    if (!v26)
    {
      v21 += 2;
      if (v25 + 1 >= v38)
      {
        v20 = 0;
        v21 = v25;
      }
      else
      {
        v26 = *(_QWORD *)(v39 + 8 * v21);
        if (v26)
          goto LABEL_14;
        v27 = v25 + 2;
        if (v25 + 2 >= v38)
          goto LABEL_33;
        v26 = *(_QWORD *)(v39 + 8 * v27);
        if (v26)
        {
LABEL_17:
          v25 = v27;
          goto LABEL_18;
        }
        v21 = v25 + 3;
        if (v25 + 3 < v38)
        {
          v26 = *(_QWORD *)(v39 + 8 * v21);
          if (v26)
          {
LABEL_14:
            v25 = v21;
            goto LABEL_18;
          }
          v27 = v25 + 4;
          if (v25 + 4 >= v38)
          {
LABEL_33:
            v20 = 0;
            goto LABEL_37;
          }
          v26 = *(_QWORD *)(v39 + 8 * v27);
          if (!v26)
          {
            while (1)
            {
              v25 = v27 + 1;
              if (__OFADD__(v27, 1))
                goto LABEL_42;
              if (v25 >= v38)
              {
                v20 = 0;
                v21 = v35;
                goto LABEL_37;
              }
              v26 = *(_QWORD *)(v39 + 8 * v25);
              ++v27;
              if (v26)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v20 = 0;
        v21 = v25 + 2;
      }
LABEL_37:
      a3 = v22;
LABEL_38:
      v18 = v36;
      a1 = v37;
      goto LABEL_39;
    }
LABEL_18:
    v20 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v25 << 6);
    v21 = v25;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_23F6BBEE8(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_23F6BC0E4(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 56;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_36:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_19:
    ++v9;
    *a2++ = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v12);
    if (v9 == a3)
      goto LABEL_36;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v13 >= v10)
    goto LABEL_31;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_18;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_14:
    v13 = v8;
LABEL_18:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_19;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_31;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_17:
    v13 = v15;
    goto LABEL_18;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_14;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_31:
    v7 = 0;
LABEL_35:
    a3 = v9;
    goto LABEL_36;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_17;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_35;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_23F6BC278()
{
  return swift_release();
}

uint64_t sub_23F6BC280(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AST.FlatValue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F6BC2C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F6916B8(&qword_256EA27D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F6BC30C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F6916B8(&qword_256EA2950);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F6BC34C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_23F6BC390(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_23F6AE310(a2);
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE12E0], v4);
    atomic_store(result, a1);
  }
  return result;
}

void sub_23F6BC3D4()
{
  void *v0;

}

uint64_t sub_23F6BC3E0()
{
  return sub_23FB2F140();
}

uint64_t sub_23F6BC3E8()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

id sub_23F6BC3F4(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_23F6BC3FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(unint64_t, uint64_t, unint64_t);
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v6 = *(_QWORD *)(a1 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return v4(v1 + v7, v3, v2 + v7 + *(_QWORD *)(v6 + 72) * v5);
}

uint64_t sub_23F6BC424()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6BC498()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F6BC4AC(uint64_t a1)
{
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v1);
}

uint64_t sub_23F6BC4BC()
{
  return swift_allocObject();
}

uint64_t sub_23F6BC4CC()
{
  return sub_23F6BC278();
}

uint64_t sub_23F6BC4F4()
{
  uint64_t v0;

  return v0 + 32;
}

uint64_t sub_23F6BC504()
{
  return sub_23FB2F974();
}

void sub_23F6BC51C()
{
  void *v0;

}

id sub_23F6BC528@<X0>(uint64_t a1@<X8>)
{
  return *(id *)(a1 + 32);
}

void sub_23F6BC544()
{
  sub_23F754344();
}

void sub_23F6BC550()
{
  sub_23F7540F4();
}

uint64_t sub_23F6BC55C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, 1, v2);
}

uint64_t sub_23F6BC568()
{
  return sub_23FB2F410();
}

uint64_t sub_23F6BC57C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, _QWORD, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  _QWORD v30[4];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD v42[4];

  v35 = a1;
  v36 = a2;
  v2 = sub_23FB2E7F8();
  v30[2] = *(_QWORD *)(v2 - 8);
  v30[3] = v2;
  MEMORY[0x24BDAC7A8](v2);
  v30[1] = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F6916B8(&qword_256EA2978);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_23FB2C524();
  v32 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v34 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23FB2C41C();
  v38 = *(_QWORD *)(v7 - 8);
  v39 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_23FB2C404();
  v10 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23FB2C3EC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23FB2C3F8();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_23FB2C428();
  v31 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v22 = (char *)v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x24BDCE368], v17);
  v23 = v13;
  v24 = v9;
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x24BDCE348], v23);
  v25 = *(void (**)(char *, _QWORD, uint64_t))(v10 + 104);
  v27 = v40;
  v26 = (uint64_t)v41;
  v25(v12, *MEMORY[0x24BDCE388], v37);
  (*(void (**)(char *, _QWORD, uint64_t))(v38 + 104))(v24, *MEMORY[0x24BDCE3D0], v39);
  sub_23FB2C518();
  result = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v26, 1, v27);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v34, v26, v27);
    sub_23FB2C410();
    sub_23F6BD0CC();
    v29 = v33;
    sub_23FB2C458();
    sub_23F6ADC98(v36, v36[3]);
    sub_23FB2FCBC();
    sub_23F6BD10C((uint64_t)v42, v42[3]);
    sub_23FB2FB90();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v22, v29);
    swift_bridgeObjectRelease();
    return _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v42);
  }
  return result;
}

uint64_t sub_23F6BCA8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v22;

  v22 = sub_23FB2C0B0();
  v4 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6BD134();
  v7 = v6 - v5;
  v8 = sub_23FB2C098();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6BD134();
  v12 = v11 - v10;
  v13 = sub_23FB2C0C8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6BD134();
  v17 = v16 - v15;
  v18 = sub_23FB2C0EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v17, a1, v13);
  swift_retain();
  sub_23FB2C0D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12, a2, v8);
  sub_23FB2C0A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v7, a3, v22);
  sub_23FB2C0BC();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a3, v22);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a2, v8);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, v13);
  return v18;
}

uint64_t sub_23F6BCC10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t result;
  uint64_t v12;

  v0 = sub_23FB2C0B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23FB2C098();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23FB2C0C8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (uint64_t *)((char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23FB2C104();
  *v10 = sub_23F6BC57C;
  v10[1] = 0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BDCB350], v7);
  sub_23FB2C08C();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BDCB2F0], v0);
  result = sub_23F6BCA8C((uint64_t)v10, (uint64_t)v6, (uint64_t)v3);
  qword_256F5C710 = result;
  return result;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Encodable.ifps_jsonString()()
{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  Swift::String result;

  v2 = v0;
  v3 = sub_23FB2F170();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6BD134();
  v6 = v5 - v4;
  sub_23FB2C104();
  sub_23F6BD144();
  sub_23FB2C0F8();
  sub_23FB2C0E0();
  swift_release();
  if (!v1)
  {
    sub_23FB2F164();
    v7 = sub_23FB2F158();
    if (v8)
    {
      v6 = v7;
      v2 = v8;
    }
    else
    {
      sub_23F6BD090();
      swift_allocError();
      *(_QWORD *)v11 = 0xD00000000000007FLL;
      *(_QWORD *)(v11 + 8) = 0x800000023FB30F10;
      *(_OWORD *)(v11 + 16) = xmmword_23FB4C9F0;
      *(_QWORD *)(v11 + 32) = 0x800000023FB30F90;
      swift_willThrow();
    }
    sub_23F6BD168();
  }
  v9 = v6;
  v10 = v2;
  result._object = v10;
  result._countAndFlagsBits = v9;
  return result;
}

Swift::String __swiftcall Encodable.ifps_jsonPrettyPrinted()()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  Swift::String result;

  v0 = sub_23FB2F170();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F6BD134();
  if (qword_256EA0958 != -1)
    swift_once();
  sub_23FB2C0E0();
  sub_23FB2F164();
  v1 = sub_23FB2F158();
  if (v2)
  {
    v3 = v1;
    v4 = v2;
    sub_23F6BD15C();
  }
  else
  {
    sub_23F6BD15C();
    v3 = 0;
    v4 = 0xE000000000000000;
  }
  v5 = v3;
  v6 = (void *)v4;
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

uint64_t Encodable.ifps_recode<A>()()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t result;

  sub_23FB2C104();
  sub_23F6BD144();
  sub_23FB2C0F8();
  v1 = sub_23FB2C0E0();
  v3 = v2;
  result = sub_23F6BD150();
  if (!v0)
  {
    sub_23FB2C074();
    sub_23F6BD144();
    sub_23FB2C068();
    sub_23FB2C05C();
    sub_23F6BD150();
    return sub_23F6BC34C(v1, v3);
  }
  return result;
}

unint64_t sub_23F6BD090()
{
  unint64_t result;

  result = qword_256EA2970;
  if (!qword_256EA2970)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for UnwrappedNilError, &type metadata for UnwrappedNilError);
    atomic_store(result, (unint64_t *)&qword_256EA2970);
  }
  return result;
}

unint64_t sub_23F6BD0CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256EA2980;
  if (!qword_256EA2980)
  {
    v1 = sub_23FB2C428();
    result = MEMORY[0x242674E5C](MEMORY[0x24BDCE430], v1);
    atomic_store(result, (unint64_t *)&qword_256EA2980);
  }
  return result;
}

uint64_t sub_23F6BD10C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_23F6BD144()
{
  return swift_allocObject();
}

uint64_t sub_23F6BD150()
{
  return swift_release();
}

uint64_t sub_23F6BD15C()
{
  unint64_t v0;
  uint64_t v1;

  return sub_23F6BC34C(v1, v0);
}

uint64_t sub_23F6BD168()
{
  unint64_t v0;
  uint64_t v1;

  return sub_23F6BC34C(v1, v0);
}

uint64_t sub_23F6BD174(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _BYTE v7[24];
  uint64_t v8;

  sub_23F6ADC98(a1, a1[3]);
  sub_23FB2FCBC();
  type metadata accessor for TranscriptProtoTranscript(0);
  sub_23F6BD790(&qword_256EA29A0, (uint64_t)&protocol conformance descriptor for TranscriptProtoTranscript);
  v2 = sub_23FB2D8EC();
  if (!v1)
  {
    v4 = v2;
    v5 = v3;
    sub_23F6BD10C((uint64_t)v7, v8);
    sub_23F6BD354();
    sub_23FB2FB9C();
    sub_23F6BC34C(v4, v5);
  }
  return _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v7);
}

uint64_t CodableProtoMessage.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _BYTE v7[24];
  uint64_t v8;

  sub_23F6ADC98(a1, a1[3]);
  sub_23FB2FCBC();
  v2 = sub_23FB2D8EC();
  if (!v1)
  {
    v4 = v2;
    v5 = v3;
    sub_23F6BD10C((uint64_t)v7, v8);
    sub_23F6BD354();
    sub_23FB2FB9C();
    sub_23F6BC34C(v4, v5);
  }
  return _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v7);
}

unint64_t sub_23F6BD354()
{
  unint64_t result;

  result = qword_256EA2990;
  if (!qword_256EA2990)
  {
    result = MEMORY[0x242674E5C](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_256EA2990);
  }
  return result;
}

uint64_t sub_23F6BD390@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _OWORD v10[2];
  uint64_t v11;
  _QWORD v12[4];

  v5 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v5);
  v6 = type metadata accessor for TranscriptProtoTranscript(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6ADC98(a1, a1[3]);
  sub_23FB2FCA4();
  if (!v2)
  {
    sub_23F6ADC98(v12, v12[3]);
    sub_23F6BD6EC();
    sub_23FB2FB84();
    v11 = 0;
    memset(v10, 0, sizeof(v10));
    sub_23FB2D760();
    sub_23F6BD790(&qword_256EA29A0, (uint64_t)&protocol conformance descriptor for TranscriptProtoTranscript);
    sub_23FB2D8E0();
    sub_23F6BD7F8((uint64_t)v8, a2);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v12);
  }
  return _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)a1);
}

uint64_t CodableProtoMessage.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  _QWORD v21[7];

  v21[6] = a3;
  v17 = a4;
  v7 = sub_23FB2D76C();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v9 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6ADC98(a1, a1[3]);
  sub_23FB2FCA4();
  if (!v4)
  {
    v15 = v9;
    v16 = v11;
    sub_23F6ADC98(v21, v21[3]);
    sub_23F6BD6EC();
    sub_23FB2FB84();
    v20 = 0;
    v18 = 0u;
    v19 = 0u;
    sub_23FB2D760();
    v12 = v16;
    sub_23FB2D8E0();
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v17, v12, a2);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v21);
  }
  return _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)a1);
}

unint64_t sub_23F6BD6EC()
{
  unint64_t result;

  result = qword_256EA2998;
  if (!qword_256EA2998)
  {
    result = MEMORY[0x242674E5C](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_256EA2998);
  }
  return result;
}

uint64_t sub_23F6BD72C(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23F6BD790(&qword_256EA29A0, (uint64_t)&protocol conformance descriptor for TranscriptProtoTranscript);
  a1[2] = sub_23F6BD790(&qword_256EA29A8, (uint64_t)&protocol conformance descriptor for TranscriptProtoTranscript);
  result = sub_23F6BD790(&qword_256EA29B0, (uint64_t)&protocol conformance descriptor for TranscriptProtoTranscript);
  a1[3] = result;
  return result;
}

uint64_t sub_23F6BD790(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for TranscriptProtoTranscript(255);
    result = MEMORY[0x242674E5C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23F6BD7D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F6BD390(a1, a2);
}

uint64_t sub_23F6BD7E4(_QWORD *a1)
{
  return sub_23F6BD174(a1);
}

uint64_t sub_23F6BD7F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptProtoTranscript(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t Collection.at(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char v7;
  void (*v8)(_BYTE *, _QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[32];

  v2 = sub_23F6BDE58();
  v3 = *(_QWORD *)(v2 - 8);
  sub_23F6BDE64();
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v16[-v5];
  sub_23FB2F560();
  swift_getAssociatedConformanceWitness();
  sub_23F6BDE58();
  swift_getAssociatedConformanceWitness();
  v7 = sub_23FB2F35C();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v6, v2);
  if ((v7 & 1) != 0)
  {
    v8 = (void (*)(_BYTE *, _QWORD))sub_23FB2F5C0();
    v10 = v9;
    v11 = sub_23F6BDE50();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, v10, v11);
    v8(v16, 0);
    v12 = a1;
    v13 = 0;
    v14 = v11;
  }
  else
  {
    v14 = sub_23F6BDE50();
    v12 = a1;
    v13 = 1;
  }
  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v12, v13, 1, v14);
}

uint64_t Collection.intersperse(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v29 = a1;
  v27 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F6BDE50();
  v30 = *(_QWORD *)(v8 - 8);
  v31 = v8;
  sub_23F6BDE64();
  MEMORY[0x24BDAC7A8](v9);
  v28 = (char *)&v27 - v10;
  v11 = sub_23F6BDE50();
  v12 = sub_23FB2F65C();
  v13 = *(_QWORD *)(v12 - 8);
  sub_23F6BDE64();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v27 - v15;
  v17 = *(_QWORD *)(v11 - 8);
  sub_23F6BDE64();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v27 - v19;
  sub_23FB2F59C();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, v11) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    return sub_23FB2F428();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v16, v11);
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v7, v3, a2);
    v22 = v28;
    sub_23FB2F5A8();
    sub_23F6BDDC8(v11, v11);
    swift_allocObject();
    v23 = sub_23FB2F3F8();
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 16))(v24, v20, v11);
    v25 = sub_23FB2F488();
    v32 = v23;
    MEMORY[0x24BDAC7A8](v25);
    *(&v27 - 4) = a2;
    *(&v27 - 3) = a3;
    *(&v27 - 2) = v29;
    v26 = v31;
    swift_getAssociatedConformanceWitness();
    sub_23FB2F338();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v22, v26);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v11);
    return v33;
  }
}

uint64_t sub_23F6BDCE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t);
  _QWORD v11[2];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v7 = (char *)v11 - v6;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v9((char *)v11 - v6, a3, AssociatedTypeWitness);
  sub_23FB2F488();
  sub_23FB2F458();
  v9(v7, a2, AssociatedTypeWitness);
  return sub_23FB2F458();
}

uint64_t sub_23F6BDDC8(uint64_t a1, uint64_t a2)
{
  if (sub_23F6BDE24(a2))
    return sub_23F6916B8(&qword_256EA2888);
  else
    return sub_23FB2FB54();
}

uint64_t sub_23F6BDE08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23F6BDCE4(a1, a2, *(_QWORD *)(v2 + 32));
}

uint64_t sub_23F6BDE24(uint64_t a1)
{
  if (swift_isClassType())
    return a1;
  else
    return 0;
}

uint64_t sub_23F6BDE50()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_23F6BDE58()
{
  return swift_getAssociatedTypeWitness();
}

void sub_23F6BDE70(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23F6BDEDC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23F6BDFC8 + 4 * byte_23FB4CA8C[a2]))(0x61636F5669726973);
}

void sub_23F6BDFC8(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x61636F5669726973 && v1 == 0xEE007972616C7562)
    sub_23F6D3CA8();
  else
    sub_23F6B5280();
  sub_23F693DFC();
  sub_23F693E04();
  sub_23F694C84();
}

uint64_t sub_23F6BE0D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return _s16IntelligenceFlow3ASTO0aB14PlannerSupportE7BuiltinO14NoMatchingToolV2eeoiySbAH_AHtFZ_0();
  else
    return sub_23FB2FB78();
}

BOOL sub_23F6BE0E8(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

void sub_23F6BE0F4(unsigned __int8 a1, char a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;

  v2 = 0xEC00000073656C70;
  v3 = 0x6D6178655F736F70;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x6D6178655F67656ELL;
    else
      v5 = 0x7470697263736564;
    if (v4 == 1)
      v6 = 0xEC00000073656C70;
    else
      v6 = 0xEB000000006E6F69;
  }
  else
  {
    v5 = 0x6D6178655F736F70;
    v6 = 0xEC00000073656C70;
  }
  if (a2)
  {
    v3 = a2 == 1 ? 0x6D6178655F67656ELL : 0x7470697263736564;
    if (a2 != 1)
      v2 = 0xEB000000006E6F69;
  }
  if (v5 == v3 && v6 == v2)
    sub_23F6D3CA8();
  else
    sub_23F6B5280();
  sub_23F693DFC();
  sub_23F693E04();
  sub_23F694C84();
}

uint64_t sub_23F6BE1F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = SessionEventPayloadType.rawValue.getter();
  v2 = v1;
  if (v0 == SessionEventPayloadType.rawValue.getter() && v2 == v3)
    sub_23F6D3C9C();
  else
    LOBYTE(v0) = sub_23F6B5280();
  sub_23F693E04();
  sub_23F693DFC();
  return v0 & 1;
}

void sub_23F6BE27C(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000011;
  else
    v3 = 0x4149445F4C4C5546;
  if (v2)
    v4 = 0xEB00000000474F4CLL;
  else
    v4 = 0x800000023FB30960;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000011;
  else
    v5 = 0x4149445F4C4C5546;
  if ((a2 & 1) != 0)
    v6 = 0x800000023FB30960;
  else
    v6 = 0xEB00000000474F4CLL;
  if (v3 == v5 && v4 == v6)
    sub_23F6D3C9C();
  else
    sub_23F6B5280();
  sub_23F693E04();
  sub_23F693DFC();
  sub_23F694C84();
}

void sub_23F6BE310(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x305F305F31763174;
  else
    v3 = 0xD000000000000010;
  if (v2)
    v4 = 0x800000023FB30980;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x305F305F31763174;
  else
    v5 = 0xD000000000000010;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0x800000023FB30980;
  if (v3 == v5 && v4 == v6)
    sub_23F6D3C9C();
  else
    sub_23F6B5280();
  sub_23F693E04();
  sub_23F693DFC();
  sub_23F694C84();
}

void sub_23F6BE39C(char a1, char a2)
{
  unint64_t v2;
  unint64_t v3;
  const char *v4;
  const char *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;

  v2 = 0xD000000000000011;
  v3 = 0x800000023FB30510;
  v4 = "response_generation_overrides";
  v5 = "response_generation_catalog";
  if (a1)
  {
    v6 = sub_23F6D3E6C();
    if (v12)
      v9 = v7;
    else
      v9 = v8;
  }
  else
  {
    v6 = 0xD000000000000011;
    v9 = 0x800000023FB30510;
  }
  if (a2)
  {
    v10 = (unint64_t)(v4 - 32) | 0x8000000000000000;
    v11 = (unint64_t)(v5 - 32) | 0x8000000000000000;
    if (a2 == 1)
      v2 += 12;
    else
      v2 += 10;
    if (a2 == 1)
      v3 = v10;
    else
      v3 = v11;
  }
  v12 = v6 == v2 && v9 == v3;
  if (v12)
    sub_23F6D3CA8();
  else
    sub_23F6B5280();
  sub_23F693DFC();
  sub_23F693E04();
  sub_23F694C84();
}

void sub_23F6BE468(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23F6BE4CC(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23F6BE51C + 4 * byte_23FB4CA99[a2]))(a3 + 264);
}

void sub_23F6BE51C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if (a1 == a3 + 264 && v4 == v3)
    sub_23F6D3CA8();
  else
    sub_23F6B5280();
  sub_23F693DFC();
  sub_23F693E04();
  sub_23F694C84();
}

void sub_23F6BE588(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23F6BE5C0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23F6BE67C + 4 * byte_23FB4CAA8[a2]))(15649);
}

void sub_23F6BE67C(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 15649 && v1 == 0xE200000000000000)
    sub_23F6D3C9C();
  else
    sub_23F6B5280();
  sub_23F693E04();
  sub_23F693DFC();
  sub_23F694C84();
}

void sub_23F6BE74C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23F6BE7B8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23F6BE818 + 4 * byte_23FB4CAB6[a2]))(0x4E4F5F4543494F56);
}

void sub_23F6BE818(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x4E4F5F4543494F56 && v1 == 0xEA0000000000594CLL)
    sub_23F6D3CA8();
  else
    sub_23F6B5280();
  sub_23F693DFC();
  sub_23F693E04();
  sub_23F694C84();
}

void sub_23F6BE894(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 1868852853;
  else
    v3 = 0x6D726F66726570;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 1868852853;
  else
    v5 = 0x6D726F66726570;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    sub_23F6D3C9C();
  else
    sub_23F6B5280();
  sub_23F693E04();
  sub_23F693DFC();
  sub_23F694C84();
}

void sub_23F6BE914(char a1, char a2)
{
  unint64_t v2;
  unint64_t v3;
  const char *v4;
  const char *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;

  v2 = 0xD000000000000014;
  v3 = 0x800000023FB305B0;
  v4 = "com.apple.if.planner.overrides";
  v5 = "com.apple.siri.understanding";
  if (a1)
  {
    v6 = sub_23F6D3E6C();
    if (v12)
      v9 = v7;
    else
      v9 = v8;
  }
  else
  {
    v6 = 0xD000000000000014;
    v9 = 0x800000023FB305B0;
  }
  if (a2)
  {
    v10 = (unint64_t)(v4 - 32) | 0x8000000000000000;
    v11 = (unint64_t)(v5 - 32) | 0x8000000000000000;
    if (a2 == 1)
      v2 += 10;
    else
      v2 += 8;
    if (a2 == 1)
      v3 = v10;
    else
      v3 = v11;
  }
  v12 = v6 == v2 && v9 == v3;
  if (v12)
    sub_23F6D3CA8();
  else
    sub_23F6B5280();
  sub_23F693DFC();
  sub_23F693E04();
  sub_23F694C84();
}

void sub_23F6BE9E0(char a1)
{
  __asm { BR              X16 }
}

uint64_t sub_23F6BEA64(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23F6BEAD8 + 4 * byte_23FB4CAC2[a2]))(a3 + 14);
}

void sub_23F6BEAD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if (a1 == a3 + 14 && v4 == ((v3 - 32) | 0x8000000000000000))
    sub_23F6D3C9C();
  else
    sub_23F6B5280();
  sub_23F693E04();
  sub_23F693DFC();
  sub_23F694C84();
}

uint64_t sub_23F6BEB64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);
  unint64_t v9;
  _QWORD *v10;
  char *v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  _QWORD *v38;
  char *v39;
  _QWORD *v40;
  char *v41;
  _QWORD *v42;
  char *v43;
  _QWORD *v44;
  char *v45;
  _QWORD *v46;
  char *v47;
  _QWORD *v48;
  char *v49;
  _QWORD *v50;
  char *v51;
  _QWORD *v52;
  char *v53;
  _QWORD *v54;
  char *v55;
  _QWORD *v56;
  char *v57;
  uint64_t v59;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EA29B8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EA29B8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v59 = swift_allocObject();
  *(_OWORD *)(v59 + 16) = xmmword_23FB4F180;
  v5 = v59 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v59 + v4) = 0;
  *(_QWORD *)v5 = "APP_IN_FOCUS_BUNDLE_ID";
  *(_QWORD *)(v5 + 8) = 22;
  *(_BYTE *)(v5 + 16) = 2;
  v6 = *MEMORY[0x24BE5C318];
  v7 = sub_23FB2D9DC();
  v8 = *(void (**)(void))(*(_QWORD *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  v9 = v59 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v59 + v4 + v3) = 1;
  *(_QWORD *)v9 = "BLUETOOTH_DEVICE_TYPE";
  *(_QWORD *)(v9 + 8) = 21;
  *(_BYTE *)(v9 + 16) = 2;
  v8();
  v10 = (_QWORD *)(v59 + v4 + 2 * v3);
  v11 = (char *)v10 + *(int *)(v1 + 48);
  *v10 = 2;
  *(_QWORD *)v11 = "CALENDAR_EVENTS";
  *((_QWORD *)v11 + 1) = 15;
  v11[16] = 2;
  v8();
  v12 = (_QWORD *)(v59 + v4 + 3 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "MOTION_STATE";
  *((_QWORD *)v13 + 1) = 12;
  v13[16] = 2;
  v8();
  v14 = (_QWORD *)(v59 + v4 + 4 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "NOW_PLAYING_PLAYBACK_STATE";
  *((_QWORD *)v15 + 1) = 26;
  v15[16] = 2;
  v8();
  v16 = (_QWORD *)(v59 + v4 + 5 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "POINT_OF_INTEREST";
  *((_QWORD *)v17 + 1) = 17;
  v17[16] = 2;
  v8();
  v18 = (_QWORD *)(v59 + v4 + 6 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "RECENT_TRANSCRIPT";
  *((_QWORD *)v19 + 1) = 17;
  v19[16] = 2;
  v8();
  v20 = (_QWORD *)(v59 + v4 + 7 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "SEMANTIC_LOCATION";
  *((_QWORD *)v21 + 1) = 17;
  v21[16] = 2;
  v8();
  v22 = (_QWORD *)(v59 + v4 + 8 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "ON_SCREEN_CONTENT_EMAIL_ADDRESS";
  *((_QWORD *)v23 + 1) = 31;
  v23[16] = 2;
  v8();
  v24 = (_QWORD *)(v59 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 9;
  *(_QWORD *)v25 = "ON_SCREEN_CONTENT_PHONE_NUMBER";
  *((_QWORD *)v25 + 1) = 30;
  v25[16] = 2;
  v8();
  v26 = (_QWORD *)(v59 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 10;
  *(_QWORD *)v27 = "ON_SCREEN_CONTENT_POSTAL_ADDRESS";
  *((_QWORD *)v27 + 1) = 32;
  v27[16] = 2;
  v8();
  v28 = (_QWORD *)(v59 + v4 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 11;
  *(_QWORD *)v29 = "ON_SCREEN_CONTENT_URI_LINK";
  *((_QWORD *)v29 + 1) = 26;
  v29[16] = 2;
  v8();
  v30 = (_QWORD *)(v59 + v4 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 12;
  *(_QWORD *)v31 = "ON_SCREEN_PERSON";
  *((_QWORD *)v31 + 1) = 16;
  v31[16] = 2;
  v8();
  v32 = (_QWORD *)(v59 + v4 + 13 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 13;
  *(_QWORD *)v33 = "ON_SCREEN_HOME";
  *((_QWORD *)v33 + 1) = 14;
  v33[16] = 2;
  v8();
  v34 = (_QWORD *)(v59 + v4 + 14 * v3);
  v35 = (char *)v34 + *(int *)(v1 + 48);
  *v34 = 14;
  *(_QWORD *)v35 = "ON_SCREEN_NOTIFICATION";
  *((_QWORD *)v35 + 1) = 22;
  v35[16] = 2;
  v8();
  v36 = (_QWORD *)(v59 + v4 + 15 * v3);
  v37 = (char *)v36 + *(int *)(v1 + 48);
  *v36 = 15;
  *(_QWORD *)v37 = "ON_SCREEN_DATE_TIME";
  *((_QWORD *)v37 + 1) = 19;
  v37[16] = 2;
  v8();
  v38 = (_QWORD *)(v59 + v4 + 16 * v3);
  v39 = (char *)v38 + *(int *)(v1 + 48);
  *v38 = 16;
  *(_QWORD *)v39 = "CONVERSATIONAL_REMINDER";
  *((_QWORD *)v39 + 1) = 23;
  v39[16] = 2;
  v8();
  v40 = (_QWORD *)(v59 + v4 + 17 * v3);
  v41 = (char *)v40 + *(int *)(v1 + 48);
  *v40 = 17;
  *(_QWORD *)v41 = "CONVERSATIONAL_CALENDAR_EVENT";
  *((_QWORD *)v41 + 1) = 29;
  v41[16] = 2;
  v8();
  v42 = (_QWORD *)(v59 + v4 + 18 * v3);
  v43 = (char *)v42 + *(int *)(v1 + 48);
  *v42 = 18;
  *(_QWORD *)v43 = "CONVERSATIONAL_PEOPLE";
  *((_QWORD *)v43 + 1) = 21;
  v43[16] = 2;
  v8();
  v44 = (_QWORD *)(v59 + v4 + 19 * v3);
  v45 = (char *)v44 + *(int *)(v1 + 48);
  *v44 = 19;
  *(_QWORD *)v45 = "CONVERSATIONAL_PLACES";
  *((_QWORD *)v45 + 1) = 21;
  v45[16] = 2;
  v8();
  v46 = (_QWORD *)(v59 + v4 + 20 * v3);
  v47 = (char *)v46 + *(int *)(v1 + 48);
  *v46 = 20;
  *(_QWORD *)v47 = "CONVERSATIONAL_ALARM";
  *((_QWORD *)v47 + 1) = 20;
  v47[16] = 2;
  v8();
  v48 = (_QWORD *)(v59 + v4 + 21 * v3);
  v49 = (char *)v48 + *(int *)(v1 + 48);
  *v48 = 21;
  *(_QWORD *)v49 = "CONVERSATIONAL_TIMER";
  *((_QWORD *)v49 + 1) = 20;
  v49[16] = 2;
  v8();
  v50 = (_QWORD *)(v59 + v4 + 22 * v3);
  v51 = (char *)v50 + *(int *)(v1 + 48);
  *v50 = 22;
  *(_QWORD *)v51 = "NOW_PLAYING_MEDIA_ITEM";
  *((_QWORD *)v51 + 1) = 22;
  v51[16] = 2;
  v8();
  v52 = (_QWORD *)(v59 + v4 + 23 * v3);
  v53 = (char *)v52 + *(int *)(v1 + 48);
  *v52 = 23;
  *(_QWORD *)v53 = "ON_SCREEN_CONTENT_APP_ENTITY";
  *((_QWORD *)v53 + 1) = 28;
  v53[16] = 2;
  v8();
  v54 = (_QWORD *)(v59 + v4 + 24 * v3);
  v55 = (char *)v54 + *(int *)(v1 + 48);
  *v54 = 24;
  *(_QWORD *)v55 = "SIRI_REQUEST_CONTEXT";
  *((_QWORD *)v55 + 1) = 20;
  v55[16] = 2;
  v8();
  v56 = (_QWORD *)(v59 + v4 + 25 * v3);
  v57 = (char *)v56 + *(int *)(v1 + 48);
  *v56 = 25;
  *(_QWORD *)v57 = "CURRENT_LOCATION";
  *((_QWORD *)v57 + 1) = 16;
  v57[16] = 2;
  v8();
  return sub_23FB2D9E8();
}

uint64_t static ContextProtoContextType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F6BF3D8(&qword_256EA0960, (uint64_t)qword_256EA29B8, a1);
}

uint64_t sub_23F6BF1A4(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_23F6BF1CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EA29D0);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EA29D0);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F190;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "Unknown";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "Unsure1";
  *(_QWORD *)(v11 + 8) = 7;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "UnsureN";
  *((_QWORD *)v13 + 1) = 7;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "Known";
  *((_QWORD *)v15 + 1) = 5;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "Confident";
  *((_QWORD *)v17 + 1) = 9;
  v17[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static ContextProtoStructuredContextSiriRequestContextUserClassification._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F6BF3D8(&qword_256EA0968, (uint64_t)qword_256EA29D0, a1);
}

uint64_t sub_23F6BF3D8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_23FB2DA00();
  v6 = sub_23F6BF1A4(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_23F6BF450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EA29E8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EA29E8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "LOW";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "MEDIUM";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "HIGH";
  *((_QWORD *)v13 + 1) = 4;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static ContextProtoConfidenceBucket._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F6BF3D8(&qword_256EA0970, (uint64_t)qword_256EA29E8, a1);
}

uint64_t sub_23F6BF600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EA2A00);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EA2A00);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "unset";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "prePlanner";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "fullPlanner";
  *((_QWORD *)v13 + 1) = 11;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static ContextProtoQueryDecorationCaller._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F6BF3D8(&qword_256EA0978, (uint64_t)qword_256EA2A00, a1);
}

uint64_t sub_23F6BF7B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EA2A18);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EA2A18);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "unknown";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "siriEntityMatcher";
  *((_QWORD *)v11 + 1) = 17;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "globalEntityMatcher";
  *((_QWORD *)v13 + 1) = 19;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static ContextProtoEntityMatcherType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F6BF3D8(&qword_256EA0980, (uint64_t)qword_256EA2A18, a1);
}

uint64_t sub_23F6BF960()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EA2A30);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EA2A30);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1B0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "homeEntity";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "synonym";
  *(_QWORD *)(v11 + 8) = 7;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "transliteration";
  *((_QWORD *)v13 + 1) = 15;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "expandedEmoji";
  *((_QWORD *)v15 + 1) = 13;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "contactRelationship";
  *((_QWORD *)v17 + 1) = 19;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "contactHypocorism";
  *((_QWORD *)v19 + 1) = 17;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "contactHandle";
  *((_QWORD *)v21 + 1) = 13;
  v21[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static ContextProtoAliasTypesOptions._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F6BF3D8(&qword_256EA0988, (uint64_t)qword_256EA2A30, a1);
}

unint64_t static ContextProtoRetrievedContext.protoMessageName.getter()
{
  return sub_23F6D3738(24);
}

uint64_t sub_23F6BFBFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EA2A48);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EA2A48);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1B0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "value";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "relevance";
  *(_QWORD *)(v11 + 8) = 9;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "type";
  *((_QWORD *)v13 + 1) = 4;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "metadata";
  *((_QWORD *)v15 + 1) = 8;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "typedValue";
  *((_QWORD *)v17 + 1) = 10;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "structuredContext";
  *((_QWORD *)v19 + 1) = 17;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "identifier";
  *((_QWORD *)v21 + 1) = 10;
  v21[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static ContextProtoRetrievedContext._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F6BF3D8(&qword_256EA0990, (uint64_t)qword_256EA2A48, a1);
}

void ContextProtoRetrievedContext.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          sub_23F6D3A2C();
          break;
        case 2:
          sub_23F6D38E0();
          sub_23F6CA0A4();
          break;
        case 3:
          sub_23F6D3598();
          sub_23F6BFFA0();
          break;
        case 4:
          sub_23F6D38E0();
          sub_23F6C1938();
          break;
        case 5:
          sub_23F6C1974();
          break;
        case 6:
          sub_23F6D3598();
          sub_23F6C0004();
          break;
        case 7:
          v3 = sub_23F6D38E0();
          sub_23F6C1A10(v3, v4, v5, v6, v7);
          break;
        default:
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

uint64_t sub_23F6BFFA0()
{
  sub_23F6D1D94();
  return sub_23FB2D7FC();
}

uint64_t sub_23F6C0004()
{
  type metadata accessor for ContextProtoRetrievedContext(0);
  type metadata accessor for ContextProtoStructuredContext(0);
  sub_23F6D3458(&qword_256EA2FC0, type metadata accessor for ContextProtoStructuredContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContext);
  return sub_23FB2D8B0();
}

void ContextProtoRetrievedContext.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_23F6D3E4C();
  if (!v4)
  {
    sub_23F6D3664();
    sub_23F6C01C4(v8);
    if (*v3)
    {
      sub_23F6D1D94();
      sub_23F6D39A8();
    }
    sub_23F6D3664();
    sub_23F6C0334(v9);
    sub_23F6D3664();
    sub_23F6C04A4(v10, v11, v12, v13);
    sub_23F6D3664();
    sub_23F6C0618(v14);
    sub_23F6C1E90((uint64_t)v3, a1, a2, a3, type metadata accessor for ContextProtoRetrievedContext);
    sub_23F6D3EC4();
    sub_23F6D37BC();
  }
  sub_23F6D3C00();
}

void sub_23F6C01C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA2CF8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ContextProtoConfidence(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ContextProtoRetrievedContext(0);
  sub_23F6D3530(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_256EA2CF8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA2CF8);
  }
  else
  {
    sub_23F6D34D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for ContextProtoConfidence);
    sub_23F6D3458(&qword_256EA2FA8, type metadata accessor for ContextProtoConfidence, (uint64_t)&protocol conformance descriptor for ContextProtoConfidence);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for ContextProtoConfidence);
  }
}

void sub_23F6C0334(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA2CE8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ContextProtoContextMetadata(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ContextProtoRetrievedContext(0);
  sub_23F6D3530(a1 + *(int *)(v8 + 28), (uint64_t)v4, &qword_256EA2CE8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA2CE8);
  }
  else
  {
    sub_23F6D34D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for ContextProtoContextMetadata);
    sub_23F6D3458(&qword_256EA2F68, type metadata accessor for ContextProtoContextMetadata, (uint64_t)&protocol conformance descriptor for ContextProtoContextMetadata);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for ContextProtoContextMetadata);
  }
}

void sub_23F6C04A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v13[2];

  v13[1] = a4;
  v5 = sub_23F6916B8(&qword_256EA2610);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23FB2EB1C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ContextProtoRetrievedContext(0);
  sub_23F6D3530(a1 + *(int *)(v12 + 32), (uint64_t)v7, &qword_256EA2610);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v7, &qword_256EA2610);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    sub_23F6D3458(&qword_256EA3248, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95B0], MEMORY[0x24BEB95A0]);
    sub_23FB2D9D0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

void sub_23F6C0618(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA2CD8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ContextProtoStructuredContext(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ContextProtoRetrievedContext(0);
  sub_23F6D3530(a1 + *(int *)(v8 + 36), (uint64_t)v4, &qword_256EA2CD8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA2CD8);
  }
  else
  {
    sub_23F6D34D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for ContextProtoStructuredContext);
    sub_23F6D3458(&qword_256EA2FC0, type metadata accessor for ContextProtoStructuredContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContext);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for ContextProtoStructuredContext);
  }
}

void static ContextProtoRetrievedContext.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 *v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  void (*v74)(uint64_t, uint64_t);
  int *v75;
  unsigned __int8 *v76;
  uint64_t v77;
  unsigned __int8 *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  char *v90;
  int *v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  char v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(uint64_t, uint64_t);
  uint64_t v117;
  unsigned __int8 *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  char v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  BOOL v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  int *v163;
  char *v164;
  uint64_t v165;
  unsigned __int8 *v166;
  unsigned __int8 *v167;
  uint64_t v168;
  uint64_t v169;

  sub_23F6B50E8();
  v3 = v2;
  v5 = v4;
  v139 = sub_23F6B53A4();
  v137 = *(_QWORD *)(v139 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F693E0C();
  v136 = v7;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B6580();
  v135 = v9;
  v10 = sub_23F6D398C();
  v144 = type metadata accessor for ContextProtoStructuredContext(v10);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B51A4();
  v138 = v12;
  v141 = sub_23F6916B8(&qword_256EA2CD0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B51A4();
  v145 = v14;
  sub_23F6916B8(&qword_256EA2CD8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F693E0C();
  v140 = v16;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6D3D14();
  v142 = v18;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F6B6580();
  v143 = v20;
  v21 = sub_23F6D398C();
  v152 = type metadata accessor for ContextProtoContextMetadata(v21);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6B51A4();
  v146 = v23;
  v151 = sub_23F6916B8(&qword_256EA2CE0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6B5560(v25, v135);
  sub_23F6916B8(&qword_256EA2CE8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F693E0C();
  v150 = v27;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F6D3D14();
  v165 = v29;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v30);
  v155 = (uint64_t)&v135 - v31;
  v161 = type metadata accessor for ContextProtoConfidence(0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F6B51A4();
  v154 = v33;
  v159 = sub_23F6916B8(&qword_256EA2CF0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F6B51A4();
  v162 = v35;
  sub_23F6916B8(&qword_256EA2CF8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F693E0C();
  v157 = v37;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F6D3D14();
  v169 = v39;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v40);
  v160 = (uint64_t)&v135 - v41;
  v42 = sub_23F6D3D08();
  v168 = *(_QWORD *)(v42 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v43);
  sub_23F6B51A4();
  v158 = v44;
  v45 = sub_23F6916B8(&qword_256EA2618);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v46);
  sub_23F693E0C();
  v153 = v47;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v48);
  v50 = (char *)&v135 - v49;
  sub_23F6916B8(&qword_256EA2610);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v51);
  sub_23F693E0C();
  v147 = v52;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v53);
  v164 = (char *)&v135 - v54;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v55);
  sub_23F6D3D14();
  v149 = v56;
  sub_23F6B5664();
  v58 = MEMORY[0x24BDAC7A8](v57);
  v60 = (char *)&v135 - v59;
  MEMORY[0x24BDAC7A8](v58);
  sub_23F6D3F74();
  MEMORY[0x24BDAC7A8](v61);
  sub_23F6B5F5C();
  v62 = type metadata accessor for ContextProtoRetrievedContext(0);
  v63 = *(int *)(v62 + 20);
  v167 = v5;
  sub_23F6D3740((uint64_t)&v5[v63], v1);
  v163 = (int *)v62;
  v64 = *(int *)(v62 + 20);
  v65 = v42;
  v166 = v3;
  sub_23F6D3740((uint64_t)&v3[v64], v0);
  v148 = v45;
  v66 = (uint64_t)&v50[*(int *)(v45 + 48)];
  sub_23F6D3740(v1, (uint64_t)v50);
  sub_23F6D3740(v0, v66);
  sub_23F6B5164((uint64_t)v50, 1, v42);
  if (v68)
  {
    sub_23F6B6EF8(v0);
    sub_23F6B6EF8(v1);
    v67 = sub_23F6B5164(v66, 1, v42);
    if (v68)
    {
      sub_23F6B6034(v67, &qword_256EA2610);
      goto LABEL_11;
    }
LABEL_9:
    v69 = &qword_256EA2618;
    v70 = (uint64_t)v50;
LABEL_20:
    sub_23F6B4F84(v70, v69);
    goto LABEL_21;
  }
  sub_23F6D3530((uint64_t)v50, (uint64_t)v60, &qword_256EA2610);
  sub_23F6B5164(v66, 1, v42);
  if (v68)
  {
    sub_23F6B6EF8(v0);
    sub_23F6B6EF8(v1);
    (*(void (**)(char *, uint64_t))(v168 + 8))(v60, v42);
    goto LABEL_9;
  }
  v71 = v168;
  v72 = v158;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v168 + 32))(v158, v66, v65);
  sub_23F6D3458(&qword_256EA2620, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95B0], MEMORY[0x24BEB95C8]);
  v73 = sub_23FB2F11C();
  v74 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
  v74(v72, v65);
  sub_23F6B6884(v0);
  sub_23F6B6884(v1);
  v74((uint64_t)v60, v65);
  sub_23F6B6884((uint64_t)v50);
  if ((v73 & 1) == 0)
    goto LABEL_21;
LABEL_11:
  v75 = v163;
  v76 = v167;
  v77 = v160;
  sub_23F6D3740((uint64_t)&v167[v163[6]], v160);
  v78 = v166;
  v79 = v169;
  sub_23F6D3740((uint64_t)&v166[v75[6]], v169);
  v80 = v162;
  v81 = v162 + *(int *)(v159 + 48);
  sub_23F6D3740(v77, v162);
  sub_23F6D3740(v79, v81);
  v82 = sub_23F6D3CB4();
  v83 = v161;
  sub_23F6B5164(v82, v84, v161);
  if (v68)
  {
    sub_23F6B6EF8(v79);
    sub_23F6B6EF8(v77);
    v85 = sub_23F6B5164(v81, 1, v83);
    v86 = (uint64_t)v164;
    v87 = v165;
    if (v68)
    {
      sub_23F6D378C(v85, &qword_256EA2CF8);
      goto LABEL_23;
    }
    goto LABEL_19;
  }
  v88 = v157;
  sub_23F6D3530(v80, v157, &qword_256EA2CF8);
  sub_23F6B5164(v81, 1, v83);
  v87 = v165;
  if (v89)
  {
    sub_23F6B64F4(v169);
    sub_23F6B64F4(v77);
    sub_23F6D3508(v88, type metadata accessor for ContextProtoConfidence);
LABEL_19:
    v69 = &qword_256EA2CF0;
    v70 = v80;
    goto LABEL_20;
  }
  v90 = v164;
  v91 = v75;
  v92 = v77;
  v93 = v154;
  sub_23F6D34D0(v81, v154, type metadata accessor for ContextProtoConfidence);
  static ContextProtoConfidence.== infix(_:_:)();
  LODWORD(v161) = v94;
  sub_23F6D3928(v93);
  sub_23F6B62DC(v169);
  v95 = v92;
  v75 = v91;
  v86 = (uint64_t)v90;
  sub_23F6B62DC(v95);
  v76 = v167;
  sub_23F6D3508(v88, type metadata accessor for ContextProtoConfidence);
  sub_23F6B62DC(v80);
  if ((v161 & 1) == 0)
    goto LABEL_21;
LABEL_23:
  if (*v76 != *v78)
    goto LABEL_21;
  v169 = v65;
  v96 = v155;
  sub_23F6D3740((uint64_t)&v76[v75[7]], v155);
  sub_23F6D3740((uint64_t)&v78[v75[7]], v87);
  v97 = v156;
  v98 = v156 + *(int *)(v151 + 48);
  sub_23F6D3740(v96, v156);
  sub_23F6D3740(v87, v98);
  v99 = sub_23F6D3CB4();
  v100 = v152;
  sub_23F6B5164(v99, v101, v152);
  if (v68)
  {
    sub_23F6B6EF8(v87);
    sub_23F6B6EF8(v96);
    sub_23F6B5164(v98, 1, v100);
    v102 = v153;
    if (v68)
    {
      sub_23F6B4F84(v156, &qword_256EA2CE8);
      goto LABEL_34;
    }
    goto LABEL_32;
  }
  v103 = v150;
  sub_23F6D3530(v97, v150, &qword_256EA2CE8);
  sub_23F6B5164(v98, 1, v100);
  v102 = v153;
  if (v104)
  {
    sub_23F6B64F4(v165);
    sub_23F6B64F4(v155);
    sub_23F6D3508(v103, type metadata accessor for ContextProtoContextMetadata);
LABEL_32:
    v69 = &qword_256EA2CE0;
    v70 = v156;
    goto LABEL_20;
  }
  v105 = v146;
  sub_23F6D34D0(v98, v146, type metadata accessor for ContextProtoContextMetadata);
  static ContextProtoContextMetadata.== infix(_:_:)();
  v107 = v106;
  sub_23F6D38A0(v105);
  sub_23F6D3C1C(v165);
  sub_23F6D3C1C(v155);
  v86 = (uint64_t)v164;
  sub_23F6D3508(v103, type metadata accessor for ContextProtoContextMetadata);
  sub_23F6D3C1C(v97);
  if ((v107 & 1) == 0)
    goto LABEL_21;
LABEL_34:
  v108 = v149;
  sub_23F6D3740((uint64_t)&v76[v75[8]], v149);
  sub_23F6D3740((uint64_t)&v166[v75[8]], v86);
  v109 = v102 + *(int *)(v148 + 48);
  sub_23F6D3740(v108, v102);
  sub_23F6D3740(v86, v109);
  v110 = v169;
  sub_23F6B5164(v102, 1, v169);
  if (v68)
  {
    sub_23F6B6EF8(v86);
    sub_23F6B6EF8(v108);
    sub_23F6B5164(v109, 1, v110);
    if (v68)
    {
      sub_23F6B4F84(v102, &qword_256EA2610);
      goto LABEL_44;
    }
    goto LABEL_42;
  }
  sub_23F6D3530(v102, v147, &qword_256EA2610);
  sub_23F6B5164(v109, 1, v110);
  if (v111)
  {
    sub_23F6B64F4(v86);
    sub_23F6B64F4(v108);
    (*(void (**)(uint64_t, uint64_t))(v168 + 8))(v147, v110);
LABEL_42:
    v69 = &qword_256EA2618;
    v70 = v102;
    goto LABEL_20;
  }
  v112 = v168;
  v113 = v147;
  v114 = v158;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v168 + 32))(v158, v109, v110);
  sub_23F6D3458(&qword_256EA2620, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95B0], MEMORY[0x24BEB95C8]);
  sub_23F6D3B94();
  v115 = v86;
  LODWORD(v165) = sub_23FB2F11C();
  v116 = *(void (**)(uint64_t, uint64_t))(v112 + 8);
  v116(v114, v110);
  sub_23F6B6EF8(v115);
  sub_23F6B6EF8(v108);
  v116(v113, v110);
  sub_23F6B6EF8(v102);
  if ((v165 & 1) == 0)
    goto LABEL_21;
LABEL_44:
  v117 = v143;
  sub_23F6D36F4((uint64_t)&v76[v75[9]], v143);
  v118 = v166;
  v119 = v142;
  sub_23F6D36F4((uint64_t)&v166[v75[9]], v142);
  v120 = v145;
  v121 = v145 + *(int *)(v141 + 48);
  sub_23F6D36F4(v117, v145);
  sub_23F6D36F4(v119, v121);
  v122 = v144;
  sub_23F6B5164(v120, 1, v144);
  if (!v68)
  {
    v123 = v140;
    sub_23F6D3530(v120, v140, &qword_256EA2CD8);
    sub_23F6B5164(v121, 1, v122);
    if (!v124)
    {
      v125 = v138;
      sub_23F6D3B28(v121);
      static ContextProtoStructuredContext.== infix(_:_:)();
      v127 = v126;
      sub_23F6D38A0(v125);
      sub_23F6B6EF8(v119);
      sub_23F6B6EF8(v117);
      sub_23F6D38A0(v123);
      sub_23F6B6EF8(v120);
      if ((v127 & 1) == 0)
        goto LABEL_21;
      goto LABEL_54;
    }
    sub_23F6B64F4(v119);
    sub_23F6B64F4(v117);
    sub_23F6D3508(v123, type metadata accessor for ContextProtoStructuredContext);
    goto LABEL_52;
  }
  sub_23F6D3748(v119);
  sub_23F6D3748(v117);
  sub_23F6B5164(v121, 1, v122);
  if (!v68)
  {
LABEL_52:
    v69 = &qword_256EA2CD0;
    v70 = v120;
    goto LABEL_20;
  }
  sub_23F6B4F84(v120, &qword_256EA2CD8);
LABEL_54:
  v128 = v75[10];
  v129 = *(_QWORD *)&v118[v128 + 8];
  if (*(_QWORD *)&v76[v128 + 8])
  {
    if (v129)
    {
      sub_23F6D3998((uint64_t)&v76[v128]);
      v132 = v68 && v130 == v131;
      if (v132 || (sub_23F6B5280() & 1) != 0)
        goto LABEL_63;
    }
  }
  else if (!v129)
  {
LABEL_63:
    v133 = v135;
    sub_23F6D3818(v135, (uint64_t)&v76[v75[11]]);
    v134 = v136;
    sub_23F6D3818(v136, (uint64_t)&v118[v75[11]]);
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F6D37C8();
    sub_23F6D3874(v134);
    sub_23F6D3874(v133);
  }
LABEL_21:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t ContextProtoRetrievedContext.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for ContextProtoRetrievedContext, &qword_256EA2D00, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedContext);
}

unint64_t sub_23F6C141C()
{
  static ContextProtoRetrievedContext.protoMessageName.getter();
  return 0xD000000000000018;
}

uint64_t (*sub_23F6C1444())()
{
  return nullsub_1;
}

void sub_23F6C1458()
{
  ContextProtoRetrievedContext.decodeMessage<A>(decoder:)();
}

void sub_23F6C146C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  ContextProtoRetrievedContext.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_23F6C1484()
{
  sub_23F6D3458(&qword_256EA3230, type metadata accessor for ContextProtoRetrievedContext, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedContext);
  return sub_23FB2D784();
}

uint64_t sub_23F6C14DC()
{
  sub_23F6D3458(&qword_256EA2DB0, type metadata accessor for ContextProtoRetrievedContext, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedContext);
  return sub_23FB2D8F8();
}

uint64_t sub_23F6C1520()
{
  sub_23F6D3458(&qword_256EA2DB0, type metadata accessor for ContextProtoRetrievedContext, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedContext);
  return sub_23FB2D904();
}

unint64_t static ContextProtoContextMetadata.protoMessageName.getter()
{
  return sub_23F6D3738(23);
}

uint64_t sub_23F6C1590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EA2A60);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EA2A60);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1B0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "entity_id";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "app_bundle_id";
  *(_QWORD *)(v11 + 8) = 13;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "saliency";
  *((_QWORD *)v13 + 1) = 8;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "on_screen_surrounding_text";
  *((_QWORD *)v15 + 1) = 26;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "on_screen_bounding_box";
  *((_QWORD *)v17 + 1) = 22;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "seq";
  *((_QWORD *)v19 + 1) = 3;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "group_id";
  *((_QWORD *)v21 + 1) = 8;
  v21[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static ContextProtoContextMetadata._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F6BF3D8(&qword_256EA0998, (uint64_t)qword_256EA2A60, a1);
}

void ContextProtoContextMetadata.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
        case 2:
          sub_23F6D37D4();
          break;
        case 3:
          sub_23F6D3AA4();
          sub_23F6C1938();
          break;
        case 4:
          sub_23F6D3598();
          sub_23F6C7398();
          break;
        case 5:
          sub_23F6D3AA4();
          sub_23F6C1974();
          break;
        case 6:
          sub_23F6D3598();
          sub_23F6C19B0();
          break;
        case 7:
          v3 = sub_23F6D3AA4();
          sub_23F6C1A10(v3, v4, v5, v6, v7);
          break;
        default:
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void sub_23F6C1938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  sub_23F6B5220();
  sub_23F6D3628(v0, v1, v2, v3, v4);
  sub_23F6D3A84();
  sub_23F6D3724();
  sub_23F6D3644();
  sub_23F6B5100();
}

void sub_23F6C1974()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  sub_23F6B5220();
  sub_23F6D3628(v0, v1, v2, v3, v4);
  sub_23F6D3A84();
  sub_23F6D3724();
  sub_23F6D3644();
  sub_23F6B5100();
}

uint64_t sub_23F6C19B0()
{
  type metadata accessor for ContextProtoContextMetadata(0);
  return sub_23FB2D868();
}

void sub_23F6C1A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  sub_23F6D3B5C(a1, a2, a3, a4, a5);
  sub_23F6D37D4();
  sub_23F6D377C();
}

void ContextProtoContextMetadata.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);

  sub_23F6D3DC4();
  sub_23F6D39B8();
  if (!v0)
  {
    sub_23F6D3BA0();
    v2 = sub_23F6D35D0();
    sub_23F6C1B3C(v2);
    if (*(_QWORD *)(*(_QWORD *)v1 + 16))
    {
      type metadata accessor for ContextProtoSurroundingText(0);
      sub_23F6D3458(&qword_256EA2D08, type metadata accessor for ContextProtoSurroundingText, (uint64_t)&protocol conformance descriptor for ContextProtoSurroundingText);
      sub_23F6D36E4();
    }
    v3 = sub_23F6D35D0();
    sub_23F6C1CAC(v3);
    v4 = sub_23F6D35D0();
    sub_23F6C1E1C(v4);
    v5 = sub_23F6D35D0();
    sub_23F6C1E90(v5, v6, v7, v8, v9);
    type metadata accessor for ContextProtoContextMetadata(0);
    sub_23F6D37BC();
  }
  sub_23F6D3710();
}

void sub_23F6C1B3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA2CF8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ContextProtoConfidence(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ContextProtoContextMetadata(0);
  sub_23F6D3530(a1 + *(int *)(v8 + 28), (uint64_t)v4, &qword_256EA2CF8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA2CF8);
  }
  else
  {
    sub_23F6D34D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for ContextProtoConfidence);
    sub_23F6D3458(&qword_256EA2FA8, type metadata accessor for ContextProtoConfidence, (uint64_t)&protocol conformance descriptor for ContextProtoConfidence);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for ContextProtoConfidence);
  }
}

void sub_23F6C1CAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA2800);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ContextProtoBoundingBox(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ContextProtoContextMetadata(0);
  sub_23F6D3530(a1 + *(int *)(v8 + 32), (uint64_t)v4, &qword_256EA2800);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA2800);
  }
  else
  {
    sub_23F6D34D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for ContextProtoBoundingBox);
    sub_23F6D3458(&qword_256EA2F80, type metadata accessor for ContextProtoBoundingBox, (uint64_t)&protocol conformance descriptor for ContextProtoBoundingBox);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for ContextProtoBoundingBox);
  }
}

uint64_t sub_23F6C1E1C(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ContextProtoContextMetadata(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 36) + 8) & 1) == 0)
    return sub_23FB2D994();
  return result;
}

void sub_23F6C1E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;

  if (*(_QWORD *)(v5 + *(int *)(sub_23F6D3B5C(a1, a2, a3, a4, a5) + 40) + 8))
    sub_23FB2D9A0();
  sub_23F6D377C();
}

void static ContextProtoContextMetadata.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  char v60;
  char v61;
  uint64_t v62;
  char v63;
  int *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  int v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  sub_23F6B50E8();
  v4 = sub_23F6D35C0();
  v100 = *(_QWORD *)(v4 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v5);
  v99 = (uint64_t)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B6580();
  v98 = v8;
  v106 = type metadata accessor for ContextProtoBoundingBox(0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B57F4(v10, v94);
  v103 = sub_23F6916B8(&qword_256EA2808);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B51A4();
  v107 = v12;
  sub_23F6916B8(&qword_256EA2800);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  v102 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v15);
  v104 = (uint64_t)&v94 - v16;
  sub_23F6B5664();
  v18 = MEMORY[0x24BDAC7A8](v17);
  v26 = sub_23F6D3910(v18, v19, v20, v21, v22, v23, v24, v25, v94);
  v27 = type metadata accessor for ContextProtoConfidence(v26);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F6B59E0();
  v29 = sub_23F6916B8(&qword_256EA2CF0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&v94 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6916B8(&qword_256EA2CF8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F6B52C8();
  v35 = MEMORY[0x24BDAC7A8](v34);
  v37 = (char *)&v94 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v39 = (char *)&v94 - v38;
  v40 = v1;
  v41 = *(_QWORD *)(v1 + 16);
  v42 = *(_QWORD *)(v0 + 16);
  if (!v41)
  {
    v44 = v0;
    v97 = v4;
    if (v42)
      goto LABEL_54;
LABEL_10:
    v47 = *(_QWORD *)(v40 + 32);
    v48 = *(_QWORD *)(v44 + 32);
    if (v47)
    {
      if (!v48)
        goto LABEL_54;
      if (*(_QWORD *)(v40 + 24) != *(_QWORD *)(v44 + 24) || v47 != v48)
      {
        v50 = sub_23F6D3ED4();
        v40 = v4;
        if ((v50 & 1) == 0)
          goto LABEL_54;
      }
    }
    else if (v48)
    {
      goto LABEL_54;
    }
    v51 = v40;
    v52 = type metadata accessor for ContextProtoContextMetadata(0);
    v53 = *(int *)(v52 + 28);
    v96 = v51;
    sub_23F6D3764(v51 + v53, (uint64_t)v39);
    v95 = (int *)v52;
    sub_23F6D3764(v44 + *(int *)(v52 + 28), (uint64_t)v37);
    v54 = (uint64_t)&v32[*(int *)(v29 + 48)];
    sub_23F6D3764((uint64_t)v39, (uint64_t)v32);
    sub_23F6D3764((uint64_t)v37, v54);
    sub_23F6B5164((uint64_t)v32, 1, v27);
    if (v45)
    {
      sub_23F6B64F4((uint64_t)v37);
      sub_23F6B64F4((uint64_t)v39);
      sub_23F6B5164(v54, 1, v27);
      if (v45)
      {
        sub_23F6B4F84((uint64_t)v32, &qword_256EA2CF8);
LABEL_30:
        v62 = v96;
        sub_23F6997BC();
        if ((v63 & 1) == 0)
          goto LABEL_54;
        v64 = v95;
        v65 = v105;
        sub_23F6D36F4(v62 + v95[8], v105);
        v66 = v104;
        sub_23F6D36F4(v44 + v64[8], v104);
        v67 = v107;
        v68 = v107 + *(int *)(v103 + 48);
        sub_23F6D36F4(v65, v107);
        sub_23F6D36F4(v66, v68);
        v69 = sub_23F6D3CB4();
        v70 = v106;
        sub_23F6B5164(v69, v71, v106);
        if (v45)
        {
          sub_23F6D3748(v66);
          sub_23F6D3748(v65);
          v73 = sub_23F6B5164(v68, 1, v70);
          if (v45)
          {
            sub_23F6D378C(v73, &qword_256EA2800);
            goto LABEL_41;
          }
        }
        else
        {
          v74 = (uint64_t)v102;
          sub_23F6D3C14(v67, v72, &qword_256EA2800);
          sub_23F6B5164(v68, 1, v70);
          if (!v75)
          {
            v77 = v101;
            sub_23F6D3B28(v68);
            static ContextProtoBoundingBox.== infix(_:_:)();
            v79 = v78;
            sub_23F6D38A0(v77);
            sub_23F6B6EF8(v66);
            sub_23F6B6EF8(v65);
            sub_23F6D38A0(v74);
            sub_23F6B6EF8(v67);
            if ((v79 & 1) == 0)
              goto LABEL_54;
LABEL_41:
            v80 = v64[9];
            v81 = v96;
            v82 = *(_BYTE *)(v96 + v80 + 8);
            v83 = *(unsigned __int8 *)(v44 + v80 + 8);
            if ((v82 & 1) != 0)
            {
              if (!v83)
                goto LABEL_54;
            }
            else
            {
              sub_23F6D3EE0();
              if ((v84 & 1) != 0)
                goto LABEL_54;
            }
            v85 = v64[10];
            v86 = *(_QWORD *)(v44 + v85 + 8);
            if (*(_QWORD *)(v81 + v85 + 8))
            {
              if (!v86)
                goto LABEL_54;
              sub_23F6D3998(v81 + v85);
              if (!v45 || v87 != v88)
              {
                v90 = sub_23F6B5280();
                v81 = v96;
                if ((v90 & 1) == 0)
                  goto LABEL_54;
              }
            }
            else if (v86)
            {
              goto LABEL_54;
            }
            v91 = v98;
            sub_23F6D3818(v98, v81 + v64[11]);
            v92 = v44 + v64[11];
            v93 = v99;
            sub_23F6D3818(v99, v92);
            sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
            sub_23F6D37C8();
            sub_23F6D3874(v93);
            sub_23F6D3874(v91);
            goto LABEL_54;
          }
          sub_23F6B64F4(v66);
          sub_23F6B64F4(v65);
          sub_23F6D3D20(v76, type metadata accessor for ContextProtoBoundingBox);
        }
        v58 = &qword_256EA2808;
        v59 = v67;
LABEL_28:
        sub_23F6B4F84(v59, v58);
        goto LABEL_54;
      }
    }
    else
    {
      sub_23F6D3C14((uint64_t)v32, v55, &qword_256EA2CF8);
      sub_23F6B5164(v54, 1, v27);
      if (!v56)
      {
        sub_23F6D3A5C(v54);
        static ContextProtoConfidence.== infix(_:_:)();
        v61 = v60;
        sub_23F6D3928(v3);
        sub_23F6D3930((uint64_t)v37);
        sub_23F6D3930((uint64_t)v39);
        sub_23F6D3928(v2);
        sub_23F6D3930((uint64_t)v32);
        if ((v61 & 1) == 0)
          goto LABEL_54;
        goto LABEL_30;
      }
      sub_23F6B64F4((uint64_t)v37);
      sub_23F6B64F4((uint64_t)v39);
      sub_23F6D3D20(v57, type metadata accessor for ContextProtoConfidence);
    }
    v58 = &qword_256EA2CF0;
    v59 = (uint64_t)v32;
    goto LABEL_28;
  }
  if (v42)
  {
    v97 = v4;
    v43 = *(_QWORD *)(v1 + 8);
    v44 = v0;
    v45 = v43 == *(_QWORD *)(v0 + 8) && v41 == v42;
    if (v45)
      goto LABEL_10;
    v46 = sub_23F6D3ED4();
    v40 = v4;
    v4 = 0;
    if ((v46 & 1) != 0)
      goto LABEL_10;
  }
LABEL_54:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t ContextProtoContextMetadata.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for ContextProtoContextMetadata, &qword_256EA2D10, (uint64_t)&protocol conformance descriptor for ContextProtoContextMetadata);
}

uint64_t sub_23F6C2504(uint64_t (*a1)(uint64_t), unint64_t *a2, uint64_t a3)
{
  sub_23FB2FC5C();
  a1(0);
  sub_23F6D3458(a2, a1, a3);
  sub_23FB2F074();
  return sub_23FB2FC8C();
}

unint64_t sub_23F6C2584()
{
  static ContextProtoContextMetadata.protoMessageName.getter();
  return 0xD000000000000017;
}

void sub_23F6C25A8()
{
  ContextProtoContextMetadata.decodeMessage<A>(decoder:)();
}

void sub_23F6C25BC()
{
  ContextProtoContextMetadata.traverse<A>(visitor:)();
}

uint64_t sub_23F6C25D0()
{
  sub_23F6D3458(&qword_256EA3228, type metadata accessor for ContextProtoContextMetadata, (uint64_t)&protocol conformance descriptor for ContextProtoContextMetadata);
  return sub_23FB2D784();
}

uint64_t sub_23F6C2624()
{
  sub_23F6D3458(&qword_256EA2F68, type metadata accessor for ContextProtoContextMetadata, (uint64_t)&protocol conformance descriptor for ContextProtoContextMetadata);
  return sub_23FB2D8F8();
}

uint64_t sub_23F6C2668()
{
  sub_23F6D3458(&qword_256EA2F68, type metadata accessor for ContextProtoContextMetadata, (uint64_t)&protocol conformance descriptor for ContextProtoContextMetadata);
  return sub_23FB2D904();
}

unint64_t static ContextProtoBoundingBox.protoMessageName.getter()
{
  return sub_23F6D3738(19);
}

uint64_t sub_23F6C26D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EA2A78);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EA2A78);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1C0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "x_coordinate";
  *(_QWORD *)(v7 + 8) = 12;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "y_coordinate";
  *(_QWORD *)(v11 + 8) = 12;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "width";
  *((_QWORD *)v13 + 1) = 5;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "height";
  *((_QWORD *)v15 + 1) = 6;
  v15[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static ContextProtoBoundingBox._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F6BF3D8(&qword_256EA09A0, (uint64_t)qword_256EA2A78, a1);
}

void ContextProtoBoundingBox.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;

  sub_23F6D3DC4();
  sub_23F6D356C();
  if (!v10)
  {
    while ((v11 & 1) == 0)
    {
      sub_23F6D3E98();
      if (!(!v22 & v21))
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_23F6C2910 + 4 * byte_23FB4CAD8[v20]))(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10);
        return;
      }
      sub_23F6D35E8();
    }
  }
  sub_23F6D3710();
}

void ContextProtoBoundingBox.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_23F6D3850();
  sub_23F6C29C8(v1);
  if (!v0)
  {
    v2 = sub_23F6D3684();
    sub_23F6C2A00(v2);
    v3 = sub_23F6D3684();
    sub_23F6C2A38(v3);
    v4 = sub_23F6D3684();
    sub_23F6C2A70(v4);
    type metadata accessor for ContextProtoBoundingBox(0);
    sub_23F6D37BC();
  }
  sub_23F6D3674();
}

uint64_t sub_23F6C29C8(uint64_t result)
{
  if ((*(_BYTE *)(result + 4) & 1) == 0)
    return sub_23FB2D964();
  return result;
}

uint64_t sub_23F6C2A00(uint64_t result)
{
  if ((*(_BYTE *)(result + 12) & 1) == 0)
    return sub_23FB2D964();
  return result;
}

uint64_t sub_23F6C2A38(uint64_t result)
{
  if ((*(_BYTE *)(result + 20) & 1) == 0)
    return sub_23FB2D964();
  return result;
}

uint64_t sub_23F6C2A70(uint64_t result)
{
  if ((*(_BYTE *)(result + 28) & 1) == 0)
    return sub_23FB2D964();
  return result;
}

void static ContextProtoBoundingBox.== infix(_:_:)()
{
  uint64_t v0;
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  uint64_t v11;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F6D36BC();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6D3E00();
  if ((v6 & 1) != 0)
  {
    if (!v5)
      goto LABEL_15;
  }
  else
  {
    sub_23F6D3E80();
    if ((v7 & 1) != 0)
      goto LABEL_15;
  }
  if ((v2[12] & 1) != 0)
  {
    if (!v1[12])
      goto LABEL_15;
  }
  else
  {
    sub_23F6D3E80();
    if ((v8 & 1) != 0)
      goto LABEL_15;
  }
  if ((v2[20] & 1) != 0)
  {
    if (!v1[20])
      goto LABEL_15;
LABEL_13:
    if ((v2[28] & 1) != 0)
    {
      if (!v1[28])
        goto LABEL_15;
    }
    else
    {
      sub_23F6D3E80();
      if ((v10 & 1) != 0)
        goto LABEL_15;
    }
    v11 = type metadata accessor for ContextProtoBoundingBox(0);
    sub_23F6D3614(*(int *)(v11 + 32));
    sub_23F6D36AC(*(int *)(v11 + 32));
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F6D3600();
    sub_23F6D3A04();
    sub_23F6D3BD0(v0);
    goto LABEL_15;
  }
  sub_23F6D3E80();
  if ((v9 & 1) == 0)
    goto LABEL_13;
LABEL_15:
  sub_23F6B69E0();
}

uint64_t ContextProtoBoundingBox.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for ContextProtoBoundingBox, &qword_256EA2D18, (uint64_t)&protocol conformance descriptor for ContextProtoBoundingBox);
}

unint64_t sub_23F6C2BE8()
{
  static ContextProtoBoundingBox.protoMessageName.getter();
  return 0xD000000000000013;
}

uint64_t (*sub_23F6C2C0C())()
{
  return nullsub_1;
}

void sub_23F6C2C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  ContextProtoBoundingBox.decodeMessage<A>(decoder:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F6C2C34()
{
  ContextProtoBoundingBox.traverse<A>(visitor:)();
}

uint64_t sub_23F6C2C48()
{
  sub_23F6D3458(&qword_256EA3220, type metadata accessor for ContextProtoBoundingBox, (uint64_t)&protocol conformance descriptor for ContextProtoBoundingBox);
  return sub_23FB2D784();
}

uint64_t sub_23F6C2C9C()
{
  sub_23F6D3458(&qword_256EA2F80, type metadata accessor for ContextProtoBoundingBox, (uint64_t)&protocol conformance descriptor for ContextProtoBoundingBox);
  return sub_23FB2D8F8();
}

uint64_t sub_23F6C2CE0()
{
  sub_23F6D3458(&qword_256EA2F80, type metadata accessor for ContextProtoBoundingBox, (uint64_t)&protocol conformance descriptor for ContextProtoBoundingBox);
  return sub_23FB2D904();
}

unint64_t static ContextProtoSurroundingText.protoMessageName.getter()
{
  return sub_23F6D3738(23);
}

uint64_t sub_23F6C2D4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EA2A90);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EA2A90);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "text";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "on_screen_bounding_box";
  *((_QWORD *)v11 + 1) = 22;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static ContextProtoSurroundingText._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F6BF3D8(&qword_256EA09A8, (uint64_t)qword_256EA2A90, a1);
}

void ContextProtoSurroundingText.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6D3DC4();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_23F6D3A2C();
      }
      else if (v1 == 1)
      {
        sub_23F6D37D4();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D3710();
}

void sub_23F6C2F3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  sub_23F6B5220();
  sub_23F6D3628(v0, v1, v2, v3, v4);
  sub_23F6D3A84();
  sub_23F6D3724();
  sub_23F6D3644();
  sub_23F6B5100();
}

void ContextProtoSurroundingText.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_23F6D3AF8();
  sub_23F6C7C54(v1);
  if (!v0)
  {
    v2 = sub_23F6D3D50();
    sub_23F6C2FDC(v2);
    type metadata accessor for ContextProtoSurroundingText(0);
    sub_23F6D3A68();
  }
  sub_23F6D3674();
}

void sub_23F6C2FDC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA2800);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ContextProtoBoundingBox(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ContextProtoSurroundingText(0);
  sub_23F6D3530(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA2800);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA2800);
  }
  else
  {
    sub_23F6D34D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for ContextProtoBoundingBox);
    sub_23F6D3458(&qword_256EA2F80, type metadata accessor for ContextProtoBoundingBox, (uint64_t)&protocol conformance descriptor for ContextProtoBoundingBox);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for ContextProtoBoundingBox);
  }
}

void static ContextProtoSurroundingText.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  sub_23F6B50E8();
  v7 = sub_23F6D35C0();
  v52 = *(_QWORD *)(v7 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  v51 = (uint64_t)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v19 = sub_23F6D3910(v11, v12, v13, v14, v15, v16, v17, v18, v47);
  v20 = type metadata accessor for ContextProtoBoundingBox(v19);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B59E0();
  v22 = sub_23F6916B8(&qword_256EA2808);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA2800);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F6D3BD8();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F6B6B3C();
  v27 = *(_QWORD *)(v1 + 8);
  if (!*(_QWORD *)(v2 + 8))
  {
    v49 = v7;
    if (v27)
      goto LABEL_21;
LABEL_10:
    v31 = type metadata accessor for ContextProtoSurroundingText(0);
    v32 = v2;
    v33 = v1;
    v34 = v31;
    v35 = *(int *)(v31 + 20);
    v47 = v32;
    sub_23F6D3764(v32 + v35, v6);
    v48 = v34;
    sub_23F6D3764(v33 + *(int *)(v34 + 20), v0);
    v36 = v3 + *(int *)(v22 + 48);
    sub_23F6D3764(v6, v3);
    sub_23F6D3764(v0, v36);
    v37 = sub_23F6B5164(v3, 1, v20);
    if (v30)
    {
      sub_23F6B64F4(v0);
      sub_23F6B64F4(v6);
      v39 = sub_23F6B5164(v36, 1, v20);
      if (v30)
      {
        sub_23F6D378C(v39, &qword_256EA2800);
        goto LABEL_20;
      }
    }
    else
    {
      sub_23F6D3938(v37, v38, &qword_256EA2800);
      sub_23F6B5164(v36, 1, v20);
      if (!v40)
      {
        sub_23F6D3A5C(v36);
        sub_23F6D3D70();
        static ContextProtoBoundingBox.== infix(_:_:)();
        v43 = v42;
        sub_23F6D3928(v4);
        sub_23F6D38A8(v0);
        sub_23F6D38A8(v6);
        sub_23F6D3928(v5);
        sub_23F6D38A8(v3);
        if ((v43 & 1) == 0)
          goto LABEL_21;
LABEL_20:
        v44 = v48;
        v45 = v50;
        sub_23F6D3818(v50, v47 + *(int *)(v48 + 24));
        v46 = v51;
        sub_23F6D3818(v51, v33 + *(int *)(v44 + 24));
        sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        sub_23F6D37C8();
        sub_23F6D3874(v46);
        sub_23F6D3874(v45);
        goto LABEL_21;
      }
      sub_23F6B64F4(v0);
      sub_23F6B64F4(v6);
      sub_23F6D3C24(v41, type metadata accessor for ContextProtoBoundingBox);
    }
    sub_23F6D378C(v39, &qword_256EA2808);
    goto LABEL_21;
  }
  if (v27)
  {
    v49 = v7;
    sub_23F6D3D28();
    v30 = v30 && v28 == v29;
    if (v30 || (sub_23F6B5280() & 1) != 0)
      goto LABEL_10;
  }
LABEL_21:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t ContextProtoSurroundingText.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for ContextProtoSurroundingText, &qword_256EA2D20, (uint64_t)&protocol conformance descriptor for ContextProtoSurroundingText);
}

unint64_t sub_23F6C345C()
{
  static ContextProtoSurroundingText.protoMessageName.getter();
  return 0xD000000000000017;
}

uint64_t (*sub_23F6C3480())()
{
  return nullsub_1;
}

void sub_23F6C3494()
{
  ContextProtoSurroundingText.decodeMessage<A>(decoder:)();
}

void sub_23F6C34A8()
{
  ContextProtoSurroundingText.traverse<A>(visitor:)();
}

uint64_t sub_23F6C34BC()
{
  sub_23F6D3458(&qword_256EA3218, type metadata accessor for ContextProtoSurroundingText, (uint64_t)&protocol conformance descriptor for ContextProtoSurroundingText);
  return sub_23FB2D784();
}

uint64_t sub_23F6C3510()
{
  sub_23F6D3458(&qword_256EA2D08, type metadata accessor for ContextProtoSurroundingText, (uint64_t)&protocol conformance descriptor for ContextProtoSurroundingText);
  return sub_23FB2D8F8();
}

uint64_t sub_23F6C3554()
{
  sub_23F6D3458(&qword_256EA2D08, type metadata accessor for ContextProtoSurroundingText, (uint64_t)&protocol conformance descriptor for ContextProtoSurroundingText);
  return sub_23FB2D904();
}

unint64_t static ContextProtoConfidence.protoMessageName.getter()
{
  return sub_23F6D3738(18);
}

uint64_t sub_23F6C35C0(uint64_t a1)
{
  return sub_23F6CE638(a1, (uint64_t)&unk_256EA2AA8, (uint64_t)"score", (uint64_t)"bucket", 6);
}

uint64_t static ContextProtoConfidence._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F6BF3D8(&qword_256EA09B0, (uint64_t)&unk_256EA2AA8, a1);
}

void ContextProtoConfidence.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_23F6D39E0(a1, a2);
  while (1)
  {
    v3 = sub_23FB2D7B4();
    if (v2 || (v4 & 1) != 0)
      break;
    if (v3 == 2)
    {
      sub_23F6D3598();
      sub_23F6C365C();
    }
    else if (v3 == 1)
    {
      sub_23F6D3A50();
    }
  }
  sub_23F6D3C2C();
}

uint64_t sub_23F6C365C()
{
  sub_23F6D1DD0();
  return sub_23FB2D7FC();
}

void ContextProtoConfidence.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v1;
  if (*(float *)v0 == 0.0 || (sub_23F6D3BEC(), (v2 = v1) == 0))
  {
    if (!*(_BYTE *)(v0 + 4) || (sub_23F6D1DD0(), sub_23FB2D94C(), !v2))
    {
      type metadata accessor for ContextProtoConfidence(0);
      sub_23F6D37E0();
    }
  }
  sub_23F6D3C00();
}

void static ContextProtoConfidence.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F6D36BC();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6D3DD8();
  if (*(float *)v2 == *(float *)v1 && *(unsigned __int8 *)(v2 + 4) == *(unsigned __int8 *)(v1 + 4))
  {
    v5 = type metadata accessor for ContextProtoConfidence(0);
    sub_23F6D3614(*(int *)(v5 + 24));
    sub_23F6D36AC(*(int *)(v5 + 24));
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F6D3600();
    sub_23F6D3A04();
    sub_23F6D3BD0(v0);
  }
  sub_23F6B69E0();
}

uint64_t ContextProtoConfidence.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for ContextProtoConfidence, &qword_256EA2D30, (uint64_t)&protocol conformance descriptor for ContextProtoConfidence);
}

unint64_t sub_23F6C3840()
{
  static ContextProtoConfidence.protoMessageName.getter();
  return 0xD000000000000012;
}

void sub_23F6C3864(uint64_t a1, uint64_t a2)
{
  ContextProtoConfidence.decodeMessage<A>(decoder:)(a1, a2);
}

void sub_23F6C3878()
{
  ContextProtoConfidence.traverse<A>(visitor:)();
}

uint64_t sub_23F6C388C()
{
  sub_23F6D3458(&qword_256EA3210, type metadata accessor for ContextProtoConfidence, (uint64_t)&protocol conformance descriptor for ContextProtoConfidence);
  return sub_23FB2D784();
}

uint64_t sub_23F6C38E0()
{
  sub_23F6D3458(&qword_256EA2FA8, type metadata accessor for ContextProtoConfidence, (uint64_t)&protocol conformance descriptor for ContextProtoConfidence);
  return sub_23FB2D8F8();
}

uint64_t sub_23F6C3924()
{
  sub_23F6D3458(&qword_256EA2FA8, type metadata accessor for ContextProtoConfidence, (uint64_t)&protocol conformance descriptor for ContextProtoConfidence);
  return sub_23FB2D904();
}

unint64_t static ContextProtoStructuredContext.protoMessageName.getter()
{
  return sub_23F6D3738(25);
}

uint64_t sub_23F6C3990(uint64_t a1)
{
  return sub_23F6D18E8(a1, (uint64_t)&unk_256EA2AC0, (uint64_t)"siriRequestContext", 18);
}

uint64_t static ContextProtoStructuredContext._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F6BF3D8(&qword_256EA09B8, (uint64_t)&unk_256EA2AC0, a1);
}

void ContextProtoStructuredContext.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F6D39E0(a1, a2);
  while (1)
  {
    v3 = sub_23FB2D7B4();
    if (v2 || (v4 & 1) != 0)
      break;
    if (v3 == 1)
    {
      sub_23F6D35F4();
      sub_23F6C3A14(v5, v6, v7, v8);
    }
  }
  sub_23F6D3C2C();
}

void sub_23F6C3A14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a2;
  v37 = a4;
  v36 = a3;
  v5 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v33 = (uint64_t)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v29 - v8;
  v10 = sub_23F6916B8(&qword_256EA2D40);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ContextProtoStructuredContextKind(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v29 - v17;
  v19 = sub_23F6916B8(&qword_256EA3288);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v29 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v29 - v23, 1, 1, v5);
  v31 = a1;
  sub_23F6D3530(a1, (uint64_t)v12, &qword_256EA2D40);
  v30 = v13;
  v32 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA2D40);
  }
  else
  {
    sub_23F6D34D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for ContextProtoStructuredContextKind);
    sub_23F6D34D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for ContextProtoStructuredContextKind);
    sub_23F6B4F84((uint64_t)v24, &qword_256EA3288);
    sub_23F6D34D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
    sub_23F6D34D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
  }
  v25 = v34;
  sub_23F6D3458(&qword_256EA2FD8, type metadata accessor for ContextProtoStructuredContextSiriRequestContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContext);
  sub_23FB2D8B0();
  if (v25)
  {
    v26 = (uint64_t)v24;
LABEL_8:
    sub_23F6B4F84(v26, &qword_256EA3288);
    return;
  }
  sub_23F6D3530((uint64_t)v24, (uint64_t)v22, &qword_256EA3288);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EA3288);
    v26 = (uint64_t)v22;
    goto LABEL_8;
  }
  v27 = v33;
  sub_23F6D34D0((uint64_t)v22, v33, type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
  if (v32 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EA3288);
  v28 = v31;
  sub_23F6B4F84(v31, &qword_256EA2D40);
  sub_23F6D34D0(v27, v28, type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v28, 0, 1, v30);
}

void ContextProtoStructuredContext.traverse<A>(visitor:)()
{
  sub_23F6CEBA4();
}

void sub_23F6C3DE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA2D40);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6D3530(a1, (uint64_t)v4, &qword_256EA2D40);
  v8 = type metadata accessor for ContextProtoStructuredContextKind(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA2D40);
  }
  else
  {
    sub_23F6D34D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
    sub_23F6D3458(&qword_256EA2FD8, type metadata accessor for ContextProtoStructuredContextSiriRequestContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContext);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
  }
}

void static ContextProtoStructuredContext.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39[6];

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  v39[0] = sub_23F6B53A4();
  v39[5] = *(_QWORD *)(v39[0] - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  v39[4] = (uint64_t)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v19 = sub_23F6D38F8(v11, v12, v13, v14, v15, v16, v17, v18, v39[0]);
  v20 = type metadata accessor for ContextProtoStructuredContextKind(v19);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B59E0();
  v22 = sub_23F6916B8(&qword_256EA2D38);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F6D3A70();
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)v39 - v27;
  v39[1] = v7;
  sub_23F6D3764(v7, (uint64_t)v39 - v27);
  v39[3] = v5;
  sub_23F6D3764(v5, v0);
  v29 = v1 + *(int *)(v22 + 48);
  sub_23F6D3764((uint64_t)v28, v1);
  sub_23F6D3764(v0, v29);
  v30 = sub_23F6B5164(v1, 1, v20);
  if (v33)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4((uint64_t)v28);
    v32 = sub_23F6B5164(v29, 1, v20);
    if (v33)
    {
      sub_23F6D378C(v32, &qword_256EA2D40);
LABEL_11:
      v38 = type metadata accessor for ContextProtoStructuredContext(0);
      sub_23F6D3794(v38);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6B5624();
      sub_23F6D39FC(v1);
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F6D3938(v30, v31, &qword_256EA2D40);
  sub_23F6B5164(v29, 1, v20);
  if (v33)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4((uint64_t)v28);
    sub_23F6D3C24(v34, type metadata accessor for ContextProtoStructuredContextKind);
LABEL_9:
    sub_23F6D378C(v32, &qword_256EA2D38);
    goto LABEL_12;
  }
  sub_23F6D3A5C(v29);
  v35 = sub_23F6D3D70();
  v37 = static ContextProtoStructuredContextKind.== infix(_:_:)(v35, v36);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v0);
  sub_23F6D38A8((uint64_t)v28);
  sub_23F6D3928(v3);
  sub_23F6D38A8(v1);
  if ((v37 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F693DDC();
}

uint64_t ContextProtoStructuredContext.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for ContextProtoStructuredContext, &qword_256EA2D48, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContext);
}

unint64_t sub_23F6C41EC()
{
  static ContextProtoStructuredContext.protoMessageName.getter();
  return 0xD000000000000019;
}

uint64_t (*sub_23F6C4210())()
{
  return nullsub_1;
}

void sub_23F6C4224(uint64_t a1, uint64_t a2)
{
  ContextProtoStructuredContext.decodeMessage<A>(decoder:)(a1, a2);
}

void sub_23F6C4238()
{
  ContextProtoStructuredContext.traverse<A>(visitor:)();
}

uint64_t sub_23F6C424C()
{
  sub_23F6D3458(&qword_256EA3208, type metadata accessor for ContextProtoStructuredContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContext);
  return sub_23FB2D784();
}

uint64_t sub_23F6C42A0()
{
  sub_23F6D3458(&qword_256EA2FC0, type metadata accessor for ContextProtoStructuredContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContext);
  return sub_23FB2D8F8();
}

uint64_t sub_23F6C42E4()
{
  sub_23F6D3458(&qword_256EA2FC0, type metadata accessor for ContextProtoStructuredContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContext);
  return sub_23FB2D904();
}

unint64_t static ContextProtoStructuredContextSiriRequestContext.protoMessageName.getter()
{
  return sub_23F6D3738(43);
}

uint64_t sub_23F6C4350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  _QWORD *v25;
  char *v26;
  _QWORD *v27;
  char *v28;
  _QWORD *v29;
  char *v30;
  _QWORD *v31;
  char *v32;
  _QWORD *v33;
  char *v34;
  _QWORD *v35;
  char *v36;
  _QWORD *v37;
  char *v38;
  _QWORD *v39;
  char *v40;
  _QWORD *v41;
  char *v42;
  _QWORD *v43;
  char *v44;
  _QWORD *v45;
  char *v46;
  _QWORD *v47;
  char *v48;
  uint64_t v50;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EA2AD8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EA2AD8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = xmmword_23FB4F1D0;
  v5 = v50 + v4;
  v6 = v50 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v50 + v4) = 1;
  *(_QWORD *)v6 = "sessionID";
  *(_QWORD *)(v6 + 8) = 9;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x24BE5C318];
  v8 = sub_23FB2D9DC();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v5 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 2;
  *(_QWORD *)v10 = "requestID";
  *(_QWORD *)(v10 + 8) = 9;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v5 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 3;
  *(_QWORD *)v12 = "inputOrigin";
  *((_QWORD *)v12 + 1) = 11;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v5 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 4;
  *(_QWORD *)v14 = "responseMode";
  *((_QWORD *)v14 + 1) = 12;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v5 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 5;
  *(_QWORD *)v16 = "isEyesFree";
  *((_QWORD *)v16 + 1) = 10;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v5 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 6;
  *(_QWORD *)v18 = "isMultiUser";
  *((_QWORD *)v18 + 1) = 11;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v5 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 7;
  *(_QWORD *)v20 = "isVoiceTriggerEnabled";
  *((_QWORD *)v20 + 1) = 21;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v5 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 8;
  *(_QWORD *)v22 = "isTextToSpeechEnabled";
  *((_QWORD *)v22 + 1) = 21;
  v22[16] = 2;
  v9();
  v23 = (_QWORD *)(v5 + 8 * v3);
  v24 = (char *)v23 + *(int *)(v1 + 48);
  *v23 = 9;
  *(_QWORD *)v24 = "isTriggerlessFollowup";
  *((_QWORD *)v24 + 1) = 21;
  v24[16] = 2;
  v9();
  v25 = (_QWORD *)(v5 + 9 * v3);
  v26 = (char *)v25 + *(int *)(v1 + 48);
  *v25 = 10;
  *(_QWORD *)v26 = "deviceRestrictions";
  *((_QWORD *)v26 + 1) = 18;
  v26[16] = 2;
  v9();
  v27 = (_QWORD *)(v5 + 10 * v3);
  v28 = (char *)v27 + *(int *)(v1 + 48);
  *v27 = 11;
  *(_QWORD *)v28 = "bargeInModes";
  *((_QWORD *)v28 + 1) = 12;
  v28[16] = 2;
  v9();
  v29 = (_QWORD *)(v5 + 11 * v3);
  v30 = (char *)v29 + *(int *)(v1 + 48);
  *v29 = 12;
  *(_QWORD *)v30 = "identifiedUser";
  *((_QWORD *)v30 + 1) = 14;
  v30[16] = 2;
  v9();
  v31 = (_QWORD *)(v5 + 12 * v3);
  v32 = (char *)v31 + *(int *)(v1 + 48);
  *v31 = 13;
  *(_QWORD *)v32 = "encodedLocation";
  *((_QWORD *)v32 + 1) = 15;
  v32[16] = 2;
  v9();
  v33 = (_QWORD *)(v5 + 13 * v3);
  v34 = (char *)v33 + *(int *)(v1 + 48);
  *v33 = 14;
  *(_QWORD *)v34 = "countryCode";
  *((_QWORD *)v34 + 1) = 11;
  v34[16] = 2;
  v9();
  v35 = (_QWORD *)(v5 + 14 * v3);
  v36 = (char *)v35 + *(int *)(v1 + 48);
  *v35 = 15;
  *(_QWORD *)v36 = "siriLocale";
  *((_QWORD *)v36 + 1) = 10;
  v36[16] = 2;
  v9();
  v37 = (_QWORD *)(v5 + 15 * v3);
  v38 = (char *)v37 + *(int *)(v1 + 48);
  *v37 = 16;
  *(_QWORD *)v38 = "contentRestrictions";
  *((_QWORD *)v38 + 1) = 19;
  v38[16] = 2;
  v9();
  v39 = (_QWORD *)(v5 + 16 * v3);
  v40 = (char *)v39 + *(int *)(v1 + 48);
  *v39 = 17;
  *(_QWORD *)v40 = "uiScale";
  *((_QWORD *)v40 + 1) = 7;
  v40[16] = 2;
  v9();
  v41 = (_QWORD *)(v5 + 17 * v3);
  v42 = (char *)v41 + *(int *)(v1 + 48);
  *v41 = 18;
  *(_QWORD *)v42 = "temperatureUnit";
  *((_QWORD *)v42 + 1) = 15;
  v42[16] = 2;
  v9();
  v43 = (_QWORD *)(v5 + 18 * v3);
  v44 = (char *)v43 + *(int *)(v1 + 48);
  *v43 = 19;
  *(_QWORD *)v44 = "allowUserGeneratedContent";
  *((_QWORD *)v44 + 1) = 25;
  v44[16] = 2;
  v9();
  v45 = (_QWORD *)(v5 + 19 * v3);
  v46 = (char *)v45 + *(int *)(v1 + 48);
  *v45 = 20;
  *(_QWORD *)v46 = "censorSpeech";
  *((_QWORD *)v46 + 1) = 12;
  v46[16] = 2;
  v9();
  v47 = (_QWORD *)(v5 + 20 * v3);
  v48 = (char *)v47 + *(int *)(v1 + 48);
  *v47 = 21;
  *(_QWORD *)v48 = "meCard";
  *((_QWORD *)v48 + 1) = 6;
  v48[16] = 2;
  v9();
  return sub_23FB2D9E8();
}

uint64_t static ContextProtoStructuredContextSiriRequestContext._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F6BF3D8(&qword_256EA09C0, (uint64_t)qword_256EA2AD8, a1);
}

void ContextProtoStructuredContextSiriRequestContext.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6D356C();
  if (!v0)
  {
    sub_23F6D3CEC();
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
        case 2:
        case 3:
        case 4:
          sub_23F6D37D4();
          break;
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
          sub_23F6D3CCC();
          break;
        case 10:
        case 11:
          sub_23F6D3CC0();
          break;
        case 12:
          sub_23F6D3598();
          sub_23F6C4A74();
          break;
        case 13:
          sub_23F6D3598();
          sub_23F6C4B08();
          break;
        case 14:
          sub_23F6D3598();
          sub_23F6C4B68();
          break;
        case 15:
          sub_23F6D3598();
          sub_23F6C4BC8();
          break;
        case 16:
          sub_23F6D3598();
          sub_23F6C4C28();
          break;
        case 17:
          sub_23F6D3598();
          sub_23F6C4CBC();
          break;
        case 18:
          sub_23F6D3598();
          sub_23F6C4D1C();
          break;
        case 19:
          sub_23F6D3598();
          sub_23F6C4D7C();
          break;
        case 20:
          sub_23F6D3598();
          sub_23F6C4DDC();
          break;
        case 21:
          sub_23F6D3598();
          sub_23F6C8910();
          break;
        default:
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
}

uint64_t sub_23F6C4A74()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  sub_23F6D3458(&qword_256EA3008, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextUser);
  return sub_23FB2D8B0();
}

uint64_t sub_23F6C4B08()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return sub_23FB2D808();
}

uint64_t sub_23F6C4B68()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return sub_23FB2D874();
}

uint64_t sub_23F6C4BC8()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return sub_23FB2D874();
}

uint64_t sub_23F6C4C28()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  sub_23F6D3458(&qword_256EA2FF0, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
  return sub_23FB2D8B0();
}

uint64_t sub_23F6C4CBC()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return sub_23FB2D868();
}

uint64_t sub_23F6C4D1C()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return sub_23FB2D874();
}

uint64_t sub_23F6C4D7C()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return sub_23FB2D7D8();
}

uint64_t sub_23F6C4DDC()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return sub_23FB2D7D8();
}

void ContextProtoStructuredContextSiriRequestContext.traverse<A>(visitor:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_23F6D3E58();
  v2 = sub_23F6D35AC();
  sub_23F6C7C88(v2);
  if (!v0)
  {
    v3 = sub_23F6D35AC();
    sub_23F6C7CB4(v3);
    v4 = sub_23F6D35AC();
    sub_23F6C7CE0(v4);
    v5 = sub_23F6D35AC();
    sub_23F6C7D0C(v5);
    v6 = sub_23F6D35AC();
    sub_23F6C4FA8(v6);
    v7 = sub_23F6D35AC();
    sub_23F6C4FDC(v7);
    v8 = sub_23F6D35AC();
    sub_23F6C5010(v8);
    v9 = sub_23F6D35AC();
    sub_23F6C5044(v9);
    v10 = sub_23F6D35AC();
    sub_23F6C5078(v10);
    if (*(_QWORD *)(*v1 + 16))
      sub_23F6D3828();
    if (*(_QWORD *)(v1[1] + 16))
      sub_23F6D3828();
    v11 = sub_23F6D35AC();
    sub_23F6C50AC(v11);
    v12 = sub_23F6D35AC();
    sub_23F6C521C(v12);
    v13 = sub_23F6D35AC();
    sub_23F6C52B8(v13);
    v14 = sub_23F6D35AC();
    sub_23F6C532C(v14);
    v15 = sub_23F6D35AC();
    sub_23F6C53A0(v15);
    v16 = sub_23F6D35AC();
    sub_23F6C5510(v16);
    v17 = sub_23F6D35AC();
    sub_23F6C5584(v17);
    v18 = sub_23F6D35AC();
    sub_23F6C55F8(v18);
    v19 = sub_23F6D35AC();
    sub_23F6C566C(v19);
    v20 = sub_23F6D35AC();
    sub_23F6C56E0(v20);
    type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
    sub_23F6D37BC();
  }
  sub_23F6D3674();
}

uint64_t sub_23F6C4FA8(uint64_t result)
{
  if (*(_BYTE *)(result + 80) != 2)
    return sub_23FB2D940();
  return result;
}

uint64_t sub_23F6C4FDC(uint64_t result)
{
  if (*(_BYTE *)(result + 81) != 2)
    return sub_23FB2D940();
  return result;
}

uint64_t sub_23F6C5010(uint64_t result)
{
  if (*(_BYTE *)(result + 82) != 2)
    return sub_23FB2D940();
  return result;
}

uint64_t sub_23F6C5044(uint64_t result)
{
  if (*(_BYTE *)(result + 83) != 2)
    return sub_23FB2D940();
  return result;
}

uint64_t sub_23F6C5078(uint64_t result)
{
  if (*(_BYTE *)(result + 84) != 2)
    return sub_23FB2D940();
  return result;
}

void sub_23F6C50AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA2D78);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  sub_23F6D3530(a1 + *(int *)(v8 + 60), (uint64_t)v4, &qword_256EA2D78);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA2D78);
  }
  else
  {
    sub_23F6D34D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
    sub_23F6D3458(&qword_256EA3008, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextUser);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
  }
}

uint64_t sub_23F6C521C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  v3 = a1 + *(int *)(result + 64);
  v4 = *(_QWORD *)(v3 + 8);
  if (v4 >> 60 != 15)
  {
    v5 = *(_QWORD *)v3;
    sub_23F6D1E20(*(_QWORD *)v3, *(_QWORD *)(v3 + 8));
    sub_23FB2D958();
    return sub_23F6D1E64(v5, v4);
  }
  return result;
}

uint64_t sub_23F6C52B8(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 68) + 8))
    return sub_23FB2D9A0();
  return result;
}

uint64_t sub_23F6C532C(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 72) + 8))
    return sub_23FB2D9A0();
  return result;
}

void sub_23F6C53A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA2D68);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  sub_23F6D3530(a1 + *(int *)(v8 + 76), (uint64_t)v4, &qword_256EA2D68);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA2D68);
  }
  else
  {
    sub_23F6D34D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
    sub_23F6D3458(&qword_256EA2FF0, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
  }
}

uint64_t sub_23F6C5510(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 80) + 8) & 1) == 0)
    return sub_23FB2D994();
  return result;
}

uint64_t sub_23F6C5584(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 84) + 8))
    return sub_23FB2D9A0();
  return result;
}

uint64_t sub_23F6C55F8(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 88)) != 2)
    return sub_23FB2D940();
  return result;
}

uint64_t sub_23F6C566C(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 92)) != 2)
    return sub_23FB2D940();
  return result;
}

void sub_23F6C56E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA2D58);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  sub_23F6D3530(a1 + *(int *)(v8 + 96), (uint64_t)v4, &qword_256EA2D58);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA2D58);
  }
  else
  {
    sub_23F6D34D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
    sub_23F6D3458(&qword_256EA3020, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextMeCard);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
  }
}

void static ContextProtoStructuredContextSiriRequestContext.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  int v62;
  char v63;
  int v64;
  char v65;
  int v66;
  char v67;
  int v68;
  char v69;
  int v70;
  char v71;
  _QWORD *v72;
  _QWORD *v73;
  char v74;
  char v75;
  int *v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  char v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  BOOL v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  BOOL v104;
  int *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  char v114;
  uint64_t v115;
  char v116;
  int v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  BOOL v124;
  uint64_t v125;
  int v126;
  int v127;
  char v128;
  uint64_t v129;
  int v130;
  int v131;
  char v132;
  int *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  int *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;

  sub_23F6B50E8();
  v6 = sub_23F6D35C0();
  v157 = *(_QWORD *)(v6 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F693E0C();
  v156 = v8;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v9);
  v155 = (uint64_t)&v146 - v10;
  v11 = sub_23F6D398C();
  v153 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(v11);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5544(v13, (uint64_t)v146);
  v148 = sub_23F6916B8(&qword_256EA2D50);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B51A4();
  v154 = v15;
  sub_23F6916B8(&qword_256EA2D58);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F693E0C();
  v151 = v17;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6D3D14();
  v149 = v19;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v20);
  v150 = (uint64_t)&v146 - v21;
  v22 = sub_23F6D398C();
  v161 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(v22);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F6B51A4();
  v158 = v24;
  v159 = sub_23F6916B8(&qword_256EA2D60);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F6B51A4();
  v164 = v26;
  sub_23F6916B8(&qword_256EA2D68);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v27);
  v160 = (uint64_t)&v146 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v29);
  v162 = (uint64_t)&v146 - v30;
  sub_23F6B5664();
  v32 = MEMORY[0x24BDAC7A8](v31);
  v40 = sub_23F6D3910(v32, v33, v34, v35, v36, v37, v38, v39, (uint64_t)v146);
  v41 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(v40);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F6B5208();
  v43 = sub_23F6916B8(&qword_256EA2D70);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v44);
  sub_23F6B5298();
  sub_23F6916B8(&qword_256EA2D78);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F6B52C8();
  v47 = MEMORY[0x24BDAC7A8](v46);
  v49 = (char *)&v146 - v48;
  MEMORY[0x24BDAC7A8](v47);
  sub_23F6B5F5C();
  v50 = *(_QWORD *)(v2 + 24);
  v51 = *(_QWORD *)(v1 + 24);
  if (!v50)
  {
    v147 = v6;
    if (v51)
      goto LABEL_80;
LABEL_10:
    v53 = *(_QWORD *)(v2 + 40);
    v54 = *(_QWORD *)(v1 + 40);
    if (v53)
    {
      if (!v54)
        goto LABEL_80;
      v55 = *(_QWORD *)(v2 + 32) == *(_QWORD *)(v1 + 32) && v53 == v54;
      if (!v55 && (sub_23F6B5280() & 1) == 0)
        goto LABEL_80;
    }
    else if (v54)
    {
      goto LABEL_80;
    }
    v56 = *(_QWORD *)(v2 + 56);
    v57 = *(_QWORD *)(v1 + 56);
    if (v56)
    {
      if (!v57)
        goto LABEL_80;
      v58 = *(_QWORD *)(v2 + 48) == *(_QWORD *)(v1 + 48) && v56 == v57;
      if (!v58 && (sub_23F6B5280() & 1) == 0)
        goto LABEL_80;
    }
    else if (v57)
    {
      goto LABEL_80;
    }
    v59 = *(_QWORD *)(v2 + 72);
    v60 = *(_QWORD *)(v1 + 72);
    if (v59)
    {
      if (!v60)
        goto LABEL_80;
      v61 = *(_QWORD *)(v2 + 64) == *(_QWORD *)(v1 + 64) && v59 == v60;
      if (!v61 && (sub_23F6B5280() & 1) == 0)
        goto LABEL_80;
    }
    else if (v60)
    {
      goto LABEL_80;
    }
    v62 = *(unsigned __int8 *)(v1 + 80);
    if (*(_BYTE *)(v2 + 80) == 2)
    {
      if (v62 != 2)
        goto LABEL_80;
    }
    else
    {
      if (v62 == 2)
        goto LABEL_80;
      sub_23F6D3808();
      if ((v63 & 1) == 0)
        goto LABEL_80;
    }
    v64 = *(unsigned __int8 *)(v1 + 81);
    if (*(_BYTE *)(v2 + 81) == 2)
    {
      if (v64 != 2)
        goto LABEL_80;
    }
    else
    {
      if (v64 == 2)
        goto LABEL_80;
      sub_23F6D3808();
      if ((v65 & 1) == 0)
        goto LABEL_80;
    }
    v66 = *(unsigned __int8 *)(v1 + 82);
    if (*(_BYTE *)(v2 + 82) == 2)
    {
      if (v66 != 2)
        goto LABEL_80;
    }
    else
    {
      if (v66 == 2)
        goto LABEL_80;
      sub_23F6D3808();
      if ((v67 & 1) == 0)
        goto LABEL_80;
    }
    v68 = *(unsigned __int8 *)(v1 + 83);
    if (*(_BYTE *)(v2 + 83) == 2)
    {
      if (v68 != 2)
        goto LABEL_80;
    }
    else
    {
      if (v68 == 2)
        goto LABEL_80;
      sub_23F6D3808();
      if ((v69 & 1) == 0)
        goto LABEL_80;
    }
    v70 = *(unsigned __int8 *)(v1 + 84);
    if (*(_BYTE *)(v2 + 84) == 2)
    {
      if (v70 != 2)
        goto LABEL_80;
    }
    else
    {
      if (v70 == 2)
        goto LABEL_80;
      sub_23F6D3808();
      if ((v71 & 1) == 0)
        goto LABEL_80;
    }
    v72 = (_QWORD *)sub_23F6D3E18();
    sub_23F6957CC(v72, v73);
    if ((v74 & 1) == 0)
      goto LABEL_80;
    sub_23F6957CC(*(_QWORD **)(v2 + 8), *(_QWORD **)(v1 + 8));
    if ((v75 & 1) == 0)
      goto LABEL_80;
    v76 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
    sub_23F6D3530(v2 + v76[15], v5, &qword_256EA2D78);
    v146 = v76;
    sub_23F6D36F4(v1 + v76[15], (uint64_t)v49);
    v77 = v0 + *(int *)(v43 + 48);
    sub_23F6D36F4(v5, v0);
    sub_23F6D36F4((uint64_t)v49, v77);
    sub_23F6B5164(v0, 1, v41);
    if (v52)
    {
      sub_23F6D3748((uint64_t)v49);
      sub_23F6D3748(v5);
      sub_23F6B5164(v77, 1, v41);
      if (v52)
      {
        sub_23F6B4F84(v0, &qword_256EA2D78);
        goto LABEL_75;
      }
    }
    else
    {
      sub_23F6D3C14(v0, v78, &qword_256EA2D78);
      sub_23F6B5164(v77, 1, v41);
      if (!v79)
      {
        sub_23F6D34D0(v77, v3, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
        static ContextProtoStructuredContextSiriRequestContextUser.== infix(_:_:)();
        v84 = v83;
        sub_23F6D38A0(v3);
        sub_23F6D3930((uint64_t)v49);
        sub_23F6D3930(v5);
        sub_23F6D38A0(v4);
        sub_23F6D3930(v0);
        if ((v84 & 1) == 0)
          goto LABEL_80;
LABEL_75:
        v85 = v146[16];
        v86 = *(_QWORD *)(v2 + v85);
        v87 = *(_QWORD *)(v2 + v85 + 8);
        v88 = *(_QWORD *)(v1 + v85 + 8);
        if (v87 >> 60 == 15)
        {
          if (v88 >> 60 == 15)
            goto LABEL_82;
        }
        else if (v88 >> 60 != 15)
        {
          v91 = sub_23F6D3C38();
          v92 = MEMORY[0x242671028](v91);
          sub_23F6D3E8C();
          sub_23F6D1E64(v86, v87);
          if ((v92 & 1) == 0)
            goto LABEL_80;
LABEL_82:
          sub_23F6D3A18();
          if (v95)
          {
            if (!v93)
              goto LABEL_80;
            sub_23F6D3998(v94);
            v98 = v52 && v96 == v97;
            if (!v98 && (sub_23F6B5280() & 1) == 0)
              goto LABEL_80;
          }
          else if (v93)
          {
            goto LABEL_80;
          }
          sub_23F6D3A18();
          if (v101)
          {
            if (!v99)
              goto LABEL_80;
            sub_23F6D3998(v100);
            v104 = v52 && v102 == v103;
            if (!v104 && (sub_23F6B5280() & 1) == 0)
              goto LABEL_80;
          }
          else if (v99)
          {
            goto LABEL_80;
          }
          v105 = v146;
          v106 = v163;
          sub_23F6D36F4(v2 + v146[19], v163);
          v107 = v162;
          sub_23F6D36F4(v1 + v105[19], v162);
          v108 = v164;
          v109 = v164 + *(int *)(v159 + 48);
          sub_23F6D36F4(v106, v164);
          sub_23F6D36F4(v107, v109);
          sub_23F6B5164(v108, 1, v161);
          if (v52)
          {
            sub_23F6D3748(v162);
            sub_23F6D3748(v163);
            sub_23F6B5164(v109, 1, v161);
            if (v52)
            {
              sub_23F6B4F84(v164, &qword_256EA2D68);
LABEL_110:
              v115 = v146[20];
              v116 = *(_BYTE *)(v2 + v115 + 8);
              v117 = *(unsigned __int8 *)(v1 + v115 + 8);
              if ((v116 & 1) != 0)
              {
                if (!v117)
                  goto LABEL_80;
              }
              else
              {
                sub_23F6D3EE0();
                if ((v118 & 1) != 0)
                  goto LABEL_80;
              }
              sub_23F6D3A18();
              if (v121)
              {
                if (!v119)
                  goto LABEL_80;
                sub_23F6D3998(v120);
                v124 = v52 && v122 == v123;
                if (!v124 && (sub_23F6B5280() & 1) == 0)
                  goto LABEL_80;
              }
              else if (v119)
              {
                goto LABEL_80;
              }
              v125 = v146[22];
              v126 = *(unsigned __int8 *)(v2 + v125);
              v127 = *(unsigned __int8 *)(v1 + v125);
              if (v126 == 2)
              {
                if (v127 != 2)
                  goto LABEL_80;
              }
              else
              {
                if (v127 == 2)
                  goto LABEL_80;
                sub_23F6D3808();
                if ((v128 & 1) == 0)
                  goto LABEL_80;
              }
              v129 = v146[23];
              v130 = *(unsigned __int8 *)(v2 + v129);
              v131 = *(unsigned __int8 *)(v1 + v129);
              if (v130 == 2)
              {
                if (v131 != 2)
                  goto LABEL_80;
              }
              else
              {
                if (v131 == 2)
                  goto LABEL_80;
                sub_23F6D3808();
                if ((v132 & 1) == 0)
                  goto LABEL_80;
              }
              v133 = v146;
              v134 = v150;
              sub_23F6D36F4(v2 + v146[24], v150);
              v135 = v149;
              sub_23F6D36F4(v1 + v133[24], v149);
              v136 = v154;
              v137 = v154 + *(int *)(v148 + 48);
              sub_23F6D36F4(v134, v154);
              sub_23F6D36F4(v135, v137);
              sub_23F6B5164(v136, 1, v153);
              if (v52)
              {
                sub_23F6D3748(v149);
                sub_23F6D3748(v150);
                sub_23F6B5164(v137, 1, v153);
                if (v52)
                {
                  sub_23F6B4F84(v154, &qword_256EA2D58);
                  goto LABEL_143;
                }
              }
              else
              {
                sub_23F6D3530(v154, v151, &qword_256EA2D58);
                sub_23F6B5164(v137, 1, v153);
                if (!v138)
                {
                  v139 = v152;
                  sub_23F6D3B28(v137);
                  v140 = v151;
                  v141 = static ContextProtoStructuredContextSiriRequestContextMeCard.== infix(_:_:)(v151, v139);
                  sub_23F6D38A0(v139);
                  sub_23F6B6EF8(v149);
                  sub_23F6B6EF8(v150);
                  sub_23F6D38A0(v140);
                  sub_23F6B6EF8(v154);
                  if ((v141 & 1) == 0)
                    goto LABEL_80;
LABEL_143:
                  v142 = v146;
                  v143 = v155;
                  sub_23F6D3818(v155, v2 + v146[25]);
                  v144 = v1 + v142[25];
                  v145 = v156;
                  sub_23F6D3818(v156, v144);
                  sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
                  sub_23F6D37C8();
                  sub_23F6D3DA4(v145);
                  sub_23F6D3DA4(v143);
                  goto LABEL_80;
                }
                sub_23F6B64F4(v149);
                sub_23F6B64F4(v150);
                sub_23F6D3508(v151, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
              }
              v81 = &qword_256EA2D50;
              v82 = v154;
LABEL_73:
              sub_23F6B4F84(v82, v81);
              goto LABEL_80;
            }
          }
          else
          {
            sub_23F6D3530(v164, v160, &qword_256EA2D68);
            sub_23F6B5164(v109, 1, v161);
            if (!v110)
            {
              v111 = v158;
              sub_23F6D3B28(v109);
              v112 = v160;
              static ContextProtoStructuredContextSiriRequestContextContentRestriction.== infix(_:_:)();
              v114 = v113;
              sub_23F6D38A0(v111);
              sub_23F6B6EF8(v162);
              sub_23F6B6EF8(v163);
              sub_23F6D38A0(v112);
              sub_23F6B6EF8(v164);
              if ((v114 & 1) == 0)
                goto LABEL_80;
              goto LABEL_110;
            }
            sub_23F6B64F4(v162);
            sub_23F6B64F4(v163);
            sub_23F6D3508(v160, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
          }
          v81 = &qword_256EA2D60;
          v82 = v164;
          goto LABEL_73;
        }
        v89 = sub_23F6D3C38();
        sub_23F6D1E64(v89, v90);
        sub_23F6D3E8C();
        goto LABEL_80;
      }
      sub_23F6D3748((uint64_t)v49);
      sub_23F6D3748(v5);
      sub_23F6D3D20(v80, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
    }
    v81 = &qword_256EA2D70;
    v82 = v0;
    goto LABEL_73;
  }
  if (v51)
  {
    v147 = v6;
    v52 = *(_QWORD *)(v2 + 16) == *(_QWORD *)(v1 + 16) && v50 == v51;
    if (v52 || (sub_23F6B5280() & 1) != 0)
      goto LABEL_10;
  }
LABEL_80:
  sub_23F693DDC();
}

uint64_t ContextProtoStructuredContextSiriRequestContext.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for ContextProtoStructuredContextSiriRequestContext, &qword_256EA2D80, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContext);
}

unint64_t sub_23F6C62E4()
{
  static ContextProtoStructuredContextSiriRequestContext.protoMessageName.getter();
  return 0xD00000000000002BLL;
}

uint64_t (*sub_23F6C6308())()
{
  return nullsub_1;
}

void sub_23F6C631C()
{
  ContextProtoStructuredContextSiriRequestContext.decodeMessage<A>(decoder:)();
}

void sub_23F6C6330()
{
  ContextProtoStructuredContextSiriRequestContext.traverse<A>(visitor:)();
}

uint64_t sub_23F6C6344()
{
  sub_23F6D3458(&qword_256EA3200, type metadata accessor for ContextProtoStructuredContextSiriRequestContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContext);
  return sub_23FB2D784();
}

uint64_t sub_23F6C6398()
{
  sub_23F6D3458(&qword_256EA2FD8, type metadata accessor for ContextProtoStructuredContextSiriRequestContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContext);
  return sub_23FB2D8F8();
}

uint64_t sub_23F6C63DC()
{
  sub_23F6D3458(&qword_256EA2FD8, type metadata accessor for ContextProtoStructuredContextSiriRequestContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContext);
  return sub_23FB2D904();
}

unint64_t static ContextProtoStructuredContextSiriRequestContextContentRestriction.protoMessageName.getter()
{
  return sub_23F6D3738(61);
}

uint64_t sub_23F6C6448()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EA2AF0);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EA2AF0);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1C0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "appRestriction";
  *(_QWORD *)(v7 + 8) = 14;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "countryCode";
  *(_QWORD *)(v11 + 8) = 11;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "movieRestriction";
  *((_QWORD *)v13 + 1) = 16;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "tvRestriction";
  *((_QWORD *)v15 + 1) = 13;
  v15[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static ContextProtoStructuredContextSiriRequestContextContentRestriction._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F6BF3D8(&qword_256EA09C8, (uint64_t)qword_256EA2AF0, a1);
}

void ContextProtoStructuredContextSiriRequestContextContentRestriction.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;

  sub_23F6D3DC4();
  sub_23F6D356C();
  if (!v10)
  {
    while ((v11 & 1) == 0)
    {
      sub_23F6D3E98();
      if (!(!v22 & v21))
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_23F6C6674 + 4 * byte_23FB4CAF1[v20]))(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10);
        return;
      }
      sub_23F6D35E8();
    }
  }
  sub_23F6D3710();
}

void ContextProtoStructuredContextSiriRequestContextContentRestriction.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_23F6D3850();
  sub_23F6C6734(v1);
  if (!v0)
  {
    v2 = sub_23F6D3C80();
    sub_23F6C74C4(v2);
    v3 = sub_23F6D3684();
    sub_23F6C6764(v3);
    v4 = sub_23F6D3684();
    sub_23F6C6794(v4);
    type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
    sub_23F6D37BC();
  }
  sub_23F6D3674();
}

uint64_t sub_23F6C6734(uint64_t result)
{
  if ((*(_BYTE *)(result + 4) & 1) == 0)
    return sub_23FB2D970();
  return result;
}

uint64_t sub_23F6C6764(uint64_t result)
{
  if ((*(_BYTE *)(result + 28) & 1) == 0)
    return sub_23FB2D970();
  return result;
}

uint64_t sub_23F6C6794(uint64_t result)
{
  if ((*(_BYTE *)(result + 36) & 1) == 0)
    return sub_23FB2D970();
  return result;
}

void static ContextProtoStructuredContextSiriRequestContextContentRestriction.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v10;
  char v11;
  uint64_t v12;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F6D36BC();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6D3E00();
  if ((v6 & 1) != 0)
  {
    if (!v5)
      goto LABEL_24;
  }
  else
  {
    if (*(_DWORD *)v2 != *(_DWORD *)v1)
      LOBYTE(v5) = 1;
    if ((v5 & 1) != 0)
      goto LABEL_24;
  }
  v7 = *(_QWORD *)(v2 + 16);
  v8 = *(_QWORD *)(v1 + 16);
  if (v7)
  {
    if (!v8)
      goto LABEL_24;
    v9 = *(_QWORD *)(v2 + 8) == *(_QWORD *)(v1 + 8) && v7 == v8;
    if (!v9 && (sub_23F6B5280() & 1) == 0)
      goto LABEL_24;
  }
  else if (v8)
  {
    goto LABEL_24;
  }
  v10 = *(_BYTE *)(v1 + 28);
  if ((*(_BYTE *)(v2 + 28) & 1) != 0)
  {
    if (!*(_BYTE *)(v1 + 28))
      goto LABEL_24;
  }
  else
  {
    if (*(_DWORD *)(v2 + 24) != *(_DWORD *)(v1 + 24))
      v10 = 1;
    if ((v10 & 1) != 0)
      goto LABEL_24;
  }
  v11 = *(_BYTE *)(v1 + 36);
  if ((*(_BYTE *)(v2 + 36) & 1) != 0)
  {
    if (!*(_BYTE *)(v1 + 36))
      goto LABEL_24;
LABEL_28:
    v12 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
    sub_23F6D3614(*(int *)(v12 + 32));
    sub_23F6D36AC(*(int *)(v12 + 32));
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F6D3600();
    sub_23F6D36D0();
    sub_23F6D3820(v0);
    goto LABEL_24;
  }
  if (*(_DWORD *)(v2 + 32) != *(_DWORD *)(v1 + 32))
    v11 = 1;
  if ((v11 & 1) == 0)
    goto LABEL_28;
LABEL_24:
  sub_23F6D3B34();
  sub_23F6B69E0();
}

uint64_t ContextProtoStructuredContextSiriRequestContextContentRestriction.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction, &qword_256EA2D88, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
}

unint64_t sub_23F6C6920()
{
  static ContextProtoStructuredContextSiriRequestContextContentRestriction.protoMessageName.getter();
  return 0xD00000000000003DLL;
}

void sub_23F6C6944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  ContextProtoStructuredContextSiriRequestContextContentRestriction.decodeMessage<A>(decoder:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F6C6958()
{
  ContextProtoStructuredContextSiriRequestContextContentRestriction.traverse<A>(visitor:)();
}

uint64_t sub_23F6C696C()
{
  sub_23F6D3458(&qword_256EA31F8, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
  return sub_23FB2D784();
}

uint64_t sub_23F6C69C0()
{
  sub_23F6D3458(&qword_256EA2FF0, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
  return sub_23FB2D8F8();
}

uint64_t sub_23F6C6A04()
{
  sub_23F6D3458(&qword_256EA2FF0, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
  return sub_23FB2D904();
}

unint64_t static ContextProtoStructuredContextSiriRequestContextUser.protoMessageName.getter()
{
  return sub_23F6D3738(47);
}

uint64_t sub_23F6C6A70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EA2B08);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EA2B08);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "userID";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "isOnlyUserInHome";
  *((_QWORD *)v11 + 1) = 16;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "classification";
  *((_QWORD *)v13 + 1) = 14;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static ContextProtoStructuredContextSiriRequestContextUser._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F6BF3D8(&qword_256EA09D0, (uint64_t)qword_256EA2B08, a1);
}

void ContextProtoStructuredContextSiriRequestContextUser.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 3:
          sub_23F6D3598();
          sub_23F6C6C90();
          break;
        case 2:
          sub_23F6D3CCC();
          break;
        case 1:
          sub_23F6D37D4();
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D377C();
}

uint64_t sub_23F6C6C90()
{
  sub_23F6D3494();
  return sub_23FB2D7F0();
}

void ContextProtoStructuredContextSiriRequestContextUser.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F6D3AD4();
  sub_23F6C7C54(v1);
  if (!v0)
  {
    v2 = sub_23F6D38C8();
    sub_23F6C6D50(v2);
    v3 = sub_23F6D38C8();
    sub_23F6C6D84(v3);
    type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    sub_23F6D3B78();
  }
  sub_23F6D3674();
}

uint64_t sub_23F6C6D50(uint64_t result)
{
  if (*(_BYTE *)(result + 16) != 2)
    return sub_23FB2D940();
  return result;
}

uint64_t sub_23F6C6D84(uint64_t result)
{
  if (*(_BYTE *)(result + 17) != 5)
  {
    sub_23F6D3494();
    return sub_23FB2D94C();
  }
  return result;
}

void static ContextProtoStructuredContextSiriRequestContextUser.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  int v10;
  char v11;
  int v12;
  int v13;
  uint64_t v14;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F6D36BC();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6D3DE8();
  if (!v6)
  {
    if (v5)
      goto LABEL_22;
LABEL_10:
    v10 = *(unsigned __int8 *)(v1 + 16);
    if (*(_BYTE *)(v2 + 16) == 2)
    {
      if (v10 != 2)
        goto LABEL_22;
    }
    else
    {
      if (v10 == 2)
        goto LABEL_22;
      sub_23F6D3808();
      if ((v11 & 1) == 0)
        goto LABEL_22;
    }
    v12 = *(unsigned __int8 *)(v2 + 17);
    v13 = *(unsigned __int8 *)(v1 + 17);
    if (v12 == 5)
    {
      if (v13 != 5)
        goto LABEL_22;
    }
    else if (v13 == 5 || v12 != v13)
    {
      goto LABEL_22;
    }
    v14 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    sub_23F6D3614(*(int *)(v14 + 28));
    sub_23F6D36AC(*(int *)(v14 + 28));
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F6D3600();
    sub_23F6D36D0();
    sub_23F6D3820(v0);
    goto LABEL_22;
  }
  if (v5)
  {
    sub_23F6D3D28();
    v9 = v9 && v7 == v8;
    if (v9 || (sub_23F6B5280() & 1) != 0)
      goto LABEL_10;
  }
LABEL_22:
  sub_23F6D3B34();
  sub_23F6B69E0();
}

uint64_t ContextProtoStructuredContextSiriRequestContextUser.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser, &qword_256EA2D90, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextUser);
}

unint64_t sub_23F6C6F2C()
{
  static ContextProtoStructuredContextSiriRequestContextUser.protoMessageName.getter();
  return 0xD00000000000002FLL;
}

uint64_t (*sub_23F6C6F50())()
{
  return nullsub_1;
}

void sub_23F6C6F64()
{
  ContextProtoStructuredContextSiriRequestContextUser.decodeMessage<A>(decoder:)();
}

void sub_23F6C6F78()
{
  ContextProtoStructuredContextSiriRequestContextUser.traverse<A>(visitor:)();
}

uint64_t sub_23F6C6F8C()
{
  sub_23F6D3458(&qword_256EA31F0, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextUser);
  return sub_23FB2D784();
}

uint64_t sub_23F6C6FE0()
{
  sub_23F6D3458(&qword_256EA3008, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextUser);
  return sub_23FB2D8F8();
}

uint64_t sub_23F6C7024()
{
  sub_23F6D3458(&qword_256EA3008, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextUser);
  return sub_23FB2D904();
}

unint64_t static ContextProtoStructuredContextSiriRequestContextMeCard.protoMessageName.getter()
{
  return sub_23F6D3738(49);
}

uint64_t sub_23F6C7090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EA2B20);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EA2B20);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1E0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "givenName";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "middleName";
  *(_QWORD *)(v11 + 8) = 10;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "familyName";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "nickName";
  *((_QWORD *)v15 + 1) = 8;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "fullName";
  *((_QWORD *)v17 + 1) = 8;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "addresses";
  *((_QWORD *)v19 + 1) = 9;
  v19[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static ContextProtoStructuredContextSiriRequestContextMeCard._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F6BF3D8(&qword_256EA09D8, (uint64_t)qword_256EA2B20, a1);
}

void ContextProtoStructuredContextSiriRequestContextMeCard.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          sub_23F6D37D4();
          break;
        case 6:
          sub_23F6D3598();
          sub_23F6C7398();
          break;
        default:
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void sub_23F6C7398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  sub_23F6B5220();
  sub_23F6D3628(v0, v1, v2, v3, v4);
  sub_23F6D3724();
  sub_23FB2D8A4();
  sub_23F6B5100();
}

void ContextProtoStructuredContextSiriRequestContextMeCard.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F6D3DC4();
  sub_23F6D39B8();
  if (!v0)
  {
    sub_23F6D3BA0();
    v2 = sub_23F6D35D0();
    sub_23F6C9AE4(v2);
    v3 = sub_23F6D35D0();
    sub_23F6C7524(v3);
    v4 = sub_23F6D35D0();
    sub_23F6C755C(v4);
    if (*(_QWORD *)(*(_QWORD *)v1 + 16))
    {
      type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress(0);
      sub_23F6D3458(&qword_256EA2D98, type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextAddress);
      sub_23F6D3B94();
      sub_23F6D36E4();
    }
    type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
    sub_23F6D37BC();
  }
  sub_23F6D3710();
}

void sub_23F6C74C4(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 16))
  {
    sub_23F6D3CE0();
    sub_23F6D3968();
  }
  sub_23F6D3ABC();
}

void sub_23F6C74F0(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 32))
    sub_23FB2D9A0();
  sub_23F6D3ABC();
}

uint64_t sub_23F6C7524(uint64_t result)
{
  if (*(_QWORD *)(result + 64))
    return sub_23FB2D9A0();
  return result;
}

uint64_t sub_23F6C755C(uint64_t result)
{
  if (*(_QWORD *)(result + 80))
    return sub_23FB2D9A0();
  return result;
}

#error "23F6C76EC: call analysis failed (funcsize=110)"

uint64_t ContextProtoStructuredContextSiriRequestContextMeCard.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard, &qword_256EA2DA0, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextMeCard);
}

unint64_t sub_23F6C7770()
{
  static ContextProtoStructuredContextSiriRequestContextMeCard.protoMessageName.getter();
  return 0xD000000000000031;
}

uint64_t (*sub_23F6C7794())()
{
  return nullsub_1;
}

void sub_23F6C77A8()
{
  ContextProtoStructuredContextSiriRequestContextMeCard.decodeMessage<A>(decoder:)();
}

void sub_23F6C77BC()
{
  ContextProtoStructuredContextSiriRequestContextMeCard.traverse<A>(visitor:)();
}

uint64_t sub_23F6C77D0()
{
  sub_23F6D3458(&qword_256EA31E8, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextMeCard);
  return sub_23FB2D784();
}

uint64_t sub_23F6C7824()
{
  sub_23F6D3458(&qword_256EA3020, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextMeCard);
  return sub_23FB2D8F8();
}

uint64_t sub_23F6C7868()
{
  sub_23F6D3458(&qword_256EA3020, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextMeCard);
  return sub_23FB2D904();
}

unint64_t static ContextProtoStructuredContextSiriRequestContextAddress.protoMessageName.getter()
{
  return sub_23F6D3738(50);
}

uint64_t sub_23F6C78D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EA2B38);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EA2B38);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1E0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "label";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "street";
  *(_QWORD *)(v11 + 8) = 6;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "city";
  *((_QWORD *)v13 + 1) = 4;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "state";
  *((_QWORD *)v15 + 1) = 5;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "postalCode";
  *((_QWORD *)v17 + 1) = 10;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "countryCode";
  *((_QWORD *)v19 + 1) = 11;
  v19[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static ContextProtoStructuredContextSiriRequestContextAddress._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F6BF3D8(&qword_256EA09E0, (uint64_t)qword_256EA2B38, a1);
}

void ContextProtoStructuredContextSiriRequestContextAddress.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  sub_23F6D356C();
  if (!v0)
  {
    sub_23F6D3CEC();
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          sub_23F6D37D4();
          break;
        default:
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void ContextProtoStructuredContextSiriRequestContextAddress.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_23F6D3850();
  sub_23F6C7C54(v1);
  if (!v0)
  {
    v2 = sub_23F6D3C80();
    sub_23F6C7C88(v2);
    v3 = sub_23F6D3684();
    sub_23F6C7CB4(v3);
    v4 = sub_23F6D3684();
    sub_23F6C7CE0(v4);
    v5 = sub_23F6D3684();
    sub_23F6C7D0C(v5);
    v6 = sub_23F6D3684();
    sub_23F6C7D38(v6);
    type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress(0);
    sub_23F6D37BC();
  }
  sub_23F6D3674();
}

void sub_23F6C7C54(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 8))
    sub_23FB2D9A0();
  sub_23F6D3ABC();
}

void sub_23F6C7C88(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24))
  {
    sub_23F6D3CE0();
    sub_23F6D3968();
  }
  sub_23F6D3ABC();
}

void sub_23F6C7CB4(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 40))
  {
    sub_23F6D3CE0();
    sub_23F6D3968();
  }
  sub_23F6D3ABC();
}

void sub_23F6C7CE0(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 56))
  {
    sub_23F6D3CE0();
    sub_23F6D3968();
  }
  sub_23F6D3ABC();
}

void sub_23F6C7D0C(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 72))
  {
    sub_23F6D3CE0();
    sub_23F6D3968();
  }
  sub_23F6D3ABC();
}

uint64_t sub_23F6C7D38(uint64_t result)
{
  if (*(_QWORD *)(result + 88))
    return sub_23FB2D9A0();
  return result;
}

void static ContextProtoStructuredContextSiriRequestContextAddress.== infix(_:_:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F6D36BC();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6D3DE8();
  if (!v6)
  {
    if (v5)
      goto LABEL_55;
LABEL_10:
    v10 = v2[3];
    v11 = v1[3];
    if (v10)
    {
      if (!v11)
        goto LABEL_55;
      v12 = v2[2] == v1[2] && v10 == v11;
      if (!v12 && (sub_23F6B5280() & 1) == 0)
        goto LABEL_55;
    }
    else if (v11)
    {
      goto LABEL_55;
    }
    v13 = v2[5];
    v14 = v1[5];
    if (v13)
    {
      if (!v14)
        goto LABEL_55;
      v15 = v2[4] == v1[4] && v13 == v14;
      if (!v15 && (sub_23F6B5280() & 1) == 0)
        goto LABEL_55;
    }
    else if (v14)
    {
      goto LABEL_55;
    }
    v16 = v2[7];
    v17 = v1[7];
    if (v16)
    {
      if (!v17)
        goto LABEL_55;
      v18 = v2[6] == v1[6] && v16 == v17;
      if (!v18 && (sub_23F6B5280() & 1) == 0)
        goto LABEL_55;
    }
    else if (v17)
    {
      goto LABEL_55;
    }
    v19 = v2[9];
    v20 = v1[9];
    if (v19)
    {
      if (!v20)
        goto LABEL_55;
      v21 = v2[8] == v1[8] && v19 == v20;
      if (!v21 && (sub_23F6B5280() & 1) == 0)
        goto LABEL_55;
    }
    else if (v20)
    {
      goto LABEL_55;
    }
    v22 = v2[11];
    v23 = v1[11];
    if (v22)
    {
      if (!v23)
        goto LABEL_55;
      v24 = v2[10] == v1[10] && v22 == v23;
      if (!v24 && (sub_23F6B5280() & 1) == 0)
        goto LABEL_55;
    }
    else if (v23)
    {
      goto LABEL_55;
    }
    v25 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress(0);
    sub_23F6D3614(*(int *)(v25 + 40));
    sub_23F6D36AC(*(int *)(v25 + 40));
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F6D3600();
    sub_23F6D36D0();
    sub_23F6D3820(v0);
    goto LABEL_55;
  }
  if (v5)
  {
    sub_23F6D3D28();
    v9 = v9 && v7 == v8;
    if (v9 || (sub_23F6B5280() & 1) != 0)
      goto LABEL_10;
  }
LABEL_55:
  sub_23F6D3B34();
  sub_23F6B69E0();
}

uint64_t ContextProtoStructuredContextSiriRequestContextAddress.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress, &qword_256EA2DA8, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextAddress);
}

unint64_t sub_23F6C7F68()
{
  static ContextProtoStructuredContextSiriRequestContextAddress.protoMessageName.getter();
  return 0xD000000000000032;
}

void sub_23F6C7F8C()
{
  ContextProtoStructuredContextSiriRequestContextAddress.decodeMessage<A>(decoder:)();
}

void sub_23F6C7FA0()
{
  ContextProtoStructuredContextSiriRequestContextAddress.traverse<A>(visitor:)();
}

uint64_t sub_23F6C7FB4()
{
  sub_23F6D3458(&qword_256EA31E0, type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextAddress);
  return sub_23FB2D784();
}

uint64_t sub_23F6C8008()
{
  sub_23F6D3458(&qword_256EA2D98, type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextAddress);
  return sub_23FB2D8F8();
}

uint64_t sub_23F6C804C()
{
  sub_23F6D3458(&qword_256EA2D98, type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextAddress);
  return sub_23FB2D904();
}

unint64_t static ContextProtoQueryDecorationOutput.protoMessageName.getter()
{
  return sub_23F6D3738(29);
}

uint64_t sub_23F6C80B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);
  unint64_t v9;
  _QWORD *v10;
  char *v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  _QWORD *v38;
  char *v39;
  _QWORD *v40;
  char *v41;
  _QWORD *v42;
  char *v43;
  _QWORD *v44;
  char *v45;
  _QWORD *v46;
  char *v47;
  uint64_t v49;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EA2B50);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EA2B50);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_23FB4F1D0;
  v5 = v49 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v49 + v4) = 12;
  *(_QWORD *)v5 = "spans";
  *(_QWORD *)(v5 + 8) = 5;
  *(_BYTE *)(v5 + 16) = 2;
  v6 = *MEMORY[0x24BE5C318];
  v7 = sub_23FB2D9DC();
  v8 = *(void (**)(void))(*(_QWORD *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  v9 = v49 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v49 + v4 + v3) = 13;
  *(_QWORD *)v9 = "spansIsPresent";
  *(_QWORD *)(v9 + 8) = 14;
  *(_BYTE *)(v9 + 16) = 2;
  v8();
  v10 = (_QWORD *)(v49 + v4 + 2 * v3);
  v11 = (char *)v10 + *(int *)(v1 + 48);
  *v10 = 3;
  *(_QWORD *)v11 = "requiredContext";
  *((_QWORD *)v11 + 1) = 15;
  v11[16] = 2;
  v8();
  v12 = (_QWORD *)(v49 + v4 + 3 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 14;
  *(_QWORD *)v13 = "requiredContextIsPresent";
  *((_QWORD *)v13 + 1) = 24;
  v13[16] = 2;
  v8();
  v14 = (_QWORD *)(v49 + v4 + 4 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "utteranceContext";
  *((_QWORD *)v15 + 1) = 16;
  v15[16] = 2;
  v8();
  v16 = (_QWORD *)(v49 + v4 + 5 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 15;
  *(_QWORD *)v17 = "utteranceContextIsPresent";
  *((_QWORD *)v17 + 1) = 25;
  v17[16] = 2;
  v8();
  v18 = (_QWORD *)(v49 + v4 + 6 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "originalRankedTools";
  *((_QWORD *)v19 + 1) = 19;
  v19[16] = 2;
  v8();
  v20 = (_QWORD *)(v49 + v4 + 7 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 16;
  *(_QWORD *)v21 = "originalRankedToolsIsPresent";
  *((_QWORD *)v21 + 1) = 28;
  v21[16] = 2;
  v8();
  v22 = (_QWORD *)(v49 + v4 + 8 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 6;
  *(_QWORD *)v23 = "adjustedRankedTools";
  *((_QWORD *)v23 + 1) = 19;
  v23[16] = 2;
  v8();
  v24 = (_QWORD *)(v49 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 17;
  *(_QWORD *)v25 = "adjustedRankedToolsIsPresent";
  *((_QWORD *)v25 + 1) = 28;
  v25[16] = 2;
  v8();
  v26 = (_QWORD *)(v49 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 7;
  *(_QWORD *)v27 = "originalRankedSpans";
  *((_QWORD *)v27 + 1) = 19;
  v27[16] = 2;
  v8();
  v28 = (_QWORD *)(v49 + v4 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 18;
  *(_QWORD *)v29 = "originalRankedSpansIsPresent";
  *((_QWORD *)v29 + 1) = 28;
  v29[16] = 2;
  v8();
  v30 = (_QWORD *)(v49 + v4 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 8;
  *(_QWORD *)v31 = "adjustedRankedSpans";
  *((_QWORD *)v31 + 1) = 19;
  v31[16] = 2;
  v8();
  v32 = (_QWORD *)(v49 + v4 + 13 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 19;
  *(_QWORD *)v33 = "adjustedRankedSpansIsPresent";
  *((_QWORD *)v33 + 1) = 28;
  v33[16] = 2;
  v8();
  v34 = (_QWORD *)(v49 + v4 + 14 * v3);
  v35 = (char *)v34 + *(int *)(v1 + 48);
  *v34 = 9;
  *(_QWORD *)v35 = "originalRankedUtteranceContext";
  *((_QWORD *)v35 + 1) = 30;
  v35[16] = 2;
  v8();
  v36 = (_QWORD *)(v49 + v4 + 15 * v3);
  v37 = (char *)v36 + *(int *)(v1 + 48);
  *v36 = 20;
  *(_QWORD *)v37 = "originalRankedUtteranceContextIsPresent";
  *((_QWORD *)v37 + 1) = 39;
  v37[16] = 2;
  v8();
  v38 = (_QWORD *)(v49 + v4 + 16 * v3);
  v39 = (char *)v38 + *(int *)(v1 + 48);
  *v38 = 10;
  *(_QWORD *)v39 = "adjustedRankedUtteranceContext";
  *((_QWORD *)v39 + 1) = 30;
  v39[16] = 2;
  v8();
  v40 = (_QWORD *)(v49 + v4 + 17 * v3);
  v41 = (char *)v40 + *(int *)(v1 + 48);
  *v40 = 21;
  *(_QWORD *)v41 = "adjustedRankedUtteranceContextIsPresent";
  *((_QWORD *)v41 + 1) = 39;
  v41[16] = 2;
  v8();
  v42 = (_QWORD *)(v49 + v4 + 18 * v3);
  v43 = (char *)v42 + *(int *)(v1 + 48);
  *v42 = 11;
  *(_QWORD *)v43 = "toolRetrievalResponse";
  *((_QWORD *)v43 + 1) = 21;
  v43[16] = 2;
  v8();
  v44 = (_QWORD *)(v49 + v4 + 19 * v3);
  v45 = (char *)v44 + *(int *)(v1 + 48);
  *v44 = 22;
  *(_QWORD *)v45 = "dynamicEnumerationEntities";
  *((_QWORD *)v45 + 1) = 26;
  v45[16] = 2;
  v8();
  v46 = (_QWORD *)(v49 + v4 + 20 * v3);
  v47 = (char *)v46 + *(int *)(v1 + 48);
  *v46 = 23;
  *(_QWORD *)v47 = "dynamicEnumerationEntitiesIsPresent";
  *((_QWORD *)v47 + 1) = 35;
  v47[16] = 2;
  v8();
  return sub_23FB2D9E8();
}

uint64_t static ContextProtoQueryDecorationOutput._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F6BF3D8(&qword_256EA09E8, (uint64_t)qword_256EA2B50, a1);
}

void ContextProtoQueryDecorationOutput.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 3:
          sub_23F6D3598();
          sub_23F6C8810();
          break;
        case 4:
          sub_23F6D3598();
          sub_23F6C8890();
          break;
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
        case 10:
          sub_23F6D3CC0();
          break;
        case 11:
          sub_23F6D3598();
          sub_23F6C8910();
          break;
        case 12:
          sub_23F6D3598();
          sub_23F6C7398();
          break;
        case 13:
        case 14:
        case 15:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 21:
        case 23:
          sub_23F6D3F00();
          break;
        case 22:
          sub_23F6D3598();
          sub_23F6C894C();
          break;
        default:
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
}

uint64_t sub_23F6C8810()
{
  type metadata accessor for ContextProtoRetrievedContext(0);
  sub_23F6D3458(&qword_256EA2DB0, type metadata accessor for ContextProtoRetrievedContext, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedContext);
  return sub_23FB2D8A4();
}

uint64_t sub_23F6C8890()
{
  type metadata accessor for ContextProtoRetrievedContext(0);
  sub_23F6D3458(&qword_256EA2DB0, type metadata accessor for ContextProtoRetrievedContext, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedContext);
  return sub_23FB2D8A4();
}

void sub_23F6C8910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  sub_23F6B5220();
  sub_23F6D3628(v0, v1, v2, v3, v4);
  sub_23F6D3A84();
  sub_23F6D3724();
  sub_23F6D3644();
  sub_23F6B5100();
}

uint64_t sub_23F6C894C()
{
  type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  sub_23F6D3458(&qword_256EA2DC0, type metadata accessor for ContextProtoDynamicEnumerationEntity, (uint64_t)&protocol conformance descriptor for ContextProtoDynamicEnumerationEntity);
  return sub_23FB2D8A4();
}

void ContextProtoQueryDecorationOutput.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6D3EA4();
  sub_23F6D3E58();
  if (!*(_QWORD *)(*(_QWORD *)(v1 + 16) + 16)
    || (sub_23F6D3EC4(),
        sub_23F6D3458(&qword_256EA2DB0, type metadata accessor for ContextProtoRetrievedContext, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedContext), sub_23F6D3E38(), sub_23F6D36E4(), !v0))
  {
    if (!*(_QWORD *)(*(_QWORD *)(v1 + 32) + 16)
      || (sub_23F6D3EC4(),
          sub_23F6D3458(&qword_256EA2DB0, type metadata accessor for ContextProtoRetrievedContext, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedContext), sub_23F6D36E4(), !v0))
    {
      if (!*(_QWORD *)(*(_QWORD *)(v1 + 48) + 16) || (sub_23F6D37F8(), !v0))
      {
        if (!*(_QWORD *)(*(_QWORD *)(v1 + 64) + 16) || (sub_23F6D37F8(), !v0))
        {
          if (!*(_QWORD *)(*(_QWORD *)(v1 + 80) + 16) || (sub_23F6D37F8(), !v0))
          {
            if (!*(_QWORD *)(*(_QWORD *)(v1 + 96) + 16) || (sub_23F6D37F8(), !v0))
            {
              if (!*(_QWORD *)(*(_QWORD *)(v1 + 112) + 16) || (sub_23F6D37F8(), !v0))
              {
                if (!*(_QWORD *)(*(_QWORD *)(v1 + 128) + 16) || (sub_23F6D37F8(), !v0))
                {
                  sub_23F6D3664();
                  sub_23F6C8D30(v2);
                  if (!v0)
                  {
                    if (*(_QWORD *)(*(_QWORD *)v1 + 16))
                    {
                      type metadata accessor for ContextProtoSpanMatchedEntity(0);
                      sub_23F6D3458(&qword_256EA2DB8, type metadata accessor for ContextProtoSpanMatchedEntity, (uint64_t)&protocol conformance descriptor for ContextProtoSpanMatchedEntity);
                      sub_23F6D3B94();
                      sub_23F6D36E4();
                    }
                    if (*(_BYTE *)(v1 + 8) == 1)
                      sub_23F6D369C();
                    if (*(_BYTE *)(v1 + 24) == 1)
                      sub_23F6D369C();
                    if (*(_BYTE *)(v1 + 40) == 1)
                      sub_23F6D369C();
                    if (*(_BYTE *)(v1 + 56) == 1)
                      sub_23F6D369C();
                    if (*(_BYTE *)(v1 + 72) == 1)
                      sub_23F6D369C();
                    if (*(_BYTE *)(v1 + 88) == 1)
                      sub_23F6D369C();
                    if (*(_BYTE *)(v1 + 104) == 1)
                      sub_23F6D369C();
                    if (*(_BYTE *)(v1 + 120) == 1)
                      sub_23F6D369C();
                    if (*(_BYTE *)(v1 + 136) == 1)
                      sub_23F6D369C();
                    if (*(_QWORD *)(*(_QWORD *)(v1 + 144) + 16))
                    {
                      type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
                      sub_23F6D3458(&qword_256EA2DC0, type metadata accessor for ContextProtoDynamicEnumerationEntity, (uint64_t)&protocol conformance descriptor for ContextProtoDynamicEnumerationEntity);
                      sub_23F6D3B94();
                      sub_23F6D36E4();
                    }
                    if (*(_BYTE *)(v1 + 152) == 1)
                      sub_23F6D369C();
                    type metadata accessor for ContextProtoQueryDecorationOutput(0);
                    sub_23F6D3884();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  sub_23F6D3750();
}

void sub_23F6C8D30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v6;
  char *v7;
  uint64_t DecorationOutput;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA2DD0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  MEMORY[0x24BDAC7A8](DecorationToolRetrievalResponse);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationOutput = type metadata accessor for ContextProtoQueryDecorationOutput(0);
  sub_23F6D3530(a1 + *(int *)(DecorationOutput + 96), (uint64_t)v4, &qword_256EA2DD0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, DecorationToolRetrievalResponse) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA2DD0);
  }
  else
  {
    sub_23F6D34D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
    sub_23F6D3458(&qword_256EA3110, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationToolRetrievalResponse);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
  }
}

#error "23F6C8FA0: call analysis failed (funcsize=250)"

uint64_t ContextProtoQueryDecorationOutput.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for ContextProtoQueryDecorationOutput, &qword_256EA2DD8, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationOutput);
}

unint64_t sub_23F6C92E4()
{
  static ContextProtoQueryDecorationOutput.protoMessageName.getter();
  return 0xD00000000000001DLL;
}

void sub_23F6C9308()
{
  ContextProtoQueryDecorationOutput.decodeMessage<A>(decoder:)();
}

void sub_23F6C931C()
{
  ContextProtoQueryDecorationOutput.traverse<A>(visitor:)();
}

uint64_t sub_23F6C9330()
{
  sub_23F6D3458(&qword_256EA31D8, type metadata accessor for ContextProtoQueryDecorationOutput, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationOutput);
  return sub_23FB2D784();
}

uint64_t sub_23F6C9384()
{
  sub_23F6D3458(&qword_256EA3048, type metadata accessor for ContextProtoQueryDecorationOutput, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationOutput);
  return sub_23FB2D8F8();
}

uint64_t sub_23F6C93C8()
{
  sub_23F6D3458(&qword_256EA3048, type metadata accessor for ContextProtoQueryDecorationOutput, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationOutput);
  return sub_23FB2D904();
}

unint64_t static ContextProtoQueryDecorationInput.protoMessageName.getter()
{
  return sub_23F6D3738(28);
}

uint64_t sub_23F6C9434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EA2B68);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EA2B68);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1F0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "query";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 8;
  *(_QWORD *)v11 = "requestId";
  *(_QWORD *)(v11 + 8) = 9;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 9;
  *(_QWORD *)v13 = "caller";
  *((_QWORD *)v13 + 1) = 6;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "maxToolsReturned";
  *((_QWORD *)v15 + 1) = 16;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 3;
  *(_QWORD *)v17 = "maxSpansReturned";
  *((_QWORD *)v17 + 1) = 16;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 4;
  *(_QWORD *)v19 = "maxContextReturned";
  *((_QWORD *)v19 + 1) = 18;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 5;
  *(_QWORD *)v21 = "spanTypeFilters";
  *((_QWORD *)v21 + 1) = 15;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 6;
  *(_QWORD *)v23 = "spanTypeFiltersIsPresent";
  *((_QWORD *)v23 + 1) = 24;
  v23[16] = 2;
  v10();
  v24 = (_QWORD *)(v6 + 8 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 7;
  *(_QWORD *)v25 = "requiredContextReturned";
  *((_QWORD *)v25 + 1) = 23;
  v25[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static ContextProtoQueryDecorationInput._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F6BF3D8(&qword_256EA09F0, (uint64_t)qword_256EA2B68, a1);
}

void ContextProtoQueryDecorationInput.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          sub_23F6D395C();
          break;
        case 2:
        case 3:
        case 4:
          sub_23F6D3EF4();
          break;
        case 5:
          sub_23F6D3598();
          sub_23F6C982C();
          break;
        case 6:
          sub_23F6D3F00();
          break;
        case 7:
          sub_23F6D3CCC();
          break;
        case 8:
          sub_23F6D37D4();
          break;
        case 9:
          v3 = sub_23F6D3598();
          sub_23F6CAE6C(v3, v4, v5, v6, (void (*)(void))sub_23F6D1E78);
          break;
        default:
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D3B40();
}

uint64_t sub_23F6C982C()
{
  sub_23FB2EB40();
  sub_23F6D3458(&qword_256EA2DE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9618], MEMORY[0x24BEB9610]);
  return sub_23FB2D8A4();
}

void ContextProtoQueryDecorationInput.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F6D36FC();
  if (!v2 || (sub_23F6D376C(), !v1))
  {
    v3 = sub_23F6D35D0();
    sub_23F6C9A20(v3);
    if (!v1)
    {
      v4 = sub_23F6D35D0();
      sub_23F6C9A50(v4);
      v5 = sub_23F6D35D0();
      sub_23F6C9A80(v5);
      if (*(_QWORD *)(*(_QWORD *)(v0 + 24) + 16))
      {
        sub_23FB2EB40();
        sub_23F6D3458(&qword_256EA2DE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9618], MEMORY[0x24BEB9610]);
        sub_23F6D3E24();
        sub_23F6D36E4();
      }
      if (*(_BYTE *)(v0 + 32) == 1)
        sub_23F6D369C();
      v6 = sub_23F6D35D0();
      sub_23F6C9AB0(v6);
      v7 = sub_23F6D35D0();
      sub_23F6C9AE4(v7);
      if (*(_BYTE *)(v0 + 16))
      {
        sub_23F6D1E78();
        sub_23F6D39A8();
      }
      type metadata accessor for ContextProtoQueryDecorationInput(0);
      sub_23F6D37BC();
    }
  }
  sub_23F6D3BB8();
}

uint64_t sub_23F6C9A20(uint64_t result)
{
  if ((*(_BYTE *)(result + 64) & 1) == 0)
    return sub_23FB2D97C();
  return result;
}

uint64_t sub_23F6C9A50(uint64_t result)
{
  if ((*(_BYTE *)(result + 80) & 1) == 0)
    return sub_23FB2D97C();
  return result;
}

uint64_t sub_23F6C9A80(uint64_t result)
{
  if ((*(_BYTE *)(result + 96) & 1) == 0)
    return sub_23FB2D97C();
  return result;
}

uint64_t sub_23F6C9AB0(uint64_t result)
{
  if (*(_BYTE *)(result + 97) != 2)
    return sub_23FB2D940();
  return result;
}

void sub_23F6C9AE4(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 48))
  {
    sub_23F6D3CE0();
    sub_23F6D3968();
  }
  sub_23F6D3ABC();
}

void static ContextProtoQueryDecorationInput.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  char v11;
  char v12;
  char v13;
  char v14;
  int v15;
  char v16;
  uint64_t DecorationInput;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F6D36BC();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6D3834();
  v7 = v7 && v5 == v6;
  if (!v7 && (sub_23F6B5280() & 1) == 0)
    goto LABEL_36;
  v8 = *(_QWORD *)(v2 + 48);
  v9 = *(_QWORD *)(v1 + 48);
  if (v8)
  {
    if (!v9)
      goto LABEL_36;
    v10 = *(_QWORD *)(v2 + 40) == *(_QWORD *)(v1 + 40) && v8 == v9;
    if (!v10 && (sub_23F6B5280() & 1) == 0)
      goto LABEL_36;
  }
  else if (v9)
  {
    goto LABEL_36;
  }
  if (*(unsigned __int8 *)(v2 + 16) == *(unsigned __int8 *)(v1 + 16))
  {
    if ((*(_BYTE *)(v2 + 64) & 1) != 0)
    {
      if (!*(_BYTE *)(v1 + 64))
        goto LABEL_36;
    }
    else
    {
      sub_23F6B6FE0();
      if ((v11 & 1) != 0)
        goto LABEL_36;
    }
    if ((*(_BYTE *)(v2 + 80) & 1) != 0)
    {
      if (!*(_BYTE *)(v1 + 80))
        goto LABEL_36;
    }
    else
    {
      sub_23F6B6FE0();
      if ((v12 & 1) != 0)
        goto LABEL_36;
    }
    if ((*(_BYTE *)(v2 + 96) & 1) != 0)
    {
      if (!*(_BYTE *)(v1 + 96))
        goto LABEL_36;
    }
    else
    {
      sub_23F6B6FE0();
      if ((v13 & 1) != 0)
        goto LABEL_36;
    }
    sub_23F697030();
    if ((v14 & 1) != 0 && *(unsigned __int8 *)(v2 + 32) == *(unsigned __int8 *)(v1 + 32))
    {
      v15 = *(unsigned __int8 *)(v1 + 97);
      if (*(_BYTE *)(v2 + 97) == 2)
      {
        if (v15 != 2)
          goto LABEL_36;
      }
      else
      {
        if (v15 == 2)
          goto LABEL_36;
        sub_23F6D3808();
        if ((v16 & 1) == 0)
          goto LABEL_36;
      }
      DecorationInput = type metadata accessor for ContextProtoQueryDecorationInput(0);
      sub_23F6D3614(*(int *)(DecorationInput + 52));
      sub_23F6D36AC(*(int *)(DecorationInput + 52));
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6D3600();
      sub_23F6D36D0();
      sub_23F6D3820(v0);
    }
  }
LABEL_36:
  sub_23F6D3B34();
  sub_23F6B69E0();
}

uint64_t ContextProtoQueryDecorationInput.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for ContextProtoQueryDecorationInput, &qword_256EA2DF0, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationInput);
}

unint64_t sub_23F6C9CDC()
{
  static ContextProtoQueryDecorationInput.protoMessageName.getter();
  return 0xD00000000000001CLL;
}

uint64_t (*sub_23F6C9D00())()
{
  return nullsub_1;
}

void sub_23F6C9D14()
{
  ContextProtoQueryDecorationInput.decodeMessage<A>(decoder:)();
}

void sub_23F6C9D28()
{
  ContextProtoQueryDecorationInput.traverse<A>(visitor:)();
}

uint64_t sub_23F6C9D3C()
{
  sub_23F6D3458(&qword_256EA31D0, type metadata accessor for ContextProtoQueryDecorationInput, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationInput);
  return sub_23FB2D784();
}

uint64_t sub_23F6C9D90()
{
  sub_23F6D3458(&qword_256EA3060, type metadata accessor for ContextProtoQueryDecorationInput, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationInput);
  return sub_23FB2D8F8();
}

uint64_t sub_23F6C9DD4()
{
  sub_23F6D3458(&qword_256EA3060, type metadata accessor for ContextProtoQueryDecorationInput, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationInput);
  return sub_23FB2D904();
}

unint64_t static ContextProtoDynamicEnumerationEntity.protoMessageName.getter()
{
  return sub_23F6D3738(32);
}

uint64_t sub_23F6C9E40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EA2B80);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EA2B80);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "identifier";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "parameterTypeInstance";
  *((_QWORD *)v11 + 1) = 21;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "typedValue";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static ContextProtoDynamicEnumerationEntity._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F6BF3D8(&qword_256EA09F8, (uint64_t)qword_256EA2B80, a1);
}

void ContextProtoDynamicEnumerationEntity.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 3:
          sub_23F6D38E0();
          sub_23F6CA0A4();
          break;
        case 2:
          sub_23F6D3C64();
          sub_23F6C2F3C();
          break;
        case 1:
          sub_23F6D395C();
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void sub_23F6CA0A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  sub_23F6B5220();
  sub_23F6D3628(v0, v1, v2, v3, v4);
  sub_23F6D3A84();
  sub_23F6D3724();
  sub_23F6D3644();
  sub_23F6B5100();
}

void ContextProtoDynamicEnumerationEntity.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F6D36FC();
  if (!v1 || (sub_23F6D3944(), !v0))
  {
    v2 = sub_23F6D3D7C();
    sub_23F6CA160(v2, v3, v4, v5);
    if (!v0)
    {
      v6 = sub_23F6D3D7C();
      sub_23F6CA2D4(v6, v7, v8, v9);
      type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
      sub_23F6D37E0();
    }
  }
  sub_23F6D3674();
}

void sub_23F6CA160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v13[2];

  v13[1] = a4;
  v5 = sub_23F6916B8(&qword_256EA2E00);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23FB2EB28();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  sub_23F6D3530(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256EA2E00);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v7, &qword_256EA2E00);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    sub_23F6D3458(&qword_256EA3278, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95D8], MEMORY[0x24BEB95D0]);
    sub_23FB2D9D0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

void sub_23F6CA2D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v13[2];

  v13[1] = a4;
  v5 = sub_23F6916B8(&qword_256EA2610);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23FB2EB1C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  sub_23F6D3530(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256EA2610);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v7, &qword_256EA2610);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    sub_23F6D3458(&qword_256EA3248, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95B0], MEMORY[0x24BEB95A0]);
    sub_23FB2D9D0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

void static ContextProtoDynamicEnumerationEntity.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  char v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  void (*v59)(uint64_t, uint64_t);
  void (*v60)(uint64_t, char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  v8 = sub_23F6B53A4();
  v69 = *(_QWORD *)(v8 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F693E0C();
  v68 = v10;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B6580();
  v67 = v12;
  v76 = sub_23F6D3D08();
  v70 = *(_QWORD *)(v76 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B5544(v14, v64);
  v72 = sub_23F6916B8(&qword_256EA2618);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B51A4();
  v75 = v16;
  sub_23F6916B8(&qword_256EA2610);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  v71 = (uint64_t)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v19);
  v73 = (uint64_t)&v64 - v20;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v21);
  v74 = (uint64_t)&v64 - v22;
  sub_23F6D398C();
  v23 = sub_23FB2EB28();
  v77 = *(_QWORD *)(v23 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6B53AC();
  v25 = sub_23F6916B8(&qword_256EA2DF8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v64 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6916B8(&qword_256EA2E00);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F6D3BD8();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F6B5F5C();
  v32 = *(_QWORD *)v7;
  v33 = *((_QWORD *)v7 + 1);
  v78 = v7;
  v79 = v5;
  v34 = v32 == *(_QWORD *)v5 && v33 == *((_QWORD *)v5 + 1);
  if (!v34 && (sub_23F6B5280() & 1) == 0)
    goto LABEL_26;
  v65 = v8;
  v35 = (int *)type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  sub_23F6D3D68((uint64_t)&v78[v35[5]], v2);
  sub_23F6D3D68((uint64_t)&v79[v35[5]], v0);
  v36 = (uint64_t)&v28[*(int *)(v25 + 48)];
  sub_23F6D3D68(v2, (uint64_t)v28);
  sub_23F6D3D68(v0, v36);
  sub_23F6B5164((uint64_t)v28, 1, v23);
  if (v34)
  {
    sub_23F6B62DC(v0);
    sub_23F6B62DC(v2);
    sub_23F6B5164(v36, 1, v23);
    if (v34)
    {
      sub_23F6B4F84((uint64_t)v28, &qword_256EA2E00);
      goto LABEL_16;
    }
LABEL_14:
    v41 = &qword_256EA2DF8;
    v42 = (uint64_t)v28;
LABEL_25:
    sub_23F6B4F84(v42, v41);
    goto LABEL_26;
  }
  v37 = sub_23F6D3F0C();
  sub_23F6D3530(v37, v38, v39);
  sub_23F6B5164(v36, 1, v23);
  if (v40)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v2);
    sub_23F6D3D94(v77);
    goto LABEL_14;
  }
  v43 = v77;
  sub_23F6D3ECC(v1, v36, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v77 + 32));
  sub_23F6D3458(&qword_256EA2E08, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95D8], MEMORY[0x24BEB95E8]);
  v44 = sub_23F6B5624();
  v45 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
  v45(v1, v23);
  sub_23F6B62DC(v0);
  sub_23F6B62DC(v2);
  v45(v3, v23);
  sub_23F6B62DC((uint64_t)v28);
  if ((v44 & 1) == 0)
    goto LABEL_26;
LABEL_16:
  v46 = v74;
  sub_23F6D3740((uint64_t)&v78[v35[6]], v74);
  v47 = v73;
  sub_23F6D3740((uint64_t)&v79[v35[6]], v73);
  v48 = v75;
  v49 = v75 + *(int *)(v72 + 48);
  sub_23F6D3740(v46, v75);
  sub_23F6D3740(v47, v49);
  v50 = sub_23F6D3CB4();
  v51 = v76;
  sub_23F6B5164(v50, v52, v76);
  if (v34)
  {
    sub_23F6B6EF8(v47);
    sub_23F6B6EF8(v46);
    v53 = sub_23F6B5164(v49, 1, v51);
    if (v34)
    {
      sub_23F6D378C(v53, &qword_256EA2610);
LABEL_28:
      v60 = *(void (**)(uint64_t, char *, uint64_t))(v69 + 16);
      v61 = v67;
      v62 = v65;
      v60(v67, &v78[v35[7]], v65);
      v63 = v68;
      v60(v68, &v79[v35[7]], v62);
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6D37C8();
      sub_23F6D3874(v63);
      sub_23F6D3874(v61);
      goto LABEL_26;
    }
    goto LABEL_24;
  }
  v54 = v71;
  sub_23F6D3530(v48, v71, &qword_256EA2610);
  sub_23F6B5164(v49, 1, v51);
  if (v55)
  {
    sub_23F6B64F4(v47);
    sub_23F6B64F4(v46);
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v54, v51);
LABEL_24:
    v41 = &qword_256EA2618;
    v42 = v48;
    goto LABEL_25;
  }
  v56 = v70;
  v57 = v66;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 32))(v66, v49, v51);
  sub_23F6D3458(&qword_256EA2620, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95B0], MEMORY[0x24BEB95C8]);
  v58 = sub_23F6B5D44();
  v59 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
  v59(v57, v51);
  sub_23F6B6EF8(v47);
  sub_23F6B6EF8(v46);
  v59(v54, v51);
  sub_23F6B6EF8(v48);
  if ((v58 & 1) != 0)
    goto LABEL_28;
LABEL_26:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t ContextProtoDynamicEnumerationEntity.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for ContextProtoDynamicEnumerationEntity, &qword_256EA2E10, (uint64_t)&protocol conformance descriptor for ContextProtoDynamicEnumerationEntity);
}

unint64_t sub_23F6CA9FC()
{
  static ContextProtoDynamicEnumerationEntity.protoMessageName.getter();
  return 0xD000000000000020;
}

void sub_23F6CAA20()
{
  ContextProtoDynamicEnumerationEntity.decodeMessage<A>(decoder:)();
}

void sub_23F6CAA34()
{
  ContextProtoDynamicEnumerationEntity.traverse<A>(visitor:)();
}

uint64_t sub_23F6CAA48()
{
  sub_23F6D3458(&qword_256EA31C8, type metadata accessor for ContextProtoDynamicEnumerationEntity, (uint64_t)&protocol conformance descriptor for ContextProtoDynamicEnumerationEntity);
  return sub_23FB2D784();
}

uint64_t sub_23F6CAA9C()
{
  sub_23F6D3458(&qword_256EA2DC0, type metadata accessor for ContextProtoDynamicEnumerationEntity, (uint64_t)&protocol conformance descriptor for ContextProtoDynamicEnumerationEntity);
  return sub_23FB2D8F8();
}

uint64_t sub_23F6CAAE0()
{
  sub_23F6D3458(&qword_256EA2DC0, type metadata accessor for ContextProtoDynamicEnumerationEntity, (uint64_t)&protocol conformance descriptor for ContextProtoDynamicEnumerationEntity);
  return sub_23FB2D904();
}

unint64_t static ContextProtoRetrievedTool.protoMessageName.getter()
{
  return sub_23F6D3738(21);
}

uint64_t sub_23F6CAB4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EA2B98);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EA2B98);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1C0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "definition";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "similarityScore";
  *(_QWORD *)(v11 + 8) = 15;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "sampleInvocations";
  *((_QWORD *)v13 + 1) = 17;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "stage";
  *((_QWORD *)v15 + 1) = 5;
  v15[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static ContextProtoRetrievedTool._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F6BF3D8(&qword_256EA0A00, (uint64_t)qword_256EA2B98, a1);
}

void ContextProtoRetrievedTool.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;

  sub_23F6B5220();
  sub_23F6D356C();
  if (!v12)
  {
    while ((v13 & 1) == 0)
    {
      sub_23F6D3E98();
      if (!(!v24 & v23))
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_23F6CAD8C + 4 * byte_23FB4CB1F[v22]))(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10, a11, a12);
        return;
      }
      sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

uint64_t sub_23F6CADEC()
{
  type metadata accessor for ContextProtoSampleInvocation(0);
  sub_23F6D3458(&qword_256EA2E18, type metadata accessor for ContextProtoSampleInvocation, (uint64_t)&protocol conformance descriptor for ContextProtoSampleInvocation);
  return sub_23FB2D8A4();
}

void sub_23F6CAE6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  a5();
  sub_23FB2D7FC();
  sub_23F6D3674();
}

void ContextProtoRetrievedTool.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F6CAFD8(v0);
  if (!v1)
  {
    if (*(float *)v0 != 0.0)
      sub_23F6D3AC4();
    if (*(_QWORD *)(*(_QWORD *)(v0 + 8) + 16))
    {
      type metadata accessor for ContextProtoSampleInvocation(0);
      sub_23F6D3458(&qword_256EA2E18, type metadata accessor for ContextProtoSampleInvocation, (uint64_t)&protocol conformance descriptor for ContextProtoSampleInvocation);
      sub_23F6D3E38();
      sub_23F6D36E4();
    }
    if (*(_BYTE *)(v0 + 16))
    {
      sub_23F6D1EB4();
      sub_23F6D39A8();
    }
    type metadata accessor for ContextProtoRetrievedTool(0);
    sub_23F6D37BC();
  }
  sub_23F6D3BB8();
}

void sub_23F6CAFD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA2588);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ContextProtoRetrievedTool(0);
  sub_23F6D3530(a1 + *(int *)(v8 + 28), (uint64_t)v4, &qword_256EA2588);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA2588);
  }
  else
  {
    sub_23F6D34D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for ContextProtoRetrievedTool.Definition);
    sub_23F6D3458(&qword_256EA30A8, type metadata accessor for ContextProtoRetrievedTool.Definition, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool.Definition);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for ContextProtoRetrievedTool.Definition);
  }
}

void static ContextProtoRetrievedTool.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  float *v4;
  float *v5;
  float *v6;
  float *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float *v33;
  float *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  float *v42;
  float *v43;

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  v8 = sub_23F6B53A4();
  v40 = *(_QWORD *)(v8 - 8);
  v41 = v8;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F693E0C();
  v39 = v10;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v11);
  v38 = (uint64_t)&v38 - v12;
  v13 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B5268();
  v15 = sub_23F6916B8(&qword_256EA2590);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA2588);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B65E0();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6D3BD8();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v38 - v20;
  v22 = type metadata accessor for ContextProtoRetrievedTool(0);
  v23 = *(int *)(v22 + 28);
  v42 = v7;
  v24 = (uint64_t)v7 + v23;
  v25 = v22;
  sub_23F6D3D48(v24, (uint64_t)v21);
  v26 = *(int *)(v25 + 28);
  v43 = v5;
  sub_23F6D3D48((uint64_t)v5 + v26, v0);
  v27 = v1 + *(int *)(v15 + 48);
  sub_23F6D3D48((uint64_t)v21, v1);
  sub_23F6D3D48(v0, v27);
  sub_23F6B5164(v1, 1, v13);
  if (!v30)
  {
    sub_23F6D3CD8(v1, v28, &qword_256EA2588);
    sub_23F6B5164(v27, 1, v13);
    if (!v30)
    {
      sub_23F6D34D0(v27, v2, type metadata accessor for ContextProtoRetrievedTool.Definition);
      sub_23F6D3F0C();
      static ContextProtoRetrievedTool.Definition.== infix(_:_:)();
      v32 = v31;
      sub_23F6D3508(v2, type metadata accessor for ContextProtoRetrievedTool.Definition);
      sub_23F6D387C(v0);
      sub_23F6D387C((uint64_t)v21);
      sub_23F6D3508(v3, type metadata accessor for ContextProtoRetrievedTool.Definition);
      sub_23F6D387C(v1);
      if ((v32 & 1) == 0)
        goto LABEL_15;
      goto LABEL_11;
    }
    sub_23F6D3748(v0);
    sub_23F6D3748((uint64_t)v21);
    sub_23F6D3508(v3, type metadata accessor for ContextProtoRetrievedTool.Definition);
LABEL_9:
    sub_23F6D378C(v29, &qword_256EA2590);
    goto LABEL_15;
  }
  sub_23F6D3C1C(v0);
  sub_23F6D3C1C((uint64_t)v21);
  v29 = sub_23F6B5164(v27, 1, v13);
  if (!v30)
    goto LABEL_9;
  sub_23F6D378C(v29, &qword_256EA2588);
LABEL_11:
  v33 = v42;
  v34 = v43;
  if (*v42 == *v43)
  {
    sub_23F698510();
    if ((v35 & 1) != 0 && *((unsigned __int8 *)v33 + 16) == *((unsigned __int8 *)v34 + 16))
    {
      v36 = v38;
      sub_23F6D3818(v38, (uint64_t)v33 + *(int *)(v25 + 32));
      v37 = v39;
      sub_23F6D3818(v39, (uint64_t)v34 + *(int *)(v25 + 32));
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6D37C8();
      sub_23F6D3874(v37);
      sub_23F6D3874(v36);
    }
  }
LABEL_15:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t ContextProtoRetrievedTool.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for ContextProtoRetrievedTool, &qword_256EA2E28, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool);
}

unint64_t sub_23F6CB474()
{
  static ContextProtoRetrievedTool.protoMessageName.getter();
  return 0xD000000000000015;
}

#error "23F6CB4A0: call analysis failed (funcsize=5)"

void sub_23F6CB4AC()
{
  ContextProtoRetrievedTool.traverse<A>(visitor:)();
}

uint64_t sub_23F6CB4C0()
{
  sub_23F6D3458(&qword_256EA31C0, type metadata accessor for ContextProtoRetrievedTool, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool);
  return sub_23FB2D784();
}

uint64_t sub_23F6CB514()
{
  sub_23F6D3458(&qword_256EA2E80, type metadata accessor for ContextProtoRetrievedTool, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool);
  return sub_23FB2D8F8();
}

uint64_t sub_23F6CB558()
{
  sub_23F6D3458(&qword_256EA2E80, type metadata accessor for ContextProtoRetrievedTool, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool);
  return sub_23FB2D904();
}

uint64_t sub_23F6CB5AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EA2BB0);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EA2BB0);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "one";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "two";
  *((_QWORD *)v11 + 1) = 3;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "three";
  *((_QWORD *)v13 + 1) = 5;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static ContextProtoRetrievedTool.Stage._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F6BF3D8(&qword_256EA0A08, (uint64_t)qword_256EA2BB0, a1);
}

uint64_t sub_23F6CB760()
{
  uint64_t result;

  result = sub_23FB2F254();
  qword_256EA2BC8 = 0xD000000000000015;
  unk_256EA2BD0 = 0x800000023FB31200;
  return result;
}

uint64_t static ContextProtoRetrievedTool.Definition.protoMessageName.getter()
{
  uint64_t v0;

  if (qword_256EA0A10 != -1)
    swift_once();
  v0 = qword_256EA2BC8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_23F6CB82C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EA2BD8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EA2BD8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1C0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "implementation";
  *(_QWORD *)(v7 + 8) = 14;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "assistantSchema";
  *(_QWORD *)(v11 + 8) = 15;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "entitySetter";
  *((_QWORD *)v13 + 1) = 12;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "clientAction";
  *((_QWORD *)v15 + 1) = 12;
  v15[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static ContextProtoRetrievedTool.Definition._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F6BF3D8(&qword_256EA0A18, (uint64_t)qword_256EA2BD8, a1);
}

void ContextProtoRetrievedTool.Definition.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  char v1;
  char v3;
  char v4;

  sub_23F6D356C();
  if (!v0)
  {
    while ((v1 & 1) == 0)
    {
      sub_23F6D3E98();
      if (!(!v4 & v3))
        __asm { BR              X9 }
      sub_23F6D35E8();
    }
  }
  sub_23F6D377C();
}

void sub_23F6CBAB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v37 = a2;
  v39 = a4;
  v38 = a3;
  v5 = sub_23FB2EBC4();
  v35 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v34 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v31 - v8;
  v10 = sub_23F6916B8(&qword_256EA2578);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v31 - v17;
  v19 = sub_23F6916B8(&qword_256EA3268);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  v32 = a1;
  sub_23F6D3530(a1, (uint64_t)v12, &qword_256EA2578);
  v33 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v33 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA2578);
    v25 = v13;
  }
  else
  {
    sub_23F6D34D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    sub_23F6D34D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    }
    else
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EA3268);
      v26 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
      v26(v9, v16, v5);
      v26(v24, v9, v5);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
  }
  v27 = v36;
  sub_23F6D3458(&qword_256EA3258, (uint64_t (*)(uint64_t))MEMORY[0x24BEB96E0], MEMORY[0x24BEB96C8]);
  sub_23FB2D8B0();
  if (v27)
  {
    v28 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v28, &qword_256EA3268);
    return;
  }
  sub_23F6D3530((uint64_t)v24, (uint64_t)v22, &qword_256EA3268);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EA3268);
    v28 = (uint64_t)v22;
    goto LABEL_10;
  }
  v29 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
  v29(v34, v22, v5);
  if (v33 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EA3268);
  v30 = v32;
  sub_23F6B4F84(v32, &qword_256EA2578);
  v29((char *)v30, v34, v5);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v30, 0, 1, v25);
}

void sub_23F6CBE94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v37 = a2;
  v39 = a4;
  v38 = a3;
  v5 = sub_23FB2EB94();
  v35 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v34 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v31 - v8;
  v10 = sub_23F6916B8(&qword_256EA2578);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v31 - v17;
  v19 = sub_23F6916B8(&qword_256EA3270);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  v32 = a1;
  sub_23F6D3530(a1, (uint64_t)v12, &qword_256EA2578);
  v33 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v33 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA2578);
    v25 = v13;
  }
  else
  {
    sub_23F6D34D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    sub_23F6D34D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EA3270);
      v26 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
      v26(v9, v16, v5);
      v26(v24, v9, v5);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    }
  }
  v27 = v36;
  sub_23F6D3458(&qword_256EA3260, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9698], MEMORY[0x24BEB9688]);
  sub_23FB2D8B0();
  if (v27)
  {
    v28 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v28, &qword_256EA3270);
    return;
  }
  sub_23F6D3530((uint64_t)v24, (uint64_t)v22, &qword_256EA3270);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EA3270);
    v28 = (uint64_t)v22;
    goto LABEL_10;
  }
  v29 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
  v29(v34, v22, v5);
  if (v33 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EA3270);
  v30 = v32;
  sub_23F6B4F84(v32, &qword_256EA2578);
  v29((char *)v30, v34, v5);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v30, 0, 1, v25);
}

void sub_23F6CC27C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v37 = a2;
  v39 = a4;
  v38 = a3;
  v5 = sub_23FB2EBC4();
  v35 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v34 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v31 - v8;
  v10 = sub_23F6916B8(&qword_256EA2578);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v31 - v17;
  v19 = sub_23F6916B8(&qword_256EA3268);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  v32 = a1;
  sub_23F6D3530(a1, (uint64_t)v12, &qword_256EA2578);
  v33 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v33 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA2578);
    v25 = v13;
  }
  else
  {
    sub_23F6D34D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    sub_23F6D34D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EA3268);
      v26 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
      v26(v9, v16, v5);
      v26(v24, v9, v5);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    }
  }
  v27 = v36;
  sub_23F6D3458(&qword_256EA3258, (uint64_t (*)(uint64_t))MEMORY[0x24BEB96E0], MEMORY[0x24BEB96C8]);
  sub_23FB2D8B0();
  if (v27)
  {
    v28 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v28, &qword_256EA3268);
    return;
  }
  sub_23F6D3530((uint64_t)v24, (uint64_t)v22, &qword_256EA3268);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EA3268);
    v28 = (uint64_t)v22;
    goto LABEL_10;
  }
  v29 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
  v29(v34, v22, v5);
  if (v33 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EA3268);
  v30 = v32;
  sub_23F6B4F84(v32, &qword_256EA2578);
  v29((char *)v30, v34, v5);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v30, 0, 1, v25);
}

void sub_23F6CC664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v37 = a2;
  v39 = a4;
  v38 = a3;
  v5 = sub_23FB2EBC4();
  v35 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v34 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v31 - v8;
  v10 = sub_23F6916B8(&qword_256EA2578);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v31 - v17;
  v19 = sub_23F6916B8(&qword_256EA3268);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  v32 = a1;
  sub_23F6D3530(a1, (uint64_t)v12, &qword_256EA2578);
  v33 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v33 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA2578);
    v25 = v13;
  }
  else
  {
    sub_23F6D34D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    sub_23F6D34D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EA3268);
      v26 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
      v26(v9, v16, v5);
      v26(v24, v9, v5);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    }
  }
  v27 = v36;
  sub_23F6D3458(&qword_256EA3258, (uint64_t (*)(uint64_t))MEMORY[0x24BEB96E0], MEMORY[0x24BEB96C8]);
  sub_23FB2D8B0();
  if (v27)
  {
    v28 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v28, &qword_256EA3268);
    return;
  }
  sub_23F6D3530((uint64_t)v24, (uint64_t)v22, &qword_256EA3268);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EA3268);
    v28 = (uint64_t)v22;
    goto LABEL_10;
  }
  v29 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
  v29(v34, v22, v5);
  if (v33 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EA3268);
  v30 = v32;
  sub_23F6B4F84(v32, &qword_256EA2578);
  v29((char *)v30, v34, v5);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v30, 0, 1, v25);
}

void ContextProtoRetrievedTool.Definition.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_23F6D3DC4();
  sub_23F6916B8(&qword_256EA2578);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B53AC();
  sub_23F6D3530(v10, v11, &qword_256EA2578);
  v13 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v11, 1, v13) == 1)
  {
    type metadata accessor for ContextProtoRetrievedTool.Definition(0);
    sub_23F6D3F2C();
    sub_23F6D3A68();
    sub_23F6D3710();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_23F6CCAF4 + 4 * byte_23FB4CB27[EnumCaseMultiPayload]))(EnumCaseMultiPayload, v15, v16, v17, v18, v19, v20, v21, a9, a10);
  }
}

void sub_23F6CCB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v13[2];

  v13[1] = a4;
  v5 = sub_23F6916B8(&qword_256EA2578);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23FB2EBC4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6D3530(a1, (uint64_t)v7, &qword_256EA2578);
  v12 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v12) == 1)
  {
    sub_23F6B4F84((uint64_t)v7, &qword_256EA2578);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      sub_23F6D3458(&qword_256EA3258, (uint64_t (*)(uint64_t))MEMORY[0x24BEB96E0], MEMORY[0x24BEB96C8]);
      sub_23FB2D9D0();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      return;
    }
    sub_23F6D3508((uint64_t)v7, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
  }
  __break(1u);
}

void sub_23F6CCCF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v13[2];

  v13[1] = a4;
  v5 = sub_23F6916B8(&qword_256EA2578);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23FB2EB94();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6D3530(a1, (uint64_t)v7, &qword_256EA2578);
  v12 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v12) == 1)
  {
    sub_23F6B4F84((uint64_t)v7, &qword_256EA2578);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      sub_23F6D3458(&qword_256EA3260, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9698], MEMORY[0x24BEB9688]);
      sub_23FB2D9D0();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      return;
    }
    sub_23F6D3508((uint64_t)v7, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
  }
  __break(1u);
}

void sub_23F6CCE94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v13[2];

  v13[1] = a4;
  v5 = sub_23F6916B8(&qword_256EA2578);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23FB2EBC4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6D3530(a1, (uint64_t)v7, &qword_256EA2578);
  v12 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v12) == 1)
  {
    sub_23F6B4F84((uint64_t)v7, &qword_256EA2578);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      sub_23F6D3458(&qword_256EA3258, (uint64_t (*)(uint64_t))MEMORY[0x24BEB96E0], MEMORY[0x24BEB96C8]);
      sub_23FB2D9D0();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      return;
    }
    sub_23F6D3508((uint64_t)v7, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
  }
  __break(1u);
}

void sub_23F6CD030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v13[2];

  v13[1] = a4;
  v5 = sub_23F6916B8(&qword_256EA2578);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23FB2EBC4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6D3530(a1, (uint64_t)v7, &qword_256EA2578);
  v12 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v12) == 1)
  {
    sub_23F6B4F84((uint64_t)v7, &qword_256EA2578);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      sub_23F6D3458(&qword_256EA3258, (uint64_t (*)(uint64_t))MEMORY[0x24BEB96E0], MEMORY[0x24BEB96C8]);
      sub_23FB2D9D0();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      return;
    }
    sub_23F6D3508((uint64_t)v7, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
  }
  __break(1u);
}

void static ContextProtoRetrievedTool.Definition.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40[6];

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  v40[0] = sub_23F6B53A4();
  v40[5] = *(_QWORD *)(v40[0] - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  v40[4] = (uint64_t)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v19 = sub_23F6D38F8(v11, v12, v13, v14, v15, v16, v17, v18, v40[0]);
  v20 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(v19);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B59E0();
  v22 = sub_23F6916B8(&qword_256EA2580);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F6D3A70();
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)v40 - v27;
  v40[1] = v7;
  sub_23F6D3764(v7, (uint64_t)v40 - v27);
  v40[3] = v5;
  sub_23F6D3764(v5, v0);
  v29 = v1 + *(int *)(v22 + 48);
  sub_23F6D3764((uint64_t)v28, v1);
  sub_23F6D3764(v0, v29);
  v30 = sub_23F6B5164(v1, 1, v20);
  if (v33)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4((uint64_t)v28);
    v32 = sub_23F6B5164(v29, 1, v20);
    if (v33)
    {
      sub_23F6D378C(v32, &qword_256EA2578);
LABEL_11:
      v39 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
      sub_23F6D3794(v39);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6B5624();
      sub_23F6D39FC(v1);
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F6D3938(v30, v31, &qword_256EA2578);
  sub_23F6B5164(v29, 1, v20);
  if (v33)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4((uint64_t)v28);
    sub_23F6D3C24(v34, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
LABEL_9:
    sub_23F6D378C(v32, &qword_256EA2580);
    goto LABEL_12;
  }
  sub_23F6D3A5C(v29);
  v35 = sub_23F6D3D70();
  static ContextProtoRetrievedTool.ContextProtoDefinitionEnum.== infix(_:_:)(v35, v36);
  v38 = v37;
  sub_23F6D3928(v2);
  sub_23F6D38A8(v0);
  sub_23F6D38A8((uint64_t)v28);
  sub_23F6D3928(v3);
  sub_23F6D38A8(v1);
  if ((v38 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F693DDC();
}

uint64_t ContextProtoRetrievedTool.Definition.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for ContextProtoRetrievedTool.Definition, &qword_256EA2E30, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool.Definition);
}

void sub_23F6CD478()
{
  ContextProtoRetrievedTool.Definition.decodeMessage<A>(decoder:)();
}

void sub_23F6CD48C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  ContextProtoRetrievedTool.Definition.traverse<A>(visitor:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_23F6CD4A0()
{
  sub_23F6D3458(&qword_256EA31B8, type metadata accessor for ContextProtoRetrievedTool.Definition, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool.Definition);
  return sub_23FB2D784();
}

uint64_t sub_23F6CD4F4()
{
  sub_23F6D3458(&qword_256EA30A8, type metadata accessor for ContextProtoRetrievedTool.Definition, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool.Definition);
  return sub_23FB2D8F8();
}

uint64_t sub_23F6CD538()
{
  sub_23F6D3458(&qword_256EA30A8, type metadata accessor for ContextProtoRetrievedTool.Definition, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool.Definition);
  return sub_23FB2D904();
}

unint64_t static ContextProtoSampleInvocation.protoMessageName.getter()
{
  return sub_23F6D3738(24);
}

uint64_t sub_23F6CD5A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EA2BF0);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EA2BF0);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "invocationString";
  *(_QWORD *)(v7 + 8) = 16;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "score";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static ContextProtoSampleInvocation._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F6BF3D8(&qword_256EA0A20, (uint64_t)qword_256EA2BF0, a1);
}

void ContextProtoSampleInvocation.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_23F6D3A50();
      }
      else if (v1 == 1)
      {
        sub_23F6D395C();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D377C();
}

void ContextProtoSampleInvocation.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6D36FC();
  if (!v2 || (sub_23F6D3944(), !v1))
  {
    if (*(float *)(v0 + 16) == 0.0 || (sub_23F6D3BEC(), !v1))
    {
      type metadata accessor for ContextProtoSampleInvocation(0);
      sub_23F6D37E0();
    }
  }
  sub_23F6D3674();
}

void static ContextProtoSampleInvocation.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F6D36BC();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6D3834();
  v7 = v7 && v5 == v6;
  if ((v7 || (sub_23F6B5280() & 1) != 0) && *(float *)(v2 + 16) == *(float *)(v1 + 16))
  {
    v8 = type metadata accessor for ContextProtoSampleInvocation(0);
    sub_23F6D3614(*(int *)(v8 + 24));
    sub_23F6D36AC(*(int *)(v8 + 24));
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F6D3600();
    sub_23F6D36D0();
    sub_23F6D3820(v0);
  }
  sub_23F6D3B34();
  sub_23F6B69E0();
}

uint64_t ContextProtoSampleInvocation.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for ContextProtoSampleInvocation, &qword_256EA2E38, (uint64_t)&protocol conformance descriptor for ContextProtoSampleInvocation);
}

unint64_t sub_23F6CD8CC()
{
  static ContextProtoSampleInvocation.protoMessageName.getter();
  return 0xD000000000000018;
}

void sub_23F6CD8F0()
{
  ContextProtoSampleInvocation.decodeMessage<A>(decoder:)();
}

void sub_23F6CD904()
{
  ContextProtoSampleInvocation.traverse<A>(visitor:)();
}

uint64_t sub_23F6CD918()
{
  sub_23F6D3458(&qword_256EA31B0, type metadata accessor for ContextProtoSampleInvocation, (uint64_t)&protocol conformance descriptor for ContextProtoSampleInvocation);
  return sub_23FB2D784();
}

uint64_t sub_23F6CD96C()
{
  sub_23F6D3458(&qword_256EA2E18, type metadata accessor for ContextProtoSampleInvocation, (uint64_t)&protocol conformance descriptor for ContextProtoSampleInvocation);
  return sub_23FB2D8F8();
}

uint64_t sub_23F6CD9B0()
{
  sub_23F6D3458(&qword_256EA2E18, type metadata accessor for ContextProtoSampleInvocation, (uint64_t)&protocol conformance descriptor for ContextProtoSampleInvocation);
  return sub_23FB2D904();
}

unint64_t static ContextProtoToolRetrievalType.protoMessageName.getter()
{
  return sub_23F6D3738(25);
}

uint64_t sub_23F6CDA1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EA2C08);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EA2C08);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "identifier";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "definition";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static ContextProtoToolRetrievalType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F6BF3D8(&qword_256EA0A28, (uint64_t)qword_256EA2C08, a1);
}

void ContextProtoToolRetrievalType.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_23F6D3598();
        sub_23F6C2F3C();
      }
      else if (v1 == 1)
      {
        sub_23F6D3598();
        sub_23F6CEB4C();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void ContextProtoToolRetrievalType.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = sub_23F6D3AF8();
  sub_23F6CDC9C(v1, v2, v3, v4);
  if (!v0)
  {
    v5 = sub_23F6D3D50();
    sub_23F6CDE04(v5, v6, v7, v8);
    type metadata accessor for ContextProtoToolRetrievalType(0);
    sub_23F6D3A68();
  }
  sub_23F6D3674();
}

void sub_23F6CDC9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD v12[2];

  v12[1] = a4;
  v5 = sub_23F6916B8(&qword_256EA2E58);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23FB2EB40();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v12 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6D3530(a1, (uint64_t)v7, &qword_256EA2E58);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v7, &qword_256EA2E58);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    sub_23F6D3458(&qword_256EA2DE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9618], MEMORY[0x24BEB9610]);
    sub_23FB2D9D0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

void sub_23F6CDE04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v13[2];

  v13[1] = a4;
  v5 = sub_23F6916B8(&qword_256EA2E48);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23FB2EB34();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ContextProtoToolRetrievalType(0);
  sub_23F6D3530(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256EA2E48);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v7, &qword_256EA2E48);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    sub_23F6D3458(&qword_256EA3250, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95F8], MEMORY[0x24BEB95F0]);
    sub_23FB2D9D0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

void static ContextProtoToolRetrievalType.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  v8 = sub_23F6B53A4();
  v66 = *(_QWORD *)(v8 - 8);
  v67 = v8;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F693E0C();
  v65 = v10;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B6580();
  v64 = v12;
  sub_23F6D398C();
  v72 = sub_23FB2EB34();
  v68 = *(_QWORD *)(v72 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B5560(v14, v62);
  v70 = sub_23F6916B8(&qword_256EA2E40);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B57F4(v16, v62);
  sub_23F6916B8(&qword_256EA2E48);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  v69 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F6D3D14();
  v75 = v20;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B6580();
  v76 = v22;
  sub_23F6D398C();
  v23 = sub_23FB2EB40();
  v77 = *(_QWORD *)(v23 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6B5298();
  v25 = sub_23F6916B8(&qword_256EA2E50);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA2E58);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F6B65FC();
  v29 = MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v62 - v30;
  MEMORY[0x24BDAC7A8](v29);
  sub_23F6B6B3C();
  v73 = v7;
  sub_23F6D3DBC(v7, v3);
  v74 = v5;
  sub_23F6D3DBC(v5, (uint64_t)v31);
  v32 = v1 + *(int *)(v25 + 48);
  sub_23F6D3DBC(v3, v1);
  sub_23F6D3DBC((uint64_t)v31, v32);
  v33 = sub_23F6D3CB4();
  v35 = sub_23F6B5164(v33, v34, v23);
  if (v38)
  {
    sub_23F6B64F4((uint64_t)v31);
    sub_23F6B64F4(v3);
    v37 = sub_23F6B5164(v32, 1, v23);
    if (v38)
    {
      sub_23F6D378C(v37, &qword_256EA2E58);
      goto LABEL_11;
    }
LABEL_9:
    v39 = &qword_256EA2E50;
    v40 = v1;
LABEL_20:
    sub_23F6B4F84(v40, v39);
    goto LABEL_21;
  }
  sub_23F6D3938(v35, v36, &qword_256EA2E58);
  sub_23F6B5164(v32, 1, v23);
  if (v38)
  {
    sub_23F6B64F4((uint64_t)v31);
    sub_23F6B64F4(v3);
    sub_23F6D3D94(v77);
    goto LABEL_9;
  }
  v41 = v77;
  sub_23F6D3ECC(v0, v32, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v77 + 32));
  sub_23F6D3458(&qword_256EA27F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9618], MEMORY[0x24BEB9628]);
  v42 = sub_23F6B5624();
  v43 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
  v43(v0, v23);
  sub_23F6B64F4((uint64_t)v31);
  sub_23F6B64F4(v3);
  v43(v2, v23);
  sub_23F6B64F4(v1);
  if ((v42 & 1) == 0)
    goto LABEL_21;
LABEL_11:
  v44 = type metadata accessor for ContextProtoToolRetrievalType(0);
  v45 = v73;
  v46 = v76;
  sub_23F6D36F4(v73 + *(int *)(v44 + 20), v76);
  v47 = v74;
  v48 = v75;
  sub_23F6D36F4(v74 + *(int *)(v44 + 20), v75);
  v49 = v71;
  v50 = v71 + *(int *)(v70 + 48);
  sub_23F6D36F4(v46, v71);
  sub_23F6D36F4(v48, v50);
  v51 = v72;
  sub_23F6B5164(v49, 1, v72);
  if (v38)
  {
    sub_23F6D3748(v48);
    sub_23F6D3748(v46);
    sub_23F6B5164(v50, 1, v51);
    if (v38)
    {
      sub_23F6B4F84(v49, &qword_256EA2E48);
LABEL_23:
      v59 = v64;
      sub_23F6D3818(v64, v45 + *(int *)(v44 + 24));
      v60 = v47 + *(int *)(v44 + 24);
      v61 = v65;
      sub_23F6D3818(v65, v60);
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6D3B94();
      sub_23F6D37C8();
      sub_23F6D3874(v61);
      sub_23F6D3874(v59);
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  v53 = v69;
  sub_23F6D3CD8(v49, v52, &qword_256EA2E48);
  sub_23F6B5164(v50, 1, v51);
  if (v54)
  {
    sub_23F6B64F4(v48);
    sub_23F6B64F4(v46);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v53, v51);
LABEL_19:
    v39 = &qword_256EA2E40;
    v40 = v49;
    goto LABEL_20;
  }
  v55 = v68;
  v56 = v63;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 32))(v63, v50, v51);
  sub_23F6D3458(&qword_256EA2E60, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95F8], MEMORY[0x24BEB9608]);
  sub_23F6D3F0C();
  v57 = sub_23FB2F11C();
  v58 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
  v58(v56, v51);
  sub_23F6D3748(v75);
  sub_23F6D3748(v76);
  v58((uint64_t)v53, v51);
  sub_23F6D3748(v49);
  if ((v57 & 1) != 0)
    goto LABEL_23;
LABEL_21:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t ContextProtoToolRetrievalType.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for ContextProtoToolRetrievalType, &qword_256EA2E68, (uint64_t)&protocol conformance descriptor for ContextProtoToolRetrievalType);
}

unint64_t sub_23F6CE4C8()
{
  static ContextProtoToolRetrievalType.protoMessageName.getter();
  return 0xD000000000000019;
}

void sub_23F6CE4EC()
{
  ContextProtoToolRetrievalType.decodeMessage<A>(decoder:)();
}

void sub_23F6CE500()
{
  ContextProtoToolRetrievalType.traverse<A>(visitor:)();
}

uint64_t sub_23F6CE514()
{
  sub_23F6D3458(&qword_256EA31A8, type metadata accessor for ContextProtoToolRetrievalType, (uint64_t)&protocol conformance descriptor for ContextProtoToolRetrievalType);
  return sub_23FB2D784();
}

uint64_t sub_23F6CE568()
{
  sub_23F6D3458(&qword_256EA2E88, type metadata accessor for ContextProtoToolRetrievalType, (uint64_t)&protocol conformance descriptor for ContextProtoToolRetrievalType);
  return sub_23FB2D8F8();
}

uint64_t sub_23F6CE5AC()
{
  sub_23F6D3458(&qword_256EA2E88, type metadata accessor for ContextProtoToolRetrievalType, (uint64_t)&protocol conformance descriptor for ContextProtoToolRetrievalType);
  return sub_23FB2D904();
}

unint64_t static ContextProtoToolQuery.protoMessageName.getter()
{
  return sub_23F6D3738(17);
}

uint64_t sub_23F6CE618(uint64_t a1)
{
  return sub_23F6CE638(a1, (uint64_t)&unk_256EA2C20, (uint64_t)"query", (uint64_t)"appBundleIds", 12);
}

uint64_t sub_23F6CE638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v7 = sub_23F6D3EB8();
  sub_23F6D3418(v7, v5);
  sub_23F6BF1A4(v7, (uint64_t)v5);
  sub_23F6916B8(&qword_256EA3238);
  v8 = sub_23F6916B8(&qword_256EA3240);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_23FB47020;
  v13 = (_QWORD *)(v12 + v11);
  v14 = v12 + v11 + *(int *)(v8 + 48);
  *v13 = 1;
  *(_QWORD *)v14 = a3;
  *(_QWORD *)(v14 + 8) = 5;
  *(_BYTE *)(v14 + 16) = 2;
  sub_23FB2D9DC();
  sub_23F6D3F54(v14);
  v15 = (uint64_t)v13 + v10 + *(int *)(v8 + 48);
  *(_QWORD *)((char *)v13 + v10) = 2;
  *(_QWORD *)v15 = a4;
  *(_QWORD *)(v15 + 8) = a5;
  *(_BYTE *)(v15 + 16) = 2;
  sub_23F6D3F54(v15);
  return sub_23FB2D9E8();
}

uint64_t static ContextProtoToolQuery._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F6BF3D8(&qword_256EA0A30, (uint64_t)&unk_256EA2C20, a1);
}

void ContextProtoToolQuery.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_23F6D3CC0();
      }
      else if (v1 == 1)
      {
        sub_23F6D395C();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D377C();
}

void ContextProtoToolQuery.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1;
  sub_23F6D36FC();
  if (!v3 || (sub_23F6D3944(), (v2 = v1) == 0))
  {
    if (!*(_QWORD *)(*(_QWORD *)(v0 + 16) + 16) || (sub_23F6D35F4(), sub_23FB2D988(), !v2))
    {
      type metadata accessor for ContextProtoToolQuery(0);
      sub_23F6D37E0();
    }
  }
  sub_23F6D3674();
}

void static ContextProtoToolQuery.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t v9;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F6D36BC();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6D3834();
  v7 = v7 && v5 == v6;
  if (v7 || (sub_23F6B5280() & 1) != 0)
  {
    sub_23F6957CC(*(_QWORD **)(v2 + 16), *(_QWORD **)(v1 + 16));
    if ((v8 & 1) != 0)
    {
      v9 = type metadata accessor for ContextProtoToolQuery(0);
      sub_23F6D3614(*(int *)(v9 + 24));
      sub_23F6D36AC(*(int *)(v9 + 24));
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6D3600();
      sub_23F6D36D0();
      sub_23F6D3820(v0);
    }
  }
  sub_23F6D3B34();
  sub_23F6B69E0();
}

uint64_t ContextProtoToolQuery.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for ContextProtoToolQuery, &qword_256EA2E70, (uint64_t)&protocol conformance descriptor for ContextProtoToolQuery);
}

unint64_t sub_23F6CE954()
{
  static ContextProtoToolQuery.protoMessageName.getter();
  return 0xD000000000000011;
}

void sub_23F6CE978()
{
  ContextProtoToolQuery.decodeMessage<A>(decoder:)();
}

void sub_23F6CE98C()
{
  ContextProtoToolQuery.traverse<A>(visitor:)();
}

uint64_t sub_23F6CE9A0()
{
  sub_23F6D3458(&qword_256EA31A0, type metadata accessor for ContextProtoToolQuery, (uint64_t)&protocol conformance descriptor for ContextProtoToolQuery);
  return sub_23FB2D784();
}

uint64_t sub_23F6CE9F4()
{
  sub_23F6D3458(&qword_256EA30E0, type metadata accessor for ContextProtoToolQuery, (uint64_t)&protocol conformance descriptor for ContextProtoToolQuery);
  return sub_23FB2D8F8();
}

uint64_t sub_23F6CEA38()
{
  sub_23F6D3458(&qword_256EA30E0, type metadata accessor for ContextProtoToolQuery, (uint64_t)&protocol conformance descriptor for ContextProtoToolQuery);
  return sub_23FB2D904();
}

unint64_t static ContextProtoToolQueryOutput.protoMessageName.getter()
{
  return sub_23F6D3738(23);
}

uint64_t sub_23F6CEAA4(uint64_t a1)
{
  return sub_23F6D18E8(a1, (uint64_t)&unk_256EA2C38, (uint64_t)"definition", 10);
}

uint64_t static ContextProtoToolQueryOutput._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F6BF3D8(&qword_256EA0A38, (uint64_t)&unk_256EA2C38, a1);
}

void ContextProtoToolQueryOutput.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6D3EA4();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 1)
        sub_23F6CEB4C();
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D3750();
}

void sub_23F6CEB4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  sub_23F6B5220();
  sub_23F6D3628(v0, v1, v2, v3, v4);
  sub_23F6D3724();
  sub_23F6D3644();
  sub_23F6B5100();
}

void ContextProtoToolQueryOutput.traverse<A>(visitor:)()
{
  sub_23F6CEBA4();
}

void sub_23F6CEBA4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_QWORD);
  void (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);

  sub_23F6D3EA4();
  v3 = v2;
  v7(v0, v4, v5, v6);
  if (!v1)
  {
    v3(0);
    sub_23F6D3F2C();
    sub_23F6D3A68();
  }
  sub_23F6D3750();
}

void sub_23F6CEC10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v8[2];

  v2 = sub_23F6916B8(&qword_256EA2588);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6D3530(a1, (uint64_t)v4, &qword_256EA2588);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA2588);
  }
  else
  {
    sub_23F6D34D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for ContextProtoRetrievedTool.Definition);
    sub_23F6D3458(&qword_256EA30A8, type metadata accessor for ContextProtoRetrievedTool.Definition, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool.Definition);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for ContextProtoRetrievedTool.Definition);
  }
}

void static ContextProtoToolQueryOutput.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t Output;
  uint64_t v38[6];

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  v38[0] = sub_23F6B53A4();
  v38[5] = *(_QWORD *)(v38[0] - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  v38[4] = (uint64_t)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v19 = sub_23F6D38F8(v11, v12, v13, v14, v15, v16, v17, v18, v38[0]);
  v20 = type metadata accessor for ContextProtoRetrievedTool.Definition(v19);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B59E0();
  v22 = sub_23F6916B8(&qword_256EA2590);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F6D3A70();
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)v38 - v27;
  v38[1] = v7;
  sub_23F6D3764(v7, (uint64_t)v38 - v27);
  v38[3] = v5;
  sub_23F6D3764(v5, v0);
  v29 = v1 + *(int *)(v22 + 48);
  sub_23F6D3764((uint64_t)v28, v1);
  sub_23F6D3764(v0, v29);
  v30 = sub_23F6B5164(v1, 1, v20);
  if (v33)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4((uint64_t)v28);
    v32 = sub_23F6B5164(v29, 1, v20);
    if (v33)
    {
      sub_23F6D378C(v32, &qword_256EA2588);
LABEL_11:
      Output = type metadata accessor for ContextProtoToolQueryOutput(0);
      sub_23F6D3794(Output);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6B5624();
      sub_23F6D39FC(v1);
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F6D3938(v30, v31, &qword_256EA2588);
  sub_23F6B5164(v29, 1, v20);
  if (v33)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4((uint64_t)v28);
    sub_23F6D3C24(v34, type metadata accessor for ContextProtoRetrievedTool.Definition);
LABEL_9:
    sub_23F6D378C(v32, &qword_256EA2590);
    goto LABEL_12;
  }
  sub_23F6D3A5C(v29);
  sub_23F6D3D70();
  static ContextProtoRetrievedTool.Definition.== infix(_:_:)();
  v36 = v35;
  sub_23F6D3928(v2);
  sub_23F6D38A8(v0);
  sub_23F6D38A8((uint64_t)v28);
  sub_23F6D3928(v3);
  sub_23F6D38A8(v1);
  if ((v36 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F693DDC();
}

uint64_t ContextProtoToolQueryOutput.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for ContextProtoToolQueryOutput, &qword_256EA2E78, (uint64_t)&protocol conformance descriptor for ContextProtoToolQueryOutput);
}

unint64_t sub_23F6CF014()
{
  static ContextProtoToolQueryOutput.protoMessageName.getter();
  return 0xD000000000000017;
}

void sub_23F6CF038()
{
  ContextProtoToolQueryOutput.decodeMessage<A>(decoder:)();
}

void sub_23F6CF04C()
{
  ContextProtoToolQueryOutput.traverse<A>(visitor:)();
}

uint64_t sub_23F6CF060()
{
  sub_23F6D3458(&qword_256EA3198, type metadata accessor for ContextProtoToolQueryOutput, (uint64_t)&protocol conformance descriptor for ContextProtoToolQueryOutput);
  return sub_23FB2D784();
}

uint64_t sub_23F6CF0B4()
{
  sub_23F6D3458(&qword_256EA30F8, type metadata accessor for ContextProtoToolQueryOutput, (uint64_t)&protocol conformance descriptor for ContextProtoToolQueryOutput);
  return sub_23FB2D8F8();
}

uint64_t sub_23F6CF0F8()
{
  sub_23F6D3458(&qword_256EA30F8, type metadata accessor for ContextProtoToolQueryOutput, (uint64_t)&protocol conformance descriptor for ContextProtoToolQueryOutput);
  return sub_23FB2D904();
}

unint64_t static ContextProtoQueryDecorationToolRetrievalResponse.protoMessageName.getter()
{
  return sub_23F6D3738(44);
}

uint64_t sub_23F6CF164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EA2C50);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EA2C50);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F190;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "originalSubQuery";
  *(_QWORD *)(v7 + 8) = 16;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "rewrittenQuery";
  *(_QWORD *)(v11 + 8) = 14;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "confidence";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "retrievedTools";
  *((_QWORD *)v15 + 1) = 14;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "types";
  *((_QWORD *)v17 + 1) = 5;
  v17[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static ContextProtoQueryDecorationToolRetrievalResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F6BF3D8(&qword_256EA0A40, (uint64_t)qword_256EA2C50, a1);
}

void ContextProtoQueryDecorationToolRetrievalResponse.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6D3EA4();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
        case 2:
          sub_23F6D395C();
          break;
        case 3:
          sub_23F6D3A50();
          break;
        case 4:
          sub_23F6D3598();
          sub_23F6CF410();
          break;
        case 5:
          sub_23F6D3598();
          sub_23F6CF490();
          break;
        default:
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D3750();
}

uint64_t sub_23F6CF410()
{
  type metadata accessor for ContextProtoRetrievedTool(0);
  sub_23F6D3458(&qword_256EA2E80, type metadata accessor for ContextProtoRetrievedTool, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool);
  return sub_23FB2D8A4();
}

uint64_t sub_23F6CF490()
{
  type metadata accessor for ContextProtoToolRetrievalType(0);
  sub_23F6D3458(&qword_256EA2E88, type metadata accessor for ContextProtoToolRetrievalType, (uint64_t)&protocol conformance descriptor for ContextProtoToolRetrievalType);
  return sub_23FB2D8A4();
}

void ContextProtoQueryDecorationToolRetrievalResponse.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F6D3EA4();
  sub_23F6D36FC();
  if (!v2 || (sub_23F6D376C(), !v1))
  {
    sub_23F6D36FC();
    if (!v3 || (sub_23F6D376C(), !v1))
    {
      if (*(float *)(v0 + 32) == 0.0 || (sub_23F6D3AC4(), !v1))
      {
        if (!*(_QWORD *)(*(_QWORD *)(v0 + 40) + 16)
          || (type metadata accessor for ContextProtoRetrievedTool(0),
              sub_23F6D3458(&qword_256EA2E80, type metadata accessor for ContextProtoRetrievedTool, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool), sub_23F6D36E4(), !v1))
        {
          if (!*(_QWORD *)(*(_QWORD *)(v0 + 48) + 16)
            || (type metadata accessor for ContextProtoToolRetrievalType(0),
                sub_23F6D3458(&qword_256EA2E88, type metadata accessor for ContextProtoToolRetrievalType, (uint64_t)&protocol conformance descriptor for ContextProtoToolRetrievalType), sub_23F6D3E24(), sub_23F6D36E4(), !v1))
          {
            type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
            sub_23F6D3884();
          }
        }
      }
    }
  }
  sub_23F6D3750();
}

#error "23F6CF6CC: call analysis failed (funcsize=62)"

uint64_t ContextProtoQueryDecorationToolRetrievalResponse.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse, &qword_256EA2E90, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationToolRetrievalResponse);
}

unint64_t sub_23F6CF760()
{
  static ContextProtoQueryDecorationToolRetrievalResponse.protoMessageName.getter();
  return 0xD00000000000002CLL;
}

uint64_t (*sub_23F6CF784())()
{
  return nullsub_1;
}

void sub_23F6CF798()
{
  ContextProtoQueryDecorationToolRetrievalResponse.decodeMessage<A>(decoder:)();
}

void sub_23F6CF7AC()
{
  ContextProtoQueryDecorationToolRetrievalResponse.traverse<A>(visitor:)();
}

uint64_t sub_23F6CF7C0()
{
  sub_23F6D3458(&qword_256EA3190, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationToolRetrievalResponse);
  return sub_23FB2D784();
}

uint64_t sub_23F6CF814()
{
  sub_23F6D3458(&qword_256EA3110, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationToolRetrievalResponse);
  return sub_23FB2D8F8();
}

uint64_t sub_23F6CF858()
{
  sub_23F6D3458(&qword_256EA3110, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationToolRetrievalResponse);
  return sub_23FB2D904();
}

unint64_t static ContextProtoSpanMatchedEntity.protoMessageName.getter()
{
  return sub_23F6D3738(25);
}

uint64_t sub_23F6CF8C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EA2C68);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EA2C68);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "typedValue";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "matchMetadata";
  *((_QWORD *)v11 + 1) = 13;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static ContextProtoSpanMatchedEntity._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F6BF3D8(&qword_256EA0A48, (uint64_t)qword_256EA2C68, a1);
}

void ContextProtoSpanMatchedEntity.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_23F6D3598();
        sub_23F6C7398();
      }
      else if (v1 == 1)
      {
        sub_23F6D3598();
        sub_23F6C2F3C();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void ContextProtoSpanMatchedEntity.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F6D3DC4();
  sub_23F6D3E4C();
  if (!v1)
  {
    if (*(_QWORD *)(*(_QWORD *)v0 + 16))
    {
      type metadata accessor for ContextProtoEntityMatch(0);
      sub_23F6D3458(&qword_256EA2E98, type metadata accessor for ContextProtoEntityMatch, (uint64_t)&protocol conformance descriptor for ContextProtoEntityMatch);
      sub_23F6D3B94();
      sub_23FB2D9C4();
    }
    type metadata accessor for ContextProtoSpanMatchedEntity(0);
    sub_23FB2D700();
  }
  sub_23F6D3710();
}

void sub_23F6CFBAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F6B5220();
  v3 = v2;
  v5 = v4;
  sub_23F6916B8(&qword_256EA2610);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B59E0();
  v7 = sub_23FB2EB1C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B53AC();
  v9 = v3(0);
  sub_23F6D3530(v5 + *(int *)(v9 + 20), v1, &qword_256EA2610);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v1, 1, v7) == 1)
  {
    sub_23F6B4F84(v1, &qword_256EA2610);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v0, v1, v7);
    sub_23F6D3458(&qword_256EA3248, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95B0], MEMORY[0x24BEB95A0]);
    sub_23F6D3B94();
    sub_23FB2D9D0();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0, v7);
  }
  sub_23F6B5100();
}

#error "23F6CFF54: call analysis failed (funcsize=185)"

uint64_t ContextProtoSpanMatchedEntity.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for ContextProtoSpanMatchedEntity, &qword_256EA2EA0, (uint64_t)&protocol conformance descriptor for ContextProtoSpanMatchedEntity);
}

unint64_t sub_23F6D0008()
{
  static ContextProtoSpanMatchedEntity.protoMessageName.getter();
  return 0xD000000000000019;
}

void sub_23F6D002C()
{
  ContextProtoSpanMatchedEntity.decodeMessage<A>(decoder:)();
}

void sub_23F6D0040()
{
  ContextProtoSpanMatchedEntity.traverse<A>(visitor:)();
}

uint64_t sub_23F6D0054()
{
  sub_23F6D3458(&qword_256EA3188, type metadata accessor for ContextProtoSpanMatchedEntity, (uint64_t)&protocol conformance descriptor for ContextProtoSpanMatchedEntity);
  return sub_23FB2D784();
}

uint64_t sub_23F6D00A8()
{
  sub_23F6D3458(&qword_256EA2DB8, type metadata accessor for ContextProtoSpanMatchedEntity, (uint64_t)&protocol conformance descriptor for ContextProtoSpanMatchedEntity);
  return sub_23FB2D8F8();
}

uint64_t sub_23F6D00EC()
{
  sub_23F6D3458(&qword_256EA2DB8, type metadata accessor for ContextProtoSpanMatchedEntity, (uint64_t)&protocol conformance descriptor for ContextProtoSpanMatchedEntity);
  return sub_23FB2D904();
}

unint64_t static ContextProtoEntityMatch.protoMessageName.getter()
{
  return sub_23F6D3738(19);
}

uint64_t sub_23F6D0158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EA2C80);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EA2C80);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F200;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "sourceItemIdentifier";
  *(_QWORD *)(v7 + 8) = 20;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 3;
  *(_QWORD *)v11 = "entityName";
  *(_QWORD *)(v11 + 8) = 10;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 4;
  *(_QWORD *)v13 = "startIndex";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 5;
  *(_QWORD *)v15 = "endIndex";
  *((_QWORD *)v15 + 1) = 8;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 7;
  *(_QWORD *)v17 = "matchScore";
  *((_QWORD *)v17 + 1) = 10;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 8;
  *(_QWORD *)v19 = "matchProperties";
  *((_QWORD *)v19 + 1) = 15;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 9;
  *(_QWORD *)v21 = "matcherType";
  *((_QWORD *)v21 + 1) = 11;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 10;
  *(_QWORD *)v23 = "originAppBundleId";
  *((_QWORD *)v23 + 1) = 17;
  v23[16] = 2;
  v10();
  v24 = (_QWORD *)(v6 + 8 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 11;
  *(_QWORD *)v25 = "userUtterance";
  *((_QWORD *)v25 + 1) = 13;
  v25[16] = 2;
  v10();
  v26 = (_QWORD *)(v6 + 9 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 12;
  *(_QWORD *)v27 = "identifier";
  *((_QWORD *)v27 + 1) = 10;
  v27[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static ContextProtoEntityMatch._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F6BF3D8(&qword_256EA0A50, (uint64_t)qword_256EA2C80, a1);
}

void ContextProtoEntityMatch.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
        case 3:
        case 10:
        case 11:
          sub_23F6D395C();
          break;
        case 4:
        case 5:
          sub_23FB2D850();
          break;
        case 7:
          sub_23F6D3A50();
          break;
        case 8:
          sub_23F6D3598();
          sub_23F6D0578();
          break;
        case 9:
          sub_23F6D3598();
          sub_23F6D060C();
          break;
        case 12:
          sub_23F6D3598();
          sub_23F6D066C();
          break;
        default:
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D3B40();
}

uint64_t sub_23F6D0578()
{
  type metadata accessor for ContextProtoEntityMatch(0);
  type metadata accessor for ContextProtoMatchProperties(0);
  sub_23F6D3458(&qword_256EA3148, type metadata accessor for ContextProtoMatchProperties, (uint64_t)&protocol conformance descriptor for ContextProtoMatchProperties);
  return sub_23FB2D8B0();
}

uint64_t sub_23F6D060C()
{
  sub_23F6D1EF0();
  return sub_23FB2D7FC();
}

uint64_t sub_23F6D066C()
{
  type metadata accessor for ContextProtoEntityMatch(0);
  return sub_23FB2D874();
}

void ContextProtoEntityMatch.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F6D36FC();
  if (!v2 || (sub_23F6D376C(), !v1))
  {
    sub_23F6D36FC();
    if (!v3 || (sub_23F6D376C(), !v1))
    {
      if (!*(_QWORD *)(v0 + 32) || (sub_23F6D3D38(), !v1))
      {
        if (!*(_QWORD *)(v0 + 40) || (sub_23F6D3D38(), !v1))
        {
          if (*(float *)(v0 + 48) == 0.0 || (sub_23F6D3AC4(), !v1))
          {
            sub_23F6D3664();
            sub_23F6D0834(v4);
            if (!v1)
            {
              if (*(_BYTE *)(v0 + 52))
              {
                sub_23F6D1EF0();
                sub_23F6D39A8();
              }
              sub_23F6D36FC();
              if (v5)
                sub_23F6D376C();
              sub_23F6D36FC();
              if (v6)
                sub_23F6D376C();
              sub_23F6D3664();
              sub_23F6D09A4(v7);
              type metadata accessor for ContextProtoEntityMatch(0);
              sub_23F6D3884();
            }
          }
        }
      }
    }
  }
  sub_23F6D377C();
}

void sub_23F6D0834(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t matched;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA2EB8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  matched = type metadata accessor for ContextProtoMatchProperties(0);
  MEMORY[0x24BDAC7A8](matched);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ContextProtoEntityMatch(0);
  sub_23F6D3530(a1 + *(int *)(v8 + 48), (uint64_t)v4, &qword_256EA2EB8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, matched) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA2EB8);
  }
  else
  {
    sub_23F6D34D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for ContextProtoMatchProperties);
    sub_23F6D3458(&qword_256EA3148, type metadata accessor for ContextProtoMatchProperties, (uint64_t)&protocol conformance descriptor for ContextProtoMatchProperties);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for ContextProtoMatchProperties);
  }
}

uint64_t sub_23F6D09A4(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ContextProtoEntityMatch(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 52) + 8))
    return sub_23FB2D9A0();
  return result;
}

void static ContextProtoEntityMatch.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t matched;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  BOOL v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  BOOL v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;

  sub_23F6B50E8();
  v6 = sub_23F6D35C0();
  v56 = *(_QWORD *)(v6 - 8);
  v57 = v6;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  v55 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v18 = sub_23F6D38F8(v10, v11, v12, v13, v14, v15, v16, v17, v52);
  matched = type metadata accessor for ContextProtoMatchProperties(v18);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5268();
  v21 = sub_23F6916B8(&qword_256EA2EB0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA2EB8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F6B65E0();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6D3F60();
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v52 - v26;
  v28 = *(_QWORD *)v2 == *(_QWORD *)v1 && *(_QWORD *)(v2 + 8) == *(_QWORD *)(v1 + 8);
  if (!v28 && (sub_23F6B5280() & 1) == 0)
    goto LABEL_44;
  v29 = *(_QWORD *)(v2 + 16) == *(_QWORD *)(v1 + 16) && *(_QWORD *)(v2 + 24) == *(_QWORD *)(v1 + 24);
  if (!v29 && (sub_23F6B5280() & 1) == 0
    || *(_QWORD *)(v2 + 32) != *(_QWORD *)(v1 + 32)
    || *(_QWORD *)(v2 + 40) != *(_QWORD *)(v1 + 40)
    || *(float *)(v2 + 48) != *(float *)(v1 + 48))
  {
    goto LABEL_44;
  }
  v30 = type metadata accessor for ContextProtoEntityMatch(0);
  sub_23F6D3C14(v2 + *(int *)(v30 + 48), v31, &qword_256EA2EB8);
  v53 = v30;
  sub_23F6D3740(v1 + *(int *)(v30 + 48), v0);
  v32 = v3 + *(int *)(v21 + 48);
  sub_23F6D3740((uint64_t)v27, v3);
  sub_23F6D3740(v0, v32);
  sub_23F6B5164(v3, 1, matched);
  if (!v28)
  {
    sub_23F6D3CD8(v3, v33, &qword_256EA2EB8);
    sub_23F6B5164(v32, 1, matched);
    if (!v35)
    {
      sub_23F6D34D0(v32, v4, type metadata accessor for ContextProtoMatchProperties);
      sub_23F6D3F0C();
      static ContextProtoMatchProperties.== infix(_:_:)();
      v37 = v36;
      sub_23F6D3DAC(v4);
      sub_23F6D387C(v0);
      sub_23F6D387C((uint64_t)v27);
      sub_23F6D3DAC(v5);
      sub_23F6D387C(v3);
      if ((v37 & 1) == 0)
        goto LABEL_44;
      goto LABEL_24;
    }
    sub_23F6B64F4(v0);
    sub_23F6B64F4((uint64_t)v27);
    sub_23F6D3508(v5, type metadata accessor for ContextProtoMatchProperties);
LABEL_22:
    sub_23F6D378C(v34, &qword_256EA2EB0);
    goto LABEL_44;
  }
  sub_23F6B6EF8(v0);
  sub_23F6B6EF8((uint64_t)v27);
  v34 = sub_23F6B5164(v32, 1, matched);
  if (!v28)
    goto LABEL_22;
  sub_23F6D378C(v34, &qword_256EA2EB8);
LABEL_24:
  if (*(unsigned __int8 *)(v2 + 52) == *(unsigned __int8 *)(v1 + 52))
  {
    v38 = *(_QWORD *)(v2 + 56) == *(_QWORD *)(v1 + 56) && *(_QWORD *)(v2 + 64) == *(_QWORD *)(v1 + 64);
    if (v38 || (sub_23F6B5280() & 1) != 0)
    {
      v39 = *(_QWORD *)(v2 + 72) == *(_QWORD *)(v1 + 72) && *(_QWORD *)(v2 + 80) == *(_QWORD *)(v1 + 80);
      if (v39 || (sub_23F6B5280() & 1) != 0)
      {
        sub_23F6D3A18();
        if (v42)
        {
          if (v40)
          {
            sub_23F6D3998(v41);
            v45 = v28 && v43 == v44;
            if (v45 || (sub_23F6B5280() & 1) != 0)
              goto LABEL_45;
          }
        }
        else if (!v40)
        {
LABEL_45:
          v46 = v53;
          v47 = v54;
          v48 = v57;
          v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16);
          v49(v54, v2 + *(int *)(v53 + 56), v57);
          v50 = v1 + *(int *)(v46 + 56);
          v51 = (uint64_t)v55;
          v49((uint64_t)v55, v50, v48);
          sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          sub_23F6B5624();
          sub_23F6D39FC(v51);
          sub_23F6D39FC(v47);
        }
      }
    }
  }
LABEL_44:
  sub_23F693DDC();
}

uint64_t ContextProtoEntityMatch.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for ContextProtoEntityMatch, &qword_256EA2EC0, (uint64_t)&protocol conformance descriptor for ContextProtoEntityMatch);
}

unint64_t sub_23F6D0DFC()
{
  static ContextProtoEntityMatch.protoMessageName.getter();
  return 0xD000000000000013;
}

uint64_t (*sub_23F6D0E20())()
{
  return nullsub_1;
}

void sub_23F6D0E34()
{
  ContextProtoEntityMatch.decodeMessage<A>(decoder:)();
}

void sub_23F6D0E48()
{
  ContextProtoEntityMatch.traverse<A>(visitor:)();
}

uint64_t sub_23F6D0E5C()
{
  sub_23F6D3458(&qword_256EA3180, type metadata accessor for ContextProtoEntityMatch, (uint64_t)&protocol conformance descriptor for ContextProtoEntityMatch);
  return sub_23FB2D784();
}

uint64_t sub_23F6D0EB0()
{
  sub_23F6D3458(&qword_256EA2E98, type metadata accessor for ContextProtoEntityMatch, (uint64_t)&protocol conformance descriptor for ContextProtoEntityMatch);
  return sub_23FB2D8F8();
}

uint64_t sub_23F6D0EF4()
{
  sub_23F6D3458(&qword_256EA2E98, type metadata accessor for ContextProtoEntityMatch, (uint64_t)&protocol conformance descriptor for ContextProtoEntityMatch);
  return sub_23FB2D904();
}

unint64_t static ContextProtoMatchProperties.protoMessageName.getter()
{
  return sub_23F6D3738(23);
}

uint64_t sub_23F6D0F60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EA2C98);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EA2C98);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "maxTokenCount";
  *(_QWORD *)(v7 + 8) = 13;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "matchedTokenCount";
  *((_QWORD *)v11 + 1) = 17;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "matchedAliasTypes";
  *((_QWORD *)v13 + 1) = 17;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static ContextProtoMatchProperties._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F6BF3D8(&qword_256EA0A58, (uint64_t)qword_256EA2C98, a1);
}

void ContextProtoMatchProperties.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 3)
      {
        sub_23F6D3598();
        sub_23F6CA0A4();
      }
      else if (v1 == 2 || v1 == 1)
      {
        sub_23F6D3EF4();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void ContextProtoMatchProperties.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F6D3AD4();
  sub_23F6D1204(v1);
  if (!v0)
  {
    v2 = sub_23F6D38C8();
    sub_23F6D1234(v2);
    v3 = sub_23F6D38C8();
    sub_23F6D1264(v3);
    type metadata accessor for ContextProtoMatchProperties(0);
    sub_23F6D3B78();
  }
  sub_23F6D3674();
}

uint64_t sub_23F6D1204(uint64_t result)
{
  if ((*(_BYTE *)(result + 8) & 1) == 0)
    return sub_23FB2D97C();
  return result;
}

uint64_t sub_23F6D1234(uint64_t result)
{
  if ((*(_BYTE *)(result + 24) & 1) == 0)
    return sub_23FB2D97C();
  return result;
}

void sub_23F6D1264(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t matched;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA2ED0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ContextProtoAliasTypes(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  matched = type metadata accessor for ContextProtoMatchProperties(0);
  sub_23F6D3530(a1 + *(int *)(matched + 24), (uint64_t)v4, &qword_256EA2ED0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA2ED0);
  }
  else
  {
    sub_23F6D34D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for ContextProtoAliasTypes);
    sub_23F6D3458(&qword_256EA3160, type metadata accessor for ContextProtoAliasTypes, (uint64_t)&protocol conformance descriptor for ContextProtoAliasTypes);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for ContextProtoAliasTypes);
  }
}

void static ContextProtoMatchProperties.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t matched;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t *v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  sub_23F6B50E8();
  v7 = sub_23F6D35C0();
  v51 = *(_QWORD *)(v7 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  v50 = (uint64_t)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v19 = sub_23F6D3910(v11, v12, v13, v14, v15, v16, v17, v18, (uint64_t)v46);
  v20 = type metadata accessor for ContextProtoAliasTypes(v19);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B59E0();
  v22 = sub_23F6916B8(&qword_256EA2EC8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA2ED0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F6D3F74();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F6B6B3C();
  if ((*(_BYTE *)(v2 + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(v1 + 8))
      goto LABEL_23;
  }
  else
  {
    sub_23F6B6FE0();
    if ((v27 & 1) != 0)
      goto LABEL_23;
  }
  if ((*(_BYTE *)(v2 + 24) & 1) != 0)
  {
    if (!*(_BYTE *)(v1 + 24))
      goto LABEL_23;
  }
  else
  {
    sub_23F6B6FE0();
    if ((v28 & 1) != 0)
      goto LABEL_23;
  }
  v46 = (uint64_t *)v5;
  v48 = v7;
  matched = type metadata accessor for ContextProtoMatchProperties(0);
  sub_23F6D36F4(v2 + *(int *)(matched + 24), v6);
  v47 = matched;
  sub_23F6D36F4(v1 + *(int *)(matched + 24), v0);
  v30 = v3 + *(int *)(v22 + 48);
  sub_23F6D36F4(v6, v3);
  sub_23F6D36F4(v0, v30);
  v31 = sub_23F6D3CB4();
  sub_23F6B5164(v31, v32, v20);
  if (v35)
  {
    sub_23F6D3748(v0);
    sub_23F6D3748(v6);
    v34 = sub_23F6B5164(v30, 1, v20);
    if (v35)
    {
      sub_23F6D378C(v34, &qword_256EA2ED0);
LABEL_20:
      v42 = v47;
      v43 = v49;
      sub_23F6D3818(v49, v2 + *(int *)(v47 + 28));
      v44 = v1 + *(int *)(v42 + 28);
      v45 = v50;
      sub_23F6D3818(v50, v44);
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6D37C8();
      sub_23F6D3874(v45);
      sub_23F6D3874(v43);
      goto LABEL_23;
    }
    goto LABEL_17;
  }
  sub_23F6D3C14(v3, v33, &qword_256EA2ED0);
  sub_23F6B5164(v30, 1, v20);
  if (v35)
  {
    sub_23F6D3748(v0);
    sub_23F6D3748(v6);
    sub_23F6D3D20(v36, type metadata accessor for ContextProtoAliasTypes);
LABEL_17:
    v37 = &qword_256EA2EC8;
    v38 = v3;
LABEL_22:
    sub_23F6B4F84(v38, v37);
    goto LABEL_23;
  }
  v39 = v46;
  sub_23F6D34D0(v30, (uint64_t)v46, type metadata accessor for ContextProtoAliasTypes);
  v40 = sub_23F698958(*v4, *v39);
  if ((v40 & 1) == 0)
  {
    sub_23F6D38A0((uint64_t)v39);
    sub_23F6B6EF8(v0);
    sub_23F6B6EF8(v6);
    sub_23F6D38A0((uint64_t)v4);
    v38 = v3;
    v37 = &qword_256EA2ED0;
    goto LABEL_22;
  }
  sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v41 = sub_23FB2F11C();
  sub_23F6D3DAC((uint64_t)v39);
  sub_23F6D387C(v0);
  sub_23F6D387C(v6);
  sub_23F6D3DAC((uint64_t)v4);
  sub_23F6D387C(v3);
  if ((v41 & 1) != 0)
    goto LABEL_20;
LABEL_23:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t ContextProtoMatchProperties.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for ContextProtoMatchProperties, &qword_256EA2ED8, (uint64_t)&protocol conformance descriptor for ContextProtoMatchProperties);
}

unint64_t sub_23F6D1780()
{
  static ContextProtoMatchProperties.protoMessageName.getter();
  return 0xD000000000000017;
}

void sub_23F6D17A4()
{
  ContextProtoMatchProperties.decodeMessage<A>(decoder:)();
}

void sub_23F6D17B8()
{
  ContextProtoMatchProperties.traverse<A>(visitor:)();
}

uint64_t sub_23F6D17CC()
{
  sub_23F6D3458(&qword_256EA3178, type metadata accessor for ContextProtoMatchProperties, (uint64_t)&protocol conformance descriptor for ContextProtoMatchProperties);
  return sub_23FB2D784();
}

uint64_t sub_23F6D1820()
{
  sub_23F6D3458(&qword_256EA3148, type metadata accessor for ContextProtoMatchProperties, (uint64_t)&protocol conformance descriptor for ContextProtoMatchProperties);
  return sub_23FB2D8F8();
}

uint64_t sub_23F6D1864()
{
  sub_23F6D3458(&qword_256EA3148, type metadata accessor for ContextProtoMatchProperties, (uint64_t)&protocol conformance descriptor for ContextProtoMatchProperties);
  return sub_23FB2D904();
}

unint64_t static ContextProtoAliasTypes.protoMessageName.getter()
{
  return sub_23F6D3738(18);
}

uint64_t sub_23F6D18D0(uint64_t a1)
{
  return sub_23F6D18E8(a1, (uint64_t)&unk_256EA2CB0, (uint64_t)"options", 7);
}

uint64_t sub_23F6D18E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7 = sub_23F6D3EB8();
  sub_23F6D3418(v7, v4);
  sub_23F6BF1A4(v7, (uint64_t)v4);
  sub_23F6916B8(&qword_256EA3238);
  v8 = sub_23F6916B8(&qword_256EA3240);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_23FB47010;
  v12 = v11 + v10 + *(int *)(v8 + 48);
  *(_QWORD *)(v11 + v10) = 1;
  *(_QWORD *)v12 = a3;
  *(_QWORD *)(v12 + 8) = a4;
  *(_BYTE *)(v12 + 16) = 2;
  v13 = *MEMORY[0x24BE5C318];
  v14 = sub_23FB2D9DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  return sub_23FB2D9E8();
}

uint64_t static ContextProtoAliasTypes._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F6BF3D8(&qword_256EA0A60, (uint64_t)&unk_256EA2CB0, a1);
}

void ContextProtoAliasTypes.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_23F6D39E0(a1, a2);
  while (1)
  {
    v3 = sub_23FB2D7B4();
    if (v2 || (v4 & 1) != 0)
      break;
    if (v3 == 1)
    {
      sub_23F6D3598();
      sub_23F6D1A48();
    }
  }
  sub_23F6D3C2C();
}

uint64_t sub_23F6D1A48()
{
  sub_23F6D1F2C();
  return sub_23FB2D7CC();
}

void ContextProtoAliasTypes.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F6D3EA4();
  if (!*(_QWORD *)(*(_QWORD *)v0 + 16) || (sub_23F6D1F2C(), sub_23FB2D934(), !v1))
  {
    type metadata accessor for ContextProtoAliasTypes(0);
    sub_23F6D3A68();
  }
  sub_23F6D3750();
}

void static ContextProtoAliasTypes.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F6D36BC();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F6D3DD8();
  v3 = sub_23F6D3E18();
  if ((sub_23F698958(v3, v4) & 1) != 0)
  {
    v5 = type metadata accessor for ContextProtoAliasTypes(0);
    sub_23F6D3614(*(int *)(v5 + 20));
    sub_23F6D36AC(*(int *)(v5 + 20));
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F6D3600();
    sub_23F6D3A04();
    sub_23F6D3BD0(v0);
  }
  sub_23F6B69E0();
}

uint64_t ContextProtoAliasTypes.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for ContextProtoAliasTypes, &qword_256EA2EE8, (uint64_t)&protocol conformance descriptor for ContextProtoAliasTypes);
}

unint64_t sub_23F6D1C0C()
{
  static ContextProtoAliasTypes.protoMessageName.getter();
  return 0xD000000000000012;
}

void sub_23F6D1C30(uint64_t a1, uint64_t a2)
{
  ContextProtoAliasTypes.decodeMessage<A>(decoder:)(a1, a2);
}

void sub_23F6D1C44()
{
  ContextProtoAliasTypes.traverse<A>(visitor:)();
}

uint64_t sub_23F6D1C58()
{
  sub_23F6D3458(&qword_256EA3170, type metadata accessor for ContextProtoAliasTypes, (uint64_t)&protocol conformance descriptor for ContextProtoAliasTypes);
  return sub_23FB2D784();
}

uint64_t sub_23F6D1CAC()
{
  sub_23F6D3458(&qword_256EA3160, type metadata accessor for ContextProtoAliasTypes, (uint64_t)&protocol conformance descriptor for ContextProtoAliasTypes);
  return sub_23FB2D8F8();
}

uint64_t sub_23F6D1CF0()
{
  sub_23F6D3458(&qword_256EA3160, type metadata accessor for ContextProtoAliasTypes, (uint64_t)&protocol conformance descriptor for ContextProtoAliasTypes);
  return sub_23FB2D904();
}

uint64_t sub_23F6D1D40()
{
  sub_23FB2FC5C();
  sub_23FB2F074();
  return sub_23FB2FC8C();
}

unint64_t sub_23F6D1D94()
{
  unint64_t result;

  result = qword_256EA2CC8;
  if (!qword_256EA2CC8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextProtoContextType, &type metadata for ContextProtoContextType);
    atomic_store(result, (unint64_t *)&qword_256EA2CC8);
  }
  return result;
}

unint64_t sub_23F6D1DD0()
{
  unint64_t result;

  result = qword_256EA2D28;
  if (!qword_256EA2D28)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextProtoConfidenceBucket, &type metadata for ContextProtoConfidenceBucket);
    atomic_store(result, (unint64_t *)&qword_256EA2D28);
  }
  return result;
}

uint64_t sub_23F6D1E0C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_23F6D1E20(a1, a2);
  return a1;
}

uint64_t sub_23F6D1E20(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_23F6D1E64(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_23F6BC34C(a1, a2);
  return a1;
}

unint64_t sub_23F6D1E78()
{
  unint64_t result;

  result = qword_256EA2DE8;
  if (!qword_256EA2DE8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextProtoQueryDecorationCaller, &type metadata for ContextProtoQueryDecorationCaller);
    atomic_store(result, (unint64_t *)&qword_256EA2DE8);
  }
  return result;
}

unint64_t sub_23F6D1EB4()
{
  unint64_t result;

  result = qword_256EA2E20;
  if (!qword_256EA2E20)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextProtoRetrievedTool.Stage, &type metadata for ContextProtoRetrievedTool.Stage);
    atomic_store(result, (unint64_t *)&qword_256EA2E20);
  }
  return result;
}

unint64_t sub_23F6D1EF0()
{
  unint64_t result;

  result = qword_256EA2EA8;
  if (!qword_256EA2EA8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextProtoEntityMatcherType, &type metadata for ContextProtoEntityMatcherType);
    atomic_store(result, (unint64_t *)&qword_256EA2EA8);
  }
  return result;
}

unint64_t sub_23F6D1F2C()
{
  unint64_t result;

  result = qword_256EA2EE0;
  if (!qword_256EA2EE0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextProtoAliasTypesOptions, &type metadata for ContextProtoAliasTypesOptions);
    atomic_store(result, (unint64_t *)&qword_256EA2EE0);
  }
  return result;
}

unint64_t sub_23F6D1F6C()
{
  unint64_t result;

  result = qword_256EA2EF0;
  if (!qword_256EA2EF0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextProtoContextType, &type metadata for ContextProtoContextType);
    atomic_store(result, (unint64_t *)&qword_256EA2EF0);
  }
  return result;
}

unint64_t sub_23F6D1FAC()
{
  unint64_t result;

  result = qword_256EA2EF8;
  if (!qword_256EA2EF8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextProtoContextType, &type metadata for ContextProtoContextType);
    atomic_store(result, (unint64_t *)&qword_256EA2EF8);
  }
  return result;
}

unint64_t sub_23F6D1FEC()
{
  unint64_t result;

  result = qword_256EA2F00;
  if (!qword_256EA2F00)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextUserClassification, &type metadata for ContextProtoStructuredContextSiriRequestContextUserClassification);
    atomic_store(result, (unint64_t *)&qword_256EA2F00);
  }
  return result;
}

unint64_t sub_23F6D202C()
{
  unint64_t result;

  result = qword_256EA2F08;
  if (!qword_256EA2F08)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextUserClassification, &type metadata for ContextProtoStructuredContextSiriRequestContextUserClassification);
    atomic_store(result, (unint64_t *)&qword_256EA2F08);
  }
  return result;
}

unint64_t sub_23F6D206C()
{
  unint64_t result;

  result = qword_256EA2F10;
  if (!qword_256EA2F10)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextProtoConfidenceBucket, &type metadata for ContextProtoConfidenceBucket);
    atomic_store(result, (unint64_t *)&qword_256EA2F10);
  }
  return result;
}

unint64_t sub_23F6D20AC()
{
  unint64_t result;

  result = qword_256EA2F18;
  if (!qword_256EA2F18)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextProtoConfidenceBucket, &type metadata for ContextProtoConfidenceBucket);
    atomic_store(result, (unint64_t *)&qword_256EA2F18);
  }
  return result;
}

unint64_t sub_23F6D20EC()
{
  unint64_t result;

  result = qword_256EA2F20;
  if (!qword_256EA2F20)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextProtoQueryDecorationCaller, &type metadata for ContextProtoQueryDecorationCaller);
    atomic_store(result, (unint64_t *)&qword_256EA2F20);
  }
  return result;
}

unint64_t sub_23F6D212C()
{
  unint64_t result;

  result = qword_256EA2F28;
  if (!qword_256EA2F28)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextProtoQueryDecorationCaller, &type metadata for ContextProtoQueryDecorationCaller);
    atomic_store(result, (unint64_t *)&qword_256EA2F28);
  }
  return result;
}

unint64_t sub_23F6D216C()
{
  unint64_t result;

  result = qword_256EA2F30;
  if (!qword_256EA2F30)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextProtoEntityMatcherType, &type metadata for ContextProtoEntityMatcherType);
    atomic_store(result, (unint64_t *)&qword_256EA2F30);
  }
  return result;
}

unint64_t sub_23F6D21AC()
{
  unint64_t result;

  result = qword_256EA2F38;
  if (!qword_256EA2F38)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextProtoEntityMatcherType, &type metadata for ContextProtoEntityMatcherType);
    atomic_store(result, (unint64_t *)&qword_256EA2F38);
  }
  return result;
}

unint64_t sub_23F6D21EC()
{
  unint64_t result;

  result = qword_256EA2F40;
  if (!qword_256EA2F40)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextProtoAliasTypesOptions, &type metadata for ContextProtoAliasTypesOptions);
    atomic_store(result, (unint64_t *)&qword_256EA2F40);
  }
  return result;
}

unint64_t sub_23F6D222C()
{
  unint64_t result;

  result = qword_256EA2F48;
  if (!qword_256EA2F48)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextProtoAliasTypesOptions, &type metadata for ContextProtoAliasTypesOptions);
    atomic_store(result, (unint64_t *)&qword_256EA2F48);
  }
  return result;
}

void sub_23F6D2268()
{
  sub_23F6D3458(&qword_256EA2F50, type metadata accessor for ContextProtoRetrievedContext, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedContext);
}

void sub_23F6D2294()
{
  sub_23F6D3458(&qword_256EA2DB0, type metadata accessor for ContextProtoRetrievedContext, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedContext);
}

void sub_23F6D22C0()
{
  sub_23F6D3458(&qword_256EA2D00, type metadata accessor for ContextProtoRetrievedContext, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedContext);
}

void sub_23F6D22EC()
{
  sub_23F6D3458(&qword_256EA2F58, type metadata accessor for ContextProtoRetrievedContext, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedContext);
}

void sub_23F6D2318()
{
  sub_23F6D3458(&qword_256EA2F60, type metadata accessor for ContextProtoContextMetadata, (uint64_t)&protocol conformance descriptor for ContextProtoContextMetadata);
}

void sub_23F6D2344()
{
  sub_23F6D3458(&qword_256EA2F68, type metadata accessor for ContextProtoContextMetadata, (uint64_t)&protocol conformance descriptor for ContextProtoContextMetadata);
}

void sub_23F6D2370()
{
  sub_23F6D3458(&qword_256EA2D10, type metadata accessor for ContextProtoContextMetadata, (uint64_t)&protocol conformance descriptor for ContextProtoContextMetadata);
}

void sub_23F6D239C()
{
  sub_23F6D3458(&qword_256EA2F70, type metadata accessor for ContextProtoContextMetadata, (uint64_t)&protocol conformance descriptor for ContextProtoContextMetadata);
}

void sub_23F6D23C8()
{
  sub_23F6D3458(&qword_256EA2F78, type metadata accessor for ContextProtoBoundingBox, (uint64_t)&protocol conformance descriptor for ContextProtoBoundingBox);
}

void sub_23F6D23F4()
{
  sub_23F6D3458(&qword_256EA2F80, type metadata accessor for ContextProtoBoundingBox, (uint64_t)&protocol conformance descriptor for ContextProtoBoundingBox);
}

void sub_23F6D2420()
{
  sub_23F6D3458(&qword_256EA2D18, type metadata accessor for ContextProtoBoundingBox, (uint64_t)&protocol conformance descriptor for ContextProtoBoundingBox);
}

void sub_23F6D244C()
{
  sub_23F6D3458(&qword_256EA2F88, type metadata accessor for ContextProtoBoundingBox, (uint64_t)&protocol conformance descriptor for ContextProtoBoundingBox);
}

void sub_23F6D2478()
{
  sub_23F6D3458(&qword_256EA2F90, type metadata accessor for ContextProtoSurroundingText, (uint64_t)&protocol conformance descriptor for ContextProtoSurroundingText);
}

void sub_23F6D24A4()
{
  sub_23F6D3458(&qword_256EA2D08, type metadata accessor for ContextProtoSurroundingText, (uint64_t)&protocol conformance descriptor for ContextProtoSurroundingText);
}

void sub_23F6D24D0()
{
  sub_23F6D3458(&qword_256EA2D20, type metadata accessor for ContextProtoSurroundingText, (uint64_t)&protocol conformance descriptor for ContextProtoSurroundingText);
}

void sub_23F6D24FC()
{
  sub_23F6D3458(&qword_256EA2F98, type metadata accessor for ContextProtoSurroundingText, (uint64_t)&protocol conformance descriptor for ContextProtoSurroundingText);
}

void sub_23F6D2528()
{
  sub_23F6D3458(&qword_256EA2FA0, type metadata accessor for ContextProtoConfidence, (uint64_t)&protocol conformance descriptor for ContextProtoConfidence);
}

void sub_23F6D2554()
{
  sub_23F6D3458(&qword_256EA2FA8, type metadata accessor for ContextProtoConfidence, (uint64_t)&protocol conformance descriptor for ContextProtoConfidence);
}

void sub_23F6D2580()
{
  sub_23F6D3458(&qword_256EA2D30, type metadata accessor for ContextProtoConfidence, (uint64_t)&protocol conformance descriptor for ContextProtoConfidence);
}

void sub_23F6D25AC()
{
  sub_23F6D3458(&qword_256EA2FB0, type metadata accessor for ContextProtoConfidence, (uint64_t)&protocol conformance descriptor for ContextProtoConfidence);
}

void sub_23F6D25D8()
{
  sub_23F6D3458(&qword_256EA2FB8, type metadata accessor for ContextProtoStructuredContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContext);
}

void sub_23F6D2604()
{
  sub_23F6D3458(&qword_256EA2FC0, type metadata accessor for ContextProtoStructuredContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContext);
}

void sub_23F6D2630()
{
  sub_23F6D3458(&qword_256EA2D48, type metadata accessor for ContextProtoStructuredContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContext);
}

void sub_23F6D265C()
{
  sub_23F6D3458(&qword_256EA2FC8, type metadata accessor for ContextProtoStructuredContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContext);
}

void sub_23F6D2688()
{
  sub_23F6D3458(&qword_256EA2FD0, type metadata accessor for ContextProtoStructuredContextSiriRequestContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContext);
}

void sub_23F6D26B4()
{
  sub_23F6D3458(&qword_256EA2FD8, type metadata accessor for ContextProtoStructuredContextSiriRequestContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContext);
}

void sub_23F6D26E0()
{
  sub_23F6D3458(&qword_256EA2D80, type metadata accessor for ContextProtoStructuredContextSiriRequestContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContext);
}

void sub_23F6D270C()
{
  sub_23F6D3458(&qword_256EA2FE0, type metadata accessor for ContextProtoStructuredContextSiriRequestContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContext);
}

void sub_23F6D2738()
{
  sub_23F6D3458(&qword_256EA2FE8, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
}

void sub_23F6D2764()
{
  sub_23F6D3458(&qword_256EA2FF0, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
}

void sub_23F6D2790()
{
  sub_23F6D3458(&qword_256EA2D88, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
}

void sub_23F6D27BC()
{
  sub_23F6D3458(&qword_256EA2FF8, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
}

void sub_23F6D27E8()
{
  sub_23F6D3458(&qword_256EA3000, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextUser);
}

void sub_23F6D2814()
{
  sub_23F6D3458(&qword_256EA3008, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextUser);
}

void sub_23F6D2840()
{
  sub_23F6D3458(&qword_256EA2D90, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextUser);
}

void sub_23F6D286C()
{
  sub_23F6D3458(&qword_256EA3010, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextUser);
}

void sub_23F6D2898()
{
  sub_23F6D3458(&qword_256EA3018, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextMeCard);
}

void sub_23F6D28C4()
{
  sub_23F6D3458(&qword_256EA3020, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextMeCard);
}

void sub_23F6D28F0()
{
  sub_23F6D3458(&qword_256EA2DA0, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextMeCard);
}

void sub_23F6D291C()
{
  sub_23F6D3458(&qword_256EA3028, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextMeCard);
}

void sub_23F6D2948()
{
  sub_23F6D3458(&qword_256EA3030, type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextAddress);
}

void sub_23F6D2974()
{
  sub_23F6D3458(&qword_256EA2D98, type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextAddress);
}

void sub_23F6D29A0()
{
  sub_23F6D3458(&qword_256EA2DA8, type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextAddress);
}

void sub_23F6D29CC()
{
  sub_23F6D3458(&qword_256EA3038, type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextAddress);
}

void sub_23F6D29F8()
{
  sub_23F6D3458(&qword_256EA3040, type metadata accessor for ContextProtoQueryDecorationOutput, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationOutput);
}

void sub_23F6D2A24()
{
  sub_23F6D3458(&qword_256EA3048, type metadata accessor for ContextProtoQueryDecorationOutput, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationOutput);
}

void sub_23F6D2A50()
{
  sub_23F6D3458(&qword_256EA2DD8, type metadata accessor for ContextProtoQueryDecorationOutput, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationOutput);
}

void sub_23F6D2A7C()
{
  sub_23F6D3458(&qword_256EA3050, type metadata accessor for ContextProtoQueryDecorationOutput, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationOutput);
}

void sub_23F6D2AA8()
{
  sub_23F6D3458(&qword_256EA3058, type metadata accessor for ContextProtoQueryDecorationInput, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationInput);
}

void sub_23F6D2AD4()
{
  sub_23F6D3458(&qword_256EA3060, type metadata accessor for ContextProtoQueryDecorationInput, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationInput);
}

void sub_23F6D2B00()
{
  sub_23F6D3458(&qword_256EA2DF0, type metadata accessor for ContextProtoQueryDecorationInput, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationInput);
}

void sub_23F6D2B2C()
{
  sub_23F6D3458(&qword_256EA3068, type metadata accessor for ContextProtoQueryDecorationInput, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationInput);
}

void sub_23F6D2B58()
{
  sub_23F6D3458(&qword_256EA3070, type metadata accessor for ContextProtoDynamicEnumerationEntity, (uint64_t)&protocol conformance descriptor for ContextProtoDynamicEnumerationEntity);
}

void sub_23F6D2B84()
{
  sub_23F6D3458(&qword_256EA2DC0, type metadata accessor for ContextProtoDynamicEnumerationEntity, (uint64_t)&protocol conformance descriptor for ContextProtoDynamicEnumerationEntity);
}

void sub_23F6D2BB0()
{
  sub_23F6D3458(&qword_256EA2E10, type metadata accessor for ContextProtoDynamicEnumerationEntity, (uint64_t)&protocol conformance descriptor for ContextProtoDynamicEnumerationEntity);
}

void sub_23F6D2BDC()
{
  sub_23F6D3458(&qword_256EA3078, type metadata accessor for ContextProtoDynamicEnumerationEntity, (uint64_t)&protocol conformance descriptor for ContextProtoDynamicEnumerationEntity);
}

void sub_23F6D2C08()
{
  sub_23F6D3458(&qword_256EA3080, type metadata accessor for ContextProtoRetrievedTool, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool);
}

void sub_23F6D2C34()
{
  sub_23F6D3458(&qword_256EA2E80, type metadata accessor for ContextProtoRetrievedTool, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool);
}

void sub_23F6D2C60()
{
  sub_23F6D3458(&qword_256EA2E28, type metadata accessor for ContextProtoRetrievedTool, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool);
}

void sub_23F6D2C8C()
{
  sub_23F6D3458(&qword_256EA3088, type metadata accessor for ContextProtoRetrievedTool, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool);
}

unint64_t sub_23F6D2CBC()
{
  unint64_t result;

  result = qword_256EA3090;
  if (!qword_256EA3090)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextProtoRetrievedTool.Stage, &type metadata for ContextProtoRetrievedTool.Stage);
    atomic_store(result, (unint64_t *)&qword_256EA3090);
  }
  return result;
}

unint64_t sub_23F6D2CFC()
{
  unint64_t result;

  result = qword_256EA3098;
  if (!qword_256EA3098)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextProtoRetrievedTool.Stage, &type metadata for ContextProtoRetrievedTool.Stage);
    atomic_store(result, (unint64_t *)&qword_256EA3098);
  }
  return result;
}

void sub_23F6D2D38()
{
  sub_23F6D3458(&qword_256EA30A0, type metadata accessor for ContextProtoRetrievedTool.Definition, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool.Definition);
}

void sub_23F6D2D64()
{
  sub_23F6D3458(&qword_256EA30A8, type metadata accessor for ContextProtoRetrievedTool.Definition, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool.Definition);
}

void sub_23F6D2D90()
{
  sub_23F6D3458(&qword_256EA2E30, type metadata accessor for ContextProtoRetrievedTool.Definition, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool.Definition);
}

void sub_23F6D2DBC()
{
  sub_23F6D3458(&qword_256EA30B0, type metadata accessor for ContextProtoRetrievedTool.Definition, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool.Definition);
}

void sub_23F6D2DE8()
{
  sub_23F6D3458(&qword_256EA30B8, type metadata accessor for ContextProtoSampleInvocation, (uint64_t)&protocol conformance descriptor for ContextProtoSampleInvocation);
}

void sub_23F6D2E14()
{
  sub_23F6D3458(&qword_256EA2E18, type metadata accessor for ContextProtoSampleInvocation, (uint64_t)&protocol conformance descriptor for ContextProtoSampleInvocation);
}

void sub_23F6D2E40()
{
  sub_23F6D3458(&qword_256EA2E38, type metadata accessor for ContextProtoSampleInvocation, (uint64_t)&protocol conformance descriptor for ContextProtoSampleInvocation);
}

void sub_23F6D2E6C()
{
  sub_23F6D3458(&qword_256EA30C0, type metadata accessor for ContextProtoSampleInvocation, (uint64_t)&protocol conformance descriptor for ContextProtoSampleInvocation);
}

void sub_23F6D2E98()
{
  sub_23F6D3458(&qword_256EA30C8, type metadata accessor for ContextProtoToolRetrievalType, (uint64_t)&protocol conformance descriptor for ContextProtoToolRetrievalType);
}

void sub_23F6D2EC4()
{
  sub_23F6D3458(&qword_256EA2E88, type metadata accessor for ContextProtoToolRetrievalType, (uint64_t)&protocol conformance descriptor for ContextProtoToolRetrievalType);
}

void sub_23F6D2EF0()
{
  sub_23F6D3458(&qword_256EA2E68, type metadata accessor for ContextProtoToolRetrievalType, (uint64_t)&protocol conformance descriptor for ContextProtoToolRetrievalType);
}

void sub_23F6D2F1C()
{
  sub_23F6D3458(&qword_256EA30D0, type metadata accessor for ContextProtoToolRetrievalType, (uint64_t)&protocol conformance descriptor for ContextProtoToolRetrievalType);
}

void sub_23F6D2F48()
{
  sub_23F6D3458(&qword_256EA30D8, type metadata accessor for ContextProtoToolQuery, (uint64_t)&protocol conformance descriptor for ContextProtoToolQuery);
}

void sub_23F6D2F74()
{
  sub_23F6D3458(&qword_256EA30E0, type metadata accessor for ContextProtoToolQuery, (uint64_t)&protocol conformance descriptor for ContextProtoToolQuery);
}

void sub_23F6D2FA0()
{
  sub_23F6D3458(&qword_256EA2E70, type metadata accessor for ContextProtoToolQuery, (uint64_t)&protocol conformance descriptor for ContextProtoToolQuery);
}

void sub_23F6D2FCC()
{
  sub_23F6D3458(&qword_256EA30E8, type metadata accessor for ContextProtoToolQuery, (uint64_t)&protocol conformance descriptor for ContextProtoToolQuery);
}

void sub_23F6D2FF8()
{
  sub_23F6D3458(&qword_256EA30F0, type metadata accessor for ContextProtoToolQueryOutput, (uint64_t)&protocol conformance descriptor for ContextProtoToolQueryOutput);
}

void sub_23F6D3024()
{
  sub_23F6D3458(&qword_256EA30F8, type metadata accessor for ContextProtoToolQueryOutput, (uint64_t)&protocol conformance descriptor for ContextProtoToolQueryOutput);
}

void sub_23F6D3050()
{
  sub_23F6D3458(&qword_256EA2E78, type metadata accessor for ContextProtoToolQueryOutput, (uint64_t)&protocol conformance descriptor for ContextProtoToolQueryOutput);
}

void sub_23F6D307C()
{
  sub_23F6D3458(&qword_256EA3100, type metadata accessor for ContextProtoToolQueryOutput, (uint64_t)&protocol conformance descriptor for ContextProtoToolQueryOutput);
}

void sub_23F6D30A8()
{
  sub_23F6D3458(&qword_256EA3108, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationToolRetrievalResponse);
}

void sub_23F6D30D4()
{
  sub_23F6D3458(&qword_256EA3110, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationToolRetrievalResponse);
}

void sub_23F6D3100()
{
  sub_23F6D3458(&qword_256EA2E90, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationToolRetrievalResponse);
}

void sub_23F6D312C()
{
  sub_23F6D3458(&qword_256EA3118, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationToolRetrievalResponse);
}

void sub_23F6D3158()
{
  sub_23F6D3458(&qword_256EA3120, type metadata accessor for ContextProtoSpanMatchedEntity, (uint64_t)&protocol conformance descriptor for ContextProtoSpanMatchedEntity);
}

void sub_23F6D3184()
{
  sub_23F6D3458(&qword_256EA2DB8, type metadata accessor for ContextProtoSpanMatchedEntity, (uint64_t)&protocol conformance descriptor for ContextProtoSpanMatchedEntity);
}

void sub_23F6D31B0()
{
  sub_23F6D3458(&qword_256EA2EA0, type metadata accessor for ContextProtoSpanMatchedEntity, (uint64_t)&protocol conformance descriptor for ContextProtoSpanMatchedEntity);
}

void sub_23F6D31DC()
{
  sub_23F6D3458(&qword_256EA3128, type metadata accessor for ContextProtoSpanMatchedEntity, (uint64_t)&protocol conformance descriptor for ContextProtoSpanMatchedEntity);
}

void sub_23F6D3208()
{
  sub_23F6D3458(&qword_256EA3130, type metadata accessor for ContextProtoEntityMatch, (uint64_t)&protocol conformance descriptor for ContextProtoEntityMatch);
}

void sub_23F6D3234()
{
  sub_23F6D3458(&qword_256EA2E98, type metadata accessor for ContextProtoEntityMatch, (uint64_t)&protocol conformance descriptor for ContextProtoEntityMatch);
}

void sub_23F6D3260()
{
  sub_23F6D3458(&qword_256EA2EC0, type metadata accessor for ContextProtoEntityMatch, (uint64_t)&protocol conformance descriptor for ContextProtoEntityMatch);
}

void sub_23F6D328C()
{
  sub_23F6D3458(&qword_256EA3138, type metadata accessor for ContextProtoEntityMatch, (uint64_t)&protocol conformance descriptor for ContextProtoEntityMatch);
}

void sub_23F6D32B8()
{
  sub_23F6D3458(&qword_256EA3140, type metadata accessor for ContextProtoMatchProperties, (uint64_t)&protocol conformance descriptor for ContextProtoMatchProperties);
}

void sub_23F6D32E4()
{
  sub_23F6D3458(&qword_256EA3148, type metadata accessor for ContextProtoMatchProperties, (uint64_t)&protocol conformance descriptor for ContextProtoMatchProperties);
}

void sub_23F6D3310()
{
  sub_23F6D3458(&qword_256EA2ED8, type metadata accessor for ContextProtoMatchProperties, (uint64_t)&protocol conformance descriptor for ContextProtoMatchProperties);
}

void sub_23F6D333C()
{
  sub_23F6D3458(&qword_256EA3150, type metadata accessor for ContextProtoMatchProperties, (uint64_t)&protocol conformance descriptor for ContextProtoMatchProperties);
}

void sub_23F6D3368()
{
  sub_23F6D3458(&qword_256EA3158, type metadata accessor for ContextProtoAliasTypes, (uint64_t)&protocol conformance descriptor for ContextProtoAliasTypes);
}

void sub_23F6D3394()
{
  sub_23F6D3458(&qword_256EA3160, type metadata accessor for ContextProtoAliasTypes, (uint64_t)&protocol conformance descriptor for ContextProtoAliasTypes);
}

void sub_23F6D33C0()
{
  sub_23F6D3458(&qword_256EA2EE8, type metadata accessor for ContextProtoAliasTypes, (uint64_t)&protocol conformance descriptor for ContextProtoAliasTypes);
}

void sub_23F6D33EC()
{
  sub_23F6D3458(&qword_256EA3168, type metadata accessor for ContextProtoAliasTypes, (uint64_t)&protocol conformance descriptor for ContextProtoAliasTypes);
}

uint64_t *sub_23F6D3418(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void sub_23F6D3458(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = a2(255);
    atomic_store(MEMORY[0x242674E5C](a3, v5), a1);
  }
  sub_23F694CC8();
}

unint64_t sub_23F6D3494()
{
  unint64_t result;

  result = qword_256EA3280;
  if (!qword_256EA3280)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextUserClassification, &type metadata for ContextProtoStructuredContextSiriRequestContextUserClassification);
    atomic_store(result, (unint64_t *)&qword_256EA3280);
  }
  return result;
}

void sub_23F6D34D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  sub_23F6B5FFC(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_23F694CC8();
}

void sub_23F6D3508(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = a2(0);
  sub_23F6B6454(v2);
  sub_23F694CC8();
}

void sub_23F6D3530(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_23F6916B8(a3);
  sub_23F6B5FFC(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_23F694CC8();
}

uint64_t sub_23F6D356C()
{
  return sub_23FB2D7B4();
}

uint64_t sub_23F6D3598()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6D35AC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6D35C0()
{
  return sub_23FB2D718();
}

uint64_t sub_23F6D35D0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6D35E8()
{
  return sub_23FB2D7B4();
}

uint64_t sub_23F6D3600()
{
  return sub_23FB2F11C();
}

uint64_t sub_23F6D3614@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v3 + a1, v1);
}

uint64_t sub_23F6D3628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  return a5(0);
}

uint64_t sub_23F6D3644()
{
  return sub_23FB2D8B0();
}

uint64_t sub_23F6D3684()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6D369C()
{
  return sub_23FB2D940();
}

uint64_t sub_23F6D36AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  return v4(v1, v3 + a1, v2);
}

uint64_t sub_23F6D36D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_23F6D36E4()
{
  return sub_23FB2D9C4();
}

void sub_23F6D36F4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F6D3530(a1, a2, v2);
}

void sub_23F6D3724()
{
  uint64_t v0;
  unint64_t *v1;
  uint64_t (*v2)(uint64_t);

  sub_23F6D3458(v1, v2, v0);
}

unint64_t sub_23F6D3738(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

void sub_23F6D3740(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F6D3530(a1, a2, v2);
}

void sub_23F6D3748(uint64_t a1)
{
  uint64_t *v1;

  sub_23F6B4F84(a1, v1);
}

void sub_23F6D3764(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F6D3530(a1, a2, v2);
}

uint64_t sub_23F6D376C()
{
  return sub_23FB2D9A0();
}

void sub_23F6D378C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23F6B4F84(v2, a2);
}

uint64_t sub_23F6D3794(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 - 88) + 16))(*(_QWORD *)(v1 - 112), *(_QWORD *)(v1 - 120) + *(int *)(a1 + 20), *(_QWORD *)(v1 - 128));
}

uint64_t sub_23F6D37BC()
{
  return sub_23FB2D700();
}

uint64_t sub_23F6D37C8()
{
  return sub_23FB2F11C();
}

uint64_t sub_23F6D37D4()
{
  return sub_23FB2D874();
}

uint64_t sub_23F6D37E0()
{
  return sub_23FB2D700();
}

uint64_t sub_23F6D37F8()
{
  return sub_23FB2D988();
}

uint64_t sub_23F6D3818(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_23F6D3820(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23F6D3828()
{
  return sub_23FB2D988();
}

uint64_t sub_23F6D3834()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_23F6D3850()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6D3874(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void sub_23F6D387C(uint64_t a1)
{
  uint64_t *v1;

  sub_23F6B4F84(a1, v1);
}

uint64_t sub_23F6D3884()
{
  return sub_23FB2D700();
}

void sub_23F6D38A0(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F6D3508(a1, v1);
}

void sub_23F6D38A8(uint64_t a1)
{
  uint64_t *v1;

  sub_23F6B4F84(a1, v1);
}

uint64_t sub_23F6D38B0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6D38C8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6D38E0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6D38F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 112) = (char *)&a9 - v9;
  return 0;
}

uint64_t sub_23F6D3910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 104) = (char *)&a9 - v9;
  return 0;
}

void sub_23F6D3928(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F6D3508(a1, v1);
}

void sub_23F6D3930(uint64_t a1)
{
  uint64_t *v1;

  sub_23F6B4F84(a1, v1);
}

void sub_23F6D3938(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_23F6D3530(v3, v4, a3);
}

uint64_t sub_23F6D3944()
{
  return sub_23FB2D9A0();
}

uint64_t sub_23F6D395C()
{
  return sub_23FB2D880();
}

uint64_t sub_23F6D3968()
{
  return sub_23FB2D9A0();
}

uint64_t sub_23F6D3974()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD, _QWORD, uint64_t);
  uint64_t v3;

  return v2(*(_QWORD *)(v3 - 96), *(_QWORD *)(v3 - 104) + *(int *)(v0 + 20), v1);
}

uint64_t sub_23F6D398C()
{
  return 0;
}

uint64_t sub_23F6D3998@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)a1;
}

uint64_t sub_23F6D39A8()
{
  return sub_23FB2D94C();
}

void sub_23F6D39B8()
{
  uint64_t v0;

  sub_23F6C74C4(v0);
}

uint64_t sub_23F6D39E0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_23F6D39FC(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23F6D3A04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

void sub_23F6D3A2C()
{
  sub_23F6C2F3C();
}

uint64_t sub_23F6D3A50()
{
  return sub_23FB2D820();
}

void sub_23F6D3A5C(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_23F6D34D0(a1, v2, v1);
}

uint64_t sub_23F6D3A68()
{
  return sub_23FB2D700();
}

uint64_t sub_23F6D3A84()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t sub_23F6D3AA4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6D3AC4()
{
  return sub_23FB2D964();
}

uint64_t sub_23F6D3AD4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6D3AF8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6D3B1C()
{
  char v0;

  return v0 & 1;
}

void sub_23F6D3B28(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_23F6D34D0(a1, v2, v1);
}

uint64_t sub_23F6D3B34()
{
  char v0;

  return v0 & 1;
}

uint64_t sub_23F6D3B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  return a5(0);
}

uint64_t sub_23F6D3B78()
{
  return sub_23FB2D700();
}

uint64_t sub_23F6D3B94()
{
  uint64_t v0;

  return v0;
}

void sub_23F6D3BA0()
{
  uint64_t v0;

  sub_23F6C74F0(v0);
}

uint64_t sub_23F6D3BD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23F6D3BEC()
{
  return sub_23FB2D964();
}

void sub_23F6D3C14(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F6D3530(a1, v3, a3);
}

void sub_23F6D3C1C(uint64_t a1)
{
  uint64_t *v1;

  sub_23F6B4F84(a1, v1);
}

void sub_23F6D3C24(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F6D3508(v2, a2);
}

uint64_t sub_23F6D3C38()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  sub_23F6D1E0C(v0, v1);
  sub_23F6D1E0C(v2, v3);
  return v0;
}

uint64_t sub_23F6D3C64()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6D3C80()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6D3CB4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6D3CC0()
{
  return sub_23FB2D85C();
}

uint64_t sub_23F6D3CCC()
{
  return sub_23FB2D7D8();
}

void sub_23F6D3CD8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F6D3530(a1, v3, a3);
}

uint64_t sub_23F6D3D08()
{
  return sub_23FB2EB1C();
}

void sub_23F6D3D20(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F6D3508(v2, a2);
}

uint64_t sub_23F6D3D28()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_23F6D3D38()
{
  return sub_23FB2D97C();
}

void sub_23F6D3D48(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F6D3530(a1, a2, v2);
}

uint64_t sub_23F6D3D50()
{
  uint64_t v0;

  return v0;
}

void sub_23F6D3D68(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F6D3530(a1, a2, v2);
}

uint64_t sub_23F6D3D70()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6D3D7C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6D3D94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t sub_23F6D3DA4(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void sub_23F6D3DAC(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F6D3508(a1, v1);
}

void sub_23F6D3DB4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F6D3530(a1, a2, v2);
}

void sub_23F6D3DBC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F6D3530(a1, a2, v2);
}

uint64_t sub_23F6D3E18()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_23F6D3E24()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6D3E38()
{
  uint64_t v0;

  return v0;
}

void sub_23F6D3E4C()
{
  sub_23F6CFBAC();
}

uint64_t sub_23F6D3E6C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  if (v0 == 1)
    return v1;
  else
    return v2;
}

uint64_t sub_23F6D3E8C()
{
  uint64_t v0;
  unint64_t v1;

  return sub_23F6D1E64(v0, v1);
}

uint64_t sub_23F6D3EB8()
{
  return sub_23FB2DA00();
}

uint64_t sub_23F6D3EC4()
{
  return type metadata accessor for ContextProtoRetrievedContext(0);
}

uint64_t sub_23F6D3ECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_23F6D3ED4()
{
  return sub_23FB2FB78();
}

double sub_23F6D3EE0()
{
  uint64_t v0;

  return *(double *)v0;
}

uint64_t sub_23F6D3EF4()
{
  return sub_23FB2D844();
}

uint64_t sub_23F6D3F00()
{
  return sub_23FB2D7E4();
}

uint64_t sub_23F6D3F0C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6D3F2C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6D3F40()
{
  return 0x5F59414C50534944;
}

uint64_t sub_23F6D3F54(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v2, v3);
}

IntelligenceFlowPlannerSupport::ContextProtoContextType_optional __swiftcall ContextProtoContextType.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;
  IntelligenceFlowPlannerSupport::ContextProtoContextType_optional result;

  sub_23F6F0AE0(v1);
  return result;
}

uint64_t ContextProtoContextType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

IntelligenceFlowPlannerSupport::ContextProtoStructuredContextSiriRequestContextUserClassification_optional __swiftcall ContextProtoStructuredContextSiriRequestContextUserClassification.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;
  IntelligenceFlowPlannerSupport::ContextProtoStructuredContextSiriRequestContextUserClassification_optional result;

  sub_23F6F0AE0(v1);
  return result;
}

IntelligenceFlowPlannerSupport::ContextProtoAliasTypesOptions_optional __swiftcall ContextProtoAliasTypesOptions.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;
  IntelligenceFlowPlannerSupport::ContextProtoAliasTypesOptions_optional result;

  sub_23F6F0AE0(v1);
  return result;
}

void ContextProtoRetrievedContext.init()(_BYTE *a1@<X8>)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v2 = (int *)sub_23F6D3EC4();
  v3 = (uint64_t)&a1[v2[5]];
  sub_23F6B632C();
  sub_23F6F0BDC(v3);
  v4 = (uint64_t)&a1[v2[6]];
  sub_23F6F0C10();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v4, 1, 1, v5);
  v6 = sub_23F6F0960();
  v7 = type metadata accessor for ContextProtoContextMetadata(v6);
  sub_23F6F0A88(v7, v8, v9, v7);
  sub_23F6F0BDC((uint64_t)&a1[v10]);
  v11 = sub_23F6F0960();
  v12 = type metadata accessor for ContextProtoStructuredContext(v11);
  sub_23F6B5A8C(v4, v13, v14, v12);
  v15 = &a1[v2[10]];
  *v15 = 0;
  v15[1] = 0;
  sub_23F6F0878();
  *a1 = 0;
  sub_23F694C84();
}

uint64_t type metadata accessor for ContextProtoRetrievedContext(uint64_t a1)
{
  return sub_23F6D89A0(a1, (uint64_t *)&unk_256EA33A0);
}

uint64_t type metadata accessor for ContextProtoConfidence(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EA3650);
}

uint64_t type metadata accessor for ContextProtoContextMetadata(uint64_t a1)
{
  return sub_23F6D89A0(a1, (uint64_t *)&unk_256EA3468);
}

uint64_t type metadata accessor for ContextProtoStructuredContext(uint64_t a1)
{
  return sub_23F6D89A0(a1, (uint64_t *)&unk_256EA36E8);
}

uint64_t ContextProtoRetrievedContext.unknownFields.getter()
{
  return sub_23F6D4298(type metadata accessor for ContextProtoRetrievedContext);
}

uint64_t ContextProtoRetrievedContext.unknownFields.setter(uint64_t a1)
{
  return sub_23F6D42CC(a1, type metadata accessor for ContextProtoRetrievedContext);
}

uint64_t (*ContextProtoRetrievedContext.unknownFields.modify())()
{
  sub_23F6D3EC4();
  return nullsub_1;
}

void ContextProtoContextMetadata.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v1 = sub_23F6F0920();
  v2 = type metadata accessor for ContextProtoContextMetadata(v1);
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  v3 = sub_23F6F0C10();
  sub_23F6F0A88(v3, v4, v5, v6);
  v8 = v0 + v7;
  v9 = type metadata accessor for ContextProtoBoundingBox(0);
  sub_23F6B5A8C(v8, v10, v11, v9);
  v12 = v0 + *(int *)(v2 + 36);
  *(_QWORD *)v12 = 0;
  *(_BYTE *)(v12 + 8) = 1;
  v13 = (_QWORD *)(v0 + *(int *)(v2 + 40));
  *v13 = 0;
  v13[1] = 0;
  sub_23F6F0878();
  *(_QWORD *)v0 = MEMORY[0x24BEE4AF8];
  sub_23F694C84();
}

uint64_t type metadata accessor for ContextProtoBoundingBox(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EA3518);
}

uint64_t ContextProtoContextMetadata.unknownFields.getter()
{
  return sub_23F6D4298(type metadata accessor for ContextProtoContextMetadata);
}

uint64_t sub_23F6D4298(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_23F6F08BC(a1);
  sub_23F6B53A4();
  v1 = sub_23F6F0814();
  return sub_23F6B64B0(v1, v2, v3, v4);
}

uint64_t ContextProtoContextMetadata.unknownFields.setter(uint64_t a1)
{
  return sub_23F6D42CC(a1, type metadata accessor for ContextProtoContextMetadata);
}

uint64_t sub_23F6D42CC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_23F6F08EC(a1, a2);
  sub_23F6B53A4();
  v2 = sub_23F6F07FC();
  return sub_23F6B64B0(v2, v3, v4, v5);
}

uint64_t (*ContextProtoContextMetadata.unknownFields.modify())()
{
  sub_23F6F0AD8();
  return nullsub_1;
}

void ContextProtoBoundingBox.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  sub_23F6F0D24(a1);
  *(_DWORD *)(v1 + 8) = 0;
  *(_BYTE *)(v1 + 12) = v2;
  *(_DWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 20) = v2;
  *(_DWORD *)(v1 + 24) = 0;
  *(_BYTE *)(v1 + 28) = v2;
  type metadata accessor for ContextProtoBoundingBox(0);
  sub_23F6F0878();
  sub_23F694CC8();
}

uint64_t ContextProtoBoundingBox.unknownFields.getter()
{
  return sub_23F6D4714(type metadata accessor for ContextProtoBoundingBox);
}

uint64_t ContextProtoBoundingBox.unknownFields.setter(uint64_t a1)
{
  return sub_23F6D4748(a1, type metadata accessor for ContextProtoBoundingBox);
}

uint64_t (*ContextProtoBoundingBox.unknownFields.modify())()
{
  type metadata accessor for ContextProtoBoundingBox(0);
  sub_23F6F0B5C();
  return nullsub_1;
}

void ContextProtoSurroundingText.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_23F6F0920();
  v2 = type metadata accessor for ContextProtoSurroundingText(v1);
  *v0 = 0;
  v0[1] = 0;
  v3 = (uint64_t)v0 + *(int *)(v2 + 20);
  v4 = type metadata accessor for ContextProtoBoundingBox(0);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v3, 1, 1, v4);
  sub_23F6F0878();
  sub_23F694C84();
}

uint64_t type metadata accessor for ContextProtoSurroundingText(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EA35B8);
}

uint64_t ContextProtoSurroundingText.unknownFields.getter()
{
  return sub_23F6D446C(type metadata accessor for ContextProtoSurroundingText);
}

uint64_t ContextProtoSurroundingText.unknownFields.setter(uint64_t a1)
{
  return sub_23F6D44A0(a1, type metadata accessor for ContextProtoSurroundingText);
}

uint64_t (*ContextProtoSurroundingText.unknownFields.modify())()
{
  sub_23F6F0C30();
  sub_23F6F09C4();
  return nullsub_1;
}

void ContextProtoConfidence.init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23F6F0920();
  type metadata accessor for ContextProtoConfidence(v1);
  sub_23F6F0878();
  *(_DWORD *)v0 = 0;
  *(_BYTE *)(v0 + 4) = 0;
  sub_23F694CC8();
}

uint64_t ContextProtoConfidence.unknownFields.getter()
{
  return sub_23F6D446C(type metadata accessor for ContextProtoConfidence);
}

uint64_t sub_23F6D446C(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_23F6F08BC(a1);
  sub_23F6B53A4();
  v1 = sub_23F6F0814();
  return sub_23F6B64B0(v1, v2, v3, v4);
}

uint64_t ContextProtoConfidence.unknownFields.setter(uint64_t a1)
{
  return sub_23F6D44A0(a1, type metadata accessor for ContextProtoConfidence);
}

uint64_t sub_23F6D44A0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_23F6F08EC(a1, a2);
  sub_23F6B53A4();
  v2 = sub_23F6F07FC();
  return sub_23F6B64B0(v2, v3, v4, v5);
}

uint64_t (*ContextProtoConfidence.unknownFields.modify())()
{
  type metadata accessor for ContextProtoConfidence(0);
  sub_23F6F09C4();
  return nullsub_1;
}

void ContextProtoStructuredContext.init()()
{
  sub_23F6D4D08(type metadata accessor for ContextProtoStructuredContextKind, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContext);
}

uint64_t type metadata accessor for ContextProtoStructuredContextKind(uint64_t a1)
{
  return sub_23F6D89A0(a1, (uint64_t *)&unk_256EA3798);
}

uint64_t ContextProtoStructuredContext.unknownFields.getter()
{
  return sub_23F6D4D48(type metadata accessor for ContextProtoStructuredContext);
}

uint64_t ContextProtoStructuredContext.unknownFields.setter(uint64_t a1)
{
  return sub_23F6D4D7C(a1, type metadata accessor for ContextProtoStructuredContext);
}

uint64_t (*ContextProtoStructuredContext.unknownFields.modify())()
{
  type metadata accessor for ContextProtoStructuredContext(0);
  sub_23F6F099C();
  return nullsub_1;
}

void ContextProtoStructuredContextSiriRequestContext.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  v3 = (int *)sub_23F6F0B48();
  *(_DWORD *)(a1 + 80) = 33686018;
  *(_BYTE *)(a1 + 84) = 2;
  v4 = sub_23F6F0960();
  v5 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(v4);
  sub_23F6B5A8C(v1, v6, v7, v5);
  *(_OWORD *)(a1 + v3[16]) = xmmword_23FB50350;
  sub_23F6F0CC8(v3[17]);
  sub_23F6F0CC8(v3[18]);
  v8 = sub_23F6F0960();
  v9 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(v8);
  sub_23F6B5A8C(v1, v10, v11, v9);
  v12 = a1 + v3[20];
  *(_QWORD *)v12 = 0;
  *(_BYTE *)(v12 + 8) = 1;
  sub_23F6F0CC8(v3[21]);
  *(_BYTE *)(a1 + v3[22]) = 2;
  *(_BYTE *)(a1 + v3[23]) = 2;
  v13 = sub_23F6F0960();
  v14 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(v13);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v1, 1, 1, v14);
  sub_23F6F0878();
  v15 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)a1 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 8) = v15;
  sub_23F694C84();
}

uint64_t type metadata accessor for ContextProtoStructuredContextSiriRequestContext(uint64_t a1)
{
  return sub_23F6D89A0(a1, (uint64_t *)&unk_256EA3800);
}

uint64_t type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EA3998);
}

uint64_t type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EA38F8);
}

uint64_t type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EA3A30);
}

uint64_t ContextProtoStructuredContextSiriRequestContext.unknownFields.getter()
{
  return sub_23F6D49F8(type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
}

uint64_t ContextProtoStructuredContextSiriRequestContext.unknownFields.setter(uint64_t a1)
{
  return sub_23F6D4A2C(a1, type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.unknownFields.modify())()
{
  sub_23F6F0B48();
  return nullsub_1;
}

void ContextProtoStructuredContextSiriRequestContextContentRestriction.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  sub_23F6F0D24(a1);
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 24) = 0;
  *(_BYTE *)(v1 + 28) = v2;
  *(_DWORD *)(v1 + 32) = 0;
  *(_BYTE *)(v1 + 36) = v2;
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  sub_23F6F0878();
  sub_23F694CC8();
}

uint64_t ContextProtoStructuredContextSiriRequestContextContentRestriction.unknownFields.getter()
{
  return sub_23F6D4714(type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
}

uint64_t sub_23F6D4714(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_23F6F08BC(a1);
  sub_23F6B53A4();
  v1 = sub_23F6F0814();
  return sub_23F6B64B0(v1, v2, v3, v4);
}

uint64_t ContextProtoStructuredContextSiriRequestContextContentRestriction.unknownFields.setter(uint64_t a1)
{
  return sub_23F6D4748(a1, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
}

uint64_t sub_23F6D4748(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_23F6F08EC(a1, a2);
  sub_23F6B53A4();
  v2 = sub_23F6F07FC();
  return sub_23F6B64B0(v2, v3, v4, v5);
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextContentRestriction.unknownFields.modify())()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  sub_23F6F0B5C();
  return nullsub_1;
}

void ContextProtoStructuredContextSiriRequestContextUser.init()(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = 1282;
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  sub_23F6F0878();
  sub_23F694CC8();
}

uint64_t ContextProtoStructuredContextSiriRequestContextUser.unknownFields.getter()
{
  return sub_23F6D4BDC(type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
}

uint64_t ContextProtoStructuredContextSiriRequestContextUser.unknownFields.setter(uint64_t a1)
{
  return sub_23F6D4C10(a1, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextUser.unknownFields.modify())()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  sub_23F6F0A54();
  return nullsub_1;
}

void ContextProtoStructuredContextSiriRequestContextMeCard.init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23F6F0920();
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(v1);
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  sub_23F6F0878();
  *(_QWORD *)v0 = MEMORY[0x24BEE4AF8];
  sub_23F694CC8();
}

uint64_t ContextProtoStructuredContextSiriRequestContextMeCard.unknownFields.getter()
{
  return sub_23F6D48C8(type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
}

uint64_t ContextProtoStructuredContextSiriRequestContextMeCard.unknownFields.setter(uint64_t a1)
{
  return sub_23F6D48FC(a1, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextMeCard.unknownFields.modify())()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  sub_23F6F0CF8();
  return nullsub_1;
}

void ContextProtoStructuredContextSiriRequestContextAddress.init()()
{
  _OWORD *v0;
  uint64_t v1;

  v1 = sub_23F6F0920();
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress(v1);
  *v0 = 0u;
  v0[1] = 0u;
  v0[2] = 0u;
  v0[3] = 0u;
  v0[4] = 0u;
  v0[5] = 0u;
  sub_23F6F0878();
  sub_23F694CC8();
}

uint64_t ContextProtoStructuredContextSiriRequestContextAddress.unknownFields.getter()
{
  return sub_23F6D48C8(type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress);
}

uint64_t sub_23F6D48C8(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_23F6F08BC(a1);
  sub_23F6B53A4();
  v1 = sub_23F6F0814();
  return sub_23F6B64B0(v1, v2, v3, v4);
}

uint64_t ContextProtoStructuredContextSiriRequestContextAddress.unknownFields.setter(uint64_t a1)
{
  return sub_23F6D48FC(a1, type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress);
}

uint64_t sub_23F6D48FC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_23F6F08EC(a1, a2);
  sub_23F6B53A4();
  v2 = sub_23F6F07FC();
  return sub_23F6B64B0(v2, v3, v4, v5);
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextAddress.unknownFields.modify())()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress(0);
  sub_23F6F0CF8();
  return nullsub_1;
}

void ContextProtoQueryDecorationOutput.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v5;

  v2 = sub_23F6F0920();
  type metadata accessor for ContextProtoQueryDecorationOutput(v2);
  v3 = sub_23F6F0960();
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(v3);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v1, 1, 1, DecorationToolRetrievalResponse);
  sub_23F6F0878();
  v5 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)v0 = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(v0 + 8) = 0;
  *(_QWORD *)(v0 + 16) = v5;
  *(_BYTE *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 32) = v5;
  *(_BYTE *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 48) = v5;
  *(_BYTE *)(v0 + 56) = 0;
  *(_QWORD *)(v0 + 64) = v5;
  *(_BYTE *)(v0 + 72) = 0;
  *(_QWORD *)(v0 + 80) = v5;
  *(_BYTE *)(v0 + 88) = 0;
  *(_QWORD *)(v0 + 96) = v5;
  *(_BYTE *)(v0 + 104) = 0;
  *(_QWORD *)(v0 + 112) = v5;
  *(_BYTE *)(v0 + 120) = 0;
  *(_QWORD *)(v0 + 128) = v5;
  *(_BYTE *)(v0 + 136) = 0;
  *(_QWORD *)(v0 + 144) = v5;
  *(_BYTE *)(v0 + 152) = 0;
  sub_23F694C84();
}

uint64_t ContextProtoQueryDecorationOutput.unknownFields.getter()
{
  return sub_23F6D49F8(type metadata accessor for ContextProtoQueryDecorationOutput);
}

uint64_t sub_23F6D49F8(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_23F6F08BC(a1);
  sub_23F6B53A4();
  v1 = sub_23F6F0814();
  return sub_23F6B64B0(v1, v2, v3, v4);
}

uint64_t ContextProtoQueryDecorationOutput.unknownFields.setter(uint64_t a1)
{
  return sub_23F6D4A2C(a1, type metadata accessor for ContextProtoQueryDecorationOutput);
}

uint64_t sub_23F6D4A2C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_23F6F08EC(a1, a2);
  sub_23F6B53A4();
  v2 = sub_23F6F07FC();
  return sub_23F6B64B0(v2, v3, v4, v5);
}

uint64_t (*ContextProtoQueryDecorationOutput.unknownFields.modify())()
{
  sub_23F6F0C08();
  return nullsub_1;
}

void ContextProtoQueryDecorationInput.init()(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  *(_BYTE *)(a1 + 64) = 1;
  *(_QWORD *)(a1 + 72) = 0;
  *(_BYTE *)(a1 + 80) = 1;
  *(_QWORD *)(a1 + 88) = 0;
  *(_WORD *)(a1 + 96) = 513;
  type metadata accessor for ContextProtoQueryDecorationInput(0);
  sub_23F6F0878();
  sub_23F6F0CBC();
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(a1 + 32) = 0;
  sub_23F694CC8();
}

uint64_t ContextProtoQueryDecorationInput.unknownFields.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v0 = sub_23F6F0920();
  type metadata accessor for ContextProtoQueryDecorationInput(v0);
  sub_23F6B53A4();
  v1 = sub_23F6F0814();
  return sub_23F6B64B0(v1, v2, v3, v4);
}

uint64_t ContextProtoQueryDecorationInput.unknownFields.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  type metadata accessor for ContextProtoQueryDecorationInput(0);
  sub_23F6B53A4();
  v0 = sub_23F6F07FC();
  return sub_23F6B64B0(v0, v1, v2, v3);
}

uint64_t (*ContextProtoQueryDecorationInput.unknownFields.modify())()
{
  type metadata accessor for ContextProtoQueryDecorationInput(0);
  return nullsub_1;
}

void ContextProtoDynamicEnumerationEntity.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_23F6F0920();
  v3 = type metadata accessor for ContextProtoDynamicEnumerationEntity(v2);
  sub_23F6F0960();
  v4 = sub_23FB2EB28();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v1, 1, 1, v4);
  v5 = v0 + *(int *)(v3 + 24);
  v6 = sub_23F6B632C();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v5, 1, 1, v6);
  sub_23F6F0878();
  sub_23F6F0CBC();
  sub_23F694C84();
}

uint64_t ContextProtoDynamicEnumerationEntity.unknownFields.getter()
{
  return sub_23F6D4BDC(type metadata accessor for ContextProtoDynamicEnumerationEntity);
}

uint64_t sub_23F6D4BDC(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_23F6F08BC(a1);
  sub_23F6B53A4();
  v1 = sub_23F6F0814();
  return sub_23F6B64B0(v1, v2, v3, v4);
}

uint64_t ContextProtoDynamicEnumerationEntity.unknownFields.setter(uint64_t a1)
{
  return sub_23F6D4C10(a1, type metadata accessor for ContextProtoDynamicEnumerationEntity);
}

uint64_t sub_23F6D4C10(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_23F6F08EC(a1, a2);
  sub_23F6B53A4();
  v2 = sub_23F6F07FC();
  return sub_23F6B64B0(v2, v3, v4, v5);
}

uint64_t (*ContextProtoDynamicEnumerationEntity.unknownFields.modify())()
{
  sub_23F6F0B40();
  sub_23F6F0A54();
  return nullsub_1;
}

void ContextProtoRetrievedTool.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = sub_23F6F0920();
  type metadata accessor for ContextProtoRetrievedTool(v1);
  v2 = sub_23F6F0960();
  v3 = type metadata accessor for ContextProtoRetrievedTool.Definition(v2);
  sub_23F6F0A88(v3, v4, v5, v3);
  sub_23F6F0878();
  *(_DWORD *)v0 = 0;
  *(_QWORD *)(v0 + 8) = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(v0 + 16) = 0;
  sub_23F694C84();
}

uint64_t ContextProtoRetrievedTool.unknownFields.getter()
{
  return sub_23F6D4714(type metadata accessor for ContextProtoRetrievedTool);
}

uint64_t ContextProtoRetrievedTool.unknownFields.setter(uint64_t a1)
{
  return sub_23F6D4748(a1, type metadata accessor for ContextProtoRetrievedTool);
}

uint64_t (*ContextProtoRetrievedTool.unknownFields.modify())()
{
  sub_23F6F0C40();
  sub_23F6F0B5C();
  return nullsub_1;
}

IntelligenceFlowPlannerSupport::ContextProtoRetrievedTool::Stage_optional __swiftcall ContextProtoRetrievedTool.Stage.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;
  IntelligenceFlowPlannerSupport::ContextProtoRetrievedTool::Stage_optional result;

  sub_23F6F0AE0(v1);
  return result;
}

void ContextProtoRetrievedTool.Definition.init()()
{
  sub_23F6D4D08(type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool.Definition);
}

void sub_23F6D4D08(uint64_t (*a1)(_QWORD), void (*a2)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1(0);
  v4 = sub_23F6F0CD4(v3);
  a2(v4);
  sub_23F6F0B34();
  sub_23F694CC8();
}

uint64_t ContextProtoRetrievedTool.Definition.unknownFields.getter()
{
  return sub_23F6D4D48(type metadata accessor for ContextProtoRetrievedTool.Definition);
}

uint64_t sub_23F6D4D48(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_23F6F08BC(a1);
  sub_23F6B53A4();
  v1 = sub_23F6F0814();
  return sub_23F6B64B0(v1, v2, v3, v4);
}

uint64_t ContextProtoRetrievedTool.Definition.unknownFields.setter(uint64_t a1)
{
  return sub_23F6D4D7C(a1, type metadata accessor for ContextProtoRetrievedTool.Definition);
}

uint64_t sub_23F6D4D7C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_23F6F08EC(a1, a2);
  sub_23F6B53A4();
  v2 = sub_23F6F07FC();
  return sub_23F6B64B0(v2, v3, v4, v5);
}

uint64_t (*ContextProtoRetrievedTool.Definition.unknownFields.modify())()
{
  type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  sub_23F6F099C();
  return nullsub_1;
}

void ContextProtoSampleInvocation.init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23F6F0920();
  type metadata accessor for ContextProtoSampleInvocation(v1);
  sub_23F6F0878();
  sub_23F6F0CBC();
  *(_DWORD *)(v0 + 16) = 0;
  sub_23F694CC8();
}

uint64_t ContextProtoSampleInvocation.unknownFields.getter()
{
  return sub_23F6D446C(type metadata accessor for ContextProtoSampleInvocation);
}

uint64_t ContextProtoSampleInvocation.unknownFields.setter(uint64_t a1)
{
  return sub_23F6D44A0(a1, type metadata accessor for ContextProtoSampleInvocation);
}

uint64_t (*ContextProtoSampleInvocation.unknownFields.modify())()
{
  type metadata accessor for ContextProtoSampleInvocation(0);
  sub_23F6F09C4();
  return nullsub_1;
}

void ContextProtoToolRetrievalType.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F6F0920();
  v1 = sub_23FB2EB40();
  sub_23F6F0950(v1, v2, v3, v1);
  sub_23F6F0C28();
  sub_23F6F0960();
  v4 = sub_23FB2EB34();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v0, 1, 1, v4);
  sub_23F6F0878();
  sub_23F694C84();
}

uint64_t ContextProtoToolRetrievalType.unknownFields.getter()
{
  return sub_23F6D446C(type metadata accessor for ContextProtoToolRetrievalType);
}

uint64_t ContextProtoToolRetrievalType.unknownFields.setter(uint64_t a1)
{
  return sub_23F6D44A0(a1, type metadata accessor for ContextProtoToolRetrievalType);
}

uint64_t (*ContextProtoToolRetrievalType.unknownFields.modify())()
{
  sub_23F6F0C28();
  sub_23F6F09C4();
  return nullsub_1;
}

void ContextProtoToolQuery.init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23F6F0920();
  type metadata accessor for ContextProtoToolQuery(v1);
  sub_23F6F0878();
  sub_23F6F0CBC();
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BEE4AF8];
  sub_23F694CC8();
}

uint64_t ContextProtoToolQuery.unknownFields.getter()
{
  return sub_23F6D446C(type metadata accessor for ContextProtoToolQuery);
}

uint64_t ContextProtoToolQuery.unknownFields.setter(uint64_t a1)
{
  return sub_23F6D44A0(a1, type metadata accessor for ContextProtoToolQuery);
}

uint64_t (*ContextProtoToolQuery.unknownFields.modify())()
{
  type metadata accessor for ContextProtoToolQuery(0);
  sub_23F6F09C4();
  return nullsub_1;
}

void ContextProtoToolQueryOutput.init()()
{
  sub_23F6D4D08(type metadata accessor for ContextProtoRetrievedTool.Definition, (void (*)(uint64_t))type metadata accessor for ContextProtoToolQueryOutput);
}

uint64_t ContextProtoToolQueryOutput.unknownFields.getter()
{
  return sub_23F6D4D48(type metadata accessor for ContextProtoToolQueryOutput);
}

uint64_t ContextProtoToolQueryOutput.unknownFields.setter(uint64_t a1)
{
  return sub_23F6D4D7C(a1, type metadata accessor for ContextProtoToolQueryOutput);
}

uint64_t (*ContextProtoToolQueryOutput.unknownFields.modify())()
{
  type metadata accessor for ContextProtoToolQueryOutput(0);
  sub_23F6F099C();
  return nullsub_1;
}

void ContextProtoQueryDecorationToolRetrievalResponse.init()(uint64_t a1@<X8>)
{
  uint64_t v2;

  type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  sub_23F6F0878();
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  *(_DWORD *)(a1 + 32) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 40) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = v2;
  sub_23F694CC8();
}

uint64_t ContextProtoQueryDecorationToolRetrievalResponse.unknownFields.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  sub_23F6B53A4();
  v0 = sub_23F6F0814();
  return sub_23F6B64B0(v0, v1, v2, v3);
}

uint64_t ContextProtoQueryDecorationToolRetrievalResponse.unknownFields.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  sub_23F6B53A4();
  v0 = sub_23F6F07FC();
  return sub_23F6B64B0(v0, v1, v2, v3);
}

uint64_t (*ContextProtoQueryDecorationToolRetrievalResponse.unknownFields.modify())()
{
  type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  sub_23F6F0D38();
  return nullsub_1;
}

void ContextProtoSpanMatchedEntity.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F6F0920();
  v2 = (uint64_t)v0 + *(int *)(type metadata accessor for ContextProtoSpanMatchedEntity(v1) + 20);
  v3 = sub_23F6B632C();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v2, 1, 1, v3);
  sub_23F6F0878();
  *v0 = MEMORY[0x24BEE4AF8];
  sub_23F694C84();
}

uint64_t ContextProtoSpanMatchedEntity.unknownFields.getter()
{
  return sub_23F6D446C(type metadata accessor for ContextProtoSpanMatchedEntity);
}

uint64_t ContextProtoSpanMatchedEntity.unknownFields.setter(uint64_t a1)
{
  return sub_23F6D44A0(a1, type metadata accessor for ContextProtoSpanMatchedEntity);
}

uint64_t (*ContextProtoSpanMatchedEntity.unknownFields.modify())()
{
  type metadata accessor for ContextProtoSpanMatchedEntity(0);
  sub_23F6F09C4();
  return nullsub_1;
}

void ContextProtoEntityMatch.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t matched;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_23F6F0B50();
  v3 = sub_23F6F0960();
  matched = type metadata accessor for ContextProtoMatchProperties(v3);
  sub_23F6B5A8C(v1, v5, v6, matched);
  sub_23F6F0CC8(*(int *)(v2 + 52));
  sub_23F6F0878();
  *v0 = 0;
  v0[1] = 0xE000000000000000;
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  v0[4] = 0;
  v0[5] = 0;
  *(_QWORD *)((char *)v0 + 45) = 0;
  v0[7] = 0;
  v0[8] = 0xE000000000000000;
  v0[9] = 0;
  v0[10] = 0xE000000000000000;
  sub_23F694C84();
}

uint64_t ContextProtoEntityMatch.unknownFields.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F6F0B50();
  sub_23F6B53A4();
  v0 = sub_23F6F0814();
  return sub_23F6B64B0(v0, v1, v2, v3);
}

uint64_t ContextProtoEntityMatch.unknownFields.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F6F0C9C();
  sub_23F6B53A4();
  v0 = sub_23F6F07FC();
  return sub_23F6B64B0(v0, v1, v2, v3);
}

uint64_t (*ContextProtoEntityMatch.unknownFields.modify())()
{
  type metadata accessor for ContextProtoEntityMatch(0);
  return nullsub_1;
}

void ContextProtoMatchProperties.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 1;
  sub_23F6F0C38();
  v2 = sub_23F6F0960();
  v3 = type metadata accessor for ContextProtoAliasTypes(v2);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v1, 1, 1, v3);
  sub_23F6F0878();
  sub_23F694C84();
}

uint64_t ContextProtoMatchProperties.unknownFields.getter()
{
  return sub_23F6D4BDC(type metadata accessor for ContextProtoMatchProperties);
}

uint64_t ContextProtoMatchProperties.unknownFields.setter(uint64_t a1)
{
  return sub_23F6D4C10(a1, type metadata accessor for ContextProtoMatchProperties);
}

uint64_t (*ContextProtoMatchProperties.unknownFields.modify())()
{
  sub_23F6F0C38();
  sub_23F6F0A54();
  return nullsub_1;
}

void ContextProtoAliasTypes.init()()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = sub_23F6F0920();
  type metadata accessor for ContextProtoAliasTypes(v1);
  sub_23F6F0878();
  *v0 = MEMORY[0x24BEE4AF8];
  sub_23F694CC8();
}

uint64_t ContextProtoAliasTypes.unknownFields.getter()
{
  return sub_23F6D4D48(type metadata accessor for ContextProtoAliasTypes);
}

uint64_t ContextProtoAliasTypes.unknownFields.setter(uint64_t a1)
{
  return sub_23F6D4D7C(a1, type metadata accessor for ContextProtoAliasTypes);
}

uint64_t (*ContextProtoAliasTypes.unknownFields.modify())()
{
  type metadata accessor for ContextProtoAliasTypes(0);
  sub_23F6F099C();
  return nullsub_1;
}

void *static ContextProtoContextType.allCases.getter()
{
  return &unk_250FEBDE0;
}

IntelligenceFlowPlannerSupport::ContextProtoContextType_optional sub_23F6D52C8(Swift::Int *a1)
{
  return ContextProtoContextType.init(rawValue:)(*a1);
}

void sub_23F6D52D0(uint64_t *a1@<X8>)
{
  *a1 = ContextProtoContextType.rawValue.getter();
  sub_23F694CC8();
}

void sub_23F6D52F0()
{
  sub_23F7F6DA0();
}

uint64_t sub_23F6D52F8()
{
  sub_23F6D1D94();
  return sub_23FB2D790();
}

void sub_23F6D5330()
{
  sub_23F7F7828();
}

void sub_23F6D5338(_QWORD *a1@<X8>)
{
  *a1 = &unk_250FEBDE0;
}

void *static ContextProtoStructuredContextSiriRequestContextUserClassification.allCases.getter()
{
  return &unk_250FEBE20;
}

IntelligenceFlowPlannerSupport::ContextProtoStructuredContextSiriRequestContextUserClassification_optional sub_23F6D5354(Swift::Int *a1)
{
  return ContextProtoStructuredContextSiriRequestContextUserClassification.init(rawValue:)(*a1);
}

void sub_23F6D535C()
{
  sub_23F7F6DB4();
}

uint64_t sub_23F6D5364()
{
  sub_23F6D3494();
  return sub_23FB2D790();
}

void sub_23F6D539C()
{
  sub_23F7F783C();
}

void sub_23F6D53A4(_QWORD *a1@<X8>)
{
  *a1 = &unk_250FEBE20;
}

void *static ContextProtoConfidenceBucket.allCases.getter()
{
  return &unk_250FEBE48;
}

void sub_23F6D53C0()
{
  sub_23F7F6DC8();
}

uint64_t sub_23F6D53C8()
{
  sub_23F6D1DD0();
  return sub_23FB2D790();
}

void sub_23F6D5400()
{
  sub_23F7F7C74();
}

void sub_23F6D5408(_QWORD *a1@<X8>)
{
  *a1 = &unk_250FEBE48;
}

void *static ContextProtoQueryDecorationCaller.allCases.getter()
{
  return &unk_250FEBE70;
}

void sub_23F6D5424()
{
  sub_23F7F6DDC();
}

uint64_t sub_23F6D542C()
{
  sub_23F6D1E78();
  return sub_23FB2D790();
}

void sub_23F6D5464()
{
  sub_23F7F7D14();
}

void sub_23F6D546C(_QWORD *a1@<X8>)
{
  *a1 = &unk_250FEBE70;
}

void *static ContextProtoEntityMatcherType.allCases.getter()
{
  return &unk_250FEBE98;
}

void sub_23F6D5488()
{
  sub_23F7F6DF0();
}

uint64_t sub_23F6D5490()
{
  sub_23F6D1EF0();
  return sub_23FB2D790();
}

void sub_23F6D54C8()
{
  sub_23F7F7CD8();
}

void sub_23F6D54D0(_QWORD *a1@<X8>)
{
  *a1 = &unk_250FEBE98;
}

void *static ContextProtoAliasTypesOptions.allCases.getter()
{
  return &unk_250FEBEC0;
}

IntelligenceFlowPlannerSupport::ContextProtoAliasTypesOptions_optional sub_23F6D54EC(Swift::Int *a1)
{
  return ContextProtoAliasTypesOptions.init(rawValue:)(*a1);
}

void sub_23F6D54F4()
{
  sub_23F7F6E04();
}

uint64_t sub_23F6D54FC()
{
  sub_23F6D1F2C();
  return sub_23FB2D790();
}

void sub_23F6D5534()
{
  sub_23F7F7CC4();
}

void sub_23F6D553C(_QWORD *a1@<X8>)
{
  *a1 = &unk_250FEBEC0;
}

void ContextProtoRetrievedContext.type.getter(_BYTE *a1@<X8>)
{
  sub_23F6F0AE0(a1);
}

_BYTE *ContextProtoRetrievedContext.type.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*ContextProtoRetrievedContext.type.modify())()
{
  return nullsub_1;
}

void ContextProtoRetrievedContext.value.getter()
{
  sub_23F6D5E20(type metadata accessor for ContextProtoRetrievedContext);
}

void ContextProtoRetrievedContext.value.setter(uint64_t a1)
{
  sub_23F6D5E58(a1, type metadata accessor for ContextProtoRetrievedContext);
}

uint64_t (*ContextProtoRetrievedContext.value.modify())()
{
  sub_23F6D3EC4();
  sub_23F6F099C();
  return nullsub_1;
}

void ContextProtoRetrievedContext.relevance.getter()
{
  sub_23F6D7758(type metadata accessor for ContextProtoRetrievedContext);
}

void ContextProtoRetrievedContext.relevance.setter(uint64_t a1)
{
  sub_23F6D7790(a1, type metadata accessor for ContextProtoRetrievedContext);
}

uint64_t (*ContextProtoRetrievedContext.relevance.modify())()
{
  sub_23F6D3EC4();
  sub_23F6F09C4();
  return nullsub_1;
}

void ContextProtoRetrievedContext.metadata.getter()
{
  sub_23F6D597C(type metadata accessor for ContextProtoRetrievedContext);
}

void ContextProtoRetrievedContext.metadata.setter(uint64_t a1)
{
  sub_23F6D59B4(a1, type metadata accessor for ContextProtoRetrievedContext);
}

uint64_t (*ContextProtoRetrievedContext.metadata.modify())()
{
  sub_23F6D3EC4();
  sub_23F6F0A54();
  return nullsub_1;
}

void ContextProtoRetrievedContext.typedValue.getter()
{
  sub_23F6D5A14(type metadata accessor for ContextProtoRetrievedContext);
}

void ContextProtoRetrievedContext.typedValue.setter(uint64_t a1)
{
  sub_23F6D5A4C(a1, type metadata accessor for ContextProtoRetrievedContext);
}

uint64_t (*ContextProtoRetrievedContext.typedValue.modify())()
{
  sub_23F6D3EC4();
  sub_23F6F0B5C();
  return nullsub_1;
}

void ContextProtoRetrievedContext.structuredContext.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for ContextProtoRetrievedContext(0);
  sub_23F6F0C88(v0 + *(int *)(v1 + 36), v2, &qword_256EA2CD8);
  sub_23F694CC8();
}

void ContextProtoRetrievedContext.structuredContext.setter()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for ContextProtoRetrievedContext(0);
  sub_23F6F0D38();
  sub_23F6F0B80(v0, v1, &qword_256EA2CD8);
  sub_23F694CC8();
}

uint64_t (*ContextProtoRetrievedContext.structuredContext.modify())()
{
  type metadata accessor for ContextProtoRetrievedContext(0);
  sub_23F6F0D38();
  return nullsub_1;
}

void ContextProtoRetrievedContext.identifier.getter()
{
  sub_23F6D5B20((void (*)(_QWORD))type metadata accessor for ContextProtoRetrievedContext);
}

void ContextProtoRetrievedContext.identifier.setter(uint64_t a1, uint64_t a2)
{
  sub_23F6D5B60(a1, a2, (void (*)(_QWORD))type metadata accessor for ContextProtoRetrievedContext);
}

uint64_t (*ContextProtoRetrievedContext.identifier.modify())()
{
  sub_23F6D3EC4();
  sub_23F6F0CF8();
  return nullsub_1;
}

uint64_t ContextProtoRetrievedContext.init(value:relevance:type:metadata:typedValue:structuredContext:identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _BYTE *a9@<X8>)
{
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t result;
  char v28;

  v28 = *a3;
  v12 = (int *)sub_23F6D3EC4();
  v13 = (uint64_t)&a9[v12[5]];
  sub_23F6B632C();
  sub_23F6F0BEC(v13);
  v14 = (uint64_t)&a9[v12[6]];
  sub_23F6F0C10();
  sub_23F6B5A8C(v14, v15, v16, v17);
  v18 = (uint64_t)&a9[v12[7]];
  v19 = type metadata accessor for ContextProtoContextMetadata(0);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v18, 1, 1, v19);
  v20 = (uint64_t)&a9[v12[8]];
  sub_23F6F0BEC(v20);
  v21 = (uint64_t)&a9[v12[9]];
  v22 = type metadata accessor for ContextProtoStructuredContext(0);
  sub_23F6B5A8C(v21, v23, v24, v22);
  v25 = &a9[v12[10]];
  *v25 = 0;
  v25[1] = 0;
  sub_23F6F0CB4();
  sub_23F6D8AD0(a1, v13, &qword_256EA2610);
  sub_23F6D8AD0(a2, v14, &qword_256EA2CF8);
  *a9 = v28;
  sub_23F6F0B68(a4, v26, &qword_256EA2CE8);
  sub_23F6D8AD0(a5, v20, &qword_256EA2610);
  sub_23F6D8AD0(a6, v21, &qword_256EA2CD8);
  result = swift_bridgeObjectRelease();
  *v25 = a7;
  v25[1] = a8;
  return result;
}

uint64_t ContextProtoContextMetadata.onScreenSurroundingText.getter()
{
  return swift_bridgeObjectRetain();
}

void ContextProtoContextMetadata.onScreenSurroundingText.setter(uint64_t a1)
{
  _QWORD *v1;

  swift_bridgeObjectRelease();
  *v1 = a1;
  sub_23F694CC8();
}

uint64_t (*ContextProtoContextMetadata.onScreenSurroundingText.modify())()
{
  return nullsub_1;
}

void ContextProtoContextMetadata.entityID.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

uint64_t (*ContextProtoContextMetadata.entityID.modify())()
{
  return nullsub_1;
}

void ContextProtoContextMetadata.appBundleID.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

uint64_t (*ContextProtoContextMetadata.appBundleID.modify())()
{
  return nullsub_1;
}

void ContextProtoContextMetadata.saliency.getter()
{
  sub_23F6D597C(type metadata accessor for ContextProtoContextMetadata);
}

void sub_23F6D597C(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = sub_23F6F08D8(a1);
  sub_23F6F0908(*(int *)(v1 + 28));
  sub_23F694C84();
}

void ContextProtoContextMetadata.saliency.setter(uint64_t a1)
{
  sub_23F6D59B4(a1, type metadata accessor for ContextProtoContextMetadata);
}

void sub_23F6D59B4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = sub_23F6F0918(a1, a2);
  sub_23F6F08F8(*(int *)(v2 + 28));
  sub_23F694C84();
}

uint64_t (*ContextProtoContextMetadata.saliency.modify())()
{
  sub_23F6F0AD8();
  sub_23F6F0A54();
  return nullsub_1;
}

void ContextProtoContextMetadata.onScreenBoundingBox.getter()
{
  sub_23F6D5A14(type metadata accessor for ContextProtoContextMetadata);
}

void sub_23F6D5A14(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = sub_23F6F08D8(a1);
  sub_23F6F0908(*(int *)(v1 + 32));
  sub_23F694C84();
}

void ContextProtoContextMetadata.onScreenBoundingBox.setter(uint64_t a1)
{
  sub_23F6D5A4C(a1, type metadata accessor for ContextProtoContextMetadata);
}

void sub_23F6D5A4C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = sub_23F6F0918(a1, a2);
  sub_23F6F08F8(*(int *)(v2 + 32));
  sub_23F694C84();
}

uint64_t (*ContextProtoContextMetadata.onScreenBoundingBox.modify())()
{
  sub_23F6F0AD8();
  sub_23F6F0B5C();
  return nullsub_1;
}

uint64_t ContextProtoContextMetadata.seq.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ContextProtoContextMetadata(0) + 36));
}

void ContextProtoContextMetadata.seq.setter()
{
  uint64_t v0;

  v0 = type metadata accessor for ContextProtoContextMetadata(0);
  sub_23F6F0D44(*(int *)(v0 + 36));
  sub_23F694C84();
}

uint64_t (*ContextProtoContextMetadata.seq.modify())()
{
  type metadata accessor for ContextProtoContextMetadata(0);
  sub_23F6F0D38();
  return nullsub_1;
}

void ContextProtoContextMetadata.groupID.getter()
{
  sub_23F6D5B20((void (*)(_QWORD))type metadata accessor for ContextProtoContextMetadata);
}

void sub_23F6D5B20(void (*a1)(_QWORD))
{
  a1(0);
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void ContextProtoContextMetadata.groupID.setter(uint64_t a1, uint64_t a2)
{
  sub_23F6D5B60(a1, a2, (void (*)(_QWORD))type metadata accessor for ContextProtoContextMetadata);
}

void sub_23F6D5B60(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  _QWORD *v3;

  a3(0);
  sub_23F6F096C();
  *v3 = a1;
  v3[1] = a2;
  sub_23F694C84();
}

uint64_t (*ContextProtoContextMetadata.groupID.modify())()
{
  sub_23F6F0AD8();
  sub_23F6F0CF8();
  return nullsub_1;
}

uint64_t ContextProtoContextMetadata.init(entityID:appBundleID:saliency:onScreenSurroundingText:onScreenBoundingBox:seq:groupID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, char a10, uint64_t a11, uint64_t a12)
{
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t result;

  v17 = (int *)sub_23F6F0AD8();
  v18 = (uint64_t)a9 + v17[7];
  v19 = sub_23F6F0C10();
  sub_23F6F0950(v19, v20, v21, v22);
  v23 = (uint64_t)a9 + v17[8];
  v24 = type metadata accessor for ContextProtoBoundingBox(0);
  sub_23F6B5A8C(v23, v25, v26, v24);
  v27 = (char *)a9 + v17[9];
  *(_QWORD *)v27 = 0;
  v27[8] = 1;
  v28 = (_QWORD *)((char *)a9 + v17[10]);
  *v28 = 0;
  v28[1] = 0;
  sub_23F6F0BB0();
  a9[1] = a1;
  a9[2] = a2;
  a9[3] = a3;
  a9[4] = a4;
  sub_23F6D8AD0(a5, v18, &qword_256EA2CF8);
  *a9 = a6;
  sub_23F6F0B68(a7, v29, &qword_256EA2800);
  *(_QWORD *)v27 = a8;
  v27[8] = a10 & 1;
  result = swift_bridgeObjectRelease();
  *v28 = a11;
  v28[1] = a12;
  return result;
}

unint64_t ContextProtoBoundingBox.xCoordinate.getter()
{
  unsigned int *v0;

  return sub_23F6F0864(*v0);
}

uint64_t (*ContextProtoBoundingBox.xCoordinate.modify())()
{
  return nullsub_1;
}

unint64_t ContextProtoBoundingBox.yCoordinate.getter()
{
  uint64_t v0;

  return sub_23F6F0864(*(unsigned int *)(v0 + 8));
}

uint64_t ContextProtoBoundingBox.yCoordinate.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 8) = result;
  *(_BYTE *)(v1 + 12) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ContextProtoBoundingBox.yCoordinate.modify())()
{
  return nullsub_1;
}

unint64_t ContextProtoBoundingBox.width.getter()
{
  uint64_t v0;

  return sub_23F6F0864(*(unsigned int *)(v0 + 16));
}

uint64_t ContextProtoBoundingBox.width.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 16) = result;
  *(_BYTE *)(v1 + 20) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ContextProtoBoundingBox.width.modify())()
{
  return nullsub_1;
}

unint64_t ContextProtoBoundingBox.height.getter()
{
  uint64_t v0;

  return sub_23F6F0864(*(unsigned int *)(v0 + 24));
}

uint64_t (*ContextProtoBoundingBox.height.modify())()
{
  return nullsub_1;
}

void ContextProtoBoundingBox.init(xCoordinate:yCoordinate:width:height:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  type metadata accessor for ContextProtoBoundingBox(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)a5 = a1;
  *(_BYTE *)(a5 + 4) = BYTE4(a1) & 1;
  *(_DWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 12) = BYTE4(a2) & 1;
  *(_DWORD *)(a5 + 16) = a3;
  *(_BYTE *)(a5 + 20) = BYTE4(a3) & 1;
  *(_DWORD *)(a5 + 24) = a4;
  *(_BYTE *)(a5 + 28) = BYTE4(a4) & 1;
  sub_23F6B5F7C();
}

uint64_t (*ContextProtoSurroundingText.text.modify())()
{
  return nullsub_1;
}

void ContextProtoSurroundingText.onScreenBoundingBox.getter()
{
  sub_23F6D5E20(type metadata accessor for ContextProtoSurroundingText);
}

void sub_23F6D5E20(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = sub_23F6F08D8(a1);
  sub_23F6F0908(*(int *)(v1 + 20));
  sub_23F694C84();
}

void ContextProtoSurroundingText.onScreenBoundingBox.setter(uint64_t a1)
{
  sub_23F6D5E58(a1, type metadata accessor for ContextProtoSurroundingText);
}

void sub_23F6D5E58(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = sub_23F6F0918(a1, a2);
  sub_23F6F08F8(*(int *)(v2 + 20));
  sub_23F694C84();
}

uint64_t (*ContextProtoSurroundingText.onScreenBoundingBox.modify())()
{
  sub_23F6F0C30();
  sub_23F6F099C();
  return nullsub_1;
}

void ContextProtoSurroundingText.init(text:onScreenBoundingBox:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = (uint64_t)a4 + *(int *)(sub_23F6F0C30() + 20);
  v9 = type metadata accessor for ContextProtoBoundingBox(0);
  sub_23F6B5A8C(v8, v10, v11, v9);
  sub_23F6F0BB0();
  *a4 = a1;
  a4[1] = a2;
  sub_23F6D8AD0(a3, v8, &qword_256EA2800);
  sub_23F6B5F7C();
}

float ContextProtoConfidence.score.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

void ContextProtoConfidence.score.setter(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t (*ContextProtoConfidence.score.modify())()
{
  return nullsub_1;
}

void ContextProtoConfidence.bucket.getter(_BYTE *a1@<X8>)
{
  sub_23F6F0AE0(a1);
}

_BYTE *ContextProtoConfidence.bucket.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 4) = *result;
  return result;
}

uint64_t (*ContextProtoConfidence.bucket.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoConfidence.init(score:bucket:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>, float a3@<S0>)
{
  char v5;
  uint64_t result;

  v5 = *a1;
  type metadata accessor for ContextProtoConfidence(0);
  result = sub_23F6F0878();
  *(float *)a2 = a3;
  *(_BYTE *)(a2 + 4) = v5;
  return result;
}

void ContextProtoStructuredContext.structuredContextKind.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23F6F0D58();
  sub_23F6D8AB0(v0, v1, &qword_256EA2D40);
}

void ContextProtoStructuredContext.structuredContextKind.setter(uint64_t a1)
{
  uint64_t v1;

  sub_23F6D8AD0(a1, v1, &qword_256EA2D40);
}

uint64_t (*ContextProtoStructuredContext.structuredContextKind.modify())()
{
  return nullsub_1;
}

uint64_t static ContextProtoStructuredContextKind.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  sub_23F6F092C();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6BD134();
  v7 = v6 - v5;
  sub_23F6916B8(&qword_256EA3290);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6BD134();
  v11 = v10 - v9;
  v13 = v10 - v9 + *(int *)(v12 + 48);
  sub_23F6D8A14(v2, v10 - v9, type metadata accessor for ContextProtoStructuredContextKind);
  sub_23F6D8A14(a2, v13, type metadata accessor for ContextProtoStructuredContextKind);
  sub_23F6D89D0(v11, v7);
  static ContextProtoStructuredContextSiriRequestContext.== infix(_:_:)();
  LOBYTE(a2) = v14;
  sub_23F6D8A80(v13, type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
  sub_23F6D8A80(v7, type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
  return a2 & 1;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.deviceRestrictions.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.bargeInModes.getter()
{
  return swift_bridgeObjectRetain();
}

void ContextProtoStructuredContextSiriRequestContext.bargeInModes.setter(uint64_t a1)
{
  uint64_t v1;

  sub_23F6F09A8();
  *(_QWORD *)(v1 + 8) = a1;
  sub_23F694CC8();
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.bargeInModes.modify())()
{
  return nullsub_1;
}

void ContextProtoStructuredContextSiriRequestContext.sessionID.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.sessionID.modify())()
{
  return nullsub_1;
}

void ContextProtoStructuredContextSiriRequestContext.requestID.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.requestID.modify())()
{
  return nullsub_1;
}

void ContextProtoStructuredContextSiriRequestContext.inputOrigin.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.inputOrigin.modify())()
{
  return nullsub_1;
}

void ContextProtoStructuredContextSiriRequestContext.responseMode.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.responseMode.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.isEyesFree.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t ContextProtoStructuredContextSiriRequestContext.isEyesFree.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 80) = result;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.isEyesFree.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.isMultiUser.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 81);
}

uint64_t ContextProtoStructuredContextSiriRequestContext.isMultiUser.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 81) = result;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.isMultiUser.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.isVoiceTriggerEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 82);
}

uint64_t ContextProtoStructuredContextSiriRequestContext.isVoiceTriggerEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 82) = result;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.isVoiceTriggerEnabled.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.isTextToSpeechEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 83);
}

uint64_t ContextProtoStructuredContextSiriRequestContext.isTextToSpeechEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 83) = result;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.isTextToSpeechEnabled.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.isTriggerlessFollowup.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 84);
}

uint64_t ContextProtoStructuredContextSiriRequestContext.isTriggerlessFollowup.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 84) = result;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.isTriggerlessFollowup.modify())()
{
  return nullsub_1;
}

void ContextProtoStructuredContextSiriRequestContext.identifiedUser.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_23F6F0D18();
  sub_23F6F0C88(v0 + *(int *)(v1 + 60), v2, &qword_256EA2D78);
  sub_23F694CC8();
}

void ContextProtoStructuredContextSiriRequestContext.identifiedUser.setter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23F6F0C90();
  sub_23F6F0B80(v1, v0 + *(int *)(v1 + 60), &qword_256EA2D78);
  sub_23F694CC8();
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.identifiedUser.modify())()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return nullsub_1;
}

void ContextProtoStructuredContextSiriRequestContext.encodedLocation.getter()
{
  uint64_t v0;
  unint64_t v1;

  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  v0 = sub_23F6B5994();
  sub_23F6D1E0C(v0, v1);
  sub_23F6B5994();
  sub_23F694CC8();
}

void ContextProtoStructuredContextSiriRequestContext.encodedLocation.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v5 = v2 + *(int *)(sub_23F6F092C() + 64);
  sub_23F6D1E64(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = v3;
  *(_QWORD *)(v5 + 8) = a2;
  sub_23F694C84();
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.encodedLocation.modify())()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return nullsub_1;
}

void ContextProtoStructuredContextSiriRequestContext.countryCode.getter()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void ContextProtoStructuredContextSiriRequestContext.countryCode.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_23F6F092C();
  sub_23F6F096C();
  *v2 = v3;
  v2[1] = a2;
  sub_23F694C84();
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.countryCode.modify())()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return nullsub_1;
}

void ContextProtoStructuredContextSiriRequestContext.siriLocale.getter()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void ContextProtoStructuredContextSiriRequestContext.siriLocale.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_23F6F092C();
  sub_23F6F096C();
  *v2 = v3;
  v2[1] = a2;
  sub_23F694C84();
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.siriLocale.modify())()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return nullsub_1;
}

void ContextProtoStructuredContextSiriRequestContext.contentRestrictions.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_23F6F0D18();
  sub_23F6F0C88(v0 + *(int *)(v1 + 76), v2, &qword_256EA2D68);
  sub_23F694CC8();
}

void ContextProtoStructuredContextSiriRequestContext.contentRestrictions.setter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23F6F0C90();
  sub_23F6F0B80(v1, v0 + *(int *)(v1 + 76), &qword_256EA2D68);
  sub_23F694CC8();
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.contentRestrictions.modify())()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.uiScale.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0) + 80));
}

void ContextProtoStructuredContextSiriRequestContext.uiScale.setter()
{
  uint64_t v0;

  v0 = sub_23F6F092C();
  sub_23F6F0D44(*(int *)(v0 + 80));
  sub_23F694C84();
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.uiScale.modify())()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return nullsub_1;
}

void ContextProtoStructuredContextSiriRequestContext.temperatureUnit.getter()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void ContextProtoStructuredContextSiriRequestContext.temperatureUnit.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_23F6F092C();
  sub_23F6F096C();
  *v2 = v3;
  v2[1] = a2;
  sub_23F694C84();
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.temperatureUnit.modify())()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.allowUserGeneratedContent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0)
                                     + 88));
}

void ContextProtoStructuredContextSiriRequestContext.allowUserGeneratedContent.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(sub_23F6F0C90() + 88)) = v0;
  sub_23F694CC8();
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.allowUserGeneratedContent.modify())()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.censorSpeech.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0)
                                     + 92));
}

void ContextProtoStructuredContextSiriRequestContext.censorSpeech.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(sub_23F6F0C90() + 92)) = v0;
  sub_23F694CC8();
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.censorSpeech.modify())()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return nullsub_1;
}

void ContextProtoStructuredContextSiriRequestContext.meCard.getter()
{
  sub_23F6D72BC(type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
}

void ContextProtoStructuredContextSiriRequestContext.meCard.setter(uint64_t a1)
{
  sub_23F6D72F4(a1, type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.meCard.modify())()
{
  sub_23F6F0B48();
  return nullsub_1;
}

void ContextProtoStructuredContextSiriRequestContext.init(sessionID:requestID:inputOrigin:responseMode:isEyesFree:isMultiUser:isVoiceTriggerEnabled:isTextToSpeechEnabled:isTriggerlessFollowup:deviceRestrictions:bargeInModes:identifiedUser:encodedLocation:countryCode:siriLocale:contentRestrictions:uiScale:temperatureUnit:allowUserGeneratedContent:censorSpeech:meCard:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,char a25,char a26,uint64_t a27)
{
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v28 = (int *)sub_23F6F0B48();
  v29 = a9 + v28[15];
  v48 = v29;
  v30 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  sub_23F6B5A8C(v29, v31, v32, v30);
  v33 = a9 + v28[16];
  *(_OWORD *)v33 = xmmword_23FB50350;
  v34 = (_QWORD *)(a9 + v28[17]);
  *v34 = 0;
  v34[1] = 0;
  v35 = (_QWORD *)(a9 + v28[18]);
  *v35 = 0;
  v35[1] = 0;
  v36 = a9 + v28[19];
  v49 = v36;
  v37 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  sub_23F6B5A8C(v36, v38, v39, v37);
  v40 = a9 + v28[20];
  *(_QWORD *)v40 = 0;
  *(_BYTE *)(v40 + 8) = 1;
  v41 = (_QWORD *)(a9 + v28[21]);
  *v41 = 0;
  v41[1] = 0;
  v42 = v28[22];
  *(_BYTE *)(a9 + v42) = 2;
  v43 = v28[23];
  *(_BYTE *)(a9 + v43) = 2;
  v44 = a9 + v28[24];
  v45 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  sub_23F6B5A8C(v44, v46, v47, v45);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_QWORD *)(a9 + 16) = a1;
  *(_QWORD *)(a9 + 24) = a2;
  *(_QWORD *)(a9 + 32) = a3;
  *(_QWORD *)(a9 + 40) = a4;
  *(_QWORD *)(a9 + 48) = a5;
  *(_QWORD *)(a9 + 56) = a6;
  *(_QWORD *)(a9 + 64) = a7;
  *(_QWORD *)(a9 + 72) = a8;
  *(_BYTE *)(a9 + 80) = a10;
  *(_DWORD *)(a9 + 81) = *(_DWORD *)((char *)&a10 + 1);
  *(_QWORD *)a9 = a11;
  *(_QWORD *)(a9 + 8) = a12;
  sub_23F6D8AD0(a13, v48, &qword_256EA2D78);
  sub_23F6D1E64(*(_QWORD *)v33, *(_QWORD *)(v33 + 8));
  *(_QWORD *)v33 = a14;
  *(_QWORD *)(v33 + 8) = a15;
  swift_bridgeObjectRelease();
  *v34 = a16;
  v34[1] = a17;
  swift_bridgeObjectRelease();
  *v35 = a18;
  v35[1] = a19;
  sub_23F6D8AD0(a20, v49, &qword_256EA2D68);
  *(_QWORD *)v40 = a21;
  *(_BYTE *)(v40 + 8) = a22 & 1;
  swift_bridgeObjectRelease();
  *v41 = a23;
  v41[1] = a24;
  *(_BYTE *)(a9 + v42) = a25;
  *(_BYTE *)(a9 + v43) = a26;
  sub_23F6D8AD0(a27, v44, &qword_256EA2D58);
}

unint64_t ContextProtoStructuredContextSiriRequestContextContentRestriction.appRestriction.getter()
{
  unsigned int *v0;

  return sub_23F6F0864(*v0);
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextContentRestriction.appRestriction.modify())()
{
  return nullsub_1;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextContentRestriction.countryCode.modify())()
{
  return nullsub_1;
}

unint64_t ContextProtoStructuredContextSiriRequestContextContentRestriction.movieRestriction.getter()
{
  uint64_t v0;

  return sub_23F6F0864(*(unsigned int *)(v0 + 24));
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextContentRestriction.movieRestriction.modify())()
{
  return nullsub_1;
}

unint64_t ContextProtoStructuredContextSiriRequestContextContentRestriction.tvRestriction.getter()
{
  uint64_t v0;

  return sub_23F6F0864(*(unsigned int *)(v0 + 32));
}

uint64_t ContextProtoStructuredContextSiriRequestContextContentRestriction.tvRestriction.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 32) = result;
  *(_BYTE *)(v1 + 36) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextContentRestriction.tvRestriction.modify())()
{
  return nullsub_1;
}

void ContextProtoStructuredContextSiriRequestContextContentRestriction.init(appRestriction:countryCode:movieRestriction:tvRestriction:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  sub_23F6F0CB4();
  *(_DWORD *)a6 = a1;
  *(_BYTE *)(a6 + 4) = BYTE4(a1) & 1;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = a3;
  *(_DWORD *)(a6 + 24) = a4;
  *(_BYTE *)(a6 + 28) = BYTE4(a4) & 1;
  *(_DWORD *)(a6 + 32) = a5;
  *(_BYTE *)(a6 + 36) = BYTE4(a5) & 1;
  sub_23F6B5F7C();
}

void ContextProtoStructuredContextSiriRequestContextUser.userID.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void ContextProtoStructuredContextSiriRequestContextUser.userID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  sub_23F6F09A8();
  *v2 = a1;
  v2[1] = a2;
  sub_23F694C84();
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextUser.userID.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContextUser.isOnlyUserInHome.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t ContextProtoStructuredContextSiriRequestContextUser.isOnlyUserInHome.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextUser.isOnlyUserInHome.modify())()
{
  return nullsub_1;
}

void ContextProtoStructuredContextSiriRequestContextUser.classification.getter(_BYTE *a1@<X8>)
{
  sub_23F6F0AE0(a1);
}

_BYTE *ContextProtoStructuredContextSiriRequestContextUser.classification.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = *result;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextUser.classification.modify())()
{
  return nullsub_1;
}

void ContextProtoStructuredContextSiriRequestContextUser.init(userID:isOnlyUserInHome:classification:)(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  char v9;

  v9 = *a4;
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  sub_23F6F0BB0();
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 16) = a3;
  *(_BYTE *)(a5 + 17) = v9;
  sub_23F6B5F7C();
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextMeCard.addresses.modify())()
{
  return nullsub_1;
}

void _s30IntelligenceFlowPlannerSupport012ContextProtoE8MetadataV8entityIDSSSgvs_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6F0A28();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = v2;
  *(_QWORD *)(v1 + 16) = v0;
  sub_23F694C84();
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextMeCard.givenName.modify())()
{
  return nullsub_1;
}

void _s30IntelligenceFlowPlannerSupport012ContextProtoE8MetadataV11appBundleIDSSSgvs_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6F0A28();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 32) = v0;
  sub_23F694C84();
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextMeCard.middleName.modify())()
{
  return nullsub_1;
}

void ContextProtoStructuredContextSiriRequestContextMeCard.familyName.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextMeCard.familyName.modify())()
{
  return nullsub_1;
}

void ContextProtoStructuredContextSiriRequestContextMeCard.nickName.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void ContextProtoStructuredContextSiriRequestContextMeCard.nickName.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6F0C78();
  *(_QWORD *)(v1 + 56) = v2;
  *(_QWORD *)(v1 + 64) = v0;
  sub_23F694C84();
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextMeCard.nickName.modify())()
{
  return nullsub_1;
}

void ContextProtoStructuredContextSiriRequestContextMeCard.fullName.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void ContextProtoStructuredContextSiriRequestContextMeCard.fullName.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6F0C68();
  *(_QWORD *)(v1 + 72) = v2;
  *(_QWORD *)(v1 + 80) = v0;
  sub_23F694C84();
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextMeCard.fullName.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContextMeCard.init(givenName:middleName:familyName:nickName:fullName:addresses:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t result;

  sub_23F6F0AA8();
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  result = sub_23F6F0D04();
  v17[2] = v15;
  v17[3] = v14;
  v17[4] = v13;
  v17[5] = v12;
  v17[6] = v11;
  v17[7] = a7;
  v17[8] = a8;
  v17[9] = a9;
  v17[10] = a10;
  *v17 = a11;
  v17[1] = v16;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextAddress.label.modify())()
{
  return nullsub_1;
}

void _s30IntelligenceFlowPlannerSupport022ContextProtoStructurede11SiriRequestE0V9sessionIDSSSgvs_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6F0C58();
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v0;
  sub_23F694C84();
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextAddress.street.modify())()
{
  return nullsub_1;
}

void _s30IntelligenceFlowPlannerSupport022ContextProtoStructurede11SiriRequestE0V9requestIDSSSgvs_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6F0A28();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v0;
  sub_23F694C84();
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextAddress.city.modify())()
{
  return nullsub_1;
}

void _s30IntelligenceFlowPlannerSupport022ContextProtoStructurede11SiriRequestE0V11inputOriginSSSgvs_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6F0A28();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = v2;
  *(_QWORD *)(v1 + 56) = v0;
  sub_23F694C84();
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextAddress.state.modify())()
{
  return nullsub_1;
}

void _s30IntelligenceFlowPlannerSupport022ContextProtoStructurede11SiriRequestE0V12responseModeSSSgvs_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6F0A28();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 64) = v2;
  *(_QWORD *)(v1 + 72) = v0;
  sub_23F694C84();
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextAddress.postalCode.modify())()
{
  return nullsub_1;
}

void ContextProtoStructuredContextSiriRequestContextAddress.countryCode.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void ContextProtoStructuredContextSiriRequestContextAddress.countryCode.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6F0A28();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 80) = v2;
  *(_QWORD *)(v1 + 88) = v0;
  sub_23F694C84();
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextAddress.countryCode.modify())()
{
  return nullsub_1;
}

__n128 ContextProtoStructuredContextSiriRequestContextAddress.init(label:street:city:state:postalCode:countryCode:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 result;

  sub_23F6F0AA8();
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress(0);
  sub_23F6F0D04();
  *(_QWORD *)v17 = v16;
  *(_QWORD *)(v17 + 8) = v15;
  *(_QWORD *)(v17 + 16) = v14;
  *(_QWORD *)(v17 + 24) = v13;
  *(_QWORD *)(v17 + 32) = v12;
  *(_QWORD *)(v17 + 40) = v11;
  *(_QWORD *)(v17 + 48) = a7;
  *(_QWORD *)(v17 + 56) = a8;
  *(_OWORD *)(v17 + 64) = a9;
  *(_QWORD *)(v17 + 80) = a10;
  *(_QWORD *)(v17 + 88) = a11;
  sub_23F6F09E8();
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.spans.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.spansIsPresent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t ContextProtoQueryDecorationOutput.spansIsPresent.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.spansIsPresent.modify())()
{
  return nullsub_1;
}

uint64_t (*ContextProtoQueryDecorationOutput.requiredContext.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.requiredContextIsPresent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t ContextProtoQueryDecorationOutput.requiredContextIsPresent.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.requiredContextIsPresent.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.utteranceContext.getter()
{
  return swift_bridgeObjectRetain();
}

void ContextProtoQueryDecorationOutput.utteranceContext.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  sub_23F694CC8();
}

uint64_t (*ContextProtoQueryDecorationOutput.utteranceContext.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.utteranceContextIsPresent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t ContextProtoQueryDecorationOutput.utteranceContextIsPresent.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 40) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.utteranceContextIsPresent.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedTools.getter()
{
  return swift_bridgeObjectRetain();
}

void ContextProtoQueryDecorationOutput.originalRankedTools.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = a1;
  sub_23F694CC8();
}

uint64_t (*ContextProtoQueryDecorationOutput.originalRankedTools.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedToolsIsPresent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedToolsIsPresent.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 56) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.originalRankedToolsIsPresent.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedTools.getter()
{
  return swift_bridgeObjectRetain();
}

void ContextProtoQueryDecorationOutput.adjustedRankedTools.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 64) = a1;
  sub_23F694CC8();
}

uint64_t (*ContextProtoQueryDecorationOutput.adjustedRankedTools.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedToolsIsPresent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedToolsIsPresent.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 72) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.adjustedRankedToolsIsPresent.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedSpans.getter()
{
  return swift_bridgeObjectRetain();
}

void ContextProtoQueryDecorationOutput.originalRankedSpans.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 80) = a1;
  sub_23F694CC8();
}

uint64_t (*ContextProtoQueryDecorationOutput.originalRankedSpans.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedSpansIsPresent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedSpansIsPresent.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 88) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.originalRankedSpansIsPresent.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedSpans.getter()
{
  return swift_bridgeObjectRetain();
}

void ContextProtoQueryDecorationOutput.adjustedRankedSpans.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 96) = a1;
  sub_23F694CC8();
}

uint64_t (*ContextProtoQueryDecorationOutput.adjustedRankedSpans.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedSpansIsPresent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 104);
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedSpansIsPresent.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 104) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.adjustedRankedSpansIsPresent.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedUtteranceContext.getter()
{
  return swift_bridgeObjectRetain();
}

void ContextProtoQueryDecorationOutput.originalRankedUtteranceContext.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 112) = a1;
  sub_23F694CC8();
}

uint64_t (*ContextProtoQueryDecorationOutput.originalRankedUtteranceContext.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedUtteranceContextIsPresent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 120);
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedUtteranceContextIsPresent.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 120) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.originalRankedUtteranceContextIsPresent.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedUtteranceContext.getter()
{
  return swift_bridgeObjectRetain();
}

void ContextProtoQueryDecorationOutput.adjustedRankedUtteranceContext.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 128) = a1;
  sub_23F694CC8();
}

uint64_t (*ContextProtoQueryDecorationOutput.adjustedRankedUtteranceContext.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedUtteranceContextIsPresent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 136);
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedUtteranceContextIsPresent.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 136) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.adjustedRankedUtteranceContextIsPresent.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.dynamicEnumerationEntities.getter()
{
  return swift_bridgeObjectRetain();
}

void ContextProtoQueryDecorationOutput.dynamicEnumerationEntities.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 144) = a1;
  sub_23F694CC8();
}

uint64_t (*ContextProtoQueryDecorationOutput.dynamicEnumerationEntities.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.dynamicEnumerationEntitiesIsPresent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 152);
}

uint64_t ContextProtoQueryDecorationOutput.dynamicEnumerationEntitiesIsPresent.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 152) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.dynamicEnumerationEntitiesIsPresent.modify())()
{
  return nullsub_1;
}

void ContextProtoQueryDecorationOutput.toolRetrievalResponse.getter()
{
  sub_23F6D72BC(type metadata accessor for ContextProtoQueryDecorationOutput);
}

void sub_23F6D72BC(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = sub_23F6F08D8(a1);
  sub_23F6F0908(*(int *)(v1 + 96));
  sub_23F694C84();
}

void ContextProtoQueryDecorationOutput.toolRetrievalResponse.setter(uint64_t a1)
{
  sub_23F6D72F4(a1, type metadata accessor for ContextProtoQueryDecorationOutput);
}

void sub_23F6D72F4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = sub_23F6F0918(a1, a2);
  sub_23F6F08F8(*(int *)(v2 + 96));
  sub_23F694C84();
}

uint64_t (*ContextProtoQueryDecorationOutput.toolRetrievalResponse.modify())()
{
  sub_23F6F0C08();
  return nullsub_1;
}

void ContextProtoQueryDecorationOutput.init(spans:spansIsPresent:requiredContext:requiredContextIsPresent:utteranceContext:utteranceContextIsPresent:originalRankedTools:originalRankedToolsIsPresent:adjustedRankedTools:adjustedRankedToolsIsPresent:originalRankedSpans:originalRankedSpansIsPresent:adjustedRankedSpans:adjustedRankedSpansIsPresent:originalRankedUtteranceContext:originalRankedUtteranceContextIsPresent:adjustedRankedUtteranceContext:adjustedRankedUtteranceContextIsPresent:toolRetrievalResponse:dynamicEnumerationEntities:dynamicEnumerationEntitiesIsPresent:)(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, char a11, uint64_t a12, char a13, uint64_t a14, char a15, uint64_t a16, char a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,char a22)
{
  uint64_t v25;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v25 = a9 + *(int *)(sub_23F6F0C08() + 96);
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  sub_23F6B5A8C(v25, v27, v28, DecorationToolRetrievalResponse);
  sub_23F6F0878();
  *(_QWORD *)a9 = a1;
  *(_BYTE *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_BYTE *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_BYTE *)(a9 + 56) = a8;
  *(_QWORD *)(a9 + 64) = a10;
  *(_BYTE *)(a9 + 72) = a11;
  *(_QWORD *)(a9 + 80) = a12;
  *(_BYTE *)(a9 + 88) = a13;
  *(_QWORD *)(a9 + 96) = a14;
  *(_BYTE *)(a9 + 104) = a15;
  *(_QWORD *)(a9 + 112) = a16;
  *(_BYTE *)(a9 + 120) = a17;
  *(_QWORD *)(a9 + 128) = a18;
  *(_BYTE *)(a9 + 136) = a19;
  sub_23F6F0B68(a20, v29, &qword_256EA2DD0);
  *(_QWORD *)(a9 + 144) = a21;
  *(_BYTE *)(a9 + 152) = a22;
}

uint64_t (*ContextProtoQueryDecorationInput.query.modify())()
{
  return nullsub_1;
}

uint64_t (*ContextProtoQueryDecorationInput.caller.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationInput.spanTypeFilters.getter()
{
  return swift_bridgeObjectRetain();
}

void ContextProtoQueryDecorationInput.spanTypeFilters.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  sub_23F694CC8();
}

uint64_t (*ContextProtoQueryDecorationInput.spanTypeFilters.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationInput.spanTypeFiltersIsPresent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t ContextProtoQueryDecorationInput.spanTypeFiltersIsPresent.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationInput.spanTypeFiltersIsPresent.modify())()
{
  return nullsub_1;
}

void _s30IntelligenceFlowPlannerSupport022ContextProtoStructurede11SiriRequestE6MeCardV10familyNameSSSgvs_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6F0A28();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = v0;
  sub_23F694C84();
}

uint64_t (*ContextProtoQueryDecorationInput.requestID.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationInput.maxToolsReturned.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t ContextProtoQueryDecorationInput.maxToolsReturned.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = result;
  *(_BYTE *)(v2 + 64) = a2 & 1;
  return result;
}

uint64_t (*ContextProtoQueryDecorationInput.maxToolsReturned.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationInput.maxSpansReturned.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t ContextProtoQueryDecorationInput.maxSpansReturned.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 72) = result;
  *(_BYTE *)(v2 + 80) = a2 & 1;
  return result;
}

uint64_t (*ContextProtoQueryDecorationInput.maxSpansReturned.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationInput.maxContextReturned.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 88);
}

uint64_t ContextProtoQueryDecorationInput.maxContextReturned.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 88) = result;
  *(_BYTE *)(v2 + 96) = a2 & 1;
  return result;
}

uint64_t (*ContextProtoQueryDecorationInput.maxContextReturned.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationInput.requiredContextReturned.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 97);
}

uint64_t ContextProtoQueryDecorationInput.requiredContextReturned.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 97) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationInput.requiredContextReturned.modify())()
{
  return nullsub_1;
}

void ContextProtoQueryDecorationInput.init(query:requestID:caller:maxToolsReturned:maxSpansReturned:maxContextReturned:spanTypeFilters:spanTypeFiltersIsPresent:requiredContextReturned:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, uint64_t a11, char a12, uint64_t a13, char a14, char a15)
{
  char v21;

  v21 = *a5;
  type metadata accessor for ContextProtoQueryDecorationInput(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 40) = a3;
  *(_QWORD *)(a9 + 48) = a4;
  *(_BYTE *)(a9 + 16) = v21;
  *(_QWORD *)(a9 + 56) = a6;
  *(_BYTE *)(a9 + 64) = a7 & 1;
  *(_QWORD *)(a9 + 72) = a8;
  *(_BYTE *)(a9 + 80) = a10 & 1;
  *(_QWORD *)(a9 + 88) = a11;
  *(_BYTE *)(a9 + 96) = a12 & 1;
  *(_QWORD *)(a9 + 24) = a13;
  *(_BYTE *)(a9 + 32) = a14;
  *(_BYTE *)(a9 + 97) = a15;
  sub_23F6F09E8();
}

uint64_t (*ContextProtoDynamicEnumerationEntity.identifier.modify())()
{
  return nullsub_1;
}

void ContextProtoDynamicEnumerationEntity.parameterTypeInstance.getter()
{
  sub_23F6D5E20(type metadata accessor for ContextProtoDynamicEnumerationEntity);
}

void ContextProtoDynamicEnumerationEntity.parameterTypeInstance.setter(uint64_t a1)
{
  sub_23F6D5E58(a1, type metadata accessor for ContextProtoDynamicEnumerationEntity);
}

uint64_t (*ContextProtoDynamicEnumerationEntity.parameterTypeInstance.modify())()
{
  sub_23F6F0B40();
  sub_23F6F099C();
  return nullsub_1;
}

void ContextProtoDynamicEnumerationEntity.typedValue.getter()
{
  sub_23F6D7758(type metadata accessor for ContextProtoDynamicEnumerationEntity);
}

void sub_23F6D7758(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = sub_23F6F08D8(a1);
  sub_23F6F0908(*(int *)(v1 + 24));
  sub_23F694C84();
}

void ContextProtoDynamicEnumerationEntity.typedValue.setter(uint64_t a1)
{
  sub_23F6D7790(a1, type metadata accessor for ContextProtoDynamicEnumerationEntity);
}

void sub_23F6D7790(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = sub_23F6F0918(a1, a2);
  sub_23F6F08F8(*(int *)(v2 + 24));
  sub_23F694C84();
}

uint64_t (*ContextProtoDynamicEnumerationEntity.typedValue.modify())()
{
  sub_23F6F0B40();
  sub_23F6F09C4();
  return nullsub_1;
}

void ContextProtoDynamicEnumerationEntity.init(identifier:parameterTypeInstance:typedValue:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v8 = sub_23F6F0B40();
  v9 = (uint64_t)a4 + *(int *)(v8 + 20);
  v10 = sub_23FB2EB28();
  sub_23F6B5A8C(v9, v11, v12, v10);
  v13 = (uint64_t)a4 + *(int *)(v8 + 24);
  v14 = sub_23F6B632C();
  sub_23F6B5A8C(v13, v15, v16, v14);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *a4 = a1;
  a4[1] = a2;
  sub_23F6D8AD0(a3, v9, &qword_256EA2E00);
  sub_23F6F0CA8(v17, v18, &qword_256EA2610);
  sub_23F6B69E0();
}

float ContextProtoRetrievedTool.similarityScore.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

void ContextProtoRetrievedTool.similarityScore.setter(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t (*ContextProtoRetrievedTool.similarityScore.modify())()
{
  return nullsub_1;
}

uint64_t (*ContextProtoRetrievedTool.sampleInvocations.modify())()
{
  return nullsub_1;
}

void ContextProtoRetrievedTool.stage.getter(_BYTE *a1@<X8>)
{
  sub_23F6F0AE0(a1);
}

_BYTE *ContextProtoRetrievedTool.stage.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*ContextProtoRetrievedTool.stage.modify())()
{
  return nullsub_1;
}

void ContextProtoRetrievedTool.definition.getter()
{
  sub_23F6D597C(type metadata accessor for ContextProtoRetrievedTool);
}

void ContextProtoRetrievedTool.definition.setter(uint64_t a1)
{
  sub_23F6D59B4(a1, type metadata accessor for ContextProtoRetrievedTool);
}

uint64_t (*ContextProtoRetrievedTool.definition.modify())()
{
  sub_23F6F0C40();
  sub_23F6F0A54();
  return nullsub_1;
}

void *static ContextProtoRetrievedTool.Stage.allCases.getter()
{
  return &unk_250FEBEE8;
}

IntelligenceFlowPlannerSupport::ContextProtoRetrievedTool::Stage_optional sub_23F6D7924(Swift::Int *a1)
{
  return ContextProtoRetrievedTool.Stage.init(rawValue:)(*a1);
}

void sub_23F6D792C()
{
  sub_23F7F6E18();
}

uint64_t sub_23F6D7934()
{
  sub_23F6D1EB4();
  return sub_23FB2D790();
}

void sub_23F6D796C()
{
  sub_23F7F7C10();
}

void sub_23F6D7974(_QWORD *a1@<X8>)
{
  *a1 = &unk_250FEBEE8;
}

void ContextProtoRetrievedTool.Definition.definitionValues.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23F6F0D58();
  sub_23F6D8AB0(v0, v1, &qword_256EA2578);
}

void ContextProtoRetrievedTool.Definition.definitionValues.setter(uint64_t a1)
{
  uint64_t v1;

  sub_23F6D8AD0(a1, v1, &qword_256EA2578);
}

uint64_t (*ContextProtoRetrievedTool.Definition.definitionValues.modify())()
{
  return nullsub_1;
}

void static ContextProtoRetrievedTool.ContextProtoDefinitionEnum.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD v19[6];
  uint64_t v20;
  uint64_t v21;

  v20 = a1;
  v21 = a2;
  v2 = sub_23FB2EB94();
  v19[2] = *(_QWORD *)(v2 - 8);
  v19[3] = v2;
  MEMORY[0x24BDAC7A8](v2);
  sub_23F6BD134();
  v19[1] = v4 - v3;
  v5 = sub_23FB2EBC4();
  v19[4] = *(_QWORD *)(v5 - 8);
  v19[5] = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v19[0] = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v8);
  type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  sub_23F6D3588();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6916B8(&qword_256EA3298);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6BD134();
  v17 = v15 - v14 + *(int *)(v16 + 48);
  sub_23F6D8A14(v20, v15 - v14, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
  sub_23F6D8A14(v21, v17, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
  v18 = (char *)sub_23F6D7BA4 + 4 * byte_23FB4F22A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23F6D7BA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  sub_23F6D8A14(v1, v3, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
  if (sub_23F6F0A04())
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 112) + 8))(v3, *(_QWORD *)(v4 - 104));
    sub_23F6D8A40(v1);
    v5 = 0;
  }
  else
  {
    v6 = *(_QWORD *)(v4 - 112);
    v7 = *(_QWORD *)(v4 - 104);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v2, v0, v7);
    v5 = sub_23FB2EBAC();
    v8 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v8(v2, v7);
    v8(v3, v7);
    sub_23F6D8A80(v1, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
  }
  return v5 & 1;
}

void ContextProtoRetrievedTool.init(definition:similarityScore:sampleInvocations:stage:)(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>, float a5@<S0>)
{
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v9 = *a3;
  v10 = a4 + *(int *)(sub_23F6F0C40() + 28);
  v11 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  sub_23F6B5A8C(v10, v12, v13, v11);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_23F6F0D10(a1, v14, &qword_256EA2588);
  *(float *)a4 = a5;
  *(_QWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 16) = v9;
}

uint64_t (*ContextProtoSampleInvocation.invocationString.modify())()
{
  return nullsub_1;
}

float ContextProtoSampleInvocation.score.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 16);
}

void ContextProtoSampleInvocation.score.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 16) = a1;
}

uint64_t (*ContextProtoSampleInvocation.score.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoSampleInvocation.init(invocationString:score:)(float a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t result;

  v5 = sub_23F6F0AE8();
  type metadata accessor for ContextProtoSampleInvocation(v5);
  result = _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_QWORD *)v3 = v2;
  *(_QWORD *)(v3 + 8) = v1;
  *(float *)(v3 + 16) = a1;
  return result;
}

void ContextProtoToolRetrievalType.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23F6F0D58();
  sub_23F6D8AB0(v0, v1, &qword_256EA2E58);
}

void ContextProtoToolRetrievalType.identifier.setter(uint64_t a1)
{
  uint64_t v1;

  sub_23F6D8AD0(a1, v1, &qword_256EA2E58);
}

uint64_t (*ContextProtoToolRetrievalType.identifier.modify())()
{
  return nullsub_1;
}

void ContextProtoToolRetrievalType.definition.getter()
{
  sub_23F6D5E20(type metadata accessor for ContextProtoToolRetrievalType);
}

void ContextProtoToolRetrievalType.definition.setter(uint64_t a1)
{
  sub_23F6D5E58(a1, type metadata accessor for ContextProtoToolRetrievalType);
}

uint64_t (*ContextProtoToolRetrievalType.definition.modify())()
{
  sub_23F6F0C28();
  sub_23F6F099C();
  return nullsub_1;
}

void ContextProtoToolRetrievalType.init(identifier:definition:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6F0AE8();
  v3 = sub_23FB2EB40();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v2, 1, 1, v3);
  sub_23F6F0C28();
  v4 = sub_23FB2EB34();
  sub_23F6F0A60(v4);
  sub_23F6D8AD0(v1, v2, &qword_256EA2E58);
  sub_23F6F0D10(v0, v5, &qword_256EA2E48);
  sub_23F6B5F7C();
}

void ContextProtoToolQuery.query.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void ContextProtoToolQuery.query.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  sub_23F6F09A8();
  *v2 = a1;
  v2[1] = a2;
  sub_23F694C84();
}

uint64_t (*ContextProtoToolQuery.query.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoToolQuery.appBundleIds.getter()
{
  return swift_bridgeObjectRetain();
}

void ContextProtoToolQuery.appBundleIds.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  sub_23F694CC8();
}

uint64_t (*ContextProtoToolQuery.appBundleIds.modify())()
{
  return nullsub_1;
}

void ContextProtoToolQuery.init(query:appBundleIds:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  type metadata accessor for ContextProtoToolQuery(0);
  sub_23F6F0BB0();
  *a4 = a1;
  a4[1] = a2;
  a4[2] = a3;
  sub_23F694C84();
}

void ContextProtoToolQueryOutput.definition.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23F6F0D58();
  sub_23F6D8AB0(v0, v1, &qword_256EA2588);
}

void ContextProtoToolQueryOutput.definition.setter(uint64_t a1)
{
  uint64_t v1;

  sub_23F6D8AD0(a1, v1, &qword_256EA2588);
}

uint64_t (*ContextProtoToolQueryOutput.definition.modify())()
{
  return nullsub_1;
}

void ContextProtoToolQueryOutput.init(definition:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v0 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  v1 = sub_23F6F0CD4(v0);
  type metadata accessor for ContextProtoToolQueryOutput(v1);
  sub_23F6F0B34();
  v2 = sub_23F6B5994();
  sub_23F6D8AD0(v2, v3, v4);
  sub_23F694CC8();
}

uint64_t (*ContextProtoQueryDecorationToolRetrievalResponse.originalSubQuery.modify())()
{
  return nullsub_1;
}

uint64_t (*ContextProtoQueryDecorationToolRetrievalResponse.rewrittenQuery.modify())()
{
  return nullsub_1;
}

float ContextProtoQueryDecorationToolRetrievalResponse.confidence.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 32);
}

void ContextProtoQueryDecorationToolRetrievalResponse.confidence.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 32) = a1;
}

uint64_t (*ContextProtoQueryDecorationToolRetrievalResponse.confidence.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationToolRetrievalResponse.retrievedTools.getter()
{
  return swift_bridgeObjectRetain();
}

void ContextProtoQueryDecorationToolRetrievalResponse.retrievedTools.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = a1;
  sub_23F694CC8();
}

uint64_t (*ContextProtoQueryDecorationToolRetrievalResponse.retrievedTools.modify())()
{
  return nullsub_1;
}

uint64_t (*ContextProtoQueryDecorationToolRetrievalResponse.types.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationToolRetrievalResponse.init(originalSubQuery:rewrittenQuery:confidence:retrievedTools:types:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, float a8@<S0>)
{
  uint64_t result;

  type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  result = _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_QWORD *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_QWORD *)(a7 + 24) = a4;
  *(float *)(a7 + 32) = a8;
  *(_QWORD *)(a7 + 40) = a5;
  *(_QWORD *)(a7 + 48) = a6;
  return result;
}

uint64_t (*ContextProtoSpanMatchedEntity.matchMetadata.modify())()
{
  return nullsub_1;
}

void ContextProtoSpanMatchedEntity.typedValue.getter()
{
  sub_23F6D5E20(type metadata accessor for ContextProtoSpanMatchedEntity);
}

void ContextProtoSpanMatchedEntity.typedValue.setter(uint64_t a1)
{
  sub_23F6D5E58(a1, type metadata accessor for ContextProtoSpanMatchedEntity);
}

uint64_t (*ContextProtoSpanMatchedEntity.typedValue.modify())()
{
  type metadata accessor for ContextProtoSpanMatchedEntity(0);
  sub_23F6F099C();
  return nullsub_1;
}

void ContextProtoSpanMatchedEntity.init(typedValue:matchMetadata:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_23F6F0AE8();
  type metadata accessor for ContextProtoSpanMatchedEntity(v3);
  v4 = sub_23F6B632C();
  sub_23F6F0A60(v4);
  sub_23F6F0D10(v1, v5, &qword_256EA2610);
  *v2 = v0;
  sub_23F6B5F7C();
}

uint64_t (*ContextProtoEntityMatch.sourceItemIdentifier.modify())()
{
  return nullsub_1;
}

void ContextProtoEntityMatch.entityName.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void ContextProtoEntityMatch.entityName.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6F0C58();
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v0;
  sub_23F694C84();
}

uint64_t (*ContextProtoEntityMatch.entityName.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoEntityMatch.startIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t ContextProtoEntityMatch.startIndex.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*ContextProtoEntityMatch.startIndex.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoEntityMatch.endIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t ContextProtoEntityMatch.endIndex.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*ContextProtoEntityMatch.endIndex.modify())()
{
  return nullsub_1;
}

float ContextProtoEntityMatch.matchScore.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 48);
}

void ContextProtoEntityMatch.matchScore.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 48) = a1;
}

uint64_t (*ContextProtoEntityMatch.matchScore.modify())()
{
  return nullsub_1;
}

void ContextProtoEntityMatch.matcherType.getter(_BYTE *a1@<X8>)
{
  sub_23F6F0AE0(a1);
}

_BYTE *ContextProtoEntityMatch.matcherType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 52) = *result;
  return result;
}

uint64_t (*ContextProtoEntityMatch.matcherType.modify())()
{
  return nullsub_1;
}

void ContextProtoEntityMatch.originAppBundleID.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void ContextProtoEntityMatch.originAppBundleID.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6F0C78();
  *(_QWORD *)(v1 + 56) = v2;
  *(_QWORD *)(v1 + 64) = v0;
  sub_23F694C84();
}

uint64_t (*ContextProtoEntityMatch.originAppBundleID.modify())()
{
  return nullsub_1;
}

void ContextProtoEntityMatch.userUtterance.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void ContextProtoEntityMatch.userUtterance.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6F0C68();
  *(_QWORD *)(v1 + 72) = v2;
  *(_QWORD *)(v1 + 80) = v0;
  sub_23F694C84();
}

uint64_t (*ContextProtoEntityMatch.userUtterance.modify())()
{
  return nullsub_1;
}

void ContextProtoEntityMatch.matchProperties.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_23F6F0B50();
  sub_23F6F0C88(v0 + *(int *)(v1 + 48), v2, &qword_256EA2EB8);
  sub_23F694CC8();
}

void ContextProtoEntityMatch.matchProperties.setter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23F6F0C9C();
  sub_23F6F0B80(v1, v0 + *(int *)(v1 + 48), &qword_256EA2EB8);
  sub_23F694CC8();
}

uint64_t (*ContextProtoEntityMatch.matchProperties.modify())()
{
  type metadata accessor for ContextProtoEntityMatch(0);
  return nullsub_1;
}

void ContextProtoEntityMatch.identifier.getter()
{
  type metadata accessor for ContextProtoEntityMatch(0);
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void ContextProtoEntityMatch.identifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  type metadata accessor for ContextProtoEntityMatch(0);
  sub_23F6F096C();
  *v2 = a1;
  v2[1] = a2;
  sub_23F694C84();
}

uint64_t (*ContextProtoEntityMatch.identifier.modify())()
{
  type metadata accessor for ContextProtoEntityMatch(0);
  return nullsub_1;
}

uint64_t ContextProtoEntityMatch.init(sourceItemIdentifier:entityName:startIndex:endIndex:matchScore:matchProperties:matcherType:originAppBundleID:userUtterance:identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, float a10@<S0>, __int128 a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t matched;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t result;

  v22 = *a8;
  v23 = type metadata accessor for ContextProtoEntityMatch(0);
  v24 = a9 + *(int *)(v23 + 48);
  matched = type metadata accessor for ContextProtoMatchProperties(0);
  sub_23F6B5A8C(v24, v26, v27, matched);
  v28 = (_QWORD *)(a9 + *(int *)(v23 + 52));
  *v28 = 0;
  v28[1] = 0;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(float *)(a9 + 48) = a10;
  sub_23F6D8AD0(a7, v24, &qword_256EA2EB8);
  *(_BYTE *)(a9 + 52) = v22;
  *(_OWORD *)(a9 + 56) = a11;
  *(_QWORD *)(a9 + 72) = a12;
  *(_QWORD *)(a9 + 80) = a13;
  result = sub_23F6F09A8();
  *v28 = a14;
  v28[1] = a15;
  return result;
}

uint64_t ContextProtoMatchProperties.maxTokenCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t ContextProtoMatchProperties.maxTokenCount.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*ContextProtoMatchProperties.maxTokenCount.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoMatchProperties.matchedTokenCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t ContextProtoMatchProperties.matchedTokenCount.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*ContextProtoMatchProperties.matchedTokenCount.modify())()
{
  return nullsub_1;
}

void ContextProtoMatchProperties.matchedAliasTypes.getter()
{
  sub_23F6D7758(type metadata accessor for ContextProtoMatchProperties);
}

void ContextProtoMatchProperties.matchedAliasTypes.setter(uint64_t a1)
{
  sub_23F6D7790(a1, type metadata accessor for ContextProtoMatchProperties);
}

uint64_t (*ContextProtoMatchProperties.matchedAliasTypes.modify())()
{
  sub_23F6F0C38();
  sub_23F6F09C4();
  return nullsub_1;
}

void ContextProtoMatchProperties.init(maxTokenCount:matchedTokenCount:matchedAliasTypes:)(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v10 = a5 + *(int *)(sub_23F6F0C38() + 24);
  v11 = type metadata accessor for ContextProtoAliasTypes(0);
  sub_23F6B5A8C(v10, v12, v13, v11);
  v14 = sub_23F6F0CB4();
  *(_QWORD *)a5 = a1;
  *(_BYTE *)(a5 + 8) = a2 & 1;
  *(_QWORD *)(a5 + 16) = a3;
  *(_BYTE *)(a5 + 24) = a4 & 1;
  sub_23F6F0CA8(v14, v15, &qword_256EA2ED0);
  sub_23F6B69E0();
}

uint64_t (*ContextProtoAliasTypes.options.modify())()
{
  return nullsub_1;
}

void ContextProtoAliasTypes.init(options:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  type metadata accessor for ContextProtoAliasTypes(0);
  sub_23F6F0B34();
  *a2 = a1;
  sub_23F694CC8();
}

void sub_23F6D87F4(uint64_t a1)
{
  if (a1 < 0)
  {
    sub_23F6F09D0();
    sub_23F6F0938();
    __break(1u);
  }
  else
  {
    if (a1)
      *(_QWORD *)(sub_23FB2F434() + 16) = a1;
    sub_23F6B6BFC();
  }
}

uint64_t type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EA3AD8);
}

uint64_t type metadata accessor for ContextProtoQueryDecorationOutput(uint64_t a1)
{
  return sub_23F6D89A0(a1, (uint64_t *)&unk_256EA3B80);
}

uint64_t type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EA4208);
}

uint64_t type metadata accessor for ContextProtoQueryDecorationInput(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EA3C68);
}

uint64_t type metadata accessor for ContextProtoDynamicEnumerationEntity(uint64_t a1)
{
  return sub_23F6D89A0(a1, (uint64_t *)&unk_256EA3D18);
}

uint64_t type metadata accessor for ContextProtoRetrievedTool(uint64_t a1)
{
  return sub_23F6D89A0(a1, (uint64_t *)&unk_256EA3DB8);
}

uint64_t type metadata accessor for ContextProtoRetrievedTool.Definition(uint64_t a1)
{
  return sub_23F6D89A0(a1, (uint64_t *)&unk_256EA3E60);
}

uint64_t type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EA3F10);
}

uint64_t type metadata accessor for ContextProtoSampleInvocation(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EA3FA0);
}

uint64_t type metadata accessor for ContextProtoToolRetrievalType(uint64_t a1)
{
  return sub_23F6D89A0(a1, (uint64_t *)&unk_256EA4038);
}

uint64_t type metadata accessor for ContextProtoToolQuery(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EA40E0);
}

uint64_t type metadata accessor for ContextProtoToolQueryOutput(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EA4178);
}

uint64_t type metadata accessor for ContextProtoSpanMatchedEntity(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EA42A8);
}

uint64_t type metadata accessor for ContextProtoEntityMatch(uint64_t a1)
{
  return sub_23F6D89A0(a1, (uint64_t *)&unk_256EA4340);
}

uint64_t type metadata accessor for ContextProtoMatchProperties(uint64_t a1)
{
  return sub_23F6D89A0(a1, (uint64_t *)&unk_256EA4400);
}

uint64_t type metadata accessor for ContextProtoAliasTypes(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EA44A0);
}

uint64_t sub_23F6D89A0(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F6D89D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23F6D8A14(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  sub_23F6F0A3C(v3);
  sub_23F694CC8();
}

uint64_t sub_23F6D8A40(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F6916B8(&qword_256EA3298);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23F6D8A80(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_23F6F08EC(a1, a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  sub_23F694CC8();
}

void sub_23F6D8AB0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_23F6B6B88(a1, a2, a3);
  sub_23F6F0A3C(v3);
  sub_23F694CC8();
}

void sub_23F6D8AD0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = sub_23F6B6B88(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v3, v4, v5);
  sub_23F694CC8();
}

unint64_t sub_23F6D8B08()
{
  unint64_t result;

  result = qword_256EA32A0;
  if (!qword_256EA32A0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextProtoContextType, &type metadata for ContextProtoContextType);
    atomic_store(result, (unint64_t *)&qword_256EA32A0);
  }
  return result;
}

void sub_23F6D8B44()
{
  sub_23F6D8DC0(&qword_256EA32A8, &qword_256EA32B0);
}

unint64_t sub_23F6D8B6C()
{
  unint64_t result;

  result = qword_256EA32B8;
  if (!qword_256EA32B8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextUserClassification, &type metadata for ContextProtoStructuredContextSiriRequestContextUserClassification);
    atomic_store(result, (unint64_t *)&qword_256EA32B8);
  }
  return result;
}

void sub_23F6D8BA8()
{
  sub_23F6D8DC0(&qword_256EA32C0, &qword_256EA32C8);
}

unint64_t sub_23F6D8BD0()
{
  unint64_t result;

  result = qword_256EA32D0;
  if (!qword_256EA32D0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextProtoConfidenceBucket, &type metadata for ContextProtoConfidenceBucket);
    atomic_store(result, (unint64_t *)&qword_256EA32D0);
  }
  return result;
}

void sub_23F6D8C0C()
{
  sub_23F6D8DC0(&qword_256EA32D8, &qword_256EA32E0);
}

unint64_t sub_23F6D8C34()
{
  unint64_t result;

  result = qword_256EA32E8;
  if (!qword_256EA32E8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextProtoQueryDecorationCaller, &type metadata for ContextProtoQueryDecorationCaller);
    atomic_store(result, (unint64_t *)&qword_256EA32E8);
  }
  return result;
}

void sub_23F6D8C70()
{
  sub_23F6D8DC0(&qword_256EA32F0, &qword_256EA32F8);
}

unint64_t sub_23F6D8C98()
{
  unint64_t result;

  result = qword_256EA3300;
  if (!qword_256EA3300)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextProtoEntityMatcherType, &type metadata for ContextProtoEntityMatcherType);
    atomic_store(result, (unint64_t *)&qword_256EA3300);
  }
  return result;
}

void sub_23F6D8CD4()
{
  sub_23F6D8DC0(&qword_256EA3308, &qword_256EA3310);
}

unint64_t sub_23F6D8CFC()
{
  unint64_t result;

  result = qword_256EA3318;
  if (!qword_256EA3318)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextProtoAliasTypesOptions, &type metadata for ContextProtoAliasTypesOptions);
    atomic_store(result, (unint64_t *)&qword_256EA3318);
  }
  return result;
}

void sub_23F6D8D38()
{
  sub_23F6D8DC0(&qword_256EA3320, &qword_256EA3328);
}

unint64_t sub_23F6D8D60()
{
  unint64_t result;

  result = qword_256EA3330;
  if (!qword_256EA3330)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextProtoRetrievedTool.Stage, &type metadata for ContextProtoRetrievedTool.Stage);
    atomic_store(result, (unint64_t *)&qword_256EA3330);
  }
  return result;
}

void sub_23F6D8D9C()
{
  sub_23F6D8DC0(&qword_256EA3338, &qword_256EA3340);
}

void sub_23F6D8DC0(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = sub_23F6AE310(a2);
    atomic_store(MEMORY[0x242674E5C](MEMORY[0x24BEE12E0], v3), a1);
  }
  sub_23F694CC8();
}

uint64_t getEnumTagSinglePayload for ContextProtoContextType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE7)
  {
    if (a2 + 25 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 25) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 26;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1A;
  v5 = v6 - 26;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ContextProtoContextType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 25 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 25) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE6)
    return ((uint64_t (*)(void))((char *)&loc_23F6D8ED0 + 4 * byte_23FB4F233[v4]))();
  *a1 = a2 + 25;
  return ((uint64_t (*)(void))((char *)sub_23F6D8F04 + 4 * byte_23FB4F22E[v4]))();
}

uint64_t sub_23F6D8F04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F6D8F0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F6D8F14);
  return result;
}

uint64_t sub_23F6D8F20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F6D8F28);
  *(_BYTE *)result = a2 + 25;
  return result;
}

uint64_t sub_23F6D8F2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F6D8F34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ContextProtoContextType()
{
  sub_23F694C70();
}

uint64_t storeEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContextUserClassification(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23F6D8F98 + 4 * byte_23FB4F23D[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23F6D8FCC + 4 * byte_23FB4F238[v4]))();
}

uint64_t sub_23F6D8FCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F6D8FD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F6D8FDCLL);
  return result;
}

uint64_t sub_23F6D8FE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F6D8FF0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23F6D8FF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F6D8FFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ContextProtoStructuredContextSiriRequestContextUserClassification()
{
  sub_23F694C70();
}

void type metadata accessor for ContextProtoConfidenceBucket()
{
  sub_23F694C70();
}

void type metadata accessor for ContextProtoQueryDecorationCaller()
{
  sub_23F694C70();
}

void type metadata accessor for ContextProtoEntityMatcherType()
{
  sub_23F694C70();
}

uint64_t storeEnumTagSinglePayload for ContextProtoAliasTypesOptions(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23F6D9088 + 4 * byte_23FB4F247[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23F6D90BC + 4 * byte_23FB4F242[v4]))();
}

uint64_t sub_23F6D90BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F6D90C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F6D90CCLL);
  return result;
}

uint64_t sub_23F6D90D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F6D90E0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23F6D90E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F6D90EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ContextProtoAliasTypesOptions()
{
  sub_23F694C70();
}

_QWORD *initializeBufferWithCopyOfBuffer for ContextProtoRetrievedContext(_BYTE *a1, _QWORD *a2, int *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  int v5;
  int *v6;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  _DWORD *v38;
  _DWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  int *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  _DWORD *v99;
  _DWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  void (*v108)(char *, char *, uint64_t);
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  _QWORD *v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  _QWORD *v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  void (*v144)(char *, char *, uint64_t);
  void (*v146)(char *, char *, uint64_t);
  _QWORD *__dst;
  char *__dsta;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  int *v152;
  int *v153;
  int *v154;
  _QWORD *v155;
  _QWORD *v156;

  v3 = a2;
  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    *a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = &a1[v7];
    v9 = (char *)a2 + v7;
    v10 = sub_23FB2EB1C();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
    {
      v11 = sub_23F6916B8(&qword_256EA2610);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
    }
    v13 = v6[6];
    v14 = (char *)v4 + v13;
    v15 = (char *)v3 + v13;
    v16 = type metadata accessor for ContextProtoConfidence(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, v16))
    {
      v17 = sub_23F6916B8(&qword_256EA2CF8);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v14 = *(_DWORD *)v15;
      v14[4] = v15[4];
      v18 = *(int *)(v16 + 24);
      v19 = &v14[v18];
      v20 = &v15[v18];
      v21 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v14, 0, 1, v16);
    }
    v22 = v6[7];
    v23 = (_QWORD *)((char *)v4 + v22);
    v24 = (_QWORD *)((char *)v3 + v22);
    v25 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v24, 1, (uint64_t)v25))
    {
      v26 = sub_23F6916B8(&qword_256EA2CE8);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v153 = v6;
      v155 = v3;
      v27 = v24[1];
      *v23 = *v24;
      v23[1] = v27;
      v28 = v24[3];
      v23[2] = v24[2];
      v23[3] = v28;
      v23[4] = v24[4];
      v29 = v25[7];
      v30 = (char *)v23 + v29;
      v31 = (char *)v24 + v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v31, 1, v16))
      {
        v32 = sub_23F6916B8(&qword_256EA2CF8);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        *(_DWORD *)v30 = *(_DWORD *)v31;
        v30[4] = v31[4];
        v33 = *(int *)(v16 + 24);
        v34 = &v30[v33];
        v35 = &v31[v33];
        v36 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v30, 0, 1, v16);
      }
      v37 = v25[8];
      v38 = (_DWORD *)((char *)v23 + v37);
      v39 = (_DWORD *)((char *)v24 + v37);
      v40 = type metadata accessor for ContextProtoBoundingBox(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v39, 1, v40))
      {
        v41 = sub_23F6916B8(&qword_256EA2800);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        *v38 = *v39;
        *((_BYTE *)v38 + 4) = *((_BYTE *)v39 + 4);
        v38[2] = v39[2];
        *((_BYTE *)v38 + 12) = *((_BYTE *)v39 + 12);
        v38[4] = v39[4];
        *((_BYTE *)v38 + 20) = *((_BYTE *)v39 + 20);
        *((_BYTE *)v38 + 28) = *((_BYTE *)v39 + 28);
        v38[6] = v39[6];
        v42 = *(int *)(v40 + 32);
        v43 = (char *)v38 + v42;
        v44 = (char *)v39 + v42;
        v45 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v38, 0, 1, v40);
      }
      v46 = v25[9];
      v47 = (char *)v23 + v46;
      v48 = (char *)v24 + v46;
      *(_QWORD *)v47 = *(_QWORD *)v48;
      v47[8] = v48[8];
      v49 = v25[10];
      v50 = (_QWORD *)((char *)v23 + v49);
      v51 = (_QWORD *)((char *)v24 + v49);
      v52 = v51[1];
      *v50 = *v51;
      v50[1] = v52;
      v53 = v25[11];
      v54 = (char *)v23 + v53;
      v55 = (char *)v24 + v53;
      v56 = sub_23FB2D718();
      v57 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16);
      swift_bridgeObjectRetain();
      v57(v54, v55, v56);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v23, 0, 1, (uint64_t)v25);
      v6 = v153;
      v3 = v155;
    }
    v58 = v6[8];
    v59 = (char *)v4 + v58;
    v60 = (char *)v3 + v58;
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v3 + v58, 1, v10))
    {
      v61 = sub_23F6916B8(&qword_256EA2610);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v59, v60, v10);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v59, 0, 1, v10);
    }
    v62 = v6[9];
    v63 = (_QWORD *)((char *)v4 + v62);
    v64 = (_QWORD *)((char *)v3 + v62);
    v65 = type metadata accessor for ContextProtoStructuredContext(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v64, 1, v65))
    {
      v66 = sub_23F6916B8(&qword_256EA2CD8);
      memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    }
    else
    {
      v67 = type metadata accessor for ContextProtoStructuredContextKind(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v64, 1, v67))
      {
        v68 = sub_23F6916B8(&qword_256EA2D40);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        v149 = v67;
        v150 = v65;
        v154 = v6;
        v156 = v3;
        v69 = v64[1];
        *v63 = *v64;
        v63[1] = v69;
        v70 = v64[3];
        v63[2] = v64[2];
        v63[3] = v70;
        v71 = v64[5];
        v63[4] = v64[4];
        v63[5] = v71;
        v72 = v64[7];
        v63[6] = v64[6];
        v63[7] = v72;
        v73 = v64[9];
        v63[8] = v64[8];
        v63[9] = v73;
        *((_DWORD *)v63 + 20) = *((_DWORD *)v64 + 20);
        *((_BYTE *)v63 + 84) = *((_BYTE *)v64 + 84);
        v152 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
        v74 = v152[15];
        __dst = (_QWORD *)((char *)v63 + v74);
        v75 = (_QWORD *)((char *)v64 + v74);
        v76 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v75, 1, v76))
        {
          v77 = sub_23F6916B8(&qword_256EA2D78);
          memcpy(__dst, v75, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
        }
        else
        {
          v78 = v75[1];
          *__dst = *v75;
          __dst[1] = v78;
          *((_WORD *)__dst + 8) = *((_WORD *)v75 + 8);
          v79 = *(int *)(v76 + 28);
          v80 = (char *)__dst + v79;
          v81 = (char *)v75 + v79;
          v82 = sub_23FB2D718();
          v83 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16);
          swift_bridgeObjectRetain();
          v83(v80, v81, v82);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__dst, 0, 1, v76);
        }
        v84 = v152;
        v85 = v152[16];
        v86 = (char *)v63 + v85;
        v87 = (char *)v64 + v85;
        v88 = *((_QWORD *)v87 + 1);
        if (v88 >> 60 == 15)
        {
          *(_OWORD *)v86 = *(_OWORD *)v87;
        }
        else
        {
          v89 = *(_QWORD *)v87;
          sub_23F6D1E20(*(_QWORD *)v87, *((_QWORD *)v87 + 1));
          *(_QWORD *)v86 = v89;
          *((_QWORD *)v86 + 1) = v88;
        }
        v90 = v152[17];
        v91 = (_QWORD *)((char *)v63 + v90);
        v92 = (_QWORD *)((char *)v64 + v90);
        v93 = v92[1];
        *v91 = *v92;
        v91[1] = v93;
        v94 = v152[18];
        v95 = (_QWORD *)((char *)v63 + v94);
        v96 = (_QWORD *)((char *)v64 + v94);
        v97 = v96[1];
        *v95 = *v96;
        v95[1] = v97;
        v98 = v152[19];
        v99 = (_DWORD *)((char *)v63 + v98);
        v100 = (_DWORD *)((char *)v64 + v98);
        v101 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v100, 1, v101))
        {
          v102 = sub_23F6916B8(&qword_256EA2D68);
          memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
        }
        else
        {
          *v99 = *v100;
          *((_BYTE *)v99 + 4) = *((_BYTE *)v100 + 4);
          v103 = *((_QWORD *)v100 + 2);
          *((_QWORD *)v99 + 1) = *((_QWORD *)v100 + 1);
          *((_QWORD *)v99 + 2) = v103;
          v99[6] = v100[6];
          *((_BYTE *)v99 + 28) = *((_BYTE *)v100 + 28);
          v99[8] = v100[8];
          *((_BYTE *)v99 + 36) = *((_BYTE *)v100 + 36);
          v104 = *(int *)(v101 + 32);
          v105 = (char *)v99 + v104;
          v106 = (char *)v100 + v104;
          v107 = sub_23FB2D718();
          v108 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 16);
          swift_bridgeObjectRetain();
          v108(v105, v106, v107);
          v84 = v152;
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v99, 0, 1, v101);
        }
        v109 = v84[20];
        v110 = (char *)v63 + v109;
        v111 = (char *)v64 + v109;
        *(_QWORD *)v110 = *(_QWORD *)v111;
        v110[8] = v111[8];
        v112 = v84[21];
        v113 = (_QWORD *)((char *)v63 + v112);
        v114 = (_QWORD *)((char *)v64 + v112);
        v115 = v114[1];
        *v113 = *v114;
        v113[1] = v115;
        *((_BYTE *)v63 + v84[22]) = *((_BYTE *)v64 + v84[22]);
        *((_BYTE *)v63 + v84[23]) = *((_BYTE *)v64 + v84[23]);
        v116 = v84[24];
        v117 = (_QWORD *)((char *)v63 + v116);
        v118 = (_QWORD *)((char *)v64 + v116);
        v119 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v118, 1, v119))
        {
          v120 = sub_23F6916B8(&qword_256EA2D58);
          memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
        }
        else
        {
          v121 = v118[1];
          *v117 = *v118;
          v117[1] = v121;
          v122 = v118[3];
          v117[2] = v118[2];
          v117[3] = v122;
          v123 = v118[5];
          v117[4] = v118[4];
          v117[5] = v123;
          v124 = v118[7];
          v117[6] = v118[6];
          v117[7] = v124;
          v125 = v118[9];
          v117[8] = v118[8];
          v117[9] = v125;
          v117[10] = v118[10];
          v126 = *(int *)(v119 + 40);
          v151 = (char *)v117 + v126;
          __dsta = (char *)v118 + v126;
          v127 = sub_23FB2D718();
          v146 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v84 = v152;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v146(v151, __dsta, v127);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v117, 0, 1, v119);
        }
        v6 = v154;
        v3 = v156;
        v65 = v150;
        v128 = v84[25];
        v129 = (char *)v63 + v128;
        v130 = (char *)v64 + v128;
        v131 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v131 - 8) + 16))(v129, v130, v131);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v63, 0, 1, v149);
      }
      v132 = *(int *)(v65 + 20);
      v133 = (char *)v63 + v132;
      v134 = (char *)v64 + v132;
      v135 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 16))(v133, v134, v135);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v63, 0, 1, v65);
    }
    v136 = v6[10];
    v137 = v6[11];
    v138 = (_QWORD *)((char *)v4 + v136);
    v139 = (_QWORD *)((char *)v3 + v136);
    v140 = v139[1];
    *v138 = *v139;
    v138[1] = v140;
    v141 = (char *)v4 + v137;
    v142 = (char *)v3 + v137;
    v143 = sub_23FB2D718();
    v144 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v143 - 8) + 16);
    swift_bridgeObjectRetain();
    v144(v141, v142, v143);
  }
  return v4;
}

uint64_t destroy for ContextProtoRetrievedContext(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v4 = a1 + a2[5];
  v5 = sub_23FB2EB1C();
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[6];
  v7 = type metadata accessor for ContextProtoConfidence(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v6, 1, v7))
  {
    v8 = v6 + *(int *)(v7 + 24);
    v9 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  v10 = a1 + a2[7];
  v11 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v10, 1, (uint64_t)v11))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12 = v10 + v11[7];
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v12, 1, v7))
    {
      v13 = v12 + *(int *)(v7 + 24);
      v14 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
    }
    v15 = v10 + v11[8];
    v16 = type metadata accessor for ContextProtoBoundingBox(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v15, 1, v16))
    {
      v17 = v15 + *(int *)(v16 + 32);
      v18 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
    }
    swift_bridgeObjectRelease();
    v19 = v10 + v11[11];
    v20 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  }
  v21 = a1 + a2[8];
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v21, 1, v5))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v21, v5);
  v22 = a1 + a2[9];
  v23 = type metadata accessor for ContextProtoStructuredContext(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v22, 1, v23))
  {
    v24 = type metadata accessor for ContextProtoStructuredContextKind(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v22, 1, v24))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v25 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
      v26 = v22 + v25[15];
      v27 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v26, 1, v27))
      {
        swift_bridgeObjectRelease();
        v28 = v26 + *(int *)(v27 + 28);
        v29 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
      }
      v30 = (uint64_t *)(v22 + v25[16]);
      v31 = v30[1];
      if (v31 >> 60 != 15)
        sub_23F6BC34C(*v30, v31);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v32 = v22 + v25[19];
      v33 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v32, 1, v33))
      {
        swift_bridgeObjectRelease();
        v34 = v32 + *(int *)(v33 + 32);
        v35 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
      }
      swift_bridgeObjectRelease();
      v36 = v22 + v25[24];
      v37 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v36, 1, v37))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v38 = v36 + *(int *)(v37 + 40);
        v39 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v38, v39);
      }
      v40 = v22 + v25[25];
      v41 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);
    }
    v42 = v22 + *(int *)(v23 + 20);
    v43 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
  }
  swift_bridgeObjectRelease();
  v44 = a1 + a2[11];
  v45 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v44, v45);
}

_BYTE *initializeWithCopy for ContextProtoRetrievedContext(_BYTE *a1, _BYTE *a2, int *a3)
{
  int *v3;
  _BYTE *v4;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  _DWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  _BYTE *v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  void (*v81)(char *, char *, uint64_t);
  int *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  _DWORD *v97;
  _DWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  void (*v106)(char *, char *, uint64_t);
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  uint64_t v139;
  _BYTE *v140;
  _BYTE *v141;
  uint64_t v142;
  void (*v143)(_BYTE *, _BYTE *, uint64_t);
  void (*v145)(char *, char *, uint64_t);
  char *v146;
  _QWORD *__dst;
  char *__dsta;
  uint64_t v149;
  uint64_t v150;
  int *v151;
  int *v152;
  int *v153;
  _BYTE *v154;
  _BYTE *v155;

  v3 = a3;
  v4 = a2;
  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23FB2EB1C();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v11 = v3[6];
  v12 = &a1[v11];
  v13 = &v4[v11];
  v14 = type metadata accessor for ContextProtoConfidence(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v14))
  {
    v15 = sub_23F6916B8(&qword_256EA2CF8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v12 = *(_DWORD *)v13;
    v12[4] = v13[4];
    v16 = *(int *)(v14 + 24);
    v17 = &v12[v16];
    v18 = &v13[v16];
    v19 = sub_23FB2D718();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v12, 0, 1, v14);
  }
  v20 = v3[7];
  v21 = &a1[v20];
  v22 = &v4[v20];
  v23 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, (uint64_t)v23))
  {
    v24 = sub_23F6916B8(&qword_256EA2CE8);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v152 = v3;
    v154 = v4;
    v25 = v22[1];
    *v21 = *v22;
    v21[1] = v25;
    v26 = v22[3];
    v21[2] = v22[2];
    v21[3] = v26;
    v21[4] = v22[4];
    v27 = v23[7];
    v28 = (char *)v21 + v27;
    v29 = (char *)v22 + v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v29, 1, v14))
    {
      v30 = sub_23F6916B8(&qword_256EA2CF8);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v28 = *(_DWORD *)v29;
      v28[4] = v29[4];
      v31 = *(int *)(v14 + 24);
      v32 = &v28[v31];
      v33 = &v29[v31];
      v34 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v28, 0, 1, v14);
    }
    v35 = v23[8];
    v36 = (_DWORD *)((char *)v21 + v35);
    v37 = (_DWORD *)((char *)v22 + v35);
    v38 = type metadata accessor for ContextProtoBoundingBox(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v37, 1, v38))
    {
      v39 = sub_23F6916B8(&qword_256EA2800);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      *v36 = *v37;
      *((_BYTE *)v36 + 4) = *((_BYTE *)v37 + 4);
      v36[2] = v37[2];
      *((_BYTE *)v36 + 12) = *((_BYTE *)v37 + 12);
      v36[4] = v37[4];
      *((_BYTE *)v36 + 20) = *((_BYTE *)v37 + 20);
      *((_BYTE *)v36 + 28) = *((_BYTE *)v37 + 28);
      v36[6] = v37[6];
      v40 = *(int *)(v38 + 32);
      v41 = (char *)v36 + v40;
      v42 = (char *)v37 + v40;
      v43 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v36, 0, 1, v38);
    }
    v44 = v23[9];
    v45 = (char *)v21 + v44;
    v46 = (char *)v22 + v44;
    *(_QWORD *)v45 = *(_QWORD *)v46;
    v45[8] = v46[8];
    v47 = v23[10];
    v48 = (_QWORD *)((char *)v21 + v47);
    v49 = (_QWORD *)((char *)v22 + v47);
    v50 = v49[1];
    *v48 = *v49;
    v48[1] = v50;
    v51 = v23[11];
    v52 = (char *)v21 + v51;
    v53 = (char *)v22 + v51;
    v54 = sub_23FB2D718();
    v55 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
    swift_bridgeObjectRetain();
    v55(v52, v53, v54);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v21, 0, 1, (uint64_t)v23);
    v3 = v152;
    v4 = v154;
  }
  v56 = v3[8];
  v57 = &a1[v56];
  v58 = &v4[v56];
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)&v4[v56], 1, v9))
  {
    v59 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v57, v58, v9);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v57, 0, 1, v9);
  }
  v60 = v3[9];
  v61 = &a1[v60];
  v62 = &v4[v60];
  v63 = type metadata accessor for ContextProtoStructuredContext(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v62, 1, v63))
  {
    v64 = sub_23F6916B8(&qword_256EA2CD8);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
  }
  else
  {
    v65 = type metadata accessor for ContextProtoStructuredContextKind(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v62, 1, v65))
    {
      v66 = sub_23F6916B8(&qword_256EA2D40);
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    }
    else
    {
      v149 = v65;
      v150 = v63;
      v153 = v3;
      v155 = v4;
      v67 = v62[1];
      *v61 = *v62;
      v61[1] = v67;
      v68 = v62[3];
      v61[2] = v62[2];
      v61[3] = v68;
      v69 = v62[5];
      v61[4] = v62[4];
      v61[5] = v69;
      v70 = v62[7];
      v61[6] = v62[6];
      v61[7] = v70;
      v71 = v62[9];
      v61[8] = v62[8];
      v61[9] = v71;
      *((_DWORD *)v61 + 20) = *((_DWORD *)v62 + 20);
      *((_BYTE *)v61 + 84) = *((_BYTE *)v62 + 84);
      v151 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
      v72 = v151[15];
      __dst = (_QWORD *)((char *)v61 + v72);
      v73 = (_QWORD *)((char *)v62 + v72);
      v74 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v73, 1, v74))
      {
        v75 = sub_23F6916B8(&qword_256EA2D78);
        memcpy(__dst, v73, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
      }
      else
      {
        v76 = v73[1];
        *__dst = *v73;
        __dst[1] = v76;
        *((_WORD *)__dst + 8) = *((_WORD *)v73 + 8);
        v77 = *(int *)(v74 + 28);
        v78 = (char *)__dst + v77;
        v79 = (char *)v73 + v77;
        v80 = sub_23FB2D718();
        v81 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 16);
        swift_bridgeObjectRetain();
        v81(v78, v79, v80);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__dst, 0, 1, v74);
      }
      v82 = v151;
      v83 = v151[16];
      v84 = (char *)v61 + v83;
      v85 = (char *)v62 + v83;
      v86 = *((_QWORD *)v85 + 1);
      if (v86 >> 60 == 15)
      {
        *(_OWORD *)v84 = *(_OWORD *)v85;
      }
      else
      {
        v87 = *(_QWORD *)v85;
        sub_23F6D1E20(*(_QWORD *)v85, *((_QWORD *)v85 + 1));
        *(_QWORD *)v84 = v87;
        *((_QWORD *)v84 + 1) = v86;
      }
      v88 = v151[17];
      v89 = (_QWORD *)((char *)v61 + v88);
      v90 = (_QWORD *)((char *)v62 + v88);
      v91 = v90[1];
      *v89 = *v90;
      v89[1] = v91;
      v92 = v151[18];
      v93 = (_QWORD *)((char *)v61 + v92);
      v94 = (_QWORD *)((char *)v62 + v92);
      v95 = v94[1];
      *v93 = *v94;
      v93[1] = v95;
      v96 = v151[19];
      v97 = (_DWORD *)((char *)v61 + v96);
      v98 = (_DWORD *)((char *)v62 + v96);
      v99 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v98, 1, v99))
      {
        v100 = sub_23F6916B8(&qword_256EA2D68);
        memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
      }
      else
      {
        *v97 = *v98;
        *((_BYTE *)v97 + 4) = *((_BYTE *)v98 + 4);
        v101 = *((_QWORD *)v98 + 2);
        *((_QWORD *)v97 + 1) = *((_QWORD *)v98 + 1);
        *((_QWORD *)v97 + 2) = v101;
        v97[6] = v98[6];
        *((_BYTE *)v97 + 28) = *((_BYTE *)v98 + 28);
        v97[8] = v98[8];
        *((_BYTE *)v97 + 36) = *((_BYTE *)v98 + 36);
        v102 = *(int *)(v99 + 32);
        v103 = (char *)v97 + v102;
        v104 = (char *)v98 + v102;
        v105 = sub_23FB2D718();
        v106 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 16);
        swift_bridgeObjectRetain();
        v107 = v104;
        v82 = v151;
        v106(v103, v107, v105);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v97, 0, 1, v99);
      }
      v108 = v82[20];
      v109 = (char *)v61 + v108;
      v110 = (char *)v62 + v108;
      *(_QWORD *)v109 = *(_QWORD *)v110;
      v109[8] = v110[8];
      v111 = v82[21];
      v112 = (_QWORD *)((char *)v61 + v111);
      v113 = (_QWORD *)((char *)v62 + v111);
      v114 = v113[1];
      *v112 = *v113;
      v112[1] = v114;
      *((_BYTE *)v61 + v82[22]) = *((_BYTE *)v62 + v82[22]);
      *((_BYTE *)v61 + v82[23]) = *((_BYTE *)v62 + v82[23]);
      v115 = v82[24];
      v116 = (_QWORD *)((char *)v61 + v115);
      v117 = (_QWORD *)((char *)v62 + v115);
      v118 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v117, 1, v118))
      {
        v119 = sub_23F6916B8(&qword_256EA2D58);
        memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
      }
      else
      {
        v120 = v117[1];
        *v116 = *v117;
        v116[1] = v120;
        v121 = v117[3];
        v116[2] = v117[2];
        v116[3] = v121;
        v122 = v117[5];
        v116[4] = v117[4];
        v116[5] = v122;
        v123 = v117[7];
        v116[6] = v117[6];
        v116[7] = v123;
        v124 = v117[9];
        v116[8] = v117[8];
        v116[9] = v124;
        v116[10] = v117[10];
        v125 = *(int *)(v118 + 40);
        v146 = (char *)v117 + v125;
        __dsta = (char *)v116 + v125;
        v126 = sub_23FB2D718();
        v145 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v82 = v151;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v145(__dsta, v146, v126);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v116, 0, 1, v118);
      }
      v3 = v153;
      v127 = v82[25];
      v128 = (char *)v61 + v127;
      v129 = (char *)v62 + v127;
      v130 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(v128, v129, v130);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v61, 0, 1, v149);
      v4 = v155;
      v63 = v150;
    }
    v131 = *(int *)(v63 + 20);
    v132 = (char *)v61 + v131;
    v133 = (char *)v62 + v131;
    v134 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(v132, v133, v134);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v61, 0, 1, v63);
  }
  v135 = v3[10];
  v136 = v3[11];
  v137 = &a1[v135];
  v138 = &v4[v135];
  v139 = v138[1];
  *v137 = *v138;
  v137[1] = v139;
  v140 = &a1[v136];
  v141 = &v4[v136];
  v142 = sub_23FB2D718();
  v143 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v142 - 8) + 16);
  swift_bridgeObjectRetain();
  v143(v140, v141, v142);
  return a1;
}

_BYTE *assignWithCopy for ContextProtoRetrievedContext(_BYTE *a1, _BYTE *a2, int *a3)
{
  int *v3;
  _BYTE *v4;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  int *v28;
  int v29;
  int v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  int v44;
  int v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  _DWORD *v55;
  int *v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  int v60;
  int v61;
  int v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  _BYTE *v107;
  _BYTE *v108;
  int v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  int v124;
  int *v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  void (*v140)(char *, char *, uint64_t);
  int *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t *v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  _QWORD *v149;
  uint64_t v150;
  _QWORD *v151;
  _QWORD *v152;
  uint64_t v153;
  _DWORD *v154;
  int *v155;
  uint64_t v156;
  uint64_t v157;
  int v158;
  int v159;
  int v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  void (*v165)(char *, char *, uint64_t);
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t *v169;
  uint64_t v170;
  uint64_t v171;
  _QWORD *v172;
  _QWORD *v173;
  uint64_t v174;
  _QWORD *v175;
  _QWORD *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  _BYTE *v190;
  _BYTE *v191;
  uint64_t v192;
  int v193;
  int v194;
  int v195;
  int v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  int *v201;
  uint64_t v202;
  _QWORD *v203;
  _QWORD *v204;
  uint64_t v205;
  int v206;
  int v207;
  uint64_t v208;
  uint64_t v209;
  void (*v210)(char *, char *, uint64_t);
  uint64_t v211;
  char *v212;
  uint64_t v213;
  int *v214;
  void (*v215)(char *, char *, uint64_t);
  uint64_t v216;
  uint64_t v217;
  uint64_t *v218;
  unint64_t v219;
  uint64_t v220;
  uint64_t v221;
  _QWORD *v222;
  _QWORD *v223;
  uint64_t v224;
  _QWORD *v225;
  _QWORD *v226;
  uint64_t v227;
  _DWORD *v228;
  int *v229;
  uint64_t v230;
  uint64_t v231;
  int v232;
  int v233;
  int v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  int *v238;
  void (*v239)(char *, char *, uint64_t);
  uint64_t v240;
  uint64_t v241;
  uint64_t *v242;
  uint64_t v243;
  uint64_t v244;
  _QWORD *v245;
  _QWORD *v246;
  uint64_t v247;
  _QWORD *v248;
  _QWORD *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  void (*v254)(char *, char *, uint64_t);
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t *v261;
  uint64_t *v262;
  unint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  unint64_t v267;
  uint64_t v268;
  _QWORD *v269;
  _QWORD *v270;
  uint64_t v271;
  _QWORD *v272;
  _QWORD *v273;
  uint64_t v274;
  _BYTE *v275;
  char *v276;
  uint64_t v277;
  int v278;
  int v279;
  int v280;
  int v281;
  int v282;
  uint64_t v283;
  uint64_t v284;
  void (*v285)(char *, char *, uint64_t);
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t *v289;
  uint64_t v290;
  uint64_t v291;
  _QWORD *v292;
  _QWORD *v293;
  uint64_t v294;
  _QWORD *v295;
  _QWORD *v296;
  uint64_t v297;
  int v298;
  int v299;
  uint64_t v300;
  uint64_t v301;
  void (*v302)(char *, char *, uint64_t);
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  _QWORD *v313;
  _QWORD *v314;
  uint64_t v315;
  _BYTE *v316;
  _BYTE *v317;
  uint64_t v318;
  uint64_t v320;
  char *v321;
  char *v322;
  uint64_t v323;
  int v324;
  int v325;
  int v326;
  uint64_t v327;
  char *v328;
  char *v329;
  uint64_t v330;
  uint64_t v331;
  char *v332;
  char *v333;
  uint64_t v334;
  void (*v335)(char *, char *, uint64_t);
  char *v336;
  char *v337;
  char *v338;
  uint64_t v339;
  char *v340;
  _QWORD *__dst;
  _QWORD *__dsta;
  char *__dstb;
  char *__dstc;
  char *__dstd;
  int *__dste;
  char *__dstf;
  char *__dstg;
  uint64_t v349;
  int *v350;
  char *v351;
  char *v352;
  char *v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  _BYTE *v357;
  _BYTE *v358;
  _BYTE *v359;
  _BYTE *v360;
  int *v361;
  int *v362;

  v3 = a3;
  v4 = a2;
  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23FB2EB1C();
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  v14 = v3[6];
  v15 = &a1[v14];
  v16 = &v4[v14];
  v17 = type metadata accessor for ContextProtoConfidence(0);
  v18 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, v17);
  v19 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, v17);
  if (v18)
  {
    if (!v19)
    {
      *(_DWORD *)v15 = *(_DWORD *)v16;
      v15[4] = v16[4];
      v20 = *(int *)(v17 + 24);
      v21 = &v15[v20];
      v22 = &v16[v20];
      v23 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v15, 0, 1, v17);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    sub_23F6D8A80((uint64_t)v15, type metadata accessor for ContextProtoConfidence);
LABEL_12:
    v24 = sub_23F6916B8(&qword_256EA2CF8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)v15 = *(_DWORD *)v16;
  v15[4] = v16[4];
  v36 = *(int *)(v17 + 24);
  v37 = &v15[v36];
  v38 = &v16[v36];
  v39 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v39 - 8) + 24))(v37, v38, v39);
LABEL_13:
  v25 = v3[7];
  v26 = &a1[v25];
  v27 = &v4[v25];
  v28 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
  v29 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v26, 1, (uint64_t)v28);
  v30 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v27, 1, (uint64_t)v28);
  if (v29)
  {
    if (!v30)
    {
      v357 = v4;
      v361 = v3;
      *v26 = *v27;
      v26[1] = v27[1];
      v26[2] = v27[2];
      v26[3] = v27[3];
      v26[4] = v27[4];
      v31 = v28[7];
      v32 = (char *)v26 + v31;
      v33 = (char *)v27 + v31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v33, 1, v17))
      {
        v34 = sub_23F6916B8(&qword_256EA2CF8);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        *(_DWORD *)v32 = *(_DWORD *)v33;
        v32[4] = v33[4];
        v50 = *(int *)(v17 + 24);
        v51 = &v32[v50];
        v52 = &v33[v50];
        v53 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v51, v52, v53);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v32, 0, 1, v17);
      }
      v54 = v28[8];
      v55 = (_DWORD *)((char *)v26 + v54);
      v56 = (int *)((char *)v27 + v54);
      v57 = type metadata accessor for ContextProtoBoundingBox(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v56, 1, v57))
      {
        v58 = sub_23F6916B8(&qword_256EA2800);
        memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        v59 = *v56;
        *((_BYTE *)v55 + 4) = *((_BYTE *)v56 + 4);
        *v55 = v59;
        v60 = v56[2];
        *((_BYTE *)v55 + 12) = *((_BYTE *)v56 + 12);
        v55[2] = v60;
        v61 = v56[4];
        *((_BYTE *)v55 + 20) = *((_BYTE *)v56 + 20);
        v55[4] = v61;
        v62 = v56[6];
        *((_BYTE *)v55 + 28) = *((_BYTE *)v56 + 28);
        v55[6] = v62;
        v63 = *(int *)(v57 + 32);
        v64 = (char *)v55 + v63;
        v65 = (char *)v56 + v63;
        v66 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v64, v65, v66);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v55, 0, 1, v57);
      }
      v4 = v357;
      v67 = v28[9];
      v68 = (char *)v26 + v67;
      v69 = (char *)v27 + v67;
      v70 = *(_QWORD *)v69;
      v68[8] = v69[8];
      *(_QWORD *)v68 = v70;
      v71 = v28[10];
      v72 = (_QWORD *)((char *)v26 + v71);
      v73 = (_QWORD *)((char *)v27 + v71);
      *v72 = *v73;
      v72[1] = v73[1];
      v74 = v28[11];
      v75 = (char *)v26 + v74;
      v76 = (char *)v27 + v74;
      v77 = sub_23FB2D718();
      v78 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 16);
      swift_bridgeObjectRetain();
      v78(v75, v76, v77);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v26, 0, 1, (uint64_t)v28);
      goto LABEL_40;
    }
LABEL_19:
    v35 = sub_23F6916B8(&qword_256EA2CE8);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_41;
  }
  if (v30)
  {
    sub_23F6D8A80((uint64_t)v26, type metadata accessor for ContextProtoContextMetadata);
    goto LABEL_19;
  }
  v361 = v3;
  v40 = v4;
  *v26 = *v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26[1] = v27[1];
  v26[2] = v27[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26[3] = v27[3];
  v26[4] = v27[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v41 = v28[7];
  v42 = (char *)v26 + v41;
  v43 = (char *)v27 + v41;
  v44 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v26 + v41, 1, v17);
  v45 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v43, 1, v17);
  if (v44)
  {
    if (!v45)
    {
      *(_DWORD *)v42 = *(_DWORD *)v43;
      v42[4] = v43[4];
      v46 = *(int *)(v17 + 24);
      v47 = &v42[v46];
      v48 = &v43[v46];
      v49 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v47, v48, v49);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v42, 0, 1, v17);
      goto LABEL_33;
    }
    goto LABEL_32;
  }
  if (v45)
  {
    sub_23F6D8A80((uint64_t)v42, type metadata accessor for ContextProtoConfidence);
LABEL_32:
    v79 = sub_23F6916B8(&qword_256EA2CF8);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    goto LABEL_33;
  }
  *(_DWORD *)v42 = *(_DWORD *)v43;
  v42[4] = v43[4];
  v189 = *(int *)(v17 + 24);
  v190 = &v42[v189];
  v191 = &v43[v189];
  v192 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v192 - 8) + 24))(v190, v191, v192);
LABEL_33:
  v80 = v28[8];
  v81 = (uint64_t)v26 + v80;
  v82 = (uint64_t)v27 + v80;
  v83 = type metadata accessor for ContextProtoBoundingBox(0);
  v84 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v81, 1, v83);
  v85 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v82, 1, v83);
  if (!v84)
  {
    if (!v85)
    {
      v193 = *(_DWORD *)v82;
      *(_BYTE *)(v81 + 4) = *(_BYTE *)(v82 + 4);
      *(_DWORD *)v81 = v193;
      v194 = *(_DWORD *)(v82 + 8);
      *(_BYTE *)(v81 + 12) = *(_BYTE *)(v82 + 12);
      *(_DWORD *)(v81 + 8) = v194;
      v195 = *(_DWORD *)(v82 + 16);
      *(_BYTE *)(v81 + 20) = *(_BYTE *)(v82 + 20);
      *(_DWORD *)(v81 + 16) = v195;
      v196 = *(_DWORD *)(v82 + 24);
      *(_BYTE *)(v81 + 28) = *(_BYTE *)(v82 + 28);
      *(_DWORD *)(v81 + 24) = v196;
      v197 = *(int *)(v83 + 32);
      v198 = v81 + v197;
      v199 = v82 + v197;
      v200 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v200 - 8) + 24))(v198, v199, v200);
      goto LABEL_39;
    }
    sub_23F6D8A80(v81, type metadata accessor for ContextProtoBoundingBox);
    goto LABEL_38;
  }
  if (v85)
  {
LABEL_38:
    v94 = sub_23F6916B8(&qword_256EA2800);
    memcpy((void *)v81, (const void *)v82, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
    goto LABEL_39;
  }
  v86 = *(_DWORD *)v82;
  *(_BYTE *)(v81 + 4) = *(_BYTE *)(v82 + 4);
  *(_DWORD *)v81 = v86;
  v87 = *(_DWORD *)(v82 + 8);
  *(_BYTE *)(v81 + 12) = *(_BYTE *)(v82 + 12);
  *(_DWORD *)(v81 + 8) = v87;
  v88 = *(_DWORD *)(v82 + 16);
  *(_BYTE *)(v81 + 20) = *(_BYTE *)(v82 + 20);
  *(_DWORD *)(v81 + 16) = v88;
  v89 = *(_DWORD *)(v82 + 24);
  *(_BYTE *)(v81 + 28) = *(_BYTE *)(v82 + 28);
  *(_DWORD *)(v81 + 24) = v89;
  v90 = *(int *)(v83 + 32);
  v91 = v81 + v90;
  v92 = v82 + v90;
  v93 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v91, v92, v93);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v81, 0, 1, v83);
LABEL_39:
  v4 = v40;
  v95 = v28[9];
  v96 = (char *)v26 + v95;
  v97 = (char *)v27 + v95;
  v98 = *(_QWORD *)v97;
  v96[8] = v97[8];
  *(_QWORD *)v96 = v98;
  v99 = v28[10];
  v100 = (_QWORD *)((char *)v26 + v99);
  v101 = (_QWORD *)((char *)v27 + v99);
  *v100 = *v101;
  v100[1] = v101[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v102 = v28[11];
  v103 = (char *)v26 + v102;
  v104 = (char *)v27 + v102;
  v105 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 24))(v103, v104, v105);
LABEL_40:
  v3 = v361;
LABEL_41:
  v106 = v3[8];
  v107 = &a1[v106];
  v108 = &v4[v106];
  v109 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)&a1[v106], 1, v9);
  v110 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v108, 1, v9);
  if (v109)
  {
    if (!v110)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v107, v108, v9);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v107, 0, 1, v9);
      goto LABEL_47;
    }
    goto LABEL_46;
  }
  v111 = *(_QWORD *)(v9 - 8);
  if (v110)
  {
    (*(void (**)(_BYTE *, uint64_t))(v111 + 8))(v107, v9);
LABEL_46:
    v112 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
    goto LABEL_47;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v111 + 24))(v107, v108, v9);
LABEL_47:
  v113 = v3[9];
  v114 = (uint64_t)&a1[v113];
  v115 = (uint64_t)&v4[v113];
  v116 = type metadata accessor for ContextProtoStructuredContext(0);
  v117 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v114, 1, v116);
  v118 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v115, 1, v116);
  if (!v117)
  {
    if (v118)
    {
      sub_23F6D8A80(v114, type metadata accessor for ContextProtoStructuredContext);
      goto LABEL_53;
    }
    v122 = type metadata accessor for ContextProtoStructuredContextKind(0);
    v123 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v114, 1, v122);
    v124 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v115, 1, v122);
    v362 = v3;
    if (v123)
    {
      if (!v124)
      {
        v349 = v122;
        v354 = v116;
        v358 = v4;
        *(_QWORD *)v114 = *(_QWORD *)v115;
        *(_QWORD *)(v114 + 8) = *(_QWORD *)(v115 + 8);
        *(_QWORD *)(v114 + 16) = *(_QWORD *)(v115 + 16);
        *(_QWORD *)(v114 + 24) = *(_QWORD *)(v115 + 24);
        *(_QWORD *)(v114 + 32) = *(_QWORD *)(v115 + 32);
        *(_QWORD *)(v114 + 40) = *(_QWORD *)(v115 + 40);
        *(_QWORD *)(v114 + 48) = *(_QWORD *)(v115 + 48);
        *(_QWORD *)(v114 + 56) = *(_QWORD *)(v115 + 56);
        *(_QWORD *)(v114 + 64) = *(_QWORD *)(v115 + 64);
        *(_QWORD *)(v114 + 72) = *(_QWORD *)(v115 + 72);
        *(_BYTE *)(v114 + 80) = *(_BYTE *)(v115 + 80);
        *(_BYTE *)(v114 + 81) = *(_BYTE *)(v115 + 81);
        *(_BYTE *)(v114 + 82) = *(_BYTE *)(v115 + 82);
        *(_BYTE *)(v114 + 83) = *(_BYTE *)(v115 + 83);
        *(_BYTE *)(v114 + 84) = *(_BYTE *)(v115 + 84);
        v125 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
        v126 = v125[15];
        __dst = (_QWORD *)(v114 + v126);
        v127 = (_QWORD *)(v115 + v126);
        v128 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v127, 1, v128))
        {
          v129 = sub_23F6916B8(&qword_256EA2D78);
          memcpy(__dst, v127, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
        }
        else
        {
          *__dst = *v127;
          __dst[1] = v127[1];
          *((_BYTE *)__dst + 16) = *((_BYTE *)v127 + 16);
          *((_BYTE *)__dst + 17) = *((_BYTE *)v127 + 17);
          v211 = *(int *)(v128 + 28);
          v340 = (char *)__dst + v211;
          v212 = (char *)v127 + v211;
          v213 = sub_23FB2D718();
          v214 = v125;
          v215 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v213 - 8) + 16);
          swift_bridgeObjectRetain();
          v215(v340, v212, v213);
          v125 = v214;
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__dst, 0, 1, v128);
        }
        v216 = v125[16];
        v217 = v114 + v216;
        v218 = (uint64_t *)(v115 + v216);
        v219 = v218[1];
        if (v219 >> 60 == 15)
        {
          *(_OWORD *)v217 = *(_OWORD *)v218;
        }
        else
        {
          v220 = *v218;
          sub_23F6D1E20(*v218, v218[1]);
          *(_QWORD *)v217 = v220;
          *(_QWORD *)(v217 + 8) = v219;
        }
        v221 = v125[17];
        v222 = (_QWORD *)(v114 + v221);
        v223 = (_QWORD *)(v115 + v221);
        *v222 = *v223;
        v222[1] = v223[1];
        v224 = v125[18];
        v225 = (_QWORD *)(v114 + v224);
        v226 = (_QWORD *)(v115 + v224);
        *v225 = *v226;
        v225[1] = v226[1];
        v227 = v125[19];
        v228 = (_DWORD *)(v114 + v227);
        v229 = (int *)(v115 + v227);
        v230 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v229, 1, v230))
        {
          v231 = sub_23F6916B8(&qword_256EA2D68);
          memcpy(v228, v229, *(_QWORD *)(*(_QWORD *)(v231 - 8) + 64));
        }
        else
        {
          v232 = *v229;
          *((_BYTE *)v228 + 4) = *((_BYTE *)v229 + 4);
          *v228 = v232;
          *((_QWORD *)v228 + 1) = *((_QWORD *)v229 + 1);
          *((_QWORD *)v228 + 2) = *((_QWORD *)v229 + 2);
          v233 = v229[6];
          *((_BYTE *)v228 + 28) = *((_BYTE *)v229 + 28);
          v228[6] = v233;
          v234 = v229[8];
          *((_BYTE *)v228 + 36) = *((_BYTE *)v229 + 36);
          v228[8] = v234;
          v235 = *(int *)(v230 + 32);
          __dstd = (char *)v228 + v235;
          v236 = (char *)v229 + v235;
          v237 = sub_23FB2D718();
          v238 = v125;
          v239 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v237 - 8) + 16);
          swift_bridgeObjectRetain();
          v239(__dstd, v236, v237);
          v125 = v238;
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v228, 0, 1, v230);
        }
        v240 = v125[20];
        v241 = v114 + v240;
        v242 = (uint64_t *)(v115 + v240);
        v243 = *v242;
        *(_BYTE *)(v241 + 8) = *((_BYTE *)v242 + 8);
        *(_QWORD *)v241 = v243;
        v244 = v125[21];
        v245 = (_QWORD *)(v114 + v244);
        v246 = (_QWORD *)(v115 + v244);
        *v245 = *v246;
        v245[1] = v246[1];
        *(_BYTE *)(v114 + v125[22]) = *(_BYTE *)(v115 + v125[22]);
        *(_BYTE *)(v114 + v125[23]) = *(_BYTE *)(v115 + v125[23]);
        v247 = v125[24];
        v248 = (_QWORD *)(v114 + v247);
        v249 = (_QWORD *)(v115 + v247);
        v250 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v249, 1, v250))
        {
          v251 = sub_23F6916B8(&qword_256EA2D58);
          memcpy(v248, v249, *(_QWORD *)(*(_QWORD *)(v251 - 8) + 64));
        }
        else
        {
          *v248 = *v249;
          v248[1] = v249[1];
          v248[2] = v249[2];
          v248[3] = v249[3];
          v248[4] = v249[4];
          v248[5] = v249[5];
          v248[6] = v249[6];
          v248[7] = v249[7];
          v248[8] = v249[8];
          v248[9] = v249[9];
          v248[10] = v249[10];
          v252 = *(int *)(v250 + 40);
          v337 = (char *)v249 + v252;
          v338 = (char *)v248 + v252;
          v253 = sub_23FB2D718();
          __dste = v125;
          v254 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v253 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v254(v338, v337, v253);
          v125 = __dste;
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v248, 0, 1, v250);
        }
        v255 = v125[25];
        v256 = v114 + v255;
        v257 = v115 + v255;
        v258 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v258 - 8) + 16))(v256, v257, v258);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v114, 0, 1, v349);
        v116 = v354;
        v4 = v358;
        goto LABEL_115;
      }
      goto LABEL_63;
    }
    if (v124)
    {
      sub_23F6D8A80(v114, type metadata accessor for ContextProtoStructuredContextKind);
LABEL_63:
      v135 = sub_23F6916B8(&qword_256EA2D40);
      memcpy((void *)v114, (const void *)v115, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
LABEL_115:
      v308 = *(int *)(v116 + 20);
      v309 = v114 + v308;
      v310 = v115 + v308;
      v311 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v311 - 8) + 24))(v309, v310, v311);
LABEL_116:
      v3 = v362;
      goto LABEL_117;
    }
    v356 = v116;
    v360 = v4;
    *(_QWORD *)v114 = *(_QWORD *)v115;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v114 + 8) = *(_QWORD *)(v115 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v114 + 16) = *(_QWORD *)(v115 + 16);
    *(_QWORD *)(v114 + 24) = *(_QWORD *)(v115 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v114 + 32) = *(_QWORD *)(v115 + 32);
    *(_QWORD *)(v114 + 40) = *(_QWORD *)(v115 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v114 + 48) = *(_QWORD *)(v115 + 48);
    *(_QWORD *)(v114 + 56) = *(_QWORD *)(v115 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v114 + 64) = *(_QWORD *)(v115 + 64);
    *(_QWORD *)(v114 + 72) = *(_QWORD *)(v115 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v114 + 80) = *(_BYTE *)(v115 + 80);
    *(_BYTE *)(v114 + 81) = *(_BYTE *)(v115 + 81);
    *(_BYTE *)(v114 + 82) = *(_BYTE *)(v115 + 82);
    *(_BYTE *)(v114 + 83) = *(_BYTE *)(v115 + 83);
    *(_BYTE *)(v114 + 84) = *(_BYTE *)(v115 + 84);
    v201 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
    v202 = v201[15];
    v203 = (_QWORD *)(v114 + v202);
    v204 = (_QWORD *)(v115 + v202);
    v205 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    v206 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v203, 1, v205);
    v207 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v204, 1, v205);
    if (v206)
    {
      if (!v207)
      {
        *v203 = *v204;
        v203[1] = v204[1];
        *((_BYTE *)v203 + 16) = *((_BYTE *)v204 + 16);
        *((_BYTE *)v203 + 17) = *((_BYTE *)v204 + 17);
        v208 = *(int *)(v205 + 28);
        __dstc = (char *)v204 + v208;
        v351 = (char *)v203 + v208;
        v209 = sub_23FB2D718();
        v210 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v209 - 8) + 16);
        swift_bridgeObjectRetain();
        v210(v351, __dstc, v209);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v203, 0, 1, v205);
        goto LABEL_95;
      }
    }
    else
    {
      if (!v207)
      {
        *v203 = *v204;
        v203[1] = v204[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *((_BYTE *)v203 + 16) = *((_BYTE *)v204 + 16);
        *((_BYTE *)v203 + 17) = *((_BYTE *)v204 + 17);
        v320 = *(int *)(v205 + 28);
        v321 = (char *)v203 + v320;
        v322 = (char *)v204 + v320;
        v323 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v323 - 8) + 24))(v321, v322, v323);
LABEL_95:
        v260 = v201[16];
        v261 = (uint64_t *)(v114 + v260);
        v262 = (uint64_t *)(v115 + v260);
        v263 = *(_QWORD *)(v115 + v260 + 8);
        if (*(_QWORD *)(v114 + v260 + 8) >> 60 == 15)
        {
          if (v263 >> 60 != 15)
          {
            v264 = *v262;
            sub_23F6D1E20(v264, v263);
            *v261 = v264;
            v261[1] = v263;
            goto LABEL_102;
          }
        }
        else
        {
          if (v263 >> 60 != 15)
          {
            v265 = *v262;
            sub_23F6D1E20(v265, v263);
            v266 = *v261;
            v267 = v261[1];
            *v261 = v265;
            v261[1] = v263;
            sub_23F6BC34C(v266, v267);
LABEL_102:
            v268 = v201[17];
            v269 = (_QWORD *)(v114 + v268);
            v270 = (_QWORD *)(v115 + v268);
            *v269 = *v270;
            v269[1] = v270[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v271 = v201[18];
            v272 = (_QWORD *)(v114 + v271);
            v273 = (_QWORD *)(v115 + v271);
            *v272 = *v273;
            v272[1] = v273[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v274 = v201[19];
            v275 = (_BYTE *)(v114 + v274);
            v276 = (char *)(v115 + v274);
            v277 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
            v278 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v275, 1, v277);
            v279 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v276, 1, v277);
            if (v278)
            {
              if (!v279)
              {
                v280 = *(_DWORD *)v276;
                v275[4] = v276[4];
                *(_DWORD *)v275 = v280;
                *((_QWORD *)v275 + 1) = *((_QWORD *)v276 + 1);
                *((_QWORD *)v275 + 2) = *((_QWORD *)v276 + 2);
                v281 = *((_DWORD *)v276 + 6);
                v275[28] = v276[28];
                *((_DWORD *)v275 + 6) = v281;
                v282 = *((_DWORD *)v276 + 8);
                v275[36] = v276[36];
                *((_DWORD *)v275 + 8) = v282;
                v283 = *(int *)(v277 + 32);
                __dstf = &v276[v283];
                v352 = &v275[v283];
                v284 = sub_23FB2D718();
                v285 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v284 - 8) + 16);
                swift_bridgeObjectRetain();
                v285(v352, __dstf, v284);
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v275, 0, 1, v277);
                goto LABEL_108;
              }
            }
            else
            {
              if (!v279)
              {
                v324 = *(_DWORD *)v276;
                v275[4] = v276[4];
                *(_DWORD *)v275 = v324;
                *((_QWORD *)v275 + 1) = *((_QWORD *)v276 + 1);
                *((_QWORD *)v275 + 2) = *((_QWORD *)v276 + 2);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v325 = *((_DWORD *)v276 + 6);
                v275[28] = v276[28];
                *((_DWORD *)v275 + 6) = v325;
                v326 = *((_DWORD *)v276 + 8);
                v275[36] = v276[36];
                *((_DWORD *)v275 + 8) = v326;
                v327 = *(int *)(v277 + 32);
                v328 = &v275[v327];
                v329 = &v276[v327];
                v330 = sub_23FB2D718();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v330 - 8) + 24))(v328, v329, v330);
LABEL_108:
                v287 = v201[20];
                v288 = v114 + v287;
                v289 = (uint64_t *)(v115 + v287);
                v290 = *v289;
                *(_BYTE *)(v288 + 8) = *((_BYTE *)v289 + 8);
                *(_QWORD *)v288 = v290;
                v291 = v201[21];
                v292 = (_QWORD *)(v114 + v291);
                v293 = (_QWORD *)(v115 + v291);
                *v292 = *v293;
                v292[1] = v293[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(_BYTE *)(v114 + v201[22]) = *(_BYTE *)(v115 + v201[22]);
                *(_BYTE *)(v114 + v201[23]) = *(_BYTE *)(v115 + v201[23]);
                v294 = v201[24];
                v295 = (_QWORD *)(v114 + v294);
                v296 = (_QWORD *)(v115 + v294);
                v297 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
                v298 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v295, 1, v297);
                v299 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v296, 1, v297);
                if (v298)
                {
                  if (!v299)
                  {
                    *v295 = *v296;
                    v295[1] = v296[1];
                    v295[2] = v296[2];
                    v295[3] = v296[3];
                    v295[4] = v296[4];
                    v295[5] = v296[5];
                    v295[6] = v296[6];
                    v295[7] = v296[7];
                    v295[8] = v296[8];
                    v295[9] = v296[9];
                    v295[10] = v296[10];
                    v300 = *(int *)(v297 + 40);
                    __dstg = (char *)v296 + v300;
                    v353 = (char *)v295 + v300;
                    v301 = sub_23FB2D718();
                    v302 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v301 - 8) + 16);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    v302(v353, __dstg, v301);
                    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v295, 0, 1, v297);
LABEL_114:
                    v116 = v356;
                    v304 = v201[25];
                    v305 = v114 + v304;
                    v306 = v115 + v304;
                    v307 = sub_23FB2D718();
                    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v307 - 8) + 24))(v305, v306, v307);
                    v4 = v360;
                    goto LABEL_115;
                  }
                }
                else
                {
                  if (!v299)
                  {
                    *v295 = *v296;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v295[1] = v296[1];
                    v295[2] = v296[2];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v295[3] = v296[3];
                    v295[4] = v296[4];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v295[5] = v296[5];
                    v295[6] = v296[6];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v295[7] = v296[7];
                    v295[8] = v296[8];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v295[9] = v296[9];
                    v295[10] = v296[10];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v331 = *(int *)(v297 + 40);
                    v332 = (char *)v295 + v331;
                    v333 = (char *)v296 + v331;
                    v334 = sub_23FB2D718();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v334 - 8) + 24))(v332, v333, v334);
                    goto LABEL_114;
                  }
                  sub_23F6D8A80((uint64_t)v295, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
                }
                v303 = sub_23F6916B8(&qword_256EA2D58);
                memcpy(v295, v296, *(_QWORD *)(*(_QWORD *)(v303 - 8) + 64));
                goto LABEL_114;
              }
              sub_23F6D8A80((uint64_t)v275, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
            }
            v286 = sub_23F6916B8(&qword_256EA2D68);
            memcpy(v275, v276, *(_QWORD *)(*(_QWORD *)(v286 - 8) + 64));
            goto LABEL_108;
          }
          sub_23F6DC470((uint64_t)v261);
        }
        *(_OWORD *)v261 = *(_OWORD *)v262;
        goto LABEL_102;
      }
      sub_23F6D8A80((uint64_t)v203, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
    }
    v259 = sub_23F6916B8(&qword_256EA2D78);
    memcpy(v203, v204, *(_QWORD *)(*(_QWORD *)(v259 - 8) + 64));
    goto LABEL_95;
  }
  if (!v118)
  {
    v119 = type metadata accessor for ContextProtoStructuredContextKind(0);
    v362 = v3;
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v115, 1, v119))
    {
      v120 = sub_23F6916B8(&qword_256EA2D40);
      memcpy((void *)v114, (const void *)v115, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
    }
    else
    {
      v339 = v119;
      v355 = v116;
      v359 = v4;
      *(_QWORD *)v114 = *(_QWORD *)v115;
      *(_QWORD *)(v114 + 8) = *(_QWORD *)(v115 + 8);
      *(_QWORD *)(v114 + 16) = *(_QWORD *)(v115 + 16);
      *(_QWORD *)(v114 + 24) = *(_QWORD *)(v115 + 24);
      *(_QWORD *)(v114 + 32) = *(_QWORD *)(v115 + 32);
      *(_QWORD *)(v114 + 40) = *(_QWORD *)(v115 + 40);
      *(_QWORD *)(v114 + 48) = *(_QWORD *)(v115 + 48);
      *(_QWORD *)(v114 + 56) = *(_QWORD *)(v115 + 56);
      *(_QWORD *)(v114 + 64) = *(_QWORD *)(v115 + 64);
      *(_QWORD *)(v114 + 72) = *(_QWORD *)(v115 + 72);
      *(_BYTE *)(v114 + 80) = *(_BYTE *)(v115 + 80);
      *(_BYTE *)(v114 + 81) = *(_BYTE *)(v115 + 81);
      *(_BYTE *)(v114 + 82) = *(_BYTE *)(v115 + 82);
      *(_BYTE *)(v114 + 83) = *(_BYTE *)(v115 + 83);
      *(_BYTE *)(v114 + 84) = *(_BYTE *)(v115 + 84);
      v130 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
      v131 = *(int *)(v130 + 60);
      __dsta = (_QWORD *)(v114 + v131);
      v350 = (int *)v130;
      v132 = (_QWORD *)(v115 + v131);
      v133 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v132, 1, v133))
      {
        v134 = sub_23F6916B8(&qword_256EA2D78);
        memcpy(__dsta, v132, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
      }
      else
      {
        *__dsta = *v132;
        __dsta[1] = v132[1];
        *((_BYTE *)__dsta + 16) = *((_BYTE *)v132 + 16);
        *((_BYTE *)__dsta + 17) = *((_BYTE *)v132 + 17);
        v136 = *(int *)(v133 + 28);
        v137 = (char *)__dsta + v136;
        v138 = (char *)v132 + v136;
        v139 = sub_23FB2D718();
        v140 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v139 - 8) + 16);
        swift_bridgeObjectRetain();
        v140(v137, v138, v139);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__dsta, 0, 1, v133);
      }
      v141 = v350;
      v142 = v350[16];
      v143 = v114 + v142;
      v144 = (uint64_t *)(v115 + v142);
      v145 = v144[1];
      if (v145 >> 60 == 15)
      {
        *(_OWORD *)v143 = *(_OWORD *)v144;
      }
      else
      {
        v146 = *v144;
        sub_23F6D1E20(*v144, v144[1]);
        *(_QWORD *)v143 = v146;
        *(_QWORD *)(v143 + 8) = v145;
      }
      v147 = v350[17];
      v148 = (_QWORD *)(v114 + v147);
      v149 = (_QWORD *)(v115 + v147);
      *v148 = *v149;
      v148[1] = v149[1];
      v150 = v350[18];
      v151 = (_QWORD *)(v114 + v150);
      v152 = (_QWORD *)(v115 + v150);
      *v151 = *v152;
      v151[1] = v152[1];
      v153 = v350[19];
      v154 = (_DWORD *)(v114 + v153);
      v155 = (int *)(v115 + v153);
      v156 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v155, 1, v156))
      {
        v157 = sub_23F6916B8(&qword_256EA2D68);
        memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
      }
      else
      {
        v158 = *v155;
        *((_BYTE *)v154 + 4) = *((_BYTE *)v155 + 4);
        *v154 = v158;
        *((_QWORD *)v154 + 1) = *((_QWORD *)v155 + 1);
        *((_QWORD *)v154 + 2) = *((_QWORD *)v155 + 2);
        v159 = v155[6];
        *((_BYTE *)v154 + 28) = *((_BYTE *)v155 + 28);
        v154[6] = v159;
        v160 = v155[8];
        *((_BYTE *)v154 + 36) = *((_BYTE *)v155 + 36);
        v154[8] = v160;
        v161 = *(int *)(v156 + 32);
        v162 = (char *)v154 + v161;
        v163 = (char *)v155 + v161;
        v164 = sub_23FB2D718();
        v165 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v164 - 8) + 16);
        swift_bridgeObjectRetain();
        v166 = v163;
        v141 = v350;
        v165(v162, v166, v164);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v154, 0, 1, v156);
      }
      v167 = v141[20];
      v168 = v114 + v167;
      v169 = (uint64_t *)(v115 + v167);
      v170 = *v169;
      *(_BYTE *)(v168 + 8) = *((_BYTE *)v169 + 8);
      *(_QWORD *)v168 = v170;
      v171 = v141[21];
      v172 = (_QWORD *)(v114 + v171);
      v173 = (_QWORD *)(v115 + v171);
      *v172 = *v173;
      v172[1] = v173[1];
      *(_BYTE *)(v114 + v141[22]) = *(_BYTE *)(v115 + v141[22]);
      *(_BYTE *)(v114 + v141[23]) = *(_BYTE *)(v115 + v141[23]);
      v174 = v141[24];
      v175 = (_QWORD *)(v114 + v174);
      v176 = (_QWORD *)(v115 + v174);
      v177 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v176, 1, v177))
      {
        v178 = sub_23F6916B8(&qword_256EA2D58);
        memcpy(v175, v176, *(_QWORD *)(*(_QWORD *)(v178 - 8) + 64));
      }
      else
      {
        *v175 = *v176;
        v175[1] = v176[1];
        v175[2] = v176[2];
        v175[3] = v176[3];
        v175[4] = v176[4];
        v175[5] = v176[5];
        v175[6] = v176[6];
        v175[7] = v176[7];
        v175[8] = v176[8];
        v175[9] = v176[9];
        v175[10] = v176[10];
        v179 = *(int *)(v177 + 40);
        __dstb = (char *)v175 + v179;
        v336 = (char *)v176 + v179;
        v180 = sub_23FB2D718();
        v335 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v141 = v350;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v335(__dstb, v336, v180);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v175, 0, 1, v177);
      }
      v4 = v359;
      v181 = v141[25];
      v182 = v114 + v181;
      v183 = v115 + v181;
      v184 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(v182, v183, v184);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v114, 0, 1, v339);
      v116 = v355;
    }
    v185 = *(int *)(v116 + 20);
    v186 = v114 + v185;
    v187 = v115 + v185;
    v188 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v188 - 8) + 16))(v186, v187, v188);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v114, 0, 1, v116);
    goto LABEL_116;
  }
LABEL_53:
  v121 = sub_23F6916B8(&qword_256EA2CD8);
  memcpy((void *)v114, (const void *)v115, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
LABEL_117:
  v312 = v3[10];
  v313 = &a1[v312];
  v314 = &v4[v312];
  *v313 = *v314;
  v313[1] = v314[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v315 = v3[11];
  v316 = &a1[v315];
  v317 = &v4[v315];
  v318 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v318 - 8) + 24))(v316, v317, v318);
  return a1;
}

uint64_t sub_23F6DC470(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BDCDDE8] - 8) + 8))();
  return a1;
}

_BYTE *initializeWithTake for ContextProtoRetrievedContext(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  _DWORD *v33;
  _DWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  _OWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  int *v60;
  uint64_t v61;
  _WORD *v62;
  _WORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  _DWORD *v70;
  _DWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  _BYTE *v97;
  _BYTE *v98;
  uint64_t v99;
  char *v101;
  char *v102;
  char *v103;
  _BYTE *v104;
  char *v105;
  uint64_t v106;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23FB2EB1C();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v11 = a3[6];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = type metadata accessor for ContextProtoConfidence(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v14))
  {
    v15 = sub_23F6916B8(&qword_256EA2CF8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v12 = *(_DWORD *)v13;
    v12[4] = v13[4];
    v16 = *(int *)(v14 + 24);
    v17 = &v12[v16];
    v18 = &v13[v16];
    v19 = sub_23FB2D718();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v12, 0, 1, v14);
  }
  v20 = a3[7];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, (uint64_t)v23))
  {
    v24 = sub_23F6916B8(&qword_256EA2CE8);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    *v21 = *v22;
    *(_OWORD *)(v21 + 1) = *(_OWORD *)(v22 + 1);
    *(_OWORD *)(v21 + 3) = *(_OWORD *)(v22 + 3);
    v25 = v23[7];
    v26 = (char *)v21 + v25;
    v27 = (char *)v22 + v25;
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22 + v25, 1, v14))
    {
      v28 = sub_23F6916B8(&qword_256EA2CF8);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v26 = *(_DWORD *)v27;
      v26[4] = v27[4];
      v29 = *(int *)(v14 + 24);
      v104 = &v26[v29];
      v30 = &v27[v29];
      v31 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v104, v30, v31);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v26, 0, 1, v14);
    }
    v32 = v23[8];
    v33 = (_DWORD *)((char *)v21 + v32);
    v34 = (_DWORD *)((char *)v22 + v32);
    v35 = type metadata accessor for ContextProtoBoundingBox(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v34, 1, v35))
    {
      v36 = sub_23F6916B8(&qword_256EA2800);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      *v33 = *v34;
      *((_BYTE *)v33 + 4) = *((_BYTE *)v34 + 4);
      v33[2] = v34[2];
      *((_BYTE *)v33 + 12) = *((_BYTE *)v34 + 12);
      v33[4] = v34[4];
      *((_BYTE *)v33 + 20) = *((_BYTE *)v34 + 20);
      *((_BYTE *)v33 + 28) = *((_BYTE *)v34 + 28);
      v33[6] = v34[6];
      v37 = *(int *)(v35 + 32);
      v105 = (char *)v33 + v37;
      v38 = (char *)v34 + v37;
      v39 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v105, v38, v39);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v33, 0, 1, v35);
    }
    v40 = v23[9];
    v41 = (char *)v21 + v40;
    v42 = (char *)v22 + v40;
    *(_QWORD *)v41 = *(_QWORD *)v42;
    v41[8] = v42[8];
    *(_OWORD *)((char *)v21 + v23[10]) = *(_OWORD *)((char *)v22 + v23[10]);
    v43 = v23[11];
    v44 = (char *)v21 + v43;
    v45 = (char *)v22 + v43;
    v46 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v21, 0, 1, (uint64_t)v23);
  }
  v47 = a3[8];
  v48 = &a1[v47];
  v49 = &a2[v47];
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)&a2[v47], 1, v9))
  {
    v50 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v48, v49, v9);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v48, 0, 1, v9);
  }
  v51 = a3[9];
  v52 = &a1[v51];
  v53 = &a2[v51];
  v54 = type metadata accessor for ContextProtoStructuredContext(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v53, 1, v54))
  {
    v55 = sub_23F6916B8(&qword_256EA2CD8);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    v56 = type metadata accessor for ContextProtoStructuredContextKind(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v53, 1, v56))
    {
      v57 = sub_23F6916B8(&qword_256EA2D40);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
    else
    {
      v106 = v56;
      v58 = v53[1];
      *v52 = *v53;
      v52[1] = v58;
      v59 = v53[3];
      v52[2] = v53[2];
      v52[3] = v59;
      v52[4] = v53[4];
      *((_DWORD *)v52 + 20) = *((_DWORD *)v53 + 20);
      *((_BYTE *)v52 + 84) = *((_BYTE *)v53 + 84);
      v60 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
      v61 = v60[15];
      v62 = (_WORD *)((char *)v52 + v61);
      v63 = (_WORD *)((char *)v53 + v61);
      v64 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v63, 1, v64))
      {
        v65 = sub_23F6916B8(&qword_256EA2D78);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v62 = *(_OWORD *)v63;
        v62[8] = v63[8];
        v66 = *(int *)(v64 + 28);
        v101 = (char *)v62 + v66;
        v67 = (char *)v63 + v66;
        v68 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v101, v67, v68);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v62, 0, 1, v64);
      }
      *(_OWORD *)((char *)v52 + v60[16]) = *(_OWORD *)((char *)v53 + v60[16]);
      *(_OWORD *)((char *)v52 + v60[17]) = *(_OWORD *)((char *)v53 + v60[17]);
      *(_OWORD *)((char *)v52 + v60[18]) = *(_OWORD *)((char *)v53 + v60[18]);
      v69 = v60[19];
      v70 = (_DWORD *)((char *)v52 + v69);
      v71 = (_DWORD *)((char *)v53 + v69);
      v72 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v71, 1, v72))
      {
        v73 = sub_23F6916B8(&qword_256EA2D68);
        memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
      }
      else
      {
        *v70 = *v71;
        *((_BYTE *)v70 + 4) = *((_BYTE *)v71 + 4);
        *(_OWORD *)(v70 + 2) = *(_OWORD *)(v71 + 2);
        v70[6] = v71[6];
        *((_BYTE *)v70 + 28) = *((_BYTE *)v71 + 28);
        v70[8] = v71[8];
        *((_BYTE *)v70 + 36) = *((_BYTE *)v71 + 36);
        v74 = *(int *)(v72 + 32);
        v102 = (char *)v70 + v74;
        v75 = (char *)v71 + v74;
        v76 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(v102, v75, v76);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v70, 0, 1, v72);
      }
      v77 = v60[20];
      v78 = (char *)v52 + v77;
      v79 = (char *)v53 + v77;
      *(_QWORD *)v78 = *(_QWORD *)v79;
      v78[8] = v79[8];
      *(_OWORD *)((char *)v52 + v60[21]) = *(_OWORD *)((char *)v53 + v60[21]);
      *((_BYTE *)v52 + v60[22]) = *((_BYTE *)v53 + v60[22]);
      *((_BYTE *)v52 + v60[23]) = *((_BYTE *)v53 + v60[23]);
      v80 = v60[24];
      v81 = (_QWORD *)((char *)v52 + v80);
      v82 = (_QWORD *)((char *)v53 + v80);
      v83 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v82, 1, v83))
      {
        v84 = sub_23F6916B8(&qword_256EA2D58);
        memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
      }
      else
      {
        *v81 = *v82;
        *(_OWORD *)(v81 + 1) = *(_OWORD *)(v82 + 1);
        *(_OWORD *)(v81 + 3) = *(_OWORD *)(v82 + 3);
        *(_OWORD *)(v81 + 5) = *(_OWORD *)(v82 + 5);
        *(_OWORD *)(v81 + 7) = *(_OWORD *)(v82 + 7);
        *(_OWORD *)(v81 + 9) = *(_OWORD *)(v82 + 9);
        v85 = *(int *)(v83 + 40);
        v103 = (char *)v81 + v85;
        v86 = (char *)v82 + v85;
        v87 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(v103, v86, v87);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v81, 0, 1, v83);
      }
      v88 = v60[25];
      v89 = (char *)v52 + v88;
      v90 = (char *)v53 + v88;
      v91 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v89, v90, v91);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v52, 0, 1, v106);
    }
    v92 = *(int *)(v54 + 20);
    v93 = (char *)v52 + v92;
    v94 = (char *)v53 + v92;
    v95 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v93, v94, v95);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v52, 0, 1, v54);
  }
  v96 = a3[11];
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)&a2[a3[10]];
  v97 = &a1[v96];
  v98 = &a2[v96];
  v99 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v97, v98, v99);
  return a1;
}

_BYTE *assignWithTake for ContextProtoRetrievedContext(_BYTE *a1, _BYTE *a2, int *a3)
{
  int *v3;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  int *v28;
  int v29;
  int v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  int v45;
  int v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  _DWORD *v56;
  _DWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  int v76;
  int v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE *v96;
  _BYTE *v97;
  int v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  int v113;
  __int128 v114;
  __int128 v115;
  int *v116;
  uint64_t v117;
  _WORD *v118;
  _WORD *v119;
  uint64_t v120;
  uint64_t v121;
  __int128 v122;
  __int128 v123;
  int *v124;
  uint64_t v125;
  _WORD *v126;
  _WORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  _DWORD *v136;
  _DWORD *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  _QWORD *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  int *v176;
  uint64_t v177;
  _WORD *v178;
  _WORD *v179;
  uint64_t v180;
  int v181;
  int v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  _DWORD *v191;
  _DWORD *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  _QWORD *v203;
  _QWORD *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t *v217;
  uint64_t *v218;
  unint64_t v219;
  unint64_t v220;
  uint64_t v221;
  uint64_t v222;
  _QWORD *v223;
  uint64_t *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  _QWORD *v228;
  uint64_t *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  char *v234;
  uint64_t v235;
  int v236;
  int v237;
  uint64_t v238;
  char *v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  _QWORD *v247;
  uint64_t *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  char *v252;
  char *v253;
  uint64_t v254;
  int v255;
  int v256;
  uint64_t v257;
  char *v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  _QWORD *v271;
  uint64_t *v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  _BYTE *v276;
  _BYTE *v277;
  uint64_t v278;
  uint64_t v280;
  uint64_t v281;
  char *v282;
  char *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  char *v287;
  char *v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  char *v296;
  char *v297;
  uint64_t v298;
  uint64_t v299;
  char *v300;
  uint64_t v301;
  uint64_t v302;
  int *v303;
  int *v304;
  int *v305;
  int *v306;
  int *v307;

  v3 = a3;
  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23FB2EB1C();
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 40))(v7, v8, v9);
LABEL_7:
  v14 = v3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = type metadata accessor for ContextProtoConfidence(0);
  v18 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, v17);
  v19 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, v17);
  if (v18)
  {
    if (!v19)
    {
      *(_DWORD *)v15 = *(_DWORD *)v16;
      v15[4] = v16[4];
      v20 = *(int *)(v17 + 24);
      v21 = &v15[v20];
      v22 = &v16[v20];
      v23 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v15, 0, 1, v17);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    sub_23F6D8A80((uint64_t)v15, type metadata accessor for ContextProtoConfidence);
LABEL_12:
    v24 = sub_23F6916B8(&qword_256EA2CF8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)v15 = *(_DWORD *)v16;
  v15[4] = v16[4];
  v36 = *(int *)(v17 + 24);
  v37 = &v15[v36];
  v38 = &v16[v36];
  v39 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v39 - 8) + 40))(v37, v38, v39);
LABEL_13:
  v25 = v3[7];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
  v29 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v26, 1, (uint64_t)v28);
  v30 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v27, 1, (uint64_t)v28);
  if (!v29)
  {
    if (v30)
    {
      sub_23F6D8A80((uint64_t)v26, type metadata accessor for ContextProtoContextMetadata);
      goto LABEL_19;
    }
    v304 = v3;
    *v26 = *v27;
    swift_bridgeObjectRelease();
    v40 = v27[2];
    v26[1] = v27[1];
    v26[2] = v40;
    swift_bridgeObjectRelease();
    v41 = v27[4];
    v26[3] = v27[3];
    v26[4] = v41;
    swift_bridgeObjectRelease();
    v42 = v28[7];
    v43 = (char *)v26 + v42;
    v44 = (char *)v27 + v42;
    v45 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v26 + v42, 1, v17);
    v46 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v44, 1, v17);
    if (v45)
    {
      if (!v46)
      {
        *(_DWORD *)v43 = *(_DWORD *)v44;
        v43[4] = v44[4];
        v47 = *(int *)(v17 + 24);
        v48 = &v43[v47];
        v49 = &v44[v47];
        v50 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v43, 0, 1, v17);
        goto LABEL_33;
      }
    }
    else
    {
      if (!v46)
      {
        *(_DWORD *)v43 = *(_DWORD *)v44;
        v43[4] = v44[4];
        v164 = *(int *)(v17 + 24);
        v165 = &v43[v164];
        v166 = &v44[v164];
        v167 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v167 - 8) + 40))(v165, v166, v167);
LABEL_33:
        v72 = v28[8];
        v73 = (char *)v26 + v72;
        v74 = (char *)v27 + v72;
        v75 = type metadata accessor for ContextProtoBoundingBox(0);
        v76 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v73, 1, v75);
        v77 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v74, 1, v75);
        if (v76)
        {
          if (!v77)
          {
            *(_DWORD *)v73 = *(_DWORD *)v74;
            v73[4] = v74[4];
            *((_DWORD *)v73 + 2) = *((_DWORD *)v74 + 2);
            v73[12] = v74[12];
            *((_DWORD *)v73 + 4) = *((_DWORD *)v74 + 4);
            v73[20] = v74[20];
            v73[28] = v74[28];
            *((_DWORD *)v73 + 6) = *((_DWORD *)v74 + 6);
            v78 = *(int *)(v75 + 32);
            v79 = &v73[v78];
            v80 = &v74[v78];
            v81 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v79, v80, v81);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v73, 0, 1, v75);
LABEL_39:
            v3 = v304;
            v83 = v28[9];
            v84 = (char *)v26 + v83;
            v85 = (char *)v27 + v83;
            *(_QWORD *)v84 = *(_QWORD *)v85;
            v84[8] = v85[8];
            v86 = v28[10];
            v87 = (_QWORD *)((char *)v26 + v86);
            v88 = (_QWORD *)((char *)v27 + v86);
            v90 = *v88;
            v89 = v88[1];
            *v87 = v90;
            v87[1] = v89;
            swift_bridgeObjectRelease();
            v91 = v28[11];
            v92 = (char *)v26 + v91;
            v93 = (char *)v27 + v91;
            v94 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 40))(v92, v93, v94);
            goto LABEL_40;
          }
        }
        else
        {
          if (!v77)
          {
            *(_DWORD *)v73 = *(_DWORD *)v74;
            v73[4] = v74[4];
            *((_DWORD *)v73 + 2) = *((_DWORD *)v74 + 2);
            v73[12] = v74[12];
            *((_DWORD *)v73 + 4) = *((_DWORD *)v74 + 4);
            v73[20] = v74[20];
            v73[28] = v74[28];
            *((_DWORD *)v73 + 6) = *((_DWORD *)v74 + 6);
            v168 = *(int *)(v75 + 32);
            v169 = &v73[v168];
            v170 = &v74[v168];
            v171 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v171 - 8) + 40))(v169, v170, v171);
            goto LABEL_39;
          }
          sub_23F6D8A80((uint64_t)v73, type metadata accessor for ContextProtoBoundingBox);
        }
        v82 = sub_23F6916B8(&qword_256EA2800);
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
        goto LABEL_39;
      }
      sub_23F6D8A80((uint64_t)v43, type metadata accessor for ContextProtoConfidence);
    }
    v71 = sub_23F6916B8(&qword_256EA2CF8);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    goto LABEL_33;
  }
  if (v30)
  {
LABEL_19:
    v35 = sub_23F6916B8(&qword_256EA2CE8);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_40;
  }
  v303 = v3;
  *v26 = *v27;
  *(_OWORD *)(v26 + 1) = *(_OWORD *)(v27 + 1);
  *(_OWORD *)(v26 + 3) = *(_OWORD *)(v27 + 3);
  v31 = v28[7];
  v32 = (char *)v26 + v31;
  v33 = (char *)v27 + v31;
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v27 + v31, 1, v17))
  {
    v34 = sub_23F6916B8(&qword_256EA2CF8);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v32 = *(_DWORD *)v33;
    v32[4] = v33[4];
    v51 = *(int *)(v17 + 24);
    v52 = &v32[v51];
    v53 = &v33[v51];
    v54 = sub_23FB2D718();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v32, 0, 1, v17);
  }
  v55 = v28[8];
  v56 = (_DWORD *)((char *)v26 + v55);
  v57 = (_DWORD *)((char *)v27 + v55);
  v58 = type metadata accessor for ContextProtoBoundingBox(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v57, 1, v58))
  {
    v59 = sub_23F6916B8(&qword_256EA2800);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
  }
  else
  {
    *v56 = *v57;
    *((_BYTE *)v56 + 4) = *((_BYTE *)v57 + 4);
    v56[2] = v57[2];
    *((_BYTE *)v56 + 12) = *((_BYTE *)v57 + 12);
    v56[4] = v57[4];
    *((_BYTE *)v56 + 20) = *((_BYTE *)v57 + 20);
    *((_BYTE *)v56 + 28) = *((_BYTE *)v57 + 28);
    v56[6] = v57[6];
    v60 = *(int *)(v58 + 32);
    v61 = (char *)v56 + v60;
    v62 = (char *)v57 + v60;
    v63 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v61, v62, v63);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v56, 0, 1, v58);
  }
  v3 = v303;
  v64 = v28[9];
  v65 = (char *)v26 + v64;
  v66 = (char *)v27 + v64;
  *(_QWORD *)v65 = *(_QWORD *)v66;
  v65[8] = v66[8];
  *(_OWORD *)((char *)v26 + v28[10]) = *(_OWORD *)((char *)v27 + v28[10]);
  v67 = v28[11];
  v68 = (char *)v26 + v67;
  v69 = (char *)v27 + v67;
  v70 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v68, v69, v70);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v26, 0, 1, (uint64_t)v28);
LABEL_40:
  v95 = v3[8];
  v96 = &a1[v95];
  v97 = &a2[v95];
  v98 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)&a1[v95], 1, v9);
  v99 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v97, 1, v9);
  if (v98)
  {
    if (!v99)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v96, v97, v9);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v96, 0, 1, v9);
      goto LABEL_46;
    }
    goto LABEL_45;
  }
  v100 = *(_QWORD *)(v9 - 8);
  if (v99)
  {
    (*(void (**)(_BYTE *, uint64_t))(v100 + 8))(v96, v9);
LABEL_45:
    v101 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
    goto LABEL_46;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v100 + 40))(v96, v97, v9);
LABEL_46:
  v102 = v3[9];
  v103 = (uint64_t)&a1[v102];
  v104 = (uint64_t)&a2[v102];
  v105 = type metadata accessor for ContextProtoStructuredContext(0);
  v106 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v103, 1, v105);
  v107 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v104, 1, v105);
  if (!v106)
  {
    if (v107)
    {
      sub_23F6D8A80(v103, type metadata accessor for ContextProtoStructuredContext);
      goto LABEL_52;
    }
    v111 = type metadata accessor for ContextProtoStructuredContextKind(0);
    v112 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v103, 1, v111);
    v113 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v104, 1, v111);
    if (v112)
    {
      if (!v113)
      {
        v305 = v3;
        v114 = *(_OWORD *)(v104 + 16);
        *(_OWORD *)v103 = *(_OWORD *)v104;
        *(_OWORD *)(v103 + 16) = v114;
        v115 = *(_OWORD *)(v104 + 48);
        *(_OWORD *)(v103 + 32) = *(_OWORD *)(v104 + 32);
        *(_OWORD *)(v103 + 48) = v115;
        *(_OWORD *)(v103 + 64) = *(_OWORD *)(v104 + 64);
        *(_DWORD *)(v103 + 80) = *(_DWORD *)(v104 + 80);
        *(_BYTE *)(v103 + 84) = *(_BYTE *)(v104 + 84);
        v116 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
        v117 = v116[15];
        v118 = (_WORD *)(v103 + v117);
        v119 = (_WORD *)(v104 + v117);
        v120 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v119, 1, v120))
        {
          v121 = sub_23F6916B8(&qword_256EA2D78);
          memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
        }
        else
        {
          *(_OWORD *)v118 = *(_OWORD *)v119;
          v118[8] = v119[8];
          v187 = *(int *)(v120 + 28);
          v300 = (char *)v118 + v187;
          v188 = (char *)v119 + v187;
          v189 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 32))(v300, v188, v189);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v118, 0, 1, v120);
        }
        *(_OWORD *)(v103 + v116[16]) = *(_OWORD *)(v104 + v116[16]);
        *(_OWORD *)(v103 + v116[17]) = *(_OWORD *)(v104 + v116[17]);
        *(_OWORD *)(v103 + v116[18]) = *(_OWORD *)(v104 + v116[18]);
        v190 = v116[19];
        v191 = (_DWORD *)(v103 + v190);
        v192 = (_DWORD *)(v104 + v190);
        v193 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v192, 1, v193))
        {
          v194 = sub_23F6916B8(&qword_256EA2D68);
          memcpy(v191, v192, *(_QWORD *)(*(_QWORD *)(v194 - 8) + 64));
        }
        else
        {
          *v191 = *v192;
          *((_BYTE *)v191 + 4) = *((_BYTE *)v192 + 4);
          *(_OWORD *)(v191 + 2) = *(_OWORD *)(v192 + 2);
          v191[6] = v192[6];
          *((_BYTE *)v191 + 28) = *((_BYTE *)v192 + 28);
          v191[8] = v192[8];
          *((_BYTE *)v191 + 36) = *((_BYTE *)v192 + 36);
          v195 = *(int *)(v193 + 32);
          v301 = v193;
          v196 = (char *)v191 + v195;
          v197 = (char *)v192 + v195;
          v198 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 32))(v196, v197, v198);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v191, 0, 1, v301);
        }
        v199 = v116[20];
        v200 = v103 + v199;
        v201 = v104 + v199;
        *(_QWORD *)v200 = *(_QWORD *)v201;
        *(_BYTE *)(v200 + 8) = *(_BYTE *)(v201 + 8);
        *(_OWORD *)(v103 + v116[21]) = *(_OWORD *)(v104 + v116[21]);
        *(_BYTE *)(v103 + v116[22]) = *(_BYTE *)(v104 + v116[22]);
        *(_BYTE *)(v103 + v116[23]) = *(_BYTE *)(v104 + v116[23]);
        v202 = v116[24];
        v203 = (_QWORD *)(v103 + v202);
        v204 = (_QWORD *)(v104 + v202);
        v205 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v204, 1, v205))
        {
          v206 = sub_23F6916B8(&qword_256EA2D58);
          memcpy(v203, v204, *(_QWORD *)(*(_QWORD *)(v206 - 8) + 64));
        }
        else
        {
          *v203 = *v204;
          *(_OWORD *)(v203 + 1) = *(_OWORD *)(v204 + 1);
          *(_OWORD *)(v203 + 3) = *(_OWORD *)(v204 + 3);
          *(_OWORD *)(v203 + 5) = *(_OWORD *)(v204 + 5);
          *(_OWORD *)(v203 + 7) = *(_OWORD *)(v204 + 7);
          *(_OWORD *)(v203 + 9) = *(_OWORD *)(v204 + 9);
          v207 = *(int *)(v205 + 40);
          v302 = v205;
          v208 = (char *)v203 + v207;
          v209 = (char *)v204 + v207;
          v210 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v210 - 8) + 32))(v208, v209, v210);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v203, 0, 1, v302);
        }
        v211 = v116[25];
        v212 = v103 + v211;
        v213 = v104 + v211;
        v214 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v214 - 8) + 32))(v212, v213, v214);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v103, 0, 1, v111);
        v3 = v305;
        goto LABEL_106;
      }
      goto LABEL_62;
    }
    if (v113)
    {
      sub_23F6D8A80(v103, type metadata accessor for ContextProtoStructuredContextKind);
LABEL_62:
      v130 = sub_23F6916B8(&qword_256EA2D40);
      memcpy((void *)v103, (const void *)v104, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
LABEL_106:
      v266 = *(int *)(v105 + 20);
      v267 = v103 + v266;
      v268 = v104 + v266;
      v269 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v269 - 8) + 40))(v267, v268, v269);
      goto LABEL_107;
    }
    v307 = v3;
    *(_QWORD *)v103 = *(_QWORD *)v104;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v103 + 8) = *(_QWORD *)(v104 + 8);
    swift_bridgeObjectRelease();
    v172 = *(_QWORD *)(v104 + 24);
    *(_QWORD *)(v103 + 16) = *(_QWORD *)(v104 + 16);
    *(_QWORD *)(v103 + 24) = v172;
    swift_bridgeObjectRelease();
    v173 = *(_QWORD *)(v104 + 40);
    *(_QWORD *)(v103 + 32) = *(_QWORD *)(v104 + 32);
    *(_QWORD *)(v103 + 40) = v173;
    swift_bridgeObjectRelease();
    v174 = *(_QWORD *)(v104 + 56);
    *(_QWORD *)(v103 + 48) = *(_QWORD *)(v104 + 48);
    *(_QWORD *)(v103 + 56) = v174;
    swift_bridgeObjectRelease();
    v175 = *(_QWORD *)(v104 + 72);
    *(_QWORD *)(v103 + 64) = *(_QWORD *)(v104 + 64);
    *(_QWORD *)(v103 + 72) = v175;
    swift_bridgeObjectRelease();
    *(_DWORD *)(v103 + 80) = *(_DWORD *)(v104 + 80);
    *(_BYTE *)(v103 + 84) = *(_BYTE *)(v104 + 84);
    v176 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
    v177 = v176[15];
    v178 = (_WORD *)(v103 + v177);
    v179 = (_WORD *)(v104 + v177);
    v180 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    v181 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v178, 1, v180);
    v182 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v179, 1, v180);
    if (v181)
    {
      if (!v182)
      {
        *(_OWORD *)v178 = *(_OWORD *)v179;
        v178[8] = v179[8];
        v183 = *(int *)(v180 + 28);
        v184 = (char *)v178 + v183;
        v185 = (char *)v179 + v183;
        v186 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v186 - 8) + 32))(v184, v185, v186);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v178, 0, 1, v180);
        goto LABEL_88;
      }
    }
    else
    {
      if (!v182)
      {
        v280 = *((_QWORD *)v179 + 1);
        *(_QWORD *)v178 = *(_QWORD *)v179;
        *((_QWORD *)v178 + 1) = v280;
        swift_bridgeObjectRelease();
        v178[8] = v179[8];
        v281 = *(int *)(v180 + 28);
        v282 = (char *)v178 + v281;
        v283 = (char *)v179 + v281;
        v284 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v284 - 8) + 40))(v282, v283, v284);
LABEL_88:
        v216 = v176[16];
        v217 = (uint64_t *)(v103 + v216);
        v218 = (uint64_t *)(v104 + v216);
        v219 = *(_QWORD *)(v103 + v216 + 8);
        if (v219 >> 60 != 15)
        {
          v220 = v218[1];
          if (v220 >> 60 != 15)
          {
            v221 = *v217;
            *v217 = *v218;
            v217[1] = v220;
            sub_23F6BC34C(v221, v219);
LABEL_93:
            v222 = v176[17];
            v223 = (_QWORD *)(v103 + v222);
            v224 = (uint64_t *)(v104 + v222);
            v226 = *v224;
            v225 = v224[1];
            *v223 = v226;
            v223[1] = v225;
            swift_bridgeObjectRelease();
            v227 = v176[18];
            v228 = (_QWORD *)(v103 + v227);
            v229 = (uint64_t *)(v104 + v227);
            v231 = *v229;
            v230 = v229[1];
            *v228 = v231;
            v228[1] = v230;
            swift_bridgeObjectRelease();
            v232 = v176[19];
            v233 = (char *)(v103 + v232);
            v234 = (char *)(v104 + v232);
            v235 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
            v236 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v233, 1, v235);
            v237 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v234, 1, v235);
            if (v236)
            {
              if (!v237)
              {
                *(_DWORD *)v233 = *(_DWORD *)v234;
                v233[4] = v234[4];
                *(_OWORD *)(v233 + 8) = *(_OWORD *)(v234 + 8);
                *((_DWORD *)v233 + 6) = *((_DWORD *)v234 + 6);
                v233[28] = v234[28];
                *((_DWORD *)v233 + 8) = *((_DWORD *)v234 + 8);
                v233[36] = v234[36];
                v238 = *(int *)(v235 + 32);
                v239 = &v233[v238];
                v240 = &v234[v238];
                v241 = sub_23FB2D718();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v241 - 8) + 32))(v239, v240, v241);
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v233, 0, 1, v235);
                goto LABEL_99;
              }
            }
            else
            {
              if (!v237)
              {
                *(_DWORD *)v233 = *(_DWORD *)v234;
                v233[4] = v234[4];
                v285 = *((_QWORD *)v234 + 2);
                *((_QWORD *)v233 + 1) = *((_QWORD *)v234 + 1);
                *((_QWORD *)v233 + 2) = v285;
                swift_bridgeObjectRelease();
                *((_DWORD *)v233 + 6) = *((_DWORD *)v234 + 6);
                v233[28] = v234[28];
                *((_DWORD *)v233 + 8) = *((_DWORD *)v234 + 8);
                v233[36] = v234[36];
                v286 = *(int *)(v235 + 32);
                v287 = &v233[v286];
                v288 = &v234[v286];
                v289 = sub_23FB2D718();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v289 - 8) + 40))(v287, v288, v289);
LABEL_99:
                v243 = v176[20];
                v244 = v103 + v243;
                v245 = v104 + v243;
                *(_QWORD *)v244 = *(_QWORD *)v245;
                *(_BYTE *)(v244 + 8) = *(_BYTE *)(v245 + 8);
                v246 = v176[21];
                v247 = (_QWORD *)(v103 + v246);
                v248 = (uint64_t *)(v104 + v246);
                v250 = *v248;
                v249 = v248[1];
                *v247 = v250;
                v247[1] = v249;
                swift_bridgeObjectRelease();
                *(_BYTE *)(v103 + v176[22]) = *(_BYTE *)(v104 + v176[22]);
                *(_BYTE *)(v103 + v176[23]) = *(_BYTE *)(v104 + v176[23]);
                v251 = v176[24];
                v252 = (char *)(v103 + v251);
                v253 = (char *)(v104 + v251);
                v254 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
                v255 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v252, 1, v254);
                v256 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v253, 1, v254);
                if (v255)
                {
                  if (!v256)
                  {
                    *(_QWORD *)v252 = *(_QWORD *)v253;
                    *(_OWORD *)(v252 + 8) = *(_OWORD *)(v253 + 8);
                    *(_OWORD *)(v252 + 24) = *(_OWORD *)(v253 + 24);
                    *(_OWORD *)(v252 + 40) = *(_OWORD *)(v253 + 40);
                    *(_OWORD *)(v252 + 56) = *(_OWORD *)(v253 + 56);
                    *(_OWORD *)(v252 + 72) = *(_OWORD *)(v253 + 72);
                    v257 = *(int *)(v254 + 40);
                    v258 = &v252[v257];
                    v259 = &v253[v257];
                    v260 = sub_23FB2D718();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v260 - 8) + 32))(v258, v259, v260);
                    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v252, 0, 1, v254);
LABEL_105:
                    v3 = v307;
                    v262 = v176[25];
                    v263 = v103 + v262;
                    v264 = v104 + v262;
                    v265 = sub_23FB2D718();
                    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v265 - 8) + 40))(v263, v264, v265);
                    goto LABEL_106;
                  }
                }
                else
                {
                  if (!v256)
                  {
                    *(_QWORD *)v252 = *(_QWORD *)v253;
                    swift_bridgeObjectRelease();
                    v290 = *((_QWORD *)v253 + 2);
                    *((_QWORD *)v252 + 1) = *((_QWORD *)v253 + 1);
                    *((_QWORD *)v252 + 2) = v290;
                    swift_bridgeObjectRelease();
                    v291 = *((_QWORD *)v253 + 4);
                    *((_QWORD *)v252 + 3) = *((_QWORD *)v253 + 3);
                    *((_QWORD *)v252 + 4) = v291;
                    swift_bridgeObjectRelease();
                    v292 = *((_QWORD *)v253 + 6);
                    *((_QWORD *)v252 + 5) = *((_QWORD *)v253 + 5);
                    *((_QWORD *)v252 + 6) = v292;
                    swift_bridgeObjectRelease();
                    v293 = *((_QWORD *)v253 + 8);
                    *((_QWORD *)v252 + 7) = *((_QWORD *)v253 + 7);
                    *((_QWORD *)v252 + 8) = v293;
                    swift_bridgeObjectRelease();
                    v294 = *((_QWORD *)v253 + 10);
                    *((_QWORD *)v252 + 9) = *((_QWORD *)v253 + 9);
                    *((_QWORD *)v252 + 10) = v294;
                    swift_bridgeObjectRelease();
                    v295 = *(int *)(v254 + 40);
                    v296 = &v252[v295];
                    v297 = &v253[v295];
                    v298 = sub_23FB2D718();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v298 - 8) + 40))(v296, v297, v298);
                    goto LABEL_105;
                  }
                  sub_23F6D8A80((uint64_t)v252, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
                }
                v261 = sub_23F6916B8(&qword_256EA2D58);
                memcpy(v252, v253, *(_QWORD *)(*(_QWORD *)(v261 - 8) + 64));
                goto LABEL_105;
              }
              sub_23F6D8A80((uint64_t)v233, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
            }
            v242 = sub_23F6916B8(&qword_256EA2D68);
            memcpy(v233, v234, *(_QWORD *)(*(_QWORD *)(v242 - 8) + 64));
            goto LABEL_99;
          }
          sub_23F6DC470((uint64_t)v217);
        }
        *(_OWORD *)v217 = *(_OWORD *)v218;
        goto LABEL_93;
      }
      sub_23F6D8A80((uint64_t)v178, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
    }
    v215 = sub_23F6916B8(&qword_256EA2D78);
    memcpy(v178, v179, *(_QWORD *)(*(_QWORD *)(v215 - 8) + 64));
    goto LABEL_88;
  }
  if (v107)
  {
LABEL_52:
    v110 = sub_23F6916B8(&qword_256EA2CD8);
    memcpy((void *)v103, (const void *)v104, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
    goto LABEL_107;
  }
  v108 = type metadata accessor for ContextProtoStructuredContextKind(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v104, 1, v108))
  {
    v109 = sub_23F6916B8(&qword_256EA2D40);
    memcpy((void *)v103, (const void *)v104, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
  }
  else
  {
    v299 = v108;
    v306 = v3;
    v122 = *(_OWORD *)(v104 + 16);
    *(_OWORD *)v103 = *(_OWORD *)v104;
    *(_OWORD *)(v103 + 16) = v122;
    v123 = *(_OWORD *)(v104 + 48);
    *(_OWORD *)(v103 + 32) = *(_OWORD *)(v104 + 32);
    *(_OWORD *)(v103 + 48) = v123;
    *(_OWORD *)(v103 + 64) = *(_OWORD *)(v104 + 64);
    *(_DWORD *)(v103 + 80) = *(_DWORD *)(v104 + 80);
    *(_BYTE *)(v103 + 84) = *(_BYTE *)(v104 + 84);
    v124 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
    v125 = v124[15];
    v126 = (_WORD *)(v103 + v125);
    v127 = (_WORD *)(v104 + v125);
    v128 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v127, 1, v128))
    {
      v129 = sub_23F6916B8(&qword_256EA2D78);
      memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v126 = *(_OWORD *)v127;
      v126[8] = v127[8];
      v131 = *(int *)(v128 + 28);
      v132 = (char *)v126 + v131;
      v133 = (char *)v127 + v131;
      v134 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 32))(v132, v133, v134);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v126, 0, 1, v128);
    }
    *(_OWORD *)(v103 + v124[16]) = *(_OWORD *)(v104 + v124[16]);
    *(_OWORD *)(v103 + v124[17]) = *(_OWORD *)(v104 + v124[17]);
    *(_OWORD *)(v103 + v124[18]) = *(_OWORD *)(v104 + v124[18]);
    v135 = v124[19];
    v136 = (_DWORD *)(v103 + v135);
    v137 = (_DWORD *)(v104 + v135);
    v138 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v137, 1, v138))
    {
      v139 = sub_23F6916B8(&qword_256EA2D68);
      memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
    }
    else
    {
      *v136 = *v137;
      *((_BYTE *)v136 + 4) = *((_BYTE *)v137 + 4);
      *(_OWORD *)(v136 + 2) = *(_OWORD *)(v137 + 2);
      v136[6] = v137[6];
      *((_BYTE *)v136 + 28) = *((_BYTE *)v137 + 28);
      v136[8] = v137[8];
      *((_BYTE *)v136 + 36) = *((_BYTE *)v137 + 36);
      v140 = *(int *)(v138 + 32);
      v141 = (char *)v136 + v140;
      v142 = (char *)v137 + v140;
      v143 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v143 - 8) + 32))(v141, v142, v143);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v136, 0, 1, v138);
    }
    v144 = v124[20];
    v145 = v103 + v144;
    v146 = v104 + v144;
    *(_QWORD *)v145 = *(_QWORD *)v146;
    *(_BYTE *)(v145 + 8) = *(_BYTE *)(v146 + 8);
    *(_OWORD *)(v103 + v124[21]) = *(_OWORD *)(v104 + v124[21]);
    *(_BYTE *)(v103 + v124[22]) = *(_BYTE *)(v104 + v124[22]);
    *(_BYTE *)(v103 + v124[23]) = *(_BYTE *)(v104 + v124[23]);
    v147 = v124[24];
    v148 = (_QWORD *)(v103 + v147);
    v149 = (_QWORD *)(v104 + v147);
    v150 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v149, 1, v150))
    {
      v151 = sub_23F6916B8(&qword_256EA2D58);
      memcpy(v148, v149, *(_QWORD *)(*(_QWORD *)(v151 - 8) + 64));
    }
    else
    {
      *v148 = *v149;
      *(_OWORD *)(v148 + 1) = *(_OWORD *)(v149 + 1);
      *(_OWORD *)(v148 + 3) = *(_OWORD *)(v149 + 3);
      *(_OWORD *)(v148 + 5) = *(_OWORD *)(v149 + 5);
      *(_OWORD *)(v148 + 7) = *(_OWORD *)(v149 + 7);
      *(_OWORD *)(v148 + 9) = *(_OWORD *)(v149 + 9);
      v152 = *(int *)(v150 + 40);
      v153 = (char *)v148 + v152;
      v154 = (char *)v149 + v152;
      v155 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v155 - 8) + 32))(v153, v154, v155);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v148, 0, 1, v150);
    }
    v3 = v306;
    v156 = v124[25];
    v157 = v103 + v156;
    v158 = v104 + v156;
    v159 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v159 - 8) + 32))(v157, v158, v159);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v103, 0, 1, v299);
  }
  v160 = *(int *)(v105 + 20);
  v161 = v103 + v160;
  v162 = v104 + v160;
  v163 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v163 - 8) + 32))(v161, v162, v163);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v103, 0, 1, v105);
LABEL_107:
  v270 = v3[10];
  v271 = &a1[v270];
  v272 = (uint64_t *)&a2[v270];
  v274 = *v272;
  v273 = v272[1];
  *v271 = v274;
  v271[1] = v273;
  swift_bridgeObjectRelease();
  v275 = v3[11];
  v276 = &a1[v275];
  v277 = &a2[v275];
  v278 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v278 - 8) + 40))(v276, v277, v278);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoRetrievedContext()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F6DE2C0(uint64_t a1, uint64_t a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F6B6B7C();
  sub_23F6916B8(&qword_256EA2610);
  sub_23F6F07DC();
  if (v7)
  {
    sub_23F6F0B94();
  }
  else
  {
    sub_23F6916B8(&qword_256EA2CF8);
    sub_23F6F07DC();
    if (v7)
    {
      sub_23F6F0B08();
    }
    else
    {
      sub_23F6916B8(&qword_256EA2CE8);
      sub_23F6F07DC();
      if (v8)
      {
        sub_23F6F0AFC();
      }
      else
      {
        sub_23F6916B8(&qword_256EA2CD8);
        sub_23F6F07DC();
        if (v9)
        {
          v6 = a3[9];
        }
        else
        {
          if (v3 == 2147483646)
          {
            sub_23F6F0880(*(_QWORD *)(v4 + a3[10] + 8));
            sub_23F694C84();
            return;
          }
          sub_23F6B53A4();
          v6 = a3[11];
        }
      }
    }
  }
  v10 = sub_23F6F08CC(v6);
  sub_23F6F07D0(v10, v11, v12);
}

uint64_t storeEnumTagSinglePayload for ContextProtoRetrievedContext()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F6DE394(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_23F6B6B7C();
  sub_23F6916B8(&qword_256EA2610);
  sub_23F6F07EC();
  if (v9)
  {
    sub_23F6F0BC4();
  }
  else
  {
    sub_23F6916B8(&qword_256EA2CF8);
    sub_23F6F07EC();
    if (v9)
    {
      sub_23F6F0BD0();
    }
    else
    {
      sub_23F6916B8(&qword_256EA2CE8);
      sub_23F6F07EC();
      if (v10)
      {
        sub_23F6F0BB8();
      }
      else
      {
        sub_23F6916B8(&qword_256EA2CD8);
        sub_23F6F07EC();
        if (v11)
        {
          v8 = a4[9];
        }
        else
        {
          if (a3 == 2147483646)
          {
            *(_QWORD *)(v5 + a4[10] + 8) = v4;
            sub_23F694C84();
            return;
          }
          sub_23F6B53A4();
          v8 = a4[11];
        }
      }
    }
  }
  v12 = sub_23F6F082C(v8);
  sub_23F6F07C4(v12, v13, v14, v15);
}

void sub_23F6DE460()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_23F6DE58C(319, &qword_256EA33B0, (void (*)(uint64_t))MEMORY[0x24BEB95B0]);
  if (v0 <= 0x3F)
  {
    sub_23F6DE58C(319, &qword_256EA33B8, (void (*)(uint64_t))type metadata accessor for ContextProtoConfidence);
    if (v1 <= 0x3F)
    {
      sub_23F6DE58C(319, &qword_256EA33C0, (void (*)(uint64_t))type metadata accessor for ContextProtoContextMetadata);
      if (v2 <= 0x3F)
      {
        sub_23F6DE58C(319, qword_256EA33C8, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContext);
        if (v3 <= 0x3F)
        {
          sub_23FB2D718();
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_23F6DE58C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_23FB2F65C();
    if (!v5)
      atomic_store(v4, a2);
  }
  sub_23F694CC8();
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoContextMetadata(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _DWORD *v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    v9 = a2[4];
    a1[3] = a2[3];
    a1[4] = v9;
    v10 = a3[7];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for ContextProtoConfidence(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13))
    {
      v14 = sub_23F6916B8(&qword_256EA2CF8);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v11 = *(_DWORD *)v12;
      v11[4] = v12[4];
      v15 = *(int *)(v13 + 24);
      v16 = &v11[v15];
      v17 = &v12[v15];
      v18 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v11, 0, 1, v13);
    }
    v19 = a3[8];
    v20 = (_DWORD *)((char *)v7 + v19);
    v21 = (_DWORD *)((char *)a2 + v19);
    v22 = type metadata accessor for ContextProtoBoundingBox(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v21, 1, v22))
    {
      v23 = sub_23F6916B8(&qword_256EA2800);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      *v20 = *v21;
      *((_BYTE *)v20 + 4) = *((_BYTE *)v21 + 4);
      v20[2] = v21[2];
      *((_BYTE *)v20 + 12) = *((_BYTE *)v21 + 12);
      v20[4] = v21[4];
      *((_BYTE *)v20 + 20) = *((_BYTE *)v21 + 20);
      *((_BYTE *)v20 + 28) = *((_BYTE *)v21 + 28);
      v20[6] = v21[6];
      v24 = *(int *)(v22 + 32);
      v25 = (char *)v20 + v24;
      v26 = (char *)v21 + v24;
      v27 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v20, 0, 1, v22);
    }
    v28 = a3[9];
    v29 = a3[10];
    v30 = (char *)v7 + v28;
    v31 = (char *)a2 + v28;
    *(_QWORD *)v30 = *(_QWORD *)v31;
    v30[8] = v31[8];
    v32 = (uint64_t *)((char *)v7 + v29);
    v33 = (uint64_t *)((char *)a2 + v29);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    v35 = a3[11];
    v36 = (char *)v7 + v35;
    v37 = (char *)a2 + v35;
    v38 = sub_23FB2D718();
    v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
    swift_bridgeObjectRetain();
    v39(v36, v37, v38);
  }
  return v7;
}

uint64_t destroy for ContextProtoContextMetadata(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[7];
  v5 = type metadata accessor for ContextProtoConfidence(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
  {
    v6 = v4 + *(int *)(v5 + 24);
    v7 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + a2[8];
  v9 = type metadata accessor for ContextProtoBoundingBox(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v9))
  {
    v10 = v8 + *(int *)(v9 + 32);
    v11 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  swift_bridgeObjectRelease();
  v12 = a1 + a2[11];
  v13 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
}

_QWORD *initializeWithCopy for ContextProtoContextMetadata(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _DWORD *v18;
  _DWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  a1[4] = a2[4];
  v8 = a3[7];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for ContextProtoConfidence(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F6916B8(&qword_256EA2CF8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v9 = *(_DWORD *)v10;
    v9[4] = v10[4];
    v13 = *(int *)(v11 + 24);
    v14 = &v9[v13];
    v15 = &v10[v13];
    v16 = sub_23FB2D718();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
  }
  v17 = a3[8];
  v18 = (_DWORD *)((char *)a1 + v17);
  v19 = (_DWORD *)((char *)a2 + v17);
  v20 = type metadata accessor for ContextProtoBoundingBox(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, v20))
  {
    v21 = sub_23F6916B8(&qword_256EA2800);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    *v18 = *v19;
    *((_BYTE *)v18 + 4) = *((_BYTE *)v19 + 4);
    v18[2] = v19[2];
    *((_BYTE *)v18 + 12) = *((_BYTE *)v19 + 12);
    v18[4] = v19[4];
    *((_BYTE *)v18 + 20) = *((_BYTE *)v19 + 20);
    *((_BYTE *)v18 + 28) = *((_BYTE *)v19 + 28);
    v18[6] = v19[6];
    v22 = *(int *)(v20 + 32);
    v23 = (char *)v18 + v22;
    v24 = (char *)v19 + v22;
    v25 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v18, 0, 1, v20);
  }
  v26 = a3[9];
  v27 = a3[10];
  v28 = (char *)a1 + v26;
  v29 = (char *)a2 + v26;
  *(_QWORD *)v28 = *(_QWORD *)v29;
  v28[8] = v29[8];
  v30 = (_QWORD *)((char *)a1 + v27);
  v31 = (_QWORD *)((char *)a2 + v27);
  v32 = v31[1];
  *v30 = *v31;
  v30[1] = v32;
  v33 = a3[11];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = sub_23FB2D718();
  v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
  swift_bridgeObjectRetain();
  v37(v34, v35, v36);
  return a1;
}

_QWORD *assignWithCopy for ContextProtoContextMetadata(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  int v48;
  int v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[7];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ContextProtoConfidence(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      v7[4] = v8[4];
      v12 = *(int *)(v9 + 24);
      v13 = &v7[v12];
      v14 = &v8[v12];
      v15 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_23F6D8A80((uint64_t)v7, type metadata accessor for ContextProtoConfidence);
LABEL_6:
    v16 = sub_23F6916B8(&qword_256EA2CF8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  v7[4] = v8[4];
  v44 = *(int *)(v9 + 24);
  v45 = &v7[v44];
  v46 = &v8[v44];
  v47 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v47 - 8) + 24))(v45, v46, v47);
LABEL_7:
  v17 = a3[8];
  v18 = (uint64_t)a1 + v17;
  v19 = (uint64_t)a2 + v17;
  v20 = type metadata accessor for ContextProtoBoundingBox(0);
  v21 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v18, 1, v20);
  v22 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v19, 1, v20);
  if (!v21)
  {
    if (!v22)
    {
      v48 = *(_DWORD *)v19;
      *(_BYTE *)(v18 + 4) = *(_BYTE *)(v19 + 4);
      *(_DWORD *)v18 = v48;
      v49 = *(_DWORD *)(v19 + 8);
      *(_BYTE *)(v18 + 12) = *(_BYTE *)(v19 + 12);
      *(_DWORD *)(v18 + 8) = v49;
      v50 = *(_DWORD *)(v19 + 16);
      *(_BYTE *)(v18 + 20) = *(_BYTE *)(v19 + 20);
      *(_DWORD *)(v18 + 16) = v50;
      v51 = *(_DWORD *)(v19 + 24);
      *(_BYTE *)(v18 + 28) = *(_BYTE *)(v19 + 28);
      *(_DWORD *)(v18 + 24) = v51;
      v52 = *(int *)(v20 + 32);
      v53 = v18 + v52;
      v54 = v19 + v52;
      v55 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 24))(v53, v54, v55);
      goto LABEL_13;
    }
    sub_23F6D8A80(v18, type metadata accessor for ContextProtoBoundingBox);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    v31 = sub_23F6916B8(&qword_256EA2800);
    memcpy((void *)v18, (const void *)v19, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  v23 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = *(_BYTE *)(v19 + 4);
  *(_DWORD *)v18 = v23;
  v24 = *(_DWORD *)(v19 + 8);
  *(_BYTE *)(v18 + 12) = *(_BYTE *)(v19 + 12);
  *(_DWORD *)(v18 + 8) = v24;
  v25 = *(_DWORD *)(v19 + 16);
  *(_BYTE *)(v18 + 20) = *(_BYTE *)(v19 + 20);
  *(_DWORD *)(v18 + 16) = v25;
  v26 = *(_DWORD *)(v19 + 24);
  *(_BYTE *)(v18 + 28) = *(_BYTE *)(v19 + 28);
  *(_DWORD *)(v18 + 24) = v26;
  v27 = *(int *)(v20 + 32);
  v28 = v18 + v27;
  v29 = v19 + v27;
  v30 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v18, 0, 1, v20);
LABEL_13:
  v32 = a3[9];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = *(_QWORD *)v34;
  v33[8] = v34[8];
  *(_QWORD *)v33 = v35;
  v36 = a3[10];
  v37 = (_QWORD *)((char *)a1 + v36);
  v38 = (_QWORD *)((char *)a2 + v36);
  *v37 = *v38;
  v37[1] = v38[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39 = a3[11];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  v42 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  return a1;
}

uint64_t initializeWithTake for ContextProtoContextMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _DWORD *v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = a3[7];
  v7 = (_BYTE *)(a1 + v6);
  v8 = (_BYTE *)(a2 + v6);
  v9 = type metadata accessor for ContextProtoConfidence(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA2CF8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v7 = *(_DWORD *)v8;
    v7[4] = v8[4];
    v11 = *(int *)(v9 + 24);
    v12 = &v7[v11];
    v13 = &v8[v11];
    v14 = sub_23FB2D718();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v15 = a3[8];
  v16 = (_DWORD *)(a1 + v15);
  v17 = (_DWORD *)(a2 + v15);
  v18 = type metadata accessor for ContextProtoBoundingBox(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v18))
  {
    v19 = sub_23F6916B8(&qword_256EA2800);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    *v16 = *v17;
    *((_BYTE *)v16 + 4) = *((_BYTE *)v17 + 4);
    v16[2] = v17[2];
    *((_BYTE *)v16 + 12) = *((_BYTE *)v17 + 12);
    v16[4] = v17[4];
    *((_BYTE *)v16 + 20) = *((_BYTE *)v17 + 20);
    *((_BYTE *)v16 + 28) = *((_BYTE *)v17 + 28);
    v16[6] = v17[6];
    v20 = *(int *)(v18 + 32);
    v21 = (char *)v16 + v20;
    v22 = (char *)v17 + v20;
    v23 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v18);
  }
  v24 = a3[9];
  v25 = a3[10];
  v26 = a1 + v24;
  v27 = a2 + v24;
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v28 = *(_OWORD *)(a2 + v25);
  *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
  *(_OWORD *)(a1 + v25) = v28;
  v29 = a3[11];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
  return a1;
}

_QWORD *assignWithTake for ContextProtoContextMetadata(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[4];
  a1[3] = a2[3];
  a1[4] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[7];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for ContextProtoConfidence(0);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v11);
  v13 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11);
  if (v12)
  {
    if (!v13)
    {
      *(_DWORD *)v9 = *(_DWORD *)v10;
      v9[4] = v10[4];
      v14 = *(int *)(v11 + 24);
      v15 = &v9[v14];
      v16 = &v10[v14];
      v17 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_23F6D8A80((uint64_t)v9, type metadata accessor for ContextProtoConfidence);
LABEL_6:
    v18 = sub_23F6916B8(&qword_256EA2CF8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v9 = *(_DWORD *)v10;
  v9[4] = v10[4];
  v43 = *(int *)(v11 + 24);
  v44 = &v9[v43];
  v45 = &v10[v43];
  v46 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
LABEL_7:
  v19 = a3[8];
  v20 = (uint64_t)a1 + v19;
  v21 = (uint64_t)a2 + v19;
  v22 = type metadata accessor for ContextProtoBoundingBox(0);
  v23 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v20, 1, v22);
  v24 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v21, 1, v22);
  if (!v23)
  {
    if (!v24)
    {
      *(_DWORD *)v20 = *(_DWORD *)v21;
      *(_BYTE *)(v20 + 4) = *(_BYTE *)(v21 + 4);
      *(_DWORD *)(v20 + 8) = *(_DWORD *)(v21 + 8);
      *(_BYTE *)(v20 + 12) = *(_BYTE *)(v21 + 12);
      *(_DWORD *)(v20 + 16) = *(_DWORD *)(v21 + 16);
      *(_BYTE *)(v20 + 20) = *(_BYTE *)(v21 + 20);
      *(_BYTE *)(v20 + 28) = *(_BYTE *)(v21 + 28);
      *(_DWORD *)(v20 + 24) = *(_DWORD *)(v21 + 24);
      v47 = *(int *)(v22 + 32);
      v48 = v20 + v47;
      v49 = v21 + v47;
      v50 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
      goto LABEL_13;
    }
    sub_23F6D8A80(v20, type metadata accessor for ContextProtoBoundingBox);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    v29 = sub_23F6916B8(&qword_256EA2800);
    memcpy((void *)v20, (const void *)v21, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = *(_BYTE *)(v21 + 4);
  *(_DWORD *)(v20 + 8) = *(_DWORD *)(v21 + 8);
  *(_BYTE *)(v20 + 12) = *(_BYTE *)(v21 + 12);
  *(_DWORD *)(v20 + 16) = *(_DWORD *)(v21 + 16);
  *(_BYTE *)(v20 + 20) = *(_BYTE *)(v21 + 20);
  *(_BYTE *)(v20 + 28) = *(_BYTE *)(v21 + 28);
  *(_DWORD *)(v20 + 24) = *(_DWORD *)(v21 + 24);
  v25 = *(int *)(v22 + 32);
  v26 = v20 + v25;
  v27 = v21 + v25;
  v28 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v20, 0, 1, v22);
LABEL_13:
  v30 = a3[9];
  v31 = a3[10];
  v32 = (char *)a1 + v30;
  v33 = (char *)a2 + v30;
  *(_QWORD *)v32 = *(_QWORD *)v33;
  v32[8] = v33[8];
  v34 = (_QWORD *)((char *)a1 + v31);
  v35 = (_QWORD *)((char *)a2 + v31);
  v37 = *v35;
  v36 = v35[1];
  *v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  v38 = a3[11];
  v39 = (char *)a1 + v38;
  v40 = (char *)a2 + v38;
  v41 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 40))(v39, v40, v41);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoContextMetadata()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F6DF48C()
{
  unint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F6F08A0();
  if (v2)
  {
    sub_23F6F083C(*v0);
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A1C();
    sub_23F6916B8(&qword_256EA2CF8);
    sub_23F6F07DC();
    if (v2)
    {
      sub_23F6F0AFC();
    }
    else
    {
      sub_23F6916B8(&qword_256EA2800);
      sub_23F6F07DC();
      if (v4)
      {
        v3 = *(int *)(v1 + 32);
      }
      else
      {
        sub_23F6B53A4();
        v3 = *(int *)(v1 + 44);
      }
    }
    v5 = sub_23F6F08CC(v3);
    sub_23F6F07D0(v5, v6, v7);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoContextMetadata()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F6DF518()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F6F0850();
  if (v1)
  {
    sub_23F6F0B28();
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A10();
    sub_23F6916B8(&qword_256EA2CF8);
    sub_23F6F07EC();
    if (v1)
    {
      sub_23F6F0BB8();
    }
    else
    {
      sub_23F6916B8(&qword_256EA2800);
      sub_23F6F07EC();
      if (v3)
      {
        v2 = *(int *)(v0 + 32);
      }
      else
      {
        sub_23F6B53A4();
        v2 = *(int *)(v0 + 44);
      }
    }
    v4 = sub_23F6F082C(v2);
    sub_23F6F07C4(v4, v5, v6, v7);
  }
}

void sub_23F6DF594()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23F6DE58C(319, &qword_256EA33B8, (void (*)(uint64_t))type metadata accessor for ContextProtoConfidence);
  if (v0 <= 0x3F)
  {
    sub_23F6DE58C(319, qword_256EA3478, (void (*)(uint64_t))type metadata accessor for ContextProtoBoundingBox);
    if (v1 <= 0x3F)
    {
      sub_23FB2D718();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ContextProtoBoundingBox(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    *(_BYTE *)(a1 + 12) = *((_BYTE *)a2 + 12);
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    *(_BYTE *)(a1 + 20) = *((_BYTE *)a2 + 20);
    *(_BYTE *)(a1 + 28) = *((_BYTE *)a2 + 28);
    v5 = *(int *)(a3 + 32);
    v6 = (uint64_t)a2 + v5;
    v7 = a1 + v5;
    *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
    v8 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v7, v6, v8);
  }
  return v3;
}

uint64_t destroy for ContextProtoBoundingBox(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 32);
  v3 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t initializeWithCopy for ContextProtoBoundingBox(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  v4 = *(int *)(a3 + 32);
  v5 = a2 + v4;
  v6 = a1 + v4;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v7 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v6, v5, v7);
  return a1;
}

uint64_t assignWithCopy for ContextProtoBoundingBox(uint64_t a1, int *a2, uint64_t a3)
{
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a2;
  *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)a1 = v4;
  v5 = a2[2];
  *(_BYTE *)(a1 + 12) = *((_BYTE *)a2 + 12);
  *(_DWORD *)(a1 + 8) = v5;
  v6 = a2[4];
  *(_BYTE *)(a1 + 20) = *((_BYTE *)a2 + 20);
  *(_DWORD *)(a1 + 16) = v6;
  v7 = a2[6];
  *(_BYTE *)(a1 + 28) = *((_BYTE *)a2 + 28);
  *(_DWORD *)(a1 + 24) = v7;
  v8 = *(int *)(a3 + 32);
  v9 = a1 + v8;
  v10 = (uint64_t)a2 + v8;
  v11 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

uint64_t initializeWithTake for ContextProtoBoundingBox(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  v4 = *(int *)(a3 + 32);
  v5 = a2 + v4;
  v6 = a1 + v4;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v7 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v6, v5, v7);
  return a1;
}

uint64_t assignWithTake for ContextProtoBoundingBox(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  v4 = *(int *)(a3 + 32);
  v5 = a2 + v4;
  v6 = a1 + v4;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v7 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v6, v5, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoBoundingBox()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F6DF9D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 32);
  v5 = sub_23F6B53A4();
  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for ContextProtoBoundingBox()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F6DFA10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F6B53A4();
  sub_23F6F08B0();
  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v0, v1, v2, v3);
}

uint64_t sub_23F6DFA44()
{
  return sub_23F6E6AD8();
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoSurroundingText(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _DWORD *v9;
  _DWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (_DWORD *)((char *)a1 + v8);
    v10 = (_DWORD *)((char *)a2 + v8);
    v11 = type metadata accessor for ContextProtoBoundingBox(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA2800);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      *v9 = *v10;
      *((_BYTE *)v9 + 4) = *((_BYTE *)v10 + 4);
      v9[2] = v10[2];
      *((_BYTE *)v9 + 12) = *((_BYTE *)v10 + 12);
      v9[4] = v10[4];
      *((_BYTE *)v9 + 20) = *((_BYTE *)v10 + 20);
      *((_BYTE *)v9 + 28) = *((_BYTE *)v10 + 28);
      v9[6] = v10[6];
      v14 = *(int *)(v11 + 32);
      v15 = (char *)v9 + v14;
      v16 = (char *)v10 + v14;
      v17 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v18 = *(int *)(a3 + 24);
    v19 = (char *)v4 + v18;
    v20 = (char *)a2 + v18;
    v21 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  }
  return v4;
}

uint64_t destroy for ContextProtoSurroundingText(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for ContextProtoBoundingBox(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
  {
    v6 = v4 + *(int *)(v5 + 32);
    v7 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + *(int *)(a2 + 24);
  v9 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *initializeWithCopy for ContextProtoSurroundingText(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _DWORD *v8;
  _DWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (_DWORD *)((char *)a1 + v7);
  v9 = (_DWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for ContextProtoBoundingBox(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F6916B8(&qword_256EA2800);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v8 = *v9;
    *((_BYTE *)v8 + 4) = *((_BYTE *)v9 + 4);
    v8[2] = v9[2];
    *((_BYTE *)v8 + 12) = *((_BYTE *)v9 + 12);
    v8[4] = v9[4];
    *((_BYTE *)v8 + 20) = *((_BYTE *)v9 + 20);
    *((_BYTE *)v8 + 28) = *((_BYTE *)v9 + 28);
    v8[6] = v9[6];
    v12 = *(int *)(v10 + 32);
    v13 = (char *)v8 + v12;
    v14 = (char *)v9 + v12;
    v15 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v16 = *(int *)(a3 + 24);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

_QWORD *assignWithCopy for ContextProtoSurroundingText(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  int v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (uint64_t)a1 + v6;
  v8 = (uint64_t)a2 + v6;
  v9 = type metadata accessor for ContextProtoBoundingBox(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      v26 = *(_DWORD *)v8;
      *(_BYTE *)(v7 + 4) = *(_BYTE *)(v8 + 4);
      *(_DWORD *)v7 = v26;
      v27 = *(_DWORD *)(v8 + 8);
      *(_BYTE *)(v7 + 12) = *(_BYTE *)(v8 + 12);
      *(_DWORD *)(v7 + 8) = v27;
      v28 = *(_DWORD *)(v8 + 16);
      *(_BYTE *)(v7 + 20) = *(_BYTE *)(v8 + 20);
      *(_DWORD *)(v7 + 16) = v28;
      v29 = *(_DWORD *)(v8 + 24);
      *(_BYTE *)(v7 + 28) = *(_BYTE *)(v8 + 28);
      *(_DWORD *)(v7 + 24) = v29;
      v30 = *(int *)(v9 + 32);
      v31 = v7 + v30;
      v32 = v8 + v30;
      v33 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v31, v32, v33);
      goto LABEL_7;
    }
    sub_23F6D8A80(v7, type metadata accessor for ContextProtoBoundingBox);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v20 = sub_23F6916B8(&qword_256EA2800);
    memcpy((void *)v7, (const void *)v8, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  v12 = *(_DWORD *)v8;
  *(_BYTE *)(v7 + 4) = *(_BYTE *)(v8 + 4);
  *(_DWORD *)v7 = v12;
  v13 = *(_DWORD *)(v8 + 8);
  *(_BYTE *)(v7 + 12) = *(_BYTE *)(v8 + 12);
  *(_DWORD *)(v7 + 8) = v13;
  v14 = *(_DWORD *)(v8 + 16);
  *(_BYTE *)(v7 + 20) = *(_BYTE *)(v8 + 20);
  *(_DWORD *)(v7 + 16) = v14;
  v15 = *(_DWORD *)(v8 + 24);
  *(_BYTE *)(v7 + 28) = *(_BYTE *)(v8 + 28);
  *(_DWORD *)(v7 + 24) = v15;
  v16 = *(int *)(v9 + 32);
  v17 = v7 + v16;
  v18 = v8 + v16;
  v19 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v7, 0, 1, v9);
LABEL_7:
  v21 = *(int *)(a3 + 24);
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  return a1;
}

_OWORD *initializeWithTake for ContextProtoSurroundingText(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_DWORD *)((char *)a1 + v6);
  v8 = (_DWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for ContextProtoBoundingBox(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA2800);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    *((_BYTE *)v7 + 4) = *((_BYTE *)v8 + 4);
    v7[2] = v8[2];
    *((_BYTE *)v7 + 12) = *((_BYTE *)v8 + 12);
    v7[4] = v8[4];
    *((_BYTE *)v7 + 20) = *((_BYTE *)v8 + 20);
    *((_BYTE *)v7 + 28) = *((_BYTE *)v8 + 28);
    v7[6] = v8[6];
    v11 = *(int *)(v9 + 32);
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v15 = *(int *)(a3 + 24);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

_QWORD *assignWithTake for ContextProtoSurroundingText(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t)a1 + v7;
  v9 = (uint64_t)a2 + v7;
  v10 = type metadata accessor for ContextProtoBoundingBox(0);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v10);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v9, 1, v10);
  if (!v11)
  {
    if (!v12)
    {
      *(_DWORD *)v8 = *(_DWORD *)v9;
      *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
      *(_DWORD *)(v8 + 8) = *(_DWORD *)(v9 + 8);
      *(_BYTE *)(v8 + 12) = *(_BYTE *)(v9 + 12);
      *(_DWORD *)(v8 + 16) = *(_DWORD *)(v9 + 16);
      *(_BYTE *)(v8 + 20) = *(_BYTE *)(v9 + 20);
      *(_BYTE *)(v8 + 28) = *(_BYTE *)(v9 + 28);
      *(_DWORD *)(v8 + 24) = *(_DWORD *)(v9 + 24);
      v23 = *(int *)(v10 + 32);
      v24 = v8 + v23;
      v25 = v9 + v23;
      v26 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
      goto LABEL_7;
    }
    sub_23F6D8A80(v8, type metadata accessor for ContextProtoBoundingBox);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v17 = sub_23F6916B8(&qword_256EA2800);
    memcpy((void *)v8, (const void *)v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  *(_DWORD *)(v8 + 8) = *(_DWORD *)(v9 + 8);
  *(_BYTE *)(v8 + 12) = *(_BYTE *)(v9 + 12);
  *(_DWORD *)(v8 + 16) = *(_DWORD *)(v9 + 16);
  *(_BYTE *)(v8 + 20) = *(_BYTE *)(v9 + 20);
  *(_BYTE *)(v8 + 28) = *(_BYTE *)(v9 + 28);
  *(_DWORD *)(v8 + 24) = *(_DWORD *)(v9 + 24);
  v13 = *(int *)(v10 + 32);
  v14 = v8 + v13;
  v15 = v9 + v13;
  v16 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v8, 0, 1, v10);
LABEL_7:
  v18 = *(int *)(a3 + 24);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoSurroundingText()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F6E02E0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6F0AC8();
  if (v1)
  {
    sub_23F6F0880(*(_QWORD *)(v0 + 8));
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A1C();
    sub_23F6916B8(&qword_256EA2800);
    sub_23F6F07DC();
    if (v1)
    {
      sub_23F6F0B94();
    }
    else
    {
      sub_23F6B53A4();
      sub_23F6F0B08();
    }
    v3 = sub_23F6F08CC(v2);
    sub_23F6F07D0(v3, v4, v5);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoSurroundingText()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F6E0348()
{
  unsigned int v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F6F09B0();
  if (v2)
  {
    *(_QWORD *)(v1 + 8) = v0;
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A10();
    sub_23F6916B8(&qword_256EA2800);
    sub_23F6F07EC();
    if (v2)
    {
      sub_23F6F0BC4();
    }
    else
    {
      sub_23F6B53A4();
      sub_23F6F0BD0();
    }
    v4 = sub_23F6F082C(v3);
    sub_23F6F07C4(v4, v5, v6, v7);
  }
}

void sub_23F6E03A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F6EE740(a1, a2, a3, (uint64_t)&unk_23FB4FE58, qword_256EA3478, (void (*)(uint64_t))type metadata accessor for ContextProtoBoundingBox);
}

_QWORD *initializeBufferWithCopyOfBuffer for ContextProtoConfidence(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
    v5 = *(int *)(a3 + 24);
    v6 = a1 + v5;
    v7 = (uint64_t)a2 + v5;
    v8 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for ContextProtoConfidence(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 24);
  v3 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t initializeWithCopy for ContextProtoConfidence(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for ContextProtoConfidence(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t initializeWithTake for ContextProtoConfidence(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for ContextProtoConfidence(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoConfidence()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F6E0624(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a2 == 253)
  {
    sub_23F694C84();
  }
  else
  {
    sub_23F6B53A4();
    v4 = sub_23F6F08CC(*(int *)(a3 + 24));
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoConfidence()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F6E0684()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F6B6B7C();
  if (v3 == 253)
  {
    *(_BYTE *)(v1 + 4) = v0 + 2;
    sub_23F694C84();
  }
  else
  {
    v4 = v2;
    sub_23F6B53A4();
    v5 = sub_23F6F082C(*(int *)(v4 + 24));
    sub_23F6F07C4(v5, v6, v7, v8);
  }
}

void sub_23F6E06CC()
{
  sub_23F6ECB8C();
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoStructuredContext(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  int *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _DWORD *v41;
  _DWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  void (*v79)(char *, char *, uint64_t);
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  int *v84;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = type metadata accessor for ContextProtoStructuredContextKind(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EA2D40);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v82 = v7;
      v83 = v6;
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      v11 = a2[3];
      a1[2] = a2[2];
      a1[3] = v11;
      v12 = a2[5];
      a1[4] = a2[4];
      a1[5] = v12;
      v13 = a2[7];
      a1[6] = a2[6];
      a1[7] = v13;
      v14 = a2[9];
      a1[8] = a2[8];
      a1[9] = v14;
      *((_DWORD *)a1 + 20) = *((_DWORD *)a2 + 20);
      *((_BYTE *)a1 + 84) = *((_BYTE *)a2 + 84);
      v84 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
      v15 = v84[15];
      v16 = (uint64_t *)((char *)a1 + v15);
      v17 = (uint64_t *)((char *)a2 + v15);
      v18 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v18))
      {
        v19 = sub_23F6916B8(&qword_256EA2D78);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        v20 = v17[1];
        *v16 = *v17;
        v16[1] = v20;
        *((_WORD *)v16 + 8) = *((_WORD *)v17 + 8);
        v21 = *(int *)(v18 + 28);
        v22 = (char *)v16 + v21;
        v23 = (char *)v17 + v21;
        v24 = sub_23FB2D718();
        v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        v25(v22, v23, v24);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v18);
      }
      v26 = v84;
      v27 = v84[16];
      v28 = (char *)a1 + v27;
      v29 = (char *)a2 + v27;
      v30 = *((_QWORD *)v29 + 1);
      if (v30 >> 60 == 15)
      {
        *(_OWORD *)v28 = *(_OWORD *)v29;
      }
      else
      {
        v31 = *(_QWORD *)v29;
        sub_23F6D1E20(*(_QWORD *)v29, *((_QWORD *)v29 + 1));
        *(_QWORD *)v28 = v31;
        *((_QWORD *)v28 + 1) = v30;
      }
      v32 = v84[17];
      v33 = (uint64_t *)((char *)a1 + v32);
      v34 = (uint64_t *)((char *)a2 + v32);
      v35 = v34[1];
      *v33 = *v34;
      v33[1] = v35;
      v36 = v84[18];
      v37 = (uint64_t *)((char *)a1 + v36);
      v38 = (uint64_t *)((char *)a2 + v36);
      v39 = v38[1];
      *v37 = *v38;
      v37[1] = v39;
      v40 = v84[19];
      v41 = (_DWORD *)((char *)a1 + v40);
      v42 = (_DWORD *)((char *)a2 + v40);
      v43 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v42, 1, v43))
      {
        v44 = sub_23F6916B8(&qword_256EA2D68);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        *v41 = *v42;
        *((_BYTE *)v41 + 4) = *((_BYTE *)v42 + 4);
        v45 = *((_QWORD *)v42 + 2);
        *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
        *((_QWORD *)v41 + 2) = v45;
        v41[6] = v42[6];
        *((_BYTE *)v41 + 28) = *((_BYTE *)v42 + 28);
        v41[8] = v42[8];
        *((_BYTE *)v41 + 36) = *((_BYTE *)v42 + 36);
        v46 = *(int *)(v43 + 32);
        v47 = (char *)v41 + v46;
        v48 = (char *)v42 + v46;
        v49 = sub_23FB2D718();
        v50 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16);
        swift_bridgeObjectRetain();
        v50(v47, v48, v49);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v41, 0, 1, v43);
      }
      v51 = v84[20];
      v52 = (char *)a1 + v51;
      v53 = (char *)a2 + v51;
      *(_QWORD *)v52 = *(_QWORD *)v53;
      v52[8] = v53[8];
      v54 = v84[21];
      v55 = (uint64_t *)((char *)a1 + v54);
      v56 = (uint64_t *)((char *)a2 + v54);
      v57 = v56[1];
      *v55 = *v56;
      v55[1] = v57;
      *((_BYTE *)a1 + v84[22]) = *((_BYTE *)a2 + v84[22]);
      *((_BYTE *)a1 + v84[23]) = *((_BYTE *)a2 + v84[23]);
      v58 = v84[24];
      v59 = (uint64_t *)((char *)a1 + v58);
      v60 = (uint64_t *)((char *)a2 + v58);
      v61 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v60, 1, v61))
      {
        v62 = sub_23F6916B8(&qword_256EA2D58);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        v63 = v60[1];
        *v59 = *v60;
        v59[1] = v63;
        v64 = v60[3];
        v59[2] = v60[2];
        v59[3] = v64;
        v65 = v60[5];
        v59[4] = v60[4];
        v59[5] = v65;
        v66 = v60[7];
        v59[6] = v60[6];
        v59[7] = v66;
        v67 = v60[9];
        v59[8] = v60[8];
        v59[9] = v67;
        v59[10] = v60[10];
        v68 = *(int *)(v61 + 40);
        v80 = (char *)v60 + v68;
        v81 = (char *)v59 + v68;
        v69 = sub_23FB2D718();
        v79 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v26 = v84;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v79(v81, v80, v69);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v59, 0, 1, v61);
      }
      v70 = v26[25];
      v71 = (char *)a1 + v70;
      v72 = (char *)a2 + v70;
      v73 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v71, v72, v73);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v82);
      v6 = v83;
    }
    v74 = *(int *)(v6 + 20);
    v75 = (char *)a1 + v74;
    v76 = (char *)a2 + v74;
    v77 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 16))(v75, v76, v77);
  }
  return a1;
}

uint64_t destroy for ContextProtoStructuredContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = type metadata accessor for ContextProtoStructuredContextKind(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
    v6 = a1 + v5[15];
    v7 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v6, 1, v7))
    {
      swift_bridgeObjectRelease();
      v8 = v6 + *(int *)(v7 + 28);
      v9 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    }
    v10 = (uint64_t *)(a1 + v5[16]);
    v11 = v10[1];
    if (v11 >> 60 != 15)
      sub_23F6BC34C(*v10, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12 = a1 + v5[19];
    v13 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v12, 1, v13))
    {
      swift_bridgeObjectRelease();
      v14 = v12 + *(int *)(v13 + 32);
      v15 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
    }
    swift_bridgeObjectRelease();
    v16 = a1 + v5[24];
    v17 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v16, 1, v17))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = v16 + *(int *)(v17 + 40);
      v19 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
    }
    v20 = a1 + v5[25];
    v21 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
  }
  v22 = a1 + *(int *)(a2 + 20);
  v23 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
}

_QWORD *initializeWithCopy for ContextProtoStructuredContext(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _DWORD *v39;
  _DWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  void (*v77)(char *, char *, uint64_t);
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  int *v82;

  v6 = type metadata accessor for ContextProtoStructuredContextKind(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA2D40);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v80 = v6;
    v81 = a3;
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    v10 = a2[5];
    a1[4] = a2[4];
    a1[5] = v10;
    v11 = a2[7];
    a1[6] = a2[6];
    a1[7] = v11;
    v12 = a2[9];
    a1[8] = a2[8];
    a1[9] = v12;
    *((_DWORD *)a1 + 20) = *((_DWORD *)a2 + 20);
    *((_BYTE *)a1 + 84) = *((_BYTE *)a2 + 84);
    v82 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
    v13 = v82[15];
    v14 = (_QWORD *)((char *)a1 + v13);
    v15 = (_QWORD *)((char *)a2 + v13);
    v16 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, v16))
    {
      v17 = sub_23F6916B8(&qword_256EA2D78);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v18 = v15[1];
      *v14 = *v15;
      v14[1] = v18;
      *((_WORD *)v14 + 8) = *((_WORD *)v15 + 8);
      v19 = *(int *)(v16 + 28);
      v20 = (char *)v14 + v19;
      v21 = (char *)v15 + v19;
      v22 = sub_23FB2D718();
      v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
      swift_bridgeObjectRetain();
      v23(v20, v21, v22);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v14, 0, 1, v16);
    }
    v24 = v82;
    v25 = v82[16];
    v26 = (char *)a1 + v25;
    v27 = (char *)a2 + v25;
    v28 = *((_QWORD *)v27 + 1);
    if (v28 >> 60 == 15)
    {
      *(_OWORD *)v26 = *(_OWORD *)v27;
    }
    else
    {
      v29 = *(_QWORD *)v27;
      sub_23F6D1E20(*(_QWORD *)v27, *((_QWORD *)v27 + 1));
      *(_QWORD *)v26 = v29;
      *((_QWORD *)v26 + 1) = v28;
    }
    v30 = v82[17];
    v31 = (_QWORD *)((char *)a1 + v30);
    v32 = (_QWORD *)((char *)a2 + v30);
    v33 = v32[1];
    *v31 = *v32;
    v31[1] = v33;
    v34 = v82[18];
    v35 = (_QWORD *)((char *)a1 + v34);
    v36 = (_QWORD *)((char *)a2 + v34);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    v38 = v82[19];
    v39 = (_DWORD *)((char *)a1 + v38);
    v40 = (_DWORD *)((char *)a2 + v38);
    v41 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v40, 1, v41))
    {
      v42 = sub_23F6916B8(&qword_256EA2D68);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      *v39 = *v40;
      *((_BYTE *)v39 + 4) = *((_BYTE *)v40 + 4);
      v43 = *((_QWORD *)v40 + 2);
      *((_QWORD *)v39 + 1) = *((_QWORD *)v40 + 1);
      *((_QWORD *)v39 + 2) = v43;
      v39[6] = v40[6];
      *((_BYTE *)v39 + 28) = *((_BYTE *)v40 + 28);
      v39[8] = v40[8];
      *((_BYTE *)v39 + 36) = *((_BYTE *)v40 + 36);
      v44 = *(int *)(v41 + 32);
      v45 = (char *)v39 + v44;
      v46 = (char *)v40 + v44;
      v47 = sub_23FB2D718();
      v48 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16);
      swift_bridgeObjectRetain();
      v48(v45, v46, v47);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v39, 0, 1, v41);
    }
    v49 = v82[20];
    v50 = (char *)a1 + v49;
    v51 = (char *)a2 + v49;
    *(_QWORD *)v50 = *(_QWORD *)v51;
    v50[8] = v51[8];
    v52 = v82[21];
    v53 = (_QWORD *)((char *)a1 + v52);
    v54 = (_QWORD *)((char *)a2 + v52);
    v55 = v54[1];
    *v53 = *v54;
    v53[1] = v55;
    *((_BYTE *)a1 + v82[22]) = *((_BYTE *)a2 + v82[22]);
    *((_BYTE *)a1 + v82[23]) = *((_BYTE *)a2 + v82[23]);
    v56 = v82[24];
    v57 = (_QWORD *)((char *)a1 + v56);
    v58 = (_QWORD *)((char *)a2 + v56);
    v59 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v58, 1, v59))
    {
      v60 = sub_23F6916B8(&qword_256EA2D58);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      v61 = v58[1];
      *v57 = *v58;
      v57[1] = v61;
      v62 = v58[3];
      v57[2] = v58[2];
      v57[3] = v62;
      v63 = v58[5];
      v57[4] = v58[4];
      v57[5] = v63;
      v64 = v58[7];
      v57[6] = v58[6];
      v57[7] = v64;
      v65 = v58[9];
      v57[8] = v58[8];
      v57[9] = v65;
      v57[10] = v58[10];
      v66 = *(int *)(v59 + 40);
      v78 = (char *)v58 + v66;
      v79 = (char *)v57 + v66;
      v67 = sub_23FB2D718();
      v77 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24 = v82;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v77(v79, v78, v67);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v57, 0, 1, v59);
    }
    v68 = v24[25];
    v69 = (char *)a1 + v68;
    v70 = (char *)a2 + v68;
    v71 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v69, v70, v71);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v80);
    a3 = v81;
  }
  v72 = *(int *)(a3 + 20);
  v73 = (char *)a1 + v72;
  v74 = (char *)a2 + v72;
  v75 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v73, v74, v75);
  return a1;
}

_QWORD *assignWithCopy for ContextProtoStructuredContext(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  int *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  _DWORD *v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  int v49;
  int v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t *v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  _BYTE *v90;
  char *v91;
  uint64_t v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  void (*v102)(char *, char *, uint64_t);
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  _QWORD *v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  uint64_t v114;
  int v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  int v133;
  int v134;
  int v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  void (*v144)(char *, char *, uint64_t);
  void (*v145)(char *, char *, uint64_t);
  char *v146;
  _QWORD *__dst;
  char *__dsta;
  uint64_t v149;
  char *v150;
  int *v151;
  char *v152;
  uint64_t v153;

  v6 = type metadata accessor for ContextProtoStructuredContextKind(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_23F6D8A80((uint64_t)a1, type metadata accessor for ContextProtoStructuredContextKind);
      goto LABEL_7;
    }
    *a1 = *a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[1] = a2[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[2] = a2[2];
    a1[3] = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[4] = a2[4];
    a1[5] = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[6] = a2[6];
    a1[7] = a2[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[8] = a2[8];
    a1[9] = a2[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
    *((_BYTE *)a1 + 81) = *((_BYTE *)a2 + 81);
    *((_BYTE *)a1 + 82) = *((_BYTE *)a2 + 82);
    *((_BYTE *)a1 + 83) = *((_BYTE *)a2 + 83);
    *((_BYTE *)a1 + 84) = *((_BYTE *)a2 + 84);
    v14 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
    v15 = v14[15];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    v19 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, v18);
    v20 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v18);
    v153 = a3;
    if (v19)
    {
      if (!v20)
      {
        *(_QWORD *)v16 = *(_QWORD *)v17;
        *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
        v16[16] = v17[16];
        v16[17] = v17[17];
        v21 = *(int *)(v18 + 28);
        v22 = &v16[v21];
        v23 = &v17[v21];
        v24 = sub_23FB2D718();
        v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        v25(v22, v23, v24);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v18);
        goto LABEL_25;
      }
    }
    else
    {
      if (!v20)
      {
        *(_QWORD *)v16 = *(_QWORD *)v17;
        *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v16[16] = v17[16];
        v16[17] = v17[17];
        v129 = *(int *)(v18 + 28);
        v130 = &v16[v129];
        v131 = &v17[v129];
        v132 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v132 - 8) + 24))(v130, v131, v132);
LABEL_25:
        v75 = v14[16];
        v76 = (_QWORD *)((char *)a1 + v75);
        v77 = (_QWORD *)((char *)a2 + v75);
        v78 = *(_QWORD *)((char *)a2 + v75 + 8);
        if (*(_QWORD *)((char *)a1 + v75 + 8) >> 60 == 15)
        {
          if (v78 >> 60 != 15)
          {
            v79 = *v77;
            sub_23F6D1E20(*v77, v78);
            *v76 = v79;
            v76[1] = v78;
            goto LABEL_32;
          }
        }
        else
        {
          if (v78 >> 60 != 15)
          {
            v80 = *v77;
            sub_23F6D1E20(*v77, v78);
            v81 = *v76;
            v82 = v76[1];
            *v76 = v80;
            v76[1] = v78;
            sub_23F6BC34C(v81, v82);
LABEL_32:
            v83 = v14[17];
            v84 = (_QWORD *)((char *)a1 + v83);
            v85 = (_QWORD *)((char *)a2 + v83);
            *v84 = *v85;
            v84[1] = v85[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v86 = v14[18];
            v87 = (_QWORD *)((char *)a1 + v86);
            v88 = (_QWORD *)((char *)a2 + v86);
            *v87 = *v88;
            v87[1] = v88[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v89 = v14[19];
            v90 = (char *)a1 + v89;
            v91 = (char *)a2 + v89;
            v92 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
            v93 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v90, 1, v92);
            v94 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v91, 1, v92);
            if (v93)
            {
              if (!v94)
              {
                v95 = *(_DWORD *)v91;
                v90[4] = v91[4];
                *(_DWORD *)v90 = v95;
                *((_QWORD *)v90 + 1) = *((_QWORD *)v91 + 1);
                *((_QWORD *)v90 + 2) = *((_QWORD *)v91 + 2);
                v96 = *((_DWORD *)v91 + 6);
                v90[28] = v91[28];
                *((_DWORD *)v90 + 6) = v96;
                v97 = *((_DWORD *)v91 + 8);
                v90[36] = v91[36];
                *((_DWORD *)v90 + 8) = v97;
                v98 = *(int *)(v92 + 32);
                v99 = &v90[v98];
                v100 = &v91[v98];
                v101 = sub_23FB2D718();
                v102 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 16);
                swift_bridgeObjectRetain();
                v102(v99, v100, v101);
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v90, 0, 1, v92);
                goto LABEL_38;
              }
            }
            else
            {
              if (!v94)
              {
                v133 = *(_DWORD *)v91;
                v90[4] = v91[4];
                *(_DWORD *)v90 = v133;
                *((_QWORD *)v90 + 1) = *((_QWORD *)v91 + 1);
                *((_QWORD *)v90 + 2) = *((_QWORD *)v91 + 2);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v134 = *((_DWORD *)v91 + 6);
                v90[28] = v91[28];
                *((_DWORD *)v90 + 6) = v134;
                v135 = *((_DWORD *)v91 + 8);
                v90[36] = v91[36];
                *((_DWORD *)v90 + 8) = v135;
                v136 = *(int *)(v92 + 32);
                v137 = &v90[v136];
                v138 = &v91[v136];
                v139 = sub_23FB2D718();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v139 - 8) + 24))(v137, v138, v139);
LABEL_38:
                v104 = v14[20];
                v105 = (char *)a1 + v104;
                v106 = (char *)a2 + v104;
                v107 = *(_QWORD *)v106;
                v105[8] = v106[8];
                *(_QWORD *)v105 = v107;
                v108 = v14[21];
                v109 = (_QWORD *)((char *)a1 + v108);
                v110 = (_QWORD *)((char *)a2 + v108);
                *v109 = *v110;
                v109[1] = v110[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *((_BYTE *)a1 + v14[22]) = *((_BYTE *)a2 + v14[22]);
                *((_BYTE *)a1 + v14[23]) = *((_BYTE *)a2 + v14[23]);
                v111 = v14[24];
                v112 = (_QWORD *)((char *)a1 + v111);
                v113 = (_QWORD *)((char *)a2 + v111);
                v114 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
                v115 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v112, 1, v114);
                v116 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v113, 1, v114);
                if (v115)
                {
                  if (!v116)
                  {
                    *v112 = *v113;
                    v112[1] = v113[1];
                    v112[2] = v113[2];
                    v112[3] = v113[3];
                    v112[4] = v113[4];
                    v112[5] = v113[5];
                    v112[6] = v113[6];
                    v112[7] = v113[7];
                    v112[8] = v113[8];
                    v112[9] = v113[9];
                    v112[10] = v113[10];
                    v117 = *(int *)(v114 + 40);
                    v150 = (char *)v113 + v117;
                    v152 = (char *)v112 + v117;
                    v118 = sub_23FB2D718();
                    v145 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 16);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    v145(v152, v150, v118);
                    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v112, 0, 1, v114);
LABEL_44:
                    v120 = v14[25];
                    v121 = (char *)a1 + v120;
                    v122 = (char *)a2 + v120;
                    v123 = sub_23FB2D718();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 24))(v121, v122, v123);
LABEL_45:
                    a3 = v153;
                    goto LABEL_46;
                  }
                }
                else
                {
                  if (!v116)
                  {
                    *v112 = *v113;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v112[1] = v113[1];
                    v112[2] = v113[2];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v112[3] = v113[3];
                    v112[4] = v113[4];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v112[5] = v113[5];
                    v112[6] = v113[6];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v112[7] = v113[7];
                    v112[8] = v113[8];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v112[9] = v113[9];
                    v112[10] = v113[10];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v140 = *(int *)(v114 + 40);
                    v141 = (char *)v112 + v140;
                    v142 = (char *)v113 + v140;
                    v143 = sub_23FB2D718();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v143 - 8) + 24))(v141, v142, v143);
                    goto LABEL_44;
                  }
                  sub_23F6D8A80((uint64_t)v112, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
                }
                v119 = sub_23F6916B8(&qword_256EA2D58);
                memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
                goto LABEL_44;
              }
              sub_23F6D8A80((uint64_t)v90, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
            }
            v103 = sub_23F6916B8(&qword_256EA2D68);
            memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
            goto LABEL_38;
          }
          sub_23F6DC470((uint64_t)v76);
        }
        *(_OWORD *)v76 = *(_OWORD *)v77;
        goto LABEL_32;
      }
      sub_23F6D8A80((uint64_t)v16, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
    }
    v74 = sub_23F6916B8(&qword_256EA2D78);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    goto LABEL_25;
  }
  if (!v8)
  {
    v149 = v6;
    v153 = a3;
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    a1[6] = a2[6];
    a1[7] = a2[7];
    a1[8] = a2[8];
    a1[9] = a2[9];
    *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
    *((_BYTE *)a1 + 81) = *((_BYTE *)a2 + 81);
    *((_BYTE *)a1 + 82) = *((_BYTE *)a2 + 82);
    *((_BYTE *)a1 + 83) = *((_BYTE *)a2 + 83);
    *((_BYTE *)a1 + 84) = *((_BYTE *)a2 + 84);
    v151 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
    v9 = v151[15];
    __dst = (_QWORD *)((char *)a1 + v9);
    v10 = (_QWORD *)((char *)a2 + v9);
    v11 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA2D78);
      memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      *__dst = *v10;
      __dst[1] = v10[1];
      *((_BYTE *)__dst + 16) = *((_BYTE *)v10 + 16);
      *((_BYTE *)__dst + 17) = *((_BYTE *)v10 + 17);
      v26 = *(int *)(v11 + 28);
      v27 = (char *)__dst + v26;
      v28 = (char *)v10 + v26;
      v29 = sub_23FB2D718();
      v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
      swift_bridgeObjectRetain();
      v30(v27, v28, v29);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__dst, 0, 1, v11);
    }
    v31 = v151;
    v32 = v151[16];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    v35 = *((_QWORD *)v34 + 1);
    if (v35 >> 60 == 15)
    {
      *(_OWORD *)v33 = *(_OWORD *)v34;
    }
    else
    {
      v36 = *(_QWORD *)v34;
      sub_23F6D1E20(*(_QWORD *)v34, *((_QWORD *)v34 + 1));
      *(_QWORD *)v33 = v36;
      *((_QWORD *)v33 + 1) = v35;
    }
    v37 = v151[17];
    v38 = (_QWORD *)((char *)a1 + v37);
    v39 = (_QWORD *)((char *)a2 + v37);
    *v38 = *v39;
    v38[1] = v39[1];
    v40 = v151[18];
    v41 = (_QWORD *)((char *)a1 + v40);
    v42 = (_QWORD *)((char *)a2 + v40);
    *v41 = *v42;
    v41[1] = v42[1];
    v43 = v151[19];
    v44 = (_DWORD *)((char *)a1 + v43);
    v45 = (int *)((char *)a2 + v43);
    v46 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v45, 1, v46))
    {
      v47 = sub_23F6916B8(&qword_256EA2D68);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      v48 = *v45;
      *((_BYTE *)v44 + 4) = *((_BYTE *)v45 + 4);
      *v44 = v48;
      *((_QWORD *)v44 + 1) = *((_QWORD *)v45 + 1);
      *((_QWORD *)v44 + 2) = *((_QWORD *)v45 + 2);
      v49 = v45[6];
      *((_BYTE *)v44 + 28) = *((_BYTE *)v45 + 28);
      v44[6] = v49;
      v50 = v45[8];
      *((_BYTE *)v44 + 36) = *((_BYTE *)v45 + 36);
      v44[8] = v50;
      v51 = *(int *)(v46 + 32);
      v52 = (char *)v44 + v51;
      v53 = (char *)v45 + v51;
      v54 = sub_23FB2D718();
      v55 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
      swift_bridgeObjectRetain();
      v55(v52, v53, v54);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v44, 0, 1, v46);
    }
    v56 = v151[20];
    v57 = (char *)a1 + v56;
    v58 = (char *)a2 + v56;
    v59 = *(_QWORD *)v58;
    v57[8] = v58[8];
    *(_QWORD *)v57 = v59;
    v60 = v151[21];
    v61 = (_QWORD *)((char *)a1 + v60);
    v62 = (_QWORD *)((char *)a2 + v60);
    *v61 = *v62;
    v61[1] = v62[1];
    *((_BYTE *)a1 + v151[22]) = *((_BYTE *)a2 + v151[22]);
    *((_BYTE *)a1 + v151[23]) = *((_BYTE *)a2 + v151[23]);
    v63 = v151[24];
    v64 = (_QWORD *)((char *)a1 + v63);
    v65 = (_QWORD *)((char *)a2 + v63);
    v66 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v65, 1, v66))
    {
      v67 = sub_23F6916B8(&qword_256EA2D58);
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    }
    else
    {
      *v64 = *v65;
      v64[1] = v65[1];
      v64[2] = v65[2];
      v64[3] = v65[3];
      v64[4] = v65[4];
      v64[5] = v65[5];
      v64[6] = v65[6];
      v64[7] = v65[7];
      v64[8] = v65[8];
      v64[9] = v65[9];
      v64[10] = v65[10];
      v68 = *(int *)(v66 + 40);
      v146 = (char *)v65 + v68;
      __dsta = (char *)v64 + v68;
      v69 = sub_23FB2D718();
      v144 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v31 = v151;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v144(__dsta, v146, v69);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v64, 0, 1, v66);
    }
    v70 = v31[25];
    v71 = (char *)a1 + v70;
    v72 = (char *)a2 + v70;
    v73 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v71, v72, v73);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v149);
    goto LABEL_45;
  }
LABEL_7:
  v13 = sub_23F6916B8(&qword_256EA2D40);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
LABEL_46:
  v124 = *(int *)(a3 + 20);
  v125 = (char *)a1 + v124;
  v126 = (char *)a2 + v124;
  v127 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 24))(v125, v126, v127);
  return a1;
}

_OWORD *initializeWithTake for ContextProtoStructuredContext(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  int *v10;
  uint64_t v11;
  _WORD *v12;
  _WORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD *v21;
  _DWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;

  v6 = type metadata accessor for ContextProtoStructuredContextKind(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA2D40);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    a1[4] = a2[4];
    *((_DWORD *)a1 + 20) = *((_DWORD *)a2 + 20);
    *((_BYTE *)a1 + 84) = *((_BYTE *)a2 + 84);
    v10 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
    v11 = v10[15];
    v12 = (_WORD *)((char *)a1 + v11);
    v13 = (_WORD *)((char *)a2 + v11);
    v14 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v14))
    {
      v15 = sub_23F6916B8(&qword_256EA2D78);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v12 = *(_OWORD *)v13;
      v12[8] = v13[8];
      v16 = *(int *)(v14 + 28);
      v17 = (char *)v12 + v16;
      v18 = (char *)v13 + v16;
      v19 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v12, 0, 1, v14);
    }
    *(_OWORD *)((char *)a1 + v10[16]) = *(_OWORD *)((char *)a2 + v10[16]);
    *(_OWORD *)((char *)a1 + v10[17]) = *(_OWORD *)((char *)a2 + v10[17]);
    *(_OWORD *)((char *)a1 + v10[18]) = *(_OWORD *)((char *)a2 + v10[18]);
    v20 = v10[19];
    v21 = (_DWORD *)((char *)a1 + v20);
    v22 = (_DWORD *)((char *)a2 + v20);
    v23 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v23))
    {
      v24 = sub_23F6916B8(&qword_256EA2D68);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      *v21 = *v22;
      *((_BYTE *)v21 + 4) = *((_BYTE *)v22 + 4);
      *(_OWORD *)(v21 + 2) = *(_OWORD *)(v22 + 2);
      v21[6] = v22[6];
      *((_BYTE *)v21 + 28) = *((_BYTE *)v22 + 28);
      v21[8] = v22[8];
      *((_BYTE *)v21 + 36) = *((_BYTE *)v22 + 36);
      v25 = *(int *)(v23 + 32);
      v26 = (char *)v21 + v25;
      v27 = (char *)v22 + v25;
      v28 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v21, 0, 1, v23);
    }
    v29 = v10[20];
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    *(_QWORD *)v30 = *(_QWORD *)v31;
    v30[8] = v31[8];
    *(_OWORD *)((char *)a1 + v10[21]) = *(_OWORD *)((char *)a2 + v10[21]);
    *((_BYTE *)a1 + v10[22]) = *((_BYTE *)a2 + v10[22]);
    *((_BYTE *)a1 + v10[23]) = *((_BYTE *)a2 + v10[23]);
    v32 = v10[24];
    v33 = (_QWORD *)((char *)a1 + v32);
    v34 = (_QWORD *)((char *)a2 + v32);
    v35 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v34, 1, v35))
    {
      v36 = sub_23F6916B8(&qword_256EA2D58);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      *v33 = *v34;
      *(_OWORD *)(v33 + 1) = *(_OWORD *)(v34 + 1);
      *(_OWORD *)(v33 + 3) = *(_OWORD *)(v34 + 3);
      *(_OWORD *)(v33 + 5) = *(_OWORD *)(v34 + 5);
      *(_OWORD *)(v33 + 7) = *(_OWORD *)(v34 + 7);
      *(_OWORD *)(v33 + 9) = *(_OWORD *)(v34 + 9);
      v37 = *(int *)(v35 + 40);
      v38 = (char *)v33 + v37;
      v39 = (char *)v34 + v37;
      v40 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v33, 0, 1, v35);
    }
    v41 = v10[25];
    v42 = (char *)a1 + v41;
    v43 = (char *)a2 + v41;
    v44 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v45 = *(int *)(a3 + 20);
  v46 = (char *)a1 + v45;
  v47 = (char *)a2 + v45;
  v48 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
  return a1;
}

uint64_t assignWithTake for ContextProtoStructuredContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  __int128 v9;
  __int128 v10;
  int *v11;
  uint64_t v12;
  _WORD *v13;
  _WORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  _WORD *v24;
  _WORD *v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _DWORD *v38;
  _DWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t *v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  int v83;
  int v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  int v102;
  int v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;

  v6 = type metadata accessor for ContextProtoStructuredContextKind(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_23F6D8A80(a1, type metadata accessor for ContextProtoStructuredContextKind);
      goto LABEL_7;
    }
    *(_QWORD *)a1 = *(_QWORD *)a2;
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    swift_bridgeObjectRelease();
    v18 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v18;
    swift_bridgeObjectRelease();
    v19 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v19;
    swift_bridgeObjectRelease();
    v20 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v20;
    swift_bridgeObjectRelease();
    v21 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v21;
    swift_bridgeObjectRelease();
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
    v22 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
    v23 = v22[15];
    v24 = (_WORD *)(a1 + v23);
    v25 = (_WORD *)(a2 + v23);
    v26 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    v27 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v24, 1, v26);
    v28 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v25, 1, v26);
    if (v27)
    {
      if (!v28)
      {
        *(_OWORD *)v24 = *(_OWORD *)v25;
        v24[8] = v25[8];
        v29 = *(int *)(v26 + 28);
        v30 = (char *)v24 + v29;
        v31 = (char *)v25 + v29;
        v32 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v26);
        goto LABEL_22;
      }
    }
    else
    {
      if (!v28)
      {
        v118 = *((_QWORD *)v25 + 1);
        *(_QWORD *)v24 = *(_QWORD *)v25;
        *((_QWORD *)v24 + 1) = v118;
        swift_bridgeObjectRelease();
        v24[8] = v25[8];
        v119 = *(int *)(v26 + 28);
        v120 = (char *)v24 + v119;
        v121 = (char *)v25 + v119;
        v122 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 40))(v120, v121, v122);
LABEL_22:
        v63 = v22[16];
        v64 = (uint64_t *)(a1 + v63);
        v65 = (uint64_t *)(a2 + v63);
        v66 = *(_QWORD *)(a1 + v63 + 8);
        if (v66 >> 60 != 15)
        {
          v67 = v65[1];
          if (v67 >> 60 != 15)
          {
            v68 = *v64;
            *v64 = *v65;
            v64[1] = v67;
            sub_23F6BC34C(v68, v66);
LABEL_27:
            v69 = v22[17];
            v70 = (_QWORD *)(a1 + v69);
            v71 = (uint64_t *)(a2 + v69);
            v73 = *v71;
            v72 = v71[1];
            *v70 = v73;
            v70[1] = v72;
            swift_bridgeObjectRelease();
            v74 = v22[18];
            v75 = (_QWORD *)(a1 + v74);
            v76 = (uint64_t *)(a2 + v74);
            v78 = *v76;
            v77 = v76[1];
            *v75 = v78;
            v75[1] = v77;
            swift_bridgeObjectRelease();
            v79 = v22[19];
            v80 = (char *)(a1 + v79);
            v81 = (char *)(a2 + v79);
            v82 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
            v83 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v80, 1, v82);
            v84 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v81, 1, v82);
            if (v83)
            {
              if (!v84)
              {
                *(_DWORD *)v80 = *(_DWORD *)v81;
                v80[4] = v81[4];
                *(_OWORD *)(v80 + 8) = *(_OWORD *)(v81 + 8);
                *((_DWORD *)v80 + 6) = *((_DWORD *)v81 + 6);
                v80[28] = v81[28];
                *((_DWORD *)v80 + 8) = *((_DWORD *)v81 + 8);
                v80[36] = v81[36];
                v85 = *(int *)(v82 + 32);
                v86 = &v80[v85];
                v87 = &v81[v85];
                v88 = sub_23FB2D718();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(v86, v87, v88);
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v80, 0, 1, v82);
                goto LABEL_33;
              }
            }
            else
            {
              if (!v84)
              {
                *(_DWORD *)v80 = *(_DWORD *)v81;
                v80[4] = v81[4];
                v123 = *((_QWORD *)v81 + 2);
                *((_QWORD *)v80 + 1) = *((_QWORD *)v81 + 1);
                *((_QWORD *)v80 + 2) = v123;
                swift_bridgeObjectRelease();
                *((_DWORD *)v80 + 6) = *((_DWORD *)v81 + 6);
                v80[28] = v81[28];
                *((_DWORD *)v80 + 8) = *((_DWORD *)v81 + 8);
                v80[36] = v81[36];
                v124 = *(int *)(v82 + 32);
                v125 = &v80[v124];
                v126 = &v81[v124];
                v127 = sub_23FB2D718();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 40))(v125, v126, v127);
LABEL_33:
                v90 = v22[20];
                v91 = a1 + v90;
                v92 = a2 + v90;
                *(_QWORD *)v91 = *(_QWORD *)v92;
                *(_BYTE *)(v91 + 8) = *(_BYTE *)(v92 + 8);
                v93 = v22[21];
                v94 = (_QWORD *)(a1 + v93);
                v95 = (uint64_t *)(a2 + v93);
                v97 = *v95;
                v96 = v95[1];
                *v94 = v97;
                v94[1] = v96;
                swift_bridgeObjectRelease();
                *(_BYTE *)(a1 + v22[22]) = *(_BYTE *)(a2 + v22[22]);
                *(_BYTE *)(a1 + v22[23]) = *(_BYTE *)(a2 + v22[23]);
                v98 = v22[24];
                v99 = (char *)(a1 + v98);
                v100 = (char *)(a2 + v98);
                v101 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
                v102 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v99, 1, v101);
                v103 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v100, 1, v101);
                if (v102)
                {
                  if (!v103)
                  {
                    *(_QWORD *)v99 = *(_QWORD *)v100;
                    *(_OWORD *)(v99 + 8) = *(_OWORD *)(v100 + 8);
                    *(_OWORD *)(v99 + 24) = *(_OWORD *)(v100 + 24);
                    *(_OWORD *)(v99 + 40) = *(_OWORD *)(v100 + 40);
                    *(_OWORD *)(v99 + 56) = *(_OWORD *)(v100 + 56);
                    *(_OWORD *)(v99 + 72) = *(_OWORD *)(v100 + 72);
                    v104 = *(int *)(v101 + 40);
                    v105 = &v99[v104];
                    v106 = &v100[v104];
                    v107 = sub_23FB2D718();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 32))(v105, v106, v107);
                    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v99, 0, 1, v101);
LABEL_39:
                    v109 = v22[25];
                    v110 = a1 + v109;
                    v111 = a2 + v109;
                    v112 = sub_23FB2D718();
                    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 40))(v110, v111, v112);
                    goto LABEL_40;
                  }
                }
                else
                {
                  if (!v103)
                  {
                    *(_QWORD *)v99 = *(_QWORD *)v100;
                    swift_bridgeObjectRelease();
                    v128 = *((_QWORD *)v100 + 2);
                    *((_QWORD *)v99 + 1) = *((_QWORD *)v100 + 1);
                    *((_QWORD *)v99 + 2) = v128;
                    swift_bridgeObjectRelease();
                    v129 = *((_QWORD *)v100 + 4);
                    *((_QWORD *)v99 + 3) = *((_QWORD *)v100 + 3);
                    *((_QWORD *)v99 + 4) = v129;
                    swift_bridgeObjectRelease();
                    v130 = *((_QWORD *)v100 + 6);
                    *((_QWORD *)v99 + 5) = *((_QWORD *)v100 + 5);
                    *((_QWORD *)v99 + 6) = v130;
                    swift_bridgeObjectRelease();
                    v131 = *((_QWORD *)v100 + 8);
                    *((_QWORD *)v99 + 7) = *((_QWORD *)v100 + 7);
                    *((_QWORD *)v99 + 8) = v131;
                    swift_bridgeObjectRelease();
                    v132 = *((_QWORD *)v100 + 10);
                    *((_QWORD *)v99 + 9) = *((_QWORD *)v100 + 9);
                    *((_QWORD *)v99 + 10) = v132;
                    swift_bridgeObjectRelease();
                    v133 = *(int *)(v101 + 40);
                    v134 = &v99[v133];
                    v135 = &v100[v133];
                    v136 = sub_23FB2D718();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 40))(v134, v135, v136);
                    goto LABEL_39;
                  }
                  sub_23F6D8A80((uint64_t)v99, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
                }
                v108 = sub_23F6916B8(&qword_256EA2D58);
                memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
                goto LABEL_39;
              }
              sub_23F6D8A80((uint64_t)v80, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
            }
            v89 = sub_23F6916B8(&qword_256EA2D68);
            memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
            goto LABEL_33;
          }
          sub_23F6DC470((uint64_t)v64);
        }
        *(_OWORD *)v64 = *(_OWORD *)v65;
        goto LABEL_27;
      }
      sub_23F6D8A80((uint64_t)v24, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
    }
    v62 = sub_23F6916B8(&qword_256EA2D78);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    goto LABEL_22;
  }
  if (v8)
  {
LABEL_7:
    v17 = sub_23F6916B8(&qword_256EA2D40);
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_40;
  }
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v10;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  v11 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  v12 = v11[15];
  v13 = (_WORD *)(a1 + v12);
  v14 = (_WORD *)(a2 + v12);
  v15 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v15))
  {
    v16 = sub_23F6916B8(&qword_256EA2D78);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v13 = *(_OWORD *)v14;
    v13[8] = v14[8];
    v33 = *(int *)(v15 + 28);
    v34 = (char *)v13 + v33;
    v35 = (char *)v14 + v33;
    v36 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v13, 0, 1, v15);
  }
  *(_OWORD *)(a1 + v11[16]) = *(_OWORD *)(a2 + v11[16]);
  *(_OWORD *)(a1 + v11[17]) = *(_OWORD *)(a2 + v11[17]);
  *(_OWORD *)(a1 + v11[18]) = *(_OWORD *)(a2 + v11[18]);
  v37 = v11[19];
  v38 = (_DWORD *)(a1 + v37);
  v39 = (_DWORD *)(a2 + v37);
  v40 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v39, 1, v40))
  {
    v41 = sub_23F6916B8(&qword_256EA2D68);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    *v38 = *v39;
    *((_BYTE *)v38 + 4) = *((_BYTE *)v39 + 4);
    *(_OWORD *)(v38 + 2) = *(_OWORD *)(v39 + 2);
    v38[6] = v39[6];
    *((_BYTE *)v38 + 28) = *((_BYTE *)v39 + 28);
    v38[8] = v39[8];
    *((_BYTE *)v38 + 36) = *((_BYTE *)v39 + 36);
    v42 = *(int *)(v40 + 32);
    v43 = (char *)v38 + v42;
    v44 = (char *)v39 + v42;
    v45 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v38, 0, 1, v40);
  }
  v46 = v11[20];
  v47 = a1 + v46;
  v48 = a2 + v46;
  *(_QWORD *)v47 = *(_QWORD *)v48;
  *(_BYTE *)(v47 + 8) = *(_BYTE *)(v48 + 8);
  *(_OWORD *)(a1 + v11[21]) = *(_OWORD *)(a2 + v11[21]);
  *(_BYTE *)(a1 + v11[22]) = *(_BYTE *)(a2 + v11[22]);
  *(_BYTE *)(a1 + v11[23]) = *(_BYTE *)(a2 + v11[23]);
  v49 = v11[24];
  v50 = (_QWORD *)(a1 + v49);
  v51 = (_QWORD *)(a2 + v49);
  v52 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v51, 1, v52))
  {
    v53 = sub_23F6916B8(&qword_256EA2D58);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    *v50 = *v51;
    *(_OWORD *)(v50 + 1) = *(_OWORD *)(v51 + 1);
    *(_OWORD *)(v50 + 3) = *(_OWORD *)(v51 + 3);
    *(_OWORD *)(v50 + 5) = *(_OWORD *)(v51 + 5);
    *(_OWORD *)(v50 + 7) = *(_OWORD *)(v51 + 7);
    *(_OWORD *)(v50 + 9) = *(_OWORD *)(v51 + 9);
    v54 = *(int *)(v52 + 40);
    v55 = (char *)v50 + v54;
    v56 = (char *)v51 + v54;
    v57 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v50, 0, 1, v52);
  }
  v58 = v11[25];
  v59 = a1 + v58;
  v60 = a2 + v58;
  v61 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v6);
LABEL_40:
  v113 = *(int *)(a3 + 20);
  v114 = a1 + v113;
  v115 = a2 + v113;
  v116 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v116 - 8) + 40))(v114, v115, v116);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoStructuredContext()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F6E2D00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F6ED9F0(a1, a2, a3);
}

uint64_t storeEnumTagSinglePayload for ContextProtoStructuredContext()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F6E2D18()
{
  return sub_23F6EDA58();
}

void sub_23F6E2D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F6EDAC0(a1, a2, a3, qword_256EA36F8, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextKind);
}

uint64_t initializeBufferWithCopyOfBuffer for ContextProtoStructuredContextKind(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _DWORD *v37;
  _DWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v71)(char *, char *, uint64_t);
  char *v72;
  _QWORD *__dst;
  char *__dsta;
  int *v75;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v6 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v6 = a1;
    v7 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v7;
    v8 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v8;
    v9 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v9;
    v10 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v10;
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
    *(_BYTE *)(a1 + 84) = *((_BYTE *)a2 + 84);
    v11 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
    v12 = *(int *)(v11 + 60);
    __dst = (_QWORD *)(v6 + v12);
    v75 = (int *)v11;
    v13 = (uint64_t *)((char *)a2 + v12);
    v14 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v14))
    {
      v15 = sub_23F6916B8(&qword_256EA2D78);
      memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v16 = v13[1];
      *__dst = *v13;
      __dst[1] = v16;
      *((_WORD *)__dst + 8) = *((_WORD *)v13 + 8);
      v17 = *(int *)(v14 + 28);
      v18 = (char *)__dst + v17;
      v19 = (char *)v13 + v17;
      v20 = sub_23FB2D718();
      v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      v21(v18, v19, v20);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__dst, 0, 1, v14);
    }
    v22 = v75;
    v23 = v75[16];
    v24 = v6 + v23;
    v25 = (uint64_t *)((char *)a2 + v23);
    v26 = v25[1];
    if (v26 >> 60 == 15)
    {
      *(_OWORD *)v24 = *(_OWORD *)v25;
    }
    else
    {
      v27 = *v25;
      sub_23F6D1E20(*v25, v25[1]);
      *(_QWORD *)v24 = v27;
      *(_QWORD *)(v24 + 8) = v26;
    }
    v28 = v75[17];
    v29 = (_QWORD *)(v6 + v28);
    v30 = (uint64_t *)((char *)a2 + v28);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = v75[18];
    v33 = (_QWORD *)(v6 + v32);
    v34 = (uint64_t *)((char *)a2 + v32);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    v36 = v75[19];
    v37 = (_DWORD *)(v6 + v36);
    v38 = (_DWORD *)((char *)a2 + v36);
    v39 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v38, 1, v39))
    {
      v40 = sub_23F6916B8(&qword_256EA2D68);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      *v37 = *v38;
      *((_BYTE *)v37 + 4) = *((_BYTE *)v38 + 4);
      v41 = *((_QWORD *)v38 + 2);
      *((_QWORD *)v37 + 1) = *((_QWORD *)v38 + 1);
      *((_QWORD *)v37 + 2) = v41;
      v37[6] = v38[6];
      *((_BYTE *)v37 + 28) = *((_BYTE *)v38 + 28);
      v37[8] = v38[8];
      *((_BYTE *)v37 + 36) = *((_BYTE *)v38 + 36);
      v42 = *(int *)(v39 + 32);
      v43 = (char *)v37 + v42;
      v44 = (char *)v38 + v42;
      v45 = sub_23FB2D718();
      v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
      swift_bridgeObjectRetain();
      v46(v43, v44, v45);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v37, 0, 1, v39);
    }
    v47 = v75[20];
    v48 = v6 + v47;
    v49 = (uint64_t)a2 + v47;
    *(_QWORD *)v48 = *(_QWORD *)v49;
    *(_BYTE *)(v48 + 8) = *(_BYTE *)(v49 + 8);
    v50 = v75[21];
    v51 = (_QWORD *)(v6 + v50);
    v52 = (uint64_t *)((char *)a2 + v50);
    v53 = v52[1];
    *v51 = *v52;
    v51[1] = v53;
    *(_BYTE *)(v6 + v75[22]) = *((_BYTE *)a2 + v75[22]);
    *(_BYTE *)(v6 + v75[23]) = *((_BYTE *)a2 + v75[23]);
    v54 = v75[24];
    v55 = (_QWORD *)(v6 + v54);
    v56 = (uint64_t *)((char *)a2 + v54);
    v57 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v56, 1, v57))
    {
      v58 = sub_23F6916B8(&qword_256EA2D58);
      memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      v59 = v56[1];
      *v55 = *v56;
      v55[1] = v59;
      v60 = v56[3];
      v55[2] = v56[2];
      v55[3] = v60;
      v61 = v56[5];
      v55[4] = v56[4];
      v55[5] = v61;
      v62 = v56[7];
      v55[6] = v56[6];
      v55[7] = v62;
      v63 = v56[9];
      v55[8] = v56[8];
      v55[9] = v63;
      v55[10] = v56[10];
      v64 = *(int *)(v57 + 40);
      v72 = (char *)v56 + v64;
      __dsta = (char *)v55 + v64;
      v65 = sub_23FB2D718();
      v71 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v22 = v75;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v71(__dsta, v72, v65);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v55, 0, 1, v57);
    }
    v66 = v22[25];
    v67 = v6 + v66;
    v68 = (uint64_t)a2 + v66;
    v69 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v67, v68, v69);
  }
  return v6;
}

uint64_t destroy for ContextProtoStructuredContextKind(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  v3 = a1 + v2[15];
  v4 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v3, 1, v4))
  {
    swift_bridgeObjectRelease();
    v5 = v3 + *(int *)(v4 + 28);
    v6 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = (uint64_t *)(a1 + v2[16]);
  v8 = v7[1];
  if (v8 >> 60 != 15)
    sub_23F6BC34C(*v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = a1 + v2[19];
  v10 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v9, 1, v10))
  {
    swift_bridgeObjectRelease();
    v11 = v9 + *(int *)(v10 + 32);
    v12 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  swift_bridgeObjectRelease();
  v13 = a1 + v2[24];
  v14 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v13, 1, v14))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = v13 + *(int *)(v14 + 40);
    v16 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  }
  v17 = a1 + v2[25];
  v18 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
}

uint64_t initializeWithCopy for ContextProtoStructuredContextKind(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _DWORD *v35;
  _DWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v69)(char *, char *, uint64_t);
  char *v70;
  _QWORD *__dst;
  char *__dsta;
  int *v73;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  v9 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  v10 = *(int *)(v9 + 60);
  __dst = (_QWORD *)(a1 + v10);
  v73 = (int *)v9;
  v11 = (_QWORD *)(a2 + v10);
  v12 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12))
  {
    v13 = sub_23F6916B8(&qword_256EA2D78);
    memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = v11[1];
    *__dst = *v11;
    __dst[1] = v14;
    *((_WORD *)__dst + 8) = *((_WORD *)v11 + 8);
    v15 = *(int *)(v12 + 28);
    v16 = (char *)__dst + v15;
    v17 = (char *)v11 + v15;
    v18 = sub_23FB2D718();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    v19(v16, v17, v18);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__dst, 0, 1, v12);
  }
  v20 = v73;
  v21 = v73[16];
  v22 = a1 + v21;
  v23 = (uint64_t *)(a2 + v21);
  v24 = v23[1];
  if (v24 >> 60 == 15)
  {
    *(_OWORD *)v22 = *(_OWORD *)v23;
  }
  else
  {
    v25 = *v23;
    sub_23F6D1E20(*v23, v23[1]);
    *(_QWORD *)v22 = v25;
    *(_QWORD *)(v22 + 8) = v24;
  }
  v26 = v73[17];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  v30 = v73[18];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (_QWORD *)(a2 + v30);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v34 = v73[19];
  v35 = (_DWORD *)(a1 + v34);
  v36 = (_DWORD *)(a2 + v34);
  v37 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v36, 1, v37))
  {
    v38 = sub_23F6916B8(&qword_256EA2D68);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    *v35 = *v36;
    *((_BYTE *)v35 + 4) = *((_BYTE *)v36 + 4);
    v39 = *((_QWORD *)v36 + 2);
    *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
    *((_QWORD *)v35 + 2) = v39;
    v35[6] = v36[6];
    *((_BYTE *)v35 + 28) = *((_BYTE *)v36 + 28);
    v35[8] = v36[8];
    *((_BYTE *)v35 + 36) = *((_BYTE *)v36 + 36);
    v40 = *(int *)(v37 + 32);
    v41 = (char *)v35 + v40;
    v42 = (char *)v36 + v40;
    v43 = sub_23FB2D718();
    v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
    swift_bridgeObjectRetain();
    v44(v41, v42, v43);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v35, 0, 1, v37);
  }
  v45 = v73[20];
  v46 = a1 + v45;
  v47 = a2 + v45;
  *(_QWORD *)v46 = *(_QWORD *)v47;
  *(_BYTE *)(v46 + 8) = *(_BYTE *)(v47 + 8);
  v48 = v73[21];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (_QWORD *)(a2 + v48);
  v51 = v50[1];
  *v49 = *v50;
  v49[1] = v51;
  *(_BYTE *)(a1 + v73[22]) = *(_BYTE *)(a2 + v73[22]);
  *(_BYTE *)(a1 + v73[23]) = *(_BYTE *)(a2 + v73[23]);
  v52 = v73[24];
  v53 = (_QWORD *)(a1 + v52);
  v54 = (_QWORD *)(a2 + v52);
  v55 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v54, 1, v55))
  {
    v56 = sub_23F6916B8(&qword_256EA2D58);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    v57 = v54[1];
    *v53 = *v54;
    v53[1] = v57;
    v58 = v54[3];
    v53[2] = v54[2];
    v53[3] = v58;
    v59 = v54[5];
    v53[4] = v54[4];
    v53[5] = v59;
    v60 = v54[7];
    v53[6] = v54[6];
    v53[7] = v60;
    v61 = v54[9];
    v53[8] = v54[8];
    v53[9] = v61;
    v53[10] = v54[10];
    v62 = *(int *)(v55 + 40);
    v70 = (char *)v54 + v62;
    __dsta = (char *)v53 + v62;
    v63 = sub_23FB2D718();
    v69 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = v73;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v69(__dsta, v70, v63);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v53, 0, 1, v55);
  }
  v64 = v20[25];
  v65 = a1 + v64;
  v66 = a2 + v64;
  v67 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v65, v66, v67);
  return a1;
}

uint64_t assignWithCopy for ContextProtoStructuredContextKind(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  void (*v82)(char *, char *, uint64_t);
  char *v83;
  char *v84;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  *(_BYTE *)(a1 + 82) = *(_BYTE *)(a2 + 82);
  *(_BYTE *)(a1 + 83) = *(_BYTE *)(a2 + 83);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  v4 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  v5 = v4[15];
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  v9 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v6, 1, v8);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v8);
  if (v9)
  {
    if (!v10)
    {
      *(_QWORD *)v6 = *(_QWORD *)v7;
      *(_QWORD *)(v6 + 8) = *(_QWORD *)(v7 + 8);
      *(_BYTE *)(v6 + 16) = *(_BYTE *)(v7 + 16);
      *(_BYTE *)(v6 + 17) = *(_BYTE *)(v7 + 17);
      v11 = *(int *)(v8 + 28);
      v12 = v6 + v11;
      v13 = v7 + v11;
      v14 = sub_23FB2D718();
      v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v6, 0, 1, v8);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_23F6D8A80(v6, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
LABEL_6:
    v16 = sub_23F6916B8(&qword_256EA2D78);
    memcpy((void *)v6, (const void *)v7, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v6 = *(_QWORD *)v7;
  *(_QWORD *)(v6 + 8) = *(_QWORD *)(v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v6 + 16) = *(_BYTE *)(v7 + 16);
  *(_BYTE *)(v6 + 17) = *(_BYTE *)(v7 + 17);
  v67 = *(int *)(v8 + 28);
  v68 = v6 + v67;
  v69 = v7 + v67;
  v70 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 24))(v68, v69, v70);
LABEL_7:
  v17 = v4[16];
  v18 = (uint64_t *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v20 = *(_QWORD *)(a2 + v17 + 8);
  if (*(_QWORD *)(a1 + v17 + 8) >> 60 == 15)
  {
    if (v20 >> 60 != 15)
    {
      v21 = *v19;
      sub_23F6D1E20(v21, v20);
      *v18 = v21;
      v18[1] = v20;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (v20 >> 60 == 15)
  {
    sub_23F6DC470((uint64_t)v18);
LABEL_12:
    *(_OWORD *)v18 = *(_OWORD *)v19;
    goto LABEL_14;
  }
  v22 = *v19;
  sub_23F6D1E20(v22, v20);
  v23 = *v18;
  v24 = v18[1];
  *v18 = v22;
  v18[1] = v20;
  sub_23F6BC34C(v23, v24);
LABEL_14:
  v25 = v4[17];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  *v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28 = v4[18];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  *v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31 = v4[19];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  v35 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v32, 1, v34);
  v36 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v33, 1, v34);
  if (v35)
  {
    if (!v36)
    {
      v37 = *(_DWORD *)v33;
      *(_BYTE *)(v32 + 4) = *(_BYTE *)(v33 + 4);
      *(_DWORD *)v32 = v37;
      *(_QWORD *)(v32 + 8) = *(_QWORD *)(v33 + 8);
      *(_QWORD *)(v32 + 16) = *(_QWORD *)(v33 + 16);
      v38 = *(_DWORD *)(v33 + 24);
      *(_BYTE *)(v32 + 28) = *(_BYTE *)(v33 + 28);
      *(_DWORD *)(v32 + 24) = v38;
      v39 = *(_DWORD *)(v33 + 32);
      *(_BYTE *)(v32 + 36) = *(_BYTE *)(v33 + 36);
      *(_DWORD *)(v32 + 32) = v39;
      v40 = *(int *)(v34 + 32);
      v41 = v32 + v40;
      v42 = v33 + v40;
      v43 = sub_23FB2D718();
      v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
      swift_bridgeObjectRetain();
      v44(v41, v42, v43);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v32, 0, 1, v34);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v36)
  {
    sub_23F6D8A80(v32, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
LABEL_19:
    v45 = sub_23F6916B8(&qword_256EA2D68);
    memcpy((void *)v32, (const void *)v33, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_20;
  }
  v71 = *(_DWORD *)v33;
  *(_BYTE *)(v32 + 4) = *(_BYTE *)(v33 + 4);
  *(_DWORD *)v32 = v71;
  *(_QWORD *)(v32 + 8) = *(_QWORD *)(v33 + 8);
  *(_QWORD *)(v32 + 16) = *(_QWORD *)(v33 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v72 = *(_DWORD *)(v33 + 24);
  *(_BYTE *)(v32 + 28) = *(_BYTE *)(v33 + 28);
  *(_DWORD *)(v32 + 24) = v72;
  v73 = *(_DWORD *)(v33 + 32);
  *(_BYTE *)(v32 + 36) = *(_BYTE *)(v33 + 36);
  *(_DWORD *)(v32 + 32) = v73;
  v74 = *(int *)(v34 + 32);
  v75 = v32 + v74;
  v76 = v33 + v74;
  v77 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 24))(v75, v76, v77);
LABEL_20:
  v46 = v4[20];
  v47 = a1 + v46;
  v48 = (uint64_t *)(a2 + v46);
  v49 = *v48;
  *(_BYTE *)(v47 + 8) = *((_BYTE *)v48 + 8);
  *(_QWORD *)v47 = v49;
  v50 = v4[21];
  v51 = (_QWORD *)(a1 + v50);
  v52 = (_QWORD *)(a2 + v50);
  *v51 = *v52;
  v51[1] = v52[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v4[22]) = *(_BYTE *)(a2 + v4[22]);
  *(_BYTE *)(a1 + v4[23]) = *(_BYTE *)(a2 + v4[23]);
  v53 = v4[24];
  v54 = (_QWORD *)(a1 + v53);
  v55 = (_QWORD *)(a2 + v53);
  v56 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  v57 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v54, 1, v56);
  v58 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v55, 1, v56);
  if (!v57)
  {
    if (!v58)
    {
      *v54 = *v55;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v54[1] = v55[1];
      v54[2] = v55[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v54[3] = v55[3];
      v54[4] = v55[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v54[5] = v55[5];
      v54[6] = v55[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v54[7] = v55[7];
      v54[8] = v55[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v54[9] = v55[9];
      v54[10] = v55[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v78 = *(int *)(v56 + 40);
      v79 = (char *)v54 + v78;
      v80 = (char *)v55 + v78;
      v81 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 24))(v79, v80, v81);
      goto LABEL_26;
    }
    sub_23F6D8A80((uint64_t)v54, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
    goto LABEL_25;
  }
  if (v58)
  {
LABEL_25:
    v61 = sub_23F6916B8(&qword_256EA2D58);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    goto LABEL_26;
  }
  *v54 = *v55;
  v54[1] = v55[1];
  v54[2] = v55[2];
  v54[3] = v55[3];
  v54[4] = v55[4];
  v54[5] = v55[5];
  v54[6] = v55[6];
  v54[7] = v55[7];
  v54[8] = v55[8];
  v54[9] = v55[9];
  v54[10] = v55[10];
  v59 = *(int *)(v56 + 40);
  v83 = (char *)v55 + v59;
  v84 = (char *)v54 + v59;
  v60 = sub_23FB2D718();
  v82 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v82(v84, v83, v60);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v54, 0, 1, v56);
LABEL_26:
  v62 = v4[25];
  v63 = a1 + v62;
  v64 = a2 + v62;
  v65 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 24))(v63, v64, v65);
  return a1;
}

uint64_t initializeWithTake for ContextProtoStructuredContextKind(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  int *v6;
  uint64_t v7;
  _WORD *v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _DWORD *v17;
  _DWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  v6 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  v7 = v6[15];
  v8 = (_WORD *)(a1 + v7);
  v9 = (_WORD *)(a2 + v7);
  v10 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F6916B8(&qword_256EA2D78);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
    v8[8] = v9[8];
    v12 = *(int *)(v10 + 28);
    v13 = (char *)v8 + v12;
    v14 = (char *)v9 + v12;
    v15 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
  }
  *(_OWORD *)(a1 + v6[16]) = *(_OWORD *)(a2 + v6[16]);
  *(_OWORD *)(a1 + v6[17]) = *(_OWORD *)(a2 + v6[17]);
  *(_OWORD *)(a1 + v6[18]) = *(_OWORD *)(a2 + v6[18]);
  v16 = v6[19];
  v17 = (_DWORD *)(a1 + v16);
  v18 = (_DWORD *)(a2 + v16);
  v19 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v18, 1, v19))
  {
    v20 = sub_23F6916B8(&qword_256EA2D68);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    *v17 = *v18;
    *((_BYTE *)v17 + 4) = *((_BYTE *)v18 + 4);
    *(_OWORD *)(v17 + 2) = *(_OWORD *)(v18 + 2);
    v17[6] = v18[6];
    *((_BYTE *)v17 + 28) = *((_BYTE *)v18 + 28);
    v17[8] = v18[8];
    *((_BYTE *)v17 + 36) = *((_BYTE *)v18 + 36);
    v21 = *(int *)(v19 + 32);
    v22 = (char *)v17 + v21;
    v23 = (char *)v18 + v21;
    v24 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v17, 0, 1, v19);
  }
  v25 = v6[20];
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
  *(_OWORD *)(a1 + v6[21]) = *(_OWORD *)(a2 + v6[21]);
  *(_BYTE *)(a1 + v6[22]) = *(_BYTE *)(a2 + v6[22]);
  *(_BYTE *)(a1 + v6[23]) = *(_BYTE *)(a2 + v6[23]);
  v28 = v6[24];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  v31 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v30, 1, v31))
  {
    v32 = sub_23F6916B8(&qword_256EA2D58);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    *v29 = *v30;
    *(_OWORD *)(v29 + 1) = *(_OWORD *)(v30 + 1);
    *(_OWORD *)(v29 + 3) = *(_OWORD *)(v30 + 3);
    *(_OWORD *)(v29 + 5) = *(_OWORD *)(v30 + 5);
    *(_OWORD *)(v29 + 7) = *(_OWORD *)(v30 + 7);
    *(_OWORD *)(v29 + 9) = *(_OWORD *)(v30 + 9);
    v33 = *(int *)(v31 + 40);
    v34 = (char *)v29 + v33;
    v35 = (char *)v30 + v33;
    v36 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v29, 0, 1, v31);
  }
  v37 = v6[25];
  v38 = a1 + v37;
  v39 = a2 + v37;
  v40 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
  return a1;
}

uint64_t assignWithTake for ContextProtoStructuredContextKind(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  int v59;
  int v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  v8 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  v9 = v8[15];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  v13 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v10, 1, v12);
  v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v11, 1, v12);
  if (v13)
  {
    if (!v14)
    {
      *(_OWORD *)v10 = *(_OWORD *)v11;
      *(_WORD *)(v10 + 16) = *(_WORD *)(v11 + 16);
      v15 = *(int *)(v12 + 28);
      v16 = v10 + v15;
      v17 = v11 + v15;
      v18 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_23F6D8A80(v10, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
LABEL_6:
    v19 = sub_23F6916B8(&qword_256EA2D78);
    memcpy((void *)v10, (const void *)v11, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  v71 = *(_QWORD *)(v11 + 8);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_QWORD *)(v10 + 8) = v71;
  swift_bridgeObjectRelease();
  *(_WORD *)(v10 + 16) = *(_WORD *)(v11 + 16);
  v72 = *(int *)(v12 + 28);
  v73 = v10 + v72;
  v74 = v11 + v72;
  v75 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 40))(v73, v74, v75);
LABEL_7:
  v20 = v8[16];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = *(_QWORD *)(a1 + v20 + 8);
  if (v23 >> 60 == 15)
  {
LABEL_10:
    *(_OWORD *)v21 = *(_OWORD *)v22;
    goto LABEL_12;
  }
  v24 = *(_QWORD *)(v22 + 8);
  if (v24 >> 60 == 15)
  {
    sub_23F6DC470(v21);
    goto LABEL_10;
  }
  v25 = *(_QWORD *)v21;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_QWORD *)(v21 + 8) = v24;
  sub_23F6BC34C(v25, v23);
LABEL_12:
  v26 = v8[17];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (uint64_t *)(a2 + v26);
  v30 = *v28;
  v29 = v28[1];
  *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  v31 = v8[18];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (uint64_t *)(a2 + v31);
  v35 = *v33;
  v34 = v33[1];
  *v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  v36 = v8[19];
  v37 = a1 + v36;
  v38 = a2 + v36;
  v39 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  v40 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v37, 1, v39);
  v41 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v38, 1, v39);
  if (v40)
  {
    if (!v41)
    {
      *(_DWORD *)v37 = *(_DWORD *)v38;
      *(_BYTE *)(v37 + 4) = *(_BYTE *)(v38 + 4);
      *(_OWORD *)(v37 + 8) = *(_OWORD *)(v38 + 8);
      *(_DWORD *)(v37 + 24) = *(_DWORD *)(v38 + 24);
      *(_BYTE *)(v37 + 28) = *(_BYTE *)(v38 + 28);
      *(_DWORD *)(v37 + 32) = *(_DWORD *)(v38 + 32);
      *(_BYTE *)(v37 + 36) = *(_BYTE *)(v38 + 36);
      v42 = *(int *)(v39 + 32);
      v43 = v37 + v42;
      v44 = v38 + v42;
      v45 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v37, 0, 1, v39);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v41)
  {
    sub_23F6D8A80(v37, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
LABEL_17:
    v46 = sub_23F6916B8(&qword_256EA2D68);
    memcpy((void *)v37, (const void *)v38, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_18;
  }
  *(_DWORD *)v37 = *(_DWORD *)v38;
  *(_BYTE *)(v37 + 4) = *(_BYTE *)(v38 + 4);
  v76 = *(_QWORD *)(v38 + 16);
  *(_QWORD *)(v37 + 8) = *(_QWORD *)(v38 + 8);
  *(_QWORD *)(v37 + 16) = v76;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v37 + 24) = *(_DWORD *)(v38 + 24);
  *(_BYTE *)(v37 + 28) = *(_BYTE *)(v38 + 28);
  *(_DWORD *)(v37 + 32) = *(_DWORD *)(v38 + 32);
  *(_BYTE *)(v37 + 36) = *(_BYTE *)(v38 + 36);
  v77 = *(int *)(v39 + 32);
  v78 = v37 + v77;
  v79 = v38 + v77;
  v80 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 40))(v78, v79, v80);
LABEL_18:
  v47 = v8[20];
  v48 = a1 + v47;
  v49 = a2 + v47;
  *(_QWORD *)v48 = *(_QWORD *)v49;
  *(_BYTE *)(v48 + 8) = *(_BYTE *)(v49 + 8);
  v50 = v8[21];
  v51 = (_QWORD *)(a1 + v50);
  v52 = (uint64_t *)(a2 + v50);
  v54 = *v52;
  v53 = v52[1];
  *v51 = v54;
  v51[1] = v53;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v8[22]) = *(_BYTE *)(a2 + v8[22]);
  *(_BYTE *)(a1 + v8[23]) = *(_BYTE *)(a2 + v8[23]);
  v55 = v8[24];
  v56 = (_QWORD *)(a1 + v55);
  v57 = (_QWORD *)(a2 + v55);
  v58 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  v59 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v56, 1, v58);
  v60 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v57, 1, v58);
  if (!v59)
  {
    if (!v60)
    {
      *v56 = *v57;
      swift_bridgeObjectRelease();
      v81 = v57[2];
      v56[1] = v57[1];
      v56[2] = v81;
      swift_bridgeObjectRelease();
      v82 = v57[4];
      v56[3] = v57[3];
      v56[4] = v82;
      swift_bridgeObjectRelease();
      v83 = v57[6];
      v56[5] = v57[5];
      v56[6] = v83;
      swift_bridgeObjectRelease();
      v84 = v57[8];
      v56[7] = v57[7];
      v56[8] = v84;
      swift_bridgeObjectRelease();
      v85 = v57[10];
      v56[9] = v57[9];
      v56[10] = v85;
      swift_bridgeObjectRelease();
      v86 = *(int *)(v58 + 40);
      v87 = (char *)v56 + v86;
      v88 = (char *)v57 + v86;
      v89 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 40))(v87, v88, v89);
      goto LABEL_24;
    }
    sub_23F6D8A80((uint64_t)v56, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
    goto LABEL_23;
  }
  if (v60)
  {
LABEL_23:
    v65 = sub_23F6916B8(&qword_256EA2D58);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    goto LABEL_24;
  }
  *v56 = *v57;
  *(_OWORD *)(v56 + 1) = *(_OWORD *)(v57 + 1);
  *(_OWORD *)(v56 + 3) = *(_OWORD *)(v57 + 3);
  *(_OWORD *)(v56 + 5) = *(_OWORD *)(v57 + 5);
  *(_OWORD *)(v56 + 7) = *(_OWORD *)(v57 + 7);
  *(_OWORD *)(v56 + 9) = *(_OWORD *)(v57 + 9);
  v61 = *(int *)(v58 + 40);
  v62 = (char *)v56 + v61;
  v63 = (char *)v57 + v61;
  v64 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v62, v63, v64);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v56, 0, 1, v58);
LABEL_24:
  v66 = v8[25];
  v67 = a1 + v66;
  v68 = a2 + v66;
  v69 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 40))(v67, v68, v69);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoStructuredContextKind()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ContextProtoStructuredContextKind()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F6E48E0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8);
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ContextProtoStructuredContextSiriRequestContext(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  _DWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v71)(char *, char *, uint64_t);
  char *v72;
  _QWORD *__dst;
  char *__dsta;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v6 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v6 = a1;
    v7 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v7;
    v8 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v8;
    v9 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v9;
    v10 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v10;
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
    *(_BYTE *)(a1 + 84) = *((_BYTE *)a2 + 84);
    v11 = a3[15];
    __dst = (_QWORD *)(a1 + v11);
    v12 = (uint64_t *)((char *)a2 + v11);
    v13 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13))
    {
      v14 = sub_23F6916B8(&qword_256EA2D78);
      memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v15 = v12[1];
      *__dst = *v12;
      __dst[1] = v15;
      *((_WORD *)__dst + 8) = *((_WORD *)v12 + 8);
      v16 = *(int *)(v13 + 28);
      v17 = (char *)__dst + v16;
      v18 = (char *)v12 + v16;
      v19 = sub_23FB2D718();
      v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      v20(v17, v18, v19);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__dst, 0, 1, v13);
    }
    v21 = a3;
    v22 = a3[16];
    v23 = v6 + v22;
    v24 = (uint64_t *)((char *)a2 + v22);
    v25 = v24[1];
    if (v25 >> 60 == 15)
    {
      *(_OWORD *)v23 = *(_OWORD *)v24;
    }
    else
    {
      v26 = *v24;
      sub_23F6D1E20(*v24, v24[1]);
      *(_QWORD *)v23 = v26;
      *(_QWORD *)(v23 + 8) = v25;
    }
    v27 = a3[17];
    v28 = a3[18];
    v29 = (_QWORD *)(v6 + v27);
    v30 = (uint64_t *)((char *)a2 + v27);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = (_QWORD *)(v6 + v28);
    v33 = (uint64_t *)((char *)a2 + v28);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    v35 = a3[19];
    v36 = (_DWORD *)(v6 + v35);
    v37 = (_DWORD *)((char *)a2 + v35);
    v38 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v37, 1, v38))
    {
      v39 = sub_23F6916B8(&qword_256EA2D68);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      *v36 = *v37;
      *((_BYTE *)v36 + 4) = *((_BYTE *)v37 + 4);
      v40 = *((_QWORD *)v37 + 2);
      *((_QWORD *)v36 + 1) = *((_QWORD *)v37 + 1);
      *((_QWORD *)v36 + 2) = v40;
      v36[6] = v37[6];
      *((_BYTE *)v36 + 28) = *((_BYTE *)v37 + 28);
      v36[8] = v37[8];
      *((_BYTE *)v36 + 36) = *((_BYTE *)v37 + 36);
      v41 = *(int *)(v38 + 32);
      v42 = (char *)v36 + v41;
      v43 = (char *)v37 + v41;
      v44 = sub_23FB2D718();
      v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
      swift_bridgeObjectRetain();
      v45(v42, v43, v44);
      v21 = a3;
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v36, 0, 1, v38);
    }
    v46 = v21[20];
    v47 = v21[21];
    v48 = v6 + v46;
    v49 = (uint64_t)a2 + v46;
    *(_QWORD *)v48 = *(_QWORD *)v49;
    *(_BYTE *)(v48 + 8) = *(_BYTE *)(v49 + 8);
    v50 = (_QWORD *)(v6 + v47);
    v51 = (uint64_t *)((char *)a2 + v47);
    v52 = v51[1];
    *v50 = *v51;
    v50[1] = v52;
    v53 = v21[23];
    *(_BYTE *)(v6 + v21[22]) = *((_BYTE *)a2 + v21[22]);
    *(_BYTE *)(v6 + v53) = *((_BYTE *)a2 + v53);
    v54 = v21[24];
    v55 = (_QWORD *)(v6 + v54);
    v56 = (uint64_t *)((char *)a2 + v54);
    v57 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v56, 1, v57))
    {
      v58 = sub_23F6916B8(&qword_256EA2D58);
      memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      v59 = v56[1];
      *v55 = *v56;
      v55[1] = v59;
      v60 = v56[3];
      v55[2] = v56[2];
      v55[3] = v60;
      v61 = v56[5];
      v55[4] = v56[4];
      v55[5] = v61;
      v62 = v56[7];
      v55[6] = v56[6];
      v55[7] = v62;
      v63 = v56[9];
      v55[8] = v56[8];
      v55[9] = v63;
      v55[10] = v56[10];
      v64 = *(int *)(v57 + 40);
      v72 = (char *)v56 + v64;
      __dsta = (char *)v55 + v64;
      v65 = sub_23FB2D718();
      v71 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21 = a3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v71(__dsta, v72, v65);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v55, 0, 1, v57);
    }
    v66 = v21[25];
    v67 = v6 + v66;
    v68 = (uint64_t)a2 + v66;
    v69 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v67, v68, v69);
  }
  return v6;
}

uint64_t destroy for ContextProtoStructuredContextSiriRequestContext(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[15];
  v5 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 28);
    v7 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = (uint64_t *)(a1 + a2[16]);
  v9 = v8[1];
  if (v9 >> 60 != 15)
    sub_23F6BC34C(*v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = a1 + a2[19];
  v11 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v10, 1, v11))
  {
    swift_bridgeObjectRelease();
    v12 = v10 + *(int *)(v11 + 32);
    v13 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  swift_bridgeObjectRelease();
  v14 = a1 + a2[24];
  v15 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v14, 1, v15))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 = v14 + *(int *)(v15 + 40);
    v17 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  }
  v18 = a1 + a2[25];
  v19 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
}

uint64_t initializeWithCopy for ContextProtoStructuredContextSiriRequestContext(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _DWORD *v35;
  _DWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v70)(char *, char *, uint64_t);
  char *v71;
  _QWORD *__dst;
  char *__dsta;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  v10 = a3[15];
  __dst = (_QWORD *)(a1 + v10);
  v11 = (_QWORD *)(a2 + v10);
  v12 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12))
  {
    v13 = sub_23F6916B8(&qword_256EA2D78);
    memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = v11[1];
    *__dst = *v11;
    __dst[1] = v14;
    *((_WORD *)__dst + 8) = *((_WORD *)v11 + 8);
    v15 = *(int *)(v12 + 28);
    v16 = (char *)__dst + v15;
    v17 = (char *)v11 + v15;
    v18 = sub_23FB2D718();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    v19(v16, v17, v18);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__dst, 0, 1, v12);
  }
  v20 = a3;
  v21 = a3[16];
  v22 = a1 + v21;
  v23 = (uint64_t *)(a2 + v21);
  v24 = v23[1];
  if (v24 >> 60 == 15)
  {
    *(_OWORD *)v22 = *(_OWORD *)v23;
  }
  else
  {
    v25 = *v23;
    sub_23F6D1E20(*v23, v23[1]);
    *(_QWORD *)v22 = v25;
    *(_QWORD *)(v22 + 8) = v24;
  }
  v26 = a3[17];
  v27 = a3[18];
  v28 = (_QWORD *)(a1 + v26);
  v29 = (_QWORD *)(a2 + v26);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = (_QWORD *)(a1 + v27);
  v32 = (_QWORD *)(a2 + v27);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v34 = a3[19];
  v35 = (_DWORD *)(a1 + v34);
  v36 = (_DWORD *)(a2 + v34);
  v37 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v36, 1, v37))
  {
    v38 = sub_23F6916B8(&qword_256EA2D68);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    *v35 = *v36;
    *((_BYTE *)v35 + 4) = *((_BYTE *)v36 + 4);
    v39 = *((_QWORD *)v36 + 2);
    *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
    *((_QWORD *)v35 + 2) = v39;
    v35[6] = v36[6];
    *((_BYTE *)v35 + 28) = *((_BYTE *)v36 + 28);
    v35[8] = v36[8];
    *((_BYTE *)v35 + 36) = *((_BYTE *)v36 + 36);
    v40 = *(int *)(v37 + 32);
    v41 = (char *)v35 + v40;
    v42 = (char *)v36 + v40;
    v43 = sub_23FB2D718();
    v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
    swift_bridgeObjectRetain();
    v44(v41, v42, v43);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v35, 0, 1, v37);
  }
  v45 = a3[20];
  v46 = a3[21];
  v47 = a1 + v45;
  v48 = a2 + v45;
  *(_QWORD *)v47 = *(_QWORD *)v48;
  *(_BYTE *)(v47 + 8) = *(_BYTE *)(v48 + 8);
  v49 = (_QWORD *)(a1 + v46);
  v50 = (_QWORD *)(a2 + v46);
  v51 = v50[1];
  *v49 = *v50;
  v49[1] = v51;
  v52 = a3[23];
  *(_BYTE *)(a1 + a3[22]) = *(_BYTE *)(a2 + a3[22]);
  *(_BYTE *)(a1 + v52) = *(_BYTE *)(a2 + v52);
  v53 = a3[24];
  v54 = (_QWORD *)(a1 + v53);
  v55 = (_QWORD *)(a2 + v53);
  v56 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v55, 1, v56))
  {
    v57 = sub_23F6916B8(&qword_256EA2D58);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    v58 = v55[1];
    *v54 = *v55;
    v54[1] = v58;
    v59 = v55[3];
    v54[2] = v55[2];
    v54[3] = v59;
    v60 = v55[5];
    v54[4] = v55[4];
    v54[5] = v60;
    v61 = v55[7];
    v54[6] = v55[6];
    v54[7] = v61;
    v62 = v55[9];
    v54[8] = v55[8];
    v54[9] = v62;
    v54[10] = v55[10];
    v63 = *(int *)(v56 + 40);
    v71 = (char *)v55 + v63;
    __dsta = (char *)v54 + v63;
    v64 = sub_23FB2D718();
    v70 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v70(__dsta, v71, v64);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v54, 0, 1, v56);
  }
  v65 = v20[25];
  v66 = a1 + v65;
  v67 = a2 + v65;
  v68 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v66, v67, v68);
  return a1;
}

uint64_t assignWithCopy for ContextProtoStructuredContextSiriRequestContext(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  int v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  char *v84;
  char *v85;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  *(_BYTE *)(a1 + 82) = *(_BYTE *)(a2 + 82);
  *(_BYTE *)(a1 + 83) = *(_BYTE *)(a2 + 83);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  v6 = a3[15];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      *(_QWORD *)v7 = *(_QWORD *)v8;
      *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
      *(_BYTE *)(v7 + 16) = *(_BYTE *)(v8 + 16);
      *(_BYTE *)(v7 + 17) = *(_BYTE *)(v8 + 17);
      v12 = *(int *)(v9 + 28);
      v13 = v7 + v12;
      v14 = v8 + v12;
      v15 = sub_23FB2D718();
      v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_23F6D8A80(v7, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
LABEL_6:
    v17 = sub_23F6916B8(&qword_256EA2D78);
    memcpy((void *)v7, (const void *)v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v7 + 16) = *(_BYTE *)(v8 + 16);
  *(_BYTE *)(v7 + 17) = *(_BYTE *)(v8 + 17);
  v68 = *(int *)(v9 + 28);
  v69 = v7 + v68;
  v70 = v8 + v68;
  v71 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 24))(v69, v70, v71);
LABEL_7:
  v18 = a3[16];
  v19 = (uint64_t *)(a1 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v21 = *(_QWORD *)(a2 + v18 + 8);
  if (*(_QWORD *)(a1 + v18 + 8) >> 60 == 15)
  {
    if (v21 >> 60 != 15)
    {
      v22 = *v20;
      sub_23F6D1E20(v22, v21);
      *v19 = v22;
      v19[1] = v21;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (v21 >> 60 == 15)
  {
    sub_23F6DC470((uint64_t)v19);
LABEL_12:
    *(_OWORD *)v19 = *(_OWORD *)v20;
    goto LABEL_14;
  }
  v23 = *v20;
  sub_23F6D1E20(v23, v21);
  v24 = *v19;
  v25 = v19[1];
  *v19 = v23;
  v19[1] = v21;
  sub_23F6BC34C(v24, v25);
LABEL_14:
  v26 = a3[17];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  *v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = a3[18];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32 = a3[19];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  v36 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v33, 1, v35);
  v37 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v34, 1, v35);
  if (v36)
  {
    if (!v37)
    {
      v38 = *(_DWORD *)v34;
      *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
      *(_DWORD *)v33 = v38;
      *(_QWORD *)(v33 + 8) = *(_QWORD *)(v34 + 8);
      *(_QWORD *)(v33 + 16) = *(_QWORD *)(v34 + 16);
      v39 = *(_DWORD *)(v34 + 24);
      *(_BYTE *)(v33 + 28) = *(_BYTE *)(v34 + 28);
      *(_DWORD *)(v33 + 24) = v39;
      v40 = *(_DWORD *)(v34 + 32);
      *(_BYTE *)(v33 + 36) = *(_BYTE *)(v34 + 36);
      *(_DWORD *)(v33 + 32) = v40;
      v41 = *(int *)(v35 + 32);
      v42 = v33 + v41;
      v43 = v34 + v41;
      v44 = sub_23FB2D718();
      v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
      swift_bridgeObjectRetain();
      v45(v42, v43, v44);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v33, 0, 1, v35);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v37)
  {
    sub_23F6D8A80(v33, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
LABEL_19:
    v46 = sub_23F6916B8(&qword_256EA2D68);
    memcpy((void *)v33, (const void *)v34, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_20;
  }
  v72 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  *(_DWORD *)v33 = v72;
  *(_QWORD *)(v33 + 8) = *(_QWORD *)(v34 + 8);
  *(_QWORD *)(v33 + 16) = *(_QWORD *)(v34 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v73 = *(_DWORD *)(v34 + 24);
  *(_BYTE *)(v33 + 28) = *(_BYTE *)(v34 + 28);
  *(_DWORD *)(v33 + 24) = v73;
  v74 = *(_DWORD *)(v34 + 32);
  *(_BYTE *)(v33 + 36) = *(_BYTE *)(v34 + 36);
  *(_DWORD *)(v33 + 32) = v74;
  v75 = *(int *)(v35 + 32);
  v76 = v33 + v75;
  v77 = v34 + v75;
  v78 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 24))(v76, v77, v78);
LABEL_20:
  v47 = a3[20];
  v48 = a1 + v47;
  v49 = (uint64_t *)(a2 + v47);
  v50 = *v49;
  *(_BYTE *)(v48 + 8) = *((_BYTE *)v49 + 8);
  *(_QWORD *)v48 = v50;
  v51 = a3[21];
  v52 = (_QWORD *)(a1 + v51);
  v53 = (_QWORD *)(a2 + v51);
  *v52 = *v53;
  v52[1] = v53[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[22]) = *(_BYTE *)(a2 + a3[22]);
  *(_BYTE *)(a1 + a3[23]) = *(_BYTE *)(a2 + a3[23]);
  v54 = a3[24];
  v55 = (_QWORD *)(a1 + v54);
  v56 = (_QWORD *)(a2 + v54);
  v57 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  v58 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v55, 1, v57);
  v59 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v56, 1, v57);
  if (!v58)
  {
    if (!v59)
    {
      *v55 = *v56;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v55[1] = v56[1];
      v55[2] = v56[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v55[3] = v56[3];
      v55[4] = v56[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v55[5] = v56[5];
      v55[6] = v56[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v55[7] = v56[7];
      v55[8] = v56[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v55[9] = v56[9];
      v55[10] = v56[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v79 = *(int *)(v57 + 40);
      v80 = (char *)v55 + v79;
      v81 = (char *)v56 + v79;
      v82 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 24))(v80, v81, v82);
      goto LABEL_26;
    }
    sub_23F6D8A80((uint64_t)v55, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
    goto LABEL_25;
  }
  if (v59)
  {
LABEL_25:
    v62 = sub_23F6916B8(&qword_256EA2D58);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    goto LABEL_26;
  }
  *v55 = *v56;
  v55[1] = v56[1];
  v55[2] = v56[2];
  v55[3] = v56[3];
  v55[4] = v56[4];
  v55[5] = v56[5];
  v55[6] = v56[6];
  v55[7] = v56[7];
  v55[8] = v56[8];
  v55[9] = v56[9];
  v55[10] = v56[10];
  v60 = *(int *)(v57 + 40);
  v84 = (char *)v56 + v60;
  v85 = (char *)v55 + v60;
  v61 = sub_23FB2D718();
  v83 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v83(v85, v84, v61);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v55, 0, 1, v57);
LABEL_26:
  v63 = a3[25];
  v64 = a1 + v63;
  v65 = a2 + v63;
  v66 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 24))(v64, v65, v66);
  return a1;
}

uint64_t initializeWithTake for ContextProtoStructuredContextSiriRequestContext(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _WORD *v9;
  _WORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _DWORD *v19;
  _DWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  v8 = a3[15];
  v9 = (_WORD *)(a1 + v8);
  v10 = (_WORD *)(a2 + v8);
  v11 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F6916B8(&qword_256EA2D78);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v9 = *(_OWORD *)v10;
    v9[8] = v10[8];
    v13 = *(int *)(v11 + 28);
    v14 = (char *)v9 + v13;
    v15 = (char *)v10 + v13;
    v16 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
  }
  v17 = a3[17];
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  v18 = a3[19];
  *(_OWORD *)(a1 + a3[18]) = *(_OWORD *)(a2 + a3[18]);
  v19 = (_DWORD *)(a1 + v18);
  v20 = (_DWORD *)(a2 + v18);
  v21 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v21))
  {
    v22 = sub_23F6916B8(&qword_256EA2D68);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    *v19 = *v20;
    *((_BYTE *)v19 + 4) = *((_BYTE *)v20 + 4);
    *(_OWORD *)(v19 + 2) = *(_OWORD *)(v20 + 2);
    v19[6] = v20[6];
    *((_BYTE *)v19 + 28) = *((_BYTE *)v20 + 28);
    v19[8] = v20[8];
    *((_BYTE *)v19 + 36) = *((_BYTE *)v20 + 36);
    v23 = *(int *)(v21 + 32);
    v24 = (char *)v19 + v23;
    v25 = (char *)v20 + v23;
    v26 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v19, 0, 1, v21);
  }
  v27 = a3[20];
  v28 = a3[21];
  v29 = a1 + v27;
  v30 = a2 + v27;
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *(_BYTE *)(v29 + 8) = *(_BYTE *)(v30 + 8);
  *(_OWORD *)(a1 + v28) = *(_OWORD *)(a2 + v28);
  v31 = a3[23];
  *(_BYTE *)(a1 + a3[22]) = *(_BYTE *)(a2 + a3[22]);
  *(_BYTE *)(a1 + v31) = *(_BYTE *)(a2 + v31);
  v32 = a3[24];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (_QWORD *)(a2 + v32);
  v35 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v34, 1, v35))
  {
    v36 = sub_23F6916B8(&qword_256EA2D58);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    *v33 = *v34;
    *(_OWORD *)(v33 + 1) = *(_OWORD *)(v34 + 1);
    *(_OWORD *)(v33 + 3) = *(_OWORD *)(v34 + 3);
    *(_OWORD *)(v33 + 5) = *(_OWORD *)(v34 + 5);
    *(_OWORD *)(v33 + 7) = *(_OWORD *)(v34 + 7);
    *(_OWORD *)(v33 + 9) = *(_OWORD *)(v34 + 9);
    v37 = *(int *)(v35 + 40);
    v38 = (char *)v33 + v37;
    v39 = (char *)v34 + v37;
    v40 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v33, 0, 1, v35);
  }
  v41 = a3[25];
  v42 = a1 + v41;
  v43 = a2 + v41;
  v44 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
  return a1;
}

uint64_t assignWithTake for ContextProtoStructuredContextSiriRequestContext(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  int v61;
  int v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  v10 = a3[15];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v11, 1, v13);
  v15 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v12, 1, v13);
  if (v14)
  {
    if (!v15)
    {
      *(_OWORD *)v11 = *(_OWORD *)v12;
      *(_WORD *)(v11 + 16) = *(_WORD *)(v12 + 16);
      v16 = *(int *)(v13 + 28);
      v17 = v11 + v16;
      v18 = v12 + v16;
      v19 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    sub_23F6D8A80(v11, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
LABEL_6:
    v20 = sub_23F6916B8(&qword_256EA2D78);
    memcpy((void *)v11, (const void *)v12, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  v73 = *(_QWORD *)(v12 + 8);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_QWORD *)(v11 + 8) = v73;
  swift_bridgeObjectRelease();
  *(_WORD *)(v11 + 16) = *(_WORD *)(v12 + 16);
  v74 = *(int *)(v13 + 28);
  v75 = v11 + v74;
  v76 = v12 + v74;
  v77 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 40))(v75, v76, v77);
LABEL_7:
  v21 = a3[16];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = *(_QWORD *)(a1 + v21 + 8);
  if (v24 >> 60 == 15)
  {
LABEL_10:
    *(_OWORD *)v22 = *(_OWORD *)v23;
    goto LABEL_12;
  }
  v25 = *(_QWORD *)(v23 + 8);
  if (v25 >> 60 == 15)
  {
    sub_23F6DC470(v22);
    goto LABEL_10;
  }
  v26 = *(_QWORD *)v22;
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_QWORD *)(v22 + 8) = v25;
  sub_23F6BC34C(v26, v24);
LABEL_12:
  v27 = a3[17];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  v31 = *v29;
  v30 = v29[1];
  *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  v32 = a3[18];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (uint64_t *)(a2 + v32);
  v36 = *v34;
  v35 = v34[1];
  *v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  v37 = a3[19];
  v38 = a1 + v37;
  v39 = a2 + v37;
  v40 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  v41 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v38, 1, v40);
  v42 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v39, 1, v40);
  if (v41)
  {
    if (!v42)
    {
      *(_DWORD *)v38 = *(_DWORD *)v39;
      *(_BYTE *)(v38 + 4) = *(_BYTE *)(v39 + 4);
      *(_OWORD *)(v38 + 8) = *(_OWORD *)(v39 + 8);
      *(_DWORD *)(v38 + 24) = *(_DWORD *)(v39 + 24);
      *(_BYTE *)(v38 + 28) = *(_BYTE *)(v39 + 28);
      *(_DWORD *)(v38 + 32) = *(_DWORD *)(v39 + 32);
      *(_BYTE *)(v38 + 36) = *(_BYTE *)(v39 + 36);
      v43 = *(int *)(v40 + 32);
      v44 = v38 + v43;
      v45 = v39 + v43;
      v46 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v38, 0, 1, v40);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v42)
  {
    sub_23F6D8A80(v38, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
LABEL_17:
    v47 = sub_23F6916B8(&qword_256EA2D68);
    memcpy((void *)v38, (const void *)v39, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_18;
  }
  *(_DWORD *)v38 = *(_DWORD *)v39;
  *(_BYTE *)(v38 + 4) = *(_BYTE *)(v39 + 4);
  v78 = *(_QWORD *)(v39 + 16);
  *(_QWORD *)(v38 + 8) = *(_QWORD *)(v39 + 8);
  *(_QWORD *)(v38 + 16) = v78;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v38 + 24) = *(_DWORD *)(v39 + 24);
  *(_BYTE *)(v38 + 28) = *(_BYTE *)(v39 + 28);
  *(_DWORD *)(v38 + 32) = *(_DWORD *)(v39 + 32);
  *(_BYTE *)(v38 + 36) = *(_BYTE *)(v39 + 36);
  v79 = *(int *)(v40 + 32);
  v80 = v38 + v79;
  v81 = v39 + v79;
  v82 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 40))(v80, v81, v82);
LABEL_18:
  v48 = a3[20];
  v49 = a3[21];
  v50 = a1 + v48;
  v51 = a2 + v48;
  *(_QWORD *)v50 = *(_QWORD *)v51;
  *(_BYTE *)(v50 + 8) = *(_BYTE *)(v51 + 8);
  v52 = (_QWORD *)(a1 + v49);
  v53 = (uint64_t *)(a2 + v49);
  v55 = *v53;
  v54 = v53[1];
  *v52 = v55;
  v52[1] = v54;
  swift_bridgeObjectRelease();
  v56 = a3[23];
  *(_BYTE *)(a1 + a3[22]) = *(_BYTE *)(a2 + a3[22]);
  *(_BYTE *)(a1 + v56) = *(_BYTE *)(a2 + v56);
  v57 = a3[24];
  v58 = (_QWORD *)(a1 + v57);
  v59 = (_QWORD *)(a2 + v57);
  v60 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  v61 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v58, 1, v60);
  v62 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v59, 1, v60);
  if (!v61)
  {
    if (!v62)
    {
      *v58 = *v59;
      swift_bridgeObjectRelease();
      v83 = v59[2];
      v58[1] = v59[1];
      v58[2] = v83;
      swift_bridgeObjectRelease();
      v84 = v59[4];
      v58[3] = v59[3];
      v58[4] = v84;
      swift_bridgeObjectRelease();
      v85 = v59[6];
      v58[5] = v59[5];
      v58[6] = v85;
      swift_bridgeObjectRelease();
      v86 = v59[8];
      v58[7] = v59[7];
      v58[8] = v86;
      swift_bridgeObjectRelease();
      v87 = v59[10];
      v58[9] = v59[9];
      v58[10] = v87;
      swift_bridgeObjectRelease();
      v88 = *(int *)(v60 + 40);
      v89 = (char *)v58 + v88;
      v90 = (char *)v59 + v88;
      v91 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 40))(v89, v90, v91);
      goto LABEL_24;
    }
    sub_23F6D8A80((uint64_t)v58, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
    goto LABEL_23;
  }
  if (v62)
  {
LABEL_23:
    v67 = sub_23F6916B8(&qword_256EA2D58);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    goto LABEL_24;
  }
  *v58 = *v59;
  *(_OWORD *)(v58 + 1) = *(_OWORD *)(v59 + 1);
  *(_OWORD *)(v58 + 3) = *(_OWORD *)(v59 + 3);
  *(_OWORD *)(v58 + 5) = *(_OWORD *)(v59 + 5);
  *(_OWORD *)(v58 + 7) = *(_OWORD *)(v59 + 7);
  *(_OWORD *)(v58 + 9) = *(_OWORD *)(v59 + 9);
  v63 = *(int *)(v60 + 40);
  v64 = (char *)v58 + v63;
  v65 = (char *)v59 + v63;
  v66 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v64, v65, v66);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v58, 0, 1, v60);
LABEL_24:
  v68 = a3[25];
  v69 = a1 + v68;
  v70 = a2 + v68;
  v71 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 40))(v69, v70, v71);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContext()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F6E6408()
{
  unint64_t *v0;
  int *v1;
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F6F08A0();
  if (v2)
  {
    sub_23F6F083C(*v0);
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A1C();
    sub_23F6916B8(&qword_256EA2D78);
    sub_23F6F07DC();
    if (v2)
    {
      v3 = v1[15];
    }
    else
    {
      sub_23F6916B8(&qword_256EA2D68);
      sub_23F6F07DC();
      if (v4)
      {
        v3 = v1[19];
      }
      else
      {
        sub_23F6916B8(&qword_256EA2D58);
        sub_23F6F07DC();
        if (v5)
        {
          v3 = v1[24];
        }
        else
        {
          sub_23F6B53A4();
          v3 = v1[25];
        }
      }
    }
    v6 = sub_23F6F08CC(v3);
    sub_23F6F07D0(v6, v7, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContext()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F6E64BC()
{
  int *v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F6F0850();
  if (v1)
  {
    sub_23F6F0B28();
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A10();
    sub_23F6916B8(&qword_256EA2D78);
    sub_23F6F07EC();
    if (v1)
    {
      v2 = v0[15];
    }
    else
    {
      sub_23F6916B8(&qword_256EA2D68);
      sub_23F6F07EC();
      if (v3)
      {
        v2 = v0[19];
      }
      else
      {
        sub_23F6916B8(&qword_256EA2D58);
        sub_23F6F07EC();
        if (v4)
        {
          v2 = v0[24];
        }
        else
        {
          sub_23F6B53A4();
          v2 = v0[25];
        }
      }
    }
    v5 = sub_23F6F082C(v2);
    sub_23F6F07C4(v5, v6, v7, v8);
  }
}

void sub_23F6E655C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_23F6DE58C(319, &qword_256EA3810, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
  if (v0 <= 0x3F)
  {
    sub_23F6DE58C(319, &qword_256EA3818, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
    if (v1 <= 0x3F)
    {
      sub_23F6DE58C(319, qword_256EA3820, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
      if (v2 <= 0x3F)
      {
        sub_23FB2D718();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ContextProtoStructuredContextSiriRequestContextContentRestriction(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
    v5 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v5;
    *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
    *(_BYTE *)(a1 + 28) = *((_BYTE *)a2 + 28);
    *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 8);
    v6 = *(int *)(a3 + 32);
    v7 = (uint64_t)a2 + v6;
    v8 = a1 + v6;
    *(_BYTE *)(a1 + 36) = *((_BYTE *)a2 + 36);
    v9 = sub_23FB2D718();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v8, v7, v9);
  }
  return v3;
}

uint64_t destroy for ContextProtoStructuredContextSiriRequestContextContentRestriction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for ContextProtoStructuredContextSiriRequestContextContentRestriction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  v5 = *(int *)(a3 + 32);
  v6 = a2 + v5;
  v7 = a1 + v5;
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  v8 = sub_23FB2D718();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v7, v6, v8);
  return a1;
}

uint64_t assignWithCopy for ContextProtoStructuredContextSiriRequestContextContentRestriction(uint64_t a1, int *a2, uint64_t a3)
{
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *a2;
  *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = a2[6];
  *(_BYTE *)(a1 + 28) = *((_BYTE *)a2 + 28);
  *(_DWORD *)(a1 + 24) = v7;
  v8 = a2[8];
  *(_BYTE *)(a1 + 36) = *((_BYTE *)a2 + 36);
  *(_DWORD *)(a1 + 32) = v8;
  v9 = *(int *)(a3 + 32);
  v10 = a1 + v9;
  v11 = (uint64_t)a2 + v9;
  v12 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t initializeWithTake for ContextProtoStructuredContextSiriRequestContextContentRestriction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  v4 = *(int *)(a3 + 32);
  v5 = a2 + v4;
  v6 = a1 + v4;
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  v7 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v6, v5, v7);
  return a1;
}

uint64_t assignWithTake for ContextProtoStructuredContextSiriRequestContextContentRestriction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  v7 = *(int *)(a3 + 32);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContextContentRestriction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F6E6A34()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F0AC8();
  if (v2)
  {
    sub_23F6F0880(*(_QWORD *)(v0 + 16));
    sub_23F694C84();
  }
  else
  {
    v3 = v1;
    sub_23F6B53A4();
    v4 = sub_23F6F08CC(*(int *)(v3 + 32));
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContextContentRestriction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F6E6A88()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F6F09B0();
  if (v3)
  {
    *(_QWORD *)(v1 + 16) = v0;
    sub_23F694C84();
  }
  else
  {
    v4 = v2;
    sub_23F6B53A4();
    v5 = sub_23F6F082C(*(int *)(v4 + 32));
    sub_23F6F07C4(v5, v6, v7, v8);
  }
}

uint64_t sub_23F6E6ACC()
{
  return sub_23F6E6AD8();
}

uint64_t sub_23F6E6AD8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F6F0B14();
  if (v1 <= 0x3F)
  {
    sub_23F6F0B88();
    swift_initStructMetadata();
    return sub_23F6F0BFC();
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ContextProtoStructuredContextSiriRequestContextUser(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    v6 = *(int *)(a3 + 28);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_23FB2D718();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for ContextProtoStructuredContextSiriRequestContextUser(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for ContextProtoStructuredContextSiriRequestContextUser(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v5 = *(int *)(a3 + 28);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_23FB2D718();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for ContextProtoStructuredContextSiriRequestContextUser(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for ContextProtoStructuredContextSiriRequestContextUser(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for ContextProtoStructuredContextSiriRequestContextUser(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v7 = *(int *)(a3 + 28);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContextUser()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F6E6E18()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6F0AC8();
  if (v1)
  {
    sub_23F6F0880(*(_QWORD *)(v0 + 8));
    sub_23F694C84();
  }
  else
  {
    sub_23F6B53A4();
    sub_23F6F0AFC();
    v3 = sub_23F6F08CC(v2);
    sub_23F6F07D0(v3, v4, v5);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContextUser()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F6E6E68()
{
  unsigned int v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F6F09B0();
  if (v2)
  {
    *(_QWORD *)(v1 + 8) = v0;
    sub_23F694C84();
  }
  else
  {
    sub_23F6B53A4();
    sub_23F6F0BB8();
    v4 = sub_23F6F082C(v3);
    sub_23F6F07C4(v4, v5, v6, v7);
  }
}

uint64_t sub_23F6E6EA8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FB2D718();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoStructuredContextSiriRequestContextMeCard(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  char *v16;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    v7 = a2[4];
    a1[3] = a2[3];
    a1[4] = v7;
    v8 = a2[6];
    a1[5] = a2[5];
    a1[6] = v8;
    v9 = a2[8];
    a1[7] = a2[7];
    a1[8] = v9;
    v10 = a2[10];
    v11 = *(int *)(a3 + 40);
    v16 = (char *)a2 + v11;
    v12 = (char *)a1 + v11;
    a1[9] = a2[9];
    a1[10] = v10;
    v13 = sub_23FB2D718();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v12, v16, v13);
  }
  return v5;
}

uint64_t destroy for ContextProtoStructuredContextSiriRequestContextMeCard(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 40);
  v5 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for ContextProtoStructuredContextSiriRequestContextMeCard(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  char *v14;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  v9 = *(int *)(a3 + 40);
  v14 = (char *)a1 + v9;
  v10 = (char *)a2 + v9;
  a1[10] = a2[10];
  v11 = sub_23FB2D718();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v14, v10, v11);
  return a1;
}

_QWORD *assignWithCopy for ContextProtoStructuredContextSiriRequestContextMeCard(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 40);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for ContextProtoStructuredContextSiriRequestContextMeCard(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v4 = *(int *)(a3 + 40);
  v5 = a1 + v4;
  v6 = a2 + v4;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v7 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for ContextProtoStructuredContextSiriRequestContextMeCard(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[4];
  a1[3] = a2[3];
  a1[4] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[6];
  a1[5] = a2[5];
  a1[6] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[8];
  a1[7] = a2[7];
  a1[8] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[10];
  a1[9] = a2[9];
  a1[10] = v10;
  swift_bridgeObjectRelease();
  v11 = *(int *)(a3 + 40);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContextMeCard()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F6E73E0()
{
  unint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F08A0();
  if (v2)
  {
    sub_23F6F083C(*v0);
    sub_23F694C84();
  }
  else
  {
    v3 = v1;
    sub_23F6B53A4();
    v4 = sub_23F6F08CC(*(int *)(v3 + 40));
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContextMeCard()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F6E7434()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F0850();
  if (v1)
  {
    sub_23F6F0B28();
    sub_23F694C84();
  }
  else
  {
    v2 = v0;
    sub_23F6B53A4();
    v3 = sub_23F6F082C(*(int *)(v2 + 40));
    sub_23F6F07C4(v3, v4, v5, v6);
  }
}

uint64_t sub_23F6E7474()
{
  return sub_23F6E79CC();
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoStructuredContextSiriRequestContextAddress(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v17;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    v9 = a2[9];
    a1[8] = a2[8];
    a1[9] = v9;
    v10 = a2[11];
    v11 = *(int *)(a3 + 40);
    v17 = (char *)a2 + v11;
    v12 = (char *)a1 + v11;
    a1[10] = a2[10];
    a1[11] = v10;
    v13 = sub_23FB2D718();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v12, v17, v13);
  }
  return v3;
}

uint64_t destroy for ContextProtoStructuredContextSiriRequestContextAddress(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 40);
  v5 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for ContextProtoStructuredContextSiriRequestContextAddress(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  char *v15;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  v9 = a2[11];
  v10 = *(int *)(a3 + 40);
  v15 = (char *)a2 + v10;
  v11 = (char *)a1 + v10;
  a1[10] = a2[10];
  a1[11] = v9;
  v12 = sub_23FB2D718();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v11, v15, v12);
  return a1;
}

_QWORD *assignWithCopy for ContextProtoStructuredContextSiriRequestContextAddress(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 40);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for ContextProtoStructuredContextSiriRequestContextAddress(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  v7 = *(int *)(a3 + 40);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  v10 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

_QWORD *assignWithTake for ContextProtoStructuredContextSiriRequestContextAddress(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  swift_bridgeObjectRelease();
  v11 = a2[11];
  a1[10] = a2[10];
  a1[11] = v11;
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 40);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContextAddress()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F6E7928()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F0AC8();
  if (v2)
  {
    sub_23F6F0880(*(_QWORD *)(v0 + 8));
    sub_23F694C84();
  }
  else
  {
    v3 = v1;
    sub_23F6B53A4();
    v4 = sub_23F6F08CC(*(int *)(v3 + 40));
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContextAddress()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F6E797C()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F6F09B0();
  if (v3)
  {
    *(_QWORD *)(v1 + 8) = v0;
    sub_23F694C84();
  }
  else
  {
    v4 = v2;
    sub_23F6B53A4();
    v5 = sub_23F6F082C(*(int *)(v4 + 40));
    sub_23F6F07C4(v5, v6, v7, v8);
  }
}

uint64_t sub_23F6E79C0()
{
  return sub_23F6E79CC();
}

uint64_t sub_23F6E79CC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F6F0B14();
  if (v1 <= 0x3F)
  {
    sub_23F6F0B88();
    swift_initStructMetadata();
    return sub_23F6F0BFC();
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ContextProtoQueryDecorationOutput(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v24;
  char *v25;
  _QWORD *__dst;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v6 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v6 = a1;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
    *(_QWORD *)(a1 + 80) = a2[10];
    *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
    *(_QWORD *)(a1 + 96) = a2[12];
    *(_BYTE *)(a1 + 104) = *((_BYTE *)a2 + 104);
    *(_QWORD *)(a1 + 112) = a2[14];
    *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
    *(_QWORD *)(a1 + 128) = a2[16];
    *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
    v7 = a2[18];
    *(_BYTE *)(a1 + 152) = *((_BYTE *)a2 + 152);
    v8 = *(int *)(a3 + 96);
    __dst = (_QWORD *)(a1 + v8);
    v9 = (uint64_t *)((char *)a2 + v8);
    *(_QWORD *)(a1 + 144) = v7;
    DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = DecorationToolRetrievalResponse;
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, DecorationToolRetrievalResponse))
    {
      v12 = sub_23F6916B8(&qword_256EA2DD0);
      memcpy(__dst, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v13 = v9[1];
      *__dst = *v9;
      __dst[1] = v13;
      v14 = v9[3];
      __dst[2] = v9[2];
      __dst[3] = v14;
      *((_DWORD *)__dst + 8) = *((_DWORD *)v9 + 8);
      v15 = v9[6];
      __dst[5] = v9[5];
      __dst[6] = v15;
      v16 = *(int *)(v11 + 36);
      v24 = (char *)v9 + v16;
      v25 = (char *)__dst + v16;
      v17 = sub_23FB2D718();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18(v25, v24, v17);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__dst, 0, 1, v11);
    }
    v19 = *(int *)(a3 + 100);
    v20 = v6 + v19;
    v21 = (uint64_t)a2 + v19;
    v22 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  }
  return v6;
}

uint64_t destroy for ContextProtoQueryDecorationOutput(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 96);
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, DecorationToolRetrievalResponse))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(DecorationToolRetrievalResponse + 36);
    v7 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + *(int *)(a2 + 100);
  v9 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

uint64_t initializeWithCopy for ContextProtoQueryDecorationOutput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v22;
  char *v23;
  _QWORD *__dst;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  v5 = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v6 = *(int *)(a3 + 96);
  __dst = (_QWORD *)(a1 + v6);
  v7 = (_QWORD *)(a2 + v6);
  *(_QWORD *)(a1 + 144) = v5;
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = DecorationToolRetrievalResponse;
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, DecorationToolRetrievalResponse))
  {
    v10 = sub_23F6916B8(&qword_256EA2DD0);
    memcpy(__dst, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = v7[1];
    *__dst = *v7;
    __dst[1] = v11;
    v12 = v7[3];
    __dst[2] = v7[2];
    __dst[3] = v12;
    *((_DWORD *)__dst + 8) = *((_DWORD *)v7 + 8);
    v13 = v7[6];
    __dst[5] = v7[5];
    __dst[6] = v13;
    v14 = *(int *)(v9 + 36);
    v22 = (char *)v7 + v14;
    v23 = (char *)__dst + v14;
    v15 = sub_23FB2D718();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v23, v22, v15);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__dst, 0, 1, v9);
  }
  v17 = *(int *)(a3 + 100);
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

uint64_t assignWithCopy for ContextProtoQueryDecorationOutput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t DecorationToolRetrievalResponse;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v6 = *(int *)(a3 + 96);
  v7 = a1 + v6;
  v8 = a2 + v6;
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, DecorationToolRetrievalResponse);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, DecorationToolRetrievalResponse);
  if (!v10)
  {
    if (!v11)
    {
      *(_QWORD *)v7 = *(_QWORD *)v8;
      *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
      *(_QWORD *)(v7 + 24) = *(_QWORD *)(v8 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v7 + 32) = *(_DWORD *)(v8 + 32);
      *(_QWORD *)(v7 + 40) = *(_QWORD *)(v8 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v7 + 48) = *(_QWORD *)(v8 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v22 = *(int *)(DecorationToolRetrievalResponse + 36);
      v23 = v7 + v22;
      v24 = v8 + v22;
      v25 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
      goto LABEL_7;
    }
    sub_23F6D8A80(v7, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v16 = sub_23F6916B8(&qword_256EA2DD0);
    memcpy((void *)v7, (const void *)v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
  *(_QWORD *)(v7 + 24) = *(_QWORD *)(v8 + 24);
  *(_DWORD *)(v7 + 32) = *(_DWORD *)(v8 + 32);
  *(_QWORD *)(v7 + 40) = *(_QWORD *)(v8 + 40);
  *(_QWORD *)(v7 + 48) = *(_QWORD *)(v8 + 48);
  v12 = *(int *)(DecorationToolRetrievalResponse + 36);
  v26 = v8 + v12;
  v27 = v7 + v12;
  v28 = a3;
  v13 = sub_23FB2D718();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = v13;
  a3 = v28;
  v14(v27, v26, v15);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v7, 0, 1, DecorationToolRetrievalResponse);
LABEL_7:
  v17 = *(int *)(a3 + 100);
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

uint64_t initializeWithTake for ContextProtoQueryDecorationOutput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v6 = *(int *)(a3 + 96);
  v7 = (_OWORD *)(a1 + v6);
  v8 = (_OWORD *)(a2 + v6);
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, DecorationToolRetrievalResponse))
  {
    v10 = sub_23F6916B8(&qword_256EA2DD0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = v8[1];
    *v7 = *v8;
    v7[1] = v11;
    *((_DWORD *)v7 + 8) = *((_DWORD *)v8 + 8);
    *(_OWORD *)((char *)v7 + 40) = *(_OWORD *)((char *)v8 + 40);
    v12 = *(int *)(DecorationToolRetrievalResponse + 36);
    v13 = (char *)v7 + v12;
    v14 = (char *)v8 + v12;
    v15 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, DecorationToolRetrievalResponse);
  }
  v16 = *(int *)(a3 + 100);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

uint64_t assignWithTake for ContextProtoQueryDecorationOutput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t DecorationToolRetrievalResponse;
  int v10;
  int v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v6 = *(int *)(a3 + 96);
  v7 = a1 + v6;
  v8 = a2 + v6;
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, DecorationToolRetrievalResponse);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, DecorationToolRetrievalResponse);
  if (!v10)
  {
    if (!v11)
    {
      v23 = *(_QWORD *)(v8 + 8);
      *(_QWORD *)v7 = *(_QWORD *)v8;
      *(_QWORD *)(v7 + 8) = v23;
      swift_bridgeObjectRelease();
      v24 = *(_QWORD *)(v8 + 24);
      *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
      *(_QWORD *)(v7 + 24) = v24;
      swift_bridgeObjectRelease();
      *(_DWORD *)(v7 + 32) = *(_DWORD *)(v8 + 32);
      *(_QWORD *)(v7 + 40) = *(_QWORD *)(v8 + 40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v7 + 48) = *(_QWORD *)(v8 + 48);
      swift_bridgeObjectRelease();
      v25 = *(int *)(DecorationToolRetrievalResponse + 36);
      v26 = v7 + v25;
      v27 = v8 + v25;
      v28 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
      goto LABEL_7;
    }
    sub_23F6D8A80(v7, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v17 = sub_23F6916B8(&qword_256EA2DD0);
    memcpy((void *)v7, (const void *)v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  v12 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v12;
  *(_DWORD *)(v7 + 32) = *(_DWORD *)(v8 + 32);
  *(_OWORD *)(v7 + 40) = *(_OWORD *)(v8 + 40);
  v13 = *(int *)(DecorationToolRetrievalResponse + 36);
  v14 = v7 + v13;
  v15 = v8 + v13;
  v16 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v7, 0, 1, DecorationToolRetrievalResponse);
LABEL_7:
  v18 = *(int *)(a3 + 100);
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoQueryDecorationOutput()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F6E880C()
{
  unint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F08A0();
  if (v2)
  {
    sub_23F6F083C(*v0);
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A1C();
    sub_23F6916B8(&qword_256EA2DD0);
    sub_23F6F07DC();
    if (v2)
    {
      v3 = *(int *)(v1 + 96);
    }
    else
    {
      sub_23F6B53A4();
      v3 = *(int *)(v1 + 100);
    }
    v4 = sub_23F6F08CC(v3);
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoQueryDecorationOutput()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F6E887C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F0850();
  if (v1)
  {
    sub_23F6F0B28();
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A10();
    sub_23F6916B8(&qword_256EA2DD0);
    sub_23F6F07EC();
    if (v1)
    {
      v2 = *(int *)(v0 + 96);
    }
    else
    {
      sub_23F6B53A4();
      v2 = *(int *)(v0 + 100);
    }
    v3 = sub_23F6F082C(v2);
    sub_23F6F07C4(v3, v4, v5, v6);
  }
}

void sub_23F6E88DC()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F6DE58C(319, qword_256EA3B90, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
  if (v0 <= 0x3F)
  {
    sub_23FB2D718();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ContextProtoQueryDecorationInput(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v6 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v6;
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
    *(_QWORD *)(a1 + 88) = a2[11];
    v7 = *(int *)(a3 + 52);
    v8 = (uint64_t)a2 + v7;
    v9 = a1 + v7;
    *(_WORD *)(a1 + 96) = *((_WORD *)a2 + 48);
    v10 = sub_23FB2D718();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v9, v8, v10);
  }
  return v3;
}

uint64_t destroy for ContextProtoQueryDecorationInput(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 52);
  v5 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for ContextProtoQueryDecorationInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v6 = *(int *)(a3 + 52);
  v7 = a2 + v6;
  v8 = a1 + v6;
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  v9 = sub_23FB2D718();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v8, v7, v9);
  return a1;
}

uint64_t assignWithCopy for ContextProtoQueryDecorationInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v7;
  v8 = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v8;
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  v9 = *(int *)(a3 + 52);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t initializeWithTake for ContextProtoQueryDecorationInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v4 = *(int *)(a3 + 52);
  v5 = a2 + v4;
  v6 = a1 + v4;
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  v7 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v6, v5, v7);
  return a1;
}

uint64_t assignWithTake for ContextProtoQueryDecorationInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v8 = *(_WORD *)(a2 + 96);
  v9 = *(int *)(a3 + 52);
  v10 = a2 + v9;
  v11 = a1 + v9;
  *(_WORD *)(a1 + 96) = v8;
  v12 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v11, v10, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoQueryDecorationInput()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F6E8E60()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F08A0();
  if (v2)
  {
    sub_23F6F083C(*(_QWORD *)(v0 + 8));
    sub_23F694C84();
  }
  else
  {
    v3 = v1;
    sub_23F6B53A4();
    v4 = sub_23F6F08CC(*(int *)(v3 + 52));
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoQueryDecorationInput()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F6E8EB4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F0850();
  if (v1)
  {
    sub_23F6F0B1C();
    sub_23F694C84();
  }
  else
  {
    v2 = v0;
    sub_23F6B53A4();
    v3 = sub_23F6F082C(*(int *)(v2 + 52));
    sub_23F6F07C4(v3, v4, v5, v6);
  }
}

uint64_t sub_23F6E8EF4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FB2D718();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoDynamicEnumerationEntity(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FB2EB28();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA2E00);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v14 = a3[6];
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_23FB2EB1C();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, v17))
    {
      v18 = sub_23F6916B8(&qword_256EA2610);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v15, 0, 1, v17);
    }
    v19 = a3[7];
    v20 = (char *)v4 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  }
  return v4;
}

uint64_t destroy for ContextProtoDynamicEnumerationEntity(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_23FB2EB28();
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[6];
  v7 = sub_23FB2EB1C();
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v6, 1, v7))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[7];
  v9 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *initializeWithCopy for ContextProtoDynamicEnumerationEntity(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23FB2EB28();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F6916B8(&qword_256EA2E00);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_23FB2EB1C();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v15))
  {
    v16 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v13, 0, 1, v15);
  }
  v17 = a3[7];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

_QWORD *assignWithCopy for ContextProtoDynamicEnumerationEntity(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2EB28();
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = sub_23F6916B8(&qword_256EA2E00);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  v14 = a3[6];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_23FB2EB1C();
  v18 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, v17);
  v19 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, v17);
  if (!v18)
  {
    v20 = *(_QWORD *)(v17 - 8);
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v15, v16, v17);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v17);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v21 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v15, 0, 1, v17);
LABEL_13:
  v22 = a3[7];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  return a1;
}

_OWORD *initializeWithTake for ContextProtoDynamicEnumerationEntity(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2EB28();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA2E00);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_23FB2EB1C();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v14))
  {
    v15 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v12, 0, 1, v14);
  }
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

_QWORD *assignWithTake for ContextProtoDynamicEnumerationEntity(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23FB2EB28();
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v10);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v13 = *(_QWORD *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    v14 = sub_23F6916B8(&qword_256EA2E00);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  v15 = a3[6];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_23FB2EB1C();
  v19 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, v18);
  v20 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v18);
  if (!v19)
  {
    v21 = *(_QWORD *)(v18 - 8);
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v16, v17, v18);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    v22 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v18);
LABEL_13:
  v23 = a3[7];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoDynamicEnumerationEntity()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F6E9908()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F08A0();
  if (v1)
  {
    sub_23F6F083C(*(_QWORD *)(v0 + 8));
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A1C();
    sub_23F6916B8(&qword_256EA2E00);
    sub_23F6F07DC();
    if (v1)
    {
      sub_23F6F0B94();
    }
    else
    {
      sub_23F6916B8(&qword_256EA2610);
      sub_23F6F07DC();
      if (v3)
      {
        sub_23F6F0B08();
      }
      else
      {
        sub_23F6B53A4();
        sub_23F6F0AFC();
      }
    }
    v4 = sub_23F6F08CC(v2);
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoDynamicEnumerationEntity()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F6E998C()
{
  char v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F0850();
  if (v0)
  {
    sub_23F6F0B1C();
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A10();
    sub_23F6916B8(&qword_256EA2E00);
    sub_23F6F07EC();
    if (v0)
    {
      sub_23F6F0BC4();
    }
    else
    {
      sub_23F6916B8(&qword_256EA2610);
      sub_23F6F07EC();
      if (v2)
      {
        sub_23F6F0BD0();
      }
      else
      {
        sub_23F6B53A4();
        sub_23F6F0BB8();
      }
    }
    v3 = sub_23F6F082C(v1);
    sub_23F6F07C4(v3, v4, v5, v6);
  }
}

void sub_23F6E9A00()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23F6DE58C(319, qword_256EA3D28, (void (*)(uint64_t))MEMORY[0x24BEB95D8]);
  if (v0 <= 0x3F)
  {
    sub_23F6DE58C(319, &qword_256EA33B0, (void (*)(uint64_t))MEMORY[0x24BEB95B0]);
    if (v1 <= 0x3F)
    {
      sub_23FB2D718();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ContextProtoRetrievedTool(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v7 = *(int *)(a3 + 28);
    v8 = (char *)(a1 + v7);
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
    {
      v11 = sub_23F6916B8(&qword_256EA2588);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      v13 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v13))
      {
        v15 = (char *)&loc_23F6E9BFC + 4 * byte_23FB4F24C[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v14 = sub_23F6916B8(&qword_256EA2578);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      v16 = *(int *)(v10 + 20);
      v17 = &v8[v16];
      v18 = &v9[v16];
      v19 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
    }
    v20 = *(int *)(a3 + 32);
    v21 = (char *)v4 + v20;
    v22 = (uint64_t)a2 + v20;
    v23 = sub_23FB2D718();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return v4;
}

uint64_t destroy for ContextProtoRetrievedTool(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
  {
    v6 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v6))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 2u:
        case 3u:
          v7 = sub_23FB2EBC4();
          goto LABEL_6;
        case 1u:
          v7 = sub_23FB2EB94();
LABEL_6:
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
          break;
        default:
          break;
      }
    }
    v8 = v4 + *(int *)(v5 + 20);
    v9 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  v10 = a1 + *(int *)(a2 + 32);
  v11 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
}

uint64_t initializeWithCopy for ContextProtoRetrievedTool(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 28);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA2588);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v11))
    {
      v13 = (char *)&loc_23F6E9EF4 + 4 * byte_23FB4F254[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v12 = sub_23F6916B8(&qword_256EA2578);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    v14 = *(int *)(v9 + 20);
    v15 = &v7[v14];
    v16 = &v8[v14];
    v17 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v18 = *(int *)(a3 + 32);
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  return a1;
}

uint64_t assignWithCopy for ContextProtoRetrievedTool(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 28);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (v11)
    {
      sub_23F6D8A80((uint64_t)v7, type metadata accessor for ContextProtoRetrievedTool.Definition);
      goto LABEL_7;
    }
    v15 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v15);
    v17 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v15);
    if (v16)
    {
      if (!v17)
      {
        v18 = (char *)&loc_23F6EA13C + 4 * byte_23FB4F25C[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v17)
      {
        if (a1 != a2)
        {
          sub_23F6D8A80((uint64_t)v7, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
          v25 = (char *)&loc_23F6EA280 + 4 * byte_23FB4F260[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_17;
      }
      sub_23F6D8A80((uint64_t)v7, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    }
    v20 = sub_23F6916B8(&qword_256EA2578);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
LABEL_17:
    v26 = *(int *)(v9 + 20);
    v27 = &v7[v26];
    v28 = &v8[v26];
    v29 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v27, v28, v29);
    goto LABEL_18;
  }
  if (v11)
  {
LABEL_7:
    v14 = sub_23F6916B8(&qword_256EA2588);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_18;
  }
  v12 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v12))
  {
    v19 = (char *)&loc_23F6EA174 + 4 * byte_23FB4F258[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v13 = sub_23F6916B8(&qword_256EA2578);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  v21 = *(int *)(v9 + 20);
  v22 = &v7[v21];
  v23 = &v8[v21];
  v24 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_18:
  v30 = *(int *)(a3 + 32);
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v31, v32, v33);
  return a1;
}

uint64_t initializeWithTake for ContextProtoRetrievedTool(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 28);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA2588);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v11))
    {
      v13 = (char *)&loc_23F6EA4F8 + 4 * byte_23FB4F264[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v12 = sub_23F6916B8(&qword_256EA2578);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    v14 = *(int *)(v9 + 20);
    v15 = &v7[v14];
    v16 = &v8[v14];
    v17 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v18 = *(int *)(a3 + 32);
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
  return a1;
}

uint64_t assignWithTake for ContextProtoRetrievedTool(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 28);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (v11)
    {
      sub_23F6D8A80((uint64_t)v7, type metadata accessor for ContextProtoRetrievedTool.Definition);
      goto LABEL_7;
    }
    v15 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v15);
    v17 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v15);
    if (v16)
    {
      if (!v17)
      {
        v18 = (char *)&loc_23F6EA738 + 4 * byte_23FB4F26C[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v17)
      {
        if (a1 != a2)
        {
          sub_23F6D8A80((uint64_t)v7, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
          v25 = (char *)&loc_23F6EA87C + 4 * byte_23FB4F270[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_17;
      }
      sub_23F6D8A80((uint64_t)v7, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    }
    v20 = sub_23F6916B8(&qword_256EA2578);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
LABEL_17:
    v26 = *(int *)(v9 + 20);
    v27 = &v7[v26];
    v28 = &v8[v26];
    v29 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v27, v28, v29);
    goto LABEL_18;
  }
  if (v11)
  {
LABEL_7:
    v14 = sub_23F6916B8(&qword_256EA2588);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_18;
  }
  v12 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v12))
  {
    v19 = (char *)&loc_23F6EA770 + 4 * byte_23FB4F268[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v13 = sub_23F6916B8(&qword_256EA2578);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  v21 = *(int *)(v9 + 20);
  v22 = &v7[v21];
  v23 = &v8[v21];
  v24 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_18:
  v30 = *(int *)(a3 + 32);
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 40))(v31, v32, v33);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoRetrievedTool()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F6EAA04()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F08A0();
  if (v2)
  {
    sub_23F6F083C(*(_QWORD *)(v0 + 8));
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A1C();
    sub_23F6916B8(&qword_256EA2588);
    sub_23F6F07DC();
    if (v2)
    {
      sub_23F6F0AFC();
    }
    else
    {
      sub_23F6B53A4();
      v3 = *(int *)(v1 + 32);
    }
    v4 = sub_23F6F08CC(v3);
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoRetrievedTool()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F6EAA70()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F0850();
  if (v1)
  {
    sub_23F6F0B1C();
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A10();
    sub_23F6916B8(&qword_256EA2588);
    sub_23F6F07EC();
    if (v1)
    {
      sub_23F6F0BB8();
    }
    else
    {
      sub_23F6B53A4();
      v2 = *(int *)(v0 + 32);
    }
    v3 = sub_23F6F082C(v2);
    sub_23F6F07C4(v3, v4, v5, v6);
  }
}

void sub_23F6EAACC()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F6DE58C(319, qword_256EA3DC8, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool.Definition);
  if (v0 <= 0x3F)
  {
    sub_23FB2D718();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t _s30IntelligenceFlowPlannerSupport28ContextProtoConfidenceBucketOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23F6EABD4 + 4 * byte_23FB4F279[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23F6EAC08 + 4 * byte_23FB4F274[v4]))();
}

uint64_t sub_23F6EAC08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F6EAC10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F6EAC18);
  return result;
}

uint64_t sub_23F6EAC24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F6EAC2CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23F6EAC30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F6EAC38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ContextProtoRetrievedTool.Stage()
{
  sub_23F694C70();
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoRetrievedTool.Definition(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v10 = (char *)&loc_23F6EAD0C + 4 * byte_23FB4F27E[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v8 = sub_23F6916B8(&qword_256EA2578);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t destroy for ContextProtoRetrievedTool.Definition(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 2u:
      case 3u:
        v5 = sub_23FB2EBC4();
        goto LABEL_5;
      case 1u:
        v5 = sub_23FB2EB94();
LABEL_5:
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
        break;
      default:
        break;
    }
  }
  v6 = a1 + *(int *)(a2 + 20);
  v7 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

char *initializeWithCopy for ContextProtoRetrievedTool.Definition(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v8 = (char *)&loc_23F6EAEF0 + 4 * byte_23FB4F286[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = sub_23F6916B8(&qword_256EA2578);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

char *assignWithCopy for ContextProtoRetrievedTool.Definition(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = (char *)&loc_23F6EB008 + 4 * byte_23FB4F28A[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_23F6D8A80((uint64_t)a1, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
LABEL_6:
    v10 = sub_23F6916B8(&qword_256EA2578);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_23F6D8A80((uint64_t)a1, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    v11 = (char *)&loc_23F6EB08C + 4 * byte_23FB4F28E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

char *initializeWithTake for ContextProtoRetrievedTool.Definition(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v8 = (char *)&loc_23F6EB268 + 4 * byte_23FB4F292[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = sub_23F6916B8(&qword_256EA2578);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *assignWithTake for ContextProtoRetrievedTool.Definition(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = (char *)&loc_23F6EB380 + 4 * byte_23FB4F296[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_23F6D8A80((uint64_t)a1, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
LABEL_6:
    v10 = sub_23F6916B8(&qword_256EA2578);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_23F6D8A80((uint64_t)a1, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    v11 = (char *)&loc_23F6EB404 + 4 * byte_23FB4F29A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoRetrievedTool.Definition()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F6EB55C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F6ED9F0(a1, a2, a3);
}

uint64_t storeEnumTagSinglePayload for ContextProtoRetrievedTool.Definition()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F6EB574()
{
  return sub_23F6EDA58();
}

void sub_23F6EB580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F6EDAC0(a1, a2, a3, qword_256EA3E70, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
}

uint64_t initializeBufferWithCopyOfBuffer for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_23F6EB5E4 + 4 * byte_23FB4F29E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 2:
    case 3:
      v3 = sub_23FB2EBC4();
      goto LABEL_4;
    case 1:
      v3 = sub_23FB2EB94();
LABEL_4:
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for ContextProtoRetrievedTool.ContextProtoDefinitionEnum()
{
  char *v0;

  v0 = (char *)sub_23F6EB794 + 4 * byte_23FB4F2A6[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23F6EB794()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23FB2EBC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v1, v2);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F6D8A80(result, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    v2 = (char *)&loc_23F6EB844 + 4 * byte_23FB4F2AA[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void initializeWithTake for ContextProtoRetrievedTool.ContextProtoDefinitionEnum()
{
  char *v0;

  v0 = (char *)sub_23F6EB8DC + 4 * byte_23FB4F2AE[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23F6EB8DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23FB2EBC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v0, v1, v2);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithTake for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F6D8A80(result, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    v2 = (char *)&loc_23F6EB98C + 4 * byte_23FB4F2B2[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_23F6EB9E8()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23F6EB9F8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23FB2EBC4();
  if (v1 <= 0x3F)
  {
    result = sub_23FB2EB94();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ContextProtoSampleInvocation(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    v6 = *(int *)(a3 + 24);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_23FB2D718();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for ContextProtoSampleInvocation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for ContextProtoSampleInvocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_23FB2D718();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for ContextProtoSampleInvocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for ContextProtoSampleInvocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for ContextProtoSampleInvocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoSampleInvocation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ContextProtoSampleInvocation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F6EBD5C()
{
  sub_23F6ECB8C();
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoToolRetrievalType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FB2EB40();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EA2E58);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v10 = *(int *)(a3 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_23FB2EB34();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13))
    {
      v14 = sub_23F6916B8(&qword_256EA2E48);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v11, 0, 1, v13);
    }
    v15 = *(int *)(a3 + 24);
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  }
  return a1;
}

uint64_t destroy for ContextProtoToolRetrievalType(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_23FB2EB40();
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_23FB2EB34();
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v5, 1, v6))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  v8 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

char *initializeWithCopy for ContextProtoToolRetrievalType(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = sub_23FB2EB40();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA2E58);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_23FB2EB34();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F6916B8(&qword_256EA2E48);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
  }
  v13 = *(int *)(a3 + 24);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

char *assignWithCopy for ContextProtoToolRetrievalType(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v6 = sub_23FB2EB40();
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = sub_23F6916B8(&qword_256EA2E58);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  v11 = *(int *)(a3 + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_23FB2EB34();
  v15 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v14);
  v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v14);
  if (!v15)
  {
    v17 = *(_QWORD *)(v14 - 8);
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v12, v13, v14);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v14);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    v18 = sub_23F6916B8(&qword_256EA2E48);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v12, 0, 1, v14);
LABEL_13:
  v19 = *(int *)(a3 + 24);
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

char *initializeWithTake for ContextProtoToolRetrievalType(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = sub_23FB2EB40();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA2E58);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_23FB2EB34();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F6916B8(&qword_256EA2E48);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
  }
  v13 = *(int *)(a3 + 24);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

char *assignWithTake for ContextProtoToolRetrievalType(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v6 = sub_23FB2EB40();
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = sub_23F6916B8(&qword_256EA2E58);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  v11 = *(int *)(a3 + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_23FB2EB34();
  v15 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v14);
  v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v14);
  if (!v15)
  {
    v17 = *(_QWORD *)(v14 - 8);
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 40))(v12, v13, v14);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v14);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    v18 = sub_23F6916B8(&qword_256EA2E48);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v12, 0, 1, v14);
LABEL_13:
  v19 = *(int *)(a3 + 24);
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoToolRetrievalType()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F6EC624()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  sub_23F6B6B7C();
  sub_23F6916B8(&qword_256EA2E58);
  sub_23F6F07DC();
  if (v5)
  {
    v3 = v2;
    v4 = v1;
  }
  else
  {
    sub_23F6916B8(&qword_256EA2E48);
    sub_23F6F07DC();
    if (v5)
    {
      sub_23F6F0B94();
    }
    else
    {
      sub_23F6B53A4();
      sub_23F6F0B08();
    }
    v4 = v1 + v6;
  }
  return sub_23F6F07D0(v4, v0, v3);
}

uint64_t storeEnumTagSinglePayload for ContextProtoToolRetrievalType()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F6EC69C()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F6B6B7C();
  sub_23F6916B8(&qword_256EA2E58);
  sub_23F6F07EC();
  if (!v0)
  {
    sub_23F6916B8(&qword_256EA2E48);
    sub_23F6F07EC();
    if (v0)
    {
      sub_23F6F0BC4();
    }
    else
    {
      sub_23F6B53A4();
      sub_23F6F0BD0();
    }
  }
  sub_23F6F08B0();
  return sub_23F6F07C4(v1, v2, v3, v4);
}

void sub_23F6EC70C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23F6DE58C(319, &qword_256EA4048, (void (*)(uint64_t))MEMORY[0x24BEB9618]);
  if (v0 <= 0x3F)
  {
    sub_23F6DE58C(319, qword_256EA4050, (void (*)(uint64_t))MEMORY[0x24BEB95F8]);
    if (v1 <= 0x3F)
    {
      sub_23FB2D718();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoToolQuery(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    v6 = *(int *)(a3 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_23FB2D718();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for ContextProtoToolQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for ContextProtoToolQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_23FB2D718();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for ContextProtoToolQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for ContextProtoToolQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for ContextProtoToolQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoToolQuery()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F6ECADC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F08A0();
  if (v2)
  {
    sub_23F6F083C(*(_QWORD *)(v0 + 8));
    sub_23F694C84();
  }
  else
  {
    v3 = v1;
    sub_23F6B53A4();
    v4 = sub_23F6F08CC(*(int *)(v3 + 24));
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoToolQuery()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F6ECB34()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F0850();
  if (v1)
  {
    sub_23F6F0B1C();
    sub_23F694C84();
  }
  else
  {
    v2 = v0;
    sub_23F6B53A4();
    v3 = sub_23F6F082C(*(int *)(v2 + 24));
    sub_23F6F07C4(v3, v4, v5, v6);
  }
}

void sub_23F6ECB74()
{
  sub_23F6ECB8C();
}

void sub_23F6ECB8C()
{
  unint64_t v0;

  sub_23F6F0B14();
  if (v0 <= 0x3F)
  {
    sub_23F6F0978();
    sub_23F6F0BFC();
  }
  sub_23F6B6BFC();
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoToolQueryOutput(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EA2588);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v10 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v10))
      {
        v12 = (char *)&loc_23F6ECCC8 + 4 * byte_23FB4F2B6[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v11 = sub_23F6916B8(&qword_256EA2578);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      v13 = *(int *)(v7 + 20);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v17 = *(int *)(a3 + 20);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  }
  return a1;
}

uint64_t destroy for ContextProtoToolQueryOutput(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    v5 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v5))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 2u:
        case 3u:
          v6 = sub_23FB2EBC4();
          goto LABEL_6;
        case 1u:
          v6 = sub_23FB2EB94();
LABEL_6:
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
          break;
        default:
          break;
      }
    }
    v7 = a1 + *(int *)(v4 + 20);
    v8 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  v9 = a1 + *(int *)(a2 + 20);
  v10 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

char *initializeWithCopy for ContextProtoToolQueryOutput(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA2588);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v8))
    {
      v10 = (char *)&loc_23F6ECF74 + 4 * byte_23FB4F2BE[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v9 = sub_23F6916B8(&qword_256EA2578);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    v11 = *(int *)(v6 + 20);
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v15 = *(int *)(a3 + 20);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

char *assignWithCopy for ContextProtoToolQueryOutput(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v6 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_23F6D8A80((uint64_t)a1, type metadata accessor for ContextProtoRetrievedTool.Definition);
      goto LABEL_7;
    }
    v12 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    v13 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v12);
    v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v12);
    if (v13)
    {
      if (!v14)
      {
        v15 = (char *)&loc_23F6ED180 + 4 * byte_23FB4F2C6[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v14)
      {
        if (a1 != a2)
        {
          sub_23F6D8A80((uint64_t)a1, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
          v22 = (char *)&loc_23F6ED2C4 + 4 * byte_23FB4F2CA[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_17;
      }
      sub_23F6D8A80((uint64_t)a1, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    }
    v17 = sub_23F6916B8(&qword_256EA2578);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
LABEL_17:
    v23 = *(int *)(v6 + 20);
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
    goto LABEL_18;
  }
  if (v8)
  {
LABEL_7:
    v11 = sub_23F6916B8(&qword_256EA2588);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_18;
  }
  v9 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v9))
  {
    v16 = (char *)&loc_23F6ED1B8 + 4 * byte_23FB4F2C2[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v10 = sub_23F6916B8(&qword_256EA2578);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  v18 = *(int *)(v6 + 20);
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_18:
  v27 = *(int *)(a3 + 20);
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  return a1;
}

char *initializeWithTake for ContextProtoToolQueryOutput(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA2588);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v8))
    {
      v10 = (char *)&loc_23F6ED510 + 4 * byte_23FB4F2CE[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v9 = sub_23F6916B8(&qword_256EA2578);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    v11 = *(int *)(v6 + 20);
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v15 = *(int *)(a3 + 20);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

char *assignWithTake for ContextProtoToolQueryOutput(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v6 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_23F6D8A80((uint64_t)a1, type metadata accessor for ContextProtoRetrievedTool.Definition);
      goto LABEL_7;
    }
    v12 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    v13 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v12);
    v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v12);
    if (v13)
    {
      if (!v14)
      {
        v15 = (char *)&loc_23F6ED71C + 4 * byte_23FB4F2D6[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v14)
      {
        if (a1 != a2)
        {
          sub_23F6D8A80((uint64_t)a1, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
          v22 = (char *)&loc_23F6ED860 + 4 * byte_23FB4F2DA[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_17;
      }
      sub_23F6D8A80((uint64_t)a1, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    }
    v17 = sub_23F6916B8(&qword_256EA2578);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
LABEL_17:
    v23 = *(int *)(v6 + 20);
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
    goto LABEL_18;
  }
  if (v8)
  {
LABEL_7:
    v11 = sub_23F6916B8(&qword_256EA2588);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_18;
  }
  v9 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v9))
  {
    v16 = (char *)&loc_23F6ED754 + 4 * byte_23FB4F2D2[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v10 = sub_23F6916B8(&qword_256EA2578);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  v18 = *(int *)(v6 + 20);
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_18:
  v27 = *(int *)(a3 + 20);
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoToolQueryOutput()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F6ED9E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F6ED9F0(a1, a2, a3);
}

uint64_t sub_23F6ED9F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F6B6B7C();
  sub_23F6916B8(v6);
  sub_23F6F07DC();
  if (v8)
  {
    v9 = v7;
    v10 = v4;
  }
  else
  {
    v9 = sub_23F6B53A4();
    v10 = v4 + *(int *)(a3 + 20);
  }
  return sub_23F6F07D0(v10, v3, v9);
}

uint64_t storeEnumTagSinglePayload for ContextProtoToolQueryOutput()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F6EDA4C()
{
  return sub_23F6EDA58();
}

uint64_t sub_23F6EDA58()
{
  uint64_t *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6B6B7C();
  sub_23F6916B8(v0);
  sub_23F6F07EC();
  if (!v1)
    sub_23F6B53A4();
  sub_23F6F08B0();
  return sub_23F6F07C4(v2, v3, v4, v5);
}

void sub_23F6EDAAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F6EDAC0(a1, a2, a3, qword_256EA3DC8, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool.Definition);
}

void sub_23F6EDAC0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  unint64_t v5;
  unint64_t v6;

  sub_23F6DE58C(319, a4, a5);
  if (v5 <= 0x3F)
  {
    sub_23F6F0B88();
    sub_23F6F0B14();
    if (v6 <= 0x3F)
    {
      sub_23F6F0B88();
      swift_initStructMetadata();
      sub_23F6F0BFC();
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ContextProtoQueryDecorationToolRetrievalResponse(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 8);
    v7 = a2[6];
    v8 = *(int *)(a3 + 36);
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v7;
    v11 = sub_23FB2D718();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
  }
  return v3;
}

uint64_t destroy for ContextProtoQueryDecorationToolRetrievalResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for ContextProtoQueryDecorationToolRetrievalResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 48);
  v7 = *(int *)(a3 + 36);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  v10 = sub_23FB2D718();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for ContextProtoQueryDecorationToolRetrievalResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 36);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for ContextProtoQueryDecorationToolRetrievalResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(int *)(a3 + 36);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ContextProtoQueryDecorationToolRetrievalResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 36);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoQueryDecorationToolRetrievalResponse()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F6EDF18()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F08A0();
  if (v2)
  {
    sub_23F6F083C(*(_QWORD *)(v0 + 8));
    sub_23F694C84();
  }
  else
  {
    v3 = v1;
    sub_23F6B53A4();
    v4 = sub_23F6F08CC(*(int *)(v3 + 36));
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoQueryDecorationToolRetrievalResponse()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F6EDF6C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F0850();
  if (v1)
  {
    sub_23F6F0B1C();
    sub_23F694C84();
  }
  else
  {
    v2 = v0;
    sub_23F6B53A4();
    v3 = sub_23F6F082C(*(int *)(v2 + 36));
    sub_23F6F07C4(v3, v4, v5, v6);
  }
}

uint64_t sub_23F6EDFAC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FB2D718();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoSpanMatchedEntity(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FB2EB1C();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA2610);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v13 = *(int *)(a3 + 24);
    v14 = (char *)v7 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return v7;
}

uint64_t destroy for ContextProtoSpanMatchedEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23FB2EB1C();
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

_QWORD *initializeWithCopy for ContextProtoSpanMatchedEntity(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2EB1C();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

_QWORD *assignWithCopy for ContextProtoSpanMatchedEntity(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2EB1C();
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v14 = *(int *)(a3 + 24);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

_QWORD *initializeWithTake for ContextProtoSpanMatchedEntity(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2EB1C();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

_QWORD *assignWithTake for ContextProtoSpanMatchedEntity(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2EB1C();
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v14 = *(int *)(a3 + 24);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoSpanMatchedEntity()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F6EE660()
{
  unint64_t *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6F08A0();
  if (v1)
  {
    sub_23F6F083C(*v0);
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A1C();
    sub_23F6916B8(&qword_256EA2610);
    sub_23F6F07DC();
    if (v1)
    {
      sub_23F6F0B94();
    }
    else
    {
      sub_23F6B53A4();
      sub_23F6F0B08();
    }
    v3 = sub_23F6F08CC(v2);
    sub_23F6F07D0(v3, v4, v5);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoSpanMatchedEntity()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F6EE6C8()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6F0850();
  if (v0)
  {
    sub_23F6F0B28();
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A10();
    sub_23F6916B8(&qword_256EA2610);
    sub_23F6F07EC();
    if (v0)
    {
      sub_23F6F0BC4();
    }
    else
    {
      sub_23F6B53A4();
      sub_23F6F0BD0();
    }
    v2 = sub_23F6F082C(v1);
    sub_23F6F07C4(v2, v3, v4, v5);
  }
}

void sub_23F6EE720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F6EE740(a1, a2, a3, MEMORY[0x24BEE0158] + 64, &qword_256EA33B0, (void (*)(uint64_t))MEMORY[0x24BEB95B0]);
}

void sub_23F6EE740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  unint64_t v6;
  unint64_t v7;

  sub_23F6DE58C(319, a5, a6);
  if (v6 <= 0x3F)
  {
    sub_23F6F0B88();
    sub_23F6F0B14();
    if (v7 <= 0x3F)
    {
      sub_23F6F0978();
      sub_23F6F0BFC();
    }
  }
  sub_23F6B6BFC();
}

_QWORD *initializeBufferWithCopyOfBuffer for ContextProtoEntityMatch(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t matched;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  char *v40;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
    *(_BYTE *)(a1 + 52) = *((_BYTE *)a2 + 52);
    v9 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v9;
    v10 = a2[10];
    v11 = a3[12];
    v12 = (_QWORD *)(a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_QWORD *)(a1 + 80) = v10;
    matched = type metadata accessor for ContextProtoMatchProperties(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, matched))
    {
      v15 = sub_23F6916B8(&qword_256EA2EB8);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      *v12 = *v13;
      *((_BYTE *)v12 + 8) = *((_BYTE *)v13 + 8);
      v12[2] = v13[2];
      *((_BYTE *)v12 + 24) = *((_BYTE *)v13 + 24);
      v17 = *(int *)(matched + 24);
      v18 = (_QWORD *)((char *)v12 + v17);
      v19 = (_QWORD *)((char *)v13 + v17);
      v20 = type metadata accessor for ContextProtoAliasTypes(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, v20))
      {
        v21 = sub_23F6916B8(&qword_256EA2ED0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        *v18 = *v19;
        v22 = *(int *)(v20 + 20);
        v39 = (char *)v19 + v22;
        v40 = (char *)v18 + v22;
        v23 = sub_23FB2D718();
        v38 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        v38(v40, v39, v23);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v18, 0, 1, v20);
      }
      v24 = *(int *)(matched + 28);
      v25 = (char *)v12 + v24;
      v26 = (char *)v13 + v24;
      v27 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v12, 0, 1, matched);
    }
    v28 = a3[13];
    v29 = a3[14];
    v30 = (_QWORD *)((char *)v4 + v28);
    v31 = (uint64_t *)((char *)a2 + v28);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    v33 = (char *)v4 + v29;
    v34 = (uint64_t)a2 + v29;
    v35 = sub_23FB2D718();
    v36 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
    swift_bridgeObjectRetain();
    v36(v33, v34, v35);
  }
  return v4;
}

uint64_t destroy for ContextProtoEntityMatch(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t matched;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 48);
  matched = type metadata accessor for ContextProtoMatchProperties(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, matched))
  {
    v6 = v4 + *(int *)(matched + 24);
    v7 = type metadata accessor for ContextProtoAliasTypes(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v6, 1, v7))
    {
      swift_bridgeObjectRelease();
      v8 = v6 + *(int *)(v7 + 20);
      v9 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    }
    v10 = v4 + *(int *)(matched + 28);
    v11 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  swift_bridgeObjectRelease();
  v12 = a1 + *(int *)(a2 + 56);
  v13 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
}

uint64_t initializeWithCopy for ContextProtoEntityMatch(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t matched;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  char *v38;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 52);
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  v9 = *(_QWORD *)(a2 + 80);
  v10 = a3[12];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v9;
  matched = type metadata accessor for ContextProtoMatchProperties(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, matched))
  {
    v14 = sub_23F6916B8(&qword_256EA2EB8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    *v11 = *v12;
    *((_BYTE *)v11 + 8) = *((_BYTE *)v12 + 8);
    v11[2] = v12[2];
    *((_BYTE *)v11 + 24) = *((_BYTE *)v12 + 24);
    v15 = *(int *)(matched + 24);
    v16 = (_QWORD *)((char *)v11 + v15);
    v17 = (_QWORD *)((char *)v12 + v15);
    v18 = type metadata accessor for ContextProtoAliasTypes(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v18))
    {
      v19 = sub_23F6916B8(&qword_256EA2ED0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      *v16 = *v17;
      v20 = *(int *)(v18 + 20);
      v37 = (char *)v17 + v20;
      v38 = (char *)v16 + v20;
      v21 = sub_23FB2D718();
      v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
      swift_bridgeObjectRetain();
      v36(v38, v37, v21);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v18);
    }
    v22 = *(int *)(matched + 28);
    v23 = (char *)v11 + v22;
    v24 = (char *)v12 + v22;
    v25 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v11, 0, 1, matched);
  }
  v26 = a3[13];
  v27 = a3[14];
  v28 = (_QWORD *)(a1 + v26);
  v29 = (_QWORD *)(a2 + v26);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = a1 + v27;
  v32 = a2 + v27;
  v33 = sub_23FB2D718();
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
  swift_bridgeObjectRetain();
  v34(v31, v32, v33);
  return a1;
}

uint64_t assignWithCopy for ContextProtoEntityMatch(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t matched;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  void (*v54)(char *, char *, uint64_t);
  char *v55;
  char *v56;
  char *v57;
  char *v58;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 52);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[12];
  v7 = a1 + v6;
  v8 = a2 + v6;
  matched = type metadata accessor for ContextProtoMatchProperties(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, matched);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, matched);
  if (!v10)
  {
    if (v11)
    {
      sub_23F6D8A80(v7, type metadata accessor for ContextProtoMatchProperties);
      goto LABEL_7;
    }
    v20 = *(_QWORD *)v8;
    *(_BYTE *)(v7 + 8) = *(_BYTE *)(v8 + 8);
    *(_QWORD *)v7 = v20;
    v21 = *(_QWORD *)(v8 + 16);
    *(_BYTE *)(v7 + 24) = *(_BYTE *)(v8 + 24);
    *(_QWORD *)(v7 + 16) = v21;
    v22 = *(int *)(matched + 24);
    v23 = (_QWORD *)(v7 + v22);
    v24 = (_QWORD *)(v8 + v22);
    v25 = type metadata accessor for ContextProtoAliasTypes(0);
    v26 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v23, 1, v25);
    v27 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v24, 1, v25);
    if (v26)
    {
      if (!v27)
      {
        *v23 = *v24;
        v28 = *(int *)(v25 + 20);
        v55 = (char *)v24 + v28;
        v57 = (char *)v23 + v28;
        v29 = sub_23FB2D718();
        v53 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
        swift_bridgeObjectRetain();
        v53(v57, v55, v29);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v23, 0, 1, v25);
LABEL_16:
        v37 = *(int *)(matched + 28);
        v38 = v7 + v37;
        v39 = v8 + v37;
        v40 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 24))(v38, v39, v40);
        goto LABEL_17;
      }
    }
    else
    {
      if (!v27)
      {
        *v23 = *v24;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v49 = *(int *)(v25 + 20);
        v50 = (char *)v23 + v49;
        v51 = (char *)v24 + v49;
        v52 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 24))(v50, v51, v52);
        goto LABEL_16;
      }
      sub_23F6D8A80((uint64_t)v23, type metadata accessor for ContextProtoAliasTypes);
    }
    v36 = sub_23F6916B8(&qword_256EA2ED0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_16;
  }
  if (v11)
  {
LABEL_7:
    v19 = sub_23F6916B8(&qword_256EA2EB8);
    memcpy((void *)v7, (const void *)v8, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_17;
  }
  v12 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = v12;
  v13 = *(_QWORD *)(v8 + 16);
  *(_BYTE *)(v7 + 24) = *(_BYTE *)(v8 + 24);
  *(_QWORD *)(v7 + 16) = v13;
  v14 = *(int *)(matched + 24);
  v15 = (_QWORD *)(v7 + v14);
  v16 = (_QWORD *)(v8 + v14);
  v17 = type metadata accessor for ContextProtoAliasTypes(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, v17))
  {
    v18 = sub_23F6916B8(&qword_256EA2ED0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    *v15 = *v16;
    v30 = *(int *)(v17 + 20);
    v56 = (char *)v16 + v30;
    v58 = (char *)v15 + v30;
    v31 = sub_23FB2D718();
    v54 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
    swift_bridgeObjectRetain();
    v54(v58, v56, v31);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v15, 0, 1, v17);
  }
  v32 = *(int *)(matched + 28);
  v33 = v7 + v32;
  v34 = v8 + v32;
  v35 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v7, 0, 1, matched);
LABEL_17:
  v41 = a3[13];
  v42 = (_QWORD *)(a1 + v41);
  v43 = (_QWORD *)(a2 + v41);
  *v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v44 = a3[14];
  v45 = a1 + v44;
  v46 = a2 + v44;
  v47 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 24))(v45, v46, v47);
  return a1;
}

uint64_t initializeWithTake for ContextProtoEntityMatch(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t matched;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 52);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v7 = a3[12];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  matched = type metadata accessor for ContextProtoMatchProperties(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, matched))
  {
    v11 = sub_23F6916B8(&qword_256EA2EB8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v8 = *v9;
    *((_BYTE *)v8 + 8) = *((_BYTE *)v9 + 8);
    v8[2] = v9[2];
    *((_BYTE *)v8 + 24) = *((_BYTE *)v9 + 24);
    v12 = *(int *)(matched + 24);
    v13 = (_QWORD *)((char *)v8 + v12);
    v14 = (_QWORD *)((char *)v9 + v12);
    v15 = type metadata accessor for ContextProtoAliasTypes(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v15))
    {
      v16 = sub_23F6916B8(&qword_256EA2ED0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      *v13 = *v14;
      v17 = *(int *)(v15 + 20);
      v18 = (char *)v13 + v17;
      v19 = (char *)v14 + v17;
      v20 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v13, 0, 1, v15);
    }
    v21 = *(int *)(matched + 28);
    v22 = (char *)v8 + v21;
    v23 = (char *)v9 + v21;
    v24 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, matched);
  }
  v25 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
  return a1;
}

uint64_t assignWithTake for ContextProtoEntityMatch(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t matched;
  int v14;
  int v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 52);
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v9;
  swift_bridgeObjectRelease();
  v10 = a3[12];
  v11 = a1 + v10;
  v12 = a2 + v10;
  matched = type metadata accessor for ContextProtoMatchProperties(0);
  v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v11, 1, matched);
  v15 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v12, 1, matched);
  if (!v14)
  {
    if (v15)
    {
      sub_23F6D8A80(v11, type metadata accessor for ContextProtoMatchProperties);
      goto LABEL_7;
    }
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
    *(_QWORD *)(v11 + 16) = *(_QWORD *)(v12 + 16);
    *(_BYTE *)(v11 + 24) = *(_BYTE *)(v12 + 24);
    v22 = *(int *)(matched + 24);
    v23 = (_QWORD *)(v11 + v22);
    v24 = (_QWORD *)(v12 + v22);
    v25 = type metadata accessor for ContextProtoAliasTypes(0);
    v26 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v23, 1, v25);
    v27 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v24, 1, v25);
    if (v26)
    {
      if (!v27)
      {
        *v23 = *v24;
        v28 = *(int *)(v25 + 20);
        v29 = (char *)v23 + v28;
        v30 = (char *)v24 + v28;
        v31 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v23, 0, 1, v25);
LABEL_16:
        v41 = *(int *)(matched + 28);
        v42 = v11 + v41;
        v43 = v12 + v41;
        v44 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 40))(v42, v43, v44);
        goto LABEL_17;
      }
    }
    else
    {
      if (!v27)
      {
        *v23 = *v24;
        swift_bridgeObjectRelease();
        v55 = *(int *)(v25 + 20);
        v56 = (char *)v23 + v55;
        v57 = (char *)v24 + v55;
        v58 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 40))(v56, v57, v58);
        goto LABEL_16;
      }
      sub_23F6D8A80((uint64_t)v23, type metadata accessor for ContextProtoAliasTypes);
    }
    v40 = sub_23F6916B8(&qword_256EA2ED0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    goto LABEL_16;
  }
  if (v15)
  {
LABEL_7:
    v21 = sub_23F6916B8(&qword_256EA2EB8);
    memcpy((void *)v11, (const void *)v12, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_17;
  }
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v12 + 16);
  *(_BYTE *)(v11 + 24) = *(_BYTE *)(v12 + 24);
  v16 = *(int *)(matched + 24);
  v17 = (_QWORD *)(v11 + v16);
  v18 = (_QWORD *)(v12 + v16);
  v19 = type metadata accessor for ContextProtoAliasTypes(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v18, 1, v19))
  {
    v20 = sub_23F6916B8(&qword_256EA2ED0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    *v17 = *v18;
    v32 = *(int *)(v19 + 20);
    v33 = (char *)v17 + v32;
    v34 = (char *)v18 + v32;
    v35 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v17, 0, 1, v19);
  }
  v36 = *(int *)(matched + 28);
  v37 = v11 + v36;
  v38 = v12 + v36;
  v39 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v11, 0, 1, matched);
LABEL_17:
  v45 = a3[13];
  v46 = (_QWORD *)(a1 + v45);
  v47 = (uint64_t *)(a2 + v45);
  v49 = *v47;
  v48 = v47[1];
  *v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
  v50 = a3[14];
  v51 = a1 + v50;
  v52 = a2 + v50;
  v53 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 40))(v51, v52, v53);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoEntityMatch()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F6EF770()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F08A0();
  if (v2)
  {
    sub_23F6F083C(*(_QWORD *)(v0 + 8));
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A1C();
    sub_23F6916B8(&qword_256EA2EB8);
    sub_23F6F07DC();
    if (v2)
    {
      v3 = *(int *)(v1 + 48);
    }
    else
    {
      sub_23F6B53A4();
      v3 = *(int *)(v1 + 56);
    }
    v4 = sub_23F6F08CC(v3);
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoEntityMatch()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F6EF7E0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F0850();
  if (v1)
  {
    sub_23F6F0B1C();
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A10();
    sub_23F6916B8(&qword_256EA2EB8);
    sub_23F6F07EC();
    if (v1)
    {
      v2 = *(int *)(v0 + 48);
    }
    else
    {
      sub_23F6B53A4();
      v2 = *(int *)(v0 + 56);
    }
    v3 = sub_23F6F082C(v2);
    sub_23F6F07C4(v3, v4, v5, v6);
  }
}

void sub_23F6EF840()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F6DE58C(319, qword_256EA4350, (void (*)(uint64_t))type metadata accessor for ContextProtoMatchProperties);
  if (v0 <= 0x3F)
  {
    sub_23FB2D718();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ContextProtoMatchProperties(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v7 = *(int *)(a3 + 24);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    v10 = type metadata accessor for ContextProtoAliasTypes(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
    {
      v11 = sub_23F6916B8(&qword_256EA2ED0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      *v8 = *v9;
      v13 = *(int *)(v10 + 20);
      v14 = (char *)v8 + v13;
      v15 = (char *)v9 + v13;
      v16 = sub_23FB2D718();
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      v17(v14, v15, v16);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
    }
    v18 = *(int *)(a3 + 28);
    v19 = (char *)v4 + v18;
    v20 = (uint64_t)a2 + v18;
    v21 = sub_23FB2D718();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  }
  return v4;
}

uint64_t destroy for ContextProtoMatchProperties(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for ContextProtoAliasTypes(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 20);
    v7 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + *(int *)(a2 + 28);
  v9 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

uint64_t initializeWithCopy for ContextProtoMatchProperties(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(int *)(a3 + 24);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for ContextProtoAliasTypes(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA2ED0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    v11 = *(int *)(v9 + 20);
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = sub_23FB2D718();
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    v15(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v16 = *(int *)(a3 + 28);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

uint64_t assignWithCopy for ContextProtoMatchProperties(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  v7 = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)((char *)a2 + v8);
  v11 = type metadata accessor for ContextProtoAliasTypes(0);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v11);
  v13 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11);
  if (!v12)
  {
    if (!v13)
    {
      *v9 = *v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v25 = *(int *)(v11 + 20);
      v26 = (char *)v9 + v25;
      v27 = (char *)v10 + v25;
      v28 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 24))(v26, v27, v28);
      goto LABEL_7;
    }
    sub_23F6D8A80((uint64_t)v9, type metadata accessor for ContextProtoAliasTypes);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v19 = sub_23F6916B8(&qword_256EA2ED0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *v9 = *v10;
  v14 = *(int *)(v11 + 20);
  v15 = (char *)v9 + v14;
  v16 = (char *)v10 + v14;
  v17 = sub_23FB2D718();
  v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  swift_bridgeObjectRetain();
  v18(v15, v16, v17);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
LABEL_7:
  v20 = *(int *)(a3 + 28);
  v21 = a1 + v20;
  v22 = (uint64_t)a2 + v20;
  v23 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(v21, v22, v23);
  return a1;
}

uint64_t initializeWithTake for ContextProtoMatchProperties(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(int *)(a3 + 24);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for ContextProtoAliasTypes(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA2ED0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    v11 = *(int *)(v9 + 20);
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v15 = *(int *)(a3 + 28);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for ContextProtoMatchProperties(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(int *)(a3 + 24);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for ContextProtoAliasTypes(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      *v7 = *v8;
      swift_bridgeObjectRelease();
      v22 = *(int *)(v9 + 20);
      v23 = (char *)v7 + v22;
      v24 = (char *)v8 + v22;
      v25 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v23, v24, v25);
      goto LABEL_7;
    }
    sub_23F6D8A80((uint64_t)v7, type metadata accessor for ContextProtoAliasTypes);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v16 = sub_23F6916B8(&qword_256EA2ED0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *v7 = *v8;
  v12 = *(int *)(v9 + 20);
  v13 = (char *)v7 + v12;
  v14 = (char *)v8 + v12;
  v15 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v17 = *(int *)(a3 + 28);
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoMatchProperties()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F6F00B8()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F6B6B7C();
  sub_23F6916B8(&qword_256EA2ED0);
  sub_23F6F07DC();
  if (v0)
  {
    sub_23F6F0B08();
  }
  else
  {
    sub_23F6B53A4();
    sub_23F6F0AFC();
  }
  v2 = sub_23F6F08CC(v1);
  return sub_23F6F07D0(v2, v3, v4);
}

uint64_t storeEnumTagSinglePayload for ContextProtoMatchProperties()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F6F010C()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F6916B8(&qword_256EA2ED0);
  sub_23F6F07EC();
  if (!v0)
    sub_23F6B53A4();
  sub_23F6F08B0();
  return sub_23F6F07C4(v1, v2, v3, v4);
}

void sub_23F6F0168()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F6DE58C(319, qword_256EA4410, (void (*)(uint64_t))type metadata accessor for ContextProtoAliasTypes);
  if (v0 <= 0x3F)
  {
    sub_23FB2D718();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoAliasTypes(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_23FB2D718();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t destroy for ContextProtoAliasTypes(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for ContextProtoAliasTypes(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23FB2D718();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

_QWORD *assignWithCopy for ContextProtoAliasTypes(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_QWORD *initializeWithTake for ContextProtoAliasTypes(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for ContextProtoAliasTypes(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoAliasTypes()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F6F04A0()
{
  unint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F08A0();
  if (v2)
  {
    sub_23F6F083C(*v0);
    sub_23F694C84();
  }
  else
  {
    v3 = v1;
    sub_23F6B53A4();
    v4 = sub_23F6F08CC(*(int *)(v3 + 20));
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoAliasTypes()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F6F04F4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F0850();
  if (v1)
  {
    sub_23F6F0B28();
    sub_23F694C84();
  }
  else
  {
    v2 = v0;
    sub_23F6B53A4();
    v3 = sub_23F6F082C(*(int *)(v2 + 20));
    sub_23F6F07C4(v3, v4, v5, v6);
  }
}

uint64_t sub_23F6F0534()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FB2D718();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23F6F05AC(uint64_t a1)
{
  return sub_23F6F0650(a1);
}

uint64_t sub_23F6F05B8(uint64_t a1)
{
  return sub_23F6F0650(a1);
}

void sub_23F6F05C4(uint64_t a1)
{
  if (a1 < 0)
  {
    sub_23F6F09D0();
    sub_23F6F0938();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      sub_23F6916B8(&qword_256EA44E8);
      *(_QWORD *)(sub_23FB2F434() + 16) = a1;
    }
    sub_23F6B6BFC();
  }
}

uint64_t sub_23F6F0638(uint64_t a1)
{
  return sub_23F6F0650(a1);
}

uint64_t sub_23F6F0644(uint64_t a1)
{
  return sub_23F6F0650(a1);
}

uint64_t sub_23F6F0650(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (a1 < 0)
  {
    sub_23F6F09D0();
    result = sub_23F6F0938();
    __break(1u);
  }
  else
  {
    sub_23F6F0A28();
    if (v3)
    {
      sub_23F6916B8(v1);
      v4 = sub_23FB2F434();
      *(_QWORD *)(v4 + 16) = v2;
    }
    else
    {
      v4 = MEMORY[0x24BEE4AF8];
    }
    sub_23F6916B8(v1);
    return v4;
  }
  return result;
}

uint64_t sub_23F6F07C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, a2, a3, a4);
}

uint64_t sub_23F6F07D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, a2, a3);
}

uint64_t sub_23F6F07FC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6F0814()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6F082C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return v1 + a1;
}

uint64_t sub_23F6F083C@<X0>(unint64_t a1@<X8>)
{
  if (a1 >= 0xFFFFFFFF)
    LODWORD(a1) = -1;
  return (a1 + 1);
}

unint64_t sub_23F6F0864@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 v1;

  return a1 | ((unint64_t)v1 << 32);
}

uint64_t sub_23F6F0878()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_23F6F0880@<X0>(unint64_t a1@<X8>)
{
  int v1;

  if (a1 >= 0xFFFFFFFF)
    LODWORD(a1) = -1;
  v1 = a1 - 1;
  if (v1 < 0)
    v1 = -1;
  return (v1 + 1);
}

uint64_t sub_23F6F08BC(uint64_t (*a1)(_QWORD))
{
  return a1(0);
}

uint64_t sub_23F6F08CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return v1 + a1;
}

uint64_t sub_23F6F08D8(uint64_t (*a1)(_QWORD))
{
  return a1(0);
}

uint64_t sub_23F6F08EC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  return a2(0);
}

void sub_23F6F08F8(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F6D8AD0(v3, v2 + a1, v1);
}

void sub_23F6F0908(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F6D8AB0(v2 + a1, v3, v1);
}

uint64_t sub_23F6F0918(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  return a2(0);
}

uint64_t sub_23F6F0920()
{
  return 0;
}

uint64_t sub_23F6F092C()
{
  return type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
}

uint64_t sub_23F6F0938()
{
  return sub_23FB2F938();
}

uint64_t sub_23F6F0950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v4, 1, 1, a4);
}

uint64_t sub_23F6F0960()
{
  return 0;
}

uint64_t sub_23F6F096C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F6F0978()
{
  return swift_initStructMetadata();
}

uint64_t sub_23F6F09A8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F6F0A04()
{
  return swift_getEnumCaseMultiPayload();
}

void _s30IntelligenceFlowPlannerSupport012ContextProtoE4TypeOACycfC_0(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_23F6F0A3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t sub_23F6F0A60(uint64_t a1)
{
  uint64_t v1;

  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v1, 1, 1, a1);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_23F6F0A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v4, 1, 1, a4);
}

uint64_t sub_23F6F0AD8()
{
  return type metadata accessor for ContextProtoContextMetadata(0);
}

void sub_23F6F0AE0(_BYTE *a1@<X8>)
{
  char v1;

  *a1 = v1;
}

uint64_t sub_23F6F0AE8()
{
  return 0;
}

uint64_t sub_23F6F0B14()
{
  return sub_23FB2D718();
}

void sub_23F6F0B1C()
{
  int v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = (v0 - 1);
}

void sub_23F6F0B28()
{
  int v0;
  _QWORD *v1;

  *v1 = (v0 - 1);
}

uint64_t sub_23F6F0B34()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_23F6F0B40()
{
  return type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
}

uint64_t sub_23F6F0B48()
{
  return type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
}

uint64_t sub_23F6F0B50()
{
  return type metadata accessor for ContextProtoEntityMatch(0);
}

void sub_23F6F0B68(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F6D8AD0(a1, v3, a3);
}

uint64_t _s30IntelligenceFlowPlannerSupport23ContextProtoBoundingBoxV6heightSfSgvs_0(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 24) = result;
  *(_BYTE *)(v1 + 28) = BYTE4(result) & 1;
  return result;
}

void sub_23F6F0B80(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F6D8AD0(v3, a2, a3);
}

uint64_t _s30IntelligenceFlowPlannerSupport23ContextProtoBoundingBoxV11xCoordinateSfSgvs_0(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)v1 = result;
  *(_BYTE *)(v1 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_23F6F0BB0()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_23F6F0BDC(uint64_t a1)
{
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 1, 1, v1);
}

uint64_t sub_23F6F0BEC(uint64_t a1)
{
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 1, 1, v1);
}

uint64_t sub_23F6F0BFC()
{
  return 0;
}

uint64_t sub_23F6F0C08()
{
  return type metadata accessor for ContextProtoQueryDecorationOutput(0);
}

uint64_t sub_23F6F0C10()
{
  return type metadata accessor for ContextProtoConfidence(0);
}

uint64_t sub_23F6F0C28()
{
  return type metadata accessor for ContextProtoToolRetrievalType(0);
}

uint64_t sub_23F6F0C30()
{
  return type metadata accessor for ContextProtoSurroundingText(0);
}

uint64_t sub_23F6F0C38()
{
  return type metadata accessor for ContextProtoMatchProperties(0);
}

uint64_t sub_23F6F0C40()
{
  return type metadata accessor for ContextProtoRetrievedTool(0);
}

uint64_t sub_23F6F0C48@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v3, v1, v2);
}

uint64_t sub_23F6F0C58()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F6F0C68()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F6F0C78()
{
  return swift_bridgeObjectRelease();
}

void sub_23F6F0C88(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F6D8AB0(a1, v3, a3);
}

uint64_t sub_23F6F0C90()
{
  return type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
}

uint64_t sub_23F6F0C9C()
{
  return type metadata accessor for ContextProtoEntityMatch(0);
}

void sub_23F6F0CA8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_23F6D8AD0(v3, v4, a3);
}

uint64_t sub_23F6F0CB4()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

void sub_23F6F0CBC()
{
  _QWORD *v0;

  *v0 = 0;
  v0[1] = 0xE000000000000000;
}

void sub_23F6F0CC8(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v1 + a1);
  *v2 = 0;
  v2[1] = 0;
}

uint64_t sub_23F6F0CD4(uint64_t a1)
{
  uint64_t v1;

  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v1, 1, 1, a1);
  return 0;
}

uint64_t sub_23F6F0D04()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

void sub_23F6F0D10(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F6D8AD0(a1, v3, a3);
}

uint64_t sub_23F6F0D18()
{
  return type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
}

void sub_23F6F0D24(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(_BYTE *)(a1 + 4) = 1;
}

void sub_23F6F0D44(uint64_t a1@<X8>)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = v2 + a1;
  *(_QWORD *)v4 = v3;
  *(_BYTE *)(v4 + 8) = v1 & 1;
}

uint64_t sub_23F6F0D58()
{
  uint64_t v0;

  return v0;
}

uint64_t ContextRetrievalServiceInput.query.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23F6B54F8();
  return v1;
}

IntelligenceFlowPlannerSupport::ContextRetrievalServiceInput __swiftcall ContextRetrievalServiceInput.init(query:)(IntelligenceFlowPlannerSupport::ContextRetrievalServiceInput query)
{
  IntelligenceFlowPlannerSupport::ContextRetrievalServiceInput *v1;

  *v1 = query;
  return query;
}

uint64_t sub_23F6F0D94(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7972657571 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F6F0E10()
{
  sub_23FB2FC5C();
  sub_23FB2FC68();
  return sub_23FB2FC8C();
}

uint64_t sub_23F6F0E50()
{
  return 0x7972657571;
}

uint64_t sub_23F6F0E68()
{
  sub_23FB2FC5C();
  sub_23FB2FC68();
  return sub_23FB2FC8C();
}

uint64_t sub_23F6F0EA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F6F0D94(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F6F0ED0()
{
  sub_23F6F0FD8();
  return sub_23FB2FD10();
}

uint64_t sub_23F6F0EF8()
{
  sub_23F6F0FD8();
  return sub_23FB2FD1C();
}

void ContextRetrievalServiceInput.encode(to:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F6B5220();
  v1 = v0;
  v2 = sub_23F6916B8(&qword_256EA44F0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  sub_23F6B5208();
  sub_23F6ADC98(v1, v1[3]);
  sub_23F6F0FD8();
  sub_23FB2FCC8();
  sub_23FB2FADC();
  sub_23F6F1CB8(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23F6B5100();
}

unint64_t sub_23F6F0FD8()
{
  unint64_t result;

  result = qword_256EA44F8;
  if (!qword_256EA44F8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB5062C, &type metadata for ContextRetrievalServiceInput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA44F8);
  }
  return result;
}

void ContextRetrievalServiceInput.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F6B5220();
  v2 = v1;
  v4 = v3;
  v5 = sub_23F6916B8(&qword_256EA4500);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B5208();
  sub_23F6ADC98(v2, v2[3]);
  sub_23F6F0FD8();
  sub_23F6B5DA0();
  if (!v0)
  {
    v7 = sub_23FB2FA40();
    v9 = v8;
    sub_23F6F1CB8(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    *v4 = v7;
    v4[1] = v9;
  }
  sub_23F6B6E68();
  sub_23F6B5100();
}

void sub_23F6F10E8()
{
  ContextRetrievalServiceInput.init(from:)();
}

void sub_23F6F10FC()
{
  ContextRetrievalServiceInput.encode(to:)();
}

uint64_t ContextRetrievalServiceOutput.requiredContext.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContextRetrievalServiceOutput.utteranceContext.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContextRetrievalServiceOutput.init(requiredContext:utteranceContext:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_23F6F1128(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6465726975716572 && a2 == 0xEF747865746E6F43;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023FB31650)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F6F1238()
{
  sub_23FB2FC5C();
  sub_23FB2FC68();
  return sub_23FB2FC8C();
}

uint64_t sub_23F6F127C(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000010;
  else
    return 0x6465726975716572;
}

uint64_t sub_23F6F12C4()
{
  return sub_23F6F1238();
}

uint64_t sub_23F6F12CC()
{
  sub_23FB2FC5C();
  sub_23FB2FC68();
  return sub_23FB2FC8C();
}

uint64_t sub_23F6F130C()
{
  char *v0;

  return sub_23F6F127C(*v0);
}

uint64_t sub_23F6F1314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F6F1128(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F6F1338()
{
  sub_23F6F14A8();
  return sub_23FB2FD10();
}

uint64_t sub_23F6F1360()
{
  sub_23F6F14A8();
  return sub_23FB2FD1C();
}

void ContextRetrievalServiceOutput.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;

  sub_23F6B5220();
  v3 = v2;
  v4 = sub_23F6916B8(&qword_256EA4508);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v0 + 8);
  sub_23F6ADC98(v3, v3[3]);
  sub_23F6F14A8();
  sub_23FB2FCC8();
  v9 = 0;
  sub_23F6916B8(&qword_256EA4518);
  sub_23F6F1640((unint64_t *)&qword_256EA4520, &qword_256EA4528, MEMORY[0x24BE577C0], MEMORY[0x24BEE12A0]);
  sub_23F6F1C98();
  if (!v1)
  {
    v9 = 1;
    sub_23F6F1C98();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_23F6B5100();
}

unint64_t sub_23F6F14A8()
{
  unint64_t result;

  result = qword_256EA4510;
  if (!qword_256EA4510)
  {
    result = MEMORY[0x242674E5C](&unk_23FB505DC, &type metadata for ContextRetrievalServiceOutput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4510);
  }
  return result;
}

void ContextRetrievalServiceOutput.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  sub_23F6B5220();
  v12 = v11;
  v14 = v13;
  v15 = sub_23F6916B8(&qword_256EA4530);
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6ADC98(v12, v12[3]);
  sub_23F6F14A8();
  sub_23F6B5DA0();
  if (v10)
  {
    sub_23F6B6E68();
  }
  else
  {
    sub_23F6916B8(&qword_256EA4518);
    sub_23F6F1640((unint64_t *)&qword_256EA4538, &qword_256EA4540, MEMORY[0x24BE577D0], MEMORY[0x24BEE12D0]);
    sub_23F6F1C74();
    swift_bridgeObjectRetain();
    sub_23F6F1C74();
    sub_23F6F1CC4();
    *v14 = a10;
    v14[1] = a10;
    sub_23F6B54F8();
    sub_23F6B6E68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_23F6B5100();
}

uint64_t sub_23F6F1640(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = sub_23F6AE310(&qword_256EA4518);
    v10 = sub_23F6F16BC(a2, a3);
    result = MEMORY[0x242674E5C](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23F6F16BC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_23FB2DE08();
    result = MEMORY[0x242674E5C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_23F6F16FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  ContextRetrievalServiceOutput.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F6F1710()
{
  ContextRetrievalServiceOutput.encode(to:)();
}

ValueMetadata *type metadata accessor for ContextRetrievalServiceInput()
{
  return &type metadata for ContextRetrievalServiceInput;
}

uint64_t destroy for ContextRetrievalServiceOutput()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s30IntelligenceFlowPlannerSupport29ContextRetrievalServiceOutputVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  sub_23F6B54F8();
  return a1;
}

_QWORD *assignWithCopy for ContextRetrievalServiceOutput(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for ContextRetrievalServiceOutput(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextRetrievalServiceOutput(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContextRetrievalServiceOutput(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContextRetrievalServiceOutput()
{
  return &type metadata for ContextRetrievalServiceOutput;
}

uint64_t getEnumTagSinglePayload for ContextRetrievalServiceOutput.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = v6 - 2;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ContextRetrievalServiceOutput.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F6F1988 + 4 * byte_23FB50365[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F6F19BC + 4 * byte_23FB50360[v4]))();
}

uint64_t sub_23F6F19BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F6F19C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F6F19CCLL);
  return result;
}

uint64_t sub_23F6F19D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F6F19E0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F6F19E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F6F19EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContextRetrievalServiceOutput.CodingKeys()
{
  return &type metadata for ContextRetrievalServiceOutput.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ContextRetrievalServiceInput.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for ContextRetrievalServiceInput.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F6F1A98 + 4 * byte_23FB5036A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F6F1AB8 + 4 * byte_23FB5036F[v4]))();
}

_BYTE *sub_23F6F1A98(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F6F1AB8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F6F1AC0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F6F1AC8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F6F1AD0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F6F1AD8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ContextRetrievalServiceInput.CodingKeys()
{
  return &type metadata for ContextRetrievalServiceInput.CodingKeys;
}

unint64_t sub_23F6F1AF8()
{
  unint64_t result;

  result = qword_256EA4548;
  if (!qword_256EA4548)
  {
    result = MEMORY[0x242674E5C](&unk_23FB504FC, &type metadata for ContextRetrievalServiceInput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4548);
  }
  return result;
}

unint64_t sub_23F6F1B38()
{
  unint64_t result;

  result = qword_256EA4550;
  if (!qword_256EA4550)
  {
    result = MEMORY[0x242674E5C](&unk_23FB505B4, &type metadata for ContextRetrievalServiceOutput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4550);
  }
  return result;
}

unint64_t sub_23F6F1B78()
{
  unint64_t result;

  result = qword_256EA4558;
  if (!qword_256EA4558)
  {
    result = MEMORY[0x242674E5C](&unk_23FB50524, &type metadata for ContextRetrievalServiceOutput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4558);
  }
  return result;
}

unint64_t sub_23F6F1BB8()
{
  unint64_t result;

  result = qword_256EA4560;
  if (!qword_256EA4560)
  {
    result = MEMORY[0x242674E5C](&unk_23FB5054C, &type metadata for ContextRetrievalServiceOutput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4560);
  }
  return result;
}

unint64_t sub_23F6F1BF8()
{
  unint64_t result;

  result = qword_256EA4568;
  if (!qword_256EA4568)
  {
    result = MEMORY[0x242674E5C](&unk_23FB5046C, &type metadata for ContextRetrievalServiceInput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4568);
  }
  return result;
}

unint64_t sub_23F6F1C38()
{
  unint64_t result;

  result = qword_256EA4570;
  if (!qword_256EA4570)
  {
    result = MEMORY[0x242674E5C](&unk_23FB50494, &type metadata for ContextRetrievalServiceInput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4570);
  }
  return result;
}

uint64_t sub_23F6F1C74()
{
  return sub_23FB2FA7C();
}

uint64_t sub_23F6F1C98()
{
  return sub_23FB2FB18();
}

uint64_t sub_23F6F1CB8@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23F6F1CC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t ContextRetrievalInput.contextType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23FB2DAF0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ContextRetrievalInput.sourceType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ContextRetrievalInput() + 20);
  return sub_23F6F1D74(v3, a1);
}

uint64_t type metadata accessor for ContextRetrievalInput()
{
  uint64_t result;

  result = qword_256EA4650;
  if (!qword_256EA4650)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F6F1D74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F6916B8(&qword_256EA4578);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ContextRetrievalInput.init(contextType:sourceType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23FB2DAF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  v7 = a3 + *(int *)(type metadata accessor for ContextRetrievalInput() + 20);
  return sub_23F6F1E1C(a2, v7);
}

uint64_t sub_23F6F1E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F6916B8(&qword_256EA4578);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F6F1E64(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x54747865746E6F63 && a2 == 0xEB00000000657079;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7954656372756F73 && a2 == 0xEA00000000006570)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F6F1F74(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7954656372756F73;
  else
    return 0x54747865746E6F63;
}

uint64_t sub_23F6F1FB8()
{
  char *v0;

  return sub_23F6F1F74(*v0);
}

uint64_t sub_23F6F1FC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F6F1E64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F6F1FE4()
{
  sub_23F6F21A4();
  return sub_23FB2FD10();
}

uint64_t sub_23F6F200C()
{
  sub_23F6F21A4();
  return sub_23FB2FD1C();
}

uint64_t ContextRetrievalInput.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_23F6916B8(&qword_256EA4580);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6BD134();
  v7 = v6 - v5;
  sub_23F6ADC98(a1, a1[3]);
  sub_23F6F21A4();
  sub_23F6F33A0();
  sub_23FB2DAF0();
  sub_23F6F2930(&qword_256EA4590, (uint64_t (*)(uint64_t))MEMORY[0x24BE57320], MEMORY[0x24BE57330]);
  sub_23FB2FB18();
  if (!v1)
  {
    type metadata accessor for ContextRetrievalInput();
    sub_23FB2DA9C();
    sub_23F6F2930(&qword_256EA4598, (uint64_t (*)(uint64_t))MEMORY[0x24BE571D8], MEMORY[0x24BE571E8]);
    sub_23FB2FAD0();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
}

unint64_t sub_23F6F21A4()
{
  unint64_t result;

  result = qword_256EA4588;
  if (!qword_256EA4588)
  {
    result = MEMORY[0x242674E5C](&unk_23FB50954, &type metadata for ContextRetrievalInput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4588);
  }
  return result;
}

void ContextRetrievalInput.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = sub_23F6916B8(&qword_256EA4578);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B51A4();
  v10 = v5;
  v12 = sub_23FB2DAF0();
  v6 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B51A4();
  v11 = v7;
  v13 = sub_23F6916B8(&qword_256EA45A0);
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6BD134();
  v8 = type metadata accessor for ContextRetrievalInput();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F693EB0();
  sub_23F6ADC98(a1, a1[3]);
  sub_23F6F21A4();
  sub_23FB2FCB0();
  if (v14)
  {
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_23F6F2930(&qword_256EA45A8, (uint64_t (*)(uint64_t))MEMORY[0x24BE57320], MEMORY[0x24BE57350]);
    sub_23FB2FA7C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v2, v11, v12);
    sub_23FB2DA9C();
    sub_23F6F2930(&qword_256EA45B0, (uint64_t (*)(uint64_t))MEMORY[0x24BE571D8], MEMORY[0x24BE57200]);
    sub_23FB2FA34();
    sub_23F6F3390();
    sub_23F6F1E1C(v10, v2 + *(int *)(v8 + 20));
    sub_23F6F244C(v2, a2);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)a1);
    sub_23F6F2490(v2);
  }
  sub_23F6B5100();
}

uint64_t sub_23F6F244C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ContextRetrievalInput();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F6F2490(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ContextRetrievalInput();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23F6F24CC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  ContextRetrievalInput.init(from:)(a1, a2);
}

uint64_t sub_23F6F24E0(_QWORD *a1)
{
  return ContextRetrievalInput.encode(to:)(a1);
}

uint64_t ContextRetrievalOutput.contextValues.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContextRetrievalOutput.init(contextValues:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_23F6F2504(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x56747865746E6F63 && a2 == 0xED00007365756C61)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F6F25AC()
{
  return 0x56747865746E6F63;
}

uint64_t sub_23F6F25D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F6F2504(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F6F25FC()
{
  sub_23F6F2744();
  return sub_23FB2FD10();
}

uint64_t sub_23F6F2624()
{
  sub_23F6F2744();
  return sub_23FB2FD1C();
}

void ContextRetrievalOutput.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_23F6916B8(&qword_256EA45B8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_23F693EB0();
  sub_23F6ADC98(a1, a1[3]);
  sub_23F6F2744();
  sub_23F6F33A0();
  sub_23F6916B8(&qword_256EA45C8);
  sub_23F6F28AC(&qword_256EA45D0, &qword_256EA45D8, MEMORY[0x24BE57528], MEMORY[0x24BEE12A0]);
  sub_23FB2FB18();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  sub_23F6B5100();
}

unint64_t sub_23F6F2744()
{
  unint64_t result;

  result = qword_256EA45C0;
  if (!qword_256EA45C0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB50904, &type metadata for ContextRetrievalOutput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA45C0);
  }
  return result;
}

void ContextRetrievalOutput.init(from:)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = sub_23F6916B8(&qword_256EA45E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6BD134();
  v9 = v8 - v7;
  sub_23F6ADC98(a1, a1[3]);
  sub_23F6F2744();
  sub_23FB2FCB0();
  if (!v2)
  {
    sub_23F6916B8(&qword_256EA45C8);
    sub_23F6F28AC(&qword_256EA45E8, &qword_256EA45F0, MEMORY[0x24BE57530], MEMORY[0x24BEE12D0]);
    sub_23FB2FA7C();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
    *a2 = v10;
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)a1);
  sub_23F6B5100();
}

uint64_t sub_23F6F28AC(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = sub_23F6AE310(&qword_256EA45C8);
    v10 = sub_23F6F2930(a2, MEMORY[0x24BE57518], a3);
    result = MEMORY[0x242674E5C](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23F6F2930(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x242674E5C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_23F6F2970(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  ContextRetrievalOutput.init(from:)(a1, a2);
}

void sub_23F6F2984(_QWORD *a1)
{
  ContextRetrievalOutput.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextRetrievalInput(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FB2DAF0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FB2DA9C();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA4578);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t destroy for ContextRetrievalInput(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = sub_23FB2DAF0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_23FB2DA9C();
  result = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v5, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return result;
}

uint64_t initializeWithCopy for ContextRetrievalInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23FB2DAF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23FB2DA9C();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F6916B8(&qword_256EA4578);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithCopy for ContextRetrievalInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23FB2DAF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23FB2DA9C();
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v10);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    v13 = *(_QWORD *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v14 = sub_23F6916B8(&qword_256EA4578);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
  return a1;
}

uint64_t initializeWithTake for ContextRetrievalInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23FB2DAF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23FB2DA9C();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F6916B8(&qword_256EA4578);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithTake for ContextRetrievalInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23FB2DAF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23FB2DA9C();
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v10);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    v13 = *(_QWORD *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v14 = sub_23F6916B8(&qword_256EA4578);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextRetrievalInput()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F6F2EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23F6F33B0();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    v7 = sub_23F6916B8(&qword_256EA4578);
    v8 = v4 + *(int *)(a3 + 20);
  }
  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, v3, v7);
}

uint64_t storeEnumTagSinglePayload for ContextRetrievalInput()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F6F2F58(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = sub_23F6F33B0();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    v9 = sub_23F6916B8(&qword_256EA4578);
    v10 = v5 + *(int *)(a4 + 20);
  }
  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v10, v4, v4, v9);
}

void sub_23F6F2FC0()
{
  unint64_t v0;
  unint64_t v1;

  sub_23FB2DAF0();
  if (v0 <= 0x3F)
  {
    sub_23F6F3044();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_23F6F3044()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256EA4660)
  {
    sub_23FB2DA9C();
    v0 = sub_23FB2F65C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256EA4660);
  }
}

ValueMetadata *type metadata accessor for ContextRetrievalOutput()
{
  return &type metadata for ContextRetrievalOutput;
}

uint64_t storeEnumTagSinglePayload for ContextRetrievalOutput.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F6F30E8 + 4 * byte_23FB50680[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F6F3108 + 4 * byte_23FB50685[v4]))();
}

_BYTE *sub_23F6F30E8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F6F3108(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F6F3110(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F6F3118(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F6F3120(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F6F3128(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ContextRetrievalOutput.CodingKeys()
{
  return &type metadata for ContextRetrievalOutput.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ContextRetrievalInput.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F6F3190 + 4 * byte_23FB5068F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F6F31C4 + 4 * byte_23FB5068A[v4]))();
}

uint64_t sub_23F6F31C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F6F31CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F6F31D4);
  return result;
}

uint64_t sub_23F6F31E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F6F31E8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F6F31EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F6F31F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContextRetrievalInput.CodingKeys()
{
  return &type metadata for ContextRetrievalInput.CodingKeys;
}

unint64_t sub_23F6F3214()
{
  unint64_t result;

  result = qword_256EA4690;
  if (!qword_256EA4690)
  {
    result = MEMORY[0x242674E5C](&unk_23FB50824, &type metadata for ContextRetrievalInput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4690);
  }
  return result;
}

unint64_t sub_23F6F3254()
{
  unint64_t result;

  result = qword_256EA4698;
  if (!qword_256EA4698)
  {
    result = MEMORY[0x242674E5C](&unk_23FB508DC, &type metadata for ContextRetrievalOutput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4698);
  }
  return result;
}

unint64_t sub_23F6F3294()
{
  unint64_t result;

  result = qword_256EA46A0;
  if (!qword_256EA46A0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB5084C, &type metadata for ContextRetrievalOutput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA46A0);
  }
  return result;
}

unint64_t sub_23F6F32D4()
{
  unint64_t result;

  result = qword_256EA46A8;
  if (!qword_256EA46A8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB50874, &type metadata for ContextRetrievalOutput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA46A8);
  }
  return result;
}

unint64_t sub_23F6F3314()
{
  unint64_t result;

  result = qword_256EA46B0;
  if (!qword_256EA46B0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB50794, &type metadata for ContextRetrievalInput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA46B0);
  }
  return result;
}

unint64_t sub_23F6F3354()
{
  unint64_t result;

  result = qword_256EA46B8;
  if (!qword_256EA46B8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB507BC, &type metadata for ContextRetrievalInput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA46B8);
  }
  return result;
}

uint64_t sub_23F6F3390()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 88) + 8))(v0, *(_QWORD *)(v1 - 96));
}

uint64_t sub_23F6F33A0()
{
  return sub_23FB2FCC8();
}

uint64_t sub_23F6F33B0()
{
  return sub_23FB2DAF0();
}

uint64_t EntitySpanMatchService.__allocating_init(maxMatchTasks:)()
{
  uint64_t v0;

  v0 = sub_23F6F52B8();
  EntitySpanMatchService.init(maxMatchTasks:)();
  return v0;
}

uint64_t EntitySpanMatchService.init(maxMatchTasks:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = v0;
  sub_23F6F52EC();
  sub_23F6916B8(&qword_256EA46C0);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_23FB47020;
  v4 = type metadata accessor for SiriEntityMatcherShim();
  SiriEntityMatcherShim.__allocating_init(maxEntityCount:)(0, 1);
  v6 = v5;
  *(_QWORD *)(v3 + 56) = v4;
  *(_QWORD *)(v3 + 64) = sub_23F6F4DE4(&qword_256EA46C8, 255, (uint64_t (*)(uint64_t))type metadata accessor for SiriEntityMatcherShim, (uint64_t)&protocol conformance descriptor for SiriEntityMatcherShim);
  *(_QWORD *)(v3 + 32) = v6;
  v7 = type metadata accessor for GlobalEntityMatcherShim();
  swift_allocObject();
  GlobalEntityMatcherShim.init(maxEntityCount:)(0, 1);
  v9 = v8;
  *(_QWORD *)(v3 + 96) = v7;
  *(_QWORD *)(v3 + 104) = sub_23F6F4DE4((unint64_t *)&unk_256EA46D0, 255, (uint64_t (*)(uint64_t))type metadata accessor for GlobalEntityMatcherShim, (uint64_t)&protocol conformance descriptor for GlobalEntityMatcherShim);
  *(_QWORD *)(v3 + 72) = v9;
  *(_QWORD *)(v2 + 112) = v3;
  *(_QWORD *)(v2 + 120) = v1;
  return v2;
}

void EntitySpanMatchService.__allocating_init(matcherRegistry:maxMatchTasks:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F6F52B8();
  swift_defaultActor_initialize();
  *(_QWORD *)(v4 + 112) = a1;
  *(_QWORD *)(v4 + 120) = a2;
  sub_23F694C84();
}

void EntitySpanMatchService.init(matcherRegistry:maxMatchTasks:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_23F6F52EC();
  *(_QWORD *)(v2 + 112) = v3;
  *(_QWORD *)(v2 + 120) = a2;
  sub_23F694C84();
}

uint64_t sub_23F6F3554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[8] = a3;
  v4[9] = v3;
  v4[6] = a1;
  v4[7] = a2;
  v5 = sub_23FB2E7F8();
  v4[10] = v5;
  v4[11] = *(_QWORD *)(v5 - 8);
  v4[12] = swift_task_alloc();
  return sub_23F6F50C0();
}

uint64_t sub_23F6F35B0()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  unint64_t v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v19;

  sub_23FB2E390();
  swift_bridgeObjectRetain_n();
  v1 = sub_23FB2E7E0();
  v2 = sub_23FB2F5E4();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = v0[7];
    v4 = v0[6];
    v5 = (uint8_t *)sub_23F693DF4();
    v19 = sub_23F693DF4();
    *(_DWORD *)v5 = 136315138;
    swift_bridgeObjectRetain();
    v0[5] = sub_23F69334C(v4, v3, &v19);
    sub_23FB2F680();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23F68F000, v1, v2, "[EntitySpanMatchService] start finding entity matches for %s", v5, 0xCu);
    swift_arrayDestroy();
    sub_23F693DD0();
  }
  v7 = v0[11];
  v6 = v0[12];
  v8 = v0[10];

  sub_23F6B6740();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  v10 = v0[8];
  v9 = v0[9];
  v11 = *(_QWORD *)(v9 + 112);
  v0[2] = v11;
  swift_bridgeObjectRetain();
  if (v10)
  {
    swift_bridgeObjectRetain();
    v11 = sub_23F6F3954(v11, v10);
    v0[2] = v11;
    v9 = v0[9];
  }
  v13 = v0[6];
  v12 = v0[7];
  v0[3] = MEMORY[0x24BEE4AF8];
  if (*(_QWORD *)(v11 + 16) >= *(_QWORD *)(v9 + 120))
    v14 = *(_QWORD *)(v9 + 120);
  else
    v14 = *(_QWORD *)(v11 + 16);
  v0[4] = v14;
  sub_23F6916B8(&qword_256EA46E0);
  sub_23F6F4DE4(&qword_256EA46E8, v15, (uint64_t (*)(uint64_t))type metadata accessor for EntitySpanMatchService, (uint64_t)&protocol conformance descriptor for EntitySpanMatchService);
  v16 = (_QWORD *)swift_task_alloc();
  v0[13] = v16;
  v16[2] = v14;
  v16[3] = v0 + 2;
  v16[4] = v13;
  v16[5] = v12;
  v16[6] = v0 + 4;
  v16[7] = v0 + 3;
  v17 = (_QWORD *)swift_task_alloc();
  v0[14] = v17;
  *v17 = v0;
  v17[1] = sub_23F6F3864;
  return sub_23FB2F9EC();
}

uint64_t sub_23F6F3864()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return sub_23F6F5164();
}

uint64_t sub_23F6F38D4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRelease();
  sub_23F6F52B0();
  return sub_23F6F51E8(v1, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F6F390C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23F6F52B0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F6F3954(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  __int128 v33[2];
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v5 = sub_23FB2DE5C();
  v31 = *(_QWORD **)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v6);
  v32 = (char *)&v25 - v10;
  v11 = MEMORY[0x24BEE4AF8];
  v36 = MEMORY[0x24BEE4AF8];
  v28 = *(_QWORD *)(a1 + 16);
  if (v28)
  {
    v12 = 0;
    v25 = v2;
    v26 = a1 + 32;
    v30 = a2 + 56;
    v27 = a1;
    while (v12 < *(_QWORD *)(a1 + 16))
    {
      v29 = v12;
      sub_23F6AF9C8(v26 + 40 * v12, (uint64_t)&v34);
      sub_23F6ADC98(&v34, v35);
      sub_23FB2E2E8();
      if (*(_QWORD *)(a2 + 16)
        && (sub_23F6F4DE4(&qword_256EA47E0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE57878], MEMORY[0x24BE57888]), v13 = sub_23FB2F068(), v14 = -1 << *(_BYTE *)(a2 + 32), v15 = v13 & ~v14, ((*(_QWORD *)(v30 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0))
      {
        v16 = ~v14;
        v17 = v31[9];
        v18 = (void (*)(char *, unint64_t, uint64_t))v31[2];
        while (1)
        {
          v19 = a2;
          v18(v8, *(_QWORD *)(a2 + 48) + v17 * v15, v5);
          sub_23F6F4DE4(&qword_256EA47E8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE57878], MEMORY[0x24BE57890]);
          v20 = sub_23FB2F11C();
          v21 = (void (*)(char *, uint64_t))v31[1];
          v21(v8, v5);
          if ((v20 & 1) != 0)
            break;
          v15 = (v15 + 1) & v16;
          a2 = v19;
          if (((*(_QWORD *)(v30 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            goto LABEL_9;
        }
        v21(v32, v5);
        sub_23F6F4E24(&v34, (uint64_t)v33);
        v22 = v36;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F7111B0(0, *(_QWORD *)(v22 + 16) + 1, 1);
          v22 = v36;
        }
        a2 = v19;
        v24 = *(_QWORD *)(v22 + 16);
        v23 = *(_QWORD *)(v22 + 24);
        if (v24 >= v23 >> 1)
        {
          sub_23F7111B0((_QWORD *)(v23 > 1), v24 + 1, 1);
          v22 = v36;
        }
        *(_QWORD *)(v22 + 16) = v24 + 1;
        result = sub_23F6F4E24(v33, v22 + 40 * v24 + 32);
      }
      else
      {
LABEL_9:
        ((void (*)(char *, uint64_t))v31[1])(v32, v5);
        result = _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)&v34);
      }
      v12 = v29 + 1;
      a1 = v27;
      if (v29 + 1 == v28)
      {
        v11 = v36;
        goto LABEL_17;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_17:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v11;
  }
  return result;
}

uint64_t sub_23F6F3C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8[43] = a7;
  v8[44] = a8;
  v8[41] = a5;
  v8[42] = a6;
  v8[39] = a3;
  v8[40] = a4;
  v8[38] = a2;
  sub_23F6916B8(&qword_256EA47F0);
  v8[45] = swift_task_alloc();
  v8[46] = swift_task_alloc();
  v8[47] = swift_task_alloc();
  v8[48] = swift_task_alloc();
  v9 = sub_23FB2DE5C();
  v8[49] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[50] = v10;
  v8[51] = *(_QWORD *)(v10 + 64);
  v8[52] = swift_task_alloc();
  v8[53] = swift_task_alloc();
  v8[54] = swift_task_alloc();
  v11 = sub_23F6916B8(&qword_256EA47F8);
  v8[55] = v11;
  v8[56] = *(_QWORD *)(v11 - 8);
  v8[57] = swift_task_alloc();
  return swift_task_switch();
}

void sub_23F6F3D68()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  __int128 *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(v0 + 312);
  if ((v1 & 0x8000000000000000) == 0)
  {
    if (!v1)
    {
LABEL_14:
      *(_QWORD *)(v0 + 464) = sub_23F6916B8(&qword_256EA46E0);
      sub_23F6916B8(&qword_256EA2828);
      sub_23FB2F500();
      v24 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 472) = v24;
      *v24 = v0;
      v24[1] = sub_23F6F40F4;
      sub_23F6F522C();
      sub_23FB2F50C();
      return;
    }
    v2 = 0;
    v3 = (_QWORD *)(v0 + 16);
    v26 = (__int128 *)(v0 + 56);
    v32 = *(_QWORD *)(v0 + 400);
    v25 = *(_QWORD *)(v0 + 408) + 7;
    v4 = 32;
    while (1)
    {
      v5 = **(_QWORD **)(v0 + 320);
      if (v2 >= *(_QWORD *)(v5 + 16))
        break;
      v30 = v4;
      v31 = v2;
      v6 = *(_QWORD *)(v0 + 424);
      v7 = *(_QWORD *)(v0 + 432);
      v8 = *(_QWORD *)(v0 + 384);
      v9 = *(_QWORD *)(v0 + 392);
      v28 = *(_QWORD *)(v0 + 336);
      v29 = *(_QWORD *)(v0 + 376);
      v27 = *(_QWORD *)(v0 + 328);
      sub_23F6AF9C8(v5 + v4, (uint64_t)v3);
      sub_23F6ADC98(v3, *(_QWORD *)(v0 + 40));
      sub_23FB2E2E8();
      v10 = sub_23FB2F4E8();
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v8, 1, 1, v10);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v6, v7, v9);
      sub_23F6AF9C8((uint64_t)v3, (uint64_t)v26);
      v11 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
      v12 = (v25 + v11) & 0xFFFFFFFFFFFFFFF8;
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = 0;
      *(_QWORD *)(v13 + 24) = 0;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v32 + 32))(v13 + v11, v6, v9);
      sub_23F6F4E24(v26, v13 + v12);
      v14 = (_QWORD *)(v13 + ((v12 + 47) & 0xFFFFFFFFFFFFFFF8));
      *v14 = v27;
      v14[1] = v28;
      sub_23F6F4EA8(v8, v29);
      LODWORD(v12) = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v29, 1, v10);
      swift_bridgeObjectRetain();
      if ((_DWORD)v12 == 1)
      {
        sub_23F6F4EF0(*(_QWORD *)(v0 + 376));
      }
      else
      {
        sub_23FB2F4DC();
        sub_23F6F531C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8));
      }
      v3 = (_QWORD *)(v0 + 16);
      if (*(_QWORD *)(v13 + 16))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        v15 = sub_23FB2F4A0();
        v17 = v16;
        swift_unknownObjectRelease();
      }
      else
      {
        v15 = 0;
        v17 = 0;
      }
      v18 = **(_QWORD **)(v0 + 304);
      sub_23F6916B8(&qword_256EA46E0);
      v19 = v17 | v15;
      if (v17 | v15)
      {
        v19 = v0 + 176;
        *(_QWORD *)(v0 + 176) = 0;
        *(_QWORD *)(v0 + 184) = 0;
        *(_QWORD *)(v0 + 192) = v15;
        *(_QWORD *)(v0 + 200) = v17;
      }
      ++v2;
      v20 = *(_QWORD *)(v0 + 432);
      v22 = *(_QWORD *)(v0 + 384);
      v21 = *(_QWORD *)(v0 + 392);
      v23 = *(_QWORD *)(v0 + 312);
      *(_QWORD *)(v0 + 264) = 1;
      *(_QWORD *)(v0 + 272) = v19;
      *(_QWORD *)(v0 + 280) = v18;
      swift_task_create();
      swift_release();
      sub_23F6F4EF0(v22);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v20, v21);
      _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v0 + 16);
      v4 = v30 + 40;
      if (v31 + 1 == v23)
        goto LABEL_14;
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_23F6F40F4()
{
  sub_23F6F5110();
  sub_23F6F522C();
  return sub_23F6F50C0();
}

uint64_t sub_23F6F4140()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  result = *(_QWORD *)(v0 + 288);
  if (!result)
  {
    v14 = *(_QWORD *)(v0 + 456);
    sub_23F6F5288();
    v15(v14);
    sub_23F6F52B0();
    sub_23F6F5268();
    sub_23F6F5224();
    sub_23F6F5280();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return sub_23F6F50F4(*(uint64_t (**)(void))(v0 + 8));
  }
  v2 = **(_QWORD **)(v0 + 344);
  v3 = **(_QWORD **)(v0 + 320);
  if (v2 >= *(_QWORD *)(v3 + 16))
    goto LABEL_15;
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 416);
    v5 = *(_QWORD *)(v0 + 424);
    v6 = *(_QWORD *)(v0 + 400);
    v25 = *(_QWORD *)(v0 + 392);
    v7 = *(_QWORD *)(v0 + 368);
    v26 = *(_QWORD *)(v0 + 408);
    v29 = *(_QWORD *)(v0 + 360);
    v27 = *(_QWORD *)(v0 + 328);
    v28 = *(_QWORD *)(v0 + 336);
    sub_23F6AF9C8(v3 + 40 * v2 + 32, v0 + 136);
    sub_23F6ADC98((_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160));
    sub_23FB2E2E8();
    v8 = sub_23FB2F4E8();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v7, 1, 1, v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v4, v25);
    sub_23F6AF9C8(v0 + 136, v0 + 96);
    v9 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v10 = (v26 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = 0;
    *(_QWORD *)(v11 + 24) = 0;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 32))(v11 + v9, v5, v25);
    sub_23F6F4E24((__int128 *)(v0 + 96), v11 + v10);
    v12 = (_QWORD *)(v11 + ((v10 + 47) & 0xFFFFFFFFFFFFFFF8));
    *v12 = v27;
    v12[1] = v28;
    sub_23F6F4EA8(v7, v29);
    LODWORD(v7) = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v29, 1, v8);
    swift_bridgeObjectRetain();
    v13 = *(_QWORD *)(v0 + 360);
    if ((_DWORD)v7 == 1)
    {
      sub_23F6F4EF0(*(_QWORD *)(v0 + 360));
    }
    else
    {
      sub_23FB2F4DC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v13, v8);
    }
    if (*(_QWORD *)(v11 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v16 = sub_23FB2F4A0();
      v18 = v17;
      swift_unknownObjectRelease();
    }
    else
    {
      v16 = 0;
      v18 = 0;
    }
    v19 = **(_QWORD **)(v0 + 304);
    v20 = v18 | v16;
    if (v18 | v16)
    {
      v20 = v0 + 208;
      *(_QWORD *)(v0 + 208) = 0;
      *(_QWORD *)(v0 + 216) = 0;
      *(_QWORD *)(v0 + 224) = v16;
      *(_QWORD *)(v0 + 232) = v18;
    }
    v21 = *(_QWORD *)(v0 + 400);
    v22 = *(_QWORD *)(v0 + 368);
    v23 = *(_QWORD **)(v0 + 344);
    *(_QWORD *)(v0 + 240) = 1;
    *(_QWORD *)(v0 + 248) = v20;
    *(_QWORD *)(v0 + 256) = v19;
    swift_task_create();
    swift_release();
    sub_23F6F4EF0(v22);
    result = sub_23F6F531C(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
    if (!__OFADD__(*v23, 1))
    {
      **(_QWORD **)(v0 + 344) = *v23 + 1;
      _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v0 + 136);
LABEL_15:
      sub_23F6B996C();
      v24 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 480) = v24;
      *v24 = v0;
      v24[1] = sub_23F6F44BC;
      sub_23F6F522C();
      return sub_23FB2F50C();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23F6F44BC()
{
  sub_23F6F5110();
  sub_23F6F522C();
  return sub_23F6F50C0();
}

uint64_t sub_23F6F4508()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);

  v1 = *(_QWORD *)(v0 + 456);
  sub_23F6F5288();
  v2(v1);
  swift_task_dealloc();
  sub_23F6F5268();
  sub_23F6F5224();
  sub_23F6F5280();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F6F4598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  v7[6] = a1;
  v8 = sub_23FB2DE5C();
  v7[11] = v8;
  v7[12] = *(_QWORD *)(v8 - 8);
  v7[13] = swift_task_alloc();
  v7[14] = swift_task_alloc();
  v9 = sub_23FB2E7F8();
  v7[15] = v9;
  v7[16] = *(_QWORD *)(v9 - 8);
  v7[17] = swift_task_alloc();
  v7[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F6F4648()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;

  sub_23F6F520C();
  sub_23F6F51D0();
  sub_23FB2E7E0();
  v5 = sub_23F6F5328();
  if (sub_23F6F5194(v5))
  {
    sub_23F6F50CC();
    sub_23F693DF4();
    v6 = sub_23F6F5270(4.8149e-34);
    v12 = sub_23F6F5330(v6, v7, v8, v9, v10, v11);
    sub_23F6F51B4(v12);
    v13 = sub_23F6B6090();
    sub_23F6F52C8(v13, v14, v15, v16, v17, v18, v19, v20, v25);
    sub_23F6F5238(&dword_23F68F000, v21, v22, "[EntitySpanMatchService] finding span matches with %s");
    sub_23F6F52A0();
    sub_23F693DD0();
  }
  sub_23F6F51F4();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
  sub_23F6F52F8();
  v23 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 176) = v23;
  sub_23F6F524C(v23, (uint64_t)sub_23F6F4740);
  return sub_23F6F5148();
}

uint64_t sub_23F6F4740(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_23F6F5120(a1);
  if (v1)
  {
    sub_23F6F52D8();
    sub_23F6F5268();
    sub_23F6F5224();
    sub_23F6F5280();
    return sub_23F6F51A4(*(uint64_t (**)(void))(v2 + 8));
  }
  else
  {
    sub_23F6F522C();
    return sub_23F6F5164();
  }
}

uint64_t sub_23F6F4798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  v7[6] = a1;
  v8 = sub_23FB2DE5C();
  v7[11] = v8;
  v7[12] = *(_QWORD *)(v8 - 8);
  v7[13] = swift_task_alloc();
  v7[14] = swift_task_alloc();
  v9 = sub_23FB2E7F8();
  v7[15] = v9;
  v7[16] = *(_QWORD *)(v9 - 8);
  v7[17] = swift_task_alloc();
  v7[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F6F4848()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;

  sub_23F6F520C();
  sub_23F6F51D0();
  sub_23FB2E7E0();
  v5 = sub_23F6F5328();
  if (sub_23F6F5194(v5))
  {
    sub_23F6F50CC();
    sub_23F693DF4();
    v6 = sub_23F6F5270(4.8149e-34);
    v12 = sub_23F6F5330(v6, v7, v8, v9, v10, v11);
    sub_23F6F51B4(v12);
    v13 = sub_23F6B6090();
    sub_23F6F52C8(v13, v14, v15, v16, v17, v18, v19, v20, v25);
    sub_23F6F5238(&dword_23F68F000, v21, v22, "[EntitySpanMatchService] finding span matches with %s");
    sub_23F6F52A0();
    sub_23F693DD0();
  }
  sub_23F6F51F4();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
  sub_23F6F52F8();
  v23 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 176) = v23;
  sub_23F6F524C(v23, (uint64_t)sub_23F6F4940);
  return sub_23F6F5148();
}

uint64_t sub_23F6F4940(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_23F6F5120(a1);
  if (v1)
  {
    sub_23F6F52D8();
    sub_23F6F5268();
    sub_23F6F5224();
    sub_23F6F5280();
    return sub_23F6F51A4(*(uint64_t (**)(void))(v2 + 8));
  }
  else
  {
    sub_23F6F522C();
    return sub_23F6F5164();
  }
}

uint64_t sub_23F6F4998()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 152);
  v2 = *(NSObject **)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 56);
  sub_23FB2E390();
  v1(v3, v5, v4);
  swift_bridgeObjectRetain_n();
  sub_23FB2E7E0();
  v6 = sub_23F6F5328();
  if (sub_23F6F5194(v6))
  {
    v7 = *(_QWORD *)(v0 + 184);
    v20 = *(void (**)(uint64_t, uint64_t))(v0 + 168);
    v8 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 88);
    v9 = sub_23F693DF4();
    v21 = sub_23F693DF4();
    *(_DWORD *)v9 = 134218498;
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v7 + 16);
    v22 = v21;
    sub_23FB2F680();
    *(_WORD *)(v9 + 12) = 2080;
    v10 = sub_23FB2DE50();
    *(_QWORD *)(v0 + 24) = sub_23F69334C(v10, v11, &v22);
    sub_23FB2F680();
    swift_bridgeObjectRelease();
    v20(v8, v19);
    *(_WORD *)(v9 + 22) = 2080;
    v12 = sub_23FB2DE8C();
    v13 = MEMORY[0x2426740A0](v7, v12);
    *(_QWORD *)(v0 + 32) = sub_23F69334C(v13, v14, &v22);
    sub_23FB2F680();
    sub_23F6B6090();
    sub_23F6B6740();
    _os_log_impl(&dword_23F68F000, v2, (os_log_type_t)v5, "[EntitySpanMatchService] found %ld span matches with %s: %s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    sub_23F693DD0();
  }
  v15 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
  v16 = *(_QWORD *)(v0 + 136);
  v17 = *(_QWORD *)(v0 + 120);
  (*(void (**)(_QWORD, _QWORD))(v0 + 168))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
  sub_23F6B6740();

  v15(v16, v17);
  **(_QWORD **)(v0 + 48) = *(_QWORD *)(v0 + 184);
  swift_task_dealloc();
  sub_23F6F52B0();
  sub_23F6F5268();
  sub_23F6F5224();
  return sub_23F6F50F4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t EntitySpanMatchService.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t EntitySpanMatchService.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t EntitySpanMatchService.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6F4C44()
{
  return EntitySpanMatchService.unownedExecutor.getter();
}

uint64_t type metadata accessor for EntitySpanMatchService()
{
  return objc_opt_self();
}

uint64_t sub_23F6F4C7C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = v2[5];
  v11 = v2[6];
  v10 = v2[7];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v12;
  *v12 = v3;
  v12[1] = sub_23F6F507C;
  return sub_23F6F3C64(a1, a2, v6, v7, v8, v9, v11, v10);
}

uint64_t method lookup function for EntitySpanMatchService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EntitySpanMatchService.__allocating_init(maxMatchTasks:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of EntitySpanMatchService.__allocating_init(matcherRegistry:maxMatchTasks:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of EntitySpanMatchService.findMatches(query:matcherOverrides:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v3 + 144)
                                                          + *(_QWORD *)(*(_QWORD *)v3 + 144));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_23F6F4DA8;
  return v10(a1, a2, a3);
}

uint64_t sub_23F6F4DA8(uint64_t a1)
{
  uint64_t v1;

  sub_23F6F5110();
  return sub_23F6F51E8(a1, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_23F6F4DE4(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x242674E5C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23F6F4E24(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_23F6F4E40()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F6F52E4();
  sub_23F6F5080();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_23F6F516C(v1);
  return sub_23F6F4598(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_23F6F4EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F6916B8(&qword_256EA47F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F6F4EF0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F6916B8(&qword_256EA47F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F6F4F34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_23F6F52E4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v0 + v4);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F6F4FD4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F6F52E4();
  sub_23F6F5080();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_23F6F516C(v1);
  return sub_23F6F4798(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_23F6F503C()
{
  uint64_t v0;

  sub_23F6F5110();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F6F50C0()
{
  return swift_task_switch();
}

uint64_t sub_23F6F50CC()
{
  return swift_slowAlloc();
}

uint64_t sub_23F6F50F4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F6F5110()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t sub_23F6F5120(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 - 8) = *v1;
  *(_QWORD *)(v2 - 8) = *v1;
  *(_QWORD *)(v3 + 184) = a1;
  return swift_task_dealloc();
}

uint64_t sub_23F6F5148()
{
  return sub_23FB2E2F4();
}

uint64_t sub_23F6F5164()
{
  return swift_task_switch();
}

uint64_t sub_23F6F516C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

BOOL sub_23F6F5194(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23F6F51A4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F6F51B4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return sub_23FB2F680();
}

uint64_t sub_23F6F51D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);

  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  *(_QWORD *)(v2 + 152) = v5;
  return v5(v0, v3, v1);
}

uint64_t sub_23F6F51E8(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_23F6F51F4()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[12] + 8))(v0[14], v0[11]);
}

uint64_t sub_23F6F520C()
{
  return sub_23FB2E390();
}

uint64_t sub_23F6F5224()
{
  return swift_task_dealloc();
}

void sub_23F6F5238(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 0xCu);
}

uint64_t sub_23F6F524C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 72);
}

uint64_t sub_23F6F5268()
{
  return swift_task_dealloc();
}

uint64_t sub_23F6F5270(float a1)
{
  float *v1;

  *v1 = a1;
  return sub_23FB2DE50();
}

uint64_t sub_23F6F5280()
{
  return swift_task_dealloc();
}

uint64_t sub_23F6F52A0()
{
  return swift_arrayDestroy();
}

uint64_t sub_23F6F52B0()
{
  return swift_task_dealloc();
}

uint64_t sub_23F6F52B8()
{
  return swift_allocObject();
}

uint64_t sub_23F6F52C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, a9);
}

uint64_t sub_23F6F52D8()
{
  return swift_task_dealloc();
}

uint64_t sub_23F6F52E4()
{
  return sub_23FB2DE5C();
}

uint64_t sub_23F6F52EC()
{
  return swift_defaultActor_initialize();
}

_QWORD *sub_23F6F52F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 160) = v0;
  *(_QWORD *)(v1 + 168) = v2;
  return sub_23F6ADC98(*(_QWORD **)(v1 + 64), *(_QWORD *)(*(_QWORD *)(v1 + 64) + 24));
}

uint64_t sub_23F6F531C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23F6F5328()
{
  return sub_23FB2F5D8();
}

uint64_t sub_23F6F5330(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  return sub_23F69334C(a1, a2, (uint64_t *)va);
}

void IntelligenceFlowError.errorHierarchy.getter()
{
  uint64_t v0;

  sub_23F6916B8(&qword_256EA2888);
  v0 = sub_23F6F59B0();
  *(_OWORD *)(v0 + 16) = xmmword_23FB50A20;
  *(_QWORD *)(v0 + 32) = sub_23FB2C6E0();
  sub_23FB2F3EC();
  sub_23F6F5A08();
}

uint64_t sub_23F6F5398()
{
  sub_23F6D3458(&qword_256EA4820, (uint64_t (*)(uint64_t))MEMORY[0x24BE52080], (uint64_t)&protocol conformance descriptor for IntelligenceFlowError);
  return sub_23FB2FC08();
}

uint64_t sub_23F6F53D8()
{
  sub_23F6D3458(&qword_256EA4820, (uint64_t (*)(uint64_t))MEMORY[0x24BE52080], (uint64_t)&protocol conformance descriptor for IntelligenceFlowError);
  return sub_23FB2FBFC();
}

void NSError.errorHierarchy.getter()
{
  void *v0;
  uint64_t v1;
  id v2;

  sub_23F6916B8(&qword_256EA2888);
  v1 = sub_23F6F59B0();
  *(_OWORD *)(v1 + 16) = xmmword_23FB50A20;
  *(_QWORD *)(v1 + 32) = v0;
  sub_23FB2F3EC();
  v2 = v0;
  sub_23F6F5A08();
}

void sub_23F6F5480()
{
  NSError.errorHierarchy.getter();
}

void sub_23F6F54A0(uint64_t (*a1)(uint64_t), unint64_t *a2, uint64_t a3, void (*a4)(_QWORD *__return_ptr, uint64_t))
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v22[5];

  v9 = v4;
  v10 = a1(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v22[-1] - v11;
  sub_23F6916B8(&qword_256EA2888);
  v13 = sub_23F6F59B0();
  *(_OWORD *)(v13 + 16) = xmmword_23FB50A20;
  sub_23F6F5920(v9, (uint64_t)v12, a1);
  sub_23F6D3458(a2, a1, a3);
  v14 = sub_23FB2FB60();
  if (v14)
  {
    v15 = (void *)v14;
    sub_23F6F5978((uint64_t)v12, a1);
  }
  else
  {
    v15 = (void *)sub_23F6B5AD4();
    sub_23F6F594C((uint64_t)v12, v16, a1);
  }
  v17 = sub_23FB2C284();

  *(_QWORD *)(v13 + 32) = v17;
  v18 = sub_23F6F5A14();
  v19 = v22[0];
  a4(v22, v18);
  v20 = sub_23F6F59BC();
  v21 = v19;
  sub_23F6B99A4(v20);
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v22);
  sub_23F6B69E0();
}

void ErrorHierarchyStep.errorHierarchy.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD v17[5];

  v3 = v2;
  v6 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v17[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6916B8(&qword_256EA2888);
  v9 = sub_23F6F59B0();
  *(_OWORD *)(v9 + 16) = xmmword_23FB50A20;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v3, a1);
  v10 = sub_23FB2FB60();
  if (v10)
  {
    v11 = (void *)v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a1);
  }
  else
  {
    v11 = (void *)sub_23F6B5AD4();
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v12, v8, a1);
  }
  v13 = sub_23FB2C284();

  *(_QWORD *)(v9 + 32) = v13;
  sub_23F6F5A14();
  v14 = v17[0];
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a2 + 16))(v17, a1, a2);
  v15 = sub_23F6F59BC();
  v16 = v14;
  sub_23F6B99A4(v15);
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v17);
  sub_23F6B69E0();
}

void sub_23F6F572C(uint64_t a1)
{
  uint64_t v2;

  sub_23F6D3458(&qword_256EA4820, (uint64_t (*)(uint64_t))MEMORY[0x24BE52080], (uint64_t)&protocol conformance descriptor for IntelligenceFlowError);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23F6F5768()
{
  sub_23F6D3458(&qword_256EA4828, (uint64_t (*)(uint64_t))MEMORY[0x24BE52080], (uint64_t)&protocol conformance descriptor for IntelligenceFlowError);
}

void sub_23F6F5794(uint64_t a1)
{
  uint64_t v2;

  sub_23F6D3458(&qword_256EA4830, (uint64_t (*)(uint64_t))sub_23F6F57D0, (uint64_t)&protocol conformance descriptor for NSError);
  *(_QWORD *)(a1 + 8) = v2;
}

unint64_t sub_23F6F57D0()
{
  unint64_t result;

  result = qword_256EA4838;
  if (!qword_256EA4838)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256EA4838);
  }
  return result;
}

void sub_23F6F580C()
{
  sub_23F6D3458(&qword_256EA4840, (uint64_t (*)(uint64_t))sub_23F6F57D0, MEMORY[0x24BDD01A8]);
}

uint64_t dispatch thunk of ErrorHierarchy.errorHierarchy.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ErrorHierarchyStep.innerError.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void sub_23F6F5850()
{
  sub_23F6F54A0((uint64_t (*)(uint64_t))type metadata accessor for ExecutorError, &qword_256EA4860, (uint64_t)&protocol conformance descriptor for ExecutorError, (void (*)(_QWORD *__return_ptr, uint64_t))ExecutorError.innerError.getter);
}

void sub_23F6F5884()
{
  sub_23F6F54A0((uint64_t (*)(uint64_t))type metadata accessor for PlannerError, &qword_256EA4858, (uint64_t)&protocol conformance descriptor for PlannerError, (void (*)(_QWORD *__return_ptr, uint64_t))PlannerError.innerError.getter);
}

void sub_23F6F58B8()
{
  sub_23F6F54A0((uint64_t (*)(uint64_t))type metadata accessor for SessionCoordinatorError, &qword_256EA4850, (uint64_t)&protocol conformance descriptor for SessionCoordinatorError, (void (*)(_QWORD *__return_ptr, uint64_t))SessionCoordinatorError.innerError.getter);
}

void sub_23F6F58EC()
{
  sub_23F6F54A0((uint64_t (*)(uint64_t))type metadata accessor for SessionError, &qword_256EA4848, (uint64_t)&protocol conformance descriptor for SessionError, (void (*)(_QWORD *__return_ptr, uint64_t))SessionError.innerError.getter);
}

void sub_23F6F5920(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_23F6F59F8(a1, a2, a3);
  sub_23F6B5FFC(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_23F694CC8();
}

void sub_23F6F594C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_23F6F59F8(a1, a2, a3);
  sub_23F6B5FFC(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_23F694CC8();
}

void sub_23F6F5978(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  sub_23F694CC8();
}

uint64_t sub_23F6F59B0()
{
  return swift_allocObject();
}

uint64_t sub_23F6F59BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 - 80);
  v2 = *(_QWORD *)(v0 - 72);
  sub_23F6ADC98((_QWORD *)(v0 - 104), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t _s30IntelligenceFlowPlannerSupport18ErrorHierarchyStepPAAE9errorCodeSivg_0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t _s30IntelligenceFlowPlannerSupport18ErrorHierarchyStepPAAE11errorDomainSSvgZ_0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_23F6F59F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

uint64_t sub_23F6F5A14()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = v0;
  return sub_23FB2F3EC();
}

uint64_t dispatch thunk of EventSending.publisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EventSending.send(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of EventSending.sendAsync(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 24) + *(_QWORD *)(a3 + 24));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23F6B796C;
  return v9(a1, a2, a3);
}

uint64_t sub_23F6F5AA8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x726568746FLL && a2 == 0xE500000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F5464656C696166 && a2 == 0xEF65747563657845)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F6F5BB0(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6F5464656C696166;
  else
    return 0x726568746FLL;
}

uint64_t sub_23F6F5BF0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F6F5C5C()
{
  char *v0;

  return sub_23F6F5BB0(*v0);
}

uint64_t sub_23F6F5C64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F6F5AA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F6F5C88()
{
  sub_23F6F6584();
  return sub_23FB2FD10();
}

uint64_t sub_23F6F5CB0()
{
  sub_23F6F6584();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6F5CD8()
{
  sub_23F6F65C0();
  return sub_23FB2FD10();
}

uint64_t sub_23F6F5D00()
{
  sub_23F6F65C0();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6F5D28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F6F5BF0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F6F5D50()
{
  sub_23F6F65FC();
  return sub_23FB2FD10();
}

uint64_t sub_23F6F5D78()
{
  sub_23F6F65FC();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6F5DA0()
{
  sub_23F6F2930(&qword_256EA4900, (uint64_t (*)(uint64_t))type metadata accessor for ExecutorError, (uint64_t)&protocol conformance descriptor for ExecutorError);
  return sub_23FB2FC08();
}

uint64_t sub_23F6F5DE0()
{
  sub_23F6F2930(&qword_256EA4900, (uint64_t (*)(uint64_t))type metadata accessor for ExecutorError, (uint64_t)&protocol conformance descriptor for ExecutorError);
  return sub_23FB2FBFC();
}

void ExecutorError.innerError.getter(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;

  sub_23F6F7564();
  sub_23F693E20();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v14 - v7;
  sub_23F6F5FD8(v1, (uint64_t)&v14 - v7);
  v9 = sub_23F6F74E8();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9) == 1)
  {
    sub_23F6F5FD8(v1, (uint64_t)v6);
    sub_23F6F2930(&qword_256EA4860, (uint64_t (*)(uint64_t))type metadata accessor for ExecutorError, (uint64_t)&protocol conformance descriptor for ExecutorError);
    v10 = (void *)swift_allocError();
    sub_23F6F6058((uint64_t)v6, v11);
    v12 = sub_23FB2C284();
    a1[3] = sub_23F6F57D0();
    a1[4] = sub_23F6F2930(&qword_256EA4878, (uint64_t (*)(uint64_t))sub_23F6F57D0, (uint64_t)&protocol conformance descriptor for NSError);

    *a1 = v12;
  }
  else
  {
    a1[3] = v9;
    a1[4] = sub_23F6F2930(&qword_256EA4870, (uint64_t (*)(uint64_t))MEMORY[0x24BE52080], (uint64_t)&protocol conformance descriptor for IntelligenceFlowError);
    v13 = sub_23F6F601C(a1);
    (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v13, v8, v9);
  }
}

uint64_t type metadata accessor for ExecutorError()
{
  uint64_t result;

  result = qword_256EA4978;
  if (!qword_256EA4978)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F6F5FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ExecutorError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_23F6F601C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_23F6F6058(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ExecutorError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ExecutorError.errorCodeValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6F7564();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F6BD134();
  v4 = v3 - v2;
  sub_23F6F5FD8(v0, v3 - v2);
  v5 = sub_23F6F74E8();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5) == 1)return 2;
  sub_23F6F6118(v4);
  return 1;
}

uint64_t sub_23F6F6118(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ExecutorError();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static ExecutorError.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  void (*v21)(uint64_t, uint64_t);

  v4 = sub_23F6F74E8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6BD134();
  v8 = v7 - v6;
  sub_23F6F7564();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6BD134();
  v12 = v11 - v10;
  sub_23F6916B8(&qword_256EA4880);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6BD134();
  v16 = v15 - v14;
  v18 = v15 - v14 + *(int *)(v17 + 48);
  sub_23F6F5FD8(a1, v15 - v14);
  sub_23F6F5FD8(a2, v18);
  sub_23F6F7524(v16);
  if (!v20)
  {
    sub_23F6F5FD8(v16, v12);
    sub_23F6F7524(v18);
    if (!v20)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v8, v18, v4);
      v19 = sub_23FB2C6EC();
      v21 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
      v21(v8, v4);
      v21(v12, v4);
      sub_23F6F6118(v16);
      return v19 & 1;
    }
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v12, v4);
LABEL_9:
    sub_23F6F62D8(v16);
    v19 = 0;
    return v19 & 1;
  }
  sub_23F6F7524(v18);
  if (!v20)
    goto LABEL_9;
  sub_23F6F6118(v16);
  v19 = 1;
  return v19 & 1;
}

uint64_t sub_23F6F62D8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F6916B8(&qword_256EA4880);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void ExecutorError.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = sub_23F6916B8(&qword_256EA4888);
  v18 = *(_QWORD *)(v3 - 8);
  v19 = v3;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B51A4();
  v17 = v5;
  v6 = sub_23F6916B8(&qword_256EA4890);
  v21 = *(_QWORD *)(v6 - 8);
  v22 = v6;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B51A4();
  v20 = v8;
  v9 = sub_23F6F74E8();
  v24 = *(_QWORD *)(v9 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6F74CC();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6BD134();
  v14 = v13 - v12;
  v15 = sub_23F6916B8(&qword_256EA4898);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6BD134();
  sub_23F6ADC98(a1, a1[3]);
  sub_23F6F6584();
  sub_23FB2FCC8();
  sub_23F6F5FD8(v23, v14);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v14, 1, v9) == 1)
  {
    sub_23F6F65C0();
    sub_23F6F7514();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v1, v14, v9);
    sub_23F6F65FC();
    sub_23F6F7514();
    sub_23F6F2930(&qword_256EA48B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE52080], MEMORY[0x24BE52090]);
    sub_23FB2FB18();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v1, v9);
  }
  sub_23F6F7574(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
  sub_23F6B5100();
}

unint64_t sub_23F6F6584()
{
  unint64_t result;

  result = qword_256EA48A0;
  if (!qword_256EA48A0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB50FCC, &type metadata for ExecutorError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA48A0);
  }
  return result;
}

unint64_t sub_23F6F65C0()
{
  unint64_t result;

  result = qword_256EA48A8;
  if (!qword_256EA48A8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB50F7C, &type metadata for ExecutorError.FailedToExecuteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA48A8);
  }
  return result;
}

unint64_t sub_23F6F65FC()
{
  unint64_t result;

  result = qword_256EA48B0;
  if (!qword_256EA48B0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB50F2C, &type metadata for ExecutorError.OtherCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA48B0);
  }
  return result;
}

void ExecutorError.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char v55;
  char v56;

  v50 = a2;
  v4 = sub_23F6916B8(&qword_256EA48C0);
  v46 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B51A4();
  v51 = v6;
  v7 = sub_23F6916B8(&qword_256EA48C8);
  v8 = *(_QWORD *)(v7 - 8);
  v48 = v7;
  v49 = v8;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B51A4();
  v52 = v10;
  v11 = sub_23F6916B8(&qword_256EA48D0);
  v53 = *(_QWORD *)(v11 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23F6F74CC();
  sub_23F693E20();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v43 - v18;
  sub_23F6ADC98(a1, a1[3]);
  sub_23F6F6584();
  v20 = (uint64_t)v54;
  sub_23FB2FCB0();
  if (v20)
    goto LABEL_7;
  v43 = v17;
  v54 = v19;
  v21 = sub_23FB2FA94();
  v22 = *(_QWORD *)(v21 + 16);
  v23 = v2;
  v44 = a1;
  v45 = v11;
  if (!v22
    || (v24 = *(_BYTE *)(v21 + 32),
        sub_23F6B4E44(1, v22, v21, v21 + 32, 0, (2 * v22) | 1),
        v26 = v25,
        v28 = v27,
        swift_bridgeObjectRelease(),
        v26 != v28 >> 1))
  {
    v30 = v53;
    v31 = sub_23FB2F818();
    swift_allocError();
    v33 = v32;
    sub_23F6916B8(&qword_256EA1870);
    *v33 = v13;
    v34 = v45;
    sub_23FB2FA04();
    sub_23FB2F80C();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v33, *MEMORY[0x24BEE26D0], v31);
    swift_willThrow();
    sub_23F6B68E0();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v23, v34);
    a1 = v44;
LABEL_7:
    v35 = (uint64_t)a1;
    goto LABEL_8;
  }
  if ((v24 & 1) != 0)
  {
    v56 = 1;
    sub_23F6F65C0();
    v29 = v51;
    sub_23F6F7504();
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v29, v47);
    sub_23F6B68E0();
    v36 = sub_23F6F7550();
    v37(v36);
    v38 = sub_23F6F74E8();
    v39 = (uint64_t)v54;
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v54, 1, 1, v38);
  }
  else
  {
    v55 = 0;
    sub_23F6F65FC();
    sub_23F6F7504();
    v41 = sub_23F6F74E8();
    sub_23F6F2930(&qword_256EA48D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE52080], MEMORY[0x24BE52098]);
    v42 = (uint64_t)v43;
    sub_23FB2FA7C();
    sub_23F6F74F0();
    sub_23F6F756C();
    sub_23F6F7540();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v42, 0, 1, v41);
    v39 = (uint64_t)v54;
    sub_23F6F6058(v42, (uint64_t)v54);
  }
  v40 = (uint64_t)v44;
  sub_23F6F6058(v39, v50);
  v35 = v40;
LABEL_8:
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v35);
  sub_23F6B5100();
}

void sub_23F6F6A70(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  ExecutorError.init(from:)(a1, a2);
}

void sub_23F6F6A84(_QWORD *a1)
{
  ExecutorError.encode(to:)(a1);
}

uint64_t sub_23F6F6AA0(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23F6F2930(&qword_256EA48E0, (uint64_t (*)(uint64_t))type metadata accessor for ExecutorError, (uint64_t)&protocol conformance descriptor for ExecutorError);
  a1[2] = sub_23F6F2930(&qword_256EA48E8, (uint64_t (*)(uint64_t))type metadata accessor for ExecutorError, (uint64_t)&protocol conformance descriptor for ExecutorError);
  a1[3] = sub_23F6F2930(&qword_256EA48F0, (uint64_t (*)(uint64_t))type metadata accessor for ExecutorError, (uint64_t)&protocol conformance descriptor for ExecutorError);
  result = sub_23F6F2930(&qword_256EA48F8, (uint64_t (*)(uint64_t))type metadata accessor for ExecutorError, (uint64_t)&protocol conformance descriptor for ExecutorError);
  a1[4] = result;
  return result;
}

uint64_t sub_23F6F6B34(uint64_t a1)
{
  uint64_t result;

  result = sub_23F6F2930(&qword_256EA48E0, (uint64_t (*)(uint64_t))type metadata accessor for ExecutorError, (uint64_t)&protocol conformance descriptor for ExecutorError);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23F6F6B70(uint64_t a1)
{
  uint64_t result;

  result = sub_23F6F2930(&qword_256EA4900, (uint64_t (*)(uint64_t))type metadata accessor for ExecutorError, (uint64_t)&protocol conformance descriptor for ExecutorError);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23F6F6BAC()
{
  return sub_23F6F2930(&qword_256EA4860, (uint64_t (*)(uint64_t))type metadata accessor for ExecutorError, (uint64_t)&protocol conformance descriptor for ExecutorError);
}

uint64_t *initializeBufferWithCopyOfBuffer for ExecutorError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_23FB2C6F8();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for ExecutorError(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23FB2C6F8();
  result = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return result;
}

void *initializeWithCopy for ExecutorError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23FB2C6F8();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithCopy for ExecutorError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;

  v6 = sub_23FB2C6F8();
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    v9 = *(_QWORD *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  return a1;
}

void *initializeWithTake for ExecutorError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23FB2C6F8();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for ExecutorError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;

  v6 = sub_23FB2C6F8();
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    v9 = *(_QWORD *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ExecutorError()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F6F6FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_23F6F74E8();
  v5 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ExecutorError()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F6F7030(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_23F6F74E8();
  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, v5, a3, v6);
}

uint64_t sub_23F6F7074(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23FB2C6F8();
  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v2);
}

uint64_t sub_23F6F70A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FB2C6F8();
  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, a2, 1, v4);
}

uint64_t sub_23F6F70DC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FB2C6F8();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ExecutorError.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F6F717C + 4 * byte_23FB50B95[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F6F71B0 + 4 * byte_23FB50B90[v4]))();
}

uint64_t sub_23F6F71B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F6F71B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F6F71C0);
  return result;
}

uint64_t sub_23F6F71CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F6F71D4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F6F71D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F6F71E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ExecutorError.CodingKeys()
{
  return &type metadata for ExecutorError.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ExecutorError.OtherCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F6F723C + 4 * byte_23FB50B9A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F6F725C + 4 * byte_23FB50B9F[v4]))();
}

_BYTE *sub_23F6F723C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F6F725C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F6F7264(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F6F726C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F6F7274(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F6F727C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ExecutorError.OtherCodingKeys()
{
  return &type metadata for ExecutorError.OtherCodingKeys;
}

ValueMetadata *type metadata accessor for ExecutorError.FailedToExecuteCodingKeys()
{
  return &type metadata for ExecutorError.FailedToExecuteCodingKeys;
}

unint64_t sub_23F6F72AC()
{
  unint64_t result;

  result = qword_256EA4988;
  if (!qword_256EA4988)
  {
    result = MEMORY[0x242674E5C](&unk_23FB50E4C, &type metadata for ExecutorError.OtherCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4988);
  }
  return result;
}

unint64_t sub_23F6F72EC()
{
  unint64_t result;

  result = qword_256EA4990;
  if (!qword_256EA4990)
  {
    result = MEMORY[0x242674E5C](&unk_23FB50F04, &type metadata for ExecutorError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4990);
  }
  return result;
}

unint64_t sub_23F6F732C()
{
  unint64_t result;

  result = qword_256EA4998;
  if (!qword_256EA4998)
  {
    result = MEMORY[0x242674E5C](&unk_23FB50DBC, &type metadata for ExecutorError.OtherCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4998);
  }
  return result;
}

unint64_t sub_23F6F736C()
{
  unint64_t result;

  result = qword_256EA49A0;
  if (!qword_256EA49A0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB50DE4, &type metadata for ExecutorError.OtherCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA49A0);
  }
  return result;
}

unint64_t sub_23F6F73AC()
{
  unint64_t result;

  result = qword_256EA49A8;
  if (!qword_256EA49A8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB50D6C, &type metadata for ExecutorError.FailedToExecuteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA49A8);
  }
  return result;
}

unint64_t sub_23F6F73EC()
{
  unint64_t result;

  result = qword_256EA49B0;
  if (!qword_256EA49B0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB50D94, &type metadata for ExecutorError.FailedToExecuteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA49B0);
  }
  return result;
}

unint64_t sub_23F6F742C()
{
  unint64_t result;

  result = qword_256EA49B8;
  if (!qword_256EA49B8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB50E74, &type metadata for ExecutorError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA49B8);
  }
  return result;
}

unint64_t sub_23F6F746C()
{
  unint64_t result;

  result = qword_256EA49C0;
  if (!qword_256EA49C0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB50E9C, &type metadata for ExecutorError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA49C0);
  }
  return result;
}

uint64_t _s30IntelligenceFlowPlannerSupport13ExecutorErrorO16errorDomainValueSSvgZ_0()
{
  return 0x726F747563657845;
}

uint64_t sub_23F6F74CC()
{
  return type metadata accessor for ExecutorError();
}

uint64_t sub_23F6F74E8()
{
  return sub_23FB2C6F8();
}

uint64_t sub_23F6F74F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 128) + 8))(v1, v0);
}

uint64_t sub_23F6F7504()
{
  return sub_23FB2F9F8();
}

uint64_t sub_23F6F7514()
{
  return sub_23FB2FAA0();
}

uint64_t sub_23F6F7524(uint64_t a1)
{
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v1);
}

uint64_t sub_23F6F7540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_23F6F7550()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F6F7564()
{
  return type metadata accessor for ExecutorError();
}

uint64_t sub_23F6F756C()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23F6F7574@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23F6F7580(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v14 = MEMORY[0x24BEE4AF8];
    sub_23F711194(0, v1, 0);
    v2 = v14;
    v4 = *(_QWORD *)(sub_23FB2C764() - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      v7 = sub_23FB2C71C();
      v9 = v8;
      v11 = *(_QWORD *)(v14 + 16);
      v10 = *(_QWORD *)(v14 + 24);
      if (v11 >= v10 >> 1)
        sub_23F711194(v10 > 1, v11 + 1, 1);
      *(_QWORD *)(v14 + 16) = v11 + 1;
      v12 = v14 + 16 * v11;
      *(_QWORD *)(v12 + 32) = v7;
      *(_QWORD *)(v12 + 40) = v9;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void static Expression.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  _QWORD v75[20];
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v89 = a1;
  v90 = a2;
  type metadata accessor for OpenExpression(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v3);
  v5 = sub_23F70D434((uint64_t)v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for CancelExpression(v5);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  v8 = sub_23F70D434((uint64_t)v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for RejectExpression(v8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v11 = sub_23F70D434((uint64_t)v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for UndoExpression(v11);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  v14 = sub_23F70D434((uint64_t)v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for PickOneExpression(v14);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v15);
  v17 = sub_23F70D434((uint64_t)v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for ConfirmExpression(v17);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v18);
  v20 = sub_23F70D434((uint64_t)v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v75[4] = type metadata accessor for PickExpression(v20);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v21);
  v23 = sub_23F70D434((uint64_t)v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v75[1] = type metadata accessor for UpdateParametersExpression(v23);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v24);
  v26 = sub_23F70D434((uint64_t)v75 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v75[0] = type metadata accessor for IndexExpression(v26);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v27);
  v29 = sub_23F70D434((uint64_t)v75 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v75[3] = type metadata accessor for DotExpression(v29);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v30);
  v32 = sub_23F70D434((uint64_t)v75 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  v75[5] = type metadata accessor for InfixExpression(v32);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v33);
  v35 = sub_23F70D434((uint64_t)v75 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  v75[2] = type metadata accessor for PrefixExpression(v35);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F70D434((uint64_t)v75 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  v76 = sub_23FB2C764();
  v75[19] = *(_QWORD *)(v76 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F6B51A4();
  v40 = sub_23F70D434(v39);
  type metadata accessor for Expression(v40);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F693E0C();
  v82 = v42;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v43);
  sub_23F6D3D14();
  v88 = v44;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F6D3D14();
  v87 = v46;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v47);
  sub_23F6D3D14();
  v86 = v48;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v49);
  sub_23F6D3D14();
  v79 = v50;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v51);
  sub_23F6D3D14();
  v85 = v52;
  sub_23F6B5664();
  v54 = MEMORY[0x24BDAC7A8](v53);
  MEMORY[0x24BDAC7A8](v54);
  sub_23F6D3D14();
  v81 = v55;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v56);
  sub_23F6D3D14();
  v84 = v57;
  sub_23F6B5664();
  v59 = MEMORY[0x24BDAC7A8](v58);
  MEMORY[0x24BDAC7A8](v59);
  sub_23F70D958();
  MEMORY[0x24BDAC7A8](v60);
  sub_23F6D3D14();
  v80 = v61;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v62);
  sub_23F6D3D14();
  v78 = v63;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v64);
  sub_23F6D3D14();
  v83 = v65;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v66);
  sub_23F6D3D14();
  v77 = v67;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v68);
  sub_23F6D3F74();
  MEMORY[0x24BDAC7A8](v69);
  sub_23F70DD48();
  MEMORY[0x24BDAC7A8](v70);
  sub_23F6916B8(&qword_256EA49C8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v71);
  sub_23F6B573C();
  v73 = v2 + *(int *)(v72 + 48);
  sub_23F6F5920(v89, v2, type metadata accessor for Expression);
  v89 = v73;
  sub_23F6F5920(v90, v73, type metadata accessor for Expression);
  v90 = v2;
  v74 = (char *)sub_23F6F7B80 + 4 * word_23FB51020[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23F6F7B80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v3 = sub_23F70D560();
  sub_23F6F5920(v3, v0, v4);
  v6 = *(_QWORD *)v0;
  v5 = *(_QWORD *)(v0 + 8);
  v7 = *(_BYTE *)(v0 + 16);
  v8 = *(_QWORD *)(v2 - 152);
  if (sub_23F70D4E8())
  {
    sub_23F70D91C();
    sub_23F6B4F84(v1, &qword_256EA49C8);
  }
  else
  {
    v9 = *(_QWORD *)v8;
    v10 = *(_QWORD *)(v8 + 8);
    v11 = *(_BYTE *)(v8 + 16);
    *(_QWORD *)(v2 - 112) = v6;
    *(_QWORD *)(v2 - 104) = v5;
    *(_BYTE *)(v2 - 96) = v7;
    *(_QWORD *)(v2 - 136) = v9;
    *(_QWORD *)(v2 - 128) = v10;
    *(_BYTE *)(v2 - 120) = v11;
    static ValueExpression.== infix(_:_:)(v2 - 112);
    sub_23F6FEA10(v9, v10, v11);
    sub_23F70D91C();
    sub_23F6F8C88(v1, type metadata accessor for Expression);
  }
  sub_23F693DDC();
}

void static ValueExpression.== infix(_:_:)(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_23F6F8450()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (v4)
  {
    sub_23F6FEA38(v0, v1, v4);
    v10 = sub_23F6B5EE4();
    v12 = sub_23F70D5C4(v10, v11, v3);
    sub_23F6FEA10(v12, v13, v4);
    v9 = 0;
  }
  else
  {
    v5 = sub_23F6B5EE4();
    sub_23F6FEA10(v5, v6, 0);
    v7 = sub_23F6B5994();
    sub_23F6FEA10(v7, v8, 0);
    v9 = ((v2 & 1) == 0) ^ v0;
  }
  return v9 & 1;
}

void static PrefixExpression.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;

  if (*a1 == *a2)
  {
    v2 = type metadata accessor for PrefixExpression(0);
    sub_23F70D938(*(int *)(v2 + 20));
    sub_23F70D628();
  }
  else
  {
    sub_23F694CC8();
  }
}

void static InfixExpression.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;

  if (*a1 == *a2
    && (v2 = sub_23F70D9C8(),
        sub_23F70D938(*(int *)(v2 + 20)),
        (_s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0() & 1) != 0))
  {
    sub_23F70D938(*(int *)(v2 + 24));
    _s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0();
  }
  else
  {
    sub_23F694C84();
  }
}

void static DotExpression.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  BOOL v6;

  if ((sub_23F70D678() & 1) == 0
    || ((sub_23F70D710(), v3 = *(_QWORD *)(v1 + v2), v4 = *(_QWORD *)(v1 + v2 + 8), v5 = (_QWORD *)(v0 + v2), v3 == *v5)
      ? (v6 = v4 == v5[1])
      : (v6 = 0),
        v6))
  {
    sub_23F694CC8();
  }
  else
  {
    sub_23FB2FB78();
  }
}

void static IndexExpression.== infix(_:_:)()
{
  uint64_t v0;

  if ((sub_23F70D678() & 1) != 0)
  {
    v0 = type metadata accessor for IndexExpression(0);
    sub_23F70D938(*(int *)(v0 + 20));
    sub_23F70D628();
  }
  else
  {
    sub_23F694CC8();
  }
}

void static UpdateParametersExpression.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  if ((sub_23F70D678() & 1) != 0)
  {
    v22 = *(int *)(type metadata accessor for UpdateParametersExpression(0) + 20);
    sub_23F699174(*(_QWORD *)(v21 + v22), *(_QWORD *)(v20 + v22), v23, v24, v25, v26, v27, v28, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20);
  }
  else
  {
    sub_23F694CC8();
  }
}

void static CallExpression.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (sub_23F6B5280() & 1) != 0)
  {
    sub_23F6B5994();
    sub_23F69E78C();
  }
  else
  {
    sub_23F694CC8();
  }
}

void static SayExpression.== infix(_:_:)()
{
  sub_23F699158();
}

void static PickExpression.== infix(_:_:)()
{
  if ((sub_23F70D678() & 1) != 0)
    type metadata accessor for PickExpression(0);
  sub_23F694CC8();
}

void static SearchExpression.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1])
    sub_23F6B5280();
  sub_23F694C84();
}

uint64_t type metadata accessor for OpenExpression(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EA5A70);
}

uint64_t type metadata accessor for CancelExpression(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EA59E0);
}

uint64_t type metadata accessor for RejectExpression(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EA5950);
}

uint64_t type metadata accessor for UndoExpression(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EA58C0);
}

uint64_t type metadata accessor for PickOneExpression(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EA5830);
}

uint64_t type metadata accessor for ConfirmExpression(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EA57A0);
}

uint64_t type metadata accessor for PickExpression(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EA5710);
}

uint64_t type metadata accessor for UpdateParametersExpression(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EA55E8);
}

uint64_t type metadata accessor for IndexExpression(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EA5558);
}

uint64_t type metadata accessor for DotExpression(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EA54C8);
}

uint64_t type metadata accessor for InfixExpression(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EA5430);
}

uint64_t type metadata accessor for PrefixExpression(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EA53A0);
}

uint64_t type metadata accessor for Expression(uint64_t a1)
{
  return sub_23F6D89A0(a1, (uint64_t *)&unk_256EA5308);
}

void static ResolveToolExpression.== infix(_:_:)(_QWORD **a1, _QWORD **a2)
{
  sub_23F6957CC(*a1, *a2);
}

void static UndoExpression.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;

  v7 = sub_23F6B58C8();
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F6916B8(&qword_256EA49D0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5298();
  sub_23F6916B8(&qword_256EA49D8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F70D958();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v24 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v24 - v18;
  sub_23F6FEA60(a1, (uint64_t)&v24 - v18);
  sub_23F6FEA60(a2, (uint64_t)v17);
  v20 = v2 + *(int *)(v11 + 48);
  sub_23F6FEA60((uint64_t)v19, v2);
  sub_23F6FEA60((uint64_t)v17, v20);
  sub_23F70D8B8(v2);
  if (!v21)
  {
    sub_23F6FEA60(v2, v3);
    sub_23F70D8B8(v20);
    if (!v21)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v10, v20, v7);
      sub_23F6B4EEC((uint64_t)&unk_256EA27F0);
      sub_23FB2F11C();
      v22 = *(void (**)(uint64_t))(v4 + 8);
      v23 = sub_23F70DC34();
      v22(v23);
      sub_23F6B6EF8((uint64_t)v17);
      sub_23F6B6EF8((uint64_t)v19);
      ((void (*)(uint64_t, uint64_t))v22)(v3, v7);
      sub_23F6B6EF8(v2);
      goto LABEL_10;
    }
    sub_23F6B6EF8((uint64_t)v17);
    sub_23F6B6EF8((uint64_t)v19);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v7);
LABEL_9:
    sub_23F6B4F84(v2, &qword_256EA49D0);
    goto LABEL_10;
  }
  sub_23F6B6EF8((uint64_t)v17);
  sub_23F6B6EF8((uint64_t)v19);
  sub_23F70D8B8(v20);
  if (!v21)
    goto LABEL_9;
  sub_23F6B4F84(v2, &qword_256EA49D8);
LABEL_10:
  sub_23F693DDC();
}

void sub_23F6F8C88(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = sub_23F6F08EC(a1, a2);
  sub_23F6B6454(v2);
  sub_23F694CC8();
}

void sub_23F6F8CA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t (*v3)(uint64_t, uint64_t);

  sub_23F6F59F8(a1, a2, a3);
  sub_23F70D880();
  sub_23F6B5FFC(v3);
  sub_23F694CC8();
}

uint64_t sub_23F6F8CCC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;
  char v24;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x786966657270 && a2 == 0xE600000000000000;
      if (v7 || (sub_23FB2FB78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x7869666E69 && a2 == 0xE500000000000000;
        if (v8 || (sub_23FB2FB78() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 7630692 && a2 == 0xE300000000000000;
          if (v9 || (sub_23FB2FB78() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x7865646E69 && a2 == 0xE500000000000000;
            if (v10 || (sub_23FB2FB78() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0xD000000000000010 && a2 == 0x800000023FB30E90 || (sub_23FB2FB78() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              v11 = a1 == 1819042147 && a2 == 0xE400000000000000;
              if (v11 || (sub_23FB2FB78() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else
              {
                v12 = a1 == 7954803 && a2 == 0xE300000000000000;
                if (v12 || (sub_23FB2FB78() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else
                {
                  v13 = a1 == 1801677168 && a2 == 0xE400000000000000;
                  if (v13 || (sub_23FB2FB78() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 9;
                  }
                  else
                  {
                    v14 = a1 == 0x6D7269666E6F63 && a2 == 0xE700000000000000;
                    if (v14 || (sub_23FB2FB78() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 10;
                    }
                    else
                    {
                      v15 = a1 == 0x686372616573 && a2 == 0xE600000000000000;
                      if (v15 || (sub_23FB2FB78() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 11;
                      }
                      else
                      {
                        v16 = a1 == 0x656E4F6B636970 && a2 == 0xE700000000000000;
                        if (v16 || (sub_23FB2FB78() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 12;
                        }
                        else
                        {
                          v17 = a1 == 0x5465766C6F736572 && a2 == 0xEB000000006C6F6FLL;
                          if (v17 || (sub_23FB2FB78() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 13;
                          }
                          else
                          {
                            v18 = a1 == 1868852853 && a2 == 0xE400000000000000;
                            if (v18 || (sub_23FB2FB78() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 14;
                            }
                            else
                            {
                              v19 = a1 == 0x7463656A6572 && a2 == 0xE600000000000000;
                              if (v19 || (sub_23FB2FB78() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 15;
                              }
                              else
                              {
                                v20 = a1 == 0x6C65636E6163 && a2 == 0xE600000000000000;
                                if (v20 || (sub_23FB2FB78() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 16;
                                }
                                else if (a1 == 0xD000000000000010 && a2 == 0x800000023FB30E70
                                       || (sub_23FB2FB78() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 17;
                                }
                                else
                                {
                                  v21 = a1 == 0x69686374614D6F6ELL && a2 == 0xEE006C6F6F54676ELL;
                                  if (v21 || (sub_23FB2FB78() & 1) != 0)
                                  {
                                    swift_bridgeObjectRelease();
                                    return 18;
                                  }
                                  else if (a1 == 0xD000000000000010 && a2 == 0x800000023FB30EB0
                                         || (sub_23FB2FB78() & 1) != 0)
                                  {
                                    swift_bridgeObjectRelease();
                                    return 19;
                                  }
                                  else
                                  {
                                    v22 = a1 == 0x616C50664F646E65 && a2 == 0xE90000000000006ELL;
                                    if (v22 || (sub_23FB2FB78() & 1) != 0)
                                    {
                                      swift_bridgeObjectRelease();
                                      return 20;
                                    }
                                    else if (a1 == 1852141679 && a2 == 0xE400000000000000)
                                    {
                                      swift_bridgeObjectRelease();
                                      return 21;
                                    }
                                    else
                                    {
                                      v24 = sub_23FB2FB78();
                                      swift_bridgeObjectRelease();
                                      if ((v24 & 1) != 0)
                                        return 21;
                                      else
                                        return 22;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_23F6F94EC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F6F951C + 4 * byte_23FB51053[a1]))(0x65756C6176, 0xE500000000000000);
}

uint64_t sub_23F6F951C()
{
  return 0x6E656D6574617473;
}

uint64_t sub_23F6F953C()
{
  return 0x786966657270;
}

uint64_t sub_23F6F9550()
{
  return 0x7869666E69;
}

unint64_t sub_23F6F957C()
{
  return 0xD000000000000010;
}

uint64_t sub_23F6F96A0()
{
  return 0x616C50664F646E65;
}

uint64_t sub_23F6F96BC()
{
  return 1852141679;
}

uint64_t sub_23F6F96CC()
{
  sub_23F6FEEE0();
  return sub_23FB2FD10();
}

uint64_t sub_23F6F96F4()
{
  sub_23F6FEEE0();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6F971C()
{
  sub_23F6FEC10();
  return sub_23FB2FD10();
}

uint64_t sub_23F6F9744()
{
  sub_23F6FEC10();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6F976C()
{
  unsigned __int8 *v0;

  return sub_23F6F94EC(*v0);
}

uint64_t sub_23F6F9774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F6F8CCC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F6F9798()
{
  sub_23F6FEAA8();
  return sub_23FB2FD10();
}

uint64_t sub_23F6F97C0()
{
  sub_23F6FEAA8();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6F97E8()
{
  sub_23F6FEDF0();
  return sub_23FB2FD10();
}

uint64_t sub_23F6F9810()
{
  sub_23F6FEDF0();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6F9838()
{
  sub_23F6FEB5C();
  return sub_23FB2FD10();
}

uint64_t sub_23F6F9860()
{
  sub_23F6FEB5C();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6F9888()
{
  sub_23F6FEFD0();
  return sub_23FB2FD10();
}

uint64_t sub_23F6F98B0()
{
  sub_23F6FEFD0();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6F98D8()
{
  sub_23F6FEB20();
  return sub_23FB2FD10();
}

uint64_t sub_23F6F9900()
{
  sub_23F6FEB20();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6F9928()
{
  sub_23F6FEBD4();
  return sub_23FB2FD10();
}

uint64_t sub_23F6F9950()
{
  sub_23F6FEBD4();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6F9978()
{
  sub_23F6FEF94();
  return sub_23FB2FD10();
}

uint64_t sub_23F6F99A0()
{
  sub_23F6FEF94();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6F99C8()
{
  sub_23F6FF00C();
  return sub_23FB2FD10();
}

uint64_t sub_23F6F99F0()
{
  sub_23F6FF00C();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6F9A18()
{
  sub_23F6FEB98();
  return sub_23FB2FD10();
}

uint64_t sub_23F6F9A40()
{
  sub_23F6FEB98();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6F9A68()
{
  sub_23F6FEAE4();
  return sub_23FB2FD10();
}

uint64_t sub_23F6F9A90()
{
  sub_23F6FEAE4();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6F9AB8()
{
  sub_23F6FEE2C();
  return sub_23FB2FD10();
}

uint64_t sub_23F6F9AE0()
{
  sub_23F6FEE2C();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6F9B08()
{
  sub_23F6FED3C();
  return sub_23FB2FD10();
}

uint64_t sub_23F6F9B30()
{
  sub_23F6FED3C();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6F9B58()
{
  sub_23F6FF048();
  return sub_23FB2FD10();
}

uint64_t sub_23F6F9B80()
{
  sub_23F6FF048();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6F9BA8()
{
  sub_23F6FEC4C();
  return sub_23FB2FD10();
}

uint64_t sub_23F6F9BD0()
{
  sub_23F6FEC4C();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6F9BF8()
{
  sub_23F6FECC4();
  return sub_23FB2FD10();
}

uint64_t sub_23F6F9C20()
{
  sub_23F6FECC4();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6F9C48()
{
  sub_23F6FEE68();
  return sub_23FB2FD10();
}

uint64_t sub_23F6F9C70()
{
  sub_23F6FEE68();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6F9C98()
{
  sub_23F6FED78();
  return sub_23FB2FD10();
}

uint64_t sub_23F6F9CC0()
{
  sub_23F6FED78();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6F9CE8()
{
  sub_23F6FF084();
  return sub_23FB2FD10();
}

uint64_t sub_23F6F9D10()
{
  sub_23F6FF084();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6F9D38()
{
  sub_23F6FEC88();
  return sub_23FB2FD10();
}

uint64_t sub_23F6F9D60()
{
  sub_23F6FEC88();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6F9D88()
{
  sub_23F6FEF58();
  return sub_23FB2FD10();
}

uint64_t sub_23F6F9DB0()
{
  sub_23F6FEF58();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6F9DD8()
{
  sub_23F6FF0C0();
  return sub_23FB2FD10();
}

uint64_t sub_23F6F9E00()
{
  sub_23F6FF0C0();
  return sub_23FB2FD1C();
}

void Expression.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104[16];
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t updated;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD v115[2];
  _QWORD v116[4];
  uint64_t v117;
  _QWORD v118[6];
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD v124[5];
  uint64_t v125;
  _QWORD v126[3];
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD v133[11];
  _QWORD v134[3];
  uint64_t v135;
  uint64_t v136;

  sub_23F6B5220();
  v136 = v0;
  v3 = v2;
  v4 = sub_23F6916B8(&qword_256EA49E0);
  v133[10] = *(_QWORD *)(v4 - 8);
  v134[0] = v4;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B5404(v6, v104[0]);
  v133[7] = type metadata accessor for OpenExpression(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B57A0(v8, v104[0]);
  v9 = sub_23F6916B8(&qword_256EA49E8);
  v133[5] = *(_QWORD *)(v9 - 8);
  v133[6] = v9;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5848(v11, v104[0]);
  v12 = sub_23F6916B8(&qword_256EA49F0);
  v133[2] = *(_QWORD *)(v12 - 8);
  v133[3] = v12;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B57D8(v14, v104[0]);
  v133[0] = sub_23F6916B8(&qword_256EA49F8);
  v131 = *(_QWORD *)(v133[0] - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B5314((uint64_t)v104 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v129 = sub_23F6916B8(&qword_256EA4A00);
  v128 = *(_QWORD *)(v129 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B5314((uint64_t)v104 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v132 = sub_23F6916B8(&qword_256EA4A08);
  v130 = *(_QWORD *)(v132 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v19);
  v21 = sub_23F70D434((uint64_t)v104 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v126[2] = type metadata accessor for CancelExpression(v21);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6B5314((uint64_t)v104 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v127 = sub_23F6916B8(&qword_256EA4A10);
  v126[1] = *(_QWORD *)(v127 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v24);
  v26 = sub_23F70D434((uint64_t)v104 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v124[4] = type metadata accessor for RejectExpression(v26);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F6B5314((uint64_t)v104 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v125 = sub_23F6916B8(&qword_256EA4A18);
  v124[3] = *(_QWORD *)(v125 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v29);
  v31 = sub_23F70D434((uint64_t)v104 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v124[0] = type metadata accessor for UndoExpression(v31);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F6B51A4();
  sub_23F6B5314(v33);
  v34 = sub_23F6916B8(&qword_256EA4A20);
  sub_23F6B53F8(v34, (uint64_t)v134);
  v123 = v35;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F6B51A4();
  sub_23F6B5314(v37);
  v122 = sub_23F6916B8(&qword_256EA4A28);
  v121 = *(_QWORD *)(v122 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F6B51A4();
  v40 = sub_23F70D434(v39);
  v120 = type metadata accessor for PickOneExpression(v40);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F6B5314((uint64_t)v104 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  v119 = sub_23F6916B8(&qword_256EA4A30);
  v118[5] = *(_QWORD *)(v119 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v43);
  sub_23F6B51A4();
  sub_23F6B5314(v44);
  v45 = sub_23F6916B8(&qword_256EA4A38);
  sub_23F6B53F8(v45, (uint64_t)v133);
  v118[2] = v46;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v47);
  sub_23F6B51A4();
  v49 = sub_23F70D434(v48);
  v116[3] = type metadata accessor for ConfirmExpression(v49);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v50);
  sub_23F6B51A4();
  sub_23F6B5314(v51);
  v117 = sub_23F6916B8(&qword_256EA4A40);
  v116[2] = *(_QWORD *)(v117 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v52);
  sub_23F6B51A4();
  v54 = sub_23F70D434(v53);
  v115[1] = type metadata accessor for PickExpression(v54);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v55);
  sub_23F6B51A4();
  sub_23F6B5314(v56);
  v115[0] = sub_23F6916B8(&qword_256EA4A48);
  v114 = *(_QWORD *)(v115[0] - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v57);
  sub_23F6B51A4();
  sub_23F6B5314(v58);
  v59 = sub_23F6916B8(&qword_256EA4A50);
  sub_23F6B53F8(v59, (uint64_t)v126);
  v113 = v60;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v61);
  sub_23F6B51A4();
  sub_23F6B5314(v62);
  v112 = sub_23F6916B8(&qword_256EA4A58);
  v111 = *(_QWORD *)(v112 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v63);
  sub_23F6B51A4();
  v65 = sub_23F70D434(v64);
  updated = type metadata accessor for UpdateParametersExpression(v65);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v66);
  sub_23F6B51A4();
  sub_23F6B5314(v67);
  v68 = sub_23F6916B8(&qword_256EA4A60);
  sub_23F6B53F8(v68, (uint64_t)v124);
  v109 = v69;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v70);
  sub_23F6B51A4();
  v72 = sub_23F70D434(v71);
  v107 = type metadata accessor for IndexExpression(v72);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v73);
  sub_23F6B51A4();
  sub_23F6B5314(v74);
  v108 = sub_23F6916B8(&qword_256EA4A68);
  v106 = *(_QWORD *)(v108 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v75);
  sub_23F6B51A4();
  v77 = sub_23F70D434(v76);
  v104[15] = type metadata accessor for DotExpression(v77);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v78);
  sub_23F6B51A4();
  sub_23F6B5314(v79);
  v105 = sub_23F6916B8(&qword_256EA4A70);
  v104[14] = *(_QWORD *)(v105 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v80);
  sub_23F6B51A4();
  v82 = sub_23F70D434(v81);
  v104[10] = type metadata accessor for InfixExpression(v82);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v83);
  sub_23F6B51A4();
  sub_23F6B5314(v84);
  v85 = sub_23F6916B8(&qword_256EA4A78);
  sub_23F6B53F8(v85, (uint64_t)v118);
  v104[9] = v86;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v87);
  sub_23F6B51A4();
  v89 = sub_23F70D434(v88);
  v104[5] = type metadata accessor for PrefixExpression(v89);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v90);
  sub_23F6B51A4();
  sub_23F6B5314(v91);
  v92 = sub_23F6916B8(&qword_256EA4A80);
  sub_23F6B53F8(v92, (uint64_t)v116);
  v104[3] = v93;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v94);
  sub_23F6B51A4();
  sub_23F70D434(v95);
  v96 = sub_23FB2C764();
  sub_23F6B53F8(v96, (uint64_t)v115);
  v104[1] = v97;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v98);
  sub_23F6B51A4();
  sub_23F6B5314(v99);
  sub_23F6916B8(&qword_256EA4A88);
  sub_23F70D9A8();
  MEMORY[0x24BDAC7A8](v100);
  sub_23F6B5298();
  type metadata accessor for Expression(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v101);
  sub_23F6B573C();
  v135 = sub_23F6916B8(&qword_256EA4A90);
  v134[1] = *(_QWORD *)(v135 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v102);
  sub_23F6B53AC();
  sub_23F6ADC98(v3, v3[3]);
  sub_23F6FEAA8();
  sub_23F70DD2C();
  sub_23F6F5920(v136, v1, type metadata accessor for Expression);
  v103 = (char *)sub_23F6FA658 + 4 * word_23FB5106A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23F6FA658()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);

  v4 = *(_QWORD *)v2;
  v5 = *(_QWORD *)(v2 + 8);
  v6 = *(_BYTE *)(v2 + 16);
  *(_BYTE *)(v3 - 112) = 0;
  sub_23F6FF0C0();
  v7 = *(_QWORD *)(v3 - 136);
  sub_23FB2FAA0();
  *(_QWORD *)(v3 - 112) = v4;
  *(_QWORD *)(v3 - 104) = v5;
  *(_BYTE *)(v3 - 96) = v6;
  sub_23F6FF0FC();
  sub_23F70D520();
  sub_23F6B530C(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F70D94C();
  sub_23F6B6420(v7, v8);
  sub_23F6FEA10(v4, v5, v6);
  sub_23F6B5100();
}

void Expression.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t *v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t v147[13];
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  _QWORD v172[4];
  _QWORD v173[2];
  _QWORD v174[2];
  _QWORD v175[2];
  _QWORD v176[4];
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  _QWORD v183[4];
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  _QWORD *v188;
  char *v189;

  sub_23F6B5220();
  v189 = v11;
  v15 = v14;
  v183[2] = v16;
  v174[0] = sub_23F6916B8(&qword_256EA4BD8);
  v173[1] = *(_QWORD *)(v174[0] - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B5404(v18, v147[0]);
  v173[0] = sub_23F6916B8(&qword_256EA4BE0);
  v172[3] = *(_QWORD *)(v173[0] - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F6B5544(v20, v147[0]);
  v21 = sub_23F6916B8(&qword_256EA4BE8);
  sub_23F6B53F8(v21, (uint64_t)v183);
  v172[1] = v22;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F6B5560(v24, v147[0]);
  v25 = sub_23F6916B8(&qword_256EA4BF0);
  sub_23F6B53F8(v25, (uint64_t)&v182);
  v169 = v26;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F6B658C(v28, v147[0]);
  v167 = sub_23F6916B8(&qword_256EA4BF8);
  v165 = *(_QWORD *)(v167 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F6B57D8(v30, v147[0]);
  v172[0] = sub_23F6916B8(&qword_256EA4C00);
  v170 = *(_QWORD *)(v172[0] - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F6B5848(v32, v147[0]);
  v168 = sub_23F6916B8(&qword_256EA4C08);
  v166 = *(_QWORD *)(v168 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F6B557C(v34, v147[0]);
  v35 = sub_23F6916B8(&qword_256EA4C10);
  sub_23F6B53F8(v35, (uint64_t)&v181);
  v164 = v36;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F6B5BF4(v38, v147[0]);
  v39 = sub_23F6916B8(&qword_256EA4C18);
  sub_23F6B53F8(v39, (uint64_t)&v180);
  v163 = v40;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F6B5528(v42, v147[0]);
  v43 = sub_23F6916B8(&qword_256EA4C20);
  sub_23F6B53F8(v43, (uint64_t)&v179);
  v162 = v44;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F70D7DC(v46, v147[0]);
  v161 = sub_23F6916B8(&qword_256EA4C28);
  v160 = *(_QWORD *)(v161 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v47);
  sub_23F6B5314((uint64_t)v147 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  v49 = sub_23F6916B8(&qword_256EA4C30);
  sub_23F6B53F8(v49, (uint64_t)&v178);
  v159 = v50;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v51);
  sub_23F6B5314((uint64_t)v147 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0));
  v53 = sub_23F6916B8(&qword_256EA4C38);
  sub_23F6B53F8(v53, (uint64_t)&v177);
  v158 = v54;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v55);
  sub_23F6B5314((uint64_t)v147 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0));
  v157 = sub_23F6916B8(&qword_256EA4C40);
  v156 = *(_QWORD *)(v157 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v57);
  sub_23F6B5314((uint64_t)v147 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0));
  v59 = sub_23F6916B8(&qword_256EA4C48);
  sub_23F6B53F8(v59, (uint64_t)v176);
  v155 = v60;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v61);
  sub_23F6B5314((uint64_t)v147 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0));
  v63 = sub_23F6916B8(&qword_256EA4C50);
  sub_23F6B53F8(v63, (uint64_t)v175);
  v154 = v64;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v65);
  sub_23F6B5314((uint64_t)v147 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0));
  v67 = sub_23F6916B8(&qword_256EA4C58);
  sub_23F6B53F8(v67, (uint64_t)v174);
  v153 = v68;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v69);
  sub_23F6B5314((uint64_t)v147 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0));
  v71 = sub_23F6916B8(&qword_256EA4C60);
  sub_23F6B53F8(v71, (uint64_t)v173);
  v152 = v72;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v73);
  sub_23F6B5314((uint64_t)v147 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0));
  v151 = sub_23F6916B8(&qword_256EA4C68);
  v150 = *(_QWORD *)(v151 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v75);
  sub_23F6B582C(v76, v147[0]);
  v77 = sub_23F6916B8(&qword_256EA4C70);
  sub_23F6B53F8(v77, (uint64_t)v172);
  v185 = v78;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v79);
  sub_23F6B5314((uint64_t)v147 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0));
  v81 = sub_23F6916B8(&qword_256EA4C78);
  sub_23F6B53F8(v81, (uint64_t)&v171);
  v149 = v82;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v83);
  sub_23F6B5314((uint64_t)v147 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0));
  v148 = sub_23F6916B8(&qword_256EA4C80);
  v147[12] = *(_QWORD *)(v148 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v85);
  sub_23F6B5314((uint64_t)v147 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0));
  v187 = sub_23F6916B8(&qword_256EA4C88);
  v184 = *(_QWORD *)(v187 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v87);
  sub_23F70D7C0(v88, v147[0]);
  v186 = type metadata accessor for Expression(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v89);
  sub_23F693E0C();
  v177 = v90;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v91);
  sub_23F6D3D14();
  v176[3] = v92;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v93);
  sub_23F6D3D14();
  v176[2] = v94;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v95);
  sub_23F6D3D14();
  v176[1] = v96;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v97);
  sub_23F6D3D14();
  v147[10] = v98;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v99);
  sub_23F6D3D14();
  v176[0] = v100;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v101);
  sub_23F6D3D14();
  v147[9] = v102;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v103);
  sub_23F6D3D14();
  v175[1] = v104;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v105);
  sub_23F6D3D14();
  v175[0] = v106;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v107);
  sub_23F6D3D14();
  v147[8] = v108;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v109);
  sub_23F6D3D14();
  v147[7] = v110;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v111);
  sub_23F6D3D14();
  v174[1] = v112;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v113);
  sub_23F6D3D14();
  v147[11] = v114;
  sub_23F6B5664();
  v116 = MEMORY[0x24BDAC7A8](v115);
  v118 = (char *)v147 - v117;
  MEMORY[0x24BDAC7A8](v116);
  sub_23F70D958();
  MEMORY[0x24BDAC7A8](v119);
  sub_23F6D3F74();
  v121 = MEMORY[0x24BDAC7A8](v120);
  v123 = (char *)v147 - v122;
  MEMORY[0x24BDAC7A8](v121);
  sub_23F70DD48();
  MEMORY[0x24BDAC7A8](v124);
  v126 = (char *)v147 - v125;
  v127 = v15[3];
  v188 = v15;
  sub_23F6ADC98(v15, v127);
  sub_23F6FEAA8();
  v128 = v189;
  sub_23FB2FCB0();
  if (v128)
  {
    v129 = (uint64_t)v188;
  }
  else
  {
    v147[2] = v13;
    v147[3] = (uint64_t)v123;
    v147[4] = v10;
    v147[5] = v12;
    v147[6] = (uint64_t)v118;
    v189 = v126;
    v130 = sub_23FB2FA94();
    if (*(_QWORD *)(v130 + 16))
    {
      v147[1] = 0;
      v131 = *(unsigned __int8 *)(v130 + 32);
      v132 = sub_23F70D968();
      sub_23F6B4E44(v132, v133, v134, v135, v136, v137);
      v139 = v138;
      v141 = v140;
      sub_23F6B6E44();
      if (v139 == v141 >> 1)
        __asm { BR              X9 }
    }
    v142 = v187;
    v129 = (uint64_t)v188;
    v143 = v184;
    sub_23F6B6334();
    sub_23F6B5AD4();
    v145 = v144;
    sub_23F6916B8(&qword_256EA1870);
    *v145 = v186;
    sub_23FB2FA04();
    v146 = sub_23F6B56B8();
    sub_23F6B5DAC(v146, *MEMORY[0x24BEE26D0]);
    swift_willThrow();
    sub_23F6B5770();
    (*(void (**)(uint64_t, uint64_t))(v143 + 8))(a10, v142);
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v129);
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23F6FB9C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F70DCCC();
  v3 = *(_QWORD *)(v2 - 336);
  sub_23F70D3E0();
  sub_23F70D4FC();
  if (!v0)
  {
    sub_23F6B58C8();
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    sub_23F6B6E1C();
    sub_23F70D798();
    sub_23F6B51EC(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 736) + 8));
    sub_23F6B5770();
    sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F70D4D8(v2 - 568);
    swift_storeEnumTagMultiPayload();
    sub_23F70DAEC(v3);
    sub_23F6F8CA8(v3, *(_QWORD *)(v2 - 176), type metadata accessor for Expression);
    JUMPOUT(0x23F6FB9ACLL);
  }
  sub_23F6B5770();
  sub_23F70D844();
  JUMPOUT(0x23F6FB9A8);
}

void sub_23F6FBA68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  sub_23F70DC70();
  v4 = *(_QWORD *)(v3 - 328);
  sub_23F70D3E0();
  if (v0)
  {
    sub_23F6B5770();
    sub_23F70D844();
    sub_23F6B530C(v2, v5);
    JUMPOUT(0x23F6FB7E0);
  }
  type metadata accessor for PrefixExpression(0);
  sub_23F70D630();
  sub_23F6B4EEC((uint64_t)&unk_256EA4D08);
  sub_23F70D5B8();
  sub_23F70D458();
  sub_23F70D5DC();
  sub_23F70D49C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F6B5770();
  sub_23F6B530C(v2, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_23F70D4D8(v3 - 560);
  swift_storeEnumTagMultiPayload();
  sub_23F70DAEC(v4, v6, type metadata accessor for Expression);
  JUMPOUT(0x23F6FC798);
}

void sub_23F6FBAAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F70DC1C();
  sub_23F70D3E0();
  sub_23F70D4FC();
  if (!v0)
  {
    v3 = sub_23F70D9C8();
    sub_23F6B4EEC((uint64_t)&unk_256EA4D00);
    sub_23F70D5B8();
    sub_23F6B6E1C();
    sub_23F70D420(v2 - 456);
    sub_23F6B5770();
    sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 160) + 8));
    sub_23F70D4D8(v2 - 552);
    swift_storeEnumTagMultiPayload();
    sub_23F70DAEC(v3, v4, type metadata accessor for Expression);
    sub_23F6F8CA8(v3, *(_QWORD *)(v2 - 176), type metadata accessor for Expression);
    JUMPOUT(0x23F6FB9ACLL);
  }
  sub_23F6B5770();
  sub_23F70D844();
  JUMPOUT(0x23F6FC5FCLL);
}

void sub_23F6FBB34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F70DBEC();
  v3 = *(_QWORD *)(v2 - 312);
  sub_23F70D3E0();
  sub_23F70D4FC();
  if (!v0)
  {
    sub_23F70D9D0();
    sub_23F70D630();
    sub_23F6B4EEC((uint64_t)&unk_256EA4CF8);
    sub_23F70D5B8();
    sub_23F70D458();
    sub_23F70D5DC();
    sub_23F70D420(v2 - 440);
    sub_23F6B5770();
    sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F70D4D8(v2 - 544);
    swift_storeEnumTagMultiPayload();
    sub_23F70DAEC(v3, v4, type metadata accessor for Expression);
    sub_23F6F8CA8(v3, *(_QWORD *)(v2 - 176), type metadata accessor for Expression);
    JUMPOUT(0x23F6FB9ACLL);
  }
  sub_23F6B5770();
  sub_23F70D844();
  JUMPOUT(0x23F6FC5FCLL);
}

void sub_23F6FBBD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F70DBC8();
  v3 = *(_QWORD *)(v2 - 320);
  sub_23F70D3E0();
  sub_23F70D4FC();
  if (!v0)
  {
    v4 = type metadata accessor for IndexExpression(0);
    sub_23F6B4EEC((uint64_t)&unk_256EA4CF0);
    sub_23F6B6E1C();
    sub_23F70D5DC();
    sub_23F6B530C(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 680) + 8));
    sub_23F6B5770();
    (*(void (**)(uint64_t, _QWORD))(v4 + 8))(v1, *(_QWORD *)(v2 - 136));
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F6FC794);
  }
  sub_23F6B5770();
  sub_23F70D844();
  JUMPOUT(0x23F6FB9A8);
}

void sub_23F6FBC88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F70DB70();
  v3 = *(_QWORD *)(v2 - 304);
  sub_23F70D3E0();
  sub_23F70D4FC();
  if (!v0)
  {
    type metadata accessor for UpdateParametersExpression(0);
    sub_23F70D630();
    sub_23F6B4EEC((uint64_t)&unk_256EA4CE8);
    sub_23F70D5B8();
    sub_23F70D458();
    sub_23F70D5DC();
    sub_23F70D420(v2 - 408);
    sub_23F6B5770();
    sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F70D4D8(v2 - 152);
    swift_storeEnumTagMultiPayload();
    sub_23F70DAEC(v3, v4, type metadata accessor for Expression);
    sub_23F6F8CA8(v3, *(_QWORD *)(v2 - 176), type metadata accessor for Expression);
    JUMPOUT(0x23F6FB9ACLL);
  }
  sub_23F6B5770();
  sub_23F70D844();
  JUMPOUT(0x23F6FC5FCLL);
}

void sub_23F6FBD28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F70DB4C();
  v3 = *(_QWORD *)(v2 - 296);
  sub_23F70D3E0();
  sub_23F70D4FC();
  if (!v0)
  {
    sub_23F704D04();
    sub_23F6B6E1C();
    sub_23F70D798();
    sub_23F6B530C(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 648) + 8));
    sub_23F6B5770();
    sub_23F6B56E0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    v4 = *(_QWORD *)(v2 - 792);
    *(_QWORD *)v4 = *(_QWORD *)(v2 - 112);
    *(_OWORD *)(v4 + 8) = *(_OWORD *)(v2 - 104);
    sub_23F70DB58();
    swift_storeEnumTagMultiPayload();
    sub_23F70DAEC(v4, v5, type metadata accessor for Expression);
    sub_23F6F8CA8(v4, *(_QWORD *)(v2 - 176), type metadata accessor for Expression);
    JUMPOUT(0x23F6FB9ACLL);
  }
  sub_23F6B5770();
  sub_23F70D844();
  JUMPOUT(0x23F6FB9A8);
}

void sub_23F6FC19C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F70DA70();
  v3 = *(_QWORD *)(v2 - 240);
  sub_23F70D3E0();
  sub_23F70D4FC();
  if (!v0)
  {
    type metadata accessor for UndoExpression(0);
    sub_23F70D630();
    sub_23F6B4EEC((uint64_t)&unk_256EA4CA8);
    sub_23F70D5B8();
    sub_23F70D458();
    sub_23F70D5DC();
    sub_23F70D420(v2 - 280);
    sub_23F6B5770();
    sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F70D4D8(v2 - 120);
    swift_storeEnumTagMultiPayload();
    sub_23F70DAEC(v3, v4, type metadata accessor for Expression);
    sub_23F6F8CA8(v3, *(_QWORD *)(v2 - 176), type metadata accessor for Expression);
    JUMPOUT(0x23F6FB9ACLL);
  }
  sub_23F6B5770();
  sub_23F70D844();
  JUMPOUT(0x23F6FC5FCLL);
}

void sub_23F6FC238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F70DA58();
  v3 = *(_QWORD *)(v2 - 224);
  sub_23F70D3E0();
  sub_23F70D4FC();
  if (!v0)
  {
    type metadata accessor for RejectExpression(0);
    sub_23F70D630();
    sub_23F6B4EEC((uint64_t)&unk_256EA4CA0);
    sub_23F70D5B8();
    sub_23F70D458();
    sub_23F70D5DC();
    sub_23F70D420(v2 - 256);
    sub_23F6B5770();
    sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F70D4D8(v2 - 112);
    swift_storeEnumTagMultiPayload();
    sub_23F70DAEC(v3, v4, type metadata accessor for Expression);
    sub_23F6F8CA8(v3, *(_QWORD *)(v2 - 176), type metadata accessor for Expression);
    JUMPOUT(0x23F6FB9ACLL);
  }
  sub_23F6B5770();
  sub_23F70D844();
  JUMPOUT(0x23F6FC5FCLL);
}

void sub_23F6FC2D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F70DA40();
  v3 = *(_QWORD *)(v2 - 208);
  sub_23F70D3E0();
  sub_23F70D4FC();
  if (!v0)
  {
    type metadata accessor for CancelExpression(0);
    sub_23F70D630();
    sub_23F6B4EEC((uint64_t)&unk_256EA4C98);
    sub_23F70D5B8();
    sub_23F70D458();
    sub_23F70D5DC();
    sub_23F70D420(v2 - 224);
    sub_23F6B5770();
    sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F70D4D8(v2 - 104);
    swift_storeEnumTagMultiPayload();
    sub_23F70DAEC(v3, v4, type metadata accessor for Expression);
    sub_23F6F8CA8(v3, *(_QWORD *)(v2 - 176), type metadata accessor for Expression);
    JUMPOUT(0x23F6FB9ACLL);
  }
  sub_23F6B5770();
  sub_23F70D844();
  JUMPOUT(0x23F6FC5FCLL);
}

void sub_23F6FC370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _QWORD);

  sub_23F70DA14();
  sub_23F70D3E0();
  sub_23F70D4FC();
  if (!v0)
  {
    v3 = sub_23F70DB88();
    sub_23F6B6344(v3, v4);
    sub_23F6B5770();
    sub_23F6B56E0(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 160) + 8));
    sub_23F70D554();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F6FC798);
  }
  sub_23F6B5770();
  sub_23F70D844();
  JUMPOUT(0x23F6FB9A8);
}

void sub_23F6FC3D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _QWORD);

  sub_23F70D9FC();
  sub_23F70D3E0();
  sub_23F70D4FC();
  if (!v0)
  {
    v3 = sub_23F70DB9C();
    sub_23F6B6344(v3, v4);
    sub_23F6B5770();
    sub_23F6B56E0(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 160) + 8));
    sub_23F70D554();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F6FC798);
  }
  sub_23F6B5770();
  sub_23F70D844();
  JUMPOUT(0x23F6FB9A8);
}

void sub_23F6FC430()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _QWORD);

  sub_23F70DD68();
  sub_23F70D3E0();
  sub_23F70D4FC();
  if (!v0)
  {
    v3 = sub_23F6B5288();
    sub_23F6B6344(v3, v4);
    sub_23F6B5770();
    sub_23F6B56E0(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 160) + 8));
    sub_23F70D554();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F6FC798);
  }
  sub_23F6B5770();
  sub_23F70D844();
  JUMPOUT(0x23F6FB9A8);
}

void sub_23F6FC494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _QWORD);

  sub_23F70DD5C();
  sub_23F70D3E0();
  sub_23F70D4FC();
  if (v0)
    JUMPOUT(0x23F6FC4C4);
  v3 = sub_23F6B5288();
  sub_23F6B6344(v3, v4);
  sub_23F6B5770();
  sub_23F6B56E0(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 160) + 8));
  sub_23F70D554();
  JUMPOUT(0x23F6FC5A0);
}

void sub_23F6FC4D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F70DA28();
  sub_23F70D3E0();
  sub_23F70D4FC();
  if (v1)
    JUMPOUT(0x23F6FC504);
  type metadata accessor for OpenExpression(0);
  sub_23F70D630();
  sub_23F6B4EEC((uint64_t)&unk_256EA4C90);
  sub_23F70D5B8();
  sub_23F70D458();
  sub_23F70D5DC();
  sub_23F70D420(v3 - 168);
  sub_23F6B5770();
  sub_23F6B530C(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23F70D4D8(v3 - 96);
  JUMPOUT(0x23F6FC784);
}

void sub_23F6FC7B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  Expression.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F6FC7C4()
{
  Expression.encode(to:)();
}

void ValueExpression.description.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_23F6FC81C()
{
  char v0;

  if ((v0 & 1) != 0)
    return 1702195828;
  else
    return 0x65736C6166;
}

uint64_t sub_23F6FC92C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  char v12;

  v2 = a1 == 1819047278 && a2 == 0xE400000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1819242338 && a2 == 0xE400000000000000;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 7630441 && a2 == 0xE300000000000000;
      if (v7 || (sub_23FB2FB78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x656C62756F64 && a2 == 0xE600000000000000;
        if (v8 || (sub_23FB2FB78() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x676E69727473 && a2 == 0xE600000000000000;
          if (v9 || (sub_23FB2FB78() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x7961727261 && a2 == 0xE500000000000000;
            if (v10 || (sub_23FB2FB78() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0x6C6F626D7973 && a2 == 0xE600000000000000)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              v12 = sub_23FB2FB78();
              swift_bridgeObjectRelease();
              if ((v12 & 1) != 0)
                return 6;
              else
                return 7;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_23F6FCBB0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F6FCBDC + 4 * byte_23FB510C9[a1]))(1819047278, 0xE400000000000000);
}

uint64_t sub_23F6FCBDC()
{
  return 1819242338;
}

uint64_t sub_23F6FCBE8()
{
  return 7630441;
}

uint64_t sub_23F6FCBF8()
{
  return 0x656C62756F64;
}

uint64_t sub_23F6FCC0C()
{
  return 0x676E69727473;
}

uint64_t sub_23F6FCC20()
{
  return 0x7961727261;
}

uint64_t sub_23F6FCC34()
{
  return 0x6C6F626D7973;
}

uint64_t sub_23F6FCC48()
{
  sub_23F704DF4();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FCC70()
{
  sub_23F704DF4();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6FCC98()
{
  sub_23F704EE4();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FCCC0()
{
  sub_23F704EE4();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6FCCE8()
{
  unsigned __int8 *v0;

  return sub_23F6FCBB0(*v0);
}

uint64_t sub_23F6FCCF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F6FC92C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F6FCD14()
{
  sub_23F704D7C();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FCD3C()
{
  sub_23F704D7C();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6FCD64()
{
  sub_23F704E6C();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FCD8C()
{
  sub_23F704E6C();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6FCDB4()
{
  sub_23F704EA8();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FCDDC()
{
  sub_23F704EA8();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6FCE04()
{
  sub_23F704F20();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FCE2C()
{
  sub_23F704F20();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6FCE54()
{
  sub_23F704E30();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FCE7C()
{
  sub_23F704E30();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6FCEA4()
{
  sub_23F704DB8();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FCECC()
{
  sub_23F704DB8();
  return sub_23FB2FD1C();
}

void ValueExpression.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v32 = sub_23F6916B8(&qword_256EA4D18);
  v30 = *(_QWORD *)(v32 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B5544(v4, v21);
  v31 = sub_23F6916B8(&qword_256EA4D20);
  v29 = *(_QWORD *)(v31 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B5560(v6, v21);
  v7 = sub_23F6916B8(&qword_256EA4D28);
  v27 = *(_QWORD *)(v7 - 8);
  v28 = v7;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B557C(v9, v21);
  v10 = sub_23F6916B8(&qword_256EA4D30);
  v25 = *(_QWORD *)(v10 - 8);
  v26 = v10;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B5528(v12, v21);
  v24 = sub_23F6916B8(&qword_256EA4D38);
  v23 = *(_QWORD *)(v24 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B5314((uint64_t)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = sub_23F6916B8(&qword_256EA4D40);
  v21 = *(_QWORD *)(v22 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B5298();
  sub_23F6916B8(&qword_256EA4D48);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B5268();
  v17 = sub_23F6916B8(&qword_256EA4D50);
  v35 = *(_QWORD *)(v17 - 8);
  v36 = v17;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B51A4();
  v19 = *v1;
  v33 = v1[1];
  v34 = v19;
  v20 = *((unsigned __int8 *)v1 + 16);
  sub_23F6ADC98(a1, a1[3]);
  sub_23F704D7C();
  sub_23F70D92C();
  sub_23F70DD2C();
  __asm { BR              X9 }
}

void sub_23F6FD0EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  sub_23F70DCD8();
  v2 = *(_QWORD *)(v1 - 128);
  sub_23F6B54D4();
  sub_23FB2FAE8();
  v3 = sub_23F70D6CC();
  sub_23F6B530C(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 136) + 8))(v0, v2);
  sub_23F70D684();
}

void sub_23F6FD350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 - 109) = 0;
  sub_23F704F20();
  sub_23F6B54D4();
  sub_23F70D728(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F70D46C(*(_QWORD *)(v2 - 136));
  JUMPOUT(0x23F6FD340);
}

void ValueExpression.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_23F6916B8(&qword_256EA4DA8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B5404(v5, v30);
  sub_23F6916B8(&qword_256EA4DB0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B582C(v7, v31);
  sub_23F6916B8(&qword_256EA4DB8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B57A0(v9, v32);
  sub_23F6916B8(&qword_256EA4DC0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B51A4();
  sub_23F6916B8(&qword_256EA4DC8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B57BC(v12, v33);
  sub_23F6916B8(&qword_256EA4DD0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B5544(v14, v34);
  sub_23F6916B8(&qword_256EA4DD8);
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B5208();
  v16 = sub_23F6916B8(&qword_256EA4DE0);
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B59E0();
  sub_23F70D508(a1);
  sub_23F704D7C();
  sub_23F70DC94();
  if (v36)
  {
    v18 = (uint64_t)a1;
  }
  else
  {
    v35 = v1;
    v19 = sub_23FB2FA94();
    v20 = *(_QWORD *)(v19 + 16);
    v21 = v16;
    if (v20)
    {
      v22 = *(unsigned __int8 *)(v19 + 32);
      sub_23F6B4E44(1, v20, v19, v19 + 32, 0, (2 * v20) | 1);
      v24 = v23;
      v26 = v25;
      sub_23F6B6A48();
      if (v24 == v26 >> 1)
        __asm { BR              X9 }
      v18 = (uint64_t)a1;
      v21 = v16;
    }
    else
    {
      v18 = (uint64_t)a1;
    }
    sub_23F6B6334();
    sub_23F6B5AD4();
    v28 = v27;
    sub_23F6916B8(&qword_256EA1870);
    *v28 = &type metadata for ValueExpression;
    sub_23FB2FA04();
    v29 = sub_23F6B56B8();
    sub_23F6B5DAC(v29, *MEMORY[0x24BEE26D0]);
    swift_willThrow();
    sub_23F6B5770();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v2, v21);
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v18);
  sub_23F6B6834();
  sub_23F70D684();
}

void sub_23F6FD72C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;

  sub_23F70DCD8();
  v3 = *(_QWORD *)(v2 - 192);
  v4 = *(_QWORD *)(v2 - 296);
  v5 = *(_QWORD *)(v2 - 120);
  sub_23F70D56C();
  if (v0)
  {
    sub_23F6B5770();
    v6 = sub_23F6B640C();
    v7(v6, v4);
    JUMPOUT(0x23F6FD558);
  }
  v8 = v3;
  sub_23FB2FA4C();
  sub_23F70D6FC();
  v10 = v9;
  sub_23F6B5900(v11, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 280) + 8));
  sub_23F6B5770();
  sub_23F6B530C(v5, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  *(_QWORD *)v1 = v10 & 1;
  *(_QWORD *)(v1 + 8) = 0;
  *(_BYTE *)(v1 + 16) = 0;
  JUMPOUT(0x23F6FD718);
}

void sub_23F6FD7C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  sub_23F70DC28();
  v4 = v1;
  v5 = *(_QWORD *)(v3 - 296);
  v6 = *(_QWORD *)(v3 - 120);
  sub_23F70D56C();
  if (v0)
  {
    sub_23F6B5770();
    v7 = sub_23F6B5288();
    v8(v7, v5);
    JUMPOUT(0x23F6FD558);
  }
  sub_23FB2FA58();
  sub_23F70D6FC();
  v10 = v9;
  sub_23F6B5900(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 248) + 8));
  sub_23F6B5770();
  sub_23F6B56E0(v6, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  *(_QWORD *)v2 = v10;
  *(_QWORD *)(v2 + 8) = 0;
  *(_BYTE *)(v2 + 16) = 2;
  JUMPOUT(0x23F6FD718);
}

void sub_23F6FDC0C(_QWORD *a1)
{
  ValueExpression.init(from:)(a1);
}

void sub_23F6FDC20(_QWORD *a1)
{
  ValueExpression.encode(to:)(a1);
}

uint64_t (*PrefixExpression.prefixOp.modify())()
{
  return nullsub_1;
}

uint64_t PrefixExpression.value.getter()
{
  return sub_23F6FE830((void (*)(_QWORD))type metadata accessor for PrefixExpression);
}

uint64_t PrefixExpression.value.setter(uint64_t a1)
{
  return sub_23F6FE87C(a1, type metadata accessor for PrefixExpression);
}

uint64_t (*PrefixExpression.value.modify())()
{
  type metadata accessor for PrefixExpression(0);
  sub_23F6F099C();
  return nullsub_1;
}

uint64_t PrefixExpression.init(prefixOp:value:)@<X0>(_BYTE *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  *a2 = *a1;
  type metadata accessor for PrefixExpression(0);
  sub_23F6B58C8();
  v2 = sub_23F6B6190();
  return sub_23F6B64B0(v2, v3, v4, v5);
}

uint64_t sub_23F6FDCCC()
{
  sub_23F704FB4();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FDCF4()
{
  sub_23F704FB4();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6FDD1C()
{
  sub_23F70502C();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FDD44()
{
  sub_23F70502C();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6FDD6C()
{
  sub_23F704FF0();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FDD94()
{
  sub_23F704FF0();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6FDDBC()
{
  sub_23F705068();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FDDE4()
{
  sub_23F705068();
  return sub_23FB2FD1C();
}

void PrefixExpression.PrefixOp.encode(to:)()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_23F6B5220();
  v3 = sub_23F6916B8(&qword_256EA4DF0);
  v18 = *(_QWORD *)(v3 - 8);
  v19 = v3;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B5420(v5, v15);
  sub_23F6916B8(&qword_256EA4DF8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B5268();
  v16 = sub_23F6916B8(&qword_256EA4E00);
  v7 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B5208();
  v20 = *(_QWORD *)(sub_23F6916B8(&qword_256EA4E08) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F693EB0();
  v9 = *v0;
  v10 = (_QWORD *)sub_23F6B6190();
  sub_23F6ADC98(v10, v11);
  sub_23F704FB4();
  sub_23FB2FCC8();
  if (v9)
  {
    if (v9 == 1)
    {
      sub_23F70DCE4();
      sub_23F6B54E8();
      v12 = sub_23F6B640C();
    }
    else
    {
      sub_23F70DC58();
      sub_23F6B54E8();
      v13 = v19;
      v14 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
      v12 = v17;
    }
    v14(v12, v13);
  }
  else
  {
    sub_23F705068();
    sub_23F6B54E8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2, v16);
  }
  sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
  sub_23F6B5100();
}

void PrefixExpression.PrefixOp.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  _QWORD *v36;
  char v37;

  sub_23F6B5220();
  v6 = v5;
  v34 = v7;
  v33 = sub_23F6916B8(&qword_256EA4E30);
  v32 = *(_QWORD *)(v33 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F70D7A4(v9, v29);
  sub_23F6916B8(&qword_256EA4E38);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5BD8(v11, v30);
  v31 = sub_23F6916B8(&qword_256EA4E40);
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5268();
  sub_23F6916B8(&qword_256EA4E48);
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B52B0();
  sub_23F70D6E4(v6);
  sub_23F704FB4();
  sub_23FB2FCB0();
  if (v1)
    goto LABEL_10;
  v36 = v6;
  v14 = v2;
  v15 = sub_23FB2FA94();
  v16 = *(_QWORD *)(v15 + 16);
  if (!v16
    || (v17 = *(unsigned __int8 *)(v15 + 32),
        sub_23F6B4E44(1, v16, v15, v15 + 32, 0, (2 * v16) | 1),
        v19 = v18,
        v21 = v20,
        swift_bridgeObjectRelease(),
        v19 != v21 >> 1))
  {
    v26 = sub_23F6B6334();
    sub_23F6B5AD4();
    v28 = v27;
    sub_23F6916B8(&qword_256EA1870);
    *v28 = &type metadata for PrefixExpression.PrefixOp;
    sub_23FB2FA04();
    sub_23F6B56B8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v28, *MEMORY[0x24BEE26D0], v26);
    swift_willThrow();
    sub_23F6B68E0();
    sub_23F6B563C(v14, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    v6 = v36;
LABEL_10:
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v6);
    goto LABEL_11;
  }
  if (v17)
  {
    v37 = v17;
    if (v17 == 1)
    {
      sub_23F70DCE4();
      sub_23F70D65C();
      v22 = v34;
      v23 = sub_23F6B640C();
    }
    else
    {
      sub_23F70DC58();
      sub_23F70D65C();
      v22 = v34;
      v25 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
      v23 = v35;
      v24 = v33;
    }
    v25(v23, v24);
    swift_unknownObjectRelease();
    sub_23F70D728(v14, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  }
  else
  {
    sub_23F705068();
    sub_23F70D65C();
    v37 = 0;
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v31);
    sub_23F6B68E0();
    sub_23F70D728(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    v22 = v34;
  }
  *v22 = v37;
  sub_23F70DA20();
LABEL_11:
  sub_23F6B6834();
  sub_23F6B5100();
}

uint64_t sub_23F6FE324(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x704F786966657270 && a2 == 0xE800000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F6FE408(char a1)
{
  if ((a1 & 1) != 0)
    return 0x65756C6176;
  else
    return 0x704F786966657270;
}

void sub_23F6FE444()
{
  PrefixExpression.PrefixOp.init(from:)();
}

void sub_23F6FE458()
{
  PrefixExpression.PrefixOp.encode(to:)();
}

uint64_t sub_23F6FE470()
{
  char *v0;

  return sub_23F6FE408(*v0);
}

uint64_t sub_23F6FE478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F6FE324(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F6FE49C()
{
  sub_23F7050A4();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FE4C4()
{
  sub_23F7050A4();
  return sub_23FB2FD1C();
}

void PrefixExpression.encode(to:)()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  _BYTE v6[16];

  sub_23F6D3DC4();
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EA4E50);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v6[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F70D4B8();
  sub_23F7050A4();
  sub_23F6B63A4();
  v6[15] = *v1;
  v6[14] = 0;
  sub_23F7050E0();
  sub_23F70D4F0();
  if (!v0)
  {
    type metadata accessor for PrefixExpression(0);
    v6[13] = 1;
    sub_23F6B58C8();
    sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
    sub_23F70D4F0();
  }
  sub_23F6B56E0((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F70D9D8();
  sub_23F6D3710();
}

void PrefixExpression.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_23F6B5220();
  v18 = v17;
  v31 = sub_23F6B58C8();
  v29 = *(_QWORD *)(v31 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F6B5C10(v20, v28);
  sub_23F6916B8(&qword_256EA4E68);
  sub_23F70D9A8();
  MEMORY[0x24BDAC7A8](v21);
  v22 = sub_23F6B51D0();
  v23 = type metadata accessor for PrefixExpression(v22);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6B5298();
  sub_23F6ADC98(v18, v18[3]);
  sub_23F7050A4();
  sub_23F70D990();
  if (!v14)
  {
    sub_23F70511C();
    sub_23F70D780();
    *v13 = a13;
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    sub_23F70D780();
    sub_23F6B51EC(v15, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v29 + 32))(&v13[*(int *)(v23 + 20)], v30, v31);
    v25 = sub_23F6B5994();
    sub_23F6F8CA8(v25, v26, v27);
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v18);
  sub_23F6B5100();
}

void sub_23F6FE7D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  PrefixExpression.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_23F6FE7E4()
{
  PrefixExpression.encode(to:)();
}

void InfixExpression.infixOp.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *InfixExpression.infixOp.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*InfixExpression.infixOp.modify())()
{
  return nullsub_1;
}

uint64_t InfixExpression.lhs.getter()
{
  return sub_23F6FE830((void (*)(_QWORD))type metadata accessor for InfixExpression);
}

uint64_t sub_23F6FE830(void (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  a1(0);
  sub_23F6B58C8();
  v1 = sub_23F6B5994();
  return sub_23F6B64B0(v1, v2, v3, v4);
}

uint64_t InfixExpression.lhs.setter(uint64_t a1)
{
  return sub_23F6FE87C(a1, type metadata accessor for InfixExpression);
}

uint64_t sub_23F6FE87C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_23F6F08EC(a1, a2);
  sub_23F6B58C8();
  v2 = sub_23F6F07FC();
  return sub_23F6B64B0(v2, v3, v4, v5);
}

uint64_t (*InfixExpression.lhs.modify())()
{
  sub_23F70D9C8();
  sub_23F6F099C();
  return nullsub_1;
}

uint64_t InfixExpression.rhs.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  type metadata accessor for InfixExpression(0);
  sub_23F6B58C8();
  v0 = sub_23F6B5994();
  return sub_23F6B64B0(v0, v1, v2, v3);
}

uint64_t InfixExpression.rhs.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v0 = sub_23F6B5AC8();
  type metadata accessor for InfixExpression(v0);
  sub_23F6B58C8();
  v1 = sub_23F6F07FC();
  return sub_23F6B64B0(v1, v2, v3, v4);
}

uint64_t (*InfixExpression.rhs.modify())()
{
  type metadata accessor for InfixExpression(0);
  return nullsub_1;
}

uint64_t InfixExpression.init(infixOp:lhs:rhs:)@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  void (*v11)(_BYTE *, uint64_t, uint64_t);

  *a4 = *a1;
  v7 = sub_23F70D9C8();
  v8 = &a4[*(int *)(v7 + 20)];
  v9 = sub_23F6B58C8();
  v11 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v11(v8, a2, v9);
  return ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v11)(&a4[*(int *)(v7 + 24)], a3, v9);
}

void InfixExpression.InfixOp.hash(into:)()
{
  sub_23F70D9B8();
  sub_23F694CC8();
}

BOOL static InfixExpression.InfixOp.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23F6FEA10(uint64_t a1, uint64_t a2, char a3)
{
  BOOL v3;
  uint64_t result;

  v3 = a3 == 3 || a3 == 5;
  if (v3 || a3 == 4)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23F6FEA38(uint64_t a1, uint64_t a2, char a3)
{
  BOOL v3;
  uint64_t result;

  v3 = a3 == 3 || a3 == 5;
  if (v3 || a3 == 4)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_23F6FEA60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F6916B8(&qword_256EA49D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23F6FEAA8()
{
  unint64_t result;

  result = qword_256EA4A98;
  if (!qword_256EA4A98)
  {
    result = MEMORY[0x242674E5C](&unk_23FB56794, &type metadata for Expression.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4A98);
  }
  return result;
}

unint64_t sub_23F6FEAE4()
{
  unint64_t result;

  result = qword_256EA4AA0;
  if (!qword_256EA4AA0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB56744, &type metadata for Expression.OpenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4AA0);
  }
  return result;
}

unint64_t sub_23F6FEB20()
{
  unint64_t result;

  result = qword_256EA4AB0;
  if (!qword_256EA4AB0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB566F4, &type metadata for Expression.EndOfPlanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4AB0);
  }
  return result;
}

unint64_t sub_23F6FEB5C()
{
  unint64_t result;

  result = qword_256EA4AB8;
  if (!qword_256EA4AB8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB566A4, &type metadata for Expression.ContinuePlanningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4AB8);
  }
  return result;
}

unint64_t sub_23F6FEB98()
{
  unint64_t result;

  result = qword_256EA4AC0;
  if (!qword_256EA4AC0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB56654, &type metadata for Expression.NoMatchingToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4AC0);
  }
  return result;
}

unint64_t sub_23F6FEBD4()
{
  unint64_t result;

  result = qword_256EA4AC8;
  if (!qword_256EA4AC8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB56604, &type metadata for Expression.GetMentionedAppsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4AC8);
  }
  return result;
}

unint64_t sub_23F6FEC10()
{
  unint64_t result;

  result = qword_256EA4AD0;
  if (!qword_256EA4AD0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB565B4, &type metadata for Expression.CancelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4AD0);
  }
  return result;
}

unint64_t sub_23F6FEC4C()
{
  unint64_t result;

  result = qword_256EA4AE0;
  if (!qword_256EA4AE0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB56564, &type metadata for Expression.RejectCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4AE0);
  }
  return result;
}

unint64_t sub_23F6FEC88()
{
  unint64_t result;

  result = qword_256EA4AF0;
  if (!qword_256EA4AF0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB56514, &type metadata for Expression.UndoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4AF0);
  }
  return result;
}

unint64_t sub_23F6FECC4()
{
  unint64_t result;

  result = qword_256EA4B00;
  if (!qword_256EA4B00)
  {
    result = MEMORY[0x242674E5C](&unk_23FB564C4, &type metadata for Expression.ResolveToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4B00);
  }
  return result;
}

unint64_t sub_23F6FED00()
{
  unint64_t result;

  result = qword_256EA4B08;
  if (!qword_256EA4B08)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ResolveToolExpression, &type metadata for ResolveToolExpression);
    atomic_store(result, (unint64_t *)&qword_256EA4B08);
  }
  return result;
}

unint64_t sub_23F6FED3C()
{
  unint64_t result;

  result = qword_256EA4B10;
  if (!qword_256EA4B10)
  {
    result = MEMORY[0x242674E5C](&unk_23FB56474, &type metadata for Expression.PickOneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4B10);
  }
  return result;
}

unint64_t sub_23F6FED78()
{
  unint64_t result;

  result = qword_256EA4B20;
  if (!qword_256EA4B20)
  {
    result = MEMORY[0x242674E5C](&unk_23FB56424, &type metadata for Expression.SearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4B20);
  }
  return result;
}

unint64_t sub_23F6FEDB4()
{
  unint64_t result;

  result = qword_256EA4B28;
  if (!qword_256EA4B28)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for SearchExpression, &type metadata for SearchExpression);
    atomic_store(result, (unint64_t *)&qword_256EA4B28);
  }
  return result;
}

unint64_t sub_23F6FEDF0()
{
  unint64_t result;

  result = qword_256EA4B30;
  if (!qword_256EA4B30)
  {
    result = MEMORY[0x242674E5C](&unk_23FB563D4, &type metadata for Expression.ConfirmCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4B30);
  }
  return result;
}

unint64_t sub_23F6FEE2C()
{
  unint64_t result;

  result = qword_256EA4B40;
  if (!qword_256EA4B40)
  {
    result = MEMORY[0x242674E5C](&unk_23FB56384, &type metadata for Expression.PickCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4B40);
  }
  return result;
}

unint64_t sub_23F6FEE68()
{
  unint64_t result;

  result = qword_256EA4B50;
  if (!qword_256EA4B50)
  {
    result = MEMORY[0x242674E5C](&unk_23FB56334, &type metadata for Expression.SayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4B50);
  }
  return result;
}

unint64_t sub_23F6FEEA4()
{
  unint64_t result;

  result = qword_256EA4B58;
  if (!qword_256EA4B58)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for SayExpression, &type metadata for SayExpression);
    atomic_store(result, (unint64_t *)&qword_256EA4B58);
  }
  return result;
}

unint64_t sub_23F6FEEE0()
{
  unint64_t result;

  result = qword_256EA4B60;
  if (!qword_256EA4B60)
  {
    result = MEMORY[0x242674E5C](&unk_23FB562E4, &type metadata for Expression.CallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4B60);
  }
  return result;
}

unint64_t sub_23F6FEF1C()
{
  unint64_t result;

  result = qword_256EA4B68;
  if (!qword_256EA4B68)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for CallExpression, &type metadata for CallExpression);
    atomic_store(result, (unint64_t *)&qword_256EA4B68);
  }
  return result;
}

unint64_t sub_23F6FEF58()
{
  unint64_t result;

  result = qword_256EA4B70;
  if (!qword_256EA4B70)
  {
    result = MEMORY[0x242674E5C](&unk_23FB56294, &type metadata for Expression.UpdateParametersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4B70);
  }
  return result;
}

unint64_t sub_23F6FEF94()
{
  unint64_t result;

  result = qword_256EA4B80;
  if (!qword_256EA4B80)
  {
    result = MEMORY[0x242674E5C](&unk_23FB56244, &type metadata for Expression.IndexCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4B80);
  }
  return result;
}

unint64_t sub_23F6FEFD0()
{
  unint64_t result;

  result = qword_256EA4B90;
  if (!qword_256EA4B90)
  {
    result = MEMORY[0x242674E5C](&unk_23FB561F4, &type metadata for Expression.DotCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4B90);
  }
  return result;
}

unint64_t sub_23F6FF00C()
{
  unint64_t result;

  result = qword_256EA4BA0;
  if (!qword_256EA4BA0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB561A4, &type metadata for Expression.InfixCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4BA0);
  }
  return result;
}

unint64_t sub_23F6FF048()
{
  unint64_t result;

  result = qword_256EA4BB0;
  if (!qword_256EA4BB0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB56154, &type metadata for Expression.PrefixCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4BB0);
  }
  return result;
}

unint64_t sub_23F6FF084()
{
  unint64_t result;

  result = qword_256EA4BC0;
  if (!qword_256EA4BC0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB56104, &type metadata for Expression.StatementIdCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4BC0);
  }
  return result;
}

unint64_t sub_23F6FF0C0()
{
  unint64_t result;

  result = qword_256EA4BC8;
  if (!qword_256EA4BC8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB560B4, &type metadata for Expression.ValueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4BC8);
  }
  return result;
}

unint64_t sub_23F6FF0FC()
{
  unint64_t result;

  result = qword_256EA4BD0;
  if (!qword_256EA4BD0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ValueExpression, &type metadata for ValueExpression);
    atomic_store(result, (unint64_t *)&qword_256EA4BD0);
  }
  return result;
}

uint64_t sub_23F6FF138(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F6FF168 + 4 * byte_23FB510DE[a1]))(0x6E6769737361, 0xE600000000000000);
}

uint64_t sub_23F6FF168()
{
  return 6579297;
}

uint64_t sub_23F6FF178()
{
  return 0x6769737341646461;
}

uint64_t sub_23F6FF194()
{
  return 0x7463617274627573;
}

uint64_t sub_23F6FF1AC()
{
  return 0x7463617274627573;
}

uint64_t sub_23F6FF22C()
{
  return 0x746E656E6F707865;
}

uint64_t sub_23F6FF244()
{
  return 0x6C61757165;
}

uint64_t sub_23F6FF258()
{
  return 0x6C61757145746F6ELL;
}

uint64_t sub_23F6FF270()
{
  return 28265;
}

unint64_t sub_23F6FF27C()
{
  return 0xD000000000000010;
}

uint64_t sub_23F6FF298()
{
  return 0x5472657461657267;
}

uint64_t sub_23F6FF2B8()
{
  return 0x6E6168547373656CLL;
}

uint64_t sub_23F6FF2E4()
{
  return 6581857;
}

uint64_t sub_23F6FF2FC()
{
  return 29295;
}

uint64_t sub_23F6FF308()
{
  sub_23F705554();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FF330()
{
  sub_23F705554();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6FF358()
{
  sub_23F705590();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FF380()
{
  sub_23F705590();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6FF3A8()
{
  sub_23F7051D0();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FF3D0()
{
  sub_23F7051D0();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6FF3F8()
{
  sub_23F7055CC();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FF420()
{
  sub_23F7055CC();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6FF448()
{
  unsigned __int8 *v0;

  return sub_23F6FF138(*v0);
}

uint64_t sub_23F6FF450()
{
  sub_23F705158();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FF478()
{
  sub_23F705158();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6FF4A0()
{
  sub_23F705464();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FF4C8()
{
  sub_23F705464();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6FF4F0()
{
  sub_23F7054A0();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FF518()
{
  sub_23F7054A0();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6FF540()
{
  sub_23F705374();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FF568()
{
  sub_23F705374();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6FF590()
{
  sub_23F7053B0();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FF5B8()
{
  sub_23F7053B0();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6FF5E0()
{
  sub_23F705284();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FF608()
{
  sub_23F705284();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6FF630()
{
  sub_23F7052C0();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FF658()
{
  sub_23F7052C0();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6FF680()
{
  sub_23F7052FC();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FF6A8()
{
  sub_23F7052FC();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6FF6D0()
{
  sub_23F70520C();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FF6F8()
{
  sub_23F70520C();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6FF720()
{
  sub_23F705248();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FF748()
{
  sub_23F705248();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6FF770()
{
  sub_23F7053EC();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FF798()
{
  sub_23F7053EC();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6FF7C0()
{
  sub_23F705428();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FF7E8()
{
  sub_23F705428();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6FF810()
{
  sub_23F705338();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FF838()
{
  sub_23F705338();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6FF860()
{
  sub_23F705194();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FF888()
{
  sub_23F705194();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6FF8B0()
{
  sub_23F7054DC();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FF8D8()
{
  sub_23F7054DC();
  return sub_23FB2FD1C();
}

uint64_t sub_23F6FF900()
{
  sub_23F705518();
  return sub_23FB2FD10();
}

uint64_t sub_23F6FF928()
{
  sub_23F705518();
  return sub_23FB2FD1C();
}

void InfixExpression.InfixOp.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD v101[9];
  _QWORD v102[5];
  uint64_t v103;

  sub_23F6B5220();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v25 = sub_23F6916B8(&qword_256EA4E78);
  v102[0] = *(_QWORD *)(v25 - 8);
  v102[1] = v25;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F6B57BC(v27, v77);
  v28 = sub_23F6916B8(&qword_256EA4E80);
  v101[6] = *(_QWORD *)(v28 - 8);
  v101[7] = v28;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F6B5404(v30, v77);
  v31 = sub_23F6916B8(&qword_256EA4E88);
  v101[3] = *(_QWORD *)(v31 - 8);
  v101[4] = v31;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F6B5544(v33, v77);
  v34 = sub_23F6916B8(&qword_256EA4E90);
  v101[0] = *(_QWORD *)(v34 - 8);
  v101[1] = v34;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F6B658C(v36, v77);
  v37 = sub_23F6916B8(&qword_256EA4E98);
  v99 = *(_QWORD *)(v37 - 8);
  v100 = v37;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F6B5BF4(v39, v77);
  v40 = sub_23F6916B8(&qword_256EA4EA0);
  v97 = *(_QWORD *)(v40 - 8);
  v98 = v40;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F6B5314((uint64_t)&v77 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  v43 = sub_23F6916B8(&qword_256EA4EA8);
  sub_23F6B53F8(v43, (uint64_t)&a17);
  v96 = v44;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F6B5314((uint64_t)&v77 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  v95 = sub_23F6916B8(&qword_256EA4EB0);
  v94 = *(_QWORD *)(v95 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v47);
  sub_23F6B5314((uint64_t)&v77 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  v49 = sub_23F6916B8(&qword_256EA4EB8);
  sub_23F6B53F8(v49, (uint64_t)&a11);
  v93 = v50;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v51);
  sub_23F6B5314((uint64_t)&v77 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0));
  v92 = sub_23F6916B8(&qword_256EA4EC0);
  v91 = *(_QWORD *)(v92 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v53);
  sub_23F6B5314((uint64_t)&v77 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
  v90 = sub_23F6916B8(&qword_256EA4EC8);
  v89 = *(_QWORD *)(v90 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v55);
  sub_23F6B5314((uint64_t)&v77 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0));
  v57 = sub_23F6916B8(&qword_256EA4ED0);
  sub_23F6B53F8(v57, (uint64_t)v102);
  v88 = v58;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v59);
  sub_23F6B51A4();
  sub_23F6B5314(v60);
  v87 = sub_23F6916B8(&qword_256EA4ED8);
  v86 = *(_QWORD *)(v87 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v61);
  sub_23F6B51A4();
  sub_23F6B5314(v62);
  v85 = sub_23F6916B8(&qword_256EA4EE0);
  v84 = *(_QWORD *)(v85 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v63);
  sub_23F6B5314((uint64_t)&v77 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0));
  v65 = sub_23F6916B8(&qword_256EA4EE8);
  sub_23F6B53F8(v65, (uint64_t)v101);
  v83 = v66;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v67);
  sub_23F6B51A4();
  sub_23F6B5314(v68);
  v82 = sub_23F6916B8(&qword_256EA4EF0);
  v81 = *(_QWORD *)(v82 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v69);
  sub_23F6B51A4();
  sub_23F6B5314(v70);
  v80 = sub_23F6916B8(&qword_256EA4EF8);
  v79 = *(_QWORD *)(v80 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v71);
  sub_23F6B51A4();
  sub_23F6B5314(v72);
  v78 = sub_23F6916B8(&qword_256EA4F00);
  v77 = *(_QWORD *)(v78 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v73);
  sub_23F6B5298();
  sub_23F6916B8(&qword_256EA4F08);
  sub_23F70D9A8();
  MEMORY[0x24BDAC7A8](v74);
  sub_23F6B573C();
  v103 = sub_23F6916B8(&qword_256EA4F10);
  v102[3] = *(_QWORD *)(v103 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v75);
  sub_23F6B5208();
  v76 = *v20;
  sub_23F6ADC98(v24, v24[3]);
  sub_23F705158();
  sub_23F70D92C();
  sub_23FB2FCC8();
  __asm { BR              X9 }
}

void sub_23F6FFE18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);

  *(_BYTE *)(v3 - 65) = 0;
  sub_23F7055CC();
  sub_23F6B5238();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
  v4 = sub_23F6B6190();
  v5(v4);
  sub_23F6B5100();
}

void _s30IntelligenceFlowPlannerSupport16PrefixExpressionV0E2OpO9hashValueSivg_0()
{
  sub_23F6B53C4();
  sub_23F6B5A48();
  sub_23F6B5608();
  sub_23F6B5398();
}

void InfixExpression.InfixOp.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD v107[7];
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;

  sub_23F6B5220();
  a19 = v22;
  a20 = v23;
  v112 = v20;
  v25 = v24;
  v109 = v26;
  v106 = sub_23F6916B8(&qword_256EA4FB8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F6B57BC(v28, v90);
  sub_23F6916B8(&qword_256EA4FC0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F6B51A4();
  v107[6] = v30;
  sub_23F6916B8(&qword_256EA4FC8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F6B51A4();
  v107[5] = v32;
  v33 = sub_23F6916B8(&qword_256EA4FD0);
  sub_23F6B53F8(v33, (uint64_t)&a12);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F6B5404(v35, v91);
  sub_23F6916B8(&qword_256EA4FD8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F6B57A0(v37, v92);
  sub_23F6916B8(&qword_256EA4FE0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F6B582C(v39, v93);
  v40 = sub_23F6916B8(&qword_256EA4FE8);
  sub_23F6B53F8(v40, (uint64_t)&v111);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F6B5544(v42, v94);
  v43 = sub_23F6916B8(&qword_256EA4FF0);
  sub_23F6B53F8(v43, (uint64_t)&v110);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v44);
  sub_23F6B5560(v45, v95);
  v46 = sub_23F6916B8(&qword_256EA4FF8);
  sub_23F6B53F8(v46, (uint64_t)&v109);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v47);
  sub_23F6B5C10(v48, v96);
  v49 = sub_23F6916B8(&qword_256EA5000);
  sub_23F6B53F8(v49, (uint64_t)&v108);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v50);
  sub_23F6B5420(v51, v97);
  sub_23F6916B8(&qword_256EA5008);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v52);
  sub_23F6B537C(v53, v98);
  sub_23F6916B8(&qword_256EA5010);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v54);
  sub_23F6B5848(v55, v99);
  v56 = sub_23F6916B8(&qword_256EA5018);
  sub_23F6B53F8(v56, (uint64_t)v107);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v57);
  sub_23F6B658C(v58, v100);
  sub_23F6916B8(&qword_256EA5020);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v59);
  sub_23F6B557C(v60, v101);
  sub_23F6916B8(&qword_256EA5028);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v61);
  sub_23F6B57D8(v62, v102);
  sub_23F6916B8(&qword_256EA5030);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v63);
  sub_23F6B5BF4(v64, v103);
  v65 = sub_23F6916B8(&qword_256EA5038);
  sub_23F6B53F8(v65, (uint64_t)&v106);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v66);
  sub_23F6B5528(v67, v104);
  sub_23F6916B8(&qword_256EA5040);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v68);
  sub_23F70D7DC(v69, v105);
  sub_23F6916B8(&qword_256EA5048);
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v70);
  sub_23F6B5298();
  v71 = sub_23F6916B8(&qword_256EA5050);
  v72 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71);
  sub_23F6B573C();
  v111 = v25;
  sub_23F70D508(v25);
  sub_23F705158();
  v73 = v112;
  sub_23F70DC94();
  if (!v73)
  {
    v112 = v72;
    v74 = sub_23FB2FA94();
    if (*(_QWORD *)(v74 + 16))
    {
      v75 = *(unsigned __int8 *)(v74 + 32);
      v76 = sub_23F70D968();
      sub_23F6B4E44(v76, v77, v78, v79, v80, v81);
      v83 = v82;
      v85 = v84;
      sub_23F6B6E44();
      if (v83 == v85 >> 1)
        __asm { BR              X9 }
    }
    v86 = v112;
    sub_23F6B6334();
    sub_23F6B5AD4();
    v88 = v87;
    sub_23F6916B8(&qword_256EA1870);
    *v88 = &type metadata for InfixExpression.InfixOp;
    sub_23FB2FA04();
    v89 = sub_23F6B56B8();
    sub_23F6B5DAC(v89, *MEMORY[0x24BEE26D0]);
    swift_willThrow();
    sub_23F6B5770();
    sub_23F6B5900(v21, *(uint64_t (**)(uint64_t, uint64_t))(v86 + 8));
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v111);
  sub_23F6B5100();
}

uint64_t sub_23F700B58(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x704F7869666E69 && a2 == 0xE700000000000000;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 7563372 && a2 == 0xE300000000000000;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 7563378 && a2 == 0xE300000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23FB2FB78();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F700C80(char a1)
{
  if (!a1)
    return 0x704F7869666E69;
  if (a1 == 1)
    return 7563372;
  return 7563378;
}

#error "23F700CD4: call analysis failed (funcsize=5)"

#error "23F700CE8: call analysis failed (funcsize=5)"

uint64_t sub_23F700CF4()
{
  char *v0;

  return sub_23F700C80(*v0);
}

uint64_t sub_23F700CFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F700B58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F700D20()
{
  sub_23F705608();
  return sub_23FB2FD10();
}

uint64_t sub_23F700D48()
{
  sub_23F705608();
  return sub_23FB2FD1C();
}

void InfixExpression.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, char a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;

  sub_23F6B5220();
  a23 = v27;
  a24 = v28;
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EA5058);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&a9 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F70D4B8();
  sub_23F705608();
  sub_23F6B63A4();
  a14 = *v25;
  a13 = 0;
  sub_23F705644();
  sub_23F70D4F0();
  if (!v24)
  {
    sub_23F70D9C8();
    a12 = 1;
    sub_23F6B58C8();
    sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
    sub_23F70D4F0();
    a11 = 2;
    sub_23F70D4F0();
  }
  sub_23F6B56E0((uint64_t)v31, *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
  sub_23F6B5100();
}

void InfixExpression.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  _QWORD *v13;
  _BYTE *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;

  sub_23F6B5220();
  v36 = v13;
  v16 = v15;
  v30 = v17;
  v32 = sub_23F6B58C8();
  v34 = *(_QWORD *)(v32 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F693E0C();
  v31 = v19;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v20);
  v35 = sub_23F6916B8(&qword_256EA5070);
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v27 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_23F70D9C8();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F6B573C();
  sub_23F6ADC98(v16, v16[3]);
  sub_23F705608();
  v33 = v23;
  sub_23F70D92C();
  v26 = v36;
  sub_23F70D990();
  if (v26)
  {
    sub_23F6B6E34();
  }
  else
  {
    v29 = v24;
    v36 = v16;
    sub_23F705680();
    sub_23F6B5458();
    *v14 = a13;
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    sub_23F6B5458();
    v28 = &v14[*(int *)(v29 + 20)];
    sub_23F70DC88((uint64_t)v28);
    sub_23F6B5458();
    sub_23F70D8FC();
    sub_23F70DC88((uint64_t)&v14[*(int *)(v29 + 24)]);
    sub_23F70D654((uint64_t)v14, v30);
    sub_23F70DA20();
    sub_23F70D6DC((uint64_t)v14);
  }
  sub_23F6B5100();
}

void sub_23F701114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  InfixExpression.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

#error "23F701130: call analysis failed (funcsize=5)"

uint64_t (*DotExpression.lhs.modify())()
{
  return nullsub_1;
}

void DotExpression.index.getter()
{
  sub_23F70D710();
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void DotExpression.index.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;

  sub_23F70D710();
  v6 = (_QWORD *)(v2 + v5);
  swift_bridgeObjectRelease();
  *v6 = a1;
  v6[1] = a2;
  sub_23F694C84();
}

uint64_t (*DotExpression.index.modify())()
{
  sub_23F70D710();
  return nullsub_1;
}

void DotExpression.init(lhs:index:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = sub_23F6B58C8();
  sub_23F70D6B4(v6);
  sub_23F70D710();
  v8 = (_QWORD *)(a3 + v7);
  *v8 = a1;
  v8[1] = a2;
  sub_23F694C84();
}

void sub_23F701210(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23F701648(a1, a2);
  *a3 = v4;
}

uint64_t sub_23F701234()
{
  sub_23F7056BC();
  return sub_23FB2FD10();
}

uint64_t sub_23F70125C()
{
  sub_23F7056BC();
  return sub_23FB2FD1C();
}

void DotExpression.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE v5[16];

  sub_23F6D3DC4();
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EA5080);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v5[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F70D4B8();
  sub_23F7056BC();
  sub_23F6B63A4();
  v5[15] = 0;
  sub_23F6B58C8();
  sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
  sub_23F70D4F0();
  if (!v0)
  {
    sub_23F70D9D0();
    sub_23F70D978();
    sub_23FB2FADC();
  }
  sub_23F6B56E0((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F70D9D8();
  sub_23F6D3710();
}

void DotExpression.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_23F6B5220();
  v4 = v3;
  v22 = v5;
  v25 = sub_23F6B58C8();
  v23 = *(_QWORD *)(v25 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B51A4();
  v26 = v7;
  v24 = sub_23F6916B8(&qword_256EA5090);
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F693EB0();
  v9 = sub_23F70D9D0();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F70D6E4(v4);
  sub_23F7056BC();
  sub_23F70D750();
  if (v0)
  {
    sub_23F6B6E34();
  }
  else
  {
    v20 = v4;
    v21 = v1;
    v13 = v23;
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    v14 = v25;
    sub_23F6B6E1C();
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v12, v26, v14);
    sub_23F70DD04();
    v15 = sub_23F70D944();
    v17 = v16;
    sub_23F6B563C(v2, *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
    v18 = (uint64_t *)&v12[*(int *)(v9 + 20)];
    *v18 = v15;
    v18[1] = v17;
    sub_23F70D654((uint64_t)v12, v22);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v20);
    sub_23F70D6DC((uint64_t)v12);
  }
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23F701554()
{
  DotExpression.init(from:)();
}

void sub_23F701568()
{
  DotExpression.encode(to:)();
}

uint64_t (*IndexExpression.lhs.modify())()
{
  return nullsub_1;
}

uint64_t IndexExpression.index.getter()
{
  return sub_23F6FE830((void (*)(_QWORD))type metadata accessor for IndexExpression);
}

uint64_t IndexExpression.index.setter(uint64_t a1)
{
  return sub_23F6FE87C(a1, type metadata accessor for IndexExpression);
}

uint64_t (*IndexExpression.index.modify())()
{
  type metadata accessor for IndexExpression(0);
  sub_23F6F099C();
  return nullsub_1;
}

uint64_t IndexExpression.init(lhs:index:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v8)(uint64_t);

  v4 = sub_23F6B58C8();
  v8 = *(void (**)(uint64_t))(*(_QWORD *)(v4 - 8) + 32);
  v5 = sub_23F70DC34();
  v8(v5);
  v6 = a2 + *(int *)(type metadata accessor for IndexExpression(0) + 20);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(v6, a1, v4);
}

void sub_23F701648(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v5;

  v2 = a1 == 7563372 && a2 == 0xE300000000000000;
  if (v2 || (sub_23F6B5280() & 1) != 0 || (a1 == 0x7865646E69 ? (v5 = a2 == 0xE500000000000000) : (v5 = 0), v5))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F6B5280();
    sub_23F693E04();
  }
  sub_23F694CC8();
}

uint64_t sub_23F70170C()
{
  sub_23F7056F8();
  return sub_23FB2FD10();
}

uint64_t sub_23F701734()
{
  sub_23F7056F8();
  return sub_23FB2FD1C();
}

void IndexExpression.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE v5[16];

  sub_23F6D3DC4();
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EA5098);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v5[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F70D4B8();
  sub_23F7056F8();
  sub_23F6B63A4();
  v5[15] = 0;
  sub_23F6B58C8();
  sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
  sub_23F70D4F0();
  if (!v0)
  {
    type metadata accessor for IndexExpression(0);
    sub_23F70DCF0();
    sub_23F70D4F0();
  }
  sub_23F6B56E0((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F70D9D8();
  sub_23F6D3710();
}

void IndexExpression.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  void (*v18)(uint64_t, char *, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  sub_23F6B5220();
  v3 = v2;
  v21 = v4;
  v25 = sub_23F6B58C8();
  v23 = *(_QWORD *)(v25 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F693E0C();
  v22 = v6;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v7);
  v24 = (char *)&v19 - v8;
  v26 = sub_23F6916B8(&qword_256EA50A8);
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F70D7F8();
  v11 = type metadata accessor for IndexExpression(v10);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5208();
  sub_23F6ADC98(v3, v3[3]);
  sub_23F7056F8();
  sub_23F70D990();
  if (v0)
  {
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v3);
  }
  else
  {
    v19 = v11;
    v20 = v3;
    v13 = v1;
    v15 = v22;
    v14 = v23;
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    v16 = v24;
    sub_23F6B6E1C();
    v17 = v16;
    v18 = *(void (**)(uint64_t, char *, uint64_t))(v14 + 32);
    v18(v13, v17, v25);
    sub_23F6B6E1C();
    sub_23F70D644();
    v18(v13 + *(int *)(v19 + 20), v15, v25);
    sub_23F70D654(v13, v21);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v20);
    sub_23F70D6DC(v13);
  }
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23F701A60()
{
  IndexExpression.init(from:)();
}

void sub_23F701A74()
{
  IndexExpression.encode(to:)();
}

uint64_t (*UpdateParametersExpression.callStatementId.modify())()
{
  return nullsub_1;
}

uint64_t UpdateParametersExpression.updates.getter()
{
  type metadata accessor for UpdateParametersExpression(0);
  return swift_bridgeObjectRetain();
}

void UpdateParametersExpression.updates.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_23F6B5AC8();
  v3 = *(int *)(type metadata accessor for UpdateParametersExpression(v2) + 20);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = v0;
  sub_23F694C84();
}

uint64_t (*UpdateParametersExpression.updates.modify())()
{
  type metadata accessor for UpdateParametersExpression(0);
  sub_23F6F099C();
  return nullsub_1;
}

void UpdateParametersExpression.init(callStatementId:updates:)(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_23F703690(a1, type metadata accessor for UpdateParametersExpression, a2);
}

void UpdateParametersExpression.UpdateParameter.parameterId.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void UpdateParametersExpression.UpdateParameter.parameterId.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_23F6B5CF8();
  *v1 = v2;
  v1[1] = v0;
  sub_23F694C84();
}

uint64_t (*UpdateParametersExpression.UpdateParameter.parameterId.modify())()
{
  return nullsub_1;
}

uint64_t UpdateParametersExpression.UpdateParameter.parameterIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t UpdateParametersExpression.UpdateParameter.parameterIndex.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*UpdateParametersExpression.UpdateParameter.parameterIndex.modify())()
{
  return nullsub_1;
}

void UpdateParametersExpression.UpdateParameter.kind.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 25);
}

_BYTE *UpdateParametersExpression.UpdateParameter.kind.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 25) = *result;
  return result;
}

uint64_t (*UpdateParametersExpression.UpdateParameter.kind.modify())()
{
  return nullsub_1;
}

uint64_t UpdateParametersExpression.UpdateParameter.value.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  type metadata accessor for UpdateParametersExpression.UpdateParameter(0);
  sub_23F6B58C8();
  v0 = sub_23F6B5994();
  return sub_23F6B64B0(v0, v1, v2, v3);
}

uint64_t UpdateParametersExpression.UpdateParameter.value.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v0 = sub_23F6B5AC8();
  type metadata accessor for UpdateParametersExpression.UpdateParameter(v0);
  sub_23F6B58C8();
  v1 = sub_23F6F07FC();
  return sub_23F6B64B0(v1, v2, v3, v4);
}

uint64_t (*UpdateParametersExpression.UpdateParameter.value.modify())()
{
  type metadata accessor for UpdateParametersExpression.UpdateParameter(0);
  return nullsub_1;
}

uint64_t UpdateParametersExpression.UpdateParameter.init(parameterId:parameterIndex:kind:value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char *a5@<X4>, uint64_t a6@<X8>)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  v7 = *a5;
  *(_QWORD *)a6 = a1;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = a3;
  *(_BYTE *)(a6 + 24) = a4 & 1;
  *(_BYTE *)(a6 + 25) = v7;
  type metadata accessor for UpdateParametersExpression.UpdateParameter(0);
  sub_23F6B58C8();
  v8 = sub_23F6B6190();
  return sub_23F6B64B0(v8, v9, v10, v11);
}

void static UpdateParametersExpression.UpdateParameter.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  char v5;
  uint64_t updated;

  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (!v4 && (sub_23F6B5280() & 1) == 0)
    goto LABEL_13;
  v5 = *(_BYTE *)(a2 + 24);
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 24))
      goto LABEL_13;
  }
  else
  {
    if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
      v5 = 1;
    if ((v5 & 1) != 0)
      goto LABEL_13;
  }
  if (*(unsigned __int8 *)(a1 + 25) != *(unsigned __int8 *)(a2 + 25))
  {
LABEL_13:
    sub_23F694CC8();
    return;
  }
  updated = type metadata accessor for UpdateParametersExpression.UpdateParameter(0);
  sub_23F70D938(*(int *)(updated + 28));
  sub_23F70D628();
}

BOOL static UpdateParametersExpression.UpdateKind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_23F701D58(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x6574656D61726170 && a2 == 0xEB00000000644972;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6574656D61726170 && a2 == 0xEE007865646E4972;
    if (v6 || (sub_23FB2FB78() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 1684957547 && a2 == 0xE400000000000000;
      if (v7 || (sub_23FB2FB78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_23FB2FB78();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_23F701F20()
{
  return 4;
}

uint64_t sub_23F701F28(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F701F64 + 4 * byte_23FB5112A[a1]))(0x6574656D61726170, 0xEB00000000644972);
}

uint64_t sub_23F701F78()
{
  return 1684957547;
}

uint64_t sub_23F701F88()
{
  return 0x65756C6176;
}

uint64_t sub_23F701F9C()
{
  unsigned __int8 *v0;

  return sub_23F701F28(*v0);
}

uint64_t sub_23F701FA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F701D58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F701FC8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F701F20();
  *a1 = result;
  return result;
}

uint64_t sub_23F701FEC()
{
  sub_23F705748();
  return sub_23FB2FD10();
}

uint64_t sub_23F702014()
{
  sub_23F705748();
  return sub_23FB2FD1C();
}

void UpdateParametersExpression.UpdateParameter.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  _BYTE v6[16];

  sub_23F6D3DC4();
  sub_23F6916B8(&qword_256EA50B0);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v6[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F70D4B8();
  sub_23F705748();
  sub_23F6B63A4();
  v6[15] = 0;
  sub_23F70D90C();
  if (!v1)
  {
    sub_23F70D978();
    sub_23FB2FAC4();
    v6[13] = *(_BYTE *)(v0 + 25);
    v6[12] = 2;
    sub_23F705784();
    sub_23F70D78C();
    type metadata accessor for UpdateParametersExpression.UpdateParameter(0);
    v6[11] = 3;
    sub_23F6B58C8();
    sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
    sub_23F70D78C();
  }
  sub_23F6B56E0((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F6D3710();
}

void UpdateParametersExpression.UpdateParameter.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, char a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t updated;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_23F6B5220();
  v18 = v17;
  v28 = v19;
  v20 = sub_23F6B58C8();
  v29 = *(_QWORD *)(v20 - 8);
  v30 = v20;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B5268();
  sub_23F6916B8(&qword_256EA50C8);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v22);
  v23 = sub_23F6B51D0();
  updated = type metadata accessor for UpdateParametersExpression.UpdateParameter(v23);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F6B5208();
  sub_23F6ADC98(v18, v18[3]);
  sub_23F705748();
  sub_23FB2FCB0();
  if (v12)
  {
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v18);
  }
  else
  {
    *(_QWORD *)v13 = sub_23F70D944();
    *(_QWORD *)(v13 + 8) = v26;
    *(_QWORD *)(v13 + 16) = sub_23FB2FA28();
    *(_BYTE *)(v13 + 24) = v27 & 1;
    sub_23F7057C0();
    sub_23F6B6E1C();
    *(_BYTE *)(v13 + 25) = a12;
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    sub_23F6B6E1C();
    sub_23F6B6178(v14, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v13 + *(int *)(updated + 28), v15, v30);
    sub_23F70D654(v13, v28);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v18);
    sub_23F70D6DC(v13);
  }
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23F7023D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  _BYTE vars8[6];

  UpdateParametersExpression.UpdateParameter.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, vars8[4], vars8[5]);
}

void sub_23F7023E8()
{
  UpdateParametersExpression.UpdateParameter.encode(to:)();
}

void UpdateParametersExpression.UpdateKind.hash(into:)()
{
  sub_23F70D9B8();
  sub_23F694CC8();
}

uint64_t sub_23F702418()
{
  sub_23F705874();
  return sub_23FB2FD10();
}

uint64_t sub_23F702440()
{
  sub_23F705874();
  return sub_23FB2FD1C();
}

uint64_t sub_23F702468()
{
  sub_23F7057FC();
  return sub_23FB2FD10();
}

uint64_t sub_23F702490()
{
  sub_23F7057FC();
  return sub_23FB2FD1C();
}

uint64_t sub_23F7024B8()
{
  sub_23F705838();
  return sub_23FB2FD10();
}

uint64_t sub_23F7024E0()
{
  sub_23F705838();
  return sub_23FB2FD1C();
}

void UpdateParametersExpression.UpdateKind.encode(to:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_23F6B5220();
  v4 = v3;
  v5 = sub_23F6916B8(&qword_256EA50D8);
  v13 = *(_QWORD *)(v5 - 8);
  v14 = v5;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B53AC();
  sub_23F6916B8(&qword_256EA50E0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B5268();
  v15 = *(_QWORD *)(sub_23F6916B8(&qword_256EA50E8) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5208();
  v9 = *v0;
  sub_23F6ADC98(v4, v4[3]);
  sub_23F7057FC();
  sub_23F70D92C();
  sub_23F70DD2C();
  if ((v9 & 1) != 0)
  {
    sub_23F70DCB4();
    sub_23F6B54D4();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v2, v14);
  }
  else
  {
    sub_23F705874();
    sub_23F6B54D4();
    v10 = sub_23F6B640C();
    v12(v10, v11);
  }
  sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
  sub_23F6B5100();
}

void UpdateParametersExpression.UpdateKind.hashValue.getter()
{
  sub_23F6B53C4();
  sub_23F6B5A48();
  sub_23F6B5608();
  sub_23F6B5398();
}

void UpdateParametersExpression.UpdateKind.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;

  sub_23F6B5220();
  v6 = v5;
  v37 = v7;
  v35 = sub_23F6916B8(&qword_256EA5108);
  v39 = *(_QWORD *)(v35 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5BD8(v9, v32);
  v36 = sub_23F6916B8(&qword_256EA5110);
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5298();
  v11 = sub_23F6916B8(&qword_256EA5118);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B52B0();
  sub_23F6ADC98(v6, v6[3]);
  sub_23F7057FC();
  sub_23F6B5DA0();
  if (v1)
    goto LABEL_9;
  v33 = v0;
  v34 = v6;
  v13 = sub_23FB2FA94();
  v14 = v11;
  if (!*(_QWORD *)(v13 + 16))
  {
    v27 = v2;
LABEL_8:
    v28 = sub_23F6B6334();
    sub_23F6B5AD4();
    v30 = v29;
    sub_23F6916B8(&qword_256EA1870);
    *v30 = &type metadata for UpdateParametersExpression.UpdateKind;
    sub_23FB2FA04();
    sub_23F6B56B8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v30, *MEMORY[0x24BEE26D0], v28);
    swift_willThrow();
    sub_23F6B5770();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v27, v14);
    v6 = v34;
LABEL_9:
    v31 = (uint64_t)v6;
    goto LABEL_10;
  }
  v15 = *(_BYTE *)(v13 + 32);
  v16 = sub_23F70D968();
  sub_23F6B4E44(v16, v17, v18, v19, v20, v21);
  v23 = v22;
  v25 = v24;
  sub_23F6B6E44();
  if (v23 != v25 >> 1)
  {
    v27 = v2;
    v14 = v11;
    goto LABEL_8;
  }
  if ((v15 & 1) != 0)
  {
    sub_23F70DCB4();
    sub_23FB2F9F8();
    v26 = v37;
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v35);
    sub_23F6B5770();
    sub_23F6B530C(v2, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  }
  else
  {
    sub_23F705874();
    sub_23FB2F9F8();
    v26 = v37;
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v33, v36);
    sub_23F6B5770();
    sub_23F70D728(v2, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  }
  *v26 = v15;
  v31 = (uint64_t)v34;
LABEL_10:
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v31);
  sub_23F6B5100();
}

uint64_t sub_23F70299C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x746174536C6C6163 && a2 == 0xEF6449746E656D65;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73657461647075 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F702AAC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x73657461647075;
  else
    return 0x746174536C6C6163;
}

void sub_23F702AF8()
{
  UpdateParametersExpression.UpdateKind.init(from:)();
}

void sub_23F702B0C()
{
  UpdateParametersExpression.UpdateKind.encode(to:)();
}

uint64_t sub_23F702B24()
{
  char *v0;

  return sub_23F702AAC(*v0);
}

uint64_t sub_23F702B2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F70299C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F702B50()
{
  sub_23F7058B0();
  return sub_23FB2FD10();
}

uint64_t sub_23F702B78()
{
  sub_23F7058B0();
  return sub_23FB2FD1C();
}

void UpdateParametersExpression.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  _BYTE v6[16];
  uint64_t v7;
  char v8;

  sub_23F6D3DC4();
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EA5120);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v6[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F70D4B8();
  sub_23F7058B0();
  sub_23F6B63A4();
  v8 = 0;
  sub_23F6B58C8();
  sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
  sub_23F70D4F0();
  if (!v0)
  {
    v7 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for UpdateParametersExpression(0) + 20));
    v6[15] = 1;
    sub_23F6916B8(&qword_256EA5130);
    sub_23F7058EC((uint64_t)&unk_256EA5138);
    sub_23F70D4F0();
  }
  sub_23F6B56E0((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F70D9D8();
  sub_23F6D3710();
}

void UpdateParametersExpression.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t updated;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_23F6B5220();
  v5 = v4;
  v17 = v6;
  v20 = sub_23F6B58C8();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B537C(v8, (uint64_t)v16);
  v19 = sub_23F6916B8(&qword_256EA5148);
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F6B51D0();
  updated = type metadata accessor for UpdateParametersExpression(v10);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F70D6E4(v5);
  sub_23F7058B0();
  v18 = v3;
  sub_23FB2FCB0();
  if (v0)
  {
    sub_23F6B6E34();
  }
  else
  {
    v16 = v5;
    v21 = v1;
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    v15 = v18;
    sub_23F6B6E1C();
    sub_23F70D9E4((uint64_t)v14, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
    sub_23F6916B8(&qword_256EA5130);
    sub_23F6B6360();
    sub_23F7058EC((uint64_t)&unk_256EA5150);
    sub_23F6B6E1C();
    sub_23F6B563C(v15, *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
    *(_QWORD *)&v14[*(int *)(updated + 20)] = v22;
    sub_23F70D654((uint64_t)v14, v17);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v16);
    sub_23F70D6DC((uint64_t)v14);
  }
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23F702EF4()
{
  UpdateParametersExpression.init(from:)();
}

void sub_23F702F08()
{
  UpdateParametersExpression.encode(to:)();
}

void CallExpression.fn.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void CallExpression.fn.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_23F6B5CF8();
  *v1 = v2;
  v1[1] = v0;
  sub_23F694C84();
}

uint64_t (*CallExpression.fn.modify())()
{
  return nullsub_1;
}

uint64_t CallExpression.parameters.getter()
{
  return swift_bridgeObjectRetain();
}

void CallExpression.parameters.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  sub_23F694CC8();
}

uint64_t (*CallExpression.parameters.modify())()
{
  return nullsub_1;
}

uint64_t CallExpression.init(fn:parameters:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t sub_23F702FB8()
{
  sub_23F705944();
  return sub_23FB2FD10();
}

uint64_t sub_23F702FE0()
{
  sub_23F705944();
  return sub_23FB2FD1C();
}

void CallExpression.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6B5220();
  v3 = v2;
  v5 = *(_QWORD *)(sub_23F6916B8(&qword_256EA5160) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B52B0();
  sub_23F6ADC98(v3, v3[3]);
  sub_23F705944();
  sub_23FB2FCC8();
  sub_23F70D90C();
  if (!v0)
  {
    sub_23F6B6360();
    sub_23F6916B8(&qword_256EA5170);
    sub_23F705980();
    sub_23F70D78C();
  }
  sub_23F6B56E0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_23F6B5100();
}

void CallExpression.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD v12[2];

  sub_23F6B5220();
  v3 = v2;
  sub_23F6916B8(&qword_256EA5180);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5B10();
  sub_23F705944();
  sub_23F6B5DA0();
  if (v0)
  {
    sub_23F6B6E68();
  }
  else
  {
    v7 = sub_23F6B7248();
    v9 = v8;
    sub_23F6916B8(&qword_256EA5170);
    sub_23F6B6360();
    v10 = sub_23F705A04();
    swift_bridgeObjectRetain();
    sub_23F70D780();
    sub_23F6B563C((uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    if (v10)
    {
      sub_23F6B6A48();
      sub_23F6B6E68();
    }
    else
    {
      v11 = v12[1];
      *v3 = v7;
      v3[1] = v9;
      v3[2] = v11;
      sub_23F6B54F8();
      sub_23F6B6E68();
      swift_bridgeObjectRelease();
    }
    sub_23F6B6A48();
  }
  sub_23F6B5100();
}

void sub_23F703264()
{
  CallExpression.init(from:)();
}

void sub_23F703278()
{
  CallExpression.encode(to:)();
}

uint64_t SayExpression.statementIds.getter()
{
  return swift_bridgeObjectRetain();
}

void SayExpression.statementIds.setter(uint64_t a1)
{
  _QWORD *v1;

  swift_bridgeObjectRelease();
  *v1 = a1;
  sub_23F694CC8();
}

uint64_t (*SayExpression.statementIds.modify())()
{
  return nullsub_1;
}

uint64_t SayExpression.init(statementIds:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_23F7032D4(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6E656D6574617473 && a2 == 0xEC00000073644974)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F703370()
{
  return 0x6E656D6574617473;
}

uint64_t sub_23F703394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F7032D4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F7033BC()
{
  sub_23F705A88();
  return sub_23FB2FD10();
}

uint64_t sub_23F7033E4()
{
  sub_23F705A88();
  return sub_23FB2FD1C();
}

void SayExpression.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  sub_23F6B5220();
  v3 = v2;
  sub_23F6916B8(&qword_256EA5190);
  sub_23F70DD34();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F693EB0();
  sub_23F70D508(v3);
  sub_23F705A88();
  sub_23F6F33A0();
  sub_23F6916B8(&qword_256EA4D70);
  sub_23F704F5C((uint64_t)&unk_256EA4D78);
  sub_23F70DD18();
  sub_23FB2FB18();
  sub_23F6B530C(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F6B5100();
}

void SayExpression.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;

  sub_23F6B5220();
  a19 = v22;
  a20 = v23;
  v25 = v24;
  v27 = v26;
  sub_23F6916B8(&qword_256EA51A0);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&a9 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5B10();
  sub_23F705A88();
  sub_23F6B5DA0();
  if (!v20)
  {
    sub_23F6916B8(&qword_256EA4D70);
    sub_23F704F5C((uint64_t)&unk_256EA4DE8);
    sub_23F6B6E1C();
    sub_23F6B51EC((uint64_t)v30, *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
    *v27 = a10;
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v25);
  sub_23F6B6834();
  sub_23F6B5100();
}

#error "23F7035E0: call analysis failed (funcsize=5)"

void sub_23F7035EC()
{
  SayExpression.encode(to:)();
}

uint64_t (*PickExpression.statementId.modify())()
{
  return nullsub_1;
}

uint64_t PickExpression.index.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for PickExpression(0) + 20));
}

void PickExpression.index.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F6B5AC8();
  *(_QWORD *)(v1 + *(int *)(type metadata accessor for PickExpression(v2) + 20)) = v0;
  sub_23F694CC8();
}

uint64_t (*PickExpression.index.modify())()
{
  type metadata accessor for PickExpression(0);
  sub_23F6F099C();
  return nullsub_1;
}

void PickExpression.init(statementId:index:)(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_23F703690(a1, type metadata accessor for PickExpression, a2);
}

void sub_23F703690(uint64_t a1@<X1>, uint64_t (*a2)(_QWORD)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;

  v6 = sub_23F6B58C8();
  sub_23F70D6B4(v6);
  *(_QWORD *)(a3 + *(int *)(a2(0) + 20)) = a1;
  sub_23F694C84();
}

uint64_t sub_23F7036D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
  if (v2 || (sub_23FB2FB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7865646E69 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FB2FB78();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F7037CC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7865646E69;
  else
    return 0x6E656D6574617473;
}

uint64_t sub_23F703808()
{
  char *v0;

  return sub_23F7037CC(*v0);
}

uint64_t sub_23F703810@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F7036D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F703834()
{
  sub_23F705AC4();
  return sub_23FB2FD10();
}

uint64_t sub_23F70385C()
{
  sub_23F705AC4();
  return sub_23FB2FD1C();
}

void PickExpression.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE v5[16];

  sub_23F6D3DC4();
  sub_23F70D5A8();
  sub_23F6916B8(&qword_256EA51A8);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v5[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F70D4B8();
  sub_23F705AC4();
  sub_23F6B63A4();
  v5[15] = 0;
  sub_23F6B58C8();
  sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
  sub_23F70D4F0();
  if (!v0)
  {
    type metadata accessor for PickExpression(0);
    sub_23F70DCF0();
    sub_23FB2FB0C();
  }
  sub_23F6B56E0((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F70D9D8();
  sub_23F6D3710();
}

void PickExpression.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_23F6B5220();
  v5 = v4;
  v17 = v6;
  v18 = *(_QWORD *)(sub_23F6B58C8() - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B5C10(v8, v16);
  sub_23F6916B8(&qword_256EA51B8);
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F70D7F8();
  v11 = type metadata accessor for PickExpression(v10);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5208();
  sub_23F70D6E4(v5);
  sub_23F705AC4();
  sub_23F70D750();
  if (v0)
  {
    sub_23F70DA94();
  }
  else
  {
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    sub_23F6B6E1C();
    sub_23F70D9E4(v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32));
    sub_23F70DD04();
    v13 = sub_23F70DAB4();
    sub_23F6B563C(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    *(_QWORD *)(v2 + *(int *)(v11 + 20)) = v13;
    sub_23F70D654(v2, v17);
    sub_23F70DA94();
    v14 = sub_23F6B5994();
    sub_23F6F8C88(v14, v15);
  }
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23F703B1C()
{
  PickExpression.init(from:)();
}

void sub_23F703B30()
{
  PickExpression.encode(to:)();
}

uint64_t (*ConfirmExpression.statementId.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F703B68()
{
  sub_23F705B00();
  return sub_23FB2FD10();
}

uint64_t sub_23F703B90()
{
  sub_23F705B00();
  return sub_23FB2FD1C();
}

void ConfirmExpression.encode(to:)()
{
  sub_23F7049A4();
}

void ConfirmExpression.init(from:)()
{
  sub_23F704AB8();
}

void sub_23F703C20()
{
  ConfirmExpression.init(from:)();
}

void sub_23F703C34()
{
  ConfirmExpression.encode(to:)();
}

void SearchExpression.query.getter()
{
  sub_23F6B54F8();
  sub_23F6B5994();
  sub_23F694CC8();
}

void SearchExpression.query.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_23F6B5CF8();
  *v1 = v2;
  v1[1] = v0;
  sub_23F694C84();
}

uint64_t (*SearchExpression.query.modify())()
{
  return nullsub_1;
}

uint64_t SearchExpression.isLowConfidenceKnowledge.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t SearchExpression.isLowConfidenceKnowledge.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*SearchExpression.isLowConfidenceKnowledge.modify())()
{
  return nullsub_1;
}

uint64_t SearchExpression.pickOne.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t SearchExpression.pickOne.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = result;
  return result;
}

uint64_t (*SearchExpression.pickOne.modify())()
{
  return nullsub_1;
}

IntelligenceFlowPlannerSupport::SearchExpression __swiftcall SearchExpression.init(query:isLowConfidenceKnowledge:pickOne:)(Swift::String query, Swift::Bool isLowConfidenceKnowledge, Swift::Bool pickOne)
{
  uint64_t v3;
  IntelligenceFlowPlannerSupport::SearchExpression result;

  *(Swift::String *)v3 = query;
  *(_BYTE *)(v3 + 16) = isLowConfidenceKnowledge;
  *(_BYTE *)(v3 + 17) = pickOne;
  result.query = query;
  result.isLowConfidenceKnowledge = isLowConfidenceKnowledge;
  return result;
}

uint64_t sub_23F703CEC()
{
  sub_23F705B3C();
  return sub_23FB2FD10();
}

uint64_t sub_23F703D14()
{
  sub_23F705B3C();
  return sub_23FB2FD1C();
}

void SearchExpression.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  sub_23F6B5220();
  v4 = v3;
  sub_23F6916B8(&qword_256EA51D8);
  sub_23F70D528();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B52B0();
  sub_23F6ADC98(v4, v4[3]);
  sub_23F705B3C();
  sub_23FB2FCC8();
  sub_23FB2FADC();
  if (!v0)
  {
    sub_23F6B6A18();
    sub_23F6B6A18();
  }
  sub_23F6B56E0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F6B5100();
}

void SearchExpression.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, char a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;

  sub_23F6B5220();
  a23 = v26;
  a24 = v27;
  v29 = v28;
  sub_23F6916B8(&qword_256EA51E8);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&a9 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5B10();
  sub_23F705B3C();
  sub_23F6B5DA0();
  if (v24)
  {
    sub_23F6B6E68();
  }
  else
  {
    a14 = 0;
    v33 = sub_23F6B7248();
    v35 = v34;
    sub_23F6B6360();
    swift_bridgeObjectRetain();
    a10 = sub_23F6B6B1C();
    a12 = 2;
    v36 = sub_23F6B6B1C();
    a10 &= 1u;
    sub_23F6B51EC((uint64_t)v32, *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8));
    *(_QWORD *)v29 = v33;
    *(_QWORD *)(v29 + 8) = v35;
    *(_BYTE *)(v29 + 16) = a10;
    *(_BYTE *)(v29 + 17) = v36 & 1;
    sub_23F6B6E68();
    sub_23F6B6A48();
  }
  sub_23F6B5100();
}

#error "23F703F94: call analysis failed (funcsize=5)"

void sub_23F703FA0()
{
  SearchExpression.encode(to:)();
}

uint64_t (*PickOneExpression.statementId.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F703FD4()
{
  sub_23F705B78();
  return sub_23FB2FD10();
}

uint64_t sub_23F703FFC()
{
  sub_23F705B78();
  return sub_23FB2FD1C();
}

void PickOneExpression.encode(to:)()
{
  sub_23F7049A4();
}

void PickOneExpression.init(from:)()
{
  sub_23F704AB8();
}

void sub_23F70408C()
{
  PickOneExpression.init(from:)();
}

void sub_23F7040A0()
{
  PickOneExpression.encode(to:)();
}

uint64_t (*ResolveToolExpression.toolIds.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F7040C4()
{
  sub_23F705BB4();
  return sub_23FB2FD10();
}

uint64_t sub_23F7040EC()
{
  sub_23F705BB4();
  return sub_23FB2FD1C();
}

void ResolveToolExpression.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  sub_23F6B5220();
  v3 = v2;
  sub_23F6916B8(&qword_256EA5208);
  sub_23F70DD34();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B5208();
  sub_23F70D508(v3);
  sub_23F705BB4();
  sub_23F6F33A0();
  sub_23F6916B8(&qword_256EA1918);
  sub_23F705BF0((uint64_t)&unk_256EA1920);
  sub_23F70DD18();
  sub_23FB2FB18();
  sub_23F6B530C(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F6B5100();
}

void ResolveToolExpression.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;

  sub_23F6B5220();
  a19 = v22;
  a20 = v23;
  v25 = v24;
  v27 = v26;
  sub_23F6916B8(&qword_256EA5218);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&a9 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5B10();
  sub_23F705BB4();
  sub_23F6B5DA0();
  if (!v20)
  {
    sub_23F6916B8(&qword_256EA1918);
    sub_23F705BF0((uint64_t)&unk_256EA1930);
    sub_23F6B6E1C();
    sub_23F6B51EC((uint64_t)v30, *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
    *v27 = a10;
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v25);
  sub_23F6B6834();
  sub_23F6B5100();
}

#error "23F7042D8: call analysis failed (funcsize=5)"

void sub_23F7042E4()
{
  ResolveToolExpression.encode(to:)();
}

uint64_t UndoExpression.statementId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23F6FEA60(v1, a1);
}

uint64_t UndoExpression.statementId.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_23F705C4C(a1, v1);
}

uint64_t (*UndoExpression.statementId.modify())()
{
  return nullsub_1;
}

uint64_t UndoExpression.init(statementId:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_23F6B58C8();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 1, 1, v2);
  v3 = sub_23F6B5994();
  return sub_23F705C4C(v3, v4);
}

uint64_t sub_23F70435C()
{
  sub_23F705C94();
  return sub_23FB2FD10();
}

uint64_t sub_23F704384()
{
  sub_23F705C94();
  return sub_23FB2FD1C();
}

void UndoExpression.encode(to:)()
{
  sub_23F7049A4();
}

void UndoExpression.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_23F6B5220();
  v13 = v12;
  v23 = v14;
  sub_23F6916B8(&qword_256EA49D8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F70D7C0(v16, v23);
  v24 = *(_QWORD *)(sub_23F6916B8(&qword_256EA5230) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B59E0();
  type metadata accessor for UndoExpression(0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23F6B58C8();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v20, 1, 1, v21);
  sub_23F6ADC98(v13, v13[3]);
  sub_23F705C94();
  sub_23F70D990();
  if (v10)
  {
    sub_23F6B6E68();
    v22 = (uint64_t)v20;
  }
  else
  {
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    sub_23FB2FA34();
    sub_23F70D728(v11, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
    sub_23F705C4C(a10, (uint64_t)v20);
    sub_23F70D654((uint64_t)v20, v23);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v13);
    v22 = (uint64_t)v20;
  }
  sub_23F6F8C88(v22, type metadata accessor for UndoExpression);
  sub_23F6B5100();
}

void sub_23F70458C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  UndoExpression.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F7045A0()
{
  UndoExpression.encode(to:)();
}

uint64_t (*RejectExpression.statementId.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F7045D4()
{
  sub_23F705CD0();
  return sub_23FB2FD10();
}

uint64_t sub_23F7045FC()
{
  sub_23F705CD0();
  return sub_23FB2FD1C();
}

void RejectExpression.encode(to:)()
{
  sub_23F7049A4();
}

void RejectExpression.init(from:)()
{
  sub_23F704AB8();
}

void sub_23F70468C()
{
  RejectExpression.init(from:)();
}

void sub_23F7046A0()
{
  RejectExpression.encode(to:)();
}

uint64_t (*CancelExpression.statementId.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F7046D0()
{
  sub_23F705D0C();
  return sub_23FB2FD10();
}

uint64_t sub_23F7046F8()
{
  sub_23F705D0C();
  return sub_23FB2FD1C();
}

void CancelExpression.encode(to:)()
{
  sub_23F7049A4();
}

void CancelExpression.init(from:)()
{
  sub_23F704AB8();
}

void sub_23F704788()
{
  CancelExpression.init(from:)();
}

void sub_23F70479C()
{
  CancelExpression.encode(to:)();
}

uint64_t _s30IntelligenceFlowPlannerSupport13DotExpressionV3lhs0aB011StatementIDVvg_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F6B58C8();
  v0 = sub_23F6B5994();
  return sub_23F6B64B0(v0, v1, v2, v3);
}

uint64_t _s30IntelligenceFlowPlannerSupport13DotExpressionV3lhs0aB011StatementIDVvs_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F6B58C8();
  v0 = sub_23F6F07FC();
  return sub_23F6B64B0(v0, v1, v2, v3);
}

uint64_t (*OpenExpression.statementId.modify())()
{
  return nullsub_1;
}

uint64_t _s30IntelligenceFlowPlannerSupport17ConfirmExpressionV11statementIdAC0aB011StatementIDV_tcfC_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F6B58C8();
  v0 = sub_23F6B6190();
  return sub_23F6B64B0(v0, v1, v2, v3);
}

void sub_23F704848(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F6B5280();
    sub_23F693E04();
  }
  sub_23F694CC8();
}

uint64_t sub_23F7048D8()
{
  return 0x6E656D6574617473;
}

void sub_23F7048F8(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23F704848(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_23F704920()
{
  sub_23F705D48();
  return sub_23FB2FD10();
}

uint64_t sub_23F704948()
{
  sub_23F705D48();
  return sub_23FB2FD1C();
}

void OpenExpression.encode(to:)()
{
  sub_23F7049A4();
}

void sub_23F7049A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  void (*v4)(_QWORD *);
  void (*v5)(_QWORD *);
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  _QWORD *v11;
  void (*v12)(uint64_t);

  sub_23F6B5220();
  v12 = v3;
  v5 = v4;
  v6 = v0;
  v8 = v7;
  sub_23F6916B8(v9);
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5268();
  v11 = sub_23F70D6E4(v8);
  v5(v11);
  sub_23FB2FCC8();
  sub_23F6B58C8();
  sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
  v12(v6);
  sub_23F6B530C(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F6B5100();
}

void OpenExpression.init(from:)()
{
  sub_23F704AB8();
}

void sub_23F704AB8()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_QWORD *);
  void (*v3)(_QWORD *);
  uint64_t (*v4)(_QWORD);
  uint64_t (*v5)(_QWORD);
  uint64_t *v6;
  uint64_t *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_QWORD);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_23F6B5220();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v19 = v10;
  v23 = sub_23F6B58C8();
  v18 = *(_QWORD *)(v23 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F70D7A4(v12, v18);
  v21 = *(_QWORD *)(sub_23F6916B8(v7) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B573C();
  v20 = v5;
  v14 = v5(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v18 - v15;
  v17 = sub_23F70D508(v9);
  v3(v17);
  sub_23FB2FCB0();
  if (!v0)
  {
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    sub_23FB2FA7C();
    sub_23F6B5900(v1, *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(v16, v22, v23);
    sub_23F6F8CA8((uint64_t)v16, v19, v20);
  }
  sub_23F6B6E68();
  sub_23F6B5100();
}

void sub_23F704C28()
{
  OpenExpression.init(from:)();
}

void sub_23F704C3C()
{
  OpenExpression.encode(to:)();
}

unint64_t sub_23F704C50()
{
  unint64_t result;

  result = qword_256EA4CB0;
  if (!qword_256EA4CB0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ResolveToolExpression, &type metadata for ResolveToolExpression);
    atomic_store(result, (unint64_t *)&qword_256EA4CB0);
  }
  return result;
}

unint64_t sub_23F704C8C()
{
  unint64_t result;

  result = qword_256EA4CC0;
  if (!qword_256EA4CC0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for SearchExpression, &type metadata for SearchExpression);
    atomic_store(result, (unint64_t *)&qword_256EA4CC0);
  }
  return result;
}

unint64_t sub_23F704CC8()
{
  unint64_t result;

  result = qword_256EA4CD8;
  if (!qword_256EA4CD8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for SayExpression, &type metadata for SayExpression);
    atomic_store(result, (unint64_t *)&qword_256EA4CD8);
  }
  return result;
}

unint64_t sub_23F704D04()
{
  unint64_t result;

  result = qword_256EA4CE0;
  if (!qword_256EA4CE0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for CallExpression, &type metadata for CallExpression);
    atomic_store(result, (unint64_t *)&qword_256EA4CE0);
  }
  return result;
}

unint64_t sub_23F704D40()
{
  unint64_t result;

  result = qword_256EA4D10;
  if (!qword_256EA4D10)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ValueExpression, &type metadata for ValueExpression);
    atomic_store(result, (unint64_t *)&qword_256EA4D10);
  }
  return result;
}

unint64_t sub_23F704D7C()
{
  unint64_t result;

  result = qword_256EA4D58;
  if (!qword_256EA4D58)
  {
    result = MEMORY[0x242674E5C](&unk_23FB56064, &type metadata for ValueExpression.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4D58);
  }
  return result;
}

unint64_t sub_23F704DB8()
{
  unint64_t result;

  result = qword_256EA4D60;
  if (!qword_256EA4D60)
  {
    result = MEMORY[0x242674E5C](&unk_23FB56014, &type metadata for ValueExpression.SymbolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4D60);
  }
  return result;
}

unint64_t sub_23F704DF4()
{
  unint64_t result;

  result = qword_256EA4D68;
  if (!qword_256EA4D68)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55FC4, &type metadata for ValueExpression.ArrayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4D68);
  }
  return result;
}

unint64_t sub_23F704E30()
{
  unint64_t result;

  result = qword_256EA4D80;
  if (!qword_256EA4D80)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55F74, &type metadata for ValueExpression.StringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4D80);
  }
  return result;
}

unint64_t sub_23F704E6C()
{
  unint64_t result;

  result = qword_256EA4D88;
  if (!qword_256EA4D88)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55F24, &type metadata for ValueExpression.DoubleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4D88);
  }
  return result;
}

unint64_t sub_23F704EA8()
{
  unint64_t result;

  result = qword_256EA4D90;
  if (!qword_256EA4D90)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55ED4, &type metadata for ValueExpression.IntCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4D90);
  }
  return result;
}

unint64_t sub_23F704EE4()
{
  unint64_t result;

  result = qword_256EA4D98;
  if (!qword_256EA4D98)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55E84, &type metadata for ValueExpression.BoolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4D98);
  }
  return result;
}

unint64_t sub_23F704F20()
{
  unint64_t result;

  result = qword_256EA4DA0;
  if (!qword_256EA4DA0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55E34, &type metadata for ValueExpression.NullCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4DA0);
  }
  return result;
}

void sub_23F704F5C(uint64_t a1)
{
  if (!sub_23F6B6A68(a1))
  {
    sub_23F6AE310(&qword_256EA4D70);
    sub_23F70DC4C();
    sub_23F70D730();
  }
  sub_23F6B647C();
}

unint64_t sub_23F704FB4()
{
  unint64_t result;

  result = qword_256EA4E10;
  if (!qword_256EA4E10)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55DE4, &type metadata for PrefixExpression.PrefixOp.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4E10);
  }
  return result;
}

unint64_t sub_23F704FF0()
{
  unint64_t result;

  result = qword_256EA4E18;
  if (!qword_256EA4E18)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55D94, &type metadata for PrefixExpression.PrefixOp.NotCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4E18);
  }
  return result;
}

unint64_t sub_23F70502C()
{
  unint64_t result;

  result = qword_256EA4E20;
  if (!qword_256EA4E20)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55D44, &type metadata for PrefixExpression.PrefixOp.MinusCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4E20);
  }
  return result;
}

unint64_t sub_23F705068()
{
  unint64_t result;

  result = qword_256EA4E28;
  if (!qword_256EA4E28)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55CF4, &type metadata for PrefixExpression.PrefixOp.PlusCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4E28);
  }
  return result;
}

unint64_t sub_23F7050A4()
{
  unint64_t result;

  result = qword_256EA4E58;
  if (!qword_256EA4E58)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55CA4, &type metadata for PrefixExpression.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4E58);
  }
  return result;
}

unint64_t sub_23F7050E0()
{
  unint64_t result;

  result = qword_256EA4E60;
  if (!qword_256EA4E60)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for PrefixExpression.PrefixOp, &type metadata for PrefixExpression.PrefixOp);
    atomic_store(result, (unint64_t *)&qword_256EA4E60);
  }
  return result;
}

unint64_t sub_23F70511C()
{
  unint64_t result;

  result = qword_256EA4E70;
  if (!qword_256EA4E70)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for PrefixExpression.PrefixOp, &type metadata for PrefixExpression.PrefixOp);
    atomic_store(result, (unint64_t *)&qword_256EA4E70);
  }
  return result;
}

unint64_t sub_23F705158()
{
  unint64_t result;

  result = qword_256EA4F18;
  if (!qword_256EA4F18)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55C54, &type metadata for InfixExpression.InfixOp.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4F18);
  }
  return result;
}

unint64_t sub_23F705194()
{
  unint64_t result;

  result = qword_256EA4F20;
  if (!qword_256EA4F20)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55C04, &type metadata for InfixExpression.InfixOp.OrCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4F20);
  }
  return result;
}

unint64_t sub_23F7051D0()
{
  unint64_t result;

  result = qword_256EA4F28;
  if (!qword_256EA4F28)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55BB4, &type metadata for InfixExpression.InfixOp.AndCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4F28);
  }
  return result;
}

unint64_t sub_23F70520C()
{
  unint64_t result;

  result = qword_256EA4F30;
  if (!qword_256EA4F30)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55B64, &type metadata for InfixExpression.InfixOp.LessThanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4F30);
  }
  return result;
}

unint64_t sub_23F705248()
{
  unint64_t result;

  result = qword_256EA4F38;
  if (!qword_256EA4F38)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55B14, &type metadata for InfixExpression.InfixOp.LessThanEqualCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4F38);
  }
  return result;
}

unint64_t sub_23F705284()
{
  unint64_t result;

  result = qword_256EA4F40;
  if (!qword_256EA4F40)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55AC4, &type metadata for InfixExpression.InfixOp.GreaterThanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4F40);
  }
  return result;
}

unint64_t sub_23F7052C0()
{
  unint64_t result;

  result = qword_256EA4F48;
  if (!qword_256EA4F48)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55A74, &type metadata for InfixExpression.InfixOp.GreaterThanEqualCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4F48);
  }
  return result;
}

unint64_t sub_23F7052FC()
{
  unint64_t result;

  result = qword_256EA4F50;
  if (!qword_256EA4F50)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55A24, &type metadata for InfixExpression.InfixOp.InCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4F50);
  }
  return result;
}

unint64_t sub_23F705338()
{
  unint64_t result;

  result = qword_256EA4F58;
  if (!qword_256EA4F58)
  {
    result = MEMORY[0x242674E5C](&unk_23FB559D4, &type metadata for InfixExpression.InfixOp.NotEqualCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4F58);
  }
  return result;
}

unint64_t sub_23F705374()
{
  unint64_t result;

  result = qword_256EA4F60;
  if (!qword_256EA4F60)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55984, &type metadata for InfixExpression.InfixOp.EqualCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4F60);
  }
  return result;
}

unint64_t sub_23F7053B0()
{
  unint64_t result;

  result = qword_256EA4F68;
  if (!qword_256EA4F68)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55934, &type metadata for InfixExpression.InfixOp.ExponentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4F68);
  }
  return result;
}

unint64_t sub_23F7053EC()
{
  unint64_t result;

  result = qword_256EA4F70;
  if (!qword_256EA4F70)
  {
    result = MEMORY[0x242674E5C](&unk_23FB558E4, &type metadata for InfixExpression.InfixOp.MultiplyAssignCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4F70);
  }
  return result;
}

unint64_t sub_23F705428()
{
  unint64_t result;

  result = qword_256EA4F78;
  if (!qword_256EA4F78)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55894, &type metadata for InfixExpression.InfixOp.MultiplyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4F78);
  }
  return result;
}

unint64_t sub_23F705464()
{
  unint64_t result;

  result = qword_256EA4F80;
  if (!qword_256EA4F80)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55844, &type metadata for InfixExpression.InfixOp.DivideAssignCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4F80);
  }
  return result;
}

unint64_t sub_23F7054A0()
{
  unint64_t result;

  result = qword_256EA4F88;
  if (!qword_256EA4F88)
  {
    result = MEMORY[0x242674E5C](&unk_23FB557F4, &type metadata for InfixExpression.InfixOp.DivideCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4F88);
  }
  return result;
}

unint64_t sub_23F7054DC()
{
  unint64_t result;

  result = qword_256EA4F90;
  if (!qword_256EA4F90)
  {
    result = MEMORY[0x242674E5C](&unk_23FB557A4, &type metadata for InfixExpression.InfixOp.SubtractAssignCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4F90);
  }
  return result;
}

unint64_t sub_23F705518()
{
  unint64_t result;

  result = qword_256EA4F98;
  if (!qword_256EA4F98)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55754, &type metadata for InfixExpression.InfixOp.SubtractCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4F98);
  }
  return result;
}

unint64_t sub_23F705554()
{
  unint64_t result;

  result = qword_256EA4FA0;
  if (!qword_256EA4FA0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55704, &type metadata for InfixExpression.InfixOp.AddAssignCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4FA0);
  }
  return result;
}

unint64_t sub_23F705590()
{
  unint64_t result;

  result = qword_256EA4FA8;
  if (!qword_256EA4FA8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB556B4, &type metadata for InfixExpression.InfixOp.AddCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4FA8);
  }
  return result;
}

unint64_t sub_23F7055CC()
{
  unint64_t result;

  result = qword_256EA4FB0;
  if (!qword_256EA4FB0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55664, &type metadata for InfixExpression.InfixOp.AssignCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA4FB0);
  }
  return result;
}

unint64_t sub_23F705608()
{
  unint64_t result;

  result = qword_256EA5060;
  if (!qword_256EA5060)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55614, &type metadata for InfixExpression.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA5060);
  }
  return result;
}

unint64_t sub_23F705644()
{
  unint64_t result;

  result = qword_256EA5068;
  if (!qword_256EA5068)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for InfixExpression.InfixOp, &type metadata for InfixExpression.InfixOp);
    atomic_store(result, (unint64_t *)&qword_256EA5068);
  }
  return result;
}

unint64_t sub_23F705680()
{
  unint64_t result;

  result = qword_256EA5078;
  if (!qword_256EA5078)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for InfixExpression.InfixOp, &type metadata for InfixExpression.InfixOp);
    atomic_store(result, (unint64_t *)&qword_256EA5078);
  }
  return result;
}

unint64_t sub_23F7056BC()
{
  unint64_t result;

  result = qword_256EA5088;
  if (!qword_256EA5088)
  {
    result = MEMORY[0x242674E5C](&unk_23FB555C4, &type metadata for DotExpression.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA5088);
  }
  return result;
}

unint64_t sub_23F7056F8()
{
  unint64_t result;

  result = qword_256EA50A0;
  if (!qword_256EA50A0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55574, &type metadata for IndexExpression.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA50A0);
  }
  return result;
}

uint64_t type metadata accessor for UpdateParametersExpression.UpdateParameter(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EA5678);
}

unint64_t sub_23F705748()
{
  unint64_t result;

  result = qword_256EA50B8;
  if (!qword_256EA50B8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55524, &type metadata for UpdateParametersExpression.UpdateParameter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA50B8);
  }
  return result;
}

unint64_t sub_23F705784()
{
  unint64_t result;

  result = qword_256EA50C0;
  if (!qword_256EA50C0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for UpdateParametersExpression.UpdateKind, &type metadata for UpdateParametersExpression.UpdateKind);
    atomic_store(result, (unint64_t *)&qword_256EA50C0);
  }
  return result;
}

unint64_t sub_23F7057C0()
{
  unint64_t result;

  result = qword_256EA50D0;
  if (!qword_256EA50D0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for UpdateParametersExpression.UpdateKind, &type metadata for UpdateParametersExpression.UpdateKind);
    atomic_store(result, (unint64_t *)&qword_256EA50D0);
  }
  return result;
}

unint64_t sub_23F7057FC()
{
  unint64_t result;

  result = qword_256EA50F0;
  if (!qword_256EA50F0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB554D4, &type metadata for UpdateParametersExpression.UpdateKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA50F0);
  }
  return result;
}

unint64_t sub_23F705838()
{
  unint64_t result;

  result = qword_256EA50F8;
  if (!qword_256EA50F8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55484, &type metadata for UpdateParametersExpression.UpdateKind.ReplaceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA50F8);
  }
  return result;
}

unint64_t sub_23F705874()
{
  unint64_t result;

  result = qword_256EA5100;
  if (!qword_256EA5100)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55434, &type metadata for UpdateParametersExpression.UpdateKind.AppendCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA5100);
  }
  return result;
}

unint64_t sub_23F7058B0()
{
  unint64_t result;

  result = qword_256EA5128;
  if (!qword_256EA5128)
  {
    result = MEMORY[0x242674E5C](&unk_23FB553E4, &type metadata for UpdateParametersExpression.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA5128);
  }
  return result;
}

void sub_23F7058EC(uint64_t a1)
{
  if (!sub_23F6B6A68(a1))
  {
    sub_23F6AE310(&qword_256EA5130);
    sub_23F70DC4C();
    sub_23F70D730();
  }
  sub_23F6B647C();
}

unint64_t sub_23F705944()
{
  unint64_t result;

  result = qword_256EA5168;
  if (!qword_256EA5168)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55394, &type metadata for CallExpression.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA5168);
  }
  return result;
}

unint64_t sub_23F705980()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256EA5178;
  if (!qword_256EA5178)
  {
    v1 = sub_23F6AE310(&qword_256EA5170);
    sub_23F6B4EEC((uint64_t)&unk_256EA17A8);
    v3[0] = MEMORY[0x24BEE0D08];
    v3[1] = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256EA5178);
  }
  return result;
}

unint64_t sub_23F705A04()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256EA5188;
  if (!qword_256EA5188)
  {
    v1 = sub_23F6AE310(&qword_256EA5170);
    sub_23F6B4EEC((uint64_t)&unk_256EA1900);
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x242674E5C](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256EA5188);
  }
  return result;
}

unint64_t sub_23F705A88()
{
  unint64_t result;

  result = qword_256EA5198;
  if (!qword_256EA5198)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55344, &type metadata for SayExpression.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA5198);
  }
  return result;
}

unint64_t sub_23F705AC4()
{
  unint64_t result;

  result = qword_256EA51B0;
  if (!qword_256EA51B0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB552F4, &type metadata for PickExpression.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA51B0);
  }
  return result;
}

unint64_t sub_23F705B00()
{
  unint64_t result;

  result = qword_256EA51C8;
  if (!qword_256EA51C8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB552A4, &type metadata for ConfirmExpression.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA51C8);
  }
  return result;
}

unint64_t sub_23F705B3C()
{
  unint64_t result;

  result = qword_256EA51E0;
  if (!qword_256EA51E0)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55254, &type metadata for SearchExpression.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA51E0);
  }
  return result;
}

unint64_t sub_23F705B78()
{
  unint64_t result;

  result = qword_256EA51F8;
  if (!qword_256EA51F8)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55204, &type metadata for PickOneExpression.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA51F8);
  }
  return result;
}

unint64_t sub_23F705BB4()
{
  unint64_t result;

  result = qword_256EA5210;
  if (!qword_256EA5210)
  {
    result = MEMORY[0x242674E5C](&unk_23FB551B4, &type metadata for ResolveToolExpression.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA5210);
  }
  return result;
}

unint64_t sub_23F705BF0(uint64_t a1)
{
  unint64_t *v1;
  unint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_23F6B6A68(a1);
  if (!result)
  {
    v5 = v4;
    v6 = v3;
    v7 = sub_23F6AE310(&qword_256EA1918);
    v8 = v6;
    result = MEMORY[0x242674E5C](v5, v7, &v8);
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_23F705C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F6916B8(&qword_256EA49D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_23F705C94()
{
  unint64_t result;

  result = qword_256EA5228;
  if (!qword_256EA5228)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55164, &type metadata for UndoExpression.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA5228);
  }
  return result;
}

unint64_t sub_23F705CD0()
{
  unint64_t result;

  result = qword_256EA5240;
  if (!qword_256EA5240)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55114, &type metadata for RejectExpression.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA5240);
  }
  return result;
}

unint64_t sub_23F705D0C()
{
  unint64_t result;

  result = qword_256EA5258;
  if (!qword_256EA5258)
  {
    result = MEMORY[0x242674E5C](&unk_23FB550C4, &type metadata for CancelExpression.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA5258);
  }
  return result;
}

unint64_t sub_23F705D48()
{
  unint64_t result;

  result = qword_256EA5270;
  if (!qword_256EA5270)
  {
    result = MEMORY[0x242674E5C](&unk_23FB55074, &type metadata for OpenExpression.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256EA5270);
  }
  return result;
}

unint64_t sub_23F705D88()
{
  unint64_t result;

  result = qword_256EA5280;
  if (!qword_256EA5280)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for PrefixExpression.PrefixOp, &type metadata for PrefixExpression.PrefixOp);
    atomic_store(result, (unint64_t *)&qword_256EA5280);
  }
  return result;
}

unint64_t sub_23F705DC8()
{
  unint64_t result;

  result = qword_256EA5288;
  if (!qword_256EA5288)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for InfixExpression.InfixOp, &type metadata for InfixExpression.InfixOp);
    atomic_store(result, (unint64_t *)&qword_256EA5288);
  }
  return result;
}

unint64_t sub_23F705E08()
{
  unint64_t result;

  result = qword_256EA5290;
  if (!qword_256EA5290)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for UpdateParametersExpression.UpdateKind, &type metadata for UpdateParametersExpression.UpdateKind);
    atomic_store(result, (unint64_t *)&qword_256EA5290);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Expression(uint64_t *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t updated;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = *(_QWORD *)a2;
        v8 = *((_QWORD *)a2 + 1);
        v9 = a2[16];
        sub_23F6FEA38(v7, v8, v9);
        *a1 = v7;
        a1[1] = v8;
        *((_BYTE *)a1 + 16) = v9;
        goto LABEL_19;
      case 1u:
      case 0xAu:
      case 0xCu:
      case 0xFu:
      case 0x10u:
      case 0x11u:
        v37 = sub_23FB2C764();
        (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(a1, a2, v37);
        goto LABEL_19;
      case 2u:
        *(_BYTE *)a1 = *a2;
        v11 = *(int *)(type metadata accessor for PrefixExpression(0) + 20);
        v12 = (char *)a1 + v11;
        v13 = &a2[v11];
        v14 = sub_23FB2C764();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
        goto LABEL_19;
      case 3u:
        *(_BYTE *)a1 = *a2;
        v15 = type metadata accessor for InfixExpression(0);
        v16 = *(int *)(v15 + 20);
        v17 = (char *)a1 + v16;
        v18 = &a2[v16];
        v19 = sub_23FB2C764();
        v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
        v20(v17, v18, v19);
        v20((char *)a1 + *(int *)(v15 + 24), &a2[*(int *)(v15 + 24)], v19);
        goto LABEL_19;
      case 4u:
        v21 = sub_23FB2C764();
        (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(a1, a2, v21);
        v22 = *(int *)(type metadata accessor for DotExpression(0) + 20);
        v23 = (uint64_t *)((char *)a1 + v22);
        v24 = &a2[v22];
        v25 = *((_QWORD *)v24 + 1);
        *v23 = *(_QWORD *)v24;
        v23[1] = v25;
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 5u:
        v26 = sub_23FB2C764();
        v27 = *(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
        v27(a1, a2, v26);
        v28 = type metadata accessor for IndexExpression(0);
        v27((uint64_t *)((char *)a1 + *(int *)(v28 + 20)), &a2[*(int *)(v28 + 20)], v26);
        goto LABEL_19;
      case 6u:
        v29 = sub_23FB2C764();
        (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(a1, a2, v29);
        updated = type metadata accessor for UpdateParametersExpression(0);
        *(uint64_t *)((char *)a1 + *(int *)(updated + 20)) = *(_QWORD *)&a2[*(int *)(updated + 20)];
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 7u:
        v31 = *((_QWORD *)a2 + 1);
        *a1 = *(_QWORD *)a2;
        a1[1] = v31;
        a1[2] = *((_QWORD *)a2 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 8u:
      case 0xDu:
        *a1 = *(_QWORD *)a2;
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 9u:
        v32 = sub_23FB2C764();
        (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(a1, a2, v32);
        v33 = type metadata accessor for PickExpression(0);
        *(uint64_t *)((char *)a1 + *(int *)(v33 + 20)) = *(_QWORD *)&a2[*(int *)(v33 + 20)];
        goto LABEL_19;
      case 0xBu:
        v34 = *((_QWORD *)a2 + 1);
        *a1 = *(_QWORD *)a2;
        a1[1] = v34;
        *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 0xEu:
        v35 = sub_23FB2C764();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v35))
        {
          v36 = sub_23F6916B8(&qword_256EA49D8);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(a1, a2, v35);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v35);
        }
LABEL_19:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for Expression(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      return sub_23F6FEA10(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
    case 1:
    case 9:
    case 10:
    case 12:
    case 15:
    case 16:
    case 17:
      goto LABEL_2;
    case 2:
      a1 += *(int *)(type metadata accessor for PrefixExpression(0) + 20);
LABEL_2:
      v3 = sub_23FB2C764();
      v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v5 = a1;
      goto LABEL_3;
    case 3:
      v6 = type metadata accessor for InfixExpression(0);
      v7 = a1 + *(int *)(v6 + 20);
      v8 = sub_23FB2C764();
      v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
      v13(v7, v8);
      v5 = a1 + *(int *)(v6 + 24);
      v3 = v8;
      goto LABEL_9;
    case 4:
      v9 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
      type metadata accessor for DotExpression(0);
      goto LABEL_12;
    case 5:
      v10 = sub_23FB2C764();
      v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
      v13(a1, v10);
      v5 = a1 + *(int *)(type metadata accessor for IndexExpression(0) + 20);
      v3 = v10;
LABEL_9:
      v4 = (uint64_t (*)(uint64_t, uint64_t))v13;
      goto LABEL_3;
    case 6:
      v11 = sub_23FB2C764();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a1, v11);
      type metadata accessor for UpdateParametersExpression(0);
      goto LABEL_12;
    case 7:
      swift_bridgeObjectRelease();
      goto LABEL_12;
    case 8:
    case 11:
    case 13:
LABEL_12:
      result = swift_bridgeObjectRelease();
      break;
    case 14:
      v12 = sub_23FB2C764();
      result = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v12);
      if (!(_DWORD)result)
      {
        v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
        v5 = a1;
        v3 = v12;
LABEL_3:
        result = v4(v5, v3);
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *initializeWithCopy for Expression(uint64_t *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t updated;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = *(_QWORD *)a2;
      v7 = *((_QWORD *)a2 + 1);
      v8 = a2[16];
      sub_23F6FEA38(v6, v7, v8);
      *a1 = v6;
      a1[1] = v7;
      *((_BYTE *)a1 + 16) = v8;
      goto LABEL_17;
    case 1u:
    case 0xAu:
    case 0xCu:
    case 0xFu:
    case 0x10u:
    case 0x11u:
      v35 = sub_23FB2C764();
      (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(a1, a2, v35);
      goto LABEL_17;
    case 2u:
      *(_BYTE *)a1 = *a2;
      v9 = *(int *)(type metadata accessor for PrefixExpression(0) + 20);
      v10 = (char *)a1 + v9;
      v11 = &a2[v9];
      v12 = sub_23FB2C764();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      goto LABEL_17;
    case 3u:
      *(_BYTE *)a1 = *a2;
      v13 = type metadata accessor for InfixExpression(0);
      v14 = *(int *)(v13 + 20);
      v15 = (char *)a1 + v14;
      v16 = &a2[v14];
      v17 = sub_23FB2C764();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      v18(v15, v16, v17);
      v18((char *)a1 + *(int *)(v13 + 24), &a2[*(int *)(v13 + 24)], v17);
      goto LABEL_17;
    case 4u:
      v19 = sub_23FB2C764();
      (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a1, a2, v19);
      v20 = *(int *)(type metadata accessor for DotExpression(0) + 20);
      v21 = (uint64_t *)((char *)a1 + v20);
      v22 = &a2[v20];
      v23 = *((_QWORD *)v22 + 1);
      *v21 = *(_QWORD *)v22;
      v21[1] = v23;
      swift_bridgeObjectRetain();
      goto LABEL_17;
    case 5u:
      v24 = sub_23FB2C764();
      v25 = *(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
      v25(a1, a2, v24);
      v26 = type metadata accessor for IndexExpression(0);
      v25((uint64_t *)((char *)a1 + *(int *)(v26 + 20)), &a2[*(int *)(v26 + 20)], v24);
      goto LABEL_17;
    case 6u:
      v27 = sub_23FB2C764();
      (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(a1, a2, v27);
      updated = type metadata accessor for UpdateParametersExpression(0);
      *(uint64_t *)((char *)a1 + *(int *)(updated + 20)) = *(_QWORD *)&a2[*(int *)(updated + 20)];
      swift_bridgeObjectRetain();
      goto LABEL_17;
    case 7u:
      v29 = *((_QWORD *)a2 + 1);
      *a1 = *(_QWORD *)a2;
      a1[1] = v29;
      a1[2] = *((_QWORD *)a2 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_17;
    case 8u:
    case 0xDu:
      *a1 = *(_QWORD *)a2;
      swift_bridgeObjectRetain();
      goto LABEL_17;
    case 9u:
      v30 = sub_23FB2C764();
      (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(a1, a2, v30);
      v31 = type metadata accessor for PickExpression(0);
      *(uint64_t *)((char *)a1 + *(int *)(v31 + 20)) = *(_QWORD *)&a2[*(int *)(v31 + 20)];
      goto LABEL_17;
    case 0xBu:
      v32 = *((_QWORD *)a2 + 1);
      *a1 = *(_QWORD *)a2;
      a1[1] = v32;
      *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_17;
    case 0xEu:
      v33 = sub_23FB2C764();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v33))
      {
        v34 = sub_23F6916B8(&qword_256EA49D8);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(a1, a2, v33);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v33);
      }
LABEL_17:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t *assignWithCopy for Expression(uint64_t *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(uint64_t *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t updated;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  if (a1 != (uint64_t *)a2)
  {
    sub_23F6F8C88((uint64_t)a1, type metadata accessor for Expression);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = *(_QWORD *)a2;
        v7 = *((_QWORD *)a2 + 1);
        v8 = a2[16];
        sub_23F6FEA38(v6, v7, v8);
        *a1 = v6;
        a1[1] = v7;
        *((_BYTE *)a1 + 16) = v8;
        goto LABEL_18;
      case 1u:
      case 0xAu:
      case 0xCu:
      case 0xFu:
      case 0x10u:
      case 0x11u:
        v32 = sub_23FB2C764();
        (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(a1, a2, v32);
        goto LABEL_18;
      case 2u:
        *(_BYTE *)a1 = *a2;
        v9 = *(int *)(type metadata accessor for PrefixExpression(0) + 20);
        v10 = (char *)a1 + v9;
        v11 = &a2[v9];
        v12 = sub_23FB2C764();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
        goto LABEL_18;
      case 3u:
        *(_BYTE *)a1 = *a2;
        v13 = type metadata accessor for InfixExpression(0);
        v14 = *(int *)(v13 + 20);
        v15 = (char *)a1 + v14;
        v16 = &a2[v14];
        v17 = sub_23FB2C764();
        v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
        v18(v15, v16, v17);
        v18((char *)a1 + *(int *)(v13 + 24), &a2[*(int *)(v13 + 24)], v17);
        goto LABEL_18;
      case 4u:
        v19 = sub_23FB2C764();
        (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a1, a2, v19);
        v20 = *(int *)(type metadata accessor for DotExpression(0) + 20);
        v21 = (uint64_t *)((char *)a1 + v20);
        v22 = &a2[v20];
        *v21 = *(_QWORD *)v22;
        v21[1] = *((_QWORD *)v22 + 1);
        swift_bridgeObjectRetain();
        goto LABEL_18;
      case 5u:
        v23 = sub_23FB2C764();
        v24 = *(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
        v24(a1, a2, v23);
        v25 = type metadata accessor for IndexExpression(0);
        v24((uint64_t *)((char *)a1 + *(int *)(v25 + 20)), &a2[*(int *)(v25 + 20)], v23);
        goto LABEL_18;
      case 6u:
        v26 = sub_23FB2C764();
        (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(a1, a2, v26);
        updated = type metadata accessor for UpdateParametersExpression(0);
        *(uint64_t *)((char *)a1 + *(int *)(updated + 20)) = *(_QWORD *)&a2[*(int *)(updated + 20)];
        swift_bridgeObjectRetain();
        goto LABEL_18;
      case 7u:
        *a1 = *(_QWORD *)a2;
        a1[1] = *((_QWORD *)a2 + 1);
        a1[2] = *((_QWORD *)a2 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_18;
      case 8u:
      case 0xDu:
        *a1 = *(_QWORD *)a2;
        swift_bridgeObjectRetain();
        goto LABEL_18;
      case 9u:
        v28 = sub_23FB2C764();
        (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(a1, a2, v28);
        v29 = type metadata accessor for PickExpression(0);
        *(uint64_t *)((char *)a1 + *(int *)(v29 + 20)) = *(_QWORD *)&a2[*(int *)(v29 + 20)];
        goto LABEL_18;
      case 0xBu:
        *a1 = *(_QWORD *)a2;
        a1[1] = *((_QWORD *)a2 + 1);
        *((_BYTE *)a1 + 16) = a2[16];
        *((_BYTE *)a1 + 17) = a2[17];
        swift_bridgeObjectRetain();
        goto LABEL_18;
      case 0xEu:
        v30 = sub_23FB2C764();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v30))
        {
          v31 = sub_23F6916B8(&qword_256EA49D8);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(a1, a2, v30);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v30);
        }
LABEL_18:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_BYTE *initializeWithTake for Expression(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  void (*v16)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t updated;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 0xAu:
    case 0xCu:
    case 0xFu:
    case 0x10u:
    case 0x11u:
      v6 = sub_23FB2C764();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_13;
    case 2u:
      *a1 = *a2;
      v7 = *(int *)(type metadata accessor for PrefixExpression(0) + 20);
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = sub_23FB2C764();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      goto LABEL_13;
    case 3u:
      *a1 = *a2;
      v11 = type metadata accessor for InfixExpression(0);
      v12 = *(int *)(v11 + 20);
      v13 = &a1[v12];
      v14 = &a2[v12];
      v15 = sub_23FB2C764();
      v16 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
      v16(v13, v14, v15);
      v16(&a1[*(int *)(v11 + 24)], &a2[*(int *)(v11 + 24)], v15);
      goto LABEL_13;
    case 4u:
      v17 = sub_23FB2C764();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, a2, v17);
      v18 = type metadata accessor for DotExpression(0);
      *(_OWORD *)&a1[*(int *)(v18 + 20)] = *(_OWORD *)&a2[*(int *)(v18 + 20)];
      goto LABEL_13;
    case 5u:
      v19 = sub_23FB2C764();
      v20 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 32);
      v20(a1, a2, v19);
      v21 = type metadata accessor for IndexExpression(0);
      v20(&a1[*(int *)(v21 + 20)], &a2[*(int *)(v21 + 20)], v19);
      goto LABEL_13;
    case 6u:
      v22 = sub_23FB2C764();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a1, a2, v22);
      updated = type metadata accessor for UpdateParametersExpression(0);
      *(_QWORD *)&a1[*(int *)(updated + 20)] = *(_QWORD *)&a2[*(int *)(updated + 20)];
      goto LABEL_13;
    case 9u:
      v24 = sub_23FB2C764();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a1, a2, v24);
      v25 = type metadata accessor for PickExpression(0);
      *(_QWORD *)&a1[*(int *)(v25 + 20)] = *(_QWORD *)&a2[*(int *)(v25 + 20)];
      goto LABEL_13;
    case 0xEu:
      v26 = sub_23FB2C764();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v26))
      {
        v27 = sub_23F6916B8(&qword_256EA49D8);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(a1, a2, v26);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v26);
      }
LABEL_13:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_BYTE *assignWithTake for Expression(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  void (*v16)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t updated;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (a1 != a2)
  {
    sub_23F6F8C88((uint64_t)a1, type metadata accessor for Expression);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 0xAu:
      case 0xCu:
      case 0xFu:
      case 0x10u:
      case 0x11u:
        v6 = sub_23FB2C764();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        goto LABEL_14;
      case 2u:
        *a1 = *a2;
        v7 = *(int *)(type metadata accessor for PrefixExpression(0) + 20);
        v8 = &a1[v7];
        v9 = &a2[v7];
        v10 = sub_23FB2C764();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
        goto LABEL_14;
      case 3u:
        *a1 = *a2;
        v11 = type metadata accessor for InfixExpression(0);
        v12 = *(int *)(v11 + 20);
        v13 = &a1[v12];
        v14 = &a2[v12];
        v15 = sub_23FB2C764();
        v16 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
        v16(v13, v14, v15);
        v16(&a1[*(int *)(v11 + 24)], &a2[*(int *)(v11 + 24)], v15);
        goto LABEL_14;
      case 4u:
        v17 = sub_23FB2C764();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, a2, v17);
        v18 = type metadata accessor for DotExpression(0);
        *(_OWORD *)&a1[*(int *)(v18 + 20)] = *(_OWORD *)&a2[*(int *)(v18 + 20)];
        goto LABEL_14;
      case 5u:
        v19 = sub_23FB2C764();
        v20 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 32);
        v20(a1, a2, v19);
        v21 = type metadata accessor for IndexExpression(0);
        v20(&a1[*(int *)(v21 + 20)], &a2[*(int *)(v21 + 20)], v19);
        goto LABEL_14;
      case 6u:
        v22 = sub_23FB2C764();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a1, a2, v22);
        updated = type metadata accessor for UpdateParametersExpression(0);
        *(_QWORD *)&a1[*(int *)(updated + 20)] = *(_QWORD *)&a2[*(int *)(updated + 20)];
        goto LABEL_14;
      case 9u:
        v24 = sub_23FB2C764();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a1, a2, v24);
        v25 = type metadata accessor for PickExpression(0);
        *(_QWORD *)&a1[*(int *)(v25 + 20)] = *(_QWORD *)&a2[*(int *)(v25 + 20)];
        goto LABEL_14;
      case 0xEu:
        v26 = sub_23FB2C764();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v26))
        {
          v27 = sub_23F6916B8(&qword_256EA49D8);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(a1, a2, v26);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v26);
        }
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void sub_23F7076F4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_23FB2C764();
  if (v0 <= 0x3F)
  {
    type metadata accessor for PrefixExpression(319);
    if (v1 <= 0x3F)
    {
      type metadata accessor for InfixExpression(319);
      if (v2 <= 0x3F)
      {
        type metadata accessor for DotExpression(319);
        if (v3 <= 0x3F)
        {
          type metadata accessor for IndexExpression(319);
          if (v4 <= 0x3F)
          {
            type metadata accessor for UpdateParametersExpression(319);
            if (v5 <= 0x3F)
            {
              type metadata accessor for PickExpression(319);
              if (v6 <= 0x3F)
              {
                sub_23F70785C();
                if (v7 <= 0x3F)
                  swift_initEnumMetadataMultiPayload();
              }
            }
          }
        }
      }
    }
  }
}

void sub_23F70785C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256EA5318[0])
  {
    sub_23FB2C764();
    v0 = sub_23FB2F65C();
    if (!v1)
      atomic_store(v0, qword_256EA5318);
  }
}

uint64_t destroy for ValueExpression(uint64_t a1)
{
  return sub_23F6FEA10(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void _s30IntelligenceFlowPlannerSupport15ValueExpressionOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23F6FEA38(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_23F694C84();
}

uint64_t assignWithCopy for ValueExpression(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23F6FEA38(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_23F6FEA10(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ValueExpression(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_23F6FEA10(v4, v5, v6);
  return a1;
}

void type metadata accessor for ValueExpression()
{
  sub_23F694C70();
}

uint64_t *initializeBufferWithCopyOfBuffer for PrefixExpression(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_23FB2C764();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for PrefixExpression(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_23FB2C764();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_BYTE *initializeWithCopy for PrefixExpression(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_23FB2C764();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_BYTE *assignWithCopy for PrefixExpression(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_23FB2C764();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_BYTE *initializeWithTake for PrefixExpression(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_23FB2C764();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_BYTE *assignWithTake for PrefixExpression(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_23FB2C764();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for PrefixExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F707BE4(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 == 253)
  {
    sub_23F694C84();
  }
  else
  {
    sub_23F6B58C8();
    v2 = sub_23F70DAD8();
    sub_23F6F07D0(v2, v3, v4);
  }
}

uint64_t storeEnumTagSinglePayload for PrefixExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F707C3C()
{
  char v0;
  _BYTE *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6B6B7C();
  if (v2 == 253)
  {
    *v1 = v0 + 2;
    sub_23F694C84();
  }
  else
  {
    sub_23F6B58C8();
    v3 = sub_23F70D8A0();
    sub_23F6F07C4(v3, v4, v5, v6);
  }
}

uint64_t sub_23F707C7C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FB2C764();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for PrefixExpression.PrefixOp()
{
  sub_23F694C70();
}

char *initializeBufferWithCopyOfBuffer for InfixExpression(char *a1, char *a2, uint64_t a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = (char *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(a3 + 20);
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = sub_23FB2C764();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v11(&v4[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v10);
  }
  return v4;
}

uint64_t destroy for InfixExpression(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t);

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23FB2C764();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v7(v4, v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + *(int *)(a2 + 24), v5);
}

_BYTE *initializeWithCopy for InfixExpression(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  void (*v10)(_BYTE *, _BYTE *, uint64_t);

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23FB2C764();
  v10 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  return a1;
}

_BYTE *assignWithCopy for InfixExpression(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  void (*v10)(_BYTE *, _BYTE *, uint64_t);

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23FB2C764();
  v10 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  return a1;
}

_BYTE *initializeWithTake for InfixExpression(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  void (*v10)(_BYTE *, _BYTE *, uint64_t);

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23FB2C764();
  v10 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  return a1;
}

_BYTE *assignWithTake for InfixExpression(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  void (*v10)(_BYTE *, _BYTE *, uint64_t);

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23FB2C764();
  v10 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for InfixExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F708064(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 == 237)
  {
    sub_23F694C84();
  }
  else
  {
    sub_23F6B58C8();
    v2 = sub_23F70DAD8();
    sub_23F6F07D0(v2, v3, v4);
  }
}

uint64_t storeEnumTagSinglePayload for InfixExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F7080BC()
{
  char v0;
  _BYTE *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6B6B7C();
  if (v2 == 237)
  {
    *v1 = v0 + 18;
    sub_23F694C84();
  }
  else
  {
    sub_23F6B58C8();
    v3 = sub_23F70D8A0();
    sub_23F6F07C4(v3, v4, v5, v6);
  }
}

uint64_t sub_23F7080FC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FB2C764();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for InfixExpression.InfixOp()
{
  sub_23F694C70();
}

uint64_t *initializeBufferWithCopyOfBuffer for DotExpression(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FB2C764();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for DotExpression(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DotExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DotExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for DotExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for DotExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DotExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F708414(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F6B58C8();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    sub_23F6F07D0(a1, a2, v6);
  }
  else
  {
    sub_23F6F083C(*(_QWORD *)(a1 + *(int *)(a3 + 20) + 8));
    sub_23F694C84();
  }
}

uint64_t storeEnumTagSinglePayload for DotExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F70847C(uint64_t a1, int a2, int a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (*(_DWORD *)(*(_QWORD *)(sub_23F6B58C8() - 8) + 84) == a3)
  {
    v7 = sub_23F70D578();
    sub_23F6F07C4(v7, v8, v9, v10);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
    sub_23F694C84();
  }
}

void sub_23F7084D4()
{
  sub_23F709120();
}

uint64_t *initializeBufferWithCopyOfBuffer for IndexExpression(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FB2C764();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t destroy for IndexExpression(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_23FB2C764();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 20), v4);
}

uint64_t initializeWithCopy for IndexExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23FB2C764();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithCopy for IndexExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23FB2C764();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t initializeWithTake for IndexExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23FB2C764();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithTake for IndexExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23FB2C764();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for IndexExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F7087B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6B58C8();
  v0 = sub_23F70D890();
  return sub_23F70D620(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for IndexExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F7087E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F6B58C8();
  v0 = sub_23F70D578();
  return sub_23F70D618(v0, v1, v2, v3);
}

uint64_t sub_23F708804()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FB2C764();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for UpdateParametersExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F70887C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F6B58C8();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    sub_23F6F07D0(a1, a2, v6);
  }
  else
  {
    sub_23F6F083C(*(_QWORD *)(a1 + *(int *)(a3 + 20)));
    sub_23F694C84();
  }
}

uint64_t storeEnumTagSinglePayload for UpdateParametersExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F7088E0(uint64_t a1, int a2, int a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (*(_DWORD *)(*(_QWORD *)(sub_23F6B58C8() - 8) + 84) == a3)
  {
    v7 = sub_23F70D578();
    sub_23F6F07C4(v7, v8, v9, v10);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
    sub_23F694C84();
  }
}

void sub_23F708934()
{
  sub_23F709120();
}

_QWORD *initializeBufferWithCopyOfBuffer for UpdateParametersExpression.UpdateParameter(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v6 = *(int *)(a3 + 28);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    *(_BYTE *)(a1 + 25) = *((_BYTE *)a2 + 25);
    v9 = sub_23FB2C764();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for UpdateParametersExpression.UpdateParameter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_23FB2C764();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for UpdateParametersExpression.UpdateParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  v5 = *(int *)(a3 + 28);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_23FB2C764();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for UpdateParametersExpression.UpdateParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  v7 = *(int *)(a3 + 28);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for UpdateParametersExpression.UpdateParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for UpdateParametersExpression.UpdateParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  v7 = *(int *)(a3 + 28);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for UpdateParametersExpression.UpdateParameter()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F708C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_23F6F083C(*(_QWORD *)(a1 + 8));
    sub_23F694C84();
  }
  else
  {
    v6 = sub_23F6B58C8();
    sub_23F6F07D0(a1 + *(int *)(a3 + 28), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for UpdateParametersExpression.UpdateParameter()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F708CC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6B6B7C();
  if (v3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(v1 + 8) = (v0 - 1);
    sub_23F694C84();
  }
  else
  {
    v4 = v2;
    v5 = sub_23F6B58C8();
    sub_23F6F07C4(v1 + *(int *)(v4 + 28), v0, v0, v5);
  }
}

uint64_t sub_23F708D14()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FB2C764();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for UpdateParametersExpression.UpdateKind()
{
  sub_23F694C70();
}

uint64_t destroy for CallExpression()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void _s30IntelligenceFlowPlannerSupport14CallExpressionVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  sub_23F6B54F8();
  sub_23F694CC8();
}

_QWORD *assignWithCopy for CallExpression(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CallExpression(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for CallExpression()
{
  sub_23F694C70();
}

void type metadata accessor for SayExpression()
{
  sub_23F694C70();
}

uint64_t *initializeBufferWithCopyOfBuffer for PickExpression(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FB2C764();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t initializeWithCopy for PickExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for PickExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

void _s30IntelligenceFlowPlannerSupport26UpdateParametersExpressionVwtk_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t);

  sub_23F6B58C8();
  sub_23F70D880();
  v6 = sub_23F70DC34();
  v7(v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  sub_23F694C84();
}

uint64_t assignWithTake for PickExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23FB2C764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for PickExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F7090BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6B58C8();
  v0 = sub_23F70D890();
  return sub_23F70D620(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for PickExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F7090EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F6B58C8();
  v0 = sub_23F70D578();
  return sub_23F70D618(v0, v1, v2, v3);
}

void sub_23F709110()
{
  sub_23F709120();
}

void sub_23F709120()
{
  unint64_t v0;

  sub_23FB2C764();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
  sub_23F6F5A08();
}

uint64_t getEnumTagSinglePayload for ConfirmExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ConfirmExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F7091B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F7097EC(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BE52140]);
}

void type metadata accessor for SearchExpression()
{
  sub_23F694C70();
}

uint64_t getEnumTagSinglePayload for PickOneExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PickOneExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void type metadata accessor for ResolveToolExpression()
{
  sub_23F694C70();
}

uint64_t *initializeBufferWithCopyOfBuffer for UndoExpression(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(sub_23F6916B8(&qword_256EA49D8) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_23FB2C764();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
    {
      memcpy(a1, a2, *(_QWORD *)(v4 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
    }
  }
  return a1;
}

uint64_t destroy for UndoExpression(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23FB2C764();
  result = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return result;
}

void *initializeWithCopy for UndoExpression(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_23FB2C764();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v4))
  {
    v5 = sub_23F6916B8(&qword_256EA49D8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v4);
  }
  return a1;
}

void *assignWithCopy for UndoExpression(void *a1, const void *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_23FB2C764();
  v5 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v4);
  v6 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v4);
  if (!v5)
  {
    v7 = *(_QWORD *)(v4 - 8);
    if (!v6)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 24))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    v8 = sub_23F6916B8(&qword_256EA49D8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v4);
  return a1;
}

void *initializeWithTake for UndoExpression(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_23FB2C764();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v4))
  {
    v5 = sub_23F6916B8(&qword_256EA49D8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v4);
  }
  return a1;
}

void *assignWithTake for UndoExpression(void *a1, const void *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_23FB2C764();
  v5 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v4);
  v6 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v4);
  if (!v5)
  {
    v7 = *(_QWORD *)(v4 - 8);
    if (!v6)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 40))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    v8 = sub_23F6916B8(&qword_256EA49D8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for UndoExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F709614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6B6B7C();
  sub_23F6916B8(&qword_256EA49D8);
  v0 = sub_23F70D890();
  return sub_23F70D620(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for UndoExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F709648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F6B6B7C();
  sub_23F6916B8(&qword_256EA49D8);
  v0 = sub_23F70D578();
  return sub_23F70D618(v0, v1, v2, v3);
}

void sub_23F709670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F7097EC(a1, a2, a3, (void (*)(uint64_t))sub_23F70785C);
}

uint64_t getEnumTagSinglePayload for RejectExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for RejectExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for CancelExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for CancelExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t _s30IntelligenceFlowPlannerSupport17ConfirmExpressionVwCP_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F6B58C8();
  v0 = sub_23F6B6190();
  return sub_23F6B64B0(v0, v1, v2, v3);
}

uint64_t _s30IntelligenceFlowPlannerSupport14PickExpressionVwxx_0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F6B58C8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

void _s30IntelligenceFlowPlannerSupport17ConfirmExpressionVwcp_0()
{
  uint64_t v0;

  v0 = sub_23F6B58C8();
  sub_23F70D66C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16));
  sub_23F694CC8();
}

void _s30IntelligenceFlowPlannerSupport17ConfirmExpressionVwca_0()
{
  uint64_t v0;

  v0 = sub_23F6B58C8();
  sub_23F70D66C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 24));
  sub_23F694CC8();
}

void _s30IntelligenceFlowPlannerSupport17ConfirmExpressionVwtk_0()
{
  uint64_t (*v0)(uint64_t, uint64_t);

  sub_23F6B58C8();
  sub_23F70D880();
  sub_23F70D66C(v0);
  sub_23F694CC8();
}

void _s30IntelligenceFlowPlannerSupport17ConfirmExpressionVwta_0()
{
  uint64_t v0;

  v0 = sub_23F6B58C8();
  sub_23F70D66C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 40));
  sub_23F694CC8();
}

uint64_t getEnumTagSinglePayload for OpenExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for OpenExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F7097EC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  unint64_t v4;

  a4(319);
  if (v4 <= 0x3F)
    swift_initStructMetadata();
  sub_23F6F5A08();
}

ValueMetadata *type metadata accessor for OpenExpression.CodingKeys()
{
  return &type metadata for OpenExpression.CodingKeys;
}

ValueMetadata *type metadata accessor for CancelExpression.CodingKeys()
{
  return &type metadata for CancelExpression.CodingKeys;
}

ValueMetadata *type metadata accessor for RejectExpression.CodingKeys()
{
  return &type metadata for RejectExpression.CodingKeys;
}

ValueMetadata *type metadata accessor for UndoExpression.CodingKeys()
{
  return &type metadata for UndoExpression.CodingKeys;
}

ValueMetadata *type metadata accessor for ResolveToolExpression.CodingKeys()
{
  return &type metadata for ResolveToolExpression.CodingKeys;
}

ValueMetadata *type metadata accessor for PickOneExpression.CodingKeys()
{
  return &type metadata for PickOneExpression.CodingKeys;
}

ValueMetadata *type metadata accessor for SearchExpression.CodingKeys()
{
  return &type metadata for SearchExpression.CodingKeys;
}

ValueMetadata *type metadata accessor for ConfirmExpression.CodingKeys()
{
  return &type metadata for ConfirmExpression.CodingKeys;
}

ValueMetadata *type metadata accessor for PickExpression.CodingKeys()
{
  return &type metadata for PickExpression.CodingKeys;
}

ValueMetadata *type metadata accessor for SayExpression.CodingKeys()
{
  return &type metadata for SayExpression.CodingKeys;
}

ValueMetadata *type metadata accessor for CallExpression.CodingKeys()
{
  return &type metadata for CallExpression.CodingKeys;
}

ValueMetadata *type metadata accessor for UpdateParametersExpression.CodingKeys()
{
  return &type metadata for UpdateParametersExpression.CodingKeys;
}

ValueMetadata *type metadata accessor for UpdateParametersExpression.UpdateKind.CodingKeys()
{
  return &type metadata for UpdateParametersExpression.UpdateKind.CodingKeys;
}

ValueMetadata *type metadata accessor for UpdateParametersExpression.UpdateKind.AppendCodingKeys()
{
  return &type metadata for UpdateParametersExpression.UpdateKind.AppendCodingKeys;
}

ValueMetadata *type metadata accessor for UpdateParametersExpression.UpdateKind.ReplaceCodingKeys()
{
  return &type metadata for UpdateParametersExpression.UpdateKind.ReplaceCodingKeys;
}

uint64_t getEnumTagSinglePayload for UpdateParametersExpression.UpdateParameter.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 3) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v5 = v6 - 4;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for UpdateParametersExpression.UpdateParameter.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23F709A18 + 4 * byte_23FB511C1[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23F709A4C + 4 * byte_23FB511BC[v4]))();
}

uint64_t sub_23F709A4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F709A54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F709A5CLL);
  return result;
}

uint64_t sub_23F709A68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F709A70);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23F709A74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F709A7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UpdateParametersExpression.UpdateParameter.CodingKeys()
{
  return &type metadata for UpdateParametersExpression.UpdateParameter.CodingKeys;
}

ValueMetadata *type metadata accessor for IndexExpression.CodingKeys()
{
  return &type metadata for IndexExpression.CodingKeys;
}

ValueMetadata *type metadata accessor for DotExpression.CodingKeys()
{
  return &type metadata for DotExpression.CodingKeys;
}

ValueMetadata *type metadata accessor for InfixExpression.CodingKeys()
{
  return &type metadata for InfixExpression.CodingKeys;
}

uint64_t _s30IntelligenceFlowPlannerSupport15InfixExpressionV7InfixOpOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 18 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 18) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xED)
    return ((uint64_t (*)(void))((char *)&loc_23F709B14 + 4 * byte_23FB511CB[v4]))();
  *a1 = a2 + 18;
  return ((uint64_t (*)(void))((char *)sub_23F709B48 + 4 * byte_23FB511C6[v4]))();
}

uint64_t sub_23F709B4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F709B54);
  return result;
}

