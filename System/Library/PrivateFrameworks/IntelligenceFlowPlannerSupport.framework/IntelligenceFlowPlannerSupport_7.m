void _s30IntelligenceFlowPlannerSupport32TranscriptProtoConfirmExpressionVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = type metadata accessor for TranscriptProtoStatementID(0);
  v5 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4);
  v6 = sub_23FAC2B44(a2);
  if (!v5)
  {
    if (!(_DWORD)v6)
    {
      sub_23FAC36F4();
      v11 = sub_23F6B53A4();
      sub_23FAC2D68(v11);
      goto LABEL_7;
    }
    sub_23FAC2BE4(v6, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if ((_DWORD)v6)
  {
LABEL_6:
    v9 = sub_23F6916B8(&qword_256EA25E0);
    sub_23FAC2B80(*(_QWORD *)(v9 - 8));
    goto LABEL_7;
  }
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v7 = a1 + *(int *)(v4 + 24);
  v8 = sub_23F6B53A4();
  sub_23F6B563C(v7, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32));
  sub_23F6BC4AC(a1);
LABEL_7:
  v10 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40));
  sub_23F6B5F7C();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoOpenExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA927C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EA25E0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoOpenExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA927D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EA25E0);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTProgram()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTProgram()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTStmt(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *a2;
    if ((~*a2 & 0xF000000000000007) != 0)
      swift_retain();
    *a1 = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoASTStmt(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  if ((~*a1 & 0xF000000000000007) != 0)
    swift_release();
  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = sub_23FB2D718();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for TranscriptProtoASTStmt(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = *a2;
  if ((~*a2 & 0xF000000000000007) != 0)
    swift_retain();
  *a1 = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoASTStmt(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = *a2;
  v7 = *a2 & 0xF000000000000007;
  if ((~*a1 & 0xF000000000000007) != 0)
  {
    if (v7 != 0xF000000000000007)
    {
      *a1 = v6;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    sub_23FA92A38((uint64_t)a1);
    v6 = *a2;
    goto LABEL_6;
  }
  if (v7 == 0xF000000000000007)
  {
LABEL_6:
    *a1 = v6;
    goto LABEL_8;
  }
  *a1 = v6;
  swift_retain();
LABEL_8:
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

uint64_t sub_23FA92A38(uint64_t a1)
{
  _s4StmtOwxx();
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoASTStmt(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = *a2;
  if ((~*a1 & 0xF000000000000007) != 0)
  {
    if ((~v6 & 0xF000000000000007) != 0)
    {
      *a1 = v6;
      swift_release();
      goto LABEL_6;
    }
    sub_23FA92A38((uint64_t)a1);
  }
  *a1 = v6;
LABEL_6:
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTStmt()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA92B04(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a2 == 124)
  {
    sub_23F694C84();
  }
  else
  {
    sub_23F6B53A4();
    v4 = sub_23F6F08CC(*(int *)(a3 + 20));
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTStmt()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA92B78(unint64_t *a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a3 == 124)
  {
    v3 = (~a2 >> 2) & 0x1F | (32 * (~a2 & 0x7F));
    *a1 = (v3 | (v3 << 57)) & 0xF000000000000007;
    sub_23F694C84();
  }
  else
  {
    sub_23F6B53A4();
    v4 = sub_23FAC3540();
    sub_23F6F07C4(v4, v5, v6, v7);
  }
}

void sub_23FA92BCC()
{
  sub_23FABE678();
}

void type metadata accessor for TranscriptProtoAststmtEnum()
{
  sub_23F694C70();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTIfStmt(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoASTExpr(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EA25A0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v10 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        swift_retain();
      *a1 = v10;
      v11 = *(int *)(v7 + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v15 = a3[5];
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v18))
    {
      v19 = sub_23F6916B8(&qword_256EA84F8);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      *v16 = *v17;
      v20 = *(int *)(v18 + 20);
      v21 = (char *)v16 + v20;
      v22 = (char *)v17 + v20;
      v23 = sub_23FB2D718();
      v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
      swift_bridgeObjectRetain();
      v24(v21, v22, v23);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v18);
    }
    v25 = a3[6];
    v26 = (uint64_t *)((char *)a1 + v25);
    v27 = (uint64_t *)((char *)a2 + v25);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v25, 1, v18))
    {
      v28 = sub_23F6916B8(&qword_256EA84F8);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      *v26 = *v27;
      v29 = *(int *)(v18 + 20);
      v30 = (char *)v26 + v29;
      v31 = (char *)v27 + v29;
      v32 = sub_23FB2D718();
      v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
      swift_bridgeObjectRetain();
      v33(v30, v31, v32);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v26, 0, 1, v18);
    }
    v34 = a3[7];
    v35 = (char *)a1 + v34;
    v36 = (char *)a2 + v34;
    v37 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoASTIfStmt(_QWORD *a1, int *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  v4 = type metadata accessor for TranscriptProtoASTExpr(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v4))
  {
    if ((~*a1 & 0xF000000000000007) != 0)
      swift_release();
    v5 = (char *)a1 + *(int *)(v4 + 20);
    v6 = sub_23FB2D718();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = (uint64_t)a1 + a2[5];
  v8 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    v9 = v7 + *(int *)(v8 + 20);
    v10 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  v11 = (uint64_t)a1 + a2[6];
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v11, 1, v8))
  {
    swift_bridgeObjectRelease();
    v12 = v11 + *(int *)(v8 + 20);
    v13 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  v14 = (char *)a1 + a2[7];
  v15 = sub_23FB2D718();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
}

_QWORD *initializeWithCopy for TranscriptProtoASTIfStmt(_QWORD *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;

  v6 = type metadata accessor for TranscriptProtoASTExpr(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA25A0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = *a2;
    if ((~*a2 & 0xF000000000000007) != 0)
      swift_retain();
    *a1 = v8;
    v9 = *(int *)(v6 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v13 = a3[5];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (uint64_t *)((char *)a2 + v13);
  v16 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, v16))
  {
    v17 = sub_23F6916B8(&qword_256EA84F8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v14 = *v15;
    v18 = *(int *)(v16 + 20);
    v19 = (char *)v14 + v18;
    v20 = (char *)v15 + v18;
    v21 = sub_23FB2D718();
    v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
    swift_bridgeObjectRetain();
    v22(v19, v20, v21);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v14, 0, 1, v16);
  }
  v23 = a3[6];
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (uint64_t *)((char *)a2 + v23);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v23, 1, v16))
  {
    v26 = sub_23F6916B8(&qword_256EA84F8);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    *v24 = *v25;
    v27 = *(int *)(v16 + 20);
    v28 = (char *)v24 + v27;
    v29 = (char *)v25 + v27;
    v30 = sub_23FB2D718();
    v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
    swift_bridgeObjectRetain();
    v31(v28, v29, v30);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v16);
  }
  v32 = a3[7];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoASTIfStmt(_QWORD *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  int v30;
  int v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;

  v6 = type metadata accessor for TranscriptProtoASTExpr(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoASTExpr);
      goto LABEL_8;
    }
    v43 = *a2;
    v44 = *a2 & 0xF000000000000007;
    if ((~*a1 & 0xF000000000000007) != 0)
    {
      if (v44 != 0xF000000000000007)
      {
        *a1 = v43;
        swift_retain();
        swift_release();
        goto LABEL_31;
      }
      sub_23FA93604((uint64_t)a1);
      v43 = *a2;
    }
    else if (v44 != 0xF000000000000007)
    {
      *a1 = v43;
      swift_retain();
LABEL_31:
      v53 = *(int *)(v6 + 20);
      v54 = (char *)a1 + v53;
      v55 = (char *)a2 + v53;
      v56 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 24))(v54, v55, v56);
      goto LABEL_9;
    }
    *a1 = v43;
    goto LABEL_31;
  }
  if (v8)
  {
LABEL_8:
    v14 = sub_23F6916B8(&qword_256EA25A0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_9;
  }
  v9 = *a2;
  if ((~*a2 & 0xF000000000000007) != 0)
    swift_retain();
  *a1 = v9;
  v10 = *(int *)(v6 + 20);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_9:
  v15 = a3[5];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (uint64_t *)((char *)a2 + v15);
  v18 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
  v19 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, v18);
  v20 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v18);
  if (v19)
  {
    if (!v20)
    {
      *v16 = *v17;
      v21 = *(int *)(v18 + 20);
      v22 = (char *)v16 + v21;
      v23 = (char *)v17 + v21;
      v24 = sub_23FB2D718();
      v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
      swift_bridgeObjectRetain();
      v25(v22, v23, v24);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v18);
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  if (v20)
  {
    sub_23F93DADC((uint64_t)v16, type metadata accessor for TranscriptProtoASTBlockStmt);
LABEL_14:
    v26 = sub_23F6916B8(&qword_256EA84F8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_15;
  }
  *v16 = *v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v45 = *(int *)(v18 + 20);
  v46 = (char *)v16 + v45;
  v47 = (char *)v17 + v45;
  v48 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 24))(v46, v47, v48);
LABEL_15:
  v27 = a3[6];
  v28 = (_QWORD *)((char *)a1 + v27);
  v29 = (uint64_t *)((char *)a2 + v27);
  v30 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1 + v27, 1, v18);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v29, 1, v18);
  if (!v30)
  {
    if (!v31)
    {
      *v28 = *v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v49 = *(int *)(v18 + 20);
      v50 = (char *)v28 + v49;
      v51 = (char *)v29 + v49;
      v52 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 24))(v50, v51, v52);
      goto LABEL_21;
    }
    sub_23F93DADC((uint64_t)v28, type metadata accessor for TranscriptProtoASTBlockStmt);
    goto LABEL_20;
  }
  if (v31)
  {
LABEL_20:
    v37 = sub_23F6916B8(&qword_256EA84F8);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_21;
  }
  *v28 = *v29;
  v32 = *(int *)(v18 + 20);
  v33 = (char *)v28 + v32;
  v34 = (char *)v29 + v32;
  v35 = sub_23FB2D718();
  v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
  swift_bridgeObjectRetain();
  v36(v33, v34, v35);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v28, 0, 1, v18);
LABEL_21:
  v38 = a3[7];
  v39 = (char *)a1 + v38;
  v40 = (char *)a2 + v38;
  v41 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 24))(v39, v40, v41);
  return a1;
}

uint64_t sub_23FA93604(uint64_t a1)
{
  destroy for TranscriptProtoAstexprEnum();
  return a1;
}

_QWORD *initializeWithTake for TranscriptProtoASTIfStmt(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  v6 = type metadata accessor for TranscriptProtoASTExpr(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA25A0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v8 = *(int *)(v6 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v12 = a3[5];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v15))
  {
    v16 = sub_23F6916B8(&qword_256EA84F8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v13 = *v14;
    v17 = *(int *)(v15 + 20);
    v18 = (char *)v13 + v17;
    v19 = (char *)v14 + v17;
    v20 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v13, 0, 1, v15);
  }
  v21 = a3[6];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v21, 1, v15))
  {
    v24 = sub_23F6916B8(&qword_256EA84F8);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    *v22 = *v23;
    v25 = *(int *)(v15 + 20);
    v26 = (char *)v22 + v25;
    v27 = (char *)v23 + v25;
    v28 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v22, 0, 1, v15);
  }
  v29 = a3[7];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoASTIfStmt(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  int v28;
  int v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;

  v6 = type metadata accessor for TranscriptProtoASTExpr(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *a1 = *a2;
      v9 = *(int *)(v6 + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoASTExpr);
LABEL_6:
    v13 = sub_23F6916B8(&qword_256EA25A0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  v40 = *a2;
  if ((~*a1 & 0xF000000000000007) != 0)
  {
    if ((~v40 & 0xF000000000000007) != 0)
    {
      *a1 = v40;
      swift_release();
    }
    else
    {
      sub_23FA93604((uint64_t)a1);
      *a1 = *a2;
    }
  }
  else
  {
    *a1 = v40;
  }
  v49 = *(int *)(v6 + 20);
  v50 = (char *)a1 + v49;
  v51 = (char *)a2 + v49;
  v52 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 40))(v50, v51, v52);
LABEL_7:
  v14 = a3[5];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
  v18 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, v17);
  v19 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, v17);
  if (v18)
  {
    if (!v19)
    {
      *v15 = *v16;
      v20 = *(int *)(v17 + 20);
      v21 = (char *)v15 + v20;
      v22 = (char *)v16 + v20;
      v23 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v15, 0, 1, v17);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    sub_23F93DADC((uint64_t)v15, type metadata accessor for TranscriptProtoASTBlockStmt);
LABEL_12:
    v24 = sub_23F6916B8(&qword_256EA84F8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  *v15 = *v16;
  swift_bridgeObjectRelease();
  v41 = *(int *)(v17 + 20);
  v42 = (char *)v15 + v41;
  v43 = (char *)v16 + v41;
  v44 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 40))(v42, v43, v44);
LABEL_13:
  v25 = a3[6];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  v28 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1 + v25, 1, v17);
  v29 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v27, 1, v17);
  if (!v28)
  {
    if (!v29)
    {
      *v26 = *v27;
      swift_bridgeObjectRelease();
      v45 = *(int *)(v17 + 20);
      v46 = (char *)v26 + v45;
      v47 = (char *)v27 + v45;
      v48 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 40))(v46, v47, v48);
      goto LABEL_19;
    }
    sub_23F93DADC((uint64_t)v26, type metadata accessor for TranscriptProtoASTBlockStmt);
    goto LABEL_18;
  }
  if (v29)
  {
LABEL_18:
    v34 = sub_23F6916B8(&qword_256EA84F8);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_19;
  }
  *v26 = *v27;
  v30 = *(int *)(v17 + 20);
  v31 = (char *)v26 + v30;
  v32 = (char *)v27 + v30;
  v33 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v26, 0, 1, v17);
LABEL_19:
  v35 = a3[7];
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  v38 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTIfStmt()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA93BF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABBB14(a1, a2, a3, &qword_256EA25A0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTIfStmt()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA93C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABBB88(a1, a2, a3, a4, &qword_256EA25A0);
}

void sub_23FA93C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABBC04(a1, a2, a3, &qword_256EBC2E0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTExpr);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTForInStmt(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for TranscriptProtoASTExpr(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA25A0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v14 = *v10;
      if ((~*v10 & 0xF000000000000007) != 0)
        swift_retain();
      *v9 = v14;
      v15 = *(int *)(v11 + 20);
      v16 = (char *)v9 + v15;
      v17 = (char *)v10 + v15;
      v18 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v19 = a3[6];
    v20 = (uint64_t *)((char *)v4 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v22 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v21, 1, v22))
    {
      v23 = sub_23F6916B8(&qword_256EA84F8);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      *v20 = *v21;
      v24 = *(int *)(v22 + 20);
      v25 = (char *)v20 + v24;
      v26 = (char *)v21 + v24;
      v27 = sub_23FB2D718();
      v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
      swift_bridgeObjectRetain();
      v28(v25, v26, v27);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v20, 0, 1, v22);
    }
    v29 = a3[7];
    v30 = (char *)v4 + v29;
    v31 = (char *)a2 + v29;
    v32 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoASTForInStmt(uint64_t a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRelease();
  v4 = (_QWORD *)(a1 + a2[5]);
  v5 = type metadata accessor for TranscriptProtoASTExpr(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5))
  {
    if ((~*v4 & 0xF000000000000007) != 0)
      swift_release();
    v6 = (char *)v4 + *(int *)(v5 + 20);
    v7 = sub_23FB2D718();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + a2[6];
  v9 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    v10 = v8 + *(int *)(v9 + 20);
    v11 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = a1 + a2[7];
  v13 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
}

_QWORD *initializeWithCopy for TranscriptProtoASTForInStmt(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for TranscriptProtoASTExpr(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F6916B8(&qword_256EA25A0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = *v9;
    if ((~*v9 & 0xF000000000000007) != 0)
      swift_retain();
    *v8 = v12;
    v13 = *(int *)(v10 + 20);
    v14 = (char *)v8 + v13;
    v15 = (char *)v9 + v13;
    v16 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v17 = a3[6];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, v20))
  {
    v21 = sub_23F6916B8(&qword_256EA84F8);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    *v18 = *v19;
    v22 = *(int *)(v20 + 20);
    v23 = (char *)v18 + v22;
    v24 = (char *)v19 + v22;
    v25 = sub_23FB2D718();
    v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
    swift_bridgeObjectRetain();
    v26(v23, v24, v25);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v18, 0, 1, v20);
  }
  v27 = a3[7];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoASTForInStmt(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoASTExpr(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (v11)
    {
      sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoASTExpr);
      goto LABEL_8;
    }
    v35 = *v8;
    v36 = *v8 & 0xF000000000000007;
    if ((~*v7 & 0xF000000000000007) != 0)
    {
      if (v36 != 0xF000000000000007)
      {
        *v7 = v35;
        swift_retain();
        swift_release();
        goto LABEL_24;
      }
      sub_23FA93604((uint64_t)v7);
      v35 = *v8;
    }
    else if (v36 != 0xF000000000000007)
    {
      *v7 = v35;
      swift_retain();
LABEL_24:
      v41 = *(int *)(v9 + 20);
      v42 = (char *)v7 + v41;
      v43 = (char *)v8 + v41;
      v44 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 24))(v42, v43, v44);
      goto LABEL_9;
    }
    *v7 = v35;
    goto LABEL_24;
  }
  if (v11)
  {
LABEL_8:
    v17 = sub_23F6916B8(&qword_256EA25A0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_9;
  }
  v12 = *v8;
  if ((~*v8 & 0xF000000000000007) != 0)
    swift_retain();
  *v7 = v12;
  v13 = *(int *)(v9 + 20);
  v14 = (char *)v7 + v13;
  v15 = (char *)v8 + v13;
  v16 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_9:
  v18 = a3[6];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v21 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
  v22 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, v21);
  v23 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v21);
  if (!v22)
  {
    if (!v23)
    {
      *v19 = *v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v37 = *(int *)(v21 + 20);
      v38 = (char *)v19 + v37;
      v39 = (char *)v20 + v37;
      v40 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 24))(v38, v39, v40);
      goto LABEL_15;
    }
    sub_23F93DADC((uint64_t)v19, type metadata accessor for TranscriptProtoASTBlockStmt);
    goto LABEL_14;
  }
  if (v23)
  {
LABEL_14:
    v29 = sub_23F6916B8(&qword_256EA84F8);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_15;
  }
  *v19 = *v20;
  v24 = *(int *)(v21 + 20);
  v25 = (char *)v19 + v24;
  v26 = (char *)v20 + v24;
  v27 = sub_23FB2D718();
  v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
  swift_bridgeObjectRetain();
  v28(v25, v26, v27);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v19, 0, 1, v21);
LABEL_15:
  v30 = a3[7];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v31, v32, v33);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoASTForInStmt(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoASTExpr(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA25A0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    v11 = *(int *)(v9 + 20);
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v15 = a3[6];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v18))
  {
    v19 = sub_23F6916B8(&qword_256EA84F8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    *v16 = *v17;
    v20 = *(int *)(v18 + 20);
    v21 = (char *)v16 + v20;
    v22 = (char *)v17 + v20;
    v23 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v18);
  }
  v24 = a3[7];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoASTForInStmt(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for TranscriptProtoASTExpr(0);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v10);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      *v8 = *v9;
      v13 = *(int *)(v10 + 20);
      v14 = (char *)v8 + v13;
      v15 = (char *)v9 + v13;
      v16 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    sub_23F93DADC((uint64_t)v8, type metadata accessor for TranscriptProtoASTExpr);
LABEL_6:
    v17 = sub_23F6916B8(&qword_256EA25A0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  v34 = *v9;
  if ((~*v8 & 0xF000000000000007) != 0)
  {
    if ((~v34 & 0xF000000000000007) != 0)
    {
      *v8 = v34;
      swift_release();
    }
    else
    {
      sub_23FA93604((uint64_t)v8);
      *v8 = *v9;
    }
  }
  else
  {
    *v8 = v34;
  }
  v39 = *(int *)(v10 + 20);
  v40 = (char *)v8 + v39;
  v41 = (char *)v9 + v39;
  v42 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
LABEL_7:
  v18 = a3[6];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v21 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
  v22 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, v21);
  v23 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v21);
  if (!v22)
  {
    if (!v23)
    {
      *v19 = *v20;
      swift_bridgeObjectRelease();
      v35 = *(int *)(v21 + 20);
      v36 = (char *)v19 + v35;
      v37 = (char *)v20 + v35;
      v38 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
      goto LABEL_13;
    }
    sub_23F93DADC((uint64_t)v19, type metadata accessor for TranscriptProtoASTBlockStmt);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    v28 = sub_23F6916B8(&qword_256EA84F8);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  *v19 = *v20;
  v24 = *(int *)(v21 + 20);
  v25 = (char *)v19 + v24;
  v26 = (char *)v20 + v24;
  v27 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v19, 0, 1, v21);
LABEL_13:
  v29 = a3[7];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 40))(v30, v31, v32);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTForInStmt()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA948C4()
{
  sub_23FABE1CC();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTForInStmt()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA948E4()
{
  sub_23FABE254();
}

void sub_23FA948F8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23F6DE58C(319, &qword_256EBC2E0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTExpr);
  if (v0 <= 0x3F)
  {
    sub_23F6DE58C(319, qword_256EBC2E8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTBlockStmt);
    if (v1 <= 0x3F)
    {
      sub_23FB2D718();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTBlockStmt()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTBlockStmt()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoASTLiteral(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = type metadata accessor for TranscriptProtoAstliteralEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EB2468);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
LABEL_14:
      v22 = *(int *)(a3 + 20);
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      v25 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
      return a1;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 5:
        *a1 = *a2;
        v12 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralDictVariant(0) + 20);
        v13 = (char *)a1 + v12;
        v14 = (char *)a2 + v12;
        v15 = sub_23FB2D718();
        v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
        swift_bridgeObjectRetain();
        v16(v13, v14, v15);
        break;
      case 4:
        *a1 = *a2;
        v17 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0) + 20);
        v18 = (char *)a1 + v17;
        v19 = (char *)a2 + v17;
        v20 = sub_23FB2D718();
        v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        v21(v18, v19, v20);
        break;
      case 3:
        v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        swift_bridgeObjectRetain();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        goto LABEL_13;
    }
    swift_storeEnumTagMultiPayload();
LABEL_13:
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
    goto LABEL_14;
  }
  v9 = *a2;
  *a1 = *a2;
  a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for TranscriptProtoASTLiteral(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for TranscriptProtoAstliteralEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))goto LABEL_9;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 5:
      swift_bridgeObjectRelease();
      v6 = type metadata accessor for TranscriptProtoASTLiteralDictVariant(0);
LABEL_8:
      v7 = a1 + *(int *)(v6 + 20);
      v8 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
      break;
    case 4:
      swift_bridgeObjectRelease();
      v6 = type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0);
      goto LABEL_8;
    case 3:
      swift_bridgeObjectRelease();
      break;
  }
LABEL_9:
  v9 = a1 + *(int *)(a2 + 20);
  v10 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

_QWORD *initializeWithCopy for TranscriptProtoASTLiteral(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v6 = type metadata accessor for TranscriptProtoAstliteralEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 5:
        *a1 = *a2;
        v10 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralDictVariant(0) + 20);
        v11 = (char *)a1 + v10;
        v12 = (char *)a2 + v10;
        v13 = sub_23FB2D718();
        v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
        swift_bridgeObjectRetain();
        v14(v11, v12, v13);
        break;
      case 4:
        *a1 = *a2;
        v15 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0) + 20);
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        v18 = sub_23FB2D718();
        v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        v19(v16, v17, v18);
        break;
      case 3:
        v9 = a2[1];
        *a1 = *a2;
        a1[1] = v9;
        swift_bridgeObjectRetain();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        goto LABEL_11;
    }
    swift_storeEnumTagMultiPayload();
LABEL_11:
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
    goto LABEL_12;
  }
  v7 = sub_23F6916B8(&qword_256EB2468);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_12:
  v20 = *(int *)(a3 + 20);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoASTLiteral(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;

  v6 = type metadata accessor for TranscriptProtoAstliteralEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 5:
          *a1 = *a2;
          v12 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralDictVariant(0) + 20);
          v13 = (char *)a1 + v12;
          v14 = (char *)a2 + v12;
          v15 = sub_23FB2D718();
          v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
          swift_bridgeObjectRetain();
          v16(v13, v14, v15);
          break;
        case 4:
          *a1 = *a2;
          v17 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0) + 20);
          v18 = (char *)a1 + v17;
          v19 = (char *)a2 + v17;
          v20 = sub_23FB2D718();
          v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
          swift_bridgeObjectRetain();
          v21(v18, v19, v20);
          break;
        case 3:
          *a1 = *a2;
          a1[1] = a2[1];
          swift_bridgeObjectRetain();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
          goto LABEL_20;
      }
      swift_storeEnumTagMultiPayload();
LABEL_20:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_24;
    }
  }
  else
  {
    if (!v8)
    {
      if (a1 == a2)
        goto LABEL_24;
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoAstliteralEnum);
      v11 = swift_getEnumCaseMultiPayload();
      switch(v11)
      {
        case 5:
          *a1 = *a2;
          v22 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralDictVariant(0) + 20);
          v23 = (char *)a1 + v22;
          v24 = (char *)a2 + v22;
          v25 = sub_23FB2D718();
          v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
          swift_bridgeObjectRetain();
          v26(v23, v24, v25);
          break;
        case 4:
          *a1 = *a2;
          v27 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0) + 20);
          v28 = (char *)a1 + v27;
          v29 = (char *)a2 + v27;
          v30 = sub_23FB2D718();
          v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
          swift_bridgeObjectRetain();
          v31(v28, v29, v30);
          break;
        case 3:
          *a1 = *a2;
          a1[1] = a2[1];
          swift_bridgeObjectRetain();
          break;
        default:
          v10 = *(_QWORD *)(v6 - 8);
          goto LABEL_10;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_24;
    }
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoAstliteralEnum);
  }
  v10 = *(_QWORD *)(sub_23F6916B8(&qword_256EB2468) - 8);
LABEL_10:
  memcpy(a1, a2, *(_QWORD *)(v10 + 64));
LABEL_24:
  v32 = *(int *)(a3 + 20);
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 24))(v33, v34, v35);
  return a1;
}

_QWORD *initializeWithTake for TranscriptProtoASTLiteral(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = type metadata accessor for TranscriptProtoAstliteralEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 5)
    {
      *a1 = *a2;
      v13 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralDictVariant(0) + 20);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    }
    else
    {
      if (EnumCaseMultiPayload != 4)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        goto LABEL_9;
      }
      *a1 = *a2;
      v9 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0) + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    }
    swift_storeEnumTagMultiPayload();
LABEL_9:
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
    goto LABEL_10;
  }
  v7 = sub_23F6916B8(&qword_256EB2468);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_10:
  v17 = *(int *)(a3 + 20);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoASTLiteral(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;

  v6 = type metadata accessor for TranscriptProtoAstliteralEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 5)
      {
        *a1 = *a2;
        v20 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralDictVariant(0) + 20);
        v21 = (char *)a1 + v20;
        v22 = (char *)a2 + v20;
        v23 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
      }
      else
      {
        if (EnumCaseMultiPayload != 4)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
          goto LABEL_17;
        }
        *a1 = *a2;
        v10 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0) + 20);
        v11 = (char *)a1 + v10;
        v12 = (char *)a2 + v10;
        v13 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      }
      swift_storeEnumTagMultiPayload();
LABEL_17:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_20;
    }
  }
  else
  {
    if (!v8)
    {
      if (a1 == a2)
        goto LABEL_20;
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoAstliteralEnum);
      v15 = swift_getEnumCaseMultiPayload();
      if (v15 == 5)
      {
        *a1 = *a2;
        v24 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralDictVariant(0) + 20);
        v25 = (char *)a1 + v24;
        v26 = (char *)a2 + v24;
        v27 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
      }
      else
      {
        if (v15 != 4)
        {
          v14 = *(_QWORD *)(v6 - 8);
          goto LABEL_9;
        }
        *a1 = *a2;
        v16 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0) + 20);
        v17 = (char *)a1 + v16;
        v18 = (char *)a2 + v16;
        v19 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_20;
    }
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoAstliteralEnum);
  }
  v14 = *(_QWORD *)(sub_23F6916B8(&qword_256EB2468) - 8);
LABEL_9:
  memcpy(a1, a2, *(_QWORD *)(v14 + 64));
LABEL_20:
  v28 = *(int *)(a3 + 20);
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  v31 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 40))(v29, v30, v31);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTLiteral()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA955DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EB2468);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTLiteral()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA955F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EB2468);
}

void sub_23FA95600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABF738(a1, a2, a3, qword_256EBC4B0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoAstliteralEnum);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoAstliteralEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 5:
        *a1 = *a2;
        v10 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralDictVariant(0) + 20);
        v11 = (char *)a1 + v10;
        v12 = (char *)a2 + v10;
        v13 = sub_23FB2D718();
        v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
        swift_bridgeObjectRetain();
        v14(v11, v12, v13);
        break;
      case 4:
        *a1 = *a2;
        v15 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0) + 20);
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        v18 = sub_23FB2D718();
        v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        v19(v16, v17, v18);
        break;
      case 3:
        v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        swift_bridgeObjectRetain();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for TranscriptProtoAstliteralEnum(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 5:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for TranscriptProtoASTLiteralDictVariant(0);
LABEL_7:
      v4 = a1 + *(int *)(v3 + 20);
      v5 = sub_23FB2D718();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    case 4:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0);
      goto LABEL_7;
    case 3:
      return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for TranscriptProtoAstliteralEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 5:
      *a1 = *a2;
      v8 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralDictVariant(0) + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_23FB2D718();
      v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      v12(v9, v10, v11);
      break;
    case 4:
      *a1 = *a2;
      v13 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0) + 20);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_23FB2D718();
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      v17(v14, v15, v16);
      break;
    case 3:
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoAstliteralEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoAstliteralEnum);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 5:
        *a1 = *a2;
        v7 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralDictVariant(0) + 20);
        v8 = (char *)a1 + v7;
        v9 = (char *)a2 + v7;
        v10 = sub_23FB2D718();
        v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
        swift_bridgeObjectRetain();
        v11(v8, v9, v10);
        break;
      case 4:
        *a1 = *a2;
        v12 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0) + 20);
        v13 = (char *)a1 + v12;
        v14 = (char *)a2 + v12;
        v15 = sub_23FB2D718();
        v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
        swift_bridgeObjectRetain();
        v16(v13, v14, v15);
        break;
      case 3:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *initializeWithTake for TranscriptProtoAstliteralEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 5)
  {
    *a1 = *a2;
    v11 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralDictVariant(0) + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  }
  else
  {
    if (EnumCaseMultiPayload != 4)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    *a1 = *a2;
    v7 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0) + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoAstliteralEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoAstliteralEnum);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 5)
    {
      *a1 = *a2;
      v11 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralDictVariant(0) + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    }
    else
    {
      if (EnumCaseMultiPayload != 4)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
      *a1 = *a2;
      v7 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0) + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23FA95CDC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for TranscriptProtoASTLiteralArrayVariant(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for TranscriptProtoASTLiteralDictVariant(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTLiteralArrayVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTLiteralArrayVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTLiteralDictVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTLiteralDictVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTExpr(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *a2;
    if ((~*a2 & 0xF000000000000007) != 0)
      swift_retain();
    *a1 = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoASTExpr(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  if ((~*a1 & 0xF000000000000007) != 0)
    swift_release();
  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = sub_23FB2D718();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for TranscriptProtoASTExpr(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = *a2;
  if ((~*a2 & 0xF000000000000007) != 0)
    swift_retain();
  *a1 = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoASTExpr(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = *a2;
  v7 = *a2 & 0xF000000000000007;
  if ((~*a1 & 0xF000000000000007) != 0)
  {
    if (v7 != 0xF000000000000007)
    {
      *a1 = v6;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    sub_23FA93604((uint64_t)a1);
    v6 = *a2;
    goto LABEL_6;
  }
  if (v7 == 0xF000000000000007)
  {
LABEL_6:
    *a1 = v6;
    goto LABEL_8;
  }
  *a1 = v6;
  swift_retain();
LABEL_8:
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoASTExpr(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = *a2;
  if ((~*a1 & 0xF000000000000007) != 0)
  {
    if ((~v6 & 0xF000000000000007) != 0)
    {
      *a1 = v6;
      swift_release();
      goto LABEL_6;
    }
    sub_23FA93604((uint64_t)a1);
  }
  *a1 = v6;
LABEL_6:
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExpr()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA960B0(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a2 == 105)
  {
    sub_23F694C84();
  }
  else
  {
    sub_23F6B53A4();
    v4 = sub_23F6F08CC(*(int *)(a3 + 20));
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExpr()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA96128(unint64_t *a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a3 == 105)
  {
    v3 = (~a2 >> 5) & 3 | (4 * (~a2 & 0x7F));
    *a1 = (v3 | (v3 << 57)) & 0xF000000000000007;
    sub_23F694C84();
  }
  else
  {
    sub_23F6B53A4();
    v4 = sub_23FAC3540();
    sub_23F6F07C4(v4, v5, v6, v7);
  }
}

void sub_23FA9617C()
{
  sub_23FABE678();
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoAstexprEnum(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for TranscriptProtoAstexprEnum()
{
  return swift_release();
}

_QWORD *assignWithCopy for TranscriptProtoAstexprEnum(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoAstexprEnum(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoAstexprEnum(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x6B && *(_BYTE *)(a1 + 8))
    {
      v2 = *(_DWORD *)a1 + 106;
    }
    else
    {
      v2 = ((((*(_QWORD *)a1 >> 57) & 0x78 | *(_QWORD *)a1 & 7) >> 2) & 0xFFFFFF9F | (32 * (*(_QWORD *)a1 & 3))) ^ 0x7F;
      if (v2 >= 0x6A)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoAstexprEnum(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x6A)
  {
    *(_QWORD *)result = a2 - 107;
    if (a3 >= 0x6B)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x6B)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 5) & 3 | (4 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_23FA962F0(_QWORD *a1)
{
  unsigned int v1;

  v1 = (*a1 >> 59) & 0x1E | (*a1 >> 2) & 1;
  if (v1 <= 0x14)
    return v1;
  else
    return (*a1 >> 3) + 21;
}

unint64_t *sub_23FA96314(unint64_t *result, uint64_t a2)
{
  unint64_t v2;

  if (a2 < 0x15)
    v2 = (a2 << 59) & 0xF000000000000000 | (4 * (a2 & 1)) | *result & 0xFFFFFFFFFFFFFF8;
  else
    v2 = (8 * (a2 - 21)) | 0xA000000000000004;
  *result = v2;
  return result;
}

void type metadata accessor for TranscriptProtoAstexprEnum()
{
  sub_23F694C70();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTExprPrefixVariant(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    v10 = type metadata accessor for TranscriptProtoASTExpr(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
    {
      v11 = sub_23F6916B8(&qword_256EA25A0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      v13 = *v9;
      if ((~*v9 & 0xF000000000000007) != 0)
        swift_retain();
      *v8 = v13;
      v14 = *(int *)(v10 + 20);
      v15 = (char *)v8 + v14;
      v16 = (char *)v9 + v14;
      v17 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
    }
    v18 = *(int *)(a3 + 24);
    v19 = (char *)v4 + v18;
    v20 = (char *)a2 + v18;
    v21 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  }
  return v4;
}

_BYTE *initializeWithCopy for TranscriptProtoASTExprPrefixVariant(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = (uint64_t *)&a2[v6];
  v9 = type metadata accessor for TranscriptProtoASTExpr(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA25A0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = *v8;
    if ((~*v8 & 0xF000000000000007) != 0)
      swift_retain();
    *v7 = v11;
    v12 = *(int *)(v9 + 20);
    v13 = (char *)v7 + v12;
    v14 = (char *)v8 + v12;
    v15 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v16 = *(int *)(a3 + 24);
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

_BYTE *assignWithCopy for TranscriptProtoASTExprPrefixVariant(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = (uint64_t *)&a2[v6];
  v9 = type metadata accessor for TranscriptProtoASTExpr(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (v11)
    {
      sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoASTExpr);
      goto LABEL_8;
    }
    v23 = *v8;
    v24 = *v8 & 0xF000000000000007;
    if ((~*v7 & 0xF000000000000007) != 0)
    {
      if (v24 != 0xF000000000000007)
      {
        *v7 = v23;
        swift_retain();
        swift_release();
        goto LABEL_17;
      }
      sub_23FA93604((uint64_t)v7);
      v23 = *v8;
    }
    else if (v24 != 0xF000000000000007)
    {
      *v7 = v23;
      swift_retain();
LABEL_17:
      v25 = *(int *)(v9 + 20);
      v26 = (char *)v7 + v25;
      v27 = (char *)v8 + v25;
      v28 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 24))(v26, v27, v28);
      goto LABEL_9;
    }
    *v7 = v23;
    goto LABEL_17;
  }
  if (v11)
  {
LABEL_8:
    v17 = sub_23F6916B8(&qword_256EA25A0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_9;
  }
  v12 = *v8;
  if ((~*v8 & 0xF000000000000007) != 0)
    swift_retain();
  *v7 = v12;
  v13 = *(int *)(v9 + 20);
  v14 = (char *)v7 + v13;
  v15 = (char *)v8 + v13;
  v16 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_9:
  v18 = *(int *)(a3 + 24);
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  return a1;
}

_BYTE *initializeWithTake for TranscriptProtoASTExprPrefixVariant(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoASTExpr(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA25A0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    v11 = *(int *)(v9 + 20);
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v15 = *(int *)(a3 + 24);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

_BYTE *assignWithTake for TranscriptProtoASTExprPrefixVariant(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoASTExpr(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      *v7 = *v8;
      v12 = *(int *)(v9 + 20);
      v13 = (char *)v7 + v12;
      v14 = (char *)v8 + v12;
      v15 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
LABEL_6:
    v16 = sub_23F6916B8(&qword_256EA25A0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  if (v11)
  {
    sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoASTExpr);
    goto LABEL_6;
  }
  v22 = *v8;
  if ((~*v7 & 0xF000000000000007) != 0)
  {
    if ((~v22 & 0xF000000000000007) != 0)
    {
      *v7 = v22;
      swift_release();
    }
    else
    {
      sub_23FA93604((uint64_t)v7);
      *v7 = *v8;
    }
  }
  else
  {
    *v7 = v22;
  }
  v23 = *(int *)(v9 + 20);
  v24 = (char *)v7 + v23;
  v25 = (char *)v8 + v23;
  v26 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
LABEL_7:
  v17 = *(int *)(a3 + 24);
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprPrefixVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA96A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FA96A94(a1, a2, a3, &qword_256EA25A0);
}

void sub_23FA96A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((_DWORD)a2 == 253)
  {
    sub_23F694C84();
  }
  else
  {
    sub_23FAC2F7C(a1, a2, a3, a4);
    sub_23F6F07DC();
    if (v4)
    {
      sub_23F6F0B94();
    }
    else
    {
      sub_23F6B53A4();
      sub_23F6F0B08();
    }
    v6 = sub_23F6F08CC(v5);
    sub_23F6F07D0(v6, v7, v8);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprPrefixVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA96AFC()
{
  sub_23FA96B08();
}

void sub_23FA96B08()
{
  char v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23FAC3B20();
  if (v7)
  {
    *v1 = v0 + 2;
    sub_23F694C84();
  }
  else
  {
    sub_23FAC2F5C(v2, v3, v4, v5, v6);
    sub_23F6F07EC();
    if (v7)
    {
      sub_23F6F0BC4();
    }
    else
    {
      sub_23F6B53A4();
      sub_23F6F0BD0();
    }
    v9 = sub_23F6F082C(v8);
    sub_23F6F07C4(v9, v10, v11, v12);
  }
}

void sub_23FA96B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FAB82D0(a1, a2, a3, (uint64_t)&unk_23FB8F910, &qword_256EBC2E0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTExpr);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTExprInfixVariant(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    v10 = type metadata accessor for TranscriptProtoASTExpr(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
    {
      v11 = sub_23F6916B8(&qword_256EA25A0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      v13 = *v9;
      if ((~*v9 & 0xF000000000000007) != 0)
        swift_retain();
      *v8 = v13;
      v14 = *(int *)(v10 + 20);
      v15 = (char *)v8 + v14;
      v16 = (char *)v9 + v14;
      v17 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
    }
    v18 = a3[6];
    v19 = (uint64_t *)((char *)v4 + v18);
    v20 = (uint64_t *)((char *)a2 + v18);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v18, 1, v10))
    {
      v21 = sub_23F6916B8(&qword_256EA25A0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v22 = *v20;
      if ((~*v20 & 0xF000000000000007) != 0)
        swift_retain();
      *v19 = v22;
      v23 = *(int *)(v10 + 20);
      v24 = (char *)v19 + v23;
      v25 = (char *)v20 + v23;
      v26 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v19, 0, 1, v10);
    }
    v27 = a3[7];
    v28 = (char *)v4 + v27;
    v29 = (char *)a2 + v27;
    v30 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoASTExprInfixVariant(uint64_t a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = (_QWORD *)(a1 + a2[5]);
  v5 = type metadata accessor for TranscriptProtoASTExpr(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5))
  {
    if ((~*v4 & 0xF000000000000007) != 0)
      swift_release();
    v6 = (char *)v4 + *(int *)(v5 + 20);
    v7 = sub_23FB2D718();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = (_QWORD *)(a1 + a2[6]);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v5))
  {
    if ((~*v8 & 0xF000000000000007) != 0)
      swift_release();
    v9 = (char *)v8 + *(int *)(v5 + 20);
    v10 = sub_23FB2D718();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  v11 = a1 + a2[7];
  v12 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

_BYTE *initializeWithCopy for TranscriptProtoASTExprInfixVariant(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t v28;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = (uint64_t *)&a2[v6];
  v9 = type metadata accessor for TranscriptProtoASTExpr(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA25A0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = *v8;
    if ((~*v8 & 0xF000000000000007) != 0)
      swift_retain();
    *v7 = v11;
    v12 = *(int *)(v9 + 20);
    v13 = (char *)v7 + v12;
    v14 = (char *)v8 + v12;
    v15 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v16 = a3[6];
  v17 = &a1[v16];
  v18 = (uint64_t *)&a2[v16];
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)&a2[v16], 1, v9))
  {
    v19 = sub_23F6916B8(&qword_256EA25A0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v20 = *v18;
    if ((~*v18 & 0xF000000000000007) != 0)
      swift_retain();
    *v17 = v20;
    v21 = *(int *)(v9 + 20);
    v22 = (char *)v17 + v21;
    v23 = (char *)v18 + v21;
    v24 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v17, 0, 1, v9);
  }
  v25 = a3[7];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
  return a1;
}

_BYTE *assignWithCopy for TranscriptProtoASTExprInfixVariant(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = (uint64_t *)&a2[v6];
  v9 = type metadata accessor for TranscriptProtoASTExpr(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (v11)
    {
      sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoASTExpr);
      goto LABEL_8;
    }
    v34 = *v8;
    v35 = *v8 & 0xF000000000000007;
    if ((~*v7 & 0xF000000000000007) != 0)
    {
      if (v35 != 0xF000000000000007)
      {
        *v7 = v34;
        swift_retain();
        swift_release();
        goto LABEL_31;
      }
      sub_23FA93604((uint64_t)v7);
      v34 = *v8;
    }
    else if (v35 != 0xF000000000000007)
    {
      *v7 = v34;
      swift_retain();
LABEL_31:
      v38 = *(int *)(v9 + 20);
      v39 = (char *)v7 + v38;
      v40 = (char *)v8 + v38;
      v41 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 24))(v39, v40, v41);
      goto LABEL_9;
    }
    *v7 = v34;
    goto LABEL_31;
  }
  if (v11)
  {
LABEL_8:
    v17 = sub_23F6916B8(&qword_256EA25A0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_9;
  }
  v12 = *v8;
  if ((~*v8 & 0xF000000000000007) != 0)
    swift_retain();
  *v7 = v12;
  v13 = *(int *)(v9 + 20);
  v14 = (char *)v7 + v13;
  v15 = (char *)v8 + v13;
  v16 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_9:
  v18 = a3[6];
  v19 = &a1[v18];
  v20 = (uint64_t *)&a2[v18];
  v21 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)&a1[v18], 1, v9);
  v22 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v9);
  if (!v21)
  {
    if (v22)
    {
      sub_23F93DADC((uint64_t)v19, type metadata accessor for TranscriptProtoASTExpr);
      goto LABEL_16;
    }
    v36 = *v20;
    v37 = *v20 & 0xF000000000000007;
    if ((~*v19 & 0xF000000000000007) != 0)
    {
      if (v37 != 0xF000000000000007)
      {
        *v19 = v36;
        swift_retain();
        swift_release();
        goto LABEL_33;
      }
      sub_23FA93604((uint64_t)v19);
      v36 = *v20;
    }
    else if (v37 != 0xF000000000000007)
    {
      *v19 = v36;
      swift_retain();
LABEL_33:
      v42 = *(int *)(v9 + 20);
      v43 = (char *)v19 + v42;
      v44 = (char *)v20 + v42;
      v45 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 24))(v43, v44, v45);
      goto LABEL_17;
    }
    *v19 = v36;
    goto LABEL_33;
  }
  if (v22)
  {
LABEL_16:
    v28 = sub_23F6916B8(&qword_256EA25A0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_17;
  }
  v23 = *v20;
  if ((~*v20 & 0xF000000000000007) != 0)
    swift_retain();
  *v19 = v23;
  v24 = *(int *)(v9 + 20);
  v25 = (char *)v19 + v24;
  v26 = (char *)v20 + v24;
  v27 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v19, 0, 1, v9);
LABEL_17:
  v29 = a3[7];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v32 - 8) + 24))(v30, v31, v32);
  return a1;
}

_BYTE *initializeWithTake for TranscriptProtoASTExprInfixVariant(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoASTExpr(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA25A0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    v11 = *(int *)(v9 + 20);
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)&a2[v15], 1, v9))
  {
    v18 = sub_23F6916B8(&qword_256EA25A0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    *v16 = *v17;
    v19 = *(int *)(v9 + 20);
    v20 = (char *)v16 + v19;
    v21 = (char *)v17 + v19;
    v22 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v9);
  }
  v23 = a3[7];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

_BYTE *assignWithTake for TranscriptProtoASTExprInfixVariant(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  int v20;
  int v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoASTExpr(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      *v7 = *v8;
      v12 = *(int *)(v9 + 20);
      v13 = (char *)v7 + v12;
      v14 = (char *)v8 + v12;
      v15 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoASTExpr);
LABEL_6:
    v16 = sub_23F6916B8(&qword_256EA25A0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  v32 = *v8;
  if ((~*v7 & 0xF000000000000007) != 0)
  {
    if ((~v32 & 0xF000000000000007) != 0)
    {
      *v7 = v32;
      swift_release();
    }
    else
    {
      sub_23FA93604((uint64_t)v7);
      *v7 = *v8;
    }
  }
  else
  {
    *v7 = v32;
  }
  v34 = *(int *)(v9 + 20);
  v35 = (char *)v7 + v34;
  v36 = (char *)v8 + v34;
  v37 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 40))(v35, v36, v37);
LABEL_7:
  v17 = a3[6];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)&a1[v17], 1, v9);
  v21 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, v9);
  if (v20)
  {
    if (!v21)
    {
      *v18 = *v19;
      v22 = *(int *)(v9 + 20);
      v23 = (char *)v18 + v22;
      v24 = (char *)v19 + v22;
      v25 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v18, 0, 1, v9);
      goto LABEL_13;
    }
LABEL_12:
    v26 = sub_23F6916B8(&qword_256EA25A0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  if (v21)
  {
    sub_23F93DADC((uint64_t)v18, type metadata accessor for TranscriptProtoASTExpr);
    goto LABEL_12;
  }
  v33 = *v19;
  if ((~*v18 & 0xF000000000000007) != 0)
  {
    if ((~v33 & 0xF000000000000007) != 0)
    {
      *v18 = v33;
      swift_release();
    }
    else
    {
      sub_23FA93604((uint64_t)v18);
      *v18 = *v19;
    }
  }
  else
  {
    *v18 = v33;
  }
  v38 = *(int *)(v9 + 20);
  v39 = (char *)v18 + v38;
  v40 = (char *)v19 + v38;
  v41 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 40))(v39, v40, v41);
LABEL_13:
  v27 = a3[7];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprInfixVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA97820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FA9782C(a1, a2, a3, &qword_256EA25A0);
}

void sub_23FA9782C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((_DWORD)a2 == 237)
  {
    sub_23F694C84();
  }
  else
  {
    sub_23FAC2F7C(a1, a2, a3, a4);
    sub_23F6F07DC();
    if (v4)
    {
      sub_23F6F0B94();
    }
    else
    {
      sub_23F6B53A4();
      sub_23F6F0AFC();
    }
    v6 = sub_23F6F08CC(v5);
    sub_23F6F07D0(v6, v7, v8);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprInfixVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA97894()
{
  sub_23FA978A0();
}

void sub_23FA978A0()
{
  char v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F6B6B7C();
  if ((_DWORD)v4 == 237)
  {
    *v1 = v0 + 18;
    sub_23F694C84();
  }
  else
  {
    sub_23FAC2F5C(v2, v3, v4, v5, v6);
    sub_23F6F07EC();
    if (v7)
    {
      sub_23F6F0BC4();
    }
    else
    {
      sub_23F6B53A4();
      sub_23F6F0BB8();
    }
    v9 = sub_23F6F082C(v8);
    sub_23F6F07C4(v9, v10, v11, v12);
  }
}

void sub_23FA978F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FA97908(a1, a2, a3, &qword_256EBC2E0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTExpr);
}

void sub_23FA97908(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  unint64_t v5;
  unint64_t v6;

  sub_23FAC3580(a1, a4, a5);
  if (v5 <= 0x3F)
  {
    sub_23F6F0B14();
    if (v6 <= 0x3F)
    {
      sub_23FAC2E74();
      sub_23F6F0BFC();
    }
  }
  sub_23F6B6BFC();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTExprDotVariant(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for TranscriptProtoASTExpr(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA25A0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v14 = *v10;
      if ((~*v10 & 0xF000000000000007) != 0)
        swift_retain();
      *v9 = v14;
      v15 = *(int *)(v11 + 20);
      v16 = (char *)v9 + v15;
      v17 = (char *)v10 + v15;
      v18 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v19 = *(int *)(a3 + 24);
    v20 = (char *)v4 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoASTExprDotVariant(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  v5 = type metadata accessor for TranscriptProtoASTExpr(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5))
  {
    if ((~*v4 & 0xF000000000000007) != 0)
      swift_release();
    v6 = (char *)v4 + *(int *)(v5 + 20);
    v7 = sub_23FB2D718();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + *(int *)(a2 + 24);
  v9 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *initializeWithCopy for TranscriptProtoASTExprDotVariant(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for TranscriptProtoASTExpr(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F6916B8(&qword_256EA25A0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = *v9;
    if ((~*v9 & 0xF000000000000007) != 0)
      swift_retain();
    *v8 = v12;
    v13 = *(int *)(v10 + 20);
    v14 = (char *)v8 + v13;
    v15 = (char *)v9 + v13;
    v16 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v17 = *(int *)(a3 + 24);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoASTExprDotVariant(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoASTExpr(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (v11)
    {
      sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoASTExpr);
      goto LABEL_8;
    }
    v23 = *v8;
    v24 = *v8 & 0xF000000000000007;
    if ((~*v7 & 0xF000000000000007) != 0)
    {
      if (v24 != 0xF000000000000007)
      {
        *v7 = v23;
        swift_retain();
        swift_release();
        goto LABEL_17;
      }
      sub_23FA93604((uint64_t)v7);
      v23 = *v8;
    }
    else if (v24 != 0xF000000000000007)
    {
      *v7 = v23;
      swift_retain();
LABEL_17:
      v25 = *(int *)(v9 + 20);
      v26 = (char *)v7 + v25;
      v27 = (char *)v8 + v25;
      v28 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 24))(v26, v27, v28);
      goto LABEL_9;
    }
    *v7 = v23;
    goto LABEL_17;
  }
  if (v11)
  {
LABEL_8:
    v17 = sub_23F6916B8(&qword_256EA25A0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_9;
  }
  v12 = *v8;
  if ((~*v8 & 0xF000000000000007) != 0)
    swift_retain();
  *v7 = v12;
  v13 = *(int *)(v9 + 20);
  v14 = (char *)v7 + v13;
  v15 = (char *)v8 + v13;
  v16 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_9:
  v18 = *(int *)(a3 + 24);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoASTExprDotVariant(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoASTExpr(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA25A0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    v11 = *(int *)(v9 + 20);
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v15 = *(int *)(a3 + 24);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoASTExprDotVariant(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for TranscriptProtoASTExpr(0);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v10);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      *v8 = *v9;
      v13 = *(int *)(v10 + 20);
      v14 = (char *)v8 + v13;
      v15 = (char *)v9 + v13;
      v16 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
LABEL_6:
    v17 = sub_23F6916B8(&qword_256EA25A0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  if (v12)
  {
    sub_23F93DADC((uint64_t)v8, type metadata accessor for TranscriptProtoASTExpr);
    goto LABEL_6;
  }
  v23 = *v9;
  if ((~*v8 & 0xF000000000000007) != 0)
  {
    if ((~v23 & 0xF000000000000007) != 0)
    {
      *v8 = v23;
      swift_release();
    }
    else
    {
      sub_23FA93604((uint64_t)v8);
      *v8 = *v9;
    }
  }
  else
  {
    *v8 = v23;
  }
  v24 = *(int *)(v10 + 20);
  v25 = (char *)v8 + v24;
  v26 = (char *)v9 + v24;
  v27 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v25, v26, v27);
LABEL_7:
  v18 = *(int *)(a3 + 24);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprDotVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA98180()
{
  sub_23FAB8200();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprDotVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA98198()
{
  sub_23FAB8268();
}

void sub_23FA981A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FAB82D0(a1, a2, a3, (uint64_t)&unk_23FB8EBA8, &qword_256EBC2E0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTExpr);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTExprIndexVariant(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoASTExpr(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EA25A0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v10 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        swift_retain();
      *a1 = v10;
      v11 = *(int *)(v7 + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v15 = *(int *)(a3 + 20);
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v15, 1, v7))
    {
      v18 = sub_23F6916B8(&qword_256EA25A0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v19 = *v17;
      if ((~*v17 & 0xF000000000000007) != 0)
        swift_retain();
      *v16 = v19;
      v20 = *(int *)(v7 + 20);
      v21 = (char *)v16 + v20;
      v22 = (char *)v17 + v20;
      v23 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v7);
    }
    v24 = *(int *)(a3 + 24);
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v27 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoASTExprIndexVariant(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v4 = type metadata accessor for TranscriptProtoASTExpr(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v4))
  {
    if ((~*a1 & 0xF000000000000007) != 0)
      swift_release();
    v5 = (char *)a1 + *(int *)(v4 + 20);
    v6 = sub_23FB2D718();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = (_QWORD *)((char *)a1 + *(int *)(a2 + 20));
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v4))
  {
    if ((~*v7 & 0xF000000000000007) != 0)
      swift_release();
    v8 = (char *)v7 + *(int *)(v4 + 20);
    v9 = sub_23FB2D718();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  v10 = (char *)a1 + *(int *)(a2 + 24);
  v11 = sub_23FB2D718();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
}

_QWORD *initializeWithCopy for TranscriptProtoASTExprIndexVariant(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = type metadata accessor for TranscriptProtoASTExpr(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA25A0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = *a2;
    if ((~*a2 & 0xF000000000000007) != 0)
      swift_retain();
    *a1 = v8;
    v9 = *(int *)(v6 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v13 = *(int *)(a3 + 20);
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (uint64_t *)((char *)a2 + v13);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v13, 1, v6))
  {
    v16 = sub_23F6916B8(&qword_256EA25A0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = *v15;
    if ((~*v15 & 0xF000000000000007) != 0)
      swift_retain();
    *v14 = v17;
    v18 = *(int *)(v6 + 20);
    v19 = (char *)v14 + v18;
    v20 = (char *)v15 + v18;
    v21 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v14, 0, 1, v6);
  }
  v22 = *(int *)(a3 + 24);
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoASTExprIndexVariant(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v6 = type metadata accessor for TranscriptProtoASTExpr(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoASTExpr);
      goto LABEL_8;
    }
    v31 = *a2;
    v32 = *a2 & 0xF000000000000007;
    if ((~*a1 & 0xF000000000000007) != 0)
    {
      if (v32 != 0xF000000000000007)
      {
        *a1 = v31;
        swift_retain();
        swift_release();
        goto LABEL_31;
      }
      sub_23FA93604((uint64_t)a1);
      v31 = *a2;
    }
    else if (v32 != 0xF000000000000007)
    {
      *a1 = v31;
      swift_retain();
LABEL_31:
      v35 = *(int *)(v6 + 20);
      v36 = (char *)a1 + v35;
      v37 = (char *)a2 + v35;
      v38 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
      goto LABEL_9;
    }
    *a1 = v31;
    goto LABEL_31;
  }
  if (v8)
  {
LABEL_8:
    v14 = sub_23F6916B8(&qword_256EA25A0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_9;
  }
  v9 = *a2;
  if ((~*a2 & 0xF000000000000007) != 0)
    swift_retain();
  *a1 = v9;
  v10 = *(int *)(v6 + 20);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_9:
  v15 = *(int *)(a3 + 20);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (uint64_t *)((char *)a2 + v15);
  v18 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1 + v15, 1, v6);
  v19 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v6);
  if (!v18)
  {
    if (v19)
    {
      sub_23F93DADC((uint64_t)v16, type metadata accessor for TranscriptProtoASTExpr);
      goto LABEL_16;
    }
    v33 = *v17;
    v34 = *v17 & 0xF000000000000007;
    if ((~*v16 & 0xF000000000000007) != 0)
    {
      if (v34 != 0xF000000000000007)
      {
        *v16 = v33;
        swift_retain();
        swift_release();
        goto LABEL_33;
      }
      sub_23FA93604((uint64_t)v16);
      v33 = *v17;
    }
    else if (v34 != 0xF000000000000007)
    {
      *v16 = v33;
      swift_retain();
LABEL_33:
      v39 = *(int *)(v6 + 20);
      v40 = (char *)v16 + v39;
      v41 = (char *)v17 + v39;
      v42 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
      goto LABEL_17;
    }
    *v16 = v33;
    goto LABEL_33;
  }
  if (v19)
  {
LABEL_16:
    v25 = sub_23F6916B8(&qword_256EA25A0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_17;
  }
  v20 = *v17;
  if ((~*v17 & 0xF000000000000007) != 0)
    swift_retain();
  *v16 = v20;
  v21 = *(int *)(v6 + 20);
  v22 = (char *)v16 + v21;
  v23 = (char *)v17 + v21;
  v24 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v6);
LABEL_17:
  v26 = *(int *)(a3 + 24);
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v27, v28, v29);
  return a1;
}

_QWORD *initializeWithTake for TranscriptProtoASTExprIndexVariant(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v6 = type metadata accessor for TranscriptProtoASTExpr(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA25A0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v8 = *(int *)(v6 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v12 = *(int *)(a3 + 20);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v12, 1, v6))
  {
    v15 = sub_23F6916B8(&qword_256EA25A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    *v13 = *v14;
    v16 = *(int *)(v6 + 20);
    v17 = (char *)v13 + v16;
    v18 = (char *)v14 + v16;
    v19 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v13, 0, 1, v6);
  }
  v20 = *(int *)(a3 + 24);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoASTExprIndexVariant(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  int v17;
  int v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;

  v6 = type metadata accessor for TranscriptProtoASTExpr(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *a1 = *a2;
      v9 = *(int *)(v6 + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoASTExpr);
LABEL_6:
    v13 = sub_23F6916B8(&qword_256EA25A0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  v29 = *a2;
  if ((~*a1 & 0xF000000000000007) != 0)
  {
    if ((~v29 & 0xF000000000000007) != 0)
    {
      *a1 = v29;
      swift_release();
    }
    else
    {
      sub_23FA93604((uint64_t)a1);
      *a1 = *a2;
    }
  }
  else
  {
    *a1 = v29;
  }
  v31 = *(int *)(v6 + 20);
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
LABEL_7:
  v14 = *(int *)(a3 + 20);
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1 + v14, 1, v6);
  v18 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, v6);
  if (v17)
  {
    if (!v18)
    {
      *v15 = *v16;
      v19 = *(int *)(v6 + 20);
      v20 = (char *)v15 + v19;
      v21 = (char *)v16 + v19;
      v22 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v15, 0, 1, v6);
      goto LABEL_13;
    }
LABEL_12:
    v23 = sub_23F6916B8(&qword_256EA25A0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  if (v18)
  {
    sub_23F93DADC((uint64_t)v15, type metadata accessor for TranscriptProtoASTExpr);
    goto LABEL_12;
  }
  v30 = *v16;
  if ((~*v15 & 0xF000000000000007) != 0)
  {
    if ((~v30 & 0xF000000000000007) != 0)
    {
      *v15 = v30;
      swift_release();
    }
    else
    {
      sub_23FA93604((uint64_t)v15);
      *v15 = *v16;
    }
  }
  else
  {
    *v15 = v30;
  }
  v35 = *(int *)(v6 + 20);
  v36 = (char *)v15 + v35;
  v37 = (char *)v16 + v35;
  v38 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
LABEL_13:
  v24 = *(int *)(a3 + 24);
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v25, v26, v27);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprIndexVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA98E00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FA98E0C(a1, a2, a3, &qword_256EA25A0);
}

uint64_t sub_23FA98E0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  sub_23FAC3030(a1, a2, a3, a4);
  sub_23F6F07DC();
  if (v7)
  {
    v9 = sub_23F876D78();
  }
  else
  {
    v8 = sub_23F6B53A4();
    v9 = v5 + *(int *)(v6 + 24);
  }
  return sub_23F6F07D0(v9, v4, v8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprIndexVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA98E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FA98E64(a1, a2, a3, a4, &qword_256EA25A0);
}

uint64_t sub_23FA98E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23FAC2EE0(a1, a2, a3, a4, a5);
  sub_23F6F07EC();
  if (v5)
    sub_23F876DBC();
  else
    sub_23F6B53A4();
  sub_23F6F08B0();
  return sub_23F6F07C4(v6, v7, v8, v9);
}

void sub_23FA98EA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FA98EB8(a1, a2, a3, &qword_256EBC2E0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTExpr);
}

void sub_23FA98EB8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  unint64_t v5;
  unint64_t v6;

  sub_23FAC3148(a1, a2, a3, a4, a5);
  if (v5 <= 0x3F)
  {
    sub_23F6F0B14();
    if (v6 <= 0x3F)
    {
      sub_23F6F0978();
      sub_23F6F0BFC();
    }
  }
  sub_23F6B6BFC();
}

void _s30IntelligenceFlowPlannerSupport50TranscriptProtoExternalAgentRequestRewriteMetadataVwCP_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  int v3;
  uint64_t v4;

  sub_23F6D3A90();
  sub_23F877920();
  if ((v3 & 0x20000) != 0)
  {
    sub_23F876A58(*v2);
  }
  else
  {
    sub_23FAC3AB4(v1, v2);
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v4 + 16);
    sub_23F6B53A4();
    sub_23F6B54F8();
    sub_23F6B6254();
    sub_23F876FE4();
  }
  sub_23F6B69E0();
}

uint64_t _s30IntelligenceFlowPlannerSupport50TranscriptProtoExternalAgentRequestRewriteMetadataVwxx_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23FAC315C();
  sub_23FAC39B4();
  sub_23F6B53A4();
  v0 = sub_23F87922C();
  return sub_23F8776C4(v0, v1, v2);
}

void _s30IntelligenceFlowPlannerSupport50TranscriptProtoExternalAgentRequestRewriteMetadataVwcp_0()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_23F6D3A90();
  v2 = sub_23FAC34F8(v0, v1);
  v2[2] = *(_QWORD *)(v3 + 16);
  sub_23F6B53A4();
  sub_23F6B54F8();
  sub_23F6B6254();
  sub_23F876FE4();
  sub_23F6B69E0();
}

void _s30IntelligenceFlowPlannerSupport50TranscriptProtoExternalAgentRequestRewriteMetadataVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FAC2CF8(a1, a2);
  sub_23F6B5908();
  sub_23FAC3C00();
  sub_23F6B5908();
  v4 = v3 + *(int *)(v2 + 24);
  v5 = sub_23F6B53A4();
  sub_23F7B0990(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24));
  sub_23F694C84();
}

void _s30IntelligenceFlowPlannerSupport50TranscriptProtoExternalAgentRequestRewriteMetadataVwtk_0(__n128 *a1, __n128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FAC3C10(a1, a2);
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v2 + 16);
  v4 = sub_23F6B53A4();
  sub_23FAC2C18(v4);
  sub_23F694C84();
}

void _s30IntelligenceFlowPlannerSupport50TranscriptProtoExternalAgentRequestRewriteMetadataVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FAC2E50(a1, a2);
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRelease();
  v5 = v4 + *(int *)(v2 + 24);
  v6 = sub_23F6B53A4();
  sub_23F7B0990(v5, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40));
  sub_23F694C84();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprCallVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprCallVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprSayVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprSayVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void _s30IntelligenceFlowPlannerSupport37TranscriptProtoASTFlatExprPickVariantVwCP_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F6D3A90();
  v3 = v2;
  sub_23F877920();
  if ((v4 & 0x20000) != 0)
  {
    sub_23F876A58(*v3);
  }
  else
  {
    v5 = sub_23FAC37D8();
    type metadata accessor for TranscriptProtoASTPickType(v5);
    sub_23F6B90D8();
    if (sub_23FAC2D30(v1))
    {
      v6 = sub_23F6916B8(&qword_256EA8510);
      sub_23FAC2D1C(v6);
    }
    else
    {
      *(_QWORD *)v0 = *(_QWORD *)v1;
      *(_BYTE *)(v0 + 8) = *(_BYTE *)(v1 + 8);
      v7 = sub_23F6B53A4();
      sub_23F7A01DC(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16));
      sub_23FAC2C6C(v0);
    }
    v8 = sub_23F6B53A4();
    sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16));
  }
  sub_23F6B69E0();
}

uint64_t sub_23FA991CC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  destroy for AssetsManager();
  v5 = sub_23F6F0960();
  a3(v5);
  if (!sub_23FAC2B44(v3))
  {
    v6 = sub_23F6B53A4();
    sub_23FAC2CE4(v6);
  }
  sub_23F6B53A4();
  v7 = sub_23F87922C();
  return sub_23FAC2C30(v7, v8, v9);
}

void _s30IntelligenceFlowPlannerSupport37TranscriptProtoASTFlatExprPickVariantVwcp_0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F6D3A90();
  v4 = sub_23FAC34A0(v2, v3);
  type metadata accessor for TranscriptProtoASTPickType(v4);
  sub_23F6B90D8();
  if (sub_23FAC2D30(v1))
  {
    v5 = sub_23F6916B8(&qword_256EA8510);
    sub_23FAC2D1C(v5);
  }
  else
  {
    *(_QWORD *)v0 = *(_QWORD *)v1;
    *(_BYTE *)(v0 + 8) = *(_BYTE *)(v1 + 8);
    v6 = sub_23F6B53A4();
    sub_23F7A01DC(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16));
    sub_23FAC2C6C(v0);
  }
  v7 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16));
  sub_23F6B69E0();
}

void _s30IntelligenceFlowPlannerSupport37TranscriptProtoASTFlatExprPickVariantVwca_0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_23F6D3A90();
  sub_23FAC300C(v3, v4);
  sub_23F6B5908();
  v5 = v0 + *(int *)(v1 + 20);
  v6 = type metadata accessor for TranscriptProtoASTPickType(0);
  v7 = sub_23FAC2B50(v6);
  if (!v2)
  {
    if (!(_DWORD)v7)
    {
      sub_23FAC3BE8();
      v13 = sub_23F6B53A4();
      sub_23FAC2D80(v13);
      goto LABEL_7;
    }
    sub_23FAC3228(v7, type metadata accessor for TranscriptProtoASTPickType);
    goto LABEL_6;
  }
  if ((_DWORD)v7)
  {
LABEL_6:
    v11 = sub_23F6916B8(&qword_256EA8510);
    sub_23FAC2BBC(v11);
    goto LABEL_7;
  }
  sub_23FAC3BE8();
  v9 = v5 + v8;
  v10 = sub_23F6B53A4();
  sub_23F6B51EC(v9, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16));
  sub_23FAC2BA8();
LABEL_7:
  v12 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24));
  sub_23F6B69E0();
}

void _s30IntelligenceFlowPlannerSupport37TranscriptProtoASTFlatExprPickVariantVwtk_0()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F6D3A90();
  v4 = sub_23FAC34C8(v2, v3);
  type metadata accessor for TranscriptProtoASTPickType(v4);
  if (sub_23FAC2D30(v1))
  {
    v5 = sub_23F6916B8(&qword_256EA8510);
    sub_23FAC2D1C(v5);
  }
  else
  {
    *(_QWORD *)v0 = *(_QWORD *)v1;
    *(_BYTE *)(v0 + 8) = *(_BYTE *)(v1 + 8);
    v6 = sub_23F6B53A4();
    sub_23FAC2C98(v6);
    sub_23FAC2C6C(v0);
  }
  v7 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32));
  sub_23F6B69E0();
}

void _s30IntelligenceFlowPlannerSupport37TranscriptProtoASTFlatExprPickVariantVwta_0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_23F6D3A90();
  sub_23FAC3174(v3, v4);
  v5 = v0 + *(int *)(v1 + 20);
  v6 = type metadata accessor for TranscriptProtoASTPickType(0);
  v7 = sub_23FAC2B50(v6);
  if (!v2)
  {
    if (!(_DWORD)v7)
    {
      sub_23FAC3BD0();
      v13 = sub_23F6B53A4();
      sub_23FAC2D68(v13);
      goto LABEL_7;
    }
    sub_23FAC3228(v7, type metadata accessor for TranscriptProtoASTPickType);
    goto LABEL_6;
  }
  if ((_DWORD)v7)
  {
LABEL_6:
    v11 = sub_23F6916B8(&qword_256EA8510);
    sub_23FAC2BBC(v11);
    goto LABEL_7;
  }
  sub_23FAC3BD0();
  v9 = v5 + v8;
  v10 = sub_23F6B53A4();
  sub_23F6B51EC(v9, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32));
  sub_23FAC2BA8();
LABEL_7:
  v12 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40));
  sub_23F6B69E0();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprPickVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA99510()
{
  sub_23FAB8200();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprPickVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA99528()
{
  sub_23FAB8268();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprConfirmVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprConfirmVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprUndoVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA99564()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F0AC8();
  if (v2)
  {
    sub_23F6F0880(*(_QWORD *)(v0 + 8));
    sub_23F694C84();
  }
  else
  {
    v3 = v1;
    sub_23F6B53A4();
    v4 = sub_23F6F08CC(*(int *)(v3 + 20));
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprUndoVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA995BC()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F6F09B0();
  if (v3)
  {
    *(_QWORD *)(v1 + 8) = v0;
    sub_23F694C84();
  }
  else
  {
    v4 = v2;
    sub_23F6B53A4();
    v5 = sub_23F6F082C(*(int *)(v4 + 20));
    sub_23F6F07C4(v5, v6, v7, v8);
  }
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprCancelVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprCancelVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void _s30IntelligenceFlowPlannerSupport31TranscriptProtoSearchExpressionVwCP_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  int v3;
  uint64_t v4;

  sub_23F877920();
  if ((v3 & 0x20000) != 0)
  {
    sub_23F876A58(*v2);
  }
  else
  {
    sub_23FAC3AB4(v1, v2);
    *(_WORD *)(v0 + 16) = *(_WORD *)(v4 + 16);
    sub_23F6B53A4();
    sub_23F6B54F8();
    sub_23F878C98();
  }
  sub_23F6B5F7C();
}

uint64_t _s30IntelligenceFlowPlannerSupport31TranscriptProtoSearchExpressionVwxx_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23FAC315C();
  sub_23F6B53A4();
  v0 = sub_23F87922C();
  return sub_23F8776C4(v0, v1, v2);
}

void _s30IntelligenceFlowPlannerSupport31TranscriptProtoSearchExpressionVwcp_0(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2 = sub_23FAC34F8(a1, a2);
  *((_WORD *)v2 + 8) = *(_WORD *)(v3 + 16);
  sub_23F6B53A4();
  sub_23F6B54F8();
  sub_23F878C98();
  sub_23F6B5F7C();
}

void _s30IntelligenceFlowPlannerSupport31TranscriptProtoSearchExpressionVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FAC2CF8(a1, a2);
  sub_23F6B5908();
  *(_BYTE *)(v4 + 16) = *(_BYTE *)(v3 + 16);
  *(_BYTE *)(v4 + 17) = *(_BYTE *)(v3 + 17);
  v5 = v4 + *(int *)(v2 + 28);
  v6 = sub_23F6B53A4();
  sub_23F7B0990(v5, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24));
  sub_23F694C84();
}

void _s30IntelligenceFlowPlannerSupport31TranscriptProtoSearchExpressionVwtk_0(__n128 *a1, __n128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FAC3C10(a1, a2);
  *(_WORD *)(v3 + 16) = *(_WORD *)(v2 + 16);
  v4 = sub_23F6B53A4();
  sub_23FAC2C18(v4);
  sub_23F694C84();
}

void _s30IntelligenceFlowPlannerSupport31TranscriptProtoSearchExpressionVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FAC2E50(a1, a2);
  *(_BYTE *)(v4 + 16) = *(_BYTE *)(v3 + 16);
  *(_BYTE *)(v4 + 17) = *(_BYTE *)(v3 + 17);
  v5 = v4 + *(int *)(v2 + 28);
  v6 = sub_23F6B53A4();
  sub_23F7B0990(v5, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40));
  sub_23F694C84();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprSearchVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprSearchVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprPickOneVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprPickOneVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprNoMatchingToolVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprNoMatchingToolVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void _s30IntelligenceFlowPlannerSupport34TranscriptProtoParameterNeedsValueVwCP_0()
{
  uint64_t v0;
  uint64_t *v1;
  int v2;

  sub_23F877920();
  if ((v2 & 0x20000) != 0)
  {
    sub_23F876A58(*v1);
  }
  else
  {
    sub_23FAC3AB4(v0, v1);
    sub_23F6B53A4();
    sub_23F6B54F8();
    sub_23F878C98();
  }
  sub_23F6B5F7C();
}

uint64_t _s30IntelligenceFlowPlannerSupport34TranscriptProtoParameterNeedsValueVwxx_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23FAC315C();
  sub_23F6B53A4();
  v0 = sub_23F87922C();
  return sub_23F8776C4(v0, v1, v2);
}

void _s30IntelligenceFlowPlannerSupport34TranscriptProtoParameterNeedsValueVwcp_0(_QWORD *a1, _QWORD *a2)
{
  sub_23FAC34F8(a1, a2);
  sub_23F6B53A4();
  sub_23F6B54F8();
  sub_23F878C98();
  sub_23F6B5F7C();
}

void _s30IntelligenceFlowPlannerSupport34TranscriptProtoParameterNeedsValueVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FAC2CF8(a1, a2);
  sub_23F6B5908();
  v4 = v3 + *(int *)(v2 + 20);
  v5 = sub_23F6B53A4();
  sub_23F7B0990(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24));
  sub_23F694C84();
}

void _s30IntelligenceFlowPlannerSupport34TranscriptProtoParameterNeedsValueVwtk_0(_OWORD *a1, _OWORD *a2)
{
  uint64_t v2;

  *a1 = *a2;
  v2 = sub_23F6B53A4();
  sub_23FAC2C18(v2);
  sub_23F694C84();
}

void _s30IntelligenceFlowPlannerSupport34TranscriptProtoParameterNeedsValueVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FAC2E50(a1, a2);
  v4 = v3 + *(int *)(v2 + 20);
  v5 = sub_23F6B53A4();
  sub_23F7B0990(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40));
  sub_23F694C84();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprRejectVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA999E0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F08A0();
  if (v2)
  {
    sub_23F6F083C(*(_QWORD *)(v0 + 8));
    sub_23F694C84();
  }
  else
  {
    v3 = v1;
    sub_23F6B53A4();
    v4 = sub_23F6F08CC(*(int *)(v3 + 20));
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprRejectVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA99A38()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F0850();
  if (v1)
  {
    sub_23F6F0B1C();
    sub_23F694C84();
  }
  else
  {
    v2 = v0;
    sub_23F6B53A4();
    v3 = sub_23F6F082C(*(int *)(v2 + 20));
    sub_23F6F07C4(v3, v4, v5, v6);
  }
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprResolveToolVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprResolveToolVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprContinuePlanningVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprContinuePlanningVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void _s30IntelligenceFlowPlannerSupport41TranscriptProtoUpdateParametersExpressionVwca_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_23F6B50E8();
  sub_23FAC35BC(v5, v6);
  sub_23F6B5908();
  v7 = *(int *)(v2 + 20);
  v8 = v0 + v7;
  v9 = v1 + v7;
  v10 = type metadata accessor for TranscriptProtoStatementID(0);
  v11 = sub_23FAC2B50(v10);
  if (!v4)
  {
    if (!(_DWORD)v11)
    {
      sub_23FAC3480();
      sub_23F717D54();
      v17 = sub_23F6B53A4();
      sub_23FAC2D80(v17);
      goto LABEL_7;
    }
    sub_23FAC3228(v11, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if ((_DWORD)v11)
  {
LABEL_6:
    v15 = sub_23F6916B8(&qword_256EA25E0);
    sub_23FAC2BBC(v15);
    goto LABEL_7;
  }
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  v12 = *(int *)(v3 + 24);
  v13 = v8 + v12;
  v14 = v9 + v12;
  sub_23F6B53A4();
  sub_23FAC2BD0();
  sub_23FAC2FE4(v13, v14);
  sub_23FAC2BA8();
LABEL_7:
  v16 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24));
  sub_23F693DDC();
}

void _s30IntelligenceFlowPlannerSupport41TranscriptProtoUpdateParametersExpressionVwta_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_23F6D3A90();
  sub_23FAC35A0(v5, v6);
  v7 = *(int *)(v2 + 20);
  v8 = v0 + v7;
  v9 = v1 + v7;
  v10 = type metadata accessor for TranscriptProtoStatementID(0);
  v11 = sub_23FAC2B50(v10);
  if (!v4)
  {
    if (!(_DWORD)v11)
    {
      sub_23FAC3718();
      v16 = sub_23F6B53A4();
      sub_23FAC2D68(v16);
      goto LABEL_7;
    }
    sub_23FAC3228(v11, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if ((_DWORD)v11)
  {
LABEL_6:
    v14 = sub_23F6916B8(&qword_256EA25E0);
    sub_23FAC2BBC(v14);
    goto LABEL_7;
  }
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
  v12 = v8 + *(int *)(v3 + 24);
  v13 = sub_23F6B53A4();
  sub_23F6B51EC(v12, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32));
  sub_23FAC2BA8();
LABEL_7:
  v15 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40));
  sub_23F6B69E0();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprUpdateParametersVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA99C80()
{
  sub_23FA99C8C();
}

void sub_23FA99C8C()
{
  unint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F6F08A0();
  if (v5)
  {
    sub_23F6F083C(*v0);
    sub_23F694C84();
  }
  else
  {
    sub_23FAC2F7C(v1, v2, v3, v4);
    sub_23F6F07DC();
    if (v5)
    {
      sub_23F6F0B94();
    }
    else
    {
      sub_23F6B53A4();
      sub_23F6F0B08();
    }
    v7 = sub_23F6F08CC(v6);
    sub_23F6F07D0(v7, v8, v9);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprUpdateParametersVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA99CE8()
{
  sub_23FA99CF4();
}

void sub_23FA99CF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F6F0850();
  if (v5)
  {
    sub_23F6F0B28();
    sub_23F694C84();
  }
  else
  {
    sub_23FAC2F5C(v0, v1, v2, v3, v4);
    sub_23F6F07EC();
    if (v5)
    {
      sub_23F6F0BC4();
    }
    else
    {
      sub_23F6B53A4();
      sub_23F6F0BD0();
    }
    v7 = sub_23F6F082C(v6);
    sub_23F6F07C4(v7, v8, v9, v10);
  }
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprGetMentionedApps()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprGetMentionedApps()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t _s30IntelligenceFlowPlannerSupport35TranscriptProtoASTExprPrefixVariantVwxx_0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = sub_23FAC3B30();
  type metadata accessor for TranscriptProtoASTExpr(v1);
  if (!sub_23FAC2B44((uint64_t)v0))
  {
    if ((~*v0 & 0xF000000000000007) != 0)
      swift_release();
    v2 = sub_23F6B53A4();
    sub_23FAC2CE4(v2);
  }
  sub_23F6B53A4();
  v3 = sub_23F87922C();
  return sub_23FAC2C30(v3, v4, v5);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTUpdateExpr()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA99DD0()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FAC3F00();
  if (v0)
  {
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A1C();
    sub_23F6916B8(&qword_256EA25A0);
    sub_23F6F07DC();
    if (v0)
    {
      sub_23F6F0B94();
    }
    else
    {
      sub_23F6B53A4();
      sub_23F6F0B08();
    }
    v2 = sub_23F6F08CC(v1);
    sub_23F6F07D0(v2, v3, v4);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTUpdateExpr()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA99E40()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FAC3640();
  if (v0)
  {
    sub_23FAC3D10();
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A10();
    sub_23F6916B8(&qword_256EA25A0);
    sub_23F6F07EC();
    if (v0)
    {
      sub_23F6F0BC4();
    }
    else
    {
      sub_23F6B53A4();
      sub_23F6F0BD0();
    }
    v2 = sub_23F6F082C(v1);
    sub_23F6F07C4(v2, v3, v4, v5);
  }
}

void sub_23FA99E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FAB82D0(a1, a2, a3, (uint64_t)&unk_23FB8ED40, &qword_256EBC2E0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTExpr);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoToolParameterValue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EAB768);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v10 = sub_23FB2EB1C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      }
      else
      {
        v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v12 = *(int *)(a3 + 20);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoToolParameterValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v5 = sub_23FB2EB1C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v6 = a1 + *(int *)(a2 + 20);
  v7 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

_QWORD *initializeWithCopy for TranscriptProtoToolParameterValue(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EAB768);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_23FB2EB1C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    }
    else
    {
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v10 = *(int *)(a3 + 20);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoToolParameterValue(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v9 = sub_23FB2EB1C();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      }
      else
      {
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_15;
    }
LABEL_7:
    v10 = sub_23F6916B8(&qword_256EAB768);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_15;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoToolParameterValueEnum);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoToolParameterValueEnum);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_23FB2EB1C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v12 = *(int *)(a3 + 20);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

char *initializeWithTake for TranscriptProtoToolParameterValue(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EAB768);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_23FB2EB1C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *assignWithTake for TranscriptProtoToolParameterValue(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoToolParameterValueEnum);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v11 = sub_23FB2EB1C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      v10 = *(_QWORD *)(v6 - 8);
      goto LABEL_8;
    }
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoToolParameterValueEnum);
LABEL_7:
    v10 = *(_QWORD *)(sub_23F6916B8(&qword_256EAB768) - 8);
LABEL_8:
    memcpy(a1, a2, *(_QWORD *)(v10 + 64));
    goto LABEL_14;
  }
  if (v8)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_23FB2EB1C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_14:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoToolParameterValue()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA9A648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EAB768);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoToolParameterValue()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA9A660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EAB768);
}

void sub_23FA9A66C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABF738(a1, a2, a3, qword_256EBD298, (void (*)(uint64_t))type metadata accessor for TranscriptProtoToolParameterValueEnum);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoToolParameterValueEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23FB2EB1C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for TranscriptProtoToolParameterValueEnum(uint64_t a1)
{
  uint64_t v2;

  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_bridgeObjectRelease();
  v2 = sub_23FB2EB1C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

_QWORD *initializeWithCopy for TranscriptProtoToolParameterValueEnum(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_23FB2EB1C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoToolParameterValueEnum(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoToolParameterValueEnum);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_23FB2EB1C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for TranscriptProtoToolParameterValueEnum(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_23FB2EB1C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for TranscriptProtoToolParameterValueEnum(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoToolParameterValueEnum);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23FB2EB1C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23FA9A9FC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FB2EB1C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoEntitySpanMatchResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoEntitySpanMatchResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoToolRetrievalResponse()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA9AA9C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6F08A0();
  if (v1)
  {
    sub_23F6F083C(*(_QWORD *)(v0 + 8));
    sub_23F694C84();
  }
  else
  {
    sub_23F6B53A4();
    sub_23FAC3508();
    v3 = sub_23F6F08CC(v2);
    sub_23F6F07D0(v3, v4, v5);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoToolRetrievalResponse()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA9AAF0()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6F0850();
  if (v0)
  {
    sub_23F6F0B1C();
    sub_23F694C84();
  }
  else
  {
    sub_23F6B53A4();
    sub_23FAC3534();
    v2 = sub_23F6F082C(v1);
    sub_23F6F07C4(v2, v3, v4, v5);
  }
}

void sub_23FA9AB2C()
{
  sub_23FA9AB4C();
}

void sub_23FA9AB4C()
{
  unint64_t v0;

  sub_23F6F0B14();
  if (v0 <= 0x3F)
  {
    sub_23FAC3DDC();
    sub_23FAC3E60();
    swift_initStructMetadata();
    sub_23F6F0BFC();
  }
  sub_23FAC3E0C();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoSystemResponse(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  int *v78;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[7];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    a1[4] = a2[4];
    v12 = type metadata accessor for TranscriptProtoStatementOutcome(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12))
    {
      v13 = sub_23F6916B8(&qword_256EA7E70);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v15 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v15))
      {
        v17 = (char *)&loc_23FA9ACF0 + 4 * byte_23FB8C0FA[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v16 = sub_23F6916B8(&qword_256EA7FF8);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      v18 = *(int *)(v12 + 20);
      v19 = &v10[v18];
      v20 = &v11[v18];
      v21 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v10, 0, 1, v12);
    }
    v22 = v6[8];
    v23 = (uint64_t *)((char *)v4 + v22);
    v24 = (uint64_t *)((char *)a2 + v22);
    v25 = (int *)type metadata accessor for TranscriptProtoResponseOutput(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v24, 1, (uint64_t)v25))
    {
      v26 = sub_23F6916B8(&qword_256EB2570);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v78 = v6;
      *v23 = *v24;
      *((_BYTE *)v23 + 8) = *((_BYTE *)v24 + 8);
      v23[2] = v24[2];
      v27 = v25[7];
      v28 = (char *)v23 + v27;
      v29 = (char *)v24 + v27;
      v30 = type metadata accessor for TranscriptProtoDialogType(0);
      swift_bridgeObjectRetain();
      v31 = v30;
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v29, 1, v30))
      {
        v32 = sub_23F6916B8(&qword_256EA85E8);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        v33 = type metadata accessor for TranscriptProtoDialogFormat(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v29, 1, v33))
        {
          v35 = (char *)&loc_23FA9B7F8 + 4 * byte_23FB8C105[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v34 = sub_23F6916B8(&qword_256EB2060);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        v36 = *(int *)(v30 + 20);
        v37 = &v28[v36];
        v38 = &v29[v36];
        v39 = sub_23FB2D718();
        v40 = v37;
        v31 = v30;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v40, v38, v39);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v28, 0, 1, v30);
      }
      v41 = v25[8];
      v42 = (char *)v23 + v41;
      v43 = (char *)v24 + v41;
      v6 = v78;
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v24 + v41, 1, v31))
      {
        v44 = sub_23F6916B8(&qword_256EA85E8);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        v45 = type metadata accessor for TranscriptProtoDialogFormat(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v43, 1, v45))
        {
          v47 = (char *)&loc_23FA9B9DC + 4 * byte_23FB8C10A[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v46 = sub_23F6916B8(&qword_256EB2060);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        v48 = *(int *)(v31 + 20);
        v49 = v31;
        v50 = &v42[v48];
        v51 = &v43[v48];
        v52 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v50, v51, v52);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v42, 0, 1, v49);
      }
      v53 = v25[9];
      v54 = (char *)v23 + v53;
      v55 = (char *)v24 + v53;
      v56 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v54, v55, v56);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v23, 0, 1, (uint64_t)v25);
    }
    v57 = v6[9];
    v58 = (uint64_t *)((char *)v4 + v57);
    v59 = (uint64_t *)((char *)a2 + v57);
    v60 = type metadata accessor for TranscriptProtoStatementID(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v59, 1, v60))
    {
      v61 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v58 = *(_DWORD *)v59;
      v62 = v59[2];
      v58[1] = v59[1];
      v58[2] = v62;
      v63 = *(int *)(v60 + 24);
      v64 = (char *)v58 + v63;
      v65 = (char *)v59 + v63;
      v66 = sub_23FB2D718();
      v67 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 16);
      swift_bridgeObjectRetain();
      v67(v64, v65, v66);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v58, 0, 1, v60);
    }
    v68 = v6[10];
    v69 = v6[11];
    v70 = (uint64_t *)((char *)v4 + v68);
    v71 = (uint64_t *)((char *)a2 + v68);
    v72 = v71[1];
    *v70 = *v71;
    v70[1] = v72;
    v73 = (char *)v4 + v69;
    v74 = (char *)a2 + v69;
    v75 = sub_23FB2D718();
    v76 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 16);
    swift_bridgeObjectRetain();
    v76(v73, v74, v75);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoSystemResponse(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int EnumCaseMultiPayload;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[7];
  v5 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
  {
    v6 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v6))
    {
LABEL_47:
      v45 = v4 + *(int *)(v5 + 20);
      v46 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v45, v46);
      goto LABEL_48;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        v8 = v4 + v7[6];
        v9 = sub_23FB2EB1C();
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v9))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
        v10 = v4 + v7[7];
        v11 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v10, 1, v11))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v12 = v10 + *(int *)(v11 + 28);
          v13 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
        }
        v14 = v7[8];
        goto LABEL_46;
      case 1u:
        swift_bridgeObjectRelease();
        v15 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        goto LABEL_45;
      case 2u:
        swift_bridgeObjectRelease();
        v15 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
        goto LABEL_45;
      case 3u:
        swift_bridgeObjectRelease();
        v16 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        goto LABEL_14;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v14 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        goto LABEL_46;
      case 5u:
        swift_bridgeObjectRelease();
        v16 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_14:
        v17 = v16;
        v18 = v4 + *(int *)(v16 + 24);
        v19 = sub_23FB2EB1C();
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v18, 1, v19))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
        v14 = *(int *)(v17 + 28);
        goto LABEL_46;
      case 6u:
        swift_bridgeObjectRelease();
        v20 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        v21 = v4 + *(int *)(v20 + 20);
        v22 = sub_23FB2EB1C();
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v21, 1, v22))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
        v14 = *(int *)(v20 + 24);
        goto LABEL_46;
      case 7u:
        v23 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v23))goto LABEL_44;
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 2)
        {
          if (EnumCaseMultiPayload == 1)
          {
            v25 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
          }
          else
          {
            if (EnumCaseMultiPayload)
              goto LABEL_44;
            v25 = type metadata accessor for TranscriptProtoAppRequirement(0);
          }
LABEL_43:
          v41 = v4 + *(int *)(v25 + 20);
          v42 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v41, v42);
LABEL_44:
          v15 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_45:
          v14 = *(int *)(v15 + 20);
LABEL_46:
          v43 = v4 + v14;
          v44 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v43, v44);
          goto LABEL_47;
        }
        v33 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v33))goto LABEL_42;
        v34 = swift_getEnumCaseMultiPayload();
        if (v34 == 1)
        {
          v36 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v36))
          {
            v37 = v4 + *(int *)(v36 + 20);
            v38 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
          }
          v35 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
        }
        else
        {
          if (v34)
          {
LABEL_42:
            v25 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
            goto LABEL_43;
          }
          swift_bridgeObjectRelease();
          v35 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
        }
        v39 = v4 + *(int *)(v35 + 20);
        v40 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
        goto LABEL_42;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v14 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        goto LABEL_46;
      case 9u:
        v26 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v26))
        {
          v27 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v27))
          {
            v28 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 16, v28))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v29 = v4 + *(int *)(v28 + 28);
              v30 = sub_23FB2D718();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
            }
          }
          v31 = v4 + *(int *)(v26 + 20);
          v32 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
        }
        v15 = type metadata accessor for TranscriptProtoActionFailure(0);
        goto LABEL_45;
      case 0xAu:
        swift_bridgeObjectRelease();
        v15 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
        goto LABEL_45;
      default:
        goto LABEL_47;
    }
  }
LABEL_48:
  v47 = a1 + a2[8];
  v48 = (int *)type metadata accessor for TranscriptProtoResponseOutput(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v47, 1, (uint64_t)v48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v49 = v47 + v48[7];
    v50 = type metadata accessor for TranscriptProtoDialogType(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v49, 1, v50))
    {
      v51 = type metadata accessor for TranscriptProtoDialogFormat(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v49, 1, v51))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            swift_bridgeObjectRelease();
            v53 = type metadata accessor for TranscriptProtoStaticText(0);
            goto LABEL_56;
          case 1u:
            swift_bridgeObjectRelease();
            v53 = type metadata accessor for TranscriptProtoSonicText(0);
            goto LABEL_56;
          case 2u:
            swift_bridgeObjectRelease();
            v53 = type metadata accessor for TranscriptProtoGeneratedText(0);
LABEL_56:
            v54 = v49 + *(int *)(v53 + 20);
            v55 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8))(v54, v55);
            break;
          case 3u:
          case 4u:
            v52 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v49, v52);
            break;
          default:
            break;
        }
      }
      v56 = v49 + *(int *)(v50 + 20);
      v57 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v56, v57);
    }
    v58 = v47 + v48[8];
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v58, 1, v50))
    {
      v59 = type metadata accessor for TranscriptProtoDialogFormat(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v58, 1, v59))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            swift_bridgeObjectRelease();
            v61 = type metadata accessor for TranscriptProtoStaticText(0);
            goto LABEL_65;
          case 1u:
            swift_bridgeObjectRelease();
            v61 = type metadata accessor for TranscriptProtoSonicText(0);
            goto LABEL_65;
          case 2u:
            swift_bridgeObjectRelease();
            v61 = type metadata accessor for TranscriptProtoGeneratedText(0);
LABEL_65:
            v62 = v58 + *(int *)(v61 + 20);
            v63 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v62, v63);
            break;
          case 3u:
          case 4u:
            v60 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 8))(v58, v60);
            break;
          default:
            break;
        }
      }
      v64 = v58 + *(int *)(v50 + 20);
      v65 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 8))(v64, v65);
    }
    v66 = v47 + v48[9];
    v67 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 8))(v66, v67);
  }
  v68 = a1 + a2[9];
  v69 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v68, 1, v69))
  {
    swift_bridgeObjectRelease();
    v70 = v68 + *(int *)(v69 + 24);
    v71 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 8))(v70, v71);
  }
  swift_bridgeObjectRelease();
  v72 = a1 + a2[11];
  v73 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 8))(v72, v73);
}

_QWORD *initializeWithCopy for TranscriptProtoSystemResponse(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  a1[4] = a2[4];
  v8 = a3[7];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F6916B8(&qword_256EA7E70);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v13))
    {
      v15 = (char *)&loc_23FA9C56C + 4 * byte_23FB8C124[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v14 = sub_23F6916B8(&qword_256EA7FF8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    v16 = *(int *)(v11 + 20);
    v17 = &v9[v16];
    v18 = &v10[v16];
    v19 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
  }
  v20 = a3[8];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  v23 = (int *)type metadata accessor for TranscriptProtoResponseOutput(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, (uint64_t)v23))
  {
    v24 = sub_23F6916B8(&qword_256EB2570);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    *v21 = *v22;
    *((_BYTE *)v21 + 8) = *((_BYTE *)v22 + 8);
    v21[2] = v22[2];
    v25 = v23[7];
    v26 = (char *)v21 + v25;
    v27 = (char *)v22 + v25;
    v28 = type metadata accessor for TranscriptProtoDialogType(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v27, 1, v28))
    {
      v29 = sub_23F6916B8(&qword_256EA85E8);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v30 = type metadata accessor for TranscriptProtoDialogFormat(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v27, 1, v30))
      {
        v32 = (char *)&loc_23FA9CB48 + 4 * byte_23FB8C12F[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v31 = sub_23F6916B8(&qword_256EB2060);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      v33 = *(int *)(v28 + 20);
      v34 = &v26[v33];
      v35 = &v27[v33];
      v36 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v26, 0, 1, v28);
    }
    v37 = v23[8];
    v38 = (char *)v21 + v37;
    v39 = (char *)v22 + v37;
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22 + v37, 1, v28))
    {
      v40 = sub_23F6916B8(&qword_256EA85E8);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      v41 = type metadata accessor for TranscriptProtoDialogFormat(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v39, 1, v41))
      {
        v43 = (char *)&loc_23FA9CD10 + 4 * byte_23FB8C134[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v42 = sub_23F6916B8(&qword_256EB2060);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      v44 = *(int *)(v28 + 20);
      v45 = &v38[v44];
      v46 = &v39[v44];
      v47 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v38, 0, 1, v28);
    }
    v48 = v23[9];
    v49 = (char *)v21 + v48;
    v50 = (char *)v22 + v48;
    v51 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v21, 0, 1, (uint64_t)v23);
  }
  v52 = a3[9];
  v53 = (_QWORD *)((char *)a1 + v52);
  v54 = (_QWORD *)((char *)a2 + v52);
  v55 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v54, 1, v55))
  {
    v56 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v53 = *(_DWORD *)v54;
    v57 = v54[2];
    v53[1] = v54[1];
    v53[2] = v57;
    v58 = *(int *)(v55 + 24);
    v59 = (char *)v53 + v58;
    v60 = (char *)v54 + v58;
    v61 = sub_23FB2D718();
    v62 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16);
    swift_bridgeObjectRetain();
    v62(v59, v60, v61);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v53, 0, 1, v55);
  }
  v63 = a3[10];
  v64 = a3[11];
  v65 = (_QWORD *)((char *)a1 + v63);
  v66 = (_QWORD *)((char *)a2 + v63);
  v67 = v66[1];
  *v65 = *v66;
  v65[1] = v67;
  v68 = (char *)a1 + v64;
  v69 = (char *)a2 + v64;
  v70 = sub_23FB2D718();
  v71 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16);
  swift_bridgeObjectRetain();
  v71(v68, v69, v70);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoSystemResponse(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  int v34;
  int v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  int v55;
  int v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  int v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  int v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  uint64_t v114;
  int v115;
  int v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  void (*v121)(char *, char *, uint64_t);
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  _QWORD *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  int *v139;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[7];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (v11)
    {
      sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoStatementOutcome);
      goto LABEL_7;
    }
    v15 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v15);
    v17 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v15);
    if (v16)
    {
      if (!v17)
      {
        v18 = (char *)&loc_23FA9D6AC + 4 * word_23FB8C144[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v17)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
          v21 = (char *)&loc_23FA9D830 + 4 * word_23FB8C15A[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_17;
      }
      sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    }
    v20 = sub_23F6916B8(&qword_256EA7FF8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
LABEL_17:
    v26 = *(int *)(v9 + 20);
    v27 = &v7[v26];
    v28 = &v8[v26];
    v29 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v27, v28, v29);
    goto LABEL_18;
  }
  if (v11)
  {
LABEL_7:
    v14 = sub_23F6916B8(&qword_256EA7E70);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_18;
  }
  v12 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v12))
  {
    v19 = (char *)&loc_23FA9D748 + 4 * byte_23FB8C139[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v13 = sub_23F6916B8(&qword_256EA7FF8);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  v22 = *(int *)(v9 + 20);
  v23 = &v7[v22];
  v24 = &v8[v22];
  v25 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_18:
  v30 = a3[8];
  v31 = (uint64_t)a1 + v30;
  v32 = (uint64_t)a2 + v30;
  v33 = (int *)type metadata accessor for TranscriptProtoResponseOutput(0);
  v34 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v31, 1, (uint64_t)v33);
  v35 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v32, 1, (uint64_t)v33);
  if (!v34)
  {
    if (v35)
    {
      sub_23F93DADC(v31, type metadata accessor for TranscriptProtoResponseOutput);
      goto LABEL_24;
    }
    v139 = a3;
    *(_QWORD *)v31 = *(_QWORD *)v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v31 + 8) = *(_BYTE *)(v32 + 8);
    *(_QWORD *)(v31 + 16) = *(_QWORD *)(v32 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v42 = v33[7];
    v43 = (char *)(v31 + v42);
    v44 = (char *)(v32 + v42);
    v45 = type metadata accessor for TranscriptProtoDialogType(0);
    v46 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v43, 1, v45);
    v47 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v44, 1, v45);
    if (v46)
    {
      if (!v47)
      {
        v48 = type metadata accessor for TranscriptProtoDialogFormat(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v44, 1, v48))
        {
          v58 = (char *)&loc_23FA9FBC4 + 4 * word_23FB8C17A[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v49 = sub_23F6916B8(&qword_256EB2060);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        v80 = *(int *)(v45 + 20);
        v81 = &v43[v80];
        v82 = &v44[v80];
        v83 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(v81, v82, v83);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v43, 0, 1, v45);
LABEL_51:
        v88 = v33[8];
        v89 = (char *)(v31 + v88);
        v90 = (char *)(v32 + v88);
        v91 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v31 + v88, 1, v45);
        v92 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v90, 1, v45);
        if (v91)
        {
          if (!v92)
          {
            v93 = type metadata accessor for TranscriptProtoDialogFormat(0);
            if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v90, 1, v93))
            {
              v100 = (char *)&loc_23FAA048C + 4 * byte_23FB8C193[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v94 = sub_23F6916B8(&qword_256EB2060);
            memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
            v103 = *(int *)(v45 + 20);
            v104 = &v89[v103];
            v105 = &v90[v103];
            v106 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 16))(v104, v105, v106);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v89, 0, 1, v45);
            goto LABEL_67;
          }
LABEL_57:
          v95 = sub_23F6916B8(&qword_256EA85E8);
          memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
LABEL_67:
          a3 = v139;
LABEL_68:
          v107 = v33[9];
          v108 = v31 + v107;
          v109 = v32 + v107;
          v110 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 24))(v108, v109, v110);
          goto LABEL_69;
        }
        if (v92)
        {
          sub_23F93DADC((uint64_t)v89, type metadata accessor for TranscriptProtoDialogType);
          goto LABEL_57;
        }
        v96 = type metadata accessor for TranscriptProtoDialogFormat(0);
        v97 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v89, 1, v96);
        v98 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v90, 1, v96);
        if (v97)
        {
          if (!v98)
          {
            v99 = (char *)&loc_23FAA043C + 4 * word_23FB8C198[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
        }
        else
        {
          if (!v98)
          {
            a3 = v139;
            if (a1 != a2)
            {
              sub_23F93DADC((uint64_t)v89, type metadata accessor for TranscriptProtoDialogFormat);
              v102 = (char *)&loc_23FAA0530 + 4 * word_23FB8C1A2[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            goto LABEL_77;
          }
          sub_23F93DADC((uint64_t)v89, type metadata accessor for TranscriptProtoDialogFormat);
        }
        v101 = sub_23F6916B8(&qword_256EB2060);
        memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
        a3 = v139;
LABEL_77:
        v135 = *(int *)(v45 + 20);
        v136 = &v89[v135];
        v137 = &v90[v135];
        v138 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v138 - 8) + 24))(v136, v137, v138);
        goto LABEL_68;
      }
LABEL_33:
      v52 = sub_23F6916B8(&qword_256EA85E8);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      goto LABEL_51;
    }
    if (v47)
    {
      sub_23F93DADC((uint64_t)v43, type metadata accessor for TranscriptProtoDialogType);
      goto LABEL_33;
    }
    v54 = type metadata accessor for TranscriptProtoDialogFormat(0);
    v55 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v43, 1, v54);
    v56 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v44, 1, v54);
    if (v55)
    {
      if (!v56)
      {
        v57 = (char *)&loc_23FA9FB74 + 4 * word_23FB8C184[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v56)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)v43, type metadata accessor for TranscriptProtoDialogFormat);
          v79 = (char *)&loc_23FA9FF90 + 4 * byte_23FB8C18E[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_50;
      }
      sub_23F93DADC((uint64_t)v43, type metadata accessor for TranscriptProtoDialogFormat);
    }
    v59 = sub_23F6916B8(&qword_256EB2060);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
LABEL_50:
    v84 = *(int *)(v45 + 20);
    v85 = &v43[v84];
    v86 = &v44[v84];
    v87 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 24))(v85, v86, v87);
    goto LABEL_51;
  }
  if (v35)
  {
LABEL_24:
    v41 = sub_23F6916B8(&qword_256EB2570);
    memcpy((void *)v31, (const void *)v32, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_69;
  }
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *(_BYTE *)(v31 + 8) = *(_BYTE *)(v32 + 8);
  *(_QWORD *)(v31 + 16) = *(_QWORD *)(v32 + 16);
  v36 = v33[7];
  v37 = (char *)(v31 + v36);
  v38 = (char *)(v32 + v36);
  v39 = type metadata accessor for TranscriptProtoDialogType(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v38, 1, v39))
  {
    v40 = sub_23F6916B8(&qword_256EA85E8);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    v50 = type metadata accessor for TranscriptProtoDialogFormat(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v38, 1, v50))
    {
      v53 = (char *)&loc_23FA9FAF0 + 4 * byte_23FB8C170[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v51 = sub_23F6916B8(&qword_256EB2060);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    v60 = *(int *)(v39 + 20);
    v61 = &v37[v60];
    v62 = &v38[v60];
    v63 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v37, 0, 1, v39);
  }
  v64 = v33[8];
  v65 = (char *)(v31 + v64);
  v66 = (char *)(v32 + v64);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v32 + v64, 1, v39))
  {
    v67 = sub_23F6916B8(&qword_256EA85E8);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
  }
  else
  {
    v68 = type metadata accessor for TranscriptProtoDialogFormat(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v66, 1, v68))
    {
      v70 = (char *)&loc_23FA9FDE0 + 4 * byte_23FB8C175[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v69 = sub_23F6916B8(&qword_256EB2060);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    v71 = *(int *)(v39 + 20);
    v72 = &v65[v71];
    v73 = &v66[v71];
    v74 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 16))(v72, v73, v74);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v65, 0, 1, v39);
  }
  v75 = v33[9];
  v76 = v31 + v75;
  v77 = v32 + v75;
  v78 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(v76, v77, v78);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v31, 0, 1, (uint64_t)v33);
LABEL_69:
  v111 = a3[9];
  v112 = (_QWORD *)((char *)a1 + v111);
  v113 = (_QWORD *)((char *)a2 + v111);
  v114 = type metadata accessor for TranscriptProtoStatementID(0);
  v115 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v112, 1, v114);
  v116 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v113, 1, v114);
  if (!v115)
  {
    if (!v116)
    {
      *(_DWORD *)v112 = *(_DWORD *)v113;
      v112[1] = v113[1];
      v112[2] = v113[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v131 = *(int *)(v114 + 24);
      v132 = (char *)v112 + v131;
      v133 = (char *)v113 + v131;
      v134 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 24))(v132, v133, v134);
      goto LABEL_75;
    }
    sub_23F93DADC((uint64_t)v112, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_74;
  }
  if (v116)
  {
LABEL_74:
    v122 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
    goto LABEL_75;
  }
  *(_DWORD *)v112 = *(_DWORD *)v113;
  v112[1] = v113[1];
  v112[2] = v113[2];
  v117 = *(int *)(v114 + 24);
  v118 = (char *)v112 + v117;
  v119 = (char *)v113 + v117;
  v120 = sub_23FB2D718();
  v121 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 16);
  swift_bridgeObjectRetain();
  v121(v118, v119, v120);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v112, 0, 1, v114);
LABEL_75:
  v123 = a3[10];
  v124 = (_QWORD *)((char *)a1 + v123);
  v125 = (_QWORD *)((char *)a2 + v123);
  *v124 = *v125;
  v124[1] = v125[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v126 = a3[11];
  v127 = (char *)a1 + v126;
  v128 = (char *)a2 + v126;
  v129 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v129 - 8) + 24))(v127, v128, v129);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoSystemResponse(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _DWORD *v51;
  _DWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = a3[7];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA7E70);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v11))
    {
      v13 = (char *)&loc_23FAA0BB4 + 4 * byte_23FB8C1AC[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v12 = sub_23F6916B8(&qword_256EA7FF8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    v14 = *(int *)(v9 + 20);
    v15 = &v7[v14];
    v16 = &v8[v14];
    v17 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v18 = a3[8];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  v21 = (int *)type metadata accessor for TranscriptProtoResponseOutput(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, (uint64_t)v21))
  {
    v22 = sub_23F6916B8(&qword_256EB2570);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    *v19 = *v20;
    *((_BYTE *)v19 + 8) = *((_BYTE *)v20 + 8);
    v19[2] = v20[2];
    v23 = v21[7];
    v24 = (char *)v19 + v23;
    v25 = (char *)v20 + v23;
    v26 = type metadata accessor for TranscriptProtoDialogType(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v25, 1, v26))
    {
      v27 = sub_23F6916B8(&qword_256EA85E8);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      v28 = type metadata accessor for TranscriptProtoDialogFormat(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v25, 1, v28))
      {
        v30 = (char *)&loc_23FAA1598 + 4 * byte_23FB8C1B7[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v29 = sub_23F6916B8(&qword_256EB2060);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      v31 = *(int *)(v26 + 20);
      v32 = &v24[v31];
      v33 = &v25[v31];
      v34 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v26);
    }
    v35 = v21[8];
    v36 = (char *)v19 + v35;
    v37 = (char *)v20 + v35;
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20 + v35, 1, v26))
    {
      v38 = sub_23F6916B8(&qword_256EA85E8);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      v39 = type metadata accessor for TranscriptProtoDialogFormat(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v37, 1, v39))
      {
        v41 = (char *)&loc_23FAA1734 + 4 * byte_23FB8C1BC[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v40 = sub_23F6916B8(&qword_256EB2060);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      v42 = *(int *)(v26 + 20);
      v43 = &v36[v42];
      v44 = &v37[v42];
      v45 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v36, 0, 1, v26);
    }
    v46 = v21[9];
    v47 = (char *)v19 + v46;
    v48 = (char *)v20 + v46;
    v49 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v19, 0, 1, (uint64_t)v21);
  }
  v50 = a3[9];
  v51 = (_DWORD *)(a1 + v50);
  v52 = (_DWORD *)(a2 + v50);
  v53 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v52, 1, v53))
  {
    v54 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    *v51 = *v52;
    *(_OWORD *)(v51 + 2) = *(_OWORD *)(v52 + 2);
    v55 = *(int *)(v53 + 24);
    v56 = (char *)v51 + v55;
    v57 = (char *)v52 + v55;
    v58 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v51, 0, 1, v53);
  }
  v59 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  v60 = a1 + v59;
  v61 = a2 + v59;
  v62 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v60, v61, v62);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoSystemResponse(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  int v36;
  int v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  int v57;
  int v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  int v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  int v100;
  int *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  int v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  void *v144;
  int *v145;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  v7 = a2[4];
  a1[3] = a2[3];
  a1[4] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[7];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v11);
  v13 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11);
  if (!v12)
  {
    if (v13)
    {
      sub_23F93DADC((uint64_t)v9, type metadata accessor for TranscriptProtoStatementOutcome);
      goto LABEL_7;
    }
    v17 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    v18 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v17);
    v19 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v17);
    if (v18)
    {
      if (!v19)
      {
        v20 = (char *)&loc_23FAA1AD4 + 4 * word_23FB8C1CC[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v19)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)v9, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
          v23 = (char *)&loc_23FAA1C48 + 4 * word_23FB8C1E2[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_17;
      }
      sub_23F93DADC((uint64_t)v9, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    }
    v22 = sub_23F6916B8(&qword_256EA7FF8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
LABEL_17:
    v28 = *(int *)(v11 + 20);
    v29 = &v9[v28];
    v30 = &v10[v28];
    v31 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 40))(v29, v30, v31);
    goto LABEL_18;
  }
  if (v13)
  {
LABEL_7:
    v16 = sub_23F6916B8(&qword_256EA7E70);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_18;
  }
  v14 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v14))
  {
    v21 = (char *)&loc_23FAA1B68 + 4 * byte_23FB8C1C1[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v15 = sub_23F6916B8(&qword_256EA7FF8);
  memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  v24 = *(int *)(v11 + 20);
  v25 = &v9[v24];
  v26 = &v10[v24];
  v27 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
LABEL_18:
  v32 = a3[8];
  v33 = (uint64_t)a1 + v32;
  v34 = (uint64_t)a2 + v32;
  v35 = (int *)type metadata accessor for TranscriptProtoResponseOutput(0);
  v36 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v33, 1, (uint64_t)v35);
  v37 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v34, 1, (uint64_t)v35);
  if (!v36)
  {
    if (v37)
    {
      sub_23F93DADC(v33, type metadata accessor for TranscriptProtoResponseOutput);
      goto LABEL_24;
    }
    *(_QWORD *)v33 = *(_QWORD *)v34;
    swift_bridgeObjectRelease();
    *(_BYTE *)(v33 + 8) = *(_BYTE *)(v34 + 8);
    *(_QWORD *)(v33 + 16) = *(_QWORD *)(v34 + 16);
    swift_bridgeObjectRelease();
    v44 = v35[7];
    v45 = (char *)(v33 + v44);
    v46 = (char *)(v34 + v44);
    v47 = type metadata accessor for TranscriptProtoDialogType(0);
    v48 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v45, 1, v47);
    v49 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v46, 1, v47);
    if (v48)
    {
      if (!v49)
      {
        v50 = type metadata accessor for TranscriptProtoDialogFormat(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v46, 1, v50))
        {
          v60 = (char *)&loc_23FAA3A94 + 4 * byte_23FB8C202[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v51 = sub_23F6916B8(&qword_256EB2060);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        v82 = *(int *)(v47 + 20);
        v83 = &v45[v82];
        v84 = &v46[v82];
        v85 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 32))(v83, v84, v85);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v45, 0, 1, v47);
LABEL_51:
        v90 = v35[8];
        v91 = (char *)(v33 + v90);
        v92 = (char *)(v34 + v90);
        v93 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v33 + v90, 1, v47);
        v94 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v92, 1, v47);
        if (v93)
        {
          if (!v94)
          {
            v95 = type metadata accessor for TranscriptProtoDialogFormat(0);
            if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v92, 1, v95))
            {
              v103 = (char *)&loc_23FAA4230 + 4 * byte_23FB8C217[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v96 = sub_23F6916B8(&qword_256EB2060);
            memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
            v106 = *(int *)(v47 + 20);
            v107 = &v91[v106];
            v108 = &v92[v106];
            v109 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 32))(v107, v108, v109);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v91, 0, 1, v47);
            goto LABEL_68;
          }
          goto LABEL_57;
        }
        if (v94)
        {
          sub_23F93DADC((uint64_t)v91, type metadata accessor for TranscriptProtoDialogType);
LABEL_57:
          v97 = sub_23F6916B8(&qword_256EA85E8);
          memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
LABEL_68:
          v114 = v35[9];
          v115 = v33 + v114;
          v116 = v34 + v114;
          v117 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 40))(v115, v116, v117);
          goto LABEL_69;
        }
        v145 = (int *)v47;
        v98 = type metadata accessor for TranscriptProtoDialogFormat(0);
        v99 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v91, 1, v98);
        v100 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v92, 1, v98);
        if (v99)
        {
          v101 = v145;
          if (!v100)
          {
            v102 = (char *)&loc_23FAA41E4 + 4 * byte_23FB8C21C[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
        }
        else
        {
          v101 = v145;
          if (!v100)
          {
            if (a1 != a2)
            {
              sub_23F93DADC((uint64_t)v91, type metadata accessor for TranscriptProtoDialogFormat);
              v105 = (char *)&loc_23FAA42CC + 4 * byte_23FB8C221[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            goto LABEL_67;
          }
          sub_23F93DADC((uint64_t)v91, type metadata accessor for TranscriptProtoDialogFormat);
        }
        v104 = sub_23F6916B8(&qword_256EB2060);
        memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
LABEL_67:
        v110 = v101[5];
        v111 = &v91[v110];
        v112 = &v92[v110];
        v113 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 40))(v111, v112, v113);
        goto LABEL_68;
      }
LABEL_33:
      v54 = sub_23F6916B8(&qword_256EA85E8);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      goto LABEL_51;
    }
    if (v49)
    {
      sub_23F93DADC((uint64_t)v45, type metadata accessor for TranscriptProtoDialogType);
      goto LABEL_33;
    }
    v144 = (void *)v47;
    v56 = type metadata accessor for TranscriptProtoDialogFormat(0);
    v57 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v45, 1, v56);
    v58 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v46, 1, v56);
    if (v57)
    {
      v47 = (uint64_t)v144;
      if (!v58)
      {
        v59 = (char *)&loc_23FAA3A48 + 4 * word_23FB8C208[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      v47 = (uint64_t)v144;
      if (!v58)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)v45, type metadata accessor for TranscriptProtoDialogFormat);
          v81 = (char *)&loc_23FAA3DD8 + 4 * byte_23FB8C212[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_50;
      }
      sub_23F93DADC((uint64_t)v45, type metadata accessor for TranscriptProtoDialogFormat);
    }
    v61 = sub_23F6916B8(&qword_256EB2060);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
LABEL_50:
    v86 = *(int *)(v47 + 20);
    v87 = &v45[v86];
    v88 = &v46[v86];
    v89 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 40))(v87, v88, v89);
    goto LABEL_51;
  }
  if (v37)
  {
LABEL_24:
    v43 = sub_23F6916B8(&qword_256EB2570);
    memcpy((void *)v33, (const void *)v34, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_69;
  }
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *(_BYTE *)(v33 + 8) = *(_BYTE *)(v34 + 8);
  *(_QWORD *)(v33 + 16) = *(_QWORD *)(v34 + 16);
  v38 = v35[7];
  v39 = (char *)(v33 + v38);
  v40 = (char *)(v34 + v38);
  v41 = type metadata accessor for TranscriptProtoDialogType(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v40, 1, v41))
  {
    v42 = sub_23F6916B8(&qword_256EA85E8);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    v52 = type metadata accessor for TranscriptProtoDialogFormat(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v40, 1, v52))
    {
      v55 = (char *)&loc_23FAA39B8 + 4 * byte_23FB8C1F8[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v53 = sub_23F6916B8(&qword_256EB2060);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    v62 = *(int *)(v41 + 20);
    v63 = &v39[v62];
    v64 = &v40[v62];
    v65 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v63, v64, v65);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v39, 0, 1, v41);
  }
  v66 = v35[8];
  v67 = (char *)(v33 + v66);
  v68 = (char *)(v34 + v66);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v34 + v66, 1, v41))
  {
    v69 = sub_23F6916B8(&qword_256EA85E8);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
  }
  else
  {
    v70 = type metadata accessor for TranscriptProtoDialogFormat(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v68, 1, v70))
    {
      v72 = (char *)&loc_23FAA3C6C + 4 * byte_23FB8C1FD[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v71 = sub_23F6916B8(&qword_256EB2060);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    v73 = *(int *)(v41 + 20);
    v74 = &v67[v73];
    v75 = &v68[v73];
    v76 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(v74, v75, v76);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v67, 0, 1, v41);
  }
  v77 = v35[9];
  v78 = v33 + v77;
  v79 = v34 + v77;
  v80 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v78, v79, v80);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v33, 0, 1, (uint64_t)v35);
LABEL_69:
  v118 = a3[9];
  v119 = (uint64_t)a1 + v118;
  v120 = (uint64_t)a2 + v118;
  v121 = type metadata accessor for TranscriptProtoStatementID(0);
  v122 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v119, 1, v121);
  v123 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v120, 1, v121);
  if (!v122)
  {
    if (!v123)
    {
      *(_DWORD *)v119 = *(_DWORD *)v120;
      v139 = *(_QWORD *)(v120 + 16);
      *(_QWORD *)(v119 + 8) = *(_QWORD *)(v120 + 8);
      *(_QWORD *)(v119 + 16) = v139;
      swift_bridgeObjectRelease();
      v140 = *(int *)(v121 + 24);
      v141 = v119 + v140;
      v142 = v120 + v140;
      v143 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v143 - 8) + 40))(v141, v142, v143);
      goto LABEL_75;
    }
    sub_23F93DADC(v119, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_74;
  }
  if (v123)
  {
LABEL_74:
    v128 = sub_23F6916B8(&qword_256EA25E0);
    memcpy((void *)v119, (const void *)v120, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
    goto LABEL_75;
  }
  *(_DWORD *)v119 = *(_DWORD *)v120;
  *(_OWORD *)(v119 + 8) = *(_OWORD *)(v120 + 8);
  v124 = *(int *)(v121 + 24);
  v125 = v119 + v124;
  v126 = v120 + v124;
  v127 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v127 - 8) + 32))(v125, v126, v127);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v119, 0, 1, v121);
LABEL_75:
  v129 = a3[10];
  v130 = (_QWORD *)((char *)a1 + v129);
  v131 = (_QWORD *)((char *)a2 + v129);
  v133 = *v131;
  v132 = v131[1];
  *v130 = v133;
  v130[1] = v132;
  swift_bridgeObjectRelease();
  v134 = a3[11];
  v135 = (char *)a1 + v134;
  v136 = (char *)a2 + v134;
  v137 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v137 - 8) + 40))(v135, v136, v137);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSystemResponse()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FAA476C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F6F08A0();
  if (v1)
  {
    sub_23F6F083C(*(_QWORD *)(v0 + 8));
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A1C();
    sub_23F6916B8(&qword_256EA7E70);
    sub_23F6F07DC();
    if (v1)
    {
      sub_23F6F0AFC();
    }
    else
    {
      sub_23F6916B8(&qword_256EB2570);
      sub_23F6F07DC();
      if (v3)
      {
        sub_23FAC3340();
      }
      else
      {
        sub_23F6916B8(&qword_256EA25E0);
        sub_23F6F07DC();
        if (v4)
        {
          sub_23FAC3508();
        }
        else
        {
          sub_23F6B53A4();
          sub_23FAC3C44();
        }
      }
    }
    v5 = sub_23F6F08CC(v2);
    sub_23F6F07D0(v5, v6, v7);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSystemResponse()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FAA480C()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F6F0850();
  if (v0)
  {
    sub_23F6F0B1C();
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A10();
    sub_23F6916B8(&qword_256EA7E70);
    sub_23F6F07EC();
    if (v0)
    {
      sub_23F6F0BB8();
    }
    else
    {
      sub_23F6916B8(&qword_256EB2570);
      sub_23F6F07EC();
      if (v2)
      {
        sub_23FAC335C();
      }
      else
      {
        sub_23F6916B8(&qword_256EA25E0);
        sub_23F6F07EC();
        if (v3)
        {
          sub_23FAC3534();
        }
        else
        {
          sub_23F6B53A4();
          sub_23FAC3C78();
        }
      }
    }
    v4 = sub_23F6F082C(v1);
    sub_23F6F07C4(v4, v5, v6, v7);
  }
}

void sub_23FAA489C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_23F6DE58C(319, &qword_256EA8088, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementOutcome);
  if (v0 <= 0x3F)
  {
    sub_23F6DE58C(319, qword_256EBD508, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseOutput);
    if (v1 <= 0x3F)
    {
      sub_23F6DE58C(319, qword_256EB5138, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
      if (v2 <= 0x3F)
      {
        sub_23FB2D718();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoInterpretedStatementResult(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoStatementOutcome(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EA7E70);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v10 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v10))
      {
        v12 = (char *)&loc_23FAA4AB4 + 4 * byte_23FB8C226[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v11 = sub_23F6916B8(&qword_256EA7FF8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      v13 = *(int *)(v7 + 20);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v17 = a3[5];
    v18 = (uint64_t *)((char *)a1 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = type metadata accessor for TranscriptProtoStatementID(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, v20))
    {
      v21 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v18 = *(_DWORD *)v19;
      v22 = v19[2];
      v18[1] = v19[1];
      v18[2] = v22;
      v23 = *(int *)(v20 + 24);
      v24 = (char *)v18 + v23;
      v25 = (char *)v19 + v23;
      v26 = sub_23FB2D718();
      v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
      swift_bridgeObjectRetain();
      v27(v24, v25, v26);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v18, 0, 1, v20);
    }
    v28 = a3[6];
    v29 = (uint64_t *)((char *)a1 + v28);
    v30 = (uint64_t *)((char *)a2 + v28);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v28, 1, v20))
    {
      v31 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v29 = *(_DWORD *)v30;
      v32 = v30[2];
      v29[1] = v30[1];
      v29[2] = v32;
      v33 = *(int *)(v20 + 24);
      v34 = (char *)v29 + v33;
      v35 = (char *)v30 + v33;
      v36 = sub_23FB2D718();
      v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
      swift_bridgeObjectRetain();
      v37(v34, v35, v36);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v29, 0, 1, v20);
    }
    v38 = a3[7];
    v39 = a3[8];
    v40 = (uint64_t *)((char *)a1 + v38);
    v41 = (uint64_t *)((char *)a2 + v38);
    v42 = v41[1];
    *v40 = *v41;
    v40[1] = v42;
    v43 = (uint64_t *)((char *)a1 + v39);
    v44 = (uint64_t *)((char *)a2 + v39);
    v45 = v44[1];
    *v43 = *v44;
    v43[1] = v45;
    v46 = a3[9];
    v47 = (uint64_t *)((char *)a1 + v46);
    v48 = (uint64_t *)((char *)a2 + v46);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v48, 1, v20))
    {
      v49 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v47 = *(_DWORD *)v48;
      v50 = v48[2];
      v47[1] = v48[1];
      v47[2] = v50;
      v51 = *(int *)(v20 + 24);
      v52 = (char *)v47 + v51;
      v53 = (char *)v48 + v51;
      v54 = sub_23FB2D718();
      v55 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
      swift_bridgeObjectRetain();
      v55(v52, v53, v54);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v47, 0, 1, v20);
    }
    v56 = a3[10];
    v57 = (char *)a1 + v56;
    v58 = (char *)a2 + v56;
    v59 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoInterpretedStatementResult(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v4 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    v5 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v5))
    {
LABEL_47:
      v44 = a1 + *(int *)(v4 + 20);
      v45 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v44, v45);
      goto LABEL_48;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        v7 = a1 + v6[6];
        v8 = sub_23FB2EB1C();
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v8))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
        v9 = a1 + v6[7];
        v10 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v9, 1, v10))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v11 = v9 + *(int *)(v10 + 28);
          v12 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
        }
        v13 = v6[8];
        goto LABEL_46;
      case 1u:
        swift_bridgeObjectRelease();
        v14 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        goto LABEL_45;
      case 2u:
        swift_bridgeObjectRelease();
        v14 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
        goto LABEL_45;
      case 3u:
        swift_bridgeObjectRelease();
        v15 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        goto LABEL_14;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        goto LABEL_46;
      case 5u:
        swift_bridgeObjectRelease();
        v15 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_14:
        v16 = v15;
        v17 = a1 + *(int *)(v15 + 24);
        v18 = sub_23FB2EB1C();
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v17, 1, v18))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
        v13 = *(int *)(v16 + 28);
        goto LABEL_46;
      case 6u:
        swift_bridgeObjectRelease();
        v19 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        v20 = a1 + *(int *)(v19 + 20);
        v21 = sub_23FB2EB1C();
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v20, 1, v21))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
        v13 = *(int *)(v19 + 24);
        goto LABEL_46;
      case 7u:
        v22 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v22))goto LABEL_44;
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 2)
        {
          if (EnumCaseMultiPayload == 1)
          {
            v24 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
          }
          else
          {
            if (EnumCaseMultiPayload)
              goto LABEL_44;
            v24 = type metadata accessor for TranscriptProtoAppRequirement(0);
          }
LABEL_43:
          v40 = a1 + *(int *)(v24 + 20);
          v41 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);
LABEL_44:
          v14 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_45:
          v13 = *(int *)(v14 + 20);
LABEL_46:
          v42 = a1 + v13;
          v43 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
          goto LABEL_47;
        }
        v32 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v32))goto LABEL_42;
        v33 = swift_getEnumCaseMultiPayload();
        if (v33 == 1)
        {
          v35 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v35))
          {
            v36 = a1 + *(int *)(v35 + 20);
            v37 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v36, v37);
          }
          v34 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
        }
        else
        {
          if (v33)
          {
LABEL_42:
            v24 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
            goto LABEL_43;
          }
          swift_bridgeObjectRelease();
          v34 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
        }
        v38 = a1 + *(int *)(v34 + 20);
        v39 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v38, v39);
        goto LABEL_42;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        goto LABEL_46;
      case 9u:
        v25 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v25))
        {
          v26 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v26))
          {
            v27 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 16, v27))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v28 = a1 + *(int *)(v27 + 28);
              v29 = sub_23FB2D718();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
            }
          }
          v30 = a1 + *(int *)(v25 + 20);
          v31 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
        }
        v14 = type metadata accessor for TranscriptProtoActionFailure(0);
        goto LABEL_45;
      case 0xAu:
        swift_bridgeObjectRelease();
        v14 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
        goto LABEL_45;
      default:
        goto LABEL_47;
    }
  }
LABEL_48:
  v46 = a1 + a2[5];
  v47 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v46, 1, v47))
  {
    swift_bridgeObjectRelease();
    v48 = v46 + *(int *)(v47 + 24);
    v49 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v48, v49);
  }
  v50 = a1 + a2[6];
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v50, 1, v47))
  {
    swift_bridgeObjectRelease();
    v51 = v50 + *(int *)(v47 + 24);
    v52 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v51, v52);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v53 = a1 + a2[9];
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v53, 1, v47))
  {
    swift_bridgeObjectRelease();
    v54 = v53 + *(int *)(v47 + 24);
    v55 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8))(v54, v55);
  }
  v56 = a1 + a2[10];
  v57 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v56, v57);
}

char *initializeWithCopy for TranscriptProtoInterpretedStatementResult(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;

  v6 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA7E70);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v8))
    {
      v10 = (char *)&loc_23FAA5FA8 + 4 * byte_23FB8C23C[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v9 = sub_23F6916B8(&qword_256EA7FF8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    v11 = *(int *)(v6 + 20);
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v15 = a3[5];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v18))
  {
    v19 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v16 = *(_DWORD *)v17;
    v20 = *((_QWORD *)v17 + 2);
    *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
    *((_QWORD *)v16 + 2) = v20;
    v21 = *(int *)(v18 + 24);
    v22 = &v16[v21];
    v23 = &v17[v21];
    v24 = sub_23FB2D718();
    v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
    swift_bridgeObjectRetain();
    v25(v22, v23, v24);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v18);
  }
  v26 = a3[6];
  v27 = &a1[v26];
  v28 = &a2[v26];
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)&a2[v26], 1, v18))
  {
    v29 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v27 = *(_DWORD *)v28;
    v30 = *((_QWORD *)v28 + 2);
    *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
    *((_QWORD *)v27 + 2) = v30;
    v31 = *(int *)(v18 + 24);
    v32 = &v27[v31];
    v33 = &v28[v31];
    v34 = sub_23FB2D718();
    v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
    swift_bridgeObjectRetain();
    v35(v32, v33, v34);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v27, 0, 1, v18);
  }
  v36 = a3[7];
  v37 = a3[8];
  v38 = &a1[v36];
  v39 = &a2[v36];
  v40 = *((_QWORD *)v39 + 1);
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *((_QWORD *)v38 + 1) = v40;
  v41 = &a1[v37];
  v42 = &a2[v37];
  v43 = *((_QWORD *)v42 + 1);
  *(_QWORD *)v41 = *(_QWORD *)v42;
  *((_QWORD *)v41 + 1) = v43;
  v44 = a3[9];
  v45 = &a1[v44];
  v46 = &a2[v44];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v46, 1, v18))
  {
    v47 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v45 = *(_DWORD *)v46;
    v48 = *((_QWORD *)v46 + 2);
    *((_QWORD *)v45 + 1) = *((_QWORD *)v46 + 1);
    *((_QWORD *)v45 + 2) = v48;
    v49 = *(int *)(v18 + 24);
    v50 = &v45[v49];
    v51 = &v46[v49];
    v52 = sub_23FB2D718();
    v53 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16);
    swift_bridgeObjectRetain();
    v53(v50, v51, v52);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v45, 0, 1, v18);
  }
  v54 = a3[10];
  v55 = &a1[v54];
  v56 = &a2[v54];
  v57 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
  return a1;
}

char *assignWithCopy for TranscriptProtoInterpretedStatementResult(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int v42;
  int v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  int v59;
  int v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;

  v6 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoStatementOutcome);
      goto LABEL_7;
    }
    v12 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    v13 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v12);
    v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v12);
    if (v13)
    {
      if (!v14)
      {
        v15 = (char *)&loc_23FAA6EF8 + 4 * word_23FB8C25E[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v14)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
          v18 = (char *)&loc_23FAA7070 + 4 * word_23FB8C274[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_17;
      }
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    }
    v17 = sub_23F6916B8(&qword_256EA7FF8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
LABEL_17:
    v23 = *(int *)(v6 + 20);
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
    goto LABEL_18;
  }
  if (v8)
  {
LABEL_7:
    v11 = sub_23F6916B8(&qword_256EA7E70);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_18;
  }
  v9 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v9))
  {
    v16 = (char *)&loc_23FAA6F8C + 4 * word_23FB8C248[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v10 = sub_23F6916B8(&qword_256EA7FF8);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  v19 = *(int *)(v6 + 20);
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_18:
  v27 = a3[5];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = type metadata accessor for TranscriptProtoStatementID(0);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v28, 1, v30);
  v32 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v29, 1, v30);
  if (v31)
  {
    if (!v32)
    {
      *(_DWORD *)v28 = *(_DWORD *)v29;
      *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
      *((_QWORD *)v28 + 2) = *((_QWORD *)v29 + 2);
      v33 = *(int *)(v30 + 24);
      v34 = &v28[v33];
      v35 = &v29[v33];
      v36 = sub_23FB2D718();
      v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
      swift_bridgeObjectRetain();
      v37(v34, v35, v36);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v28, 0, 1, v30);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v32)
  {
    sub_23F93DADC((uint64_t)v28, type metadata accessor for TranscriptProtoStatementID);
LABEL_23:
    v38 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_24;
  }
  *(_DWORD *)v28 = *(_DWORD *)v29;
  *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
  *((_QWORD *)v28 + 2) = *((_QWORD *)v29 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v72 = *(int *)(v30 + 24);
  v73 = &v28[v72];
  v74 = &v29[v72];
  v75 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 24))(v73, v74, v75);
LABEL_24:
  v39 = a3[6];
  v40 = &a1[v39];
  v41 = &a2[v39];
  v42 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)&a1[v39], 1, v30);
  v43 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v41, 1, v30);
  if (v42)
  {
    if (!v43)
    {
      *(_DWORD *)v40 = *(_DWORD *)v41;
      *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
      *((_QWORD *)v40 + 2) = *((_QWORD *)v41 + 2);
      v44 = *(int *)(v30 + 24);
      v45 = &v40[v44];
      v46 = &v41[v44];
      v47 = sub_23FB2D718();
      v48 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16);
      swift_bridgeObjectRetain();
      v48(v45, v46, v47);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v40, 0, 1, v30);
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  if (v43)
  {
    sub_23F93DADC((uint64_t)v40, type metadata accessor for TranscriptProtoStatementID);
LABEL_29:
    v49 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    goto LABEL_30;
  }
  *(_DWORD *)v40 = *(_DWORD *)v41;
  *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
  *((_QWORD *)v40 + 2) = *((_QWORD *)v41 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v76 = *(int *)(v30 + 24);
  v77 = &v40[v76];
  v78 = &v41[v76];
  v79 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 24))(v77, v78, v79);
LABEL_30:
  v50 = a3[7];
  v51 = &a1[v50];
  v52 = &a2[v50];
  *(_QWORD *)v51 = *(_QWORD *)v52;
  *((_QWORD *)v51 + 1) = *((_QWORD *)v52 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v53 = a3[8];
  v54 = &a1[v53];
  v55 = &a2[v53];
  *(_QWORD *)v54 = *(_QWORD *)v55;
  *((_QWORD *)v54 + 1) = *((_QWORD *)v55 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v56 = a3[9];
  v57 = &a1[v56];
  v58 = &a2[v56];
  v59 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)&a1[v56], 1, v30);
  v60 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v58, 1, v30);
  if (!v59)
  {
    if (!v60)
    {
      *(_DWORD *)v57 = *(_DWORD *)v58;
      *((_QWORD *)v57 + 1) = *((_QWORD *)v58 + 1);
      *((_QWORD *)v57 + 2) = *((_QWORD *)v58 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v80 = *(int *)(v30 + 24);
      v81 = &v57[v80];
      v82 = &v58[v80];
      v83 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 24))(v81, v82, v83);
      goto LABEL_36;
    }
    sub_23F93DADC((uint64_t)v57, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_35;
  }
  if (v60)
  {
LABEL_35:
    v66 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    goto LABEL_36;
  }
  *(_DWORD *)v57 = *(_DWORD *)v58;
  *((_QWORD *)v57 + 1) = *((_QWORD *)v58 + 1);
  *((_QWORD *)v57 + 2) = *((_QWORD *)v58 + 2);
  v61 = *(int *)(v30 + 24);
  v62 = &v57[v61];
  v63 = &v58[v61];
  v64 = sub_23FB2D718();
  v65 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16);
  swift_bridgeObjectRetain();
  v65(v62, v63, v64);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v57, 0, 1, v30);
LABEL_36:
  v67 = a3[10];
  v68 = &a1[v67];
  v69 = &a2[v67];
  v70 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 24))(v68, v69, v70);
  return a1;
}

char *initializeWithTake for TranscriptProtoInterpretedStatementResult(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;

  v6 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA7E70);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v8))
    {
      v10 = (char *)&loc_23FAA9884 + 4 * byte_23FB8C28A[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v9 = sub_23F6916B8(&qword_256EA7FF8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    v11 = *(int *)(v6 + 20);
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v15 = a3[5];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v18))
  {
    v19 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v16 = *(_DWORD *)v17;
    *(_OWORD *)(v16 + 8) = *(_OWORD *)(v17 + 8);
    v20 = *(int *)(v18 + 24);
    v21 = &v16[v20];
    v22 = &v17[v20];
    v23 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v18);
  }
  v24 = a3[6];
  v25 = &a1[v24];
  v26 = &a2[v24];
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)&a2[v24], 1, v18))
  {
    v27 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v25 = *(_DWORD *)v26;
    *(_OWORD *)(v25 + 8) = *(_OWORD *)(v26 + 8);
    v28 = *(int *)(v18 + 24);
    v29 = &v25[v28];
    v30 = &v26[v28];
    v31 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v25, 0, 1, v18);
  }
  v32 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v32] = *(_OWORD *)&a2[v32];
  v33 = a3[9];
  v34 = &a1[v33];
  v35 = &a2[v33];
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)&a2[v33], 1, v18))
  {
    v36 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v34 = *(_DWORD *)v35;
    *(_OWORD *)(v34 + 8) = *(_OWORD *)(v35 + 8);
    v37 = *(int *)(v18 + 24);
    v38 = &v34[v37];
    v39 = &v35[v37];
    v40 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v34, 0, 1, v18);
  }
  v41 = a3[10];
  v42 = &a1[v41];
  v43 = &a2[v41];
  v44 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
  return a1;
}

char *assignWithTake for TranscriptProtoInterpretedStatementResult(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int v41;
  int v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  v6 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoStatementOutcome);
      goto LABEL_7;
    }
    v12 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    v13 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v12);
    v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v12);
    if (v13)
    {
      if (!v14)
      {
        v15 = (char *)&loc_23FAAA6B4 + 4 * word_23FB8C2AC[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v14)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
          v18 = (char *)&loc_23FAAA81C + 4 * word_23FB8C2C2[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_17;
      }
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    }
    v17 = sub_23F6916B8(&qword_256EA7FF8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
LABEL_17:
    v23 = *(int *)(v6 + 20);
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
    goto LABEL_18;
  }
  if (v8)
  {
LABEL_7:
    v11 = sub_23F6916B8(&qword_256EA7E70);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_18;
  }
  v9 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v9))
  {
    v16 = (char *)&loc_23FAAA740 + 4 * word_23FB8C296[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v10 = sub_23F6916B8(&qword_256EA7FF8);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  v19 = *(int *)(v6 + 20);
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_18:
  v27 = a3[5];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = type metadata accessor for TranscriptProtoStatementID(0);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v28, 1, v30);
  v32 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v29, 1, v30);
  if (v31)
  {
    if (!v32)
    {
      *(_DWORD *)v28 = *(_DWORD *)v29;
      *(_OWORD *)(v28 + 8) = *(_OWORD *)(v29 + 8);
      v33 = *(int *)(v30 + 24);
      v34 = &v28[v33];
      v35 = &v29[v33];
      v36 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v28, 0, 1, v30);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v32)
  {
    sub_23F93DADC((uint64_t)v28, type metadata accessor for TranscriptProtoStatementID);
LABEL_23:
    v37 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_24;
  }
  *(_DWORD *)v28 = *(_DWORD *)v29;
  v73 = *((_QWORD *)v29 + 2);
  *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
  *((_QWORD *)v28 + 2) = v73;
  swift_bridgeObjectRelease();
  v74 = *(int *)(v30 + 24);
  v75 = &v28[v74];
  v76 = &v29[v74];
  v77 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 40))(v75, v76, v77);
LABEL_24:
  v38 = a3[6];
  v39 = &a1[v38];
  v40 = &a2[v38];
  v41 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)&a1[v38], 1, v30);
  v42 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v40, 1, v30);
  if (v41)
  {
    if (!v42)
    {
      *(_DWORD *)v39 = *(_DWORD *)v40;
      *(_OWORD *)(v39 + 8) = *(_OWORD *)(v40 + 8);
      v43 = *(int *)(v30 + 24);
      v44 = &v39[v43];
      v45 = &v40[v43];
      v46 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v39, 0, 1, v30);
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  if (v42)
  {
    sub_23F93DADC((uint64_t)v39, type metadata accessor for TranscriptProtoStatementID);
LABEL_29:
    v47 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_30;
  }
  *(_DWORD *)v39 = *(_DWORD *)v40;
  v78 = *((_QWORD *)v40 + 2);
  *((_QWORD *)v39 + 1) = *((_QWORD *)v40 + 1);
  *((_QWORD *)v39 + 2) = v78;
  swift_bridgeObjectRelease();
  v79 = *(int *)(v30 + 24);
  v80 = &v39[v79];
  v81 = &v40[v79];
  v82 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 40))(v80, v81, v82);
LABEL_30:
  v48 = a3[7];
  v49 = &a1[v48];
  v50 = &a2[v48];
  v52 = *(_QWORD *)v50;
  v51 = *((_QWORD *)v50 + 1);
  *(_QWORD *)v49 = v52;
  *((_QWORD *)v49 + 1) = v51;
  swift_bridgeObjectRelease();
  v53 = a3[8];
  v54 = &a1[v53];
  v55 = &a2[v53];
  v57 = *(_QWORD *)v55;
  v56 = *((_QWORD *)v55 + 1);
  *(_QWORD *)v54 = v57;
  *((_QWORD *)v54 + 1) = v56;
  swift_bridgeObjectRelease();
  v58 = a3[9];
  v59 = (uint64_t)&a1[v58];
  v60 = (uint64_t)&a2[v58];
  v61 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)&a1[v58], 1, v30);
  v62 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v60, 1, v30);
  if (!v61)
  {
    if (!v62)
    {
      *(_DWORD *)v59 = *(_DWORD *)v60;
      v83 = *(_QWORD *)(v60 + 16);
      *(_QWORD *)(v59 + 8) = *(_QWORD *)(v60 + 8);
      *(_QWORD *)(v59 + 16) = v83;
      swift_bridgeObjectRelease();
      v84 = *(int *)(v30 + 24);
      v85 = v59 + v84;
      v86 = v60 + v84;
      v87 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 40))(v85, v86, v87);
      goto LABEL_36;
    }
    sub_23F93DADC(v59, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_35;
  }
  if (v62)
  {
LABEL_35:
    v67 = sub_23F6916B8(&qword_256EA25E0);
    memcpy((void *)v59, (const void *)v60, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    goto LABEL_36;
  }
  *(_DWORD *)v59 = *(_DWORD *)v60;
  *(_OWORD *)(v59 + 8) = *(_OWORD *)(v60 + 8);
  v63 = *(int *)(v30 + 24);
  v64 = v59 + v63;
  v65 = v60 + v63;
  v66 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v64, v65, v66);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v59, 0, 1, v30);
LABEL_36:
  v68 = a3[10];
  v69 = &a1[v68];
  v70 = &a2[v68];
  v71 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 40))(v69, v70, v71);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoInterpretedStatementResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FAACB0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  sub_23F6B6B7C();
  sub_23F6916B8(&qword_256EA7E70);
  sub_23F6F07DC();
  if (v8)
  {
    v6 = sub_23F876D78();
  }
  else
  {
    sub_23F6916B8(&qword_256EA25E0);
    sub_23F6F07DC();
    if (v8)
    {
      sub_23F6F0B94();
    }
    else
    {
      if ((_DWORD)v3 == 2147483646)
      {
        sub_23F6F0880(*(_QWORD *)(v4 + *(int *)(a3 + 28) + 8));
        sub_23F694C84();
        return;
      }
      sub_23F6B53A4();
      sub_23FAC3C38();
    }
    v6 = v4 + v9;
  }
  sub_23F6F07D0(v6, v3, v7);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoInterpretedStatementResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FAACBA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F6B6B7C();
  sub_23F6916B8(&qword_256EA7E70);
  sub_23F6F07EC();
  if (v6)
  {
    sub_23F876DBC();
  }
  else
  {
    sub_23F6916B8(&qword_256EA25E0);
    sub_23F6F07EC();
    if (v6)
    {
      sub_23F6F0BC4();
    }
    else
    {
      if (a3 == 2147483646)
      {
        sub_23F878BAC(*(int *)(a4 + 28));
        sub_23F694C84();
        return;
      }
      sub_23F6B53A4();
      sub_23FAC3C6C();
    }
  }
  sub_23F6F08B0();
  sub_23F6F07C4(v7, v8, v9, v10);
}

void sub_23FAACC2C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23F6DE58C(319, &qword_256EA8088, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementOutcome);
  if (v0 <= 0x3F)
  {
    sub_23F6DE58C(319, qword_256EB5138, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
    if (v1 <= 0x3F)
    {
      sub_23FB2D718();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoProgramStatement(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoStatementID(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v10 = a2[2];
      a1[1] = a2[1];
      a1[2] = v10;
      v11 = *(int *)(v7 + 24);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_23FB2D718();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v16 = a3[5];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = type metadata accessor for TranscriptProtoExpression(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v18, 1, v19))
    {
      v20 = sub_23F6916B8(&qword_256EA8578);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v21 = type metadata accessor for TranscriptProtoExpressionEnum(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v18, 1, v21))
      {
        v23 = (char *)&loc_23FAACEB0 + 4 * word_23FB8C2D8[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v22 = sub_23F6916B8(&qword_256EB2318);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      v24 = *(int *)(v19 + 20);
      v25 = &v17[v24];
      v26 = &v18[v24];
      v27 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v17, 0, 1, v19);
    }
    v28 = a3[6];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    v31 = sub_23FB2EB28();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v30, 1, v31))
    {
      v32 = sub_23F6916B8(&qword_256EA2E00);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v29, 0, 1, v31);
    }
    v33 = a3[7];
    v34 = (char *)a1 + v33;
    v35 = (char *)a2 + v33;
    v36 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoProgramStatement(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t updated;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v4 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    v5 = a1 + *(int *)(v4 + 24);
    v6 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = a1 + a2[5];
  v8 = type metadata accessor for TranscriptProtoExpression(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v8))
  {
    v9 = type metadata accessor for TranscriptProtoExpressionEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v9))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v11 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v11))goto LABEL_51;
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          switch(EnumCaseMultiPayload)
          {
            case 5:
              goto LABEL_11;
            case 4:
              swift_bridgeObjectRelease();
              v41 = v7 + *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
              v42 = sub_23FB2D718();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v41, v42);
              break;
            case 3:
LABEL_11:
              swift_bridgeObjectRelease();
              break;
          }
LABEL_51:
          v24 = type metadata accessor for TranscriptProtoValueExpression(0);
          goto LABEL_52;
        case 1u:
          swift_bridgeObjectRelease();
          v13 = *(int *)(v4 + 24);
          goto LABEL_53;
        case 2u:
          updated = type metadata accessor for TranscriptProtoPrefixExpression(0);
          goto LABEL_27;
        case 3u:
          v15 = (int *)type metadata accessor for TranscriptProtoInfixExpression(0);
          v16 = v7 + v15[5];
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v16, 1, v4))
          {
            swift_bridgeObjectRelease();
            v17 = v16 + *(int *)(v4 + 24);
            v18 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
          }
          v19 = v7 + v15[6];
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v19, 1, v4))
          {
            swift_bridgeObjectRelease();
            v20 = v19 + *(int *)(v4 + 24);
            v21 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
          }
          v13 = v15[7];
          goto LABEL_53;
        case 4u:
          swift_bridgeObjectRelease();
          updated = type metadata accessor for TranscriptProtoDotExpression(0);
          goto LABEL_27;
        case 5u:
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v4))
          {
            swift_bridgeObjectRelease();
            v22 = v7 + *(int *)(v4 + 24);
            v23 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
          }
          updated = type metadata accessor for TranscriptProtoIndexExpression(0);
          goto LABEL_27;
        case 6u:
          swift_bridgeObjectRelease();
          updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
          goto LABEL_27;
        case 7u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v13 = *(int *)(type metadata accessor for TranscriptProtoCallExpression(0) + 24);
          goto LABEL_53;
        case 8u:
          swift_bridgeObjectRelease();
          v24 = type metadata accessor for TranscriptProtoSayExpression(0);
          goto LABEL_52;
        case 9u:
          updated = type metadata accessor for TranscriptProtoPickExpression(0);
LABEL_27:
          v25 = updated;
          v26 = v7 + *(int *)(updated + 20);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v26, 1, v4))
          {
            swift_bridgeObjectRelease();
            v27 = v26 + *(int *)(v4 + 24);
            v28 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
          }
          v13 = *(int *)(v25 + 24);
          goto LABEL_53;
        case 0xAu:
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v4))
          {
            swift_bridgeObjectRelease();
            v29 = v7 + *(int *)(v4 + 24);
            v30 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
          }
          v24 = type metadata accessor for TranscriptProtoConfirmExpression(0);
          goto LABEL_52;
        case 0xBu:
          swift_bridgeObjectRelease();
          v13 = *(int *)(type metadata accessor for TranscriptProtoSearchExpression(0) + 28);
          goto LABEL_53;
        case 0xCu:
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v4))
          {
            swift_bridgeObjectRelease();
            v31 = v7 + *(int *)(v4 + 24);
            v32 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
          }
          v24 = type metadata accessor for TranscriptProtoPickOneExpression(0);
          goto LABEL_52;
        case 0xDu:
          swift_bridgeObjectRelease();
          v24 = type metadata accessor for TranscriptProtoResolveToolExpression(0);
          goto LABEL_52;
        case 0xEu:
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v4))
          {
            swift_bridgeObjectRelease();
            v33 = v7 + *(int *)(v4 + 24);
            v34 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
          }
          v24 = type metadata accessor for TranscriptProtoUndoExpression(0);
          goto LABEL_52;
        case 0xFu:
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v4))
          {
            swift_bridgeObjectRelease();
            v35 = v7 + *(int *)(v4 + 24);
            v36 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
          }
          v24 = type metadata accessor for TranscriptProtoRejectExpression(0);
          goto LABEL_52;
        case 0x10u:
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v4))
          {
            swift_bridgeObjectRelease();
            v37 = v7 + *(int *)(v4 + 24);
            v38 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
          }
          v24 = type metadata accessor for TranscriptProtoCancelExpression(0);
          goto LABEL_52;
        case 0x11u:
        case 0x12u:
        case 0x13u:
        case 0x14u:
          v10 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v7, v10);
          break;
        case 0x15u:
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v4))
          {
            swift_bridgeObjectRelease();
            v39 = v7 + *(int *)(v4 + 24);
            v40 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
          }
          v24 = type metadata accessor for TranscriptProtoOpenExpression(0);
LABEL_52:
          v13 = *(int *)(v24 + 20);
LABEL_53:
          v43 = v7 + v13;
          v44 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v43, v44);
          break;
        default:
          break;
      }
    }
    v45 = v7 + *(int *)(v8 + 20);
    v46 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v45, v46);
  }
  v47 = a1 + a2[6];
  v48 = sub_23FB2EB28();
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v47, 1, v48))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v47, v48);
  v49 = a1 + a2[7];
  v50 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v49, v50);
}

_QWORD *initializeWithCopy for TranscriptProtoProgramStatement(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;

  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    v9 = *(int *)(v6 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_23FB2D718();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v14 = a3[5];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = type metadata accessor for TranscriptProtoExpression(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, v17))
  {
    v18 = sub_23F6916B8(&qword_256EA8578);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v19 = type metadata accessor for TranscriptProtoExpressionEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, v19))
    {
      v21 = (char *)&loc_23FAAE7FC + 4 * word_23FB8C31A[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v20 = sub_23F6916B8(&qword_256EB2318);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    v22 = *(int *)(v17 + 20);
    v23 = &v15[v22];
    v24 = &v16[v22];
    v25 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v15, 0, 1, v17);
  }
  v26 = a3[6];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = sub_23FB2EB28();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v28, 1, v29))
  {
    v30 = sub_23F6916B8(&qword_256EA2E00);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v27, 0, 1, v29);
  }
  v31 = a3[7];
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoProgramStatement(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;

  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      v9 = *(int *)(v6 + 24);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_23FB2D718();
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v14 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)a1 = *(_DWORD *)a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = *(int *)(v6 + 24);
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
LABEL_7:
  v15 = a3[5];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = type metadata accessor for TranscriptProtoExpression(0);
  v19 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, v18);
  v20 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v18);
  if (!v19)
  {
    if (v20)
    {
      sub_23F93DADC((uint64_t)v16, type metadata accessor for TranscriptProtoExpression);
      goto LABEL_13;
    }
    v28 = type metadata accessor for TranscriptProtoExpressionEnum(0);
    v29 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, v28);
    v30 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v28);
    if (v29)
    {
      if (!v30)
      {
        v31 = (char *)&loc_23FAAFC38 + 4 * word_23FB8C372[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v30)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
          v34 = (char *)&loc_23FAAFD60 + 4 * word_23FB8C39E[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_24;
      }
      sub_23F93DADC((uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    }
    v33 = sub_23F6916B8(&qword_256EB2318);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
LABEL_24:
    v39 = *(int *)(v18 + 20);
    v40 = &v16[v39];
    v41 = &v17[v39];
    v42 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
    goto LABEL_25;
  }
  if (v20)
  {
LABEL_13:
    v23 = sub_23F6916B8(&qword_256EA8578);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_25;
  }
  v21 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v21))
  {
    v32 = (char *)&loc_23FAAFCA4 + 4 * word_23FB8C346[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v22 = sub_23F6916B8(&qword_256EB2318);
  memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  v35 = *(int *)(v18 + 20);
  v36 = &v16[v35];
  v37 = &v17[v35];
  v38 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v18);
LABEL_25:
  v43 = a3[6];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  v46 = sub_23FB2EB28();
  v47 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v44, 1, v46);
  v48 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v45, 1, v46);
  if (!v47)
  {
    v49 = *(_QWORD *)(v46 - 8);
    if (!v48)
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 24))(v44, v45, v46);
      goto LABEL_31;
    }
    (*(void (**)(char *, uint64_t))(v49 + 8))(v44, v46);
    goto LABEL_30;
  }
  if (v48)
  {
LABEL_30:
    v50 = sub_23F6916B8(&qword_256EA2E00);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v44, 0, 1, v46);
LABEL_31:
  v51 = a3[7];
  v52 = (char *)a1 + v51;
  v53 = (char *)a2 + v51;
  v54 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  return a1;
}

_DWORD *initializeWithTake for TranscriptProtoProgramStatement(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
    v8 = *(int *)(v6 + 24);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v12 = a3[5];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for TranscriptProtoExpression(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v15))
  {
    v16 = sub_23F6916B8(&qword_256EA8578);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = type metadata accessor for TranscriptProtoExpressionEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v17))
    {
      v19 = (char *)&loc_23FAB33E8 + 4 * word_23FB8C3CA[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v18 = sub_23F6916B8(&qword_256EB2318);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    v20 = *(int *)(v15 + 20);
    v21 = &v13[v20];
    v22 = &v14[v20];
    v23 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v13, 0, 1, v15);
  }
  v24 = a3[6];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = sub_23FB2EB28();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v26, 1, v27))
  {
    v28 = sub_23F6916B8(&qword_256EA2E00);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v25, 0, 1, v27);
  }
  v29 = a3[7];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoProgramStatement(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;

  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
      v9 = *(int *)(v6 + 24);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v13 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)a1 = *(_DWORD *)a2;
  v23 = a2[2];
  a1[1] = a2[1];
  a1[2] = v23;
  swift_bridgeObjectRelease();
  v24 = *(int *)(v6 + 24);
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v25, v26, v27);
LABEL_7:
  v14 = a3[5];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = type metadata accessor for TranscriptProtoExpression(0);
  v18 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, v17);
  v19 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, v17);
  if (!v18)
  {
    if (v19)
    {
      sub_23F93DADC((uint64_t)v15, type metadata accessor for TranscriptProtoExpression);
      goto LABEL_13;
    }
    v28 = type metadata accessor for TranscriptProtoExpressionEnum(0);
    v29 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, v28);
    v30 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, v28);
    if (v29)
    {
      if (!v30)
      {
        v31 = (char *)&loc_23FAB4628 + 4 * word_23FB8C422[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v30)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)v15, type metadata accessor for TranscriptProtoExpressionEnum);
          v34 = (char *)&loc_23FAB4750 + 4 * word_23FB8C44E[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_24;
      }
      sub_23F93DADC((uint64_t)v15, type metadata accessor for TranscriptProtoExpressionEnum);
    }
    v33 = sub_23F6916B8(&qword_256EB2318);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
LABEL_24:
    v39 = *(int *)(v17 + 20);
    v40 = &v15[v39];
    v41 = &v16[v39];
    v42 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
    goto LABEL_25;
  }
  if (v19)
  {
LABEL_13:
    v22 = sub_23F6916B8(&qword_256EA8578);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_25;
  }
  v20 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, v20))
  {
    v32 = (char *)&loc_23FAB4694 + 4 * word_23FB8C3F6[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v21 = sub_23F6916B8(&qword_256EB2318);
  memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  v35 = *(int *)(v17 + 20);
  v36 = &v15[v35];
  v37 = &v16[v35];
  v38 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v15, 0, 1, v17);
LABEL_25:
  v43 = a3[6];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  v46 = sub_23FB2EB28();
  v47 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v44, 1, v46);
  v48 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v45, 1, v46);
  if (!v47)
  {
    v49 = *(_QWORD *)(v46 - 8);
    if (!v48)
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 40))(v44, v45, v46);
      goto LABEL_31;
    }
    (*(void (**)(char *, uint64_t))(v49 + 8))(v44, v46);
    goto LABEL_30;
  }
  if (v48)
  {
LABEL_30:
    v50 = sub_23F6916B8(&qword_256EA2E00);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v44, 0, 1, v46);
LABEL_31:
  v51 = a3[7];
  v52 = (char *)a1 + v51;
  v53 = (char *)a2 + v51;
  v54 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v52, v53, v54);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoProgramStatement()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FAB74E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABAFD0(a1, a2, a3, &qword_256EA25E0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoProgramStatement()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FAB7510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABB074(a1, a2, a3, a4, &qword_256EA25E0, &qword_256EA8578);
}

void sub_23FAB752C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_23F6DE58C(319, qword_256EB5138, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
  if (v0 <= 0x3F)
  {
    sub_23F6DE58C(319, qword_256EBD660, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExpression);
    if (v1 <= 0x3F)
    {
      sub_23F6DE58C(319, qword_256EA3D28, (void (*)(uint64_t))MEMORY[0x24BEB95D8]);
      if (v2 <= 0x3F)
      {
        sub_23FB2D718();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

void _s30IntelligenceFlowPlannerSupport26TranscriptProtoUndoContextVwCP_0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  int v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6D3A90();
  sub_23F877920();
  if ((v3 & 0x20000) != 0)
  {
    sub_23F876A58(*v2);
  }
  else
  {
    sub_23FAC3AB4(v1, v2);
    v5 = v4[3];
    v0[2] = v4[2];
    v0[3] = v5;
    v6 = v4[5];
    v0[4] = v4[4];
    v0[5] = v6;
    sub_23F6B53A4();
    sub_23F6B54F8();
    sub_23F6B6254();
    sub_23F6B5F1C();
    sub_23FAC3B78();
  }
  sub_23F6B69E0();
}

uint64_t _s30IntelligenceFlowPlannerSupport26TranscriptProtoUndoContextVwxx_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23FAC315C();
  sub_23F6B6A60();
  swift_bridgeObjectRelease();
  sub_23F6B53A4();
  v0 = sub_23F87922C();
  return sub_23F8776C4(v0, v1, v2);
}

void _s30IntelligenceFlowPlannerSupport26TranscriptProtoUndoContextVwcp_0()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6D3A90();
  v2 = sub_23FAC34F8(v0, v1);
  v4 = v3[3];
  v2[2] = v3[2];
  v2[3] = v4;
  v5 = v3[5];
  v2[4] = v3[4];
  v2[5] = v5;
  sub_23F6B53A4();
  sub_23F6B54F8();
  sub_23F6B6254();
  sub_23F6B5F1C();
  sub_23FAC3B78();
  sub_23F6B69E0();
}

void _s30IntelligenceFlowPlannerSupport26TranscriptProtoUndoContextVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FAC2CF8(a1, a2);
  sub_23F6B5908();
  sub_23FAC3890();
  sub_23F6B5908();
  *(_QWORD *)(v4 + 32) = *(_QWORD *)(v3 + 32);
  *(_QWORD *)(v4 + 40) = *(_QWORD *)(v3 + 40);
  swift_bridgeObjectRetain();
  sub_23F6B5908();
  v5 = v4 + *(int *)(v2 + 28);
  v6 = sub_23F6B53A4();
  sub_23F7B0990(v5, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24));
  sub_23F694C84();
}

void _s30IntelligenceFlowPlannerSupport27TranscriptProtoClientCustomVwtk_0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  uint64_t v3;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  a1[2] = a2[2];
  v3 = sub_23F6B53A4();
  sub_23FAC2C18(v3);
  sub_23F694C84();
}

void _s30IntelligenceFlowPlannerSupport26TranscriptProtoUndoContextVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23FAC2E50(a1, a2);
  sub_23FAC3BA8();
  v5 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)(v4 + 32) = *(_QWORD *)(v3 + 32);
  *(_QWORD *)(v4 + 40) = v5;
  swift_bridgeObjectRelease();
  v6 = v4 + *(int *)(v2 + 28);
  v7 = sub_23F6B53A4();
  sub_23F7B0990(v6, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40));
  sub_23F694C84();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoLocaleSettings()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FAB7838()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F08A0();
  if (v2)
  {
    sub_23F6F083C(*(_QWORD *)(v0 + 8));
    sub_23F694C84();
  }
  else
  {
    v3 = v1;
    sub_23F6B53A4();
    v4 = sub_23F6F08CC(*(int *)(v3 + 28));
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoLocaleSettings()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FAB7890()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F0850();
  if (v1)
  {
    sub_23F6F0B1C();
    sub_23F694C84();
  }
  else
  {
    v2 = v0;
    sub_23F6B53A4();
    v3 = sub_23F6F082C(*(int *)(v2 + 28));
    sub_23F6F07C4(v3, v4, v5, v6);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoDeviceDetailsDeviceType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t _s30IntelligenceFlowPlannerSupport30TranscriptProtoPromptSelectionVwxx_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23F6B53A4();
  v0 = sub_23F87922C();
  return sub_23F8776C4(v0, v1, v2);
}

_DWORD *initializeWithCopy for TranscriptProtoDeviceDetailsDeviceType(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_DWORD *assignWithCopy for TranscriptProtoDeviceDetailsDeviceType(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_DWORD *initializeWithTake for TranscriptProtoDeviceDetailsDeviceType(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_DWORD *assignWithTake for TranscriptProtoDeviceDetailsDeviceType(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoDeviceDetailsDeviceType()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FAB7AFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = sub_23F6B53A4();
  return sub_23F70D620(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoDeviceDetailsDeviceType()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FAB7B3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F6B53A4();
  sub_23F6F08B0();
  return sub_23F70D618(v0, v1, v2, v3);
}

void sub_23FAB7B6C()
{
  sub_23FABE678();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoDeviceDetails(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _DWORD *v9;
  _DWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (_DWORD *)((char *)a1 + v8);
    v10 = (_DWORD *)((char *)a2 + v8);
    v11 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA86B0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      *v9 = *v10;
      v14 = *(int *)(v11 + 20);
      v15 = (char *)v9 + v14;
      v16 = (char *)v10 + v14;
      v17 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v18 = *(int *)(a3 + 24);
    v19 = (char *)v4 + v18;
    v20 = (char *)a2 + v18;
    v21 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoDeviceDetails(uint64_t a1, uint64_t a2)
{
  return sub_23FA991CC(a1, a2, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
}

_QWORD *initializeWithCopy for TranscriptProtoDeviceDetails(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _DWORD *v8;
  _DWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (_DWORD *)((char *)a1 + v7);
  v9 = (_DWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F6916B8(&qword_256EA86B0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v8 = *v9;
    v12 = *(int *)(v10 + 20);
    v13 = (char *)v8 + v12;
    v14 = (char *)v9 + v12;
    v15 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v16 = *(int *)(a3 + 24);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoDeviceDetails(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (_DWORD *)((char *)a1 + v6);
  v8 = (_DWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      *v7 = *v8;
      v22 = *(int *)(v9 + 20);
      v23 = (char *)v7 + v22;
      v24 = (char *)v8 + v22;
      v25 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
      goto LABEL_7;
    }
    sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v16 = sub_23F6916B8(&qword_256EA86B0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *v7 = *v8;
  v12 = *(int *)(v9 + 20);
  v13 = (char *)v7 + v12;
  v14 = (char *)v8 + v12;
  v15 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v17 = *(int *)(a3 + 24);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoDeviceDetails(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_DWORD *)((char *)a1 + v6);
  v8 = (_DWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA86B0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    v11 = *(int *)(v9 + 20);
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v15 = *(int *)(a3 + 24);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoDeviceDetails(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _DWORD *v8;
  _DWORD *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (_DWORD *)((char *)a1 + v7);
  v9 = (_DWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v10);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    if (!v12)
    {
      *v8 = *v9;
      v23 = *(int *)(v10 + 20);
      v24 = (char *)v8 + v23;
      v25 = (char *)v9 + v23;
      v26 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
      goto LABEL_7;
    }
    sub_23F93DADC((uint64_t)v8, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v17 = sub_23F6916B8(&qword_256EA86B0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *v8 = *v9;
  v13 = *(int *)(v10 + 20);
  v14 = (char *)v8 + v13;
  v15 = (char *)v9 + v13;
  v16 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  v18 = *(int *)(a3 + 24);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoDeviceDetails()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FAB81F4()
{
  sub_23FAB8200();
}

void sub_23FAB8200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F6F08A0();
  if (v5)
  {
    sub_23F6F083C(*(_QWORD *)(v0 + 8));
    sub_23F694C84();
  }
  else
  {
    sub_23FAC2F7C(v1, v2, v3, v4);
    sub_23F6F07DC();
    if (v5)
    {
      sub_23F6F0B94();
    }
    else
    {
      sub_23F6B53A4();
      sub_23F6F0B08();
    }
    v7 = sub_23F6F08CC(v6);
    sub_23F6F07D0(v7, v8, v9);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoDeviceDetails()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FAB825C()
{
  sub_23FAB8268();
}

void sub_23FAB8268()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F6F0850();
  if (v5)
  {
    sub_23F6F0B1C();
    sub_23F694C84();
  }
  else
  {
    sub_23FAC2F5C(v0, v1, v2, v3, v4);
    sub_23F6F07EC();
    if (v5)
    {
      sub_23F6F0BC4();
    }
    else
    {
      sub_23F6B53A4();
      sub_23F6F0BD0();
    }
    v7 = sub_23F6F082C(v6);
    sub_23F6F07C4(v7, v8, v9, v10);
  }
}

void sub_23FAB82B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FAB82D0(a1, a2, a3, (uint64_t)&unk_23FB8EBA8, qword_256EBD828, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
}

void sub_23FAB82D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  unint64_t v6;
  unint64_t v7;

  sub_23FAC3580(a1, a5, a6);
  if (v6 <= 0x3F)
  {
    sub_23F6F0B14();
    if (v7 <= 0x3F)
    {
      sub_23F6F0978();
      sub_23F6F0BFC();
    }
  }
  sub_23F6B6BFC();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoStatementID(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v5 = a2[2];
    a1[1] = a2[1];
    a1[2] = v5;
    v6 = *(int *)(a3 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_23FB2D718();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for TranscriptProtoStatementID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for TranscriptProtoStatementID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_23FB2D718();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoStatementID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoStatementID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoStatementID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoStatementID()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FAB85F8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F0AC8();
  if (v2)
  {
    sub_23F6F0880(*(_QWORD *)(v0 + 16));
    sub_23F694C84();
  }
  else
  {
    v3 = v1;
    sub_23F6B53A4();
    v4 = sub_23F6F08CC(*(int *)(v3 + 24));
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoStatementID()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FAB864C()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F6F09B0();
  if (v3)
  {
    *(_QWORD *)(v1 + 16) = v0;
    sub_23F694C84();
  }
  else
  {
    v4 = v2;
    sub_23F6B53A4();
    v5 = sub_23F6F082C(*(int *)(v4 + 24));
    sub_23F6F07C4(v5, v6, v7, v8);
  }
}

void sub_23FAB8690()
{
  sub_23F6ECB8C();
}

void initializeBufferWithCopyOfBuffer for TranscriptProtoToolResolution()
{
  sub_23FABB1E8();
}

uint64_t destroy for TranscriptProtoToolResolution(uint64_t a1, uint64_t a2)
{
  return sub_23FABB35C(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BEB96E0]);
}

void initializeWithCopy for TranscriptProtoToolResolution()
{
  sub_23FABB420();
}

void assignWithCopy for TranscriptProtoToolResolution()
{
  sub_23FABB574();
}

void initializeWithTake for TranscriptProtoToolResolution()
{
  sub_23FABB7A8();
}

void assignWithTake for TranscriptProtoToolResolution()
{
  sub_23FABB8F4();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoToolResolution()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FAB8724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABBB14(a1, a2, a3, &qword_256EA3268);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoToolResolution()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FAB8744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABBB88(a1, a2, a3, a4, &qword_256EA3268);
}

void sub_23FAB8758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABBC04(a1, a2, a3, &qword_256EA8078, (void (*)(uint64_t))MEMORY[0x24BEB96E0]);
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoUndoRedoRequest(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = a2[4];
    v9 = a3[7];
    v10 = (_QWORD *)(a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v8;
    v12 = type metadata accessor for TranscriptProtoStatementID(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12))
    {
      v13 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v10 = *(_DWORD *)v11;
      v15 = v11[2];
      v10[1] = v11[1];
      v10[2] = v15;
      v16 = *(int *)(v12 + 24);
      v17 = (char *)v10 + v16;
      v18 = (char *)v11 + v16;
      v19 = sub_23FB2D718();
      v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      v20(v17, v18, v19);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v10, 0, 1, v12);
    }
    v21 = a3[8];
    v22 = (_QWORD *)((char *)v4 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v21, 1, v12))
    {
      v24 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v22 = *(_DWORD *)v23;
      v25 = v23[2];
      v22[1] = v23[1];
      v22[2] = v25;
      v26 = *(int *)(v12 + 24);
      v27 = (char *)v22 + v26;
      v28 = (char *)v23 + v26;
      v29 = sub_23FB2D718();
      v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
      swift_bridgeObjectRetain();
      v30(v27, v28, v29);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v22, 0, 1, v12);
    }
    v31 = a3[9];
    v32 = (char *)v4 + v31;
    v33 = (uint64_t)a2 + v31;
    v34 = sub_23FB2D718();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoUndoRedoRequest(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[7];
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 24);
    v7 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + a2[8];
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v5))
  {
    swift_bridgeObjectRelease();
    v9 = v8 + *(int *)(v5 + 24);
    v10 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  v11 = a1 + a2[9];
  v12 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

uint64_t initializeWithCopy for TranscriptProtoUndoRedoRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  v8 = a3[7];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = type metadata accessor for TranscriptProtoStatementID(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v9 = *(_DWORD *)v10;
    v13 = v10[2];
    v9[1] = v10[1];
    v9[2] = v13;
    v14 = *(int *)(v11 + 24);
    v15 = (char *)v9 + v14;
    v16 = (char *)v10 + v14;
    v17 = sub_23FB2D718();
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    v18(v15, v16, v17);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
  }
  v19 = a3[8];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2 + v19, 1, v11))
  {
    v22 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v20 = *(_DWORD *)v21;
    v23 = v21[2];
    v20[1] = v21[1];
    v20[2] = v23;
    v24 = *(int *)(v11 + 24);
    v25 = (char *)v20 + v24;
    v26 = (char *)v21 + v24;
    v27 = sub_23FB2D718();
    v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
    swift_bridgeObjectRetain();
    v28(v25, v26, v27);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v20, 0, 1, v11);
  }
  v29 = a3[9];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoUndoRedoRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  int v21;
  int v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[7];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      v12 = *(int *)(v9 + 24);
      v13 = (char *)v7 + v12;
      v14 = (char *)v8 + v12;
      v15 = sub_23FB2D718();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v17 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v34 = *(int *)(v9 + 24);
  v35 = (char *)v7 + v34;
  v36 = (char *)v8 + v34;
  v37 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 24))(v35, v36, v37);
LABEL_7:
  v18 = a3[8];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  v21 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1 + v18, 1, v9);
  v22 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v9);
  if (!v21)
  {
    if (!v22)
    {
      *(_DWORD *)v19 = *(_DWORD *)v20;
      v19[1] = v20[1];
      v19[2] = v20[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v38 = *(int *)(v9 + 24);
      v39 = (char *)v19 + v38;
      v40 = (char *)v20 + v38;
      v41 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 24))(v39, v40, v41);
      goto LABEL_13;
    }
    sub_23F93DADC((uint64_t)v19, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    v28 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)v19 = *(_DWORD *)v20;
  v19[1] = v20[1];
  v19[2] = v20[2];
  v23 = *(int *)(v9 + 24);
  v24 = (char *)v19 + v23;
  v25 = (char *)v20 + v23;
  v26 = sub_23FB2D718();
  v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
  swift_bridgeObjectRetain();
  v27(v24, v25, v26);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v19, 0, 1, v9);
LABEL_13:
  v29 = a3[9];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 24))(v30, v31, v32);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoUndoRedoRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _DWORD *v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = a3[7];
  v7 = (_DWORD *)(a1 + v6);
  v8 = (_DWORD *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
    v11 = *(int *)(v9 + 24);
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v15 = a3[8];
  v16 = (_DWORD *)(a1 + v15);
  v17 = (_DWORD *)(a2 + v15);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2 + v15, 1, v9))
  {
    v18 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    *v16 = *v17;
    *(_OWORD *)(v16 + 2) = *(_OWORD *)(v17 + 2);
    v19 = *(int *)(v9 + 24);
    v20 = (char *)v16 + v19;
    v21 = (char *)v17 + v19;
    v22 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v9);
  }
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoUndoRedoRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  v8 = a3[7];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = type metadata accessor for TranscriptProtoStatementID(0);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v11);
  v13 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11);
  if (v12)
  {
    if (!v13)
    {
      *(_DWORD *)v9 = *(_DWORD *)v10;
      *(_OWORD *)(v9 + 1) = *(_OWORD *)(v10 + 1);
      v14 = *(int *)(v11 + 24);
      v15 = (char *)v9 + v14;
      v16 = (char *)v10 + v14;
      v17 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_23F93DADC((uint64_t)v9, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v18 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v9 = *(_DWORD *)v10;
  v34 = v10[2];
  v9[1] = v10[1];
  v9[2] = v34;
  swift_bridgeObjectRelease();
  v35 = *(int *)(v11 + 24);
  v36 = (char *)v9 + v35;
  v37 = (char *)v10 + v35;
  v38 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
LABEL_7:
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1 + v19, 1, v11);
  v23 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v21, 1, v11);
  if (!v22)
  {
    if (!v23)
    {
      *(_DWORD *)v20 = *(_DWORD *)v21;
      v39 = *(_QWORD *)(v21 + 16);
      *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
      *(_QWORD *)(v20 + 16) = v39;
      swift_bridgeObjectRelease();
      v40 = *(int *)(v11 + 24);
      v41 = v20 + v40;
      v42 = v21 + v40;
      v43 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 40))(v41, v42, v43);
      goto LABEL_13;
    }
    sub_23F93DADC(v20, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    v28 = sub_23F6916B8(&qword_256EA25E0);
    memcpy((void *)v20, (const void *)v21, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)v20 = *(_DWORD *)v21;
  *(_OWORD *)(v20 + 8) = *(_OWORD *)(v21 + 8);
  v24 = *(int *)(v11 + 24);
  v25 = v20 + v24;
  v26 = v21 + v24;
  v27 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v20, 0, 1, v11);
LABEL_13:
  v29 = a3[9];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 40))(v30, v31, v32);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoUndoRedoRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FAB9400()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6F08A0();
  if (v1)
  {
    sub_23F6F083C(*(_QWORD *)(v0 + 8));
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A1C();
    sub_23F6916B8(&qword_256EA25E0);
    sub_23F6F07DC();
    if (v1)
    {
      sub_23F6F0AFC();
    }
    else
    {
      sub_23F6B53A4();
      sub_23FAC3508();
    }
    v3 = sub_23F6F08CC(v2);
    sub_23F6F07D0(v3, v4, v5);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoUndoRedoRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FAB9468()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6F0850();
  if (v0)
  {
    sub_23F6F0B1C();
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A10();
    sub_23F6916B8(&qword_256EA25E0);
    sub_23F6F07EC();
    if (v0)
    {
      sub_23F6F0BB8();
    }
    else
    {
      sub_23F6B53A4();
      sub_23FAC3534();
    }
    v2 = sub_23F6F082C(v1);
    sub_23F6F07C4(v2, v3, v4, v5);
  }
}

void sub_23FAB94C0()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F6DE58C(319, qword_256EB5138, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
  if (v0 <= 0x3F)
  {
    sub_23FB2D718();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoClientUndoRedoRequest(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = a3[6];
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for TranscriptProtoStatementID(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v9 = *(_DWORD *)v10;
      v14 = v10[2];
      v9[1] = v10[1];
      v9[2] = v14;
      v15 = *(int *)(v11 + 24);
      v16 = (char *)v9 + v15;
      v17 = (char *)v10 + v15;
      v18 = sub_23FB2D718();
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      v19(v16, v17, v18);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v20 = a3[7];
    v21 = (_QWORD *)((char *)v4 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v20, 1, v11))
    {
      v23 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v21 = *(_DWORD *)v22;
      v24 = v22[2];
      v21[1] = v22[1];
      v21[2] = v24;
      v25 = *(int *)(v11 + 24);
      v26 = (char *)v21 + v25;
      v27 = (char *)v22 + v25;
      v28 = sub_23FB2D718();
      v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
      swift_bridgeObjectRetain();
      v29(v26, v27, v28);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v21, 0, 1, v11);
    }
    v30 = a3[8];
    v31 = (char *)v4 + v30;
    v32 = (uint64_t)a2 + v30;
    v33 = sub_23FB2D718();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoClientUndoRedoRequest(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 24);
    v7 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + a2[7];
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v5))
  {
    swift_bridgeObjectRelease();
    v9 = v8 + *(int *)(v5 + 24);
    v10 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  v11 = a1 + a2[8];
  v12 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

uint64_t initializeWithCopy for TranscriptProtoClientUndoRedoRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = a3[6];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for TranscriptProtoStatementID(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v8 = *(_DWORD *)v9;
    v12 = v9[2];
    v8[1] = v9[1];
    v8[2] = v12;
    v13 = *(int *)(v10 + 24);
    v14 = (char *)v8 + v13;
    v15 = (char *)v9 + v13;
    v16 = sub_23FB2D718();
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    v17(v14, v15, v16);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v18 = a3[7];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2 + v18, 1, v10))
  {
    v21 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v19 = *(_DWORD *)v20;
    v22 = v20[2];
    v19[1] = v20[1];
    v19[2] = v22;
    v23 = *(int *)(v10 + 24);
    v24 = (char *)v19 + v23;
    v25 = (char *)v20 + v23;
    v26 = sub_23FB2D718();
    v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
    swift_bridgeObjectRetain();
    v27(v24, v25, v26);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v19, 0, 1, v10);
  }
  v28 = a3[8];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoClientUndoRedoRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  int v21;
  int v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[6];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      v12 = *(int *)(v9 + 24);
      v13 = (char *)v7 + v12;
      v14 = (char *)v8 + v12;
      v15 = sub_23FB2D718();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v17 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v34 = *(int *)(v9 + 24);
  v35 = (char *)v7 + v34;
  v36 = (char *)v8 + v34;
  v37 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 24))(v35, v36, v37);
LABEL_7:
  v18 = a3[7];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  v21 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1 + v18, 1, v9);
  v22 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v9);
  if (!v21)
  {
    if (!v22)
    {
      *(_DWORD *)v19 = *(_DWORD *)v20;
      v19[1] = v20[1];
      v19[2] = v20[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v38 = *(int *)(v9 + 24);
      v39 = (char *)v19 + v38;
      v40 = (char *)v20 + v38;
      v41 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 24))(v39, v40, v41);
      goto LABEL_13;
    }
    sub_23F93DADC((uint64_t)v19, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    v28 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)v19 = *(_DWORD *)v20;
  v19[1] = v20[1];
  v19[2] = v20[2];
  v23 = *(int *)(v9 + 24);
  v24 = (char *)v19 + v23;
  v25 = (char *)v20 + v23;
  v26 = sub_23FB2D718();
  v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
  swift_bridgeObjectRetain();
  v27(v24, v25, v26);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v19, 0, 1, v9);
LABEL_13:
  v29 = a3[8];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 24))(v30, v31, v32);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoClientUndoRedoRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _DWORD *v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[6];
  v7 = (_DWORD *)(a1 + v6);
  v8 = (_DWORD *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
    v11 = *(int *)(v9 + 24);
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v15 = a3[7];
  v16 = (_DWORD *)(a1 + v15);
  v17 = (_DWORD *)(a2 + v15);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2 + v15, 1, v9))
  {
    v18 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    *v16 = *v17;
    *(_OWORD *)(v16 + 2) = *(_OWORD *)(v17 + 2);
    v19 = *(int *)(v9 + 24);
    v20 = (char *)v16 + v19;
    v21 = (char *)v17 + v19;
    v22 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v9);
  }
  v23 = a3[8];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoClientUndoRedoRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = a3[6];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for TranscriptProtoStatementID(0);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v10);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      *(_DWORD *)v8 = *(_DWORD *)v9;
      *(_OWORD *)(v8 + 1) = *(_OWORD *)(v9 + 1);
      v13 = *(int *)(v10 + 24);
      v14 = (char *)v8 + v13;
      v15 = (char *)v9 + v13;
      v16 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    sub_23F93DADC((uint64_t)v8, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v17 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v8 = *(_DWORD *)v9;
  v33 = v9[2];
  v8[1] = v9[1];
  v8[2] = v33;
  swift_bridgeObjectRelease();
  v34 = *(int *)(v10 + 24);
  v35 = (char *)v8 + v34;
  v36 = (char *)v9 + v34;
  v37 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 40))(v35, v36, v37);
LABEL_7:
  v18 = a3[7];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1 + v18, 1, v10);
  v22 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v20, 1, v10);
  if (!v21)
  {
    if (!v22)
    {
      *(_DWORD *)v19 = *(_DWORD *)v20;
      v38 = *(_QWORD *)(v20 + 16);
      *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
      *(_QWORD *)(v19 + 16) = v38;
      swift_bridgeObjectRelease();
      v39 = *(int *)(v10 + 24);
      v40 = v19 + v39;
      v41 = v20 + v39;
      v42 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
      goto LABEL_13;
    }
    sub_23F93DADC(v19, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    v27 = sub_23F6916B8(&qword_256EA25E0);
    memcpy((void *)v19, (const void *)v20, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)v19 = *(_DWORD *)v20;
  *(_OWORD *)(v19 + 8) = *(_OWORD *)(v20 + 8);
  v23 = *(int *)(v10 + 24);
  v24 = v19 + v23;
  v25 = v20 + v23;
  v26 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v19, 0, 1, v10);
LABEL_13:
  v28 = a3[8];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 40))(v29, v30, v31);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoClientUndoRedoRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoClientUndoRedoRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FABA1AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABA1C8(a1, a2, a3, (uint64_t)&unk_23FB8EBA8, qword_256EB5138, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
}

void sub_23FABA1C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  unint64_t v6;
  unint64_t v7;

  sub_23FAC3580(a1, a5, a6);
  if (v6 <= 0x3F)
  {
    sub_23F6F0B14();
    if (v7 <= 0x3F)
    {
      sub_23FAC3DDC();
      sub_23FAC3E60();
      swift_initStructMetadata();
      sub_23F6F0BFC();
    }
  }
  sub_23FAC3E0C();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoTypeConversionRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FB2EB1C();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EA2610);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v10 = a3[5];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_23FB2EB28();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13))
    {
      v14 = sub_23F6916B8(&qword_256EA2E00);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v11, 0, 1, v13);
    }
    v15 = a3[6];
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = type metadata accessor for TranscriptProtoStatementID(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v18))
    {
      v19 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v16 = *(_DWORD *)v17;
      v20 = v17[2];
      v16[1] = v17[1];
      v16[2] = v20;
      v21 = *(int *)(v18 + 24);
      v22 = (char *)v16 + v21;
      v23 = (char *)v17 + v21;
      v24 = sub_23FB2D718();
      v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
      swift_bridgeObjectRetain();
      v25(v22, v23, v24);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v18);
    }
    v26 = a3[7];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoTypeConversionRequest(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_23FB2EB1C();
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_23FB2EB28();
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v5, 1, v6))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    v9 = v7 + *(int *)(v8 + 24);
    v10 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  v11 = a1 + a2[7];
  v12 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

char *initializeWithCopy for TranscriptProtoTypeConversionRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  v6 = sub_23FB2EB1C();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA2610);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_23FB2EB28();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F6916B8(&qword_256EA2E00);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
  }
  v13 = a3[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, v16))
  {
    v17 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v14 = *(_DWORD *)v15;
    v18 = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
    *((_QWORD *)v14 + 2) = v18;
    v19 = *(int *)(v16 + 24);
    v20 = &v14[v19];
    v21 = &v15[v19];
    v22 = sub_23FB2D718();
    v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
    swift_bridgeObjectRetain();
    v23(v20, v21, v22);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v14, 0, 1, v16);
  }
  v24 = a3[7];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  return a1;
}

char *assignWithCopy for TranscriptProtoTypeConversionRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;

  v6 = sub_23FB2EB1C();
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = sub_23F6916B8(&qword_256EA2610);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  v11 = a3[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_23FB2EB28();
  v15 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v14);
  v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v14);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v12, 0, 1, v14);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v17 = *(_QWORD *)(v14 - 8);
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v14);
LABEL_12:
    v18 = sub_23F6916B8(&qword_256EA2E00);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v12, v13, v14);
LABEL_13:
  v19 = a3[6];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = type metadata accessor for TranscriptProtoStatementID(0);
  v23 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v22);
  v24 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v21, 1, v22);
  if (!v23)
  {
    if (!v24)
    {
      *(_DWORD *)v20 = *(_DWORD *)v21;
      *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
      *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v36 = *(int *)(v22 + 24);
      v37 = &v20[v36];
      v38 = &v21[v36];
      v39 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 24))(v37, v38, v39);
      goto LABEL_19;
    }
    sub_23F93DADC((uint64_t)v20, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_18;
  }
  if (v24)
  {
LABEL_18:
    v30 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_19;
  }
  *(_DWORD *)v20 = *(_DWORD *)v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
  v25 = *(int *)(v22 + 24);
  v26 = &v20[v25];
  v27 = &v21[v25];
  v28 = sub_23FB2D718();
  v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
  swift_bridgeObjectRetain();
  v29(v26, v27, v28);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v20, 0, 1, v22);
LABEL_19:
  v31 = a3[7];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v34 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

char *initializeWithTake for TranscriptProtoTypeConversionRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = sub_23FB2EB1C();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA2610);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_23FB2EB28();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F6916B8(&qword_256EA2E00);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
  }
  v13 = a3[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, v16))
  {
    v17 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v14 = *(_DWORD *)v15;
    *(_OWORD *)(v14 + 8) = *(_OWORD *)(v15 + 8);
    v18 = *(int *)(v16 + 24);
    v19 = &v14[v18];
    v20 = &v15[v18];
    v21 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v14, 0, 1, v16);
  }
  v22 = a3[7];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  return a1;
}

char *assignWithTake for TranscriptProtoTypeConversionRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = sub_23FB2EB1C();
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = sub_23F6916B8(&qword_256EA2610);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  v11 = a3[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_23FB2EB28();
  v15 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v14);
  v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v14);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v12, 0, 1, v14);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v17 = *(_QWORD *)(v14 - 8);
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v14);
LABEL_12:
    v18 = sub_23F6916B8(&qword_256EA2E00);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 40))(v12, v13, v14);
LABEL_13:
  v19 = a3[6];
  v20 = (uint64_t)&a1[v19];
  v21 = (uint64_t)&a2[v19];
  v22 = type metadata accessor for TranscriptProtoStatementID(0);
  v23 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v20, 1, v22);
  v24 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v21, 1, v22);
  if (!v23)
  {
    if (!v24)
    {
      *(_DWORD *)v20 = *(_DWORD *)v21;
      v35 = *(_QWORD *)(v21 + 16);
      *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
      *(_QWORD *)(v20 + 16) = v35;
      swift_bridgeObjectRelease();
      v36 = *(int *)(v22 + 24);
      v37 = v20 + v36;
      v38 = v21 + v36;
      v39 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 40))(v37, v38, v39);
      goto LABEL_19;
    }
    sub_23F93DADC(v20, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_18;
  }
  if (v24)
  {
LABEL_18:
    v29 = sub_23F6916B8(&qword_256EA25E0);
    memcpy((void *)v20, (const void *)v21, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  *(_DWORD *)v20 = *(_DWORD *)v21;
  *(_OWORD *)(v20 + 8) = *(_OWORD *)(v21 + 8);
  v25 = *(int *)(v22 + 24);
  v26 = v20 + v25;
  v27 = v21 + v25;
  v28 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v20, 0, 1, v22);
LABEL_19:
  v30 = a3[7];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 40))(v31, v32, v33);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoTypeConversionRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FABAFB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABAFD0(a1, a2, a3, &qword_256EA2610);
}

uint64_t sub_23FABAFD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;

  sub_23FAC3030(a1, a2, a3, a4);
  sub_23F6F07DC();
  if (v8)
  {
    v6 = sub_23F876D78();
  }
  else
  {
    sub_23F72E4BC();
    sub_23F6F07DC();
    if (v8)
    {
      sub_23F6F0B94();
    }
    else
    {
      sub_23F6B6088();
      sub_23F6F07DC();
      if (v10)
      {
        sub_23F6F0B08();
      }
      else
      {
        sub_23F6B53A4();
        sub_23F6F0AFC();
      }
    }
    v6 = v5 + v9;
  }
  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v6, v4, v7);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoTypeConversionRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FABB058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABB074(a1, a2, a3, a4, &qword_256EA2610, &qword_256EA2E00);
}

uint64_t sub_23FABB074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6)
{
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23FAC2EE0(a1, a2, a3, a4, a5);
  sub_23F6F07EC();
  if (v7)
  {
    sub_23F876DBC();
  }
  else
  {
    sub_23F6916B8(a6);
    sub_23F6F07EC();
    if (v7)
    {
      sub_23F6F0BC4();
    }
    else
    {
      sub_23F72E4BC();
      sub_23F6F07EC();
      if (v8)
      {
        sub_23F6F0BD0();
      }
      else
      {
        sub_23F6B53A4();
        sub_23F6F0BB8();
      }
    }
  }
  sub_23F6F08B0();
  return sub_23F713EE0(v9, v10, v11, v12);
}

void sub_23FABB0E8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_23F6DE58C(319, &qword_256EA33B0, (void (*)(uint64_t))MEMORY[0x24BEB95B0]);
  if (v0 <= 0x3F)
  {
    sub_23F6DE58C(319, qword_256EA3D28, (void (*)(uint64_t))MEMORY[0x24BEB95D8]);
    if (v1 <= 0x3F)
    {
      sub_23F6DE58C(319, qword_256EB5138, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
      if (v2 <= 0x3F)
      {
        sub_23FB2D718();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

void initializeBufferWithCopyOfBuffer for TranscriptProtoTypeConversionResult()
{
  sub_23FABB1E8();
}

void sub_23FABB1E8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_23F6B50E8();
  v2 = v1;
  sub_23F877920();
  if ((v7 & 0x20000) != 0)
  {
    sub_23F876A58(*v2);
  }
  else
  {
    v8 = v5;
    v9 = sub_23F876A04(v3, v4, v5, v6);
    if (sub_23FAC2D30((uint64_t)v2))
    {
      v10 = sub_23F6B6088();
      sub_23FAC2B80(*(_QWORD *)(v10 - 8));
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v0, v2, v9);
      sub_23FAC2C6C(v0);
    }
    v11 = *(int *)(v8 + 20);
    v12 = v0 + v11;
    v13 = (uint64_t)v2 + v11;
    type metadata accessor for TranscriptProtoStatementID(0);
    if (sub_23FAC2B44(v13))
    {
      v14 = sub_23F6916B8(&qword_256EA25E0);
      sub_23FAC2BEC(v14);
    }
    else
    {
      *(_DWORD *)v12 = *(_DWORD *)v13;
      v15 = *(_QWORD *)(v13 + 16);
      *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
      *(_QWORD *)(v12 + 16) = v15;
      sub_23F6B53A4();
      sub_23FAC2BD0();
      sub_23FAC2CC8();
      sub_23F6BC4AC(v12);
    }
    v16 = *(int *)(v8 + 24);
    v17 = v0 + v16;
    v18 = (char *)v2 + v16;
    if (sub_23FAC2B44((uint64_t)v2 + v16))
    {
      v19 = sub_23F6916B8(&qword_256EA25E0);
      sub_23FAC2BEC(v19);
    }
    else
    {
      *(_DWORD *)v17 = *(_DWORD *)v18;
      v20 = *((_QWORD *)v18 + 2);
      *(_QWORD *)(v17 + 8) = *((_QWORD *)v18 + 1);
      *(_QWORD *)(v17 + 16) = v20;
      sub_23F6B53A4();
      sub_23FAC2BD0();
      sub_23FAC2CC8();
      sub_23F6BC4AC(v17);
    }
    v21 = sub_23F6B53A4();
    sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16));
  }
  sub_23F693DDC();
}

uint64_t destroy for TranscriptProtoTypeConversionResult(uint64_t a1, uint64_t a2)
{
  return sub_23FABB35C(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BEB95B0]);
}

uint64_t sub_23FABB35C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  sub_23F6B60B4(a1, a2, a3);
  if (!sub_23F7B0D30(a1))
  {
    v5 = sub_23F6B63F4();
    v6(v5);
  }
  v7 = a1 + *(int *)(a2 + 20);
  type metadata accessor for TranscriptProtoStatementID(0);
  if (!sub_23F7B0D30(v7))
  {
    sub_23FAC3DB8();
    v8 = sub_23F6B53A4();
    sub_23FAC38F0(v8);
  }
  if (!sub_23F7B0D30(a1 + *(int *)(a2 + 24)))
  {
    sub_23FAC3DB8();
    v9 = sub_23F6B53A4();
    sub_23FAC2CE4(v9);
  }
  sub_23F6B53A4();
  v10 = sub_23F87922C();
  return sub_23FAC2C30(v10, v11, v12);
}

void initializeWithCopy for TranscriptProtoTypeConversionResult()
{
  sub_23FABB420();
}

void sub_23FABB420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_23F6B50E8();
  v7 = sub_23FAC2DB8(v3, v4, v5, v6);
  if (sub_23FAC2B44(v1))
  {
    v8 = sub_23F72E4BC();
    sub_23FAC2B80(*(_QWORD *)(v8 - 8));
  }
  else
  {
    sub_23FAC307C(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16));
    sub_23F6BC4AC(v0);
  }
  v9 = *(int *)(v2 + 20);
  v10 = v0 + v9;
  v11 = v1 + v9;
  type metadata accessor for TranscriptProtoStatementID(0);
  if (sub_23FAC2B44(v11))
  {
    v12 = sub_23F6916B8(&qword_256EA25E0);
    sub_23FAC2BEC(v12);
  }
  else
  {
    *(_DWORD *)v10 = *(_DWORD *)v11;
    v13 = *(_QWORD *)(v11 + 16);
    *(_QWORD *)(v10 + 8) = *(_QWORD *)(v11 + 8);
    *(_QWORD *)(v10 + 16) = v13;
    sub_23F6B53A4();
    sub_23FAC2BD0();
    sub_23FAC2CC8();
    sub_23F6BC4AC(v10);
  }
  v14 = *(int *)(v2 + 24);
  v15 = v0 + v14;
  v16 = v1 + v14;
  if (sub_23FAC2B44(v1 + v14))
  {
    v17 = sub_23F6916B8(&qword_256EA25E0);
    sub_23FAC2BEC(v17);
  }
  else
  {
    *(_DWORD *)v15 = *(_DWORD *)v16;
    v18 = *(_QWORD *)(v16 + 16);
    *(_QWORD *)(v15 + 8) = *(_QWORD *)(v16 + 8);
    *(_QWORD *)(v15 + 16) = v18;
    sub_23F6B53A4();
    sub_23FAC2BD0();
    sub_23FAC2CC8();
    sub_23F6BC4AC(v15);
  }
  v19 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16));
  sub_23F693DDC();
}

void assignWithCopy for TranscriptProtoTypeConversionResult()
{
  sub_23FABB574();
}

void sub_23FABB574()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_23F6B50E8();
  v7 = sub_23FAC2DB8(v3, v4, v5, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v0, 1, v7);
  v9 = sub_23FAC2B44(v1);
  if (v8)
  {
    if (!v9)
    {
      sub_23FAC307C(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16));
      sub_23F6BC4AC(v0);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v10 = *(_QWORD *)(v7 - 8);
  if (v9)
  {
    sub_23F6B6900(v10);
LABEL_6:
    v11 = sub_23F72E4BC();
    sub_23FAC2B80(*(_QWORD *)(v11 - 8));
    goto LABEL_7;
  }
  sub_23FAC307C(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 24));
LABEL_7:
  v12 = *(int *)(v2 + 20);
  v13 = v0 + v12;
  v14 = v1 + v12;
  v15 = type metadata accessor for TranscriptProtoStatementID(0);
  v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v13, 1, v15);
  v17 = sub_23FAC2B44(v14);
  if (v16)
  {
    if (!(_DWORD)v17)
    {
      *(_DWORD *)v13 = *(_DWORD *)v14;
      *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
      *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
      sub_23F6B53A4();
      sub_23FAC2BD0();
      sub_23FAC2CC8();
      sub_23F6BC4AC(v13);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if ((_DWORD)v17)
  {
    sub_23FAC30F8(v17, type metadata accessor for TranscriptProtoStatementID);
LABEL_12:
    v18 = sub_23F6916B8(&qword_256EA25E0);
    sub_23FAC2BEC(v18);
    goto LABEL_13;
  }
  sub_23FAC30A4();
  sub_23F717D54();
  v26 = v13 + *(int *)(v15 + 24);
  v27 = sub_23F6B53A4();
  sub_23F6B563C(v26, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 24));
LABEL_13:
  v19 = *(int *)(v2 + 24);
  v20 = v0 + v19;
  v21 = v1 + v19;
  v22 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v0 + v19, 1, v15);
  v23 = sub_23FAC2B44(v21);
  if (!v22)
  {
    if (!(_DWORD)v23)
    {
      sub_23FAC30A4();
      sub_23F717D54();
      v28 = sub_23F6B53A4();
      sub_23FAC2D80(v28);
      goto LABEL_19;
    }
    sub_23FAC30F8(v23, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_18;
  }
  if ((_DWORD)v23)
  {
LABEL_18:
    v24 = sub_23F6916B8(&qword_256EA25E0);
    sub_23FAC2BEC(v24);
    goto LABEL_19;
  }
  *(_DWORD *)v20 = *(_DWORD *)v21;
  *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
  *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
  sub_23F6B53A4();
  sub_23FAC2BD0();
  sub_23FAC2CC8();
  sub_23F6BC4AC(v20);
LABEL_19:
  v25 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 24));
  sub_23F693DDC();
}

void initializeWithTake for TranscriptProtoTypeConversionResult()
{
  sub_23FABB7A8();
}

void sub_23FABB7A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_23F6D3A90();
  v7 = sub_23FAC2DB8(v3, v4, v5, v6);
  if (sub_23FAC2B44(v1))
  {
    v8 = sub_23F72E4BC();
    sub_23FAC2B80(*(_QWORD *)(v8 - 8));
  }
  else
  {
    sub_23FAC307C(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32));
    sub_23F6BC4AC(v0);
  }
  v9 = *(int *)(v2 + 20);
  v10 = v0 + v9;
  v11 = v1 + v9;
  type metadata accessor for TranscriptProtoStatementID(0);
  if (sub_23FAC2B44(v11))
  {
    v12 = sub_23F6916B8(&qword_256EA25E0);
    sub_23FAC2BEC(v12);
  }
  else
  {
    *(_DWORD *)v10 = *(_DWORD *)v11;
    *(_OWORD *)(v10 + 8) = *(_OWORD *)(v11 + 8);
    v13 = sub_23F6B53A4();
    sub_23FAC2C98(v13);
    sub_23F6BC4AC(v10);
  }
  v14 = *(int *)(v2 + 24);
  v15 = v0 + v14;
  v16 = v1 + v14;
  if (sub_23FAC2B44(v1 + v14))
  {
    v17 = sub_23F6916B8(&qword_256EA25E0);
    sub_23FAC2BEC(v17);
  }
  else
  {
    *(_DWORD *)v15 = *(_DWORD *)v16;
    *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
    v18 = sub_23F6B53A4();
    sub_23FAC2C98(v18);
    sub_23F6BC4AC(v15);
  }
  v19 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32));
  sub_23F6B69E0();
}

void assignWithTake for TranscriptProtoTypeConversionResult()
{
  sub_23FABB8F4();
}

void sub_23FABB8F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_23F6D3A90();
  v7 = sub_23FAC2DB8(v3, v4, v5, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v0, 1, v7);
  v9 = sub_23FAC2B44(v1);
  if (v8)
  {
    if (!v9)
    {
      sub_23FAC307C(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32));
      sub_23F6BC4AC(v0);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v10 = *(_QWORD *)(v7 - 8);
  if (v9)
  {
    sub_23F6B6900(v10);
LABEL_6:
    v11 = sub_23F72E4BC();
    sub_23FAC2B80(*(_QWORD *)(v11 - 8));
    goto LABEL_7;
  }
  sub_23FAC307C(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 40));
LABEL_7:
  v12 = *(int *)(v2 + 20);
  v13 = v0 + v12;
  v14 = v1 + v12;
  v15 = type metadata accessor for TranscriptProtoStatementID(0);
  v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v13, 1, v15);
  v17 = sub_23FAC2B44(v14);
  if (v16)
  {
    if (!(_DWORD)v17)
    {
      *(_DWORD *)v13 = *(_DWORD *)v14;
      *(_OWORD *)(v13 + 8) = *(_OWORD *)(v14 + 8);
      v18 = sub_23F6B53A4();
      sub_23FAC2C98(v18);
      sub_23F6BC4AC(v13);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if ((_DWORD)v17)
  {
    sub_23FAC30F8(v17, type metadata accessor for TranscriptProtoStatementID);
LABEL_12:
    v19 = sub_23F6916B8(&qword_256EA25E0);
    sub_23FAC2BEC(v19);
    goto LABEL_13;
  }
  sub_23FAC3278();
  v28 = v13 + *(int *)(v15 + 24);
  v29 = sub_23F6B53A4();
  sub_23F6B563C(v28, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 40));
LABEL_13:
  v20 = *(int *)(v2 + 24);
  v21 = v0 + v20;
  v22 = v1 + v20;
  v23 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v0 + v20, 1, v15);
  v24 = sub_23FAC2B44(v22);
  if (!v23)
  {
    if (!(_DWORD)v24)
    {
      sub_23FAC3278();
      v30 = sub_23F6B53A4();
      sub_23FAC2D68(v30);
      goto LABEL_19;
    }
    sub_23FAC30F8(v24, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_18;
  }
  if ((_DWORD)v24)
  {
LABEL_18:
    v26 = sub_23F6916B8(&qword_256EA25E0);
    sub_23FAC2BEC(v26);
    goto LABEL_19;
  }
  *(_DWORD *)v21 = *(_DWORD *)v22;
  *(_OWORD *)(v21 + 8) = *(_OWORD *)(v22 + 8);
  v25 = sub_23F6B53A4();
  sub_23FAC2C98(v25);
  sub_23F6BC4AC(v21);
LABEL_19:
  v27 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 40));
  sub_23F6B69E0();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoTypeConversionResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FABBB00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABBB14(a1, a2, a3, &qword_256EA2610);
}

uint64_t sub_23FABBB14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  sub_23FAC3030(a1, a2, a3, a4);
  sub_23F6F07DC();
  if (v8)
  {
    v6 = sub_23F876D78();
  }
  else
  {
    sub_23F6B6088();
    sub_23F6F07DC();
    if (v8)
    {
      sub_23F6F0B94();
    }
    else
    {
      sub_23F6B53A4();
      sub_23F6F0AFC();
    }
    v6 = v5 + v9;
  }
  return sub_23F6F07D0(v6, v4, v7);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoTypeConversionResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FABBB74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABBB88(a1, a2, a3, a4, &qword_256EA2610);
}

uint64_t sub_23FABBB88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23FAC2EE0(a1, a2, a3, a4, a5);
  sub_23F6F07EC();
  if (v5)
  {
    sub_23F876DBC();
  }
  else
  {
    sub_23F72E4BC();
    sub_23F6F07EC();
    if (v5)
    {
      sub_23F6F0BC4();
    }
    else
    {
      sub_23F6B53A4();
      sub_23F6F0BB8();
    }
  }
  sub_23F6F08B0();
  return sub_23F713EE0(v6, v7, v8, v9);
}

void sub_23FABBBE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABBC04(a1, a2, a3, &qword_256EA33B0, (void (*)(uint64_t))MEMORY[0x24BEB95B0]);
}

void sub_23FABBC04(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  sub_23FAC3148(a1, a2, a3, a4, a5);
  if (v5 <= 0x3F)
  {
    v6 = sub_23FAC33EC();
    sub_23FAC3D7C(v6);
    if (v7 <= 0x3F)
    {
      sub_23F6F0B14();
      if (v8 <= 0x3F)
      {
        sub_23FAC2E74();
        sub_23F6F0BFC();
      }
    }
  }
  sub_23F7564F0();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoQueryDecorationResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  char *v26;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    a1[3] = a2[3];
    v9 = *(int *)(a3 + 32);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, DecorationToolRetrievalResponse))
    {
      v13 = sub_23F6916B8(&qword_256EA2DD0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v14 = v11[1];
      *v10 = *v11;
      v10[1] = v14;
      v15 = v11[3];
      v10[2] = v11[2];
      v10[3] = v15;
      *((_DWORD *)v10 + 8) = *((_DWORD *)v11 + 8);
      v16 = v11[6];
      v10[5] = v11[5];
      v10[6] = v16;
      v17 = *(int *)(DecorationToolRetrievalResponse + 36);
      v25 = (char *)v11 + v17;
      v26 = (char *)v10 + v17;
      v18 = sub_23FB2D718();
      v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24(v26, v25, v18);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v10, 0, 1, DecorationToolRetrievalResponse);
    }
    v19 = *(int *)(a3 + 36);
    v20 = (char *)v7 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  }
  return v7;
}

uint64_t destroy for TranscriptProtoQueryDecorationResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, DecorationToolRetrievalResponse))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(DecorationToolRetrievalResponse + 36);
    v7 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + *(int *)(a2 + 36);
  v9 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *initializeWithCopy for TranscriptProtoQueryDecorationResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  char *v25;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 32);
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, DecorationToolRetrievalResponse))
  {
    v12 = sub_23F6916B8(&qword_256EA2DD0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = v10[1];
    *v9 = *v10;
    v9[1] = v13;
    v14 = v10[3];
    v9[2] = v10[2];
    v9[3] = v14;
    *((_DWORD *)v9 + 8) = *((_DWORD *)v10 + 8);
    v15 = v10[6];
    v9[5] = v10[5];
    v9[6] = v15;
    v16 = *(int *)(DecorationToolRetrievalResponse + 36);
    v24 = (char *)v10 + v16;
    v25 = (char *)v9 + v16;
    v17 = sub_23FB2D718();
    v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23(v25, v24, v17);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, DecorationToolRetrievalResponse);
  }
  v18 = *(int *)(a3 + 36);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoQueryDecorationResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t DecorationToolRetrievalResponse;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 32);
  v7 = (uint64_t)a1 + v6;
  v8 = (uint64_t)a2 + v6;
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, DecorationToolRetrievalResponse);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, DecorationToolRetrievalResponse);
  if (!v10)
  {
    if (!v11)
    {
      *(_QWORD *)v7 = *(_QWORD *)v8;
      *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
      *(_QWORD *)(v7 + 24) = *(_QWORD *)(v8 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v7 + 32) = *(_DWORD *)(v8 + 32);
      *(_QWORD *)(v7 + 40) = *(_QWORD *)(v8 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v7 + 48) = *(_QWORD *)(v8 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v20 = *(int *)(DecorationToolRetrievalResponse + 36);
      v21 = v7 + v20;
      v22 = v8 + v20;
      v23 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(v21, v22, v23);
      goto LABEL_7;
    }
    sub_23F93DADC(v7, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v14 = sub_23F6916B8(&qword_256EA2DD0);
    memcpy((void *)v7, (const void *)v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
  *(_QWORD *)(v7 + 24) = *(_QWORD *)(v8 + 24);
  *(_DWORD *)(v7 + 32) = *(_DWORD *)(v8 + 32);
  *(_QWORD *)(v7 + 40) = *(_QWORD *)(v8 + 40);
  *(_QWORD *)(v7 + 48) = *(_QWORD *)(v8 + 48);
  v12 = *(int *)(DecorationToolRetrievalResponse + 36);
  v25 = v8 + v12;
  v26 = v7 + v12;
  v13 = sub_23FB2D718();
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24(v26, v25, v13);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v7, 0, 1, DecorationToolRetrievalResponse);
LABEL_7:
  v15 = *(int *)(a3 + 36);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoQueryDecorationResult(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 32);
  v8 = (_OWORD *)((char *)a1 + v7);
  v9 = (_OWORD *)((char *)a2 + v7);
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, DecorationToolRetrievalResponse))
  {
    v11 = sub_23F6916B8(&qword_256EA2DD0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = v9[1];
    *v8 = *v9;
    v8[1] = v12;
    *((_DWORD *)v8 + 8) = *((_DWORD *)v9 + 8);
    *(_OWORD *)((char *)v8 + 40) = *(_OWORD *)((char *)v9 + 40);
    v13 = *(int *)(DecorationToolRetrievalResponse + 36);
    v14 = (char *)v8 + v13;
    v15 = (char *)v9 + v13;
    v16 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, DecorationToolRetrievalResponse);
  }
  v17 = *(int *)(a3 + 36);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoQueryDecorationResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t DecorationToolRetrievalResponse;
  int v10;
  int v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 32);
  v7 = (uint64_t)a1 + v6;
  v8 = (uint64_t)a2 + v6;
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, DecorationToolRetrievalResponse);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, DecorationToolRetrievalResponse);
  if (!v10)
  {
    if (!v11)
    {
      v23 = *(_QWORD *)(v8 + 8);
      *(_QWORD *)v7 = *(_QWORD *)v8;
      *(_QWORD *)(v7 + 8) = v23;
      swift_bridgeObjectRelease();
      v24 = *(_QWORD *)(v8 + 24);
      *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
      *(_QWORD *)(v7 + 24) = v24;
      swift_bridgeObjectRelease();
      *(_DWORD *)(v7 + 32) = *(_DWORD *)(v8 + 32);
      *(_QWORD *)(v7 + 40) = *(_QWORD *)(v8 + 40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v7 + 48) = *(_QWORD *)(v8 + 48);
      swift_bridgeObjectRelease();
      v25 = *(int *)(DecorationToolRetrievalResponse + 36);
      v26 = v7 + v25;
      v27 = v8 + v25;
      v28 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
      goto LABEL_7;
    }
    sub_23F93DADC(v7, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v17 = sub_23F6916B8(&qword_256EA2DD0);
    memcpy((void *)v7, (const void *)v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  v12 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v12;
  *(_DWORD *)(v7 + 32) = *(_DWORD *)(v8 + 32);
  *(_OWORD *)(v7 + 40) = *(_OWORD *)(v8 + 40);
  v13 = *(int *)(DecorationToolRetrievalResponse + 36);
  v14 = v7 + v13;
  v15 = v8 + v13;
  v16 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v7, 0, 1, DecorationToolRetrievalResponse);
LABEL_7:
  v18 = *(int *)(a3 + 36);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryDecorationResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FABC644()
{
  unint64_t *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6F08A0();
  if (v1)
  {
    sub_23F6F083C(*v0);
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A1C();
    sub_23F6916B8(&qword_256EA2DD0);
    sub_23F6F07DC();
    if (v1)
    {
      sub_23FAC3340();
    }
    else
    {
      sub_23F6B53A4();
      sub_23FAC3508();
    }
    v3 = sub_23F6F08CC(v2);
    sub_23F6F07D0(v3, v4, v5);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryDecorationResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FABC6AC()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6F0850();
  if (v0)
  {
    sub_23F6F0B28();
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A10();
    sub_23F6916B8(&qword_256EA2DD0);
    sub_23F6F07EC();
    if (v0)
    {
      sub_23FAC335C();
    }
    else
    {
      sub_23F6B53A4();
      sub_23FAC3534();
    }
    v2 = sub_23F6F082C(v1);
    sub_23F6F07C4(v2, v3, v4, v5);
  }
}

void sub_23FABC704()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F6DE58C(319, qword_256EA3B90, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
  if (v0 <= 0x3F)
  {
    sub_23FB2D718();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoQueryDecorationPrePlannerResult(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t DecorationPrePlannerResultPayload;
  uint64_t v24;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for TranscriptProtoStatementID(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v9 = *(_DWORD *)v10;
      v14 = v10[2];
      v9[1] = v10[1];
      v9[2] = v14;
      v15 = *(int *)(v11 + 24);
      v16 = (char *)v9 + v15;
      v17 = (char *)v10 + v15;
      v18 = sub_23FB2D718();
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      v19(v16, v17, v18);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v20 = a3[6];
    v21 = (char *)v4 + v20;
    v22 = (char *)a2 + v20;
    DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, DecorationPrePlannerResultPayload))
    {
      v24 = sub_23F6916B8(&qword_256EA8608);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, DecorationPrePlannerPayloadEnum))
      {
        v27 = (char *)&loc_23FABC980 + 4 * byte_23FB8C47A[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v26 = sub_23F6916B8(&qword_256EB2630);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      v28 = *(int *)(DecorationPrePlannerResultPayload + 20);
      v29 = &v21[v28];
      v30 = &v22[v28];
      v31 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v21, 0, 1, DecorationPrePlannerResultPayload);
    }
    v32 = a3[7];
    v33 = (char *)v4 + v32;
    v34 = (char *)a2 + v32;
    v35 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoQueryDecorationPrePlannerResult(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t DecorationPrePlannerResultPayload;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 24);
    v7 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + a2[6];
  DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, DecorationPrePlannerResultPayload))
  {
    DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, DecorationPrePlannerPayloadEnum))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
          goto LABEL_12;
        case 1u:
          swift_bridgeObjectRelease();
          DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
          goto LABEL_12;
        case 2u:
          swift_bridgeObjectRelease();
          DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
          goto LABEL_12;
        case 3u:
          swift_bridgeObjectRelease();
          DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
          goto LABEL_12;
        case 4u:
          swift_bridgeObjectRelease();
          DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
          goto LABEL_12;
        case 5u:
          swift_bridgeObjectRelease();
          DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
LABEL_12:
          v12 = v8 + *(int *)(DecorationPrePlannerResultPayloadRepeatedStringVariant + 20);
          v13 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
          break;
        default:
          break;
      }
    }
    v14 = v8 + *(int *)(DecorationPrePlannerResultPayload + 20);
    v15 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  }
  v16 = a1 + a2[7];
  v17 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
}

_QWORD *initializeWithCopy for TranscriptProtoQueryDecorationPrePlannerResult(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t DecorationPrePlannerResultPayload;
  uint64_t v22;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for TranscriptProtoStatementID(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v8 = *(_DWORD *)v9;
    v12 = v9[2];
    v8[1] = v9[1];
    v8[2] = v12;
    v13 = *(int *)(v10 + 24);
    v14 = (char *)v8 + v13;
    v15 = (char *)v9 + v13;
    v16 = sub_23FB2D718();
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    v17(v14, v15, v16);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v18 = a3[6];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, DecorationPrePlannerResultPayload))
  {
    v22 = sub_23F6916B8(&qword_256EA8608);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, DecorationPrePlannerPayloadEnum))
    {
      v25 = (char *)&loc_23FABCE70 + 4 * byte_23FB8C486[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v24 = sub_23F6916B8(&qword_256EB2630);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    v26 = *(int *)(DecorationPrePlannerResultPayload + 20);
    v27 = &v19[v26];
    v28 = &v20[v26];
    v29 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v19, 0, 1, DecorationPrePlannerResultPayload);
  }
  v30 = a3[7];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoQueryDecorationPrePlannerResult(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t DecorationPrePlannerResultPayload;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t DecorationPrePlannerPayloadEnum;
  int v32;
  int v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      v12 = *(int *)(v9 + 24);
      v13 = (char *)v7 + v12;
      v14 = (char *)v8 + v12;
      v15 = sub_23FB2D718();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v17 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27 = *(int *)(v9 + 24);
  v28 = (char *)v7 + v27;
  v29 = (char *)v8 + v27;
  v30 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
LABEL_7:
  v18 = a3[6];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
  v22 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, DecorationPrePlannerResultPayload);
  v23 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, DecorationPrePlannerResultPayload);
  if (!v22)
  {
    if (v23)
    {
      sub_23F93DADC((uint64_t)v19, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
      goto LABEL_13;
    }
    DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
    v32 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, DecorationPrePlannerPayloadEnum);
    v33 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, DecorationPrePlannerPayloadEnum);
    if (v32)
    {
      if (!v33)
      {
        v34 = (char *)&loc_23FABD280 + 4 * byte_23FB8C492[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v33)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)v19, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
          v37 = (char *)&loc_23FABD34C + 4 * byte_23FB8C498[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_24;
      }
      sub_23F93DADC((uint64_t)v19, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    }
    v36 = sub_23F6916B8(&qword_256EB2630);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
LABEL_24:
    v42 = *(int *)(DecorationPrePlannerResultPayload + 20);
    v43 = &v19[v42];
    v44 = &v20[v42];
    v45 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 24))(v43, v44, v45);
    goto LABEL_25;
  }
  if (v23)
  {
LABEL_13:
    v26 = sub_23F6916B8(&qword_256EA8608);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_25;
  }
  v24 = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v24))
  {
    v35 = (char *)&loc_23FABD2C0 + 4 * byte_23FB8C48C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v25 = sub_23F6916B8(&qword_256EB2630);
  memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  v38 = *(int *)(DecorationPrePlannerResultPayload + 20);
  v39 = &v19[v38];
  v40 = &v20[v38];
  v41 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v19, 0, 1, DecorationPrePlannerResultPayload);
LABEL_25:
  v46 = a3[7];
  v47 = (char *)a1 + v46;
  v48 = (char *)a2 + v46;
  v49 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 24))(v47, v48, v49);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoQueryDecorationPrePlannerResult(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t DecorationPrePlannerResultPayload;
  uint64_t v19;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (_DWORD *)((char *)a1 + v6);
  v8 = (_DWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
    v11 = *(int *)(v9 + 24);
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v15 = a3[6];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, DecorationPrePlannerResultPayload))
  {
    v19 = sub_23F6916B8(&qword_256EA8608);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, DecorationPrePlannerPayloadEnum))
    {
      v22 = (char *)&loc_23FABD938 + 4 * byte_23FB8C49E[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v21 = sub_23F6916B8(&qword_256EB2630);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    v23 = *(int *)(DecorationPrePlannerResultPayload + 20);
    v24 = &v16[v23];
    v25 = &v17[v23];
    v26 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, DecorationPrePlannerResultPayload);
  }
  v27 = a3[7];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoQueryDecorationPrePlannerResult(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t DecorationPrePlannerResultPayload;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t DecorationPrePlannerPayloadEnum;
  int v33;
  int v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for TranscriptProtoStatementID(0);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v10);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      *(_DWORD *)v8 = *(_DWORD *)v9;
      *(_OWORD *)(v8 + 1) = *(_OWORD *)(v9 + 1);
      v13 = *(int *)(v10 + 24);
      v14 = (char *)v8 + v13;
      v15 = (char *)v9 + v13;
      v16 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    sub_23F93DADC((uint64_t)v8, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v17 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v8 = *(_DWORD *)v9;
  v27 = v9[2];
  v8[1] = v9[1];
  v8[2] = v27;
  swift_bridgeObjectRelease();
  v28 = *(int *)(v10 + 24);
  v29 = (char *)v8 + v28;
  v30 = (char *)v9 + v28;
  v31 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 40))(v29, v30, v31);
LABEL_7:
  v18 = a3[6];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
  v22 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, DecorationPrePlannerResultPayload);
  v23 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, DecorationPrePlannerResultPayload);
  if (!v22)
  {
    if (v23)
    {
      sub_23F93DADC((uint64_t)v19, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
      goto LABEL_13;
    }
    DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
    v33 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, DecorationPrePlannerPayloadEnum);
    v34 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, DecorationPrePlannerPayloadEnum);
    if (v33)
    {
      if (!v34)
      {
        v35 = (char *)&loc_23FABDCF8 + 4 * byte_23FB8C4AA[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v34)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)v19, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
          v38 = (char *)&loc_23FABDDC4 + 4 * byte_23FB8C4B0[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_24;
      }
      sub_23F93DADC((uint64_t)v19, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    }
    v37 = sub_23F6916B8(&qword_256EB2630);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
LABEL_24:
    v43 = *(int *)(DecorationPrePlannerResultPayload + 20);
    v44 = &v19[v43];
    v45 = &v20[v43];
    v46 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
    goto LABEL_25;
  }
  if (v23)
  {
LABEL_13:
    v26 = sub_23F6916B8(&qword_256EA8608);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_25;
  }
  v24 = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v24))
  {
    v36 = (char *)&loc_23FABDD38 + 4 * byte_23FB8C4A4[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v25 = sub_23F6916B8(&qword_256EB2630);
  memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  v39 = *(int *)(DecorationPrePlannerResultPayload + 20);
  v40 = &v19[v39];
  v41 = &v20[v39];
  v42 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v19, 0, 1, DecorationPrePlannerResultPayload);
LABEL_25:
  v47 = a3[7];
  v48 = (char *)a1 + v47;
  v49 = (char *)a2 + v47;
  v50 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FABE1B8()
{
  sub_23FABE1CC();
}

void sub_23FABE1CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F6F08A0();
  if (v5)
  {
    sub_23F6F083C(*(_QWORD *)(v0 + 8));
    sub_23F694C84();
  }
  else
  {
    sub_23FAC2F7C(v1, v2, v3, v4);
    sub_23F6F07DC();
    if (v5)
    {
      sub_23F6F0B94();
    }
    else
    {
      sub_23F6B6088();
      sub_23F6F07DC();
      if (v7)
      {
        sub_23F6F0B08();
      }
      else
      {
        sub_23F6B53A4();
        sub_23F6F0AFC();
      }
    }
    v8 = sub_23F6F08CC(v6);
    sub_23F6F07D0(v8, v9, v10);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FABE240()
{
  sub_23FABE254();
}

void sub_23FABE254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F6F0850();
  if (v5)
  {
    sub_23F6F0B1C();
    sub_23F6B5F7C();
  }
  else
  {
    sub_23FAC2F5C(v0, v1, v2, v3, v4);
    sub_23F6F07EC();
    if (v5)
    {
      sub_23F6F0BC4();
    }
    else
    {
      sub_23F72E4BC();
      sub_23F6F07EC();
      if (v7)
      {
        sub_23F6F0BD0();
      }
      else
      {
        sub_23F6B53A4();
        sub_23F6F0BB8();
      }
    }
    v8 = sub_23F6F082C(v6);
    sub_23F713EE0(v8, v9, v10, v11);
  }
}

void sub_23FABE2BC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23F6DE58C(319, qword_256EB5138, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
  if (v0 <= 0x3F)
  {
    sub_23F6DE58C(319, qword_256EBDD08, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
    if (v1 <= 0x3F)
    {
      sub_23FB2D718();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void _s30IntelligenceFlowPlannerSupport33TranscriptProtoActionConfirmationVwCP_0(_QWORD *a1, _QWORD *a2)
{
  int v2;

  sub_23FAC362C(a1, a2);
  if ((v2 & 0x20000) != 0)
  {
    sub_23F7B0BE8();
  }
  else
  {
    sub_23F6B53A4();
    sub_23F6B54F8();
    sub_23F878C98();
  }
  sub_23F6B5F7C();
}

uint64_t _s30IntelligenceFlowPlannerSupport33TranscriptProtoActionConfirmationVwxx_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23FAC3590();
  sub_23F6B53A4();
  v0 = sub_23F87922C();
  return sub_23F8776C4(v0, v1, v2);
}

void _s30IntelligenceFlowPlannerSupport33TranscriptProtoActionConfirmationVwcp_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_23F6B53A4();
  sub_23F6B54F8();
  sub_23F878C98();
  sub_23F6B5F7C();
}

void _s30IntelligenceFlowPlannerSupport33TranscriptProtoActionConfirmationVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FAC312C(a1, a2);
  sub_23F6B5908();
  v4 = v3 + *(int *)(v2 + 20);
  v5 = sub_23F6B53A4();
  sub_23F7B0990(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24));
  sub_23F694C84();
}

void _s30IntelligenceFlowPlannerSupport33TranscriptProtoActionConfirmationVwtk_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  *a1 = *a2;
  v2 = sub_23F6B53A4();
  sub_23FAC2C18(v2);
  sub_23F694C84();
}

void _s30IntelligenceFlowPlannerSupport33TranscriptProtoActionConfirmationVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FAC3110(a1, a2);
  v4 = v3 + *(int *)(v2 + 20);
  v5 = sub_23F6B53A4();
  sub_23F7B0990(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40));
  sub_23F694C84();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FABE5E0()
{
  unint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F08A0();
  if (v2)
  {
    sub_23F6F083C(*v0);
    sub_23F694C84();
  }
  else
  {
    v3 = v1;
    sub_23F6B53A4();
    v4 = sub_23F6F08CC(*(int *)(v3 + 20));
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FABE638()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F0850();
  if (v1)
  {
    sub_23F6F0B28();
    sub_23F694C84();
  }
  else
  {
    v2 = v0;
    sub_23F6B53A4();
    v3 = sub_23F6F082C(*(int *)(v2 + 20));
    sub_23F6F07C4(v3, v4, v5, v6);
  }
}

void sub_23FABE678()
{
  unint64_t v0;

  sub_23F6F0B14();
  if (v0 <= 0x3F)
  {
    sub_23F876C18();
    sub_23F6F0BFC();
  }
  sub_23F6F5A08();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoQueryDecorationPrePlannerResultPayload(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, DecorationPrePlannerPayloadEnum))
    {
      v10 = (char *)&loc_23FABE778 + 4 * byte_23FB8C4B6[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v8 = sub_23F6916B8(&qword_256EB2630);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoQueryDecorationPrePlannerResultPayload(uint64_t a1, uint64_t a2)
{
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, DecorationPrePlannerPayloadEnum))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
        goto LABEL_9;
      case 1u:
        swift_bridgeObjectRelease();
        DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
        goto LABEL_9;
      case 2u:
        swift_bridgeObjectRelease();
        DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
        goto LABEL_9;
      case 3u:
        swift_bridgeObjectRelease();
        DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
        goto LABEL_9;
      case 4u:
        swift_bridgeObjectRelease();
        DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
        goto LABEL_9;
      case 5u:
        swift_bridgeObjectRelease();
        DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
LABEL_9:
        v6 = a1 + *(int *)(DecorationPrePlannerResultPayloadRepeatedStringVariant + 20);
        v7 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
        break;
      default:
        break;
    }
  }
  v8 = a1 + *(int *)(a2 + 20);
  v9 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

char *initializeWithCopy for TranscriptProtoQueryDecorationPrePlannerResultPayload(char *a1, char *a2, uint64_t a3)
{
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, DecorationPrePlannerPayloadEnum))
  {
    v8 = (char *)&loc_23FABEA5C + 4 * byte_23FB8C4C2[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = sub_23F6916B8(&qword_256EB2630);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

char *assignWithCopy for TranscriptProtoQueryDecorationPrePlannerResultPayload(char *a1, char *a2, uint64_t a3)
{
  uint64_t DecorationPrePlannerPayloadEnum;
  int v7;
  int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, DecorationPrePlannerPayloadEnum);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, DecorationPrePlannerPayloadEnum);
  if (v7)
  {
    if (!v8)
    {
      v9 = (char *)&loc_23FABEC00 + 4 * byte_23FB8C4C8[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
LABEL_6:
    v10 = sub_23F6916B8(&qword_256EB2630);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    v11 = (char *)&loc_23FABECD0 + 4 * byte_23FB8C4CE[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

char *initializeWithTake for TranscriptProtoQueryDecorationPrePlannerResultPayload(char *a1, char *a2, uint64_t a3)
{
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, DecorationPrePlannerPayloadEnum))
  {
    v8 = (char *)&loc_23FABF190 + 4 * byte_23FB8C4D4[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = sub_23F6916B8(&qword_256EB2630);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *assignWithTake for TranscriptProtoQueryDecorationPrePlannerResultPayload(char *a1, char *a2, uint64_t a3)
{
  uint64_t DecorationPrePlannerPayloadEnum;
  int v7;
  int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, DecorationPrePlannerPayloadEnum);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, DecorationPrePlannerPayloadEnum);
  if (v7)
  {
    if (!v8)
    {
      v9 = (char *)&loc_23FABF324 + 4 * byte_23FB8C4DA[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
LABEL_6:
    v10 = sub_23F6916B8(&qword_256EB2630);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    v11 = (char *)&loc_23FABF3B0 + 4 * byte_23FB8C4E0[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayload()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FABF680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EB2630);
}

uint64_t sub_23FABF68C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  sub_23FAC3030(a1, a2, a3, a4);
  sub_23F6F07DC();
  if (v7)
  {
    v9 = sub_23F876D78();
  }
  else
  {
    v8 = sub_23F6B53A4();
    v9 = v5 + *(int *)(v6 + 20);
  }
  return sub_23F6F07D0(v9, v4, v8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayload()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FABF6D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EB2630);
}

uint64_t sub_23FABF6E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23FAC2EE0(a1, a2, a3, a4, a5);
  sub_23F6F07EC();
  if (v5)
    sub_23F876DBC();
  else
    sub_23F6B53A4();
  sub_23F6F08B0();
  return sub_23F6F07C4(v6, v7, v8, v9);
}

void sub_23FABF724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABF738(a1, a2, a3, qword_256EBE108, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
}

void sub_23FABF738(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  unint64_t v5;
  unint64_t v6;

  sub_23FAC3148(a1, a2, a3, a4, a5);
  if (v5 <= 0x3F)
  {
    sub_23F6F0B14();
    if (v6 <= 0x3F)
    {
      sub_23F876C18();
      sub_23F6F0BFC();
    }
  }
  sub_23F6F5A08();
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_23FABF7DC + 4 * byte_23FB8C4E6[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(uint64_t a1)
{
  uint64_t result;
  uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant;
  uint64_t v4;
  uint64_t v5;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
      goto LABEL_8;
    case 1:
      swift_bridgeObjectRelease();
      DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
      goto LABEL_8;
    case 2:
      swift_bridgeObjectRelease();
      DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
      goto LABEL_8;
    case 3:
      swift_bridgeObjectRelease();
      DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
      goto LABEL_8;
    case 4:
      swift_bridgeObjectRelease();
      DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
      goto LABEL_8;
    case 5:
      swift_bridgeObjectRelease();
      DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
LABEL_8:
      v4 = a1 + *(int *)(DecorationPrePlannerResultPayloadRepeatedStringVariant + 20);
      v5 = sub_23FB2D718();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for TranscriptProtoQueryDecorationPrePlannerPayloadEnum()
{
  char *v0;

  v0 = (char *)sub_23FABFB5C + 4 * byte_23FB8C4F2[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_23FABFB5C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  void (*v6)(char *, char *, uint64_t);

  *v0 = *v1;
  v2 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0)
              + 20);
  v3 = (char *)v0 + v2;
  v4 = (char *)v1 + v2;
  v5 = sub_23FB2D718();
  v6 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
  swift_bridgeObjectRetain();
  v6(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F93DADC(result, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    v2 = (char *)&loc_23FABFC9C + 4 * byte_23FB8C4F8[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void initializeWithTake for TranscriptProtoQueryDecorationPrePlannerPayloadEnum()
{
  char *v0;

  v0 = (char *)sub_23FABFDC0 + 4 * byte_23FB8C4FE[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_23FABFDC0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;

  *v0 = *v1;
  v2 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0)
              + 20);
  v3 = (char *)v0 + v2;
  v4 = (char *)v1 + v2;
  v5 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithTake for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F93DADC(result, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    v2 = (char *)&loc_23FABFEEC + 4 * byte_23FB8C504[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_23FABFFB4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  result = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(319);
        if (v4 <= 0x3F)
        {
          result = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(319);
          if (v5 <= 0x3F)
          {
            result = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(319);
            if (v6 <= 0x3F)
            {
              swift_initEnumMetadataMultiPayload();
              return 0;
            }
          }
        }
      }
    }
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoTextQuery(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = a3[6];
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for TranscriptProtoStatementID(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v9 = *(_DWORD *)v10;
      v14 = v10[2];
      v9[1] = v10[1];
      v9[2] = v14;
      v15 = *(int *)(v11 + 24);
      v16 = (char *)v9 + v15;
      v17 = (char *)v10 + v15;
      v18 = sub_23FB2D718();
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      v19(v16, v17, v18);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v20 = a3[7];
    v21 = a3[8];
    v22 = (_QWORD *)((char *)v4 + v20);
    v23 = (uint64_t *)((char *)a2 + v20);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = (char *)v4 + v21;
    v26 = (uint64_t)a2 + v21;
    v27 = sub_23FB2D718();
    v28 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
    swift_bridgeObjectRetain();
    v28(v25, v26, v27);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoTextQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 24);
    v7 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  v8 = a1 + *(int *)(a2 + 32);
  v9 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

uint64_t initializeWithCopy for TranscriptProtoTextQuery(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = a3[6];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for TranscriptProtoStatementID(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v8 = *(_DWORD *)v9;
    v12 = v9[2];
    v8[1] = v9[1];
    v8[2] = v12;
    v13 = *(int *)(v10 + 24);
    v14 = (char *)v8 + v13;
    v15 = (char *)v9 + v13;
    v16 = sub_23FB2D718();
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    v17(v14, v15, v16);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v18 = a3[7];
  v19 = a3[8];
  v20 = (_QWORD *)(a1 + v18);
  v21 = (_QWORD *)(a2 + v18);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = a1 + v19;
  v24 = a2 + v19;
  v25 = sub_23FB2D718();
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
  swift_bridgeObjectRetain();
  v26(v23, v24, v25);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoTextQuery(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[6];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v26 = *(int *)(v9 + 24);
      v27 = (char *)v7 + v26;
      v28 = (char *)v8 + v26;
      v29 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v27, v28, v29);
      goto LABEL_7;
    }
    sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v17 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v12 = *(int *)(v9 + 24);
  v13 = (char *)v7 + v12;
  v14 = (char *)v8 + v12;
  v15 = sub_23FB2D718();
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  v16(v13, v14, v15);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v18 = a3[7];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoTextQuery(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[6];
  v7 = (_DWORD *)(a1 + v6);
  v8 = (_DWORD *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
    v11 = *(int *)(v9 + 24);
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v15 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoTextQuery(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for TranscriptProtoStatementID(0);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v10);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v9, 1, v10);
  if (!v11)
  {
    if (!v12)
    {
      *(_DWORD *)v8 = *(_DWORD *)v9;
      v28 = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
      *(_QWORD *)(v8 + 16) = v28;
      swift_bridgeObjectRelease();
      v29 = *(int *)(v10 + 24);
      v30 = v8 + v29;
      v31 = v9 + v29;
      v32 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 40))(v30, v31, v32);
      goto LABEL_7;
    }
    sub_23F93DADC(v8, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v17 = sub_23F6916B8(&qword_256EA25E0);
    memcpy((void *)v8, (const void *)v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
  v13 = *(int *)(v10 + 24);
  v14 = v8 + v13;
  v15 = v9 + v13;
  v16 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v8, 0, 1, v10);
LABEL_7:
  v18 = a3[7];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  v23 = a3[8];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoTextQuery()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FAC0914()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6F08A0();
  if (v1)
  {
    sub_23F6F083C(*(_QWORD *)(v0 + 8));
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A1C();
    sub_23F6916B8(&qword_256EA25E0);
    sub_23F6F07DC();
    if (v1)
    {
      sub_23F6F0B08();
    }
    else
    {
      sub_23F6B53A4();
      sub_23FAC3340();
    }
    v3 = sub_23F6F08CC(v2);
    sub_23F6F07D0(v3, v4, v5);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoTextQuery()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FAC0980()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6F0850();
  if (v0)
  {
    sub_23F6F0B1C();
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A10();
    sub_23F6916B8(&qword_256EA25E0);
    sub_23F6F07EC();
    if (v0)
    {
      sub_23F6F0BD0();
    }
    else
    {
      sub_23F6B53A4();
      sub_23FAC335C();
    }
    v2 = sub_23F6F082C(v1);
    sub_23F6F07C4(v2, v3, v4, v5);
  }
}

void sub_23FAC09D8()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F6DE58C(319, qword_256EB5138, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
  if (v0 <= 0x3F)
  {
    sub_23FB2D718();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoExternalAgentTextQuery(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v25;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12))
    {
      v13 = sub_23F6916B8(&qword_256EB1C30);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v15 = v11[1];
      *v10 = *v11;
      v10[1] = v15;
      v10[2] = v11[2];
      v16 = *(int *)(v12 + 24);
      v17 = (char *)v10 + v16;
      v25 = (char *)v11 + v16;
      v18 = sub_23FB2D718();
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19(v17, v25, v18);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v10, 0, 1, v12);
    }
    v20 = *(int *)(a3 + 28);
    v21 = (char *)v4 + v20;
    v22 = (char *)a2 + v20;
    v23 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoExternalAgentTextQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 24);
    v7 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + *(int *)(a2 + 28);
  v9 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *initializeWithCopy for TranscriptProtoExternalAgentTextQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v23;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F6916B8(&qword_256EB1C30);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = v10[1];
    *v9 = *v10;
    v9[1] = v13;
    v9[2] = v10[2];
    v14 = *(int *)(v11 + 24);
    v15 = (char *)v9 + v14;
    v23 = (char *)v10 + v14;
    v16 = sub_23FB2D718();
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17(v15, v23, v16);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
  }
  v18 = *(int *)(a3 + 28);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoExternalAgentTextQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      *v7 = *v8;
      v7[1] = v8[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v7[2] = v8[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v22 = *(int *)(v9 + 24);
      v23 = (char *)v7 + v22;
      v24 = (char *)v8 + v22;
      v25 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
      goto LABEL_7;
    }
    sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v16 = sub_23F6916B8(&qword_256EB1C30);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v12 = *(int *)(v9 + 24);
  v13 = (char *)v7 + v12;
  v26 = (char *)v8 + v12;
  v14 = sub_23FB2D718();
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15(v13, v26, v14);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v17 = *(int *)(a3 + 28);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoExternalAgentTextQuery(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F6916B8(&qword_256EB1C30);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
    v8[2] = v9[2];
    v12 = *(int *)(v10 + 24);
    v13 = (char *)v8 + v12;
    v14 = (char *)v9 + v12;
    v15 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v16 = *(int *)(a3 + 28);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoExternalAgentTextQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v11);
  v13 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11);
  if (!v12)
  {
    if (!v13)
    {
      v24 = v10[1];
      *v9 = *v10;
      v9[1] = v24;
      swift_bridgeObjectRelease();
      v9[2] = v10[2];
      swift_bridgeObjectRelease();
      v25 = *(int *)(v11 + 24);
      v26 = (char *)v9 + v25;
      v27 = (char *)v10 + v25;
      v28 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
      goto LABEL_7;
    }
    sub_23F93DADC((uint64_t)v9, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v18 = sub_23F6916B8(&qword_256EB1C30);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(_OWORD *)v9 = *(_OWORD *)v10;
  v9[2] = v10[2];
  v14 = *(int *)(v11 + 24);
  v15 = (char *)v9 + v14;
  v16 = (char *)v10 + v14;
  v17 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
LABEL_7:
  v19 = *(int *)(a3 + 28);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoExternalAgentTextQuery()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FAC12E8()
{
  sub_23FAC12F4();
}

void sub_23FAC12F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F6F08A0();
  if (v5)
  {
    sub_23F6F083C(*(_QWORD *)(v0 + 8));
    sub_23F694C84();
  }
  else
  {
    sub_23FAC2F7C(v1, v2, v3, v4);
    sub_23F6F07DC();
    if (v5)
    {
      sub_23F6F0B08();
    }
    else
    {
      sub_23F6B53A4();
      sub_23F6F0AFC();
    }
    v7 = sub_23F6F08CC(v6);
    sub_23F6F07D0(v7, v8, v9);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoExternalAgentTextQuery()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FAC1350()
{
  sub_23FAC135C();
}

void sub_23FAC135C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F6F0850();
  if (v5)
  {
    sub_23F6F0B1C();
    sub_23F694C84();
  }
  else
  {
    sub_23FAC2F5C(v0, v1, v2, v3, v4);
    sub_23F6F07EC();
    if (v5)
    {
      sub_23F6F0BD0();
    }
    else
    {
      sub_23F6B53A4();
      sub_23F6F0BB8();
    }
    v7 = sub_23F6F082C(v6);
    sub_23F6F07C4(v7, v8, v9, v10);
  }
}

void sub_23FAC13A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FAC2134(a1, a2, a3, (uint64_t)&unk_23FB8EBA8, (uint64_t)&unk_23FB8EBC0, qword_256EB4EC0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptProtoSpeechQuery(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v5 = a1;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    v7 = *(int *)(a3 + 28);
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = sub_23FB2D718();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t destroy for TranscriptProtoSpeechQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for TranscriptProtoSpeechQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(int *)(a3 + 28);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_23FB2D718();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoSpeechQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoSpeechQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoSpeechQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 28);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSpeechQuery()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FAC16FC()
{
  unint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F08A0();
  if (v2)
  {
    sub_23F6F083C(*v0);
    sub_23F694C84();
  }
  else
  {
    v3 = v1;
    sub_23F6B53A4();
    v4 = sub_23F6F08CC(*(int *)(v3 + 28));
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSpeechQuery()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FAC1750()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F0850();
  if (v1)
  {
    sub_23F6F0B28();
    sub_23F694C84();
  }
  else
  {
    v2 = v0;
    sub_23F6B53A4();
    v3 = sub_23F6F082C(*(int *)(v2 + 28));
    sub_23F6F07C4(v3, v4, v5, v6);
  }
}

void sub_23FAC1790()
{
  sub_23FAC17B0();
}

void sub_23FAC17B0()
{
  unint64_t v0;

  sub_23F6F0B14();
  if (v0 <= 0x3F)
  {
    sub_23FAC2E74();
    sub_23F6F0BFC();
  }
  sub_23F6B6BFC();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoExternalAgentSpeechQuery(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v24;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12))
    {
      v13 = sub_23F6916B8(&qword_256EB1C30);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v14 = v11[1];
      *v10 = *v11;
      v10[1] = v14;
      v10[2] = v11[2];
      v15 = *(int *)(v12 + 24);
      v16 = (char *)v10 + v15;
      v24 = (char *)v11 + v15;
      v17 = sub_23FB2D718();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18(v16, v24, v17);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v10, 0, 1, v12);
    }
    v19 = *(int *)(a3 + 28);
    v20 = (char *)v7 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  }
  return v7;
}

uint64_t destroy for TranscriptProtoExternalAgentSpeechQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 24);
    v7 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + *(int *)(a2 + 28);
  v9 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *initializeWithCopy for TranscriptProtoExternalAgentSpeechQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 24);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F6916B8(&qword_256EB1C30);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = v9[1];
    *v8 = *v9;
    v8[1] = v12;
    v8[2] = v9[2];
    v13 = *(int *)(v10 + 24);
    v14 = (char *)v8 + v13;
    v22 = (char *)v9 + v13;
    v15 = sub_23FB2D718();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v14, v22, v15);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v17 = *(int *)(a3 + 28);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoExternalAgentSpeechQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      *v7 = *v8;
      v7[1] = v8[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v7[2] = v8[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v22 = *(int *)(v9 + 24);
      v23 = (char *)v7 + v22;
      v24 = (char *)v8 + v22;
      v25 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
      goto LABEL_7;
    }
    sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v16 = sub_23F6916B8(&qword_256EB1C30);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v12 = *(int *)(v9 + 24);
  v13 = (char *)v7 + v12;
  v26 = (char *)v8 + v12;
  v14 = sub_23FB2D718();
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15(v13, v26, v14);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v17 = *(int *)(a3 + 28);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoExternalAgentSpeechQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EB1C30);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v7 = *(_OWORD *)v8;
    v7[2] = v8[2];
    v11 = *(int *)(v9 + 24);
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v15 = *(int *)(a3 + 28);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoExternalAgentSpeechQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v10);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    if (!v12)
    {
      v23 = v9[1];
      *v8 = *v9;
      v8[1] = v23;
      swift_bridgeObjectRelease();
      v8[2] = v9[2];
      swift_bridgeObjectRelease();
      v24 = *(int *)(v10 + 24);
      v25 = (char *)v8 + v24;
      v26 = (char *)v9 + v24;
      v27 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v25, v26, v27);
      goto LABEL_7;
    }
    sub_23F93DADC((uint64_t)v8, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v17 = sub_23F6916B8(&qword_256EB1C30);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_OWORD *)v8 = *(_OWORD *)v9;
  v8[2] = v9[2];
  v13 = *(int *)(v10 + 24);
  v14 = (char *)v8 + v13;
  v15 = (char *)v9 + v13;
  v16 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  v18 = *(int *)(a3 + 28);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoExternalAgentSpeechQuery()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FAC204C()
{
  sub_23FAC2058();
}

void sub_23FAC2058()
{
  unint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F6F08A0();
  if (v5)
  {
    sub_23F6F083C(*v0);
    sub_23F694C84();
  }
  else
  {
    sub_23FAC2F7C(v1, v2, v3, v4);
    sub_23F6F07DC();
    if (v5)
    {
      sub_23F6F0B08();
    }
    else
    {
      sub_23F6B53A4();
      sub_23F6F0AFC();
    }
    v7 = sub_23F6F08CC(v6);
    sub_23F6F07D0(v7, v8, v9);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoExternalAgentSpeechQuery()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FAC20B4()
{
  sub_23FAC20C0();
}

void sub_23FAC20C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F6F0850();
  if (v5)
  {
    sub_23F6F0B28();
    sub_23F694C84();
  }
  else
  {
    sub_23FAC2F5C(v0, v1, v2, v3, v4);
    sub_23F6F07EC();
    if (v5)
    {
      sub_23F6F0BD0();
    }
    else
    {
      sub_23F6B53A4();
      sub_23F6F0BB8();
    }
    v7 = sub_23F6F082C(v6);
    sub_23F6F07C4(v7, v8, v9, v10);
  }
}

void sub_23FAC210C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FAC2134(a1, a2, a3, MEMORY[0x24BEE0158] + 64, (uint64_t)&unk_23FB8EBC0, qword_256EB4EC0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
}

void sub_23FAC2134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t *a6, void (*a7)(uint64_t))
{
  unint64_t v7;
  unint64_t v8;

  sub_23FAC3580(a1, a6, a7);
  if (v7 <= 0x3F)
  {
    sub_23F6F0B14();
    if (v8 <= 0x3F)
    {
      sub_23FAC2E74();
      sub_23F6F0BFC();
    }
  }
  sub_23F6B6BFC();
}

uint64_t _s30IntelligenceFlowPlannerSupport55TranscriptProtoSystemPromptResolutionActionCancellationVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F6B53A4();
  return sub_23F6B64B0(a1, a2, v4, **(uint64_t (***)(void))(v4 - 8));
}

uint64_t _s30IntelligenceFlowPlannerSupport55TranscriptProtoSystemPromptResolutionActionCancellationVwxx_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23F6B53A4();
  v0 = sub_23F87922C();
  return sub_23F8776C4(v0, v1, v2);
}

void _s30IntelligenceFlowPlannerSupport55TranscriptProtoSystemPromptResolutionActionCancellationVwcp_0()
{
  uint64_t v0;

  v0 = sub_23F6B53A4();
  sub_23F70D66C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16));
  sub_23F694CC8();
}

void _s30IntelligenceFlowPlannerSupport55TranscriptProtoSystemPromptResolutionActionCancellationVwca_0()
{
  uint64_t v0;

  v0 = sub_23F6B53A4();
  sub_23F70D66C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 24));
  sub_23F694CC8();
}

void _s30IntelligenceFlowPlannerSupport55TranscriptProtoSystemPromptResolutionActionCancellationVwtk_0()
{
  uint64_t v0;

  v0 = sub_23F6B53A4();
  sub_23F70D66C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 32));
  sub_23F694CC8();
}

void _s30IntelligenceFlowPlannerSupport55TranscriptProtoSystemPromptResolutionActionCancellationVwta_0()
{
  uint64_t v0;

  v0 = sub_23F6B53A4();
  sub_23F70D66C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 40));
  sub_23F694CC8();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoContinuePlanning()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoContinuePlanning()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FAC22CC()
{
  unint64_t v0;

  sub_23F6F0B14();
  if (v0 <= 0x3F)
  {
    sub_23FAC3E60();
    swift_initStructMetadata();
    sub_23F6F0BFC();
  }
  sub_23F6F5A08();
}

unint64_t sub_23FAC2320()
{
  unint64_t result;

  result = qword_256EBE4D8;
  if (!qword_256EBE4D8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for TranscriptProtoSystemRequirement, &type metadata for TranscriptProtoSystemRequirement);
    atomic_store(result, (unint64_t *)&qword_256EBE4D8);
  }
  return result;
}

void sub_23FAC2AFC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v2)(_QWORD);

  sub_23F93DB00(a1, *(_QWORD *)(a2 - 256), v2);
}

void sub_23FAC2B0C(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_23F93DB00(a1, v2, v1);
}

uint64_t sub_23FAC2B18()
{
  return sub_23FB2F11C();
}

void sub_23FAC2B30(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F93DADC(a1, v1);
}

uint64_t sub_23FAC2B38@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23FAC2B44(uint64_t a1)
{
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v1);
}

uint64_t sub_23FAC2B50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v1, 1, a1);
  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v2, 1, a1);
}

void *sub_23FAC2B80@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  const void *v2;

  return memcpy(v1, v2, *(_QWORD *)(a1 + 64));
}

void sub_23FAC2B90(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F93DADC(a1, v1);
}

void sub_23FAC2B98(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F93DB00(a1, a2, v2);
}

void sub_23FAC2BA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F93DB8C(a1, v3, a3);
}

uint64_t sub_23FAC2BA8()
{
  uint64_t v0;
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v0, 0, 1, v1);
}

void *sub_23FAC2BBC(uint64_t a1)
{
  void *v1;
  const void *v2;

  return memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

uint64_t sub_23FAC2BD0()
{
  return swift_bridgeObjectRetain();
}

void sub_23FAC2BE4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F93DADC(v2, a2);
}

void *sub_23FAC2BEC(uint64_t a1)
{
  void *v1;
  const void *v2;

  return memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

uint64_t sub_23FAC2C00()
{
  return swift_projectBox();
}

uint64_t sub_23FAC2C18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v1, v2, a1);
}

uint64_t sub_23FAC2C30(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_23FAC2C3C()
{
  uint64_t v0;
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v1, 16, v0);
}

uint64_t sub_23FAC2C4C()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23FAC2C5C()
{
  uint64_t v0;
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v0, 1, v1);
}

uint64_t sub_23FAC2C6C(uint64_t a1)
{
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v1);
}

uint64_t sub_23FAC2C7C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 96);
}

uint64_t sub_23FAC2C98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v2, v1, a1);
}

uint64_t sub_23FAC2CB0@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v1, v2, v3);
}

void sub_23FAC2CC0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F93DB8C(a1, a2, v2);
}

uint64_t sub_23FAC2CC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v1, v0, v2);
}

uint64_t sub_23FAC2CD8@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23FAC2CE4(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_23FAC2CF8(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  return swift_bridgeObjectRetain();
}

void *sub_23FAC2D1C(uint64_t a1)
{
  void *v1;
  const void *v2;

  return memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

uint64_t sub_23FAC2D30(uint64_t a1)
{
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v1);
}

uint64_t sub_23FAC2D3C(uint64_t a1)
{
  uint64_t v1;

  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v1, 1, 1, a1);
  return 0;
}

uint64_t sub_23FAC2D68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 40))(v1, v2, a1);
}

uint64_t sub_23FAC2D80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 24))(v1, v2, a1);
}

uint64_t sub_23FAC2D98()
{
  return 0;
}

uint64_t sub_23FAC2DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  return a4(0);
}

uint64_t sub_23FAC2DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 1, 1, a4);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

void sub_23FAC2DEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F93DB00(a1, v3, a3);
}

void sub_23FAC2DF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F93DB8C(a1, v3, a3);
}

unint64_t sub_23FAC2DFC()
{
  return sub_23F93DB38();
}

uint64_t sub_23FAC2E04()
{
  return swift_projectBox();
}

uint64_t sub_23FAC2E1C()
{
  return 0;
}

uint64_t sub_23FAC2E38()
{
  return swift_getEnumCaseMultiPayload();
}

unint64_t sub_23FAC2E48()
{
  return sub_23F93DB38();
}

uint64_t sub_23FAC2E50(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FAC2E6C()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23FAC2E74()
{
  return swift_initStructMetadata();
}

uint64_t sub_23FAC2E98(uint64_t a1)
{
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v1, 1, 1, a1);
}

uint64_t sub_23FAC2EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 1, 1, a4);
  return 0;
}

uint64_t sub_23FAC2EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, a2, v2);
}

void sub_23FAC2ED0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F93DB00(a1, v3, a3);
}

uint64_t sub_23FAC2ED8()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23FAC2EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return sub_23F6916B8(a5);
}

uint64_t sub_23FAC2EF8()
{
  return swift_projectBox();
}

uint64_t sub_23FAC2F04()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FAC2F18()
{
  return sub_23FB2F11C();
}

uint64_t sub_23FAC2F30()
{
  return swift_projectBox();
}

void sub_23FAC2F38(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F840E4C(a1, a2, v2);
}

uint64_t sub_23FAC2F40(uint64_t a1, uint64_t a2)
{
  return sub_23F6D1E20(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
}

uint64_t sub_23FAC2F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return sub_23F6916B8(a5);
}

uint64_t sub_23FAC2F6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v0, v1, v2);
}

uint64_t sub_23FAC2F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return sub_23F6916B8(a4);
}

void sub_23FAC2F8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_23F93DB8C(v3, v4, a3);
}

uint64_t sub_23FAC2F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 1, 1, a4);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_23FAC2FB8(uint64_t a1)
{
  uint64_t v1;

  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v1, 1, 1, a1);
  return 0;
}

uint64_t sub_23FAC2FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23FAC300C(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FAC3030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return sub_23F6916B8(a4);
}

uint64_t sub_23FAC3044()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_23FAC304C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FAC3074()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_23FAC307C@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v1, v2, v3);
}

uint64_t sub_23FAC308C()
{
  return sub_23FB2F11C();
}

uint64_t sub_23FAC30A4()
{
  uint64_t v0;
  uint64_t v1;

  *(_DWORD *)v0 = *(_DWORD *)v1;
  *(_QWORD *)(v0 + 8) = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

void sub_23FAC30C4(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F93DADC(a1, v1);
}

void sub_23FAC30CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F93DB8C(a1, v3, a3);
}

uint64_t sub_23FAC30D4()
{
  return 0;
}

uint64_t sub_23FAC30E8()
{
  return swift_projectBox();
}

void sub_23FAC30F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F93DB8C(a1, v3, a3);
}

void sub_23FAC30F8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F93DADC(v2, a2);
}

uint64_t sub_23FAC3100()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

void sub_23FAC3108(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F93DB8C(a1, v3, a3);
}

uint64_t sub_23FAC3110(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FAC312C(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  return swift_bridgeObjectRetain();
}

void sub_23FAC3148(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  sub_23F6DE58C(319, a4, a5);
}

uint64_t sub_23FAC315C()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_23FAC316C()
{
  return sub_23F93DB38();
}

uint64_t sub_23FAC3174(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  return swift_bridgeObjectRelease();
}

void sub_23FAC3190(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_23F93DB8C(v3, v4, a3);
}

uint64_t sub_23FAC319C(uint64_t a1)
{
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v1, 1, 1, a1);
}

uint64_t sub_23FAC31B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + a1;
  v4 = type metadata accessor for TranscriptProtoStatementID(0);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v3, 1, 1, v4);
  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v1 + *(int *)(v2 + 32), 1, 1, v4);
}

uint64_t sub_23FAC31FC()
{
  return type metadata accessor for TranscriptProtoEvent(0);
}

void sub_23FAC3208(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F93DB8C(a1, a2, v2);
}

uint64_t sub_23FAC3210()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

void sub_23FAC3218(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F93DB8C(a1, v3, a3);
}

void sub_23FAC3220(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F840E4C(a1, v3, a3);
}

void sub_23FAC3228(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F93DADC(v2, a2);
}

uint64_t sub_23FAC3230(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v3, 1, 1, a1);
  v4 = v1 + *(int *)(v2 + 28);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v4, 1, 1, v5);
}

uint64_t sub_23FAC3278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)v0 = *(_DWORD *)v1;
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 8) = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v0 + 16) = v2;
  return swift_bridgeObjectRelease();
}

void sub_23FAC329C(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_23F93DB00(a1, v2, v1);
}

void sub_23FAC32A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F93DB8C(a1, v3, a3);
}

uint64_t sub_23FAC32B0()
{
  uint64_t v0;
  unint64_t v1;

  return sub_23F6D1E20(v0, v1);
}

uint64_t sub_23FAC32BC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FAC32C8(uint64_t a1)
{
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v1, 1, 1, a1);
}

uint64_t sub_23FAC32E0()
{
  return type metadata accessor for TranscriptProtoEvent(0);
}

void sub_23FAC32EC(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F93DB00(a1, a2, v2);
}

void sub_23FAC32F4(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F93DB00(a1, a2, v2);
}

uint64_t sub_23FAC32FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v1, v2);
}

void sub_23FAC330C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F840E4C(a1, v3, a3);
}

void sub_23FAC3314(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F93DB8C(a1, a2, v2);
}

void sub_23FAC331C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F93DB8C(a1, v3, a3);
}

uint64_t sub_23FAC3324()
{
  return 0;
}

uint64_t sub_23FAC334C(uint64_t a1)
{
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 1, 1, v1);
}

void sub_23FAC3368(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F840E4C(a1, a2, v2);
}

uint64_t sub_23FAC337C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23FAC3384()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FAC3398()
{
  return 0;
}

uint64_t sub_23FAC33AC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FAC33C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = type metadata accessor for TranscriptProtoStatementOutcome(a1);
  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v1, 1, 1, v2);
}

uint64_t sub_23FAC33E0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 96);
}

uint64_t sub_23FAC33EC()
{
  return 319;
}

uint64_t sub_23FAC3400()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FAC340C()
{
  return swift_projectBox();
}

uint64_t sub_23FAC3418(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
  return swift_bridgeObjectRetain();
}

void sub_23FAC3424(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F93DB8C(a1, a2, v2);
}

uint64_t sub_23FAC342C()
{
  uint64_t v0;

  return v0;
}

void sub_23FAC3438(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F93DB8C(a1, a2, v2);
}

uint64_t sub_23FAC3440()
{
  uint64_t v0;
  uint64_t v1;

  *(_DWORD *)v0 = *(_DWORD *)v1;
  *(_QWORD *)(v0 + 8) = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FAC3460(uint64_t *a1, _OWORD *a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *a2;
  return sub_23F6BC34C(v4, v5);
}

uint64_t sub_23FAC3480()
{
  uint64_t v0;
  uint64_t v1;

  *(_DWORD *)v0 = *(_DWORD *)v1;
  *(_QWORD *)(v0 + 8) = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FAC34A0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  return 0;
}

uint64_t sub_23FAC34C8(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  return 0;
}

void sub_23FAC34F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F93DB8C(a1, v3, a3);
}

_QWORD *sub_23FAC34F8(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *result = *a2;
  result[1] = v2;
  return result;
}

void sub_23FAC3514()
{
  _QWORD *v0;

  *v0 = 0;
  v0[1] = 0xE000000000000000;
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
}

void sub_23FAC3524()
{
  uint64_t v0;

  *(_QWORD *)v0 = 0;
  *(_QWORD *)(v0 + 8) = 0xE000000000000000;
  *(_BYTE *)(v0 + 16) = 0;
}

uint64_t sub_23FAC3540()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(int *)(v1 + 20);
}

uint64_t sub_23FAC3558()
{
  return type metadata accessor for TranscriptProtoResponseManifest(0);
}

uint64_t sub_23FAC3560()
{
  return type metadata accessor for TranscriptProtoRequest(0);
}

uint64_t sub_23FAC3568()
{
  return type metadata accessor for TranscriptProtoInterpretedStatementResult(0);
}

uint64_t sub_23FAC3570()
{
  return type metadata accessor for TranscriptProtoSystemResponse(0);
}

uint64_t sub_23FAC3578()
{
  return type metadata accessor for TranscriptProtoStatementResult(0);
}

void sub_23FAC3580(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_23F6DE58C(319, a2, a3);
}

void sub_23FAC3588(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F93DB8C(a1, a2, v2);
}

uint64_t sub_23FAC3590()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FAC35A0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FAC35BC(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  return swift_bridgeObjectRetain();
}

void sub_23FAC35D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F93DB8C(a1, v3, a3);
}

uint64_t sub_23FAC35E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + a1;
  v3 = type metadata accessor for TranscriptProtoStatementID(0);
  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v2, 1, 1, v3);
}

uint64_t sub_23FAC360C()
{
  return type metadata accessor for TranscriptProtoAction(0);
}

uint64_t sub_23FAC3614()
{
  return swift_retain();
}

_QWORD *sub_23FAC362C(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t sub_23FAC3664()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_23FAC36F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)v0 = *(_DWORD *)v1;
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 8) = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v0 + 16) = v2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FAC370C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = a1;
  *(_QWORD *)(v2 - 88) = a2;
  return 0;
}

uint64_t sub_23FAC3718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)v0 = *(_DWORD *)v1;
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 8) = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v0 + 16) = v2;
  return swift_bridgeObjectRelease();
}

void sub_23FAC3730(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F93DADC(a1, v1);
}

void sub_23FAC3738(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F93DB00(a1, v3, a3);
}

uint64_t sub_23FAC3740@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v1 + a1, 1, 1, v2);
}

void sub_23FAC3758(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F93DADC(v2, a2);
}

uint64_t sub_23FAC3760(uint64_t a1)
{
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v1, 1, 1, a1);
}

void sub_23FAC3778()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v2 = (_QWORD *)(v0 + *(int *)(v1 + 28));
  *v2 = 0;
  v2[1] = 0;
  v3 = (_QWORD *)(v0 + *(int *)(v1 + 32));
  *v3 = 0;
  v3[1] = 0;
}

_QWORD *sub_23FAC3798(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

_QWORD *sub_23FAC37B8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t sub_23FAC37D8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  return 0;
}

void sub_23FAC37F8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F7DCCDC(a1, v3, a3);
}

void sub_23FAC3800(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F840E4C(v3, a2, a3);
}

uint64_t sub_23FAC3808(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v1, v2, a1);
}

uint64_t sub_23FAC3820()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FAC3834()
{
  return 0;
}

uint64_t sub_23FAC3848()
{
  return type metadata accessor for TranscriptProtoTextQuery(0);
}

uint64_t sub_23FAC3850()
{
  return type metadata accessor for TranscriptProtoParameterQuery(0);
}

uint64_t sub_23FAC3858()
{
  return type metadata accessor for TranscriptProtoSystemPromptResolution(0);
}

uint64_t sub_23FAC3860()
{
  return type metadata accessor for TranscriptProtoCandidate(0);
}

uint64_t sub_23FAC3868()
{
  return type metadata accessor for TranscriptProtoSessionStart(0);
}

uint64_t sub_23FAC3870()
{
  return type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
}

uint64_t sub_23FAC3878()
{
  return type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
}

uint64_t sub_23FAC3880()
{
  return type metadata accessor for TranscriptProtoActionSuccess(0);
}

uint64_t sub_23FAC3888()
{
  return type metadata accessor for TranscriptProtoUndoRedoRequest(0);
}

uint64_t sub_23FAC3890()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 24) = *(_QWORD *)(v0 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FAC38A8()
{
  return 0;
}

void sub_23FAC38C4()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
  v0[1] = v1[1];
  v0[2] = v1[2];
}

void sub_23FAC38E0(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F93DADC(a1, v1);
}

void sub_23FAC38E8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F840E4C(a1, v3, a3);
}

uint64_t sub_23FAC38F0(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_23FAC3904()
{
  return type metadata accessor for TranscriptProtoStatementID(0);
}

void sub_23FAC3988(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F840E4C(a1, v3, a3);
}

void sub_23FAC3990(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F93DADC(a1, v1);
}

uint64_t sub_23FAC3998()
{
  return swift_retain();
}

uint64_t sub_23FAC39A0(uint64_t a1)
{
  return sub_23F6BC34C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t sub_23FAC39B4()
{
  return swift_bridgeObjectRelease();
}

void sub_23FAC39BC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F840E4C(a1, v3, a3);
}

void sub_23FAC39C4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_23F840E4C(v3, v4, a3);
}

__n128 sub_23FAC39D0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  return result;
}

void *sub_23FAC39EC(uint64_t a1, uint64_t a2, size_t a3)
{
  void *v3;
  const void *v4;

  return memcpy(v3, v4, a3);
}

uint64_t sub_23FAC39F8(uint64_t a1)
{
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v1, 1, 1, a1);
}

uint64_t sub_23FAC3A0C(uint64_t a1)
{
  uint64_t v1;

  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v1, 1, 1, a1);
  return 0;
}

uint64_t sub_23FAC3A44()
{
  return type metadata accessor for TranscriptProtoResponseOutput(0);
}

uint64_t sub_23FAC3A4C()
{
  return type metadata accessor for TranscriptProtoTypeConversionRequest(0);
}

uint64_t sub_23FAC3A54()
{
  return type metadata accessor for TranscriptProtoClientAction(0);
}

uint64_t sub_23FAC3A5C()
{
  return type metadata accessor for TranscriptProtoActionResolverRequest(0);
}

uint64_t sub_23FAC3A64()
{
  return type metadata accessor for TranscriptProtoExternalAgentRequest(0);
}

uint64_t sub_23FAC3A6C()
{
  return type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
}

uint64_t sub_23FAC3A74()
{
  return type metadata accessor for TranscriptProtoASTForInStmt(0);
}

uint64_t sub_23FAC3A7C()
{
  return type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
}

uint64_t sub_23FAC3A84()
{
  return type metadata accessor for TranscriptProtoASTIfStmt(0);
}

uint64_t sub_23FAC3A8C()
{
  return type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant(0);
}

uint64_t sub_23FAC3A94()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_23FAC3AA0()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

void sub_23FAC3AB4(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = a2[1];
  *v2 = *a2;
  v2[1] = v3;
}

void sub_23FAC3AC0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F93DB8C(a1, a2, v2);
}

void sub_23FAC3AC8()
{
  JUMPOUT(0x242671028);
}

void sub_23FAC3AD0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F93DB8C(a1, a2, v2);
}

void sub_23FAC3AD8(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F93DB00(a1, a2, v2);
}

uint64_t sub_23FAC3B18()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FAC3B30()
{
  return 0;
}

uint64_t sub_23FAC3B48()
{
  return swift_bridgeObjectRelease();
}

void sub_23FAC3B58(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F840E4C(a1, v3, a3);
}

uint64_t sub_23FAC3B60()
{
  return 0;
}

uint64_t sub_23FAC3B6C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FAC3B78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v1, v0, v2);
}

uint64_t sub_23FAC3B88()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FAC3B98()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FAC3BA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v1 + 16) = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 24) = v2;
  return swift_bridgeObjectRelease();
}

void sub_23FAC3BD0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_BYTE *)(v0 + 8) = *(_BYTE *)(v1 + 8);
}

void sub_23FAC3BE8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_BYTE *)(v0 + 8) = *((_BYTE *)v1 + 8);
  *(_QWORD *)v0 = v2;
}

uint64_t sub_23FAC3C00()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *(_QWORD *)(v0 + 16);
  return swift_bridgeObjectRetain();
}

__n128 sub_23FAC3C10(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void sub_23FAC3C20(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F840E4C(a1, v3, a3);
}

uint64_t sub_23FAC3C28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v2, v1, a1);
}

void sub_23FAC3C50()
{
  _QWORD *v0;

  *v0 = 0;
  v0[1] = 0xE000000000000000;
}

uint64_t sub_23FAC3C5C()
{
  return sub_23FB2FC5C();
}

uint64_t sub_23FAC3C84()
{
  return type metadata accessor for TranscriptProtoVariableStep(0);
}

uint64_t sub_23FAC3C8C()
{
  return type metadata accessor for TranscriptProtoTypeConversionResult(0);
}

uint64_t sub_23FAC3C94()
{
  return type metadata accessor for TranscriptProtoProgramStatement(0);
}

uint64_t sub_23FAC3C9C()
{
  return type metadata accessor for TranscriptProtoInfixExpression(0);
}

uint64_t sub_23FAC3CA4()
{
  return sub_23FB2D6D0();
}

uint64_t sub_23FAC3CAC()
{
  return type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
}

uint64_t sub_23FAC3CB4()
{
  return type metadata accessor for TranscriptProtoASTUpdateExpr(0);
}

uint64_t sub_23FAC3CBC()
{
  return type metadata accessor for TranscriptProtoParameterNotAllowed(0);
}

uint64_t sub_23FAC3CC4()
{
  return type metadata accessor for TranscriptProtoASTExprInfixVariant(0);
}

uint64_t sub_23FAC3CCC()
{
  return type metadata accessor for TranscriptProtoToolResolution(0);
}

uint64_t sub_23FAC3CD4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  return swift_bridgeObjectRelease();
}

void sub_23FAC3CE4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F840E4C(a1, a2, v2);
}

uint64_t sub_23FAC3CEC()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_23FAC3CF4()
{
  return swift_bridgeObjectRelease();
}

_QWORD *sub_23FAC3CFC(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void sub_23FAC3D10()
{
  char v0;
  _BYTE *v1;

  *v1 = v0 + 1;
}

void sub_23FAC3D1C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F93DB8C(a1, a2, v2);
}

uint64_t sub_23FAC3D24()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 96);
}

uint64_t sub_23FAC3D30()
{
  return 0;
}

uint64_t sub_23FAC3D44()
{
  return type metadata accessor for TranscriptProtoStatementID(0);
}

uint64_t sub_23FAC3D50()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v3 = *v0;
  v4 = v0[1];
  *v0 = v1;
  v0[1] = v2;
  return sub_23F6BC34C(v3, v4);
}

uint64_t sub_23FAC3D68()
{
  return 0;
}

void sub_23FAC3D7C(uint64_t a1)
{
  void (*v1)(uint64_t);
  unint64_t *v2;

  sub_23F6DE58C(a1, v2, v1);
}

uint64_t sub_23FAC3D88()
{
  return sub_23FB2F050();
}

uint64_t sub_23FAC3D94()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void sub_23FAC3DA0()
{
  _QWORD **v0;
  _QWORD **v1;

  sub_23F6957CC(*v0, *v1);
}

uint64_t sub_23FAC3DAC()
{
  return 0;
}

uint64_t sub_23FAC3DB8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FAC3DD4()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

void sub_23FAC3DF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_23F93DB00(v4, v3, a3);
}

uint64_t sub_23FAC3DFC()
{
  return swift_projectBox();
}

uint64_t sub_23FAC3E04()
{
  return swift_release();
}

uint64_t sub_23FAC3E18()
{
  return 0;
}

uint64_t sub_23FAC3E2C()
{
  return 0;
}

uint64_t sub_23FAC3E40()
{
  uint64_t v0;
  unint64_t v1;

  return sub_23F6D1E20(v0, v1);
}

uint64_t sub_23FAC3E4C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FAC3E60()
{
  uint64_t v0;

  return v0;
}

void sub_23FAC3E80()
{
  _QWORD *v0;

  *v0 = 0;
  v0[1] = 0xE000000000000000;
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  v0[4] = 0;
  v0[5] = 0xE000000000000000;
}

uint64_t sub_23FAC3E94(uint64_t a1)
{
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v1, 1, 1, a1);
}

uint64_t sub_23FAC3EB8(uint64_t a1)
{
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v1, 1, 1, a1);
}

_BYTE *_s30IntelligenceFlowPlannerSupport29TranscriptProtoQueryPredicateV2opAA0efG8OperatorOvs_0(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

_BYTE *_s30IntelligenceFlowPlannerSupport29TranscriptProtoResponseOutputV12responseTypeAA0efgJ0Ovs_0(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = *result;
  return result;
}

_BYTE *_s30IntelligenceFlowPlannerSupport053TranscriptProtoSystemRequirementAuthenticationRequestI5LevelV06systemhijiK6ValuesAA0efghijiK4EnumOSgvs_0(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t sub_23FAC3F0C()
{
  return type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
}

uint64_t sub_23FAC3F14()
{
  return type metadata accessor for TranscriptProtoActionParameterValue(0);
}

uint64_t sub_23FAC3F1C()
{
  return type metadata accessor for TranscriptProtoASTExprDotVariant(0);
}

void sub_23FAC3F24()
{
  _QWORD **v0;
  _QWORD **v1;

  sub_23F6957CC(*v1, *v0);
}

uint64_t sub_23FAC3F3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  void (*v31)(char *, unint64_t, uint64_t);
  char *v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t i;
  int64_t v38;
  unint64_t v39;
  int64_t v40;
  void (*v41)(char *, unint64_t, uint64_t);
  char *v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  unint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  int64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;

  v2 = sub_23FB2EB40();
  v55 = *(_QWORD *)(v2 - 8);
  v56 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v57 = (char *)&v46 - v6;
  v7 = sub_23FB2EDD4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v50 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v46 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v54 = (char *)&v46 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v53 = (char *)&v46 - v16;
  v17 = *(_QWORD *)(a1 + 16);
  v58 = MEMORY[0x24BEE4AF8];
  sub_23F711898();
  v18 = *(_QWORD *)(a1 + 56);
  v51 = a1 + 56;
  v19 = -1;
  v20 = -1 << *(_BYTE *)(a1 + 32);
  if (-v20 < 64)
    v19 = ~(-1 << -(char)v20);
  v21 = v19 & v18;
  v49 = v17;
  if (v17)
  {
    v52 = (unint64_t)(63 - v20) >> 6;
    result = swift_bridgeObjectRetain();
    v23 = 0;
    v24 = 0;
    v47 = v5;
    v48 = a1;
    while (1)
    {
      if (v21)
      {
        v25 = __clz(__rbit64(v21));
        v21 &= v21 - 1;
        v26 = v25 | (v24 << 6);
      }
      else
      {
        v27 = v24 + 1;
        if (__OFADD__(v24, 1))
        {
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
          goto LABEL_56;
        }
        if (v27 >= v52)
          goto LABEL_55;
        v28 = *(_QWORD *)(v51 + 8 * v27);
        ++v24;
        if (!v28)
        {
          v24 = v27 + 1;
          if (v27 + 1 >= v52)
            goto LABEL_58;
          v28 = *(_QWORD *)(v51 + 8 * v24);
          if (!v28)
          {
            v24 = v27 + 2;
            if (v27 + 2 >= v52)
              goto LABEL_60;
            v28 = *(_QWORD *)(v51 + 8 * v24);
            if (!v28)
            {
              v29 = v27 + 3;
              if (v29 >= v52)
                goto LABEL_61;
              v28 = *(_QWORD *)(v51 + 8 * v29);
              if (!v28)
              {
                while (1)
                {
                  v24 = v29 + 1;
                  if (__OFADD__(v29, 1))
                    break;
                  if (v24 >= v52)
                    goto LABEL_57;
                  v28 = *(_QWORD *)(v51 + 8 * v24);
                  ++v29;
                  if (v28)
                    goto LABEL_20;
                }
LABEL_56:
                __break(1u);
LABEL_57:
                __break(1u);
LABEL_58:
                __break(1u);
                goto LABEL_59;
              }
              v24 = v29;
            }
          }
        }
LABEL_20:
        v21 = (v28 - 1) & v28;
        v26 = __clz(__rbit64(v28)) + (v24 << 6);
      }
      v30 = *(_QWORD *)(a1 + 48) + *(_QWORD *)(v8 + 72) * v26;
      v31 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      v32 = v50;
      v31(v50, v30, v7);
      v31(v13, (unint64_t)v32, v7);
      sub_23FB2EDBC();
      v33 = *(void (**)(char *, uint64_t))(v8 + 8);
      v33(v13, v7);
      v33(v32, v7);
      v34 = v58;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F711898();
        v34 = v58;
      }
      v35 = *(_QWORD *)(v34 + 16);
      if (v35 >= *(_QWORD *)(v34 + 24) >> 1)
      {
        sub_23F711898();
        v34 = v58;
      }
      ++v23;
      *(_QWORD *)(v34 + 16) = v35 + 1;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v55 + 32))(v34+ ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80))+ *(_QWORD *)(v55 + 72) * v35, v47, v56);
      v58 = v34;
      a1 = v48;
      if (v23 == v49)
        goto LABEL_28;
    }
  }
  v34 = v58;
  v52 = (unint64_t)(63 - v20) >> 6;
  result = swift_bridgeObjectRetain();
  v24 = 0;
LABEL_28:
  if (!v21)
    goto LABEL_30;
LABEL_29:
  v36 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  for (i = v36 | (v24 << 6); ; i = __clz(__rbit64(v39)) + (v24 << 6))
  {
    v41 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
    v42 = v54;
    v41(v54, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v8 + 72) * i, v7);
    v43 = v53;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v53, v42, v7);
    v41(v13, (unint64_t)v43, v7);
    sub_23FB2EDBC();
    v44 = *(void (**)(char *, uint64_t))(v8 + 8);
    v44(v13, v7);
    v44(v43, v7);
    v34 = v58;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23F711898();
      v34 = v58;
    }
    v45 = *(_QWORD *)(v34 + 16);
    if (v45 >= *(_QWORD *)(v34 + 24) >> 1)
    {
      sub_23F711898();
      v34 = v58;
    }
    *(_QWORD *)(v34 + 16) = v45 + 1;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v55 + 32))(v34+ ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80))+ *(_QWORD *)(v55 + 72) * v45, v57, v56);
    v58 = v34;
    if (v21)
      goto LABEL_29;
LABEL_30:
    v38 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_54;
    }
    if (v38 >= v52)
      goto LABEL_52;
    v39 = *(_QWORD *)(v51 + 8 * v38);
    ++v24;
    if (!v39)
    {
      v24 = v38 + 1;
      if (v38 + 1 >= v52)
        goto LABEL_52;
      v39 = *(_QWORD *)(v51 + 8 * v24);
      if (!v39)
      {
        v24 = v38 + 2;
        if (v38 + 2 >= v52)
          goto LABEL_52;
        v39 = *(_QWORD *)(v51 + 8 * v24);
        if (!v39)
        {
          v24 = v38 + 3;
          if (v38 + 3 >= v52)
            goto LABEL_52;
          v39 = *(_QWORD *)(v51 + 8 * v24);
          if (!v39)
            break;
        }
      }
    }
LABEL_45:
    v21 = (v39 - 1) & v39;
  }
  v40 = v38 + 4;
  if (v40 >= v52)
  {
LABEL_52:
    swift_release();
    return v34;
  }
  v39 = *(_QWORD *)(v51 + 8 * v40);
  if (v39)
  {
    v24 = v40;
    goto LABEL_45;
  }
  while (1)
  {
    v24 = v40 + 1;
    if (__OFADD__(v40, 1))
      break;
    if (v24 >= v52)
      goto LABEL_52;
    v39 = *(_QWORD *)(v51 + 8 * v24);
    ++v40;
    if (v39)
      goto LABEL_45;
  }
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
  return result;
}

uint64_t sub_23FAC4508(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a1;
  v7 = sub_23F6916B8(&qword_256EBE538);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F693E0C();
  v26 = v9;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F9238C8();
  v11 = sub_23FB2DA60();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BE57108];
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v24 - v15;
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v25 = v3;
  v17(v5, v3, v11);
  sub_23F6D3458(&qword_256EBE540, v12, MEMORY[0x24BE57120]);
  sub_23FB2F710();
  sub_23F6D3458(&qword_256EBE548, (uint64_t (*)(uint64_t))MEMORY[0x24BE57108], MEMORY[0x24BE57118]);
  v24[1] = a2;
  v18 = sub_23FB2F11C() ^ 1;
  v27 = v7;
  v19 = (uint64_t)&v2[*(int *)(v7 + 48)];
  *v2 = v18 & 1;
  if ((v18 & 1) != 0)
  {
    v20 = sub_23F6B6F88();
    v21(v20);
    sub_23FAD74A0(v19);
    sub_23FAD74A0(v5);
    sub_23FB2F71C();
  }
  else
  {
    sub_23FAD74CC(v19, (uint64_t)v16);
  }
  v22 = v26 + *(int *)(v27 + 48);
  sub_23FAD74CC(v22, v19);
  sub_23FAD74CC(v28, v22);
  return v18 & 1;
}

uint64_t sub_23FAC46DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  int v19;
  __int16 v20;
  char v21;
  char v22;

  v2 = v0;
  v3 = sub_23FB2DE08();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ContextProtoRetrievedContext(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  ContextProtoRetrievedContext.init(context:)((uint64_t)v6, v10, v11, v12, v13, v14, v15, v16, v18, v19, v20, v21, v22);
  if (!v1)
  {
    sub_23F6D3458(&qword_256EA2DB0, type metadata accessor for ContextProtoRetrievedContext, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedContext);
    v7 = sub_23FB2D8EC();
    sub_23F6D3508((uint64_t)v9, type metadata accessor for ContextProtoRetrievedContext);
  }
  return v7;
}

uint64_t sub_23FAC4810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18[2];

  v2 = v0;
  v3 = sub_23FB2DD24();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ContextProtoContextMetadata(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  ContextProtoContextMetadata.init(context:)((uint64_t)v6, v10, v11, v12, v13, v14, v15, v16, v18[0], v18[1]);
  if (!v1)
  {
    sub_23F6D3458(&qword_256EA2F68, type metadata accessor for ContextProtoContextMetadata, (uint64_t)&protocol conformance descriptor for ContextProtoContextMetadata);
    v7 = sub_23FB2D8EC();
    sub_23F6D3508((uint64_t)v9, type metadata accessor for ContextProtoContextMetadata);
  }
  return v7;
}

uint64_t sub_23FAC4944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18[2];

  v2 = v0;
  v3 = sub_23FB2E120();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ContextProtoStructuredContext(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  ContextProtoStructuredContext.init(context:)((uint64_t)v6, v10, v11, v12, v13, v14, v15, v16, v18[0], v18[1]);
  if (!v1)
  {
    sub_23F6D3458(&qword_256EA2FC0, type metadata accessor for ContextProtoStructuredContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContext);
    v7 = sub_23FB2D8EC();
    sub_23F6D3508((uint64_t)v9, type metadata accessor for ContextProtoStructuredContext);
  }
  return v7;
}

char *sub_23FAC4A78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  char v19;
  _BYTE *v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;

  v0 = sub_23FB2DD9C();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v23 - v5;
  v7 = sub_23FB2DA90();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ContextProtoConfidence(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v15 = v24;
  v24 = v7;
  v14(v10, v15, v7);
  sub_23FB2DA78();
  v17 = v16;
  sub_23FB2DA84();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v4, v0);
  if (v18 == *MEMORY[0x24BE57730])
  {
    v19 = 0;
  }
  else if (v18 == *MEMORY[0x24BE57740])
  {
    v19 = 1;
  }
  else
  {
    if (v18 != *MEMORY[0x24BE57738])
    {
      sub_23F779AF8();
      swift_allocError();
      *v21 = 0;
      swift_willThrow();
      v22 = *(void (**)(char *, uint64_t))(v1 + 8);
      v22(v6, v0);
      v22(v4, v0);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v24);
      return v10;
    }
    v19 = 2;
  }
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)v13 = v17;
  v13[4] = v19;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v24);
  sub_23F6D3458(&qword_256EA2FA8, type metadata accessor for ContextProtoConfidence, (uint64_t)&protocol conformance descriptor for ContextProtoConfidence);
  v10 = (char *)sub_23FB2D8EC();
  sub_23F6D3508((uint64_t)v13, type metadata accessor for ContextProtoConfidence);
  return v10;
}

uint64_t sub_23FAC4D14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v19;

  v1 = v0;
  v2 = sub_23FB2DAE4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ContextProtoBoundingBox(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  sub_23FB2DAB4();
  v10 = v9;
  sub_23FB2DAC0();
  v12 = v11;
  sub_23FB2DACC();
  v14 = v13;
  sub_23FB2DAD8();
  v16 = v15;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)v8 = v10;
  v8[4] = 0;
  *((_DWORD *)v8 + 2) = v12;
  v8[12] = 0;
  *((_DWORD *)v8 + 4) = v14;
  v8[20] = 0;
  *((_DWORD *)v8 + 6) = v16;
  v8[28] = 0;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_23F6D3458(&qword_256EA2F80, type metadata accessor for ContextProtoBoundingBox, (uint64_t)&protocol conformance descriptor for ContextProtoBoundingBox);
  v17 = sub_23FB2D8EC();
  sub_23F6D3508((uint64_t)v8, type metadata accessor for ContextProtoBoundingBox);
  return v17;
}

uint64_t sub_23FAC4E9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v2 = v0;
  v3 = sub_23FB2DD90();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ContextProtoSurroundingText(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  ContextProtoSurroundingText.init(context:)();
  if (!v1)
  {
    sub_23F6D3458(&qword_256EA2D08, type metadata accessor for ContextProtoSurroundingText, (uint64_t)&protocol conformance descriptor for ContextProtoSurroundingText);
    v7 = sub_23FB2D8EC();
    sub_23F6D3508((uint64_t)v9, type metadata accessor for ContextProtoSurroundingText);
  }
  return v7;
}

void TranscriptContextBidirectionalConvertibleProtocol.protoBytes()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t AssociatedConformanceWitness;
  _QWORD v14[10];
  uint64_t v15;
  uint64_t v16;

  sub_23F6B5220();
  v15 = v4;
  v16 = v5;
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B5268();
  v14[1] = *(_QWORD *)(v7 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  sub_23F6BDE64();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v14 - v11;
  sub_23F75E710(v2, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  sub_23F6B6F88();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(v2, AssociatedTypeWitness, AssociatedConformanceWitness);
  if (!v1)
  {
    swift_getAssociatedConformanceWitness();
    _s16IntelligenceFlow3ASTO0aB14PlannerSupportE7BuiltinO6SearchV5query24isLowConfidenceKnowledge7pickOneAHSS_S2btcfcfA0__0();
    sub_23FB2D8EC();
    sub_23FAD73CC();
    sub_23F6B56E0((uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  }
  sub_23F877A30();
}

uint64_t sub_23FAC513C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  char v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  _BYTE *v33;
  void (*v34)(char *, uint64_t);
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v41 = a2;
  v3 = sub_23FB2DD9C();
  v38 = *(_QWORD *)(v3 - 8);
  v39 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v36 - v7;
  v40 = type metadata accessor for ContextProtoConfidence(0);
  MEMORY[0x24BDAC7A8](v40);
  v37 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F6916B8(&qword_256EBE4E8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23FB2DA90();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v36 - v18;
  v42 = a1;
  sub_23F6B4F58(a1, (uint64_t)v12, &qword_256EBE4E8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13) == 1)
  {
    sub_23F6B4F84(v42, &qword_256EBE4E8);
    sub_23F6B4F84((uint64_t)v12, &qword_256EBE4E8);
    v20 = 1;
    v22 = v40;
    v21 = v41;
    return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v21, v20, 1, v22);
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
  sub_23FB2DA78();
  v24 = v23;
  sub_23FB2DA84();
  v25 = v38;
  v26 = v39;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v6, v8, v39);
  v27 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v6, v26);
  if (v27 == *MEMORY[0x24BE57730])
  {
    v28 = 0;
LABEL_9:
    (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v26);
    v22 = v40;
    v29 = v37;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(_DWORD *)v29 = v24;
    v29[4] = v28;
    v30 = *(void (**)(char *, uint64_t))(v14 + 8);
    v30(v17, v13);
    sub_23F6B4F84(v42, &qword_256EBE4E8);
    v30(v19, v13);
    v31 = (uint64_t)v29;
    v21 = v41;
    sub_23F6F594C(v31, v41, type metadata accessor for ContextProtoConfidence);
    v20 = 0;
    return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v21, v20, 1, v22);
  }
  if (v27 == *MEMORY[0x24BE57740])
  {
    v28 = 1;
    goto LABEL_9;
  }
  if (v27 == *MEMORY[0x24BE57738])
  {
    v28 = 2;
    goto LABEL_9;
  }
  sub_23F779AF8();
  swift_allocError();
  *v33 = 0;
  swift_willThrow();
  v34 = *(void (**)(char *, uint64_t))(v25 + 8);
  v34(v8, v26);
  v34(v6, v26);
  v35 = *(void (**)(char *, uint64_t))(v14 + 8);
  v35(v17, v13);
  sub_23F6B4F84(v42, &qword_256EBE4E8);
  return ((uint64_t (*)(char *, uint64_t))v35)(v19, v13);
}

uint64_t sub_23FAC54CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;

  v30 = a2;
  v3 = type metadata accessor for ContextProtoBoundingBox(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F6916B8(&qword_256EBE500);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23FB2DAE4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v29 - v14;
  sub_23F6B4F58(a1, (uint64_t)v8, &qword_256EBE500);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9) == 1)
  {
    sub_23F6B4F84(a1, &qword_256EBE500);
    sub_23F6B4F84((uint64_t)v8, &qword_256EBE500);
    v16 = 1;
    v17 = v30;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
    sub_23FB2DAB4();
    v19 = v18;
    sub_23FB2DAC0();
    v21 = v20;
    sub_23FB2DACC();
    v23 = v22;
    sub_23FB2DAD8();
    v25 = v24;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(_DWORD *)v5 = v19;
    v5[4] = 0;
    *((_DWORD *)v5 + 2) = v21;
    v5[12] = 0;
    *((_DWORD *)v5 + 4) = v23;
    v5[20] = 0;
    *((_DWORD *)v5 + 6) = v25;
    v5[28] = 0;
    v26 = *(void (**)(char *, uint64_t))(v10 + 8);
    v26(v13, v9);
    sub_23F6B4F84(a1, &qword_256EBE500);
    v26(v15, v9);
    v27 = v30;
    sub_23F6F594C((uint64_t)v5, v30, type metadata accessor for ContextProtoBoundingBox);
    v16 = 0;
    v17 = v27;
  }
  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, v16, 1, v3);
}

void sub_23FAC570C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(uint64_t);
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t (*v33)(_QWORD);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_23F6B5220();
  v33 = v4;
  v34 = v5;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v36 = v12;
  v35 = v4(0);
  sub_23F6BDE64();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v32 - v14;
  sub_23F6916B8(v9);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  v17 = sub_23F78F260();
  v18 = v7(v17);
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F72E168();
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v32 - v21;
  sub_23FAD74AC(v11);
  sub_23F6B5164(v3, 1, v18);
  if (v23)
  {
    v24 = sub_23F72E430();
    sub_23F6B4F84(v24, v25);
    v26 = sub_23F6B6F88();
    sub_23F6B4F84(v26, v27);
    v28 = 1;
    v29 = v36;
LABEL_7:
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, v28, 1, v35);
    goto LABEL_8;
  }
  sub_23F77DB9C((uint64_t)v22, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32));
  sub_23F77DB9C(v2, (uint64_t)v22, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  sub_23F77DDE4();
  v30 = sub_23F72E430();
  if (!v0)
  {
    sub_23F6B4F84(v30, v31);
    sub_23F6B6178((uint64_t)v22, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    v29 = v36;
    sub_23F6F594C((uint64_t)v15, v36, v33);
    v28 = 0;
    goto LABEL_7;
  }
  sub_23F6B4F84(v30, v31);
  sub_23F6B6178((uint64_t)v22, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
LABEL_8:
  sub_23F77DB18();
  sub_23F6B5100();
}

void ConvertibleFromContextProtocol.init(context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_23F6B5220();
  v4 = v3;
  v30 = v5;
  v27 = *(_QWORD *)(v6 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B5BD8(v8, v25);
  v28 = v9;
  v31 = v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = sub_23FB2F65C();
  v13 = *(_QWORD *)(v12 - 8);
  sub_23F6BDE64();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v25 - v16;
  v18 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F878D94();
  v20 = v4;
  sub_23F77DB9C((uint64_t)v17, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16));
  sub_23F6B5164((uint64_t)v17, 1, AssociatedTypeWitness);
  if (v21)
  {
    v22 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v22(v20, v12);
    v22((uint64_t)v17, v12);
    v23 = 1;
    v24 = v30;
LABEL_7:
    sub_23F77DD78(v24, v23);
    goto LABEL_8;
  }
  v26 = v4;
  sub_23F75E68C(v1, (uint64_t)v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32));
  sub_23F75E68C(v2, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16));
  (*(void (**)(uint64_t, uint64_t))(v28 + 16))(v2, v31);
  if (!v0)
  {
    sub_23F6B6178(v26, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
    sub_23FAD67EC(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
    v24 = v30;
    sub_23F6B633C(v30, v29, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 32));
    v23 = 0;
    goto LABEL_7;
  }
  sub_23F6B6178(v26, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
  sub_23FAD67EC(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
LABEL_8:
  sub_23F77DB18();
  sub_23F6B5100();
}

void sub_23FAC5A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  sub_23FACC1F8(a1, (uint64_t)type metadata accessor for ContextProtoRetrievedContext, (uint64_t)MEMORY[0x24BE577B0], (uint64_t)sub_23F711370, (uint64_t)ContextProtoRetrievedContext.init(context:), a6, a7, a8, vars0, vars8);
}

void sub_23FAC5A8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(uint64_t);
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;

  v2 = sub_23FB2DAE4();
  v92 = *(_QWORD *)(v2 - 8);
  v93 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v87 = (char *)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F6916B8(&qword_256EA2800);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ContextProtoSurroundingText(0);
  v90 = *(_QWORD *)(v7 - 8);
  v91 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v89 = (char *)&v79 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v86 = (uint64_t)&v79 - v13;
  v88 = sub_23FB2DD90();
  v14 = *(_QWORD *)(v88 - 8);
  v15 = MEMORY[0x24BDAC7A8](v88);
  v84 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v97 = (char *)&v79 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v85 = (char *)&v79 - v19;
  v20 = *(_QWORD *)(a1 + 16);
  v98 = MEMORY[0x24BEE4AF8];
  sub_23F7119C4();
  v80 = a1;
  if (v20)
  {
    v21 = *(_QWORD *)(a1 + 16);
    v82 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v83 = v21;
    swift_bridgeObjectRetain();
    v22 = 0;
    v96 = v20;
    v81 = v14;
    v23 = v84;
    while (v83 != v22)
    {
      v24 = v82 + *(_QWORD *)(v14 + 72) * v22;
      v25 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
      v26 = v97;
      v27 = v88;
      v25(v97, v24, v88);
      v25(v23, (uint64_t)v26, v27);
      v28 = sub_23FB2DD84();
      v94 = v29;
      v95 = v28;
      v30 = v87;
      sub_23FB2DD6C();
      sub_23FB2DAB4();
      v32 = v31;
      sub_23FB2DAC0();
      v34 = v33;
      sub_23FB2DACC();
      v36 = v35;
      sub_23FB2DAD8();
      v38 = v37;
      v39 = type metadata accessor for ContextProtoBoundingBox(0);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(_DWORD *)v6 = v32;
      v6[4] = 0;
      *((_DWORD *)v6 + 2) = v34;
      v6[12] = 0;
      *((_DWORD *)v6 + 4) = v36;
      v6[20] = 0;
      *((_DWORD *)v6 + 6) = v38;
      v6[28] = 0;
      (*(void (**)(char *, uint64_t))(v92 + 8))(v30, v93);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v6, 0, 1, v39);
      v40 = (uint64_t *)v89;
      v41 = (uint64_t)&v89[*(int *)(v91 + 20)];
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v41, 1, 1, v39);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      v42 = v94;
      *v40 = v95;
      v40[1] = v42;
      sub_23F710E80((uint64_t)v6, v41, &qword_256EA2800);
      sub_23F6F594C((uint64_t)v40, (uint64_t)v10, type metadata accessor for ContextProtoSurroundingText);
      v43 = v81;
      v44 = *(void (**)(char *, uint64_t))(v81 + 8);
      v44(v23, v27);
      v44(v97, v27);
      v45 = v98;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F7119C4();
        v45 = v98;
      }
      v46 = *(_QWORD *)(v45 + 16);
      v14 = v43;
      if (v46 >= *(_QWORD *)(v45 + 24) >> 1)
      {
        sub_23F7119C4();
        v45 = v98;
      }
      ++v22;
      *(_QWORD *)(v45 + 16) = v46 + 1;
      sub_23F6F594C((uint64_t)v10, v45+ ((*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80))+ *(_QWORD *)(v90 + 72) * v46, type metadata accessor for ContextProtoSurroundingText);
      v20 = v96;
      if (v96 == v22)
        goto LABEL_11;
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_11:
    v47 = v80;
    v48 = *(_QWORD *)(v80 + 16);
    if (v20 == v48)
    {
LABEL_12:
      swift_bridgeObjectRelease_n();
      return;
    }
    v49 = type metadata accessor for ContextProtoSurroundingText;
    while (v20 < v48)
    {
      v50 = v47 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      v51 = *(_QWORD *)(v14 + 72);
      v96 = v20;
      v52 = v50 + v51 * v20;
      v53 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
      v54 = v85;
      v55 = v88;
      v53(v85, v52, v88);
      v56 = v97;
      v53(v97, (uint64_t)v54, v55);
      v57 = sub_23FB2DD84();
      v94 = v58;
      v95 = v57;
      v59 = v87;
      sub_23FB2DD6C();
      sub_23FB2DAB4();
      v61 = v60;
      sub_23FB2DAC0();
      v63 = v62;
      sub_23FB2DACC();
      v65 = v64;
      sub_23FB2DAD8();
      v67 = v66;
      v68 = type metadata accessor for ContextProtoBoundingBox(0);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(_DWORD *)v6 = v61;
      v6[4] = 0;
      *((_DWORD *)v6 + 2) = v63;
      v6[12] = 0;
      *((_DWORD *)v6 + 4) = v65;
      v6[20] = 0;
      *((_DWORD *)v6 + 6) = v67;
      v6[28] = 0;
      (*(void (**)(char *, uint64_t))(v92 + 8))(v59, v93);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v6, 0, 1, v68);
      v69 = v14;
      v70 = v49;
      v71 = (uint64_t *)v89;
      v72 = (uint64_t)&v89[*(int *)(v91 + 20)];
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v72, 1, 1, v68);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      v73 = v94;
      *v71 = v95;
      v71[1] = v73;
      sub_23F710E80((uint64_t)v6, v72, &qword_256EA2800);
      v74 = (uint64_t)v71;
      v49 = v70;
      v14 = v69;
      sub_23F6F594C(v74, v86, v49);
      v75 = *(void (**)(char *, uint64_t))(v69 + 8);
      v75(v56, v55);
      v75(v85, v55);
      v76 = v98;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F7119C4();
        v76 = v98;
      }
      v77 = *(_QWORD *)(v76 + 16);
      v47 = v80;
      v78 = v96;
      if (v77 >= *(_QWORD *)(v76 + 24) >> 1)
      {
        sub_23F7119C4();
        v76 = v98;
      }
      v20 = v78 + 1;
      *(_QWORD *)(v76 + 16) = v77 + 1;
      sub_23F6F594C(v86, v76+ ((*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80))+ *(_QWORD *)(v90 + 72) * v77, v49);
      v48 = *(_QWORD *)(v47 + 16);
      if (v20 == v48)
        goto LABEL_12;
    }
  }
  __break(1u);
}

void Array<A>.init<A>(context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;

  sub_23F6916B8(&qword_256EA2828);
  sub_23F772110();
  if (!v3)
  {
    v5 = sub_23FAD74F4();
    MEMORY[0x242674E5C](MEMORY[0x24BEE12C8], v5);
    sub_23FB2F494();
  }
  sub_23F70D66C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8));
  sub_23FAD6E8C();
}

uint64_t sub_23FAC6200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v14 = (char *)&v17 - v13;
  (*(void (**)(char *, uint64_t))(v15 + 16))((char *)&v17 - v13, a1);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a5 + 16))(v14, a3, a5);
  if (v7)
    *a7 = v7;
  return result;
}

uint64_t sub_23FAC62D0(uint64_t a1, _QWORD *a2)
{
  uint64_t *v2;

  return sub_23FAC6200(a1, v2[6], v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t Set<>.init(context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  swift_getAssociatedTypeWitness();
  v1 = sub_23FB2F488();
  sub_23F6916B8(&qword_256EA2828);
  MEMORY[0x242674E5C](MEMORY[0x24BEE12E0], v1);
  sub_23F7E79D0();
  result = sub_23F6B644C();
  if (!v0)
  {
    v3 = sub_23FAD74F4();
    MEMORY[0x242674E5C](MEMORY[0x24BEE12C8], v3);
    return sub_23FB2F530();
  }
  return result;
}

uint64_t sub_23FAC6418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v13 = (char *)&v16 - v12;
  (*(void (**)(char *, uint64_t))(v14 + 16))((char *)&v16 - v12, a1);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a4 + 16))(v13, a3, a4);
  if (v6)
    *a6 = v6;
  return result;
}

uint64_t sub_23FAC64E8(uint64_t a1, _QWORD *a2)
{
  uint64_t *v2;

  return sub_23FAC6418(a1, v2[5], v2[2], v2[3], v2[4], a2);
}

void Dictionary<>.init(context:)()
{
  swift_getAssociatedTypeWitness();
  sub_23FB2F05C();
  sub_23F6B644C();
  sub_23FAD6E8C();
}

uint64_t sub_23FAC65A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v11 = (char *)v14 - v10;
  (*(void (**)(char *, uint64_t))(v12 + 16))((char *)v14 - v10, a1);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(a6 + 16))(v11, a4, a6);
}

uint64_t sub_23FAC6664(uint64_t a1)
{
  uint64_t *v1;

  return sub_23FAC65A0(a1, v1[6], v1[2], v1[3], v1[4], v1[5]);
}

BOOL static ContextConversion.Error.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ContextConversion.Error.hash(into:)()
{
  return sub_23FB2FC68();
}

uint64_t ContextConversion.Error.hashValue.getter()
{
  sub_23FB2FC5C();
  sub_23FB2FC68();
  return sub_23FB2FC8C();
}

void RetrievedContext.init(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;

  sub_23F6B5220();
  a22 = v27;
  a23 = v28;
  v95 = v25;
  v30 = v29;
  v85 = v31;
  sub_23F6916B8(&qword_256EA2CE8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F6B57BC(v33, v80);
  sub_23F6916B8(&qword_256EBE4E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v34);
  v88 = (char *)&v80 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_23FB2DAF0();
  v86 = *(_QWORD *)(v36 - 8);
  v87 = v36;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F6B5810(v38, v80);
  sub_23F6916B8(&qword_256EA2CF8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F6B5BD8(v40, v80);
  sub_23F6916B8(&qword_256EBE4E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v41);
  v93 = (char *)&v80 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_23F6B632C();
  v91 = *(_QWORD *)(v43 - 8);
  v92 = v43;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v44);
  v90 = (uint64_t)&v80 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v46);
  v94 = (uint64_t)&v80 - v47;
  sub_23F6916B8(&qword_256EA2950);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v48);
  sub_23F6B59E0();
  sub_23F6916B8(&qword_256EA2CD8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v49);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EAB7E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v50);
  v51 = sub_23F7A00C8();
  v52 = (int *)type metadata accessor for ContextProtoRetrievedContext(v51);
  v53 = (uint64_t *)&v30[v52[10]];
  v54 = *v53;
  v55 = v53[1];
  v56 = v30;
  sub_23F6B4F58((uint64_t)&v30[v52[9]], v24, &qword_256EA2CD8);
  sub_23F77E584();
  v57 = v95;
  sub_23F77ACCC(v24, v58, v59, v60, v61, v62, v63, v64);
  if (v57)
  {
    sub_23F713FFC(v65, type metadata accessor for ContextProtoRetrievedContext);
    sub_23F756640();
  }
  else
  {
    v82 = v54;
    v83 = v26;
    v66 = v91;
    v84 = v55;
    v95 = v23;
    sub_23F77B844();
    v81 = v56;
    sub_23F77DD54(v90, v94, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v66 + 16));
    v67 = v83;
    sub_23FB2ED2C();
    sub_23F6B563C(v94, *(uint64_t (**)(uint64_t, uint64_t))(v66 + 8));
    v68 = sub_23F6B6634();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v67, 0, 1, v68);
    v69 = v81;
    sub_23FAD6F30((uint64_t)&v81[v52[6]], v70, &qword_256EA2CF8);
    sub_23F77AD00();
    a13 = *v69;
    ContextType.init(transcript:)((uint64_t)&a13);
    v71 = v89;
    sub_23F6B4F58((uint64_t)&v69[v52[7]], v89, &qword_256EA2CE8);
    sub_23F77AEA4(v71, v72, v73, v74, v75, v76, v77, v78);
    v79 = sub_23FB2DDB4();
    sub_23F77DB94(v79, type metadata accessor for ContextProtoRetrievedContext);
  }
  sub_23F876FC4();
  sub_23F6B5100();
}

void ContextType.init(transcript:)(uint64_t a1)
{
  __asm { BR              X10 }
}

void sub_23FAC6B54()
{
  uint64_t v0;

  v0 = sub_23FB2DAF0();
  sub_23FAD67C8(v0);
  sub_23FAD6A50();
}

#error "23FAC6CAC: call analysis failed (funcsize=5)"

uint64_t sub_23FAC6CB8()
{
  return sub_23FAC46DC();
}

void ContextProtoRetrievedContext.init(context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  int *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t);
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  sub_23F6B5220();
  v88 = v14;
  v18 = v17;
  v79 = v19;
  v77 = sub_23F6D3EC4();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B51A4();
  v78 = v21;
  sub_23F6916B8(&qword_256EAB7E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6B5810(v23, v76);
  sub_23F6916B8(&qword_256EA2CD8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6B5598(v25, v76);
  sub_23F6916B8(&qword_256EA2950);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F6B57BC(v27, v76);
  sub_23F6916B8(&qword_256EBE4E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F6B57F4(v29, v76);
  sub_23F6916B8(&qword_256EA2CE8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v30);
  sub_23FAD6DDC(v31, v76);
  sub_23FB2DAF0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F6B5420(v33, v76);
  sub_23F6916B8(&qword_256EBE4E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F6B5BD8(v35, v76);
  sub_23F6916B8(&qword_256EA2CF8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v36);
  sub_23FAD67A8(v37, v76);
  v38 = sub_23FB2EB1C();
  v85 = *(_QWORD *)(v38 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F6B51D0();
  sub_23FB2ED38();
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F6B52B0();
  sub_23F6916B8(&qword_256EA2610);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F72E2B0();
  MEMORY[0x24BDAC7A8](v42);
  v44 = (char *)&v76 - v43;
  sub_23FB2DDE4();
  v45 = v88;
  sub_23FB2ED20();
  if (v45)
  {
    sub_23F6B5900(v15, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
    sub_23FAD6B48();
    sub_23F877770();
    v46(v18);
  }
  else
  {
    v76 = v16;
    sub_23F6B5900(v15, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
    v47 = sub_23F6B6854();
    sub_23F75E710(v47, v48, v49);
    sub_23F77E598((uint64_t)v44, 0);
    v50 = v86;
    sub_23FB2DDFC();
    sub_23FAC513C(v50, v87);
    sub_23FB2DDD8();
    ContextProtoContextType.init(context:)();
    sub_23FB2DDF0();
    sub_23FAD7360();
    sub_23FB2DDCC();
    sub_23F77C658();
    v86 = v38;
    sub_23FB2DDA8();
    sub_23FAD7360();
    v88 = 0;
    v51 = sub_23FB2DDC0();
    v84 = v52;
    v85 = v51;
    v54 = (int *)v77;
    v53 = v78;
    v81 = &v78[*(int *)(v77 + 20)];
    sub_23F693EC8();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v55, v56, v57, v86);
    v58 = (uint64_t)&v53[v54[6]];
    v59 = type metadata accessor for ContextProtoConfidence(0);
    sub_23F6B5A8C(v58, v60, v61, v59);
    v62 = (uint64_t)&v53[v54[7]];
    v63 = type metadata accessor for ContextProtoContextMetadata(0);
    sub_23F6B5A8C(v62, v64, v65, v63);
    v66 = v54[8];
    v82 = v18;
    v67 = (uint64_t)&v53[v66];
    sub_23F77E598((uint64_t)&v53[v66], 1);
    v68 = (uint64_t)&v53[v54[9]];
    v69 = type metadata accessor for ContextProtoStructuredContext(0);
    sub_23F6B5A8C(v68, v70, v71, v69);
    v72 = &v53[v54[10]];
    *v72 = 0;
    v72[1] = 0;
    sub_23F6F0CB4();
    sub_23F710E80((uint64_t)v44, (uint64_t)v81, &qword_256EA2610);
    sub_23F710E80(v87, v58, &qword_256EA2CF8);
    *v53 = a13;
    sub_23F710E80(v83, v62, &qword_256EA2CE8);
    sub_23F710E80(v76, v67, &qword_256EA2610);
    sub_23F710E80(v80, v68, &qword_256EA2CD8);
    swift_bridgeObjectRelease();
    sub_23FAD7130();
    *v72 = v74;
    v72[1] = v73;
    sub_23F6F594C((uint64_t)v53, v79, type metadata accessor for ContextProtoRetrievedContext);
    sub_23FAD6B48();
    sub_23F877770();
    v75(v82);
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void ContextProtoContextType.init(context:)()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;

  sub_23FAD6D58();
  sub_23FB2DAF0();
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8](v4);
  sub_23FAD6950(v5, v10);
  v6 = sub_23FAD6F24(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88));
  if (v6 == *MEMORY[0x24BE57298])
  {
    v7 = 0;
  }
  else if (v6 == *MEMORY[0x24BE57248])
  {
    v7 = 1;
  }
  else if (v6 == *MEMORY[0x24BE57260])
  {
    v7 = 2;
  }
  else if (v6 == *MEMORY[0x24BE57270])
  {
    v7 = 25;
  }
  else if (v6 == *MEMORY[0x24BE57250])
  {
    v7 = 3;
  }
  else if (v6 == *MEMORY[0x24BE572E0])
  {
    v7 = 4;
  }
  else if (v6 == *MEMORY[0x24BE57278])
  {
    v7 = 5;
  }
  else if (v6 == *MEMORY[0x24BE57288])
  {
    v7 = 6;
  }
  else if (v6 == *MEMORY[0x24BE57290])
  {
    v7 = 7;
  }
  else if (v6 == *MEMORY[0x24BE57300])
  {
    v7 = 8;
  }
  else if (v6 == *MEMORY[0x24BE572F0])
  {
    v7 = 9;
  }
  else if (v6 == *MEMORY[0x24BE57308])
  {
    v7 = 10;
  }
  else if (v6 == *MEMORY[0x24BE572D8])
  {
    v7 = 11;
  }
  else if (v6 == *MEMORY[0x24BE572E8])
  {
    v7 = 23;
  }
  else if (v6 == *MEMORY[0x24BE57268])
  {
    v7 = 12;
  }
  else if (v6 == *MEMORY[0x24BE57258])
  {
    v7 = 13;
  }
  else if (v6 == *MEMORY[0x24BE572C8])
  {
    v7 = 14;
  }
  else if (v6 == *MEMORY[0x24BE57280])
  {
    v7 = 15;
  }
  else if (v6 == *MEMORY[0x24BE572D0])
  {
    v7 = 16;
  }
  else if (v6 == *MEMORY[0x24BE572F8])
  {
    v7 = 17;
  }
  else if (v6 == *MEMORY[0x24BE572B8])
  {
    v7 = 18;
  }
  else if (v6 == *MEMORY[0x24BE572C0])
  {
    v7 = 19;
  }
  else if (v6 == *MEMORY[0x24BE572A0])
  {
    v7 = 20;
  }
  else if (v6 == *MEMORY[0x24BE572A8])
  {
    v7 = 21;
  }
  else if (v6 == *MEMORY[0x24BE572B0])
  {
    v7 = 22;
  }
  else
  {
    if (v6 != *MEMORY[0x24BE57240])
    {
      sub_23F779AF8();
      v8 = sub_23F6B5AD4();
      sub_23FAD6770(v8, v9);
      sub_23F6D3BD0(v0);
      sub_23F6D3BD0(v2);
      goto LABEL_54;
    }
    v7 = 24;
  }
  sub_23F7B0990(v0, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  *v1 = v7;
LABEL_54:
  sub_23F6D3674();
}

void sub_23FAC7540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  ContextProtoRetrievedContext.init(context:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void ContextMetadata.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56[4];
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;

  sub_23FAD66AC();
  v63 = v3;
  v64 = v4;
  v61 = v1;
  v6 = v5;
  v56[3] = v7;
  sub_23F6916B8(&qword_256EBE4F0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5BD8(v9, v56[0]);
  sub_23F6916B8(&qword_256EBE4F8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  v59 = (char *)v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6916B8(&qword_256EA2800);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B537C(v13, v56[0]);
  sub_23F6916B8(&qword_256EBE500);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B52C8();
  v16 = MEMORY[0x24BDAC7A8](v15);
  sub_23F924B48(v16, v17, v18, v19, v20, v21, v22, v23, v56[0]);
  sub_23F6916B8(&qword_256EA2CF8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EBE4E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F6B573C();
  v26 = v6[1];
  v27 = v6[2];
  v28 = v6[3];
  v29 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
  v30 = v29[7];
  v62 = v6;
  sub_23F6B4F58((uint64_t)v6 + v30, v0, &qword_256EA2CF8);
  sub_23F77E584();
  sub_23F77DCD4();
  v31 = v61;
  sub_23F77AD00();
  if (v31)
  {
    sub_23F6D3508((uint64_t)v62, type metadata accessor for ContextProtoContextMetadata);
    sub_23F6B644C();
    sub_23F756640();
  }
  else
  {
    v56[1] = v28;
    v56[2] = v26;
    v61 = v27;
    v32 = (uint64_t)v59;
    v33 = v60;
    v34 = sub_23FB2DAE4();
    sub_23F6B5A8C(v58, v35, v36, v34);
    v37 = (uint64_t)v62;
    v38 = swift_bridgeObjectRetain();
    sub_23F7796C4(v38, v39, v40, v41, v42, v43, v44, v45);
    v56[0] = v46;
    v47 = v37 + v29[8];
    v48 = v57;
    sub_23F6B4F58(v47, v57, &qword_256EA2800);
    sub_23F77AED8(v48, v2);
    v49 = (uint64_t)v62;
    sub_23F77BFC8(*(_QWORD *)((char *)v62 + v29[9]), *((_BYTE *)v62 + v29[9] + 8));
    v57 = *(_QWORD *)(v49 + v29[10]);
    v50 = sub_23FB2DE44();
    sub_23F6B5A8C(v32, v51, v52, v50);
    v53 = sub_23FB2E360();
    sub_23F6B5A8C(v33, v54, v55, v53);
    sub_23F6B5508();
    sub_23FB2DD00();
    sub_23F6D3508((uint64_t)v62, type metadata accessor for ContextProtoContextMetadata);
  }
  sub_23F8778A8();
  sub_23F70D684();
}

void sub_23FAC789C()
{
  ContextMetadata.init(transcript:)();
}

uint64_t sub_23FAC78B0()
{
  return sub_23FAC4810();
}

void ContextProtoContextMetadata.init(context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;

  sub_23F6B5220();
  sub_23FAD7304();
  v36 = v14;
  sub_23F6916B8(&qword_256EBE500);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F693EB0();
  sub_23F6916B8(&qword_256EA2800);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B5268();
  sub_23F6916B8(&qword_256EBE4E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B573C();
  sub_23F6916B8(&qword_256EA2CF8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B5298();
  v19 = sub_23FB2DD0C();
  v21 = v20;
  v22 = sub_23FB2DCC4();
  v24 = v23;
  sub_23FB2DD18();
  sub_23FAC513C(v13, v10);
  if (a10)
  {
    v25 = sub_23FAD74E4();
    sub_23F78F1B0(v25);
    sub_23F6B6A48();
    sub_23F6B644C();
  }
  else
  {
    v37 = v10;
    v26 = v24;
    v27 = sub_23FB2DCDC();
    sub_23FAC5A8C(v27);
    v35 = v28;
    sub_23FB2DCD0();
    sub_23FAC54CC(v11, v12);
    v29 = sub_23FB2DCE8();
    v31 = v30 & 1;
    v32 = sub_23FB2DCF4();
    ContextProtoContextMetadata.init(entityID:appBundleID:saliency:onScreenSurroundingText:onScreenBoundingBox:seq:groupID:)(v19, v21, v22, v26, v37, v35, v12, v29, v36, v31, v32, v33);
    v34 = sub_23FAD74E4();
    sub_23F78F1B0(v34);
  }
  sub_23F6B5100();
}

void sub_23FAC7A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  ContextProtoContextMetadata.init(context:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void StructuredContext.init(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, __int16 a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int *v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char **v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t *v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  _QWORD *v198;
  char v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206[6];
  uint64_t v207;
  uint64_t v208;
  int v209;
  int v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  int *v239;
  uint64_t v240;
  char *v241;
  char *v242;
  uint64_t v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  uint64_t *v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  _QWORD *v259;
  char *v260;
  uint64_t v261;
  char v262;

  sub_23F6B5220();
  a21 = v29;
  a22 = v30;
  v257 = v23;
  v32 = v31;
  v248 = v33;
  v237 = *(_QWORD *)(type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress(0) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v34);
  v260 = (char *)v206 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_23FAD72EC();
  v252 = *(_QWORD *)(v36 - 8);
  v253 = v36;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F6B51A4();
  sub_23F6B5314(v38);
  sub_23F6916B8(&qword_256EA2D58);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v39);
  v255 = (uint64_t *)((char *)v206 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v41);
  v254 = (char *)v206 - v42;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v43);
  v251 = (uint64_t)v206 - v44;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v45);
  v245 = (uint64_t)v206 - v46;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v47);
  v244 = (char *)v206 - v48;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v49);
  sub_23F6B6580();
  v243 = v50;
  sub_23F6916B8(&qword_256EBE508);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v51);
  sub_23F6B51A4();
  v247 = v52;
  sub_23F6916B8(&qword_256EA2D68);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v53);
  v242 = (char *)v206 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v55);
  v241 = (char *)v206 - v56;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v57);
  sub_23F6D3D14();
  v240 = v58;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v59);
  v256 = (char *)v206 - v60;
  sub_23F6916B8(&qword_256EBE510);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v61);
  sub_23F6B557C(v62, v206[0]);
  sub_23F6916B8(&qword_256EBE518);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v63);
  sub_23F6B537C(v64, v206[0]);
  sub_23F6916B8(&qword_256EA2D78);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v65);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v66);
  sub_23F9231E0();
  v68 = MEMORY[0x24BDAC7A8](v67);
  sub_23F924B48(v68, v69, v70, v71, v72, v73, v74, v75, v206[0]);
  sub_23F6916B8(&qword_256EBE520);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v76);
  sub_23F78F260();
  sub_23FB2E0FC();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v77);
  v78 = sub_23F6B5C2C();
  v79 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(v78);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v80);
  sub_23F6B52B0();
  sub_23F6916B8(&qword_256EA2D40);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v81);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v82);
  v84 = (char *)v206 - v83;
  sub_23F6B4F58(v32, (uint64_t)v206 - v83, &qword_256EA2D40);
  v85 = type metadata accessor for ContextProtoStructuredContextKind(0);
  sub_23F6B5164((uint64_t)v84, 1, v85);
  if (v98)
  {
    sub_23FAC89DC();
    v86 = sub_23F6B5AD4();
    v88 = sub_23FAD6770(v86, v87);
    sub_23F78F204(v88, type metadata accessor for ContextProtoStructuredContext);
LABEL_15:
    sub_23F6D378C(v89, &qword_256EA2D40);
    goto LABEL_16;
  }
  v234 = v28;
  v235 = v26;
  v229 = v27;
  v228 = v25;
  v233 = v32;
  v236 = v84;
  sub_23F6B4F58((uint64_t)v84, v22, &qword_256EA2D40);
  sub_23F6F594C(v22, v24, type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
  v227 = *(_QWORD *)(v24 + 16);
  v250 = *(_QWORD *)(v24 + 24);
  v90 = *(_QWORD *)(v24 + 40);
  v226 = *(_QWORD *)(v24 + 32);
  v91 = *(_QWORD *)(v24 + 56);
  v225 = *(_QWORD *)(v24 + 48);
  v92 = *(_QWORD *)(v24 + 72);
  v224 = *(_QWORD *)(v24 + 64);
  v223 = *(unsigned __int8 *)(v24 + 80);
  v222 = *(unsigned __int8 *)(v24 + 81);
  v221 = *(unsigned __int8 *)(v24 + 82);
  v220 = *(unsigned __int8 *)(v24 + 83);
  v219 = *(unsigned __int8 *)(v24 + 84);
  v239 = (int *)v79;
  v93 = v24 + *(int *)(v79 + 60);
  v95 = *(_QWORD *)v24;
  v94 = *(_QWORD *)(v24 + 8);
  v96 = v259;
  sub_23FAD6F30(v93, v97, &qword_256EA2D78);
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  sub_23FAD66DC((uint64_t)v96);
  v249 = v24;
  v231 = v91;
  v230 = v92;
  if (v98)
  {
    sub_23F6B5508();
    v99 = v95;
    sub_23F6B6548();
    v100 = v94;
    sub_23F6B54F8();
    swift_bridgeObjectRetain();
    sub_23F6B90D8();
    sub_23F6B6254();
    sub_23F6B4F84((uint64_t)v259, &qword_256EA2D78);
    v218 = 0;
  }
  else
  {
    v218 = *v259;
    sub_23F6B5508();
    swift_bridgeObjectRetain();
    sub_23F6B90D8();
    swift_bridgeObjectRetain();
    sub_23F6B6254();
    v99 = v95;
    sub_23F6B6548();
    v100 = v94;
    v101 = sub_23F6B54F8();
    sub_23F6D3C24(v101, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
  }
  v232 = v90;
  sub_23F77DD9C();
  sub_23F6B4F58(v102, v103, v104);
  v105 = sub_23FAD66DC(v94);
  if (v98)
    sub_23F77DC10(v105, &qword_256EA2D78);
  else
    sub_23F78F204(v105, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
  v107 = v99;
  v108 = v93;
  v109 = v235;
  sub_23FAD6F04(v108, v106, &qword_256EA2D78);
  v110 = sub_23FAD66DC(v109);
  v234 = v100;
  v111 = v239;
  if (v98)
  {
    sub_23FAD6A14(v110, &qword_256EA2D78);
    v112 = 5;
  }
  else
  {
    v112 = *(_BYTE *)(v109 + 17);
    sub_23F77DB94(v110, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
  }
  v114 = (uint64_t)v256;
  v113 = v257;
  sub_23F77ABD4(v112);
  if (v113)
  {
    sub_23F693DFC();
    sub_23F77DE3C();
    sub_23F693E04();
    sub_23F77DE3C();
    sub_23F77DE3C();
    sub_23F77DE3C();
    sub_23F756640();
    sub_23F77E0D4(type metadata accessor for ContextProtoStructuredContext, (uint64_t)&a10);
    sub_23F6D3508(v249, type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
    goto LABEL_15;
  }
  v235 = v107;
  v115 = v229;
  sub_23FB2DFDC();
  v116 = sub_23FB2DFF4();
  sub_23F78F2E4(v115, 0, v117, v116);
  v118 = (uint64_t *)(v249 + v111[16]);
  v119 = *v118;
  v120 = v118[1];
  v121 = (uint64_t *)(v249 + v111[17]);
  v122 = v121[1];
  v217 = *v121;
  v123 = v111[19];
  v124 = (uint64_t *)(v249 + v111[18]);
  v125 = v124[1];
  v215 = *v124;
  v126 = v249 + v123;
  sub_23FAD6F04(v249 + v123, v127, &qword_256EA2D68);
  v128 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  sub_23F6B5164(v114, 1, v128);
  v216 = v122;
  v214 = v125;
  if (v98)
  {
    sub_23FAD73B0();
    v129 = sub_23F6B6548();
    sub_23FAD6A14(v129, &qword_256EA2D68);
    LODWORD(v259) = 1;
  }
  else
  {
    LODWORD(v259) = *(unsigned __int8 *)(v114 + 4);
    sub_23FAD73B0();
    v130 = swift_bridgeObjectRetain();
    sub_23F77DB94(v130, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
  }
  v132 = v240;
  v240 = v120;
  v218 = v119;
  sub_23FAD6F04(v126, v131, &qword_256EA2D68);
  v133 = sub_23F6B5164(v132, 1, v128);
  v134 = (uint64_t)v242;
  if (v98)
  {
    sub_23FAD6A14(v133, &qword_256EA2D68);
  }
  else
  {
    v135 = sub_23F77DCD4();
    sub_23F77DB94(v135, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
  }
  v137 = (uint64_t)v241;
  sub_23FAD6F30(v126, v136, &qword_256EA2D68);
  v138 = sub_23F6B5164(v137, 1, v128);
  if (v98)
  {
    sub_23F77DD64(v138, &qword_256EA2D68);
    v139 = 1;
  }
  else
  {
    v139 = *(_BYTE *)(v137 + 28);
    sub_23F6D3508(v137, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
  }
  v140 = sub_23F7D24F0();
  sub_23F6B4F58(v140, v141, v142);
  v143 = sub_23F6B5164(v134, 1, v128);
  if (v98)
  {
    sub_23F77E3DC(v143, &qword_256EA2D68);
    v144 = 1;
  }
  else
  {
    v144 = *(_BYTE *)(v134 + 36);
    sub_23F72E404(v143, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
  }
  v242 = 0;
  a12 = (char)v259;
  a10 = v139;
  v262 = v144;
  v145 = v246;
  sub_23FB2DF34();
  v146 = sub_23FB2DF64();
  sub_23F78F2E4(v145, 0, v147, v146);
  v148 = v239[21];
  v149 = (char **)(v249 + v239[20]);
  v241 = *v149;
  HIDWORD(v213) = *((unsigned __int8 *)v149 + 8);
  v150 = *(_QWORD *)(v249 + v148 + 8);
  v212 = *(_QWORD *)(v249 + v148);
  v151 = v239[23];
  v210 = *(unsigned __int8 *)(v249 + v239[22]);
  v209 = *(unsigned __int8 *)(v249 + v151);
  v152 = v249 + v239[24];
  v153 = v243;
  sub_23F6B4F58(v152, v243, &qword_256EA2D58);
  v154 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  sub_23F6B5164(v153, 1, v154);
  v211 = v150;
  if (v98)
  {
    v155 = sub_23F6B5F1C();
    sub_23F77E660(v155, &qword_256EA2D58);
    v239 = 0;
    v208 = 0;
  }
  else
  {
    sub_23FAD7234(*(_QWORD *)(v153 + 8));
    sub_23FAD6E34(v156, (uint64_t)&v243);
    v157 = sub_23F6B5F1C();
    sub_23F714040(v157, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
  }
  v158 = v247;
  v159 = v251;
  v160 = (uint64_t)v244;
  v161 = sub_23FAD6F0C();
  sub_23F6B4F58(v161, v162, v163);
  v164 = sub_23F6B5164(v160, 1, v154);
  if (v98)
  {
    sub_23F6D378C(v164, &qword_256EA2D58);
    v243 = 0;
    v244 = 0;
  }
  else
  {
    v165 = *(char **)(v160 + 24);
    v243 = *(_QWORD *)(v160 + 32);
    v244 = v165;
    v166 = swift_bridgeObjectRetain();
    sub_23F7E7834(v166, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
  }
  v167 = v245;
  sub_23F6B4F58(v152, v245, &qword_256EA2D58);
  v168 = sub_23F6B5164(v167, 1, v154);
  if (v98)
  {
    sub_23F6D378C(v168, &qword_256EA2D58);
    v207 = 0;
    v206[5] = 0;
  }
  else
  {
    v169 = *(_QWORD *)(v167 + 48);
    v207 = *(_QWORD *)(v167 + 40);
    v170 = sub_23FAD6E34(v169, (uint64_t)&v241);
    sub_23F7E7834(v170, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
  }
  sub_23FAD6F04(v152, v171, &qword_256EA2D58);
  v172 = sub_23F6B5164(v159, 1, v154);
  if (v98)
  {
    sub_23FAD6A14(v172, &qword_256EA2D58);
    v245 = 0;
    v206[4] = 0;
  }
  else
  {
    v173 = *(_QWORD *)(v159 + 64);
    v245 = *(_QWORD *)(v159 + 56);
    v174 = sub_23FAD6E34(v173, (uint64_t)&v240);
    sub_23F77DB94(v174, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
  }
  v176 = (uint64_t)v254;
  sub_23FAD6F04(v152, v175, &qword_256EA2D58);
  v177 = sub_23F6B5164(v176, 1, v154);
  if (v98)
  {
    sub_23FAD6A14(v177, &qword_256EA2D58);
    sub_23FAD720C();
  }
  else
  {
    v178 = *(_QWORD *)(v176 + 80);
    v206[3] = *(_QWORD *)(v176 + 72);
    v179 = sub_23FAD6E34(v178, (uint64_t)&v238);
    sub_23F77DB94(v179, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
  }
  v180 = v152;
  v181 = v255;
  sub_23F6B4F58(v180, (uint64_t)v255, &qword_256EA2D58);
  v182 = sub_23F6B5164((uint64_t)v181, 1, v154);
  if (v98)
  {
    sub_23F77DC10(v182, &qword_256EA2D58);
  }
  else
  {
    v183 = *v181;
    v184 = sub_23F77E584();
    sub_23F78F204(v184, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
    v185 = *(_QWORD **)(v183 + 16);
    if (v185)
    {
      v261 = MEMORY[0x24BEE4AF8];
      sub_23FAD6FC4();
      sub_23F71227C();
      sub_23FAD69B8();
      v206[1] = v183;
      v187 = v183 + v186;
      v251 = *(_QWORD *)(v188 + 72);
      v190 = (uint64_t *)v260;
      v189 = v261;
      v191 = v238;
      do
      {
        v259 = v185;
        v192 = sub_23F6B6F88();
        sub_23F6F5920(v192, v193, type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress);
        v194 = *v190;
        v257 = v190[2];
        v258 = v194;
        v195 = (char *)v190[4];
        v255 = (uint64_t *)v190[6];
        v256 = v195;
        v196 = v190[9];
        v254 = (char *)v190[8];
        sub_23F6B6548();
        sub_23F6B5508();
        sub_23F6B90D8();
        sub_23F77E1FC();
        sub_23F6B6254();
        sub_23F6B5F1C();
        v190 = (uint64_t *)v260;
        sub_23FB2E03C();
        sub_23F6D3508((uint64_t)v190, type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress);
        if ((sub_23F77D9A4() & 1) == 0)
        {
          sub_23F71227C();
          v189 = v261;
        }
        sub_23FAD69A8();
        v197 = v252;
        v198 = v259;
        if (v199)
        {
          sub_23F71227C();
          v189 = v261;
        }
        sub_23FAD6DFC();
        sub_23F77DD54(v200 + v201 * v196, v191, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v197 + 32));
        v261 = v189;
        v187 += v251;
        v185 = (_QWORD *)((char *)v198 - 1);
      }
      while (v185);
      sub_23F77DE3C();
      v158 = v247;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  sub_23FB2E09C();
  v202 = sub_23FB2E0B4();
  sub_23F78F2E4(v158, 0, v203, v202);
  sub_23FAD7248();
  sub_23FB2E0E4();
  v204 = sub_23FB2E12C();
  sub_23F714040(v204, type metadata accessor for ContextProtoStructuredContext);
  sub_23F6D3508(v249, type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
  sub_23F77DD64(v205, &qword_256EA2D40);
LABEL_16:
  sub_23F876FC4();
  sub_23F6B5100();
}

unint64_t sub_23FAC89DC()
{
  unint64_t result;

  result = qword_256EBE528;
  if (!qword_256EBE528)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextConversion.Error, &type metadata for ContextConversion.Error);
    atomic_store(result, (unint64_t *)&qword_256EBE528);
  }
  return result;
}

#error "23FAC8A20: call analysis failed (funcsize=5)"

uint64_t sub_23FAC8A2C()
{
  return sub_23FAC4944();
}

void ContextProtoStructuredContext.init(context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE *v88;
  void (*v89)(uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  unsigned int *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  uint64_t (*v109)(uint64_t);
  int v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  int v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  char v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  _QWORD *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  char v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  void (*v202)(uint64_t);
  uint64_t v203;
  uint64_t v204;
  uint64_t (*v205)(_QWORD);
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  _BYTE *v210;
  void (*v211)(uint64_t, uint64_t);
  uint64_t v212;
  void (*v213)(uint64_t);
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  int v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  int v225;
  int v226;
  uint64_t v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  _QWORD *v249;
  uint64_t v250;
  uint64_t v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  char *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  void (*v268)(uint64_t, char *, uint64_t);
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  char *v281;

  sub_23F6B5220();
  v256 = v10;
  v18 = v17;
  v263 = v19;
  v261 = type metadata accessor for ContextProtoStructuredContext(0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B51A4();
  v262 = v21;
  v22 = sub_23FAD72EC();
  v273 = *(_QWORD *)(v22 - 8);
  v274 = v22;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v23);
  v281 = (char *)&v215 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_23F6D398C();
  v26 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress(v25);
  v271 = *(_QWORD *)(v26 - 8);
  v272 = v26;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F6B51A4();
  sub_23F6B5314(v28);
  sub_23F6916B8(&qword_256EBE508);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v29);
  v252 = (char *)&v215 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v31);
  v255 = (char *)&v215 - v32;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v33);
  v277 = (uint64_t)&v215 - v34;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v35);
  v276 = (uint64_t)&v215 - v36;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v37);
  v275 = (uint64_t)&v215 - v38;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F6B6580();
  sub_23F6B5314(v40);
  sub_23F6916B8(&qword_256EA2D58);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F6B51A4();
  sub_23F6B5314(v42);
  sub_23F6916B8(&qword_256EBE510);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v43);
  sub_23F693E0C();
  v251 = v44;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v45);
  v253 = (uint64_t)&v215 - v46;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v47);
  v269 = (uint64_t)&v215 - v48;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v49);
  sub_23F6B6580();
  sub_23F6B5314(v50);
  sub_23F6916B8(&qword_256EA2D68);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v51);
  sub_23F6B557C(v52, v215);
  sub_23F6916B8(&qword_256EBE518);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v53);
  sub_23F6B51A4();
  v257 = v54;
  sub_23F6D398C();
  v55 = sub_23FB2DFC4();
  v56 = *(_QWORD *)(v55 - 8);
  v278 = v55;
  v279 = v56;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v57);
  sub_23F693E0C();
  v268 = v58;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v59);
  sub_23F6B5314((uint64_t)&v215 - v60);
  sub_23F6916B8(&qword_256EBE520);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v61);
  sub_23F693E0C();
  v258 = v62;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v63);
  v259 = (uint64_t)&v215 - v64;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v65);
  v280 = (uint64_t)&v215 - v66;
  sub_23F6916B8(&qword_256EA2D78);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v67);
  sub_23F6B51A4();
  v264 = v68;
  sub_23F6D398C();
  v266 = sub_23FB2E0FC();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v69);
  sub_23F6B5268();
  sub_23F6916B8(&qword_256EAB7E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v70);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v71);
  v72 = sub_23F78F404();
  v73 = type metadata accessor for ContextProtoStructuredContextKind(v72);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v74);
  sub_23F72E2B0();
  MEMORY[0x24BDAC7A8](v75);
  sub_23F6B5F6C();
  v76 = v18;
  sub_23FB2E114();
  v77 = sub_23FB2E108();
  v270 = v11;
  sub_23F6B5164(v11, 1, v77);
  if (v78)
    goto LABEL_7;
  v79 = v280;
  v244 = v16;
  v245 = v13;
  v246 = v73;
  v267 = v15;
  v247 = v12;
  v248 = v76;
  sub_23F6B4F58(v270, v14, &qword_256EAB7E8);
  v80 = *(_QWORD *)(v77 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v80 + 88))(v14, v77) != *MEMORY[0x24BE57B00])
  {
    sub_23F7B0990(v14, *(uint64_t (**)(uint64_t, uint64_t))(v80 + 8));
    v76 = v248;
LABEL_7:
    sub_23FAC89DC();
    v87 = sub_23F6B5AD4();
    sub_23FAD6770(v87, v88);
    sub_23FAD74EC();
    sub_23F877770();
    v89(v76);
    goto LABEL_8;
  }
  sub_23F7B0990(v14, *(uint64_t (**)(uint64_t, uint64_t))(v80 + 96));
  sub_23F6F531C(*(uint64_t (**)(uint64_t, uint64_t))(v247 + 32));
  v236 = sub_23FB2E0F0();
  v243 = v81;
  v235 = sub_23FB2E0D8();
  v242 = v82;
  v234 = sub_23FB2DEC8();
  v241 = v83;
  v233 = sub_23FB2DEF8();
  v240 = v84;
  v232 = sub_23FB2DEA4();
  v231 = sub_23FB2DED4();
  v230 = sub_23FB2DFA0();
  v229 = sub_23FB2DF88();
  v228 = sub_23FB2DF94();
  v239 = sub_23FB2DF70();
  v238 = MEMORY[0x242672B64]();
  sub_23FB2DF04();
  v85 = sub_23FB2DFF4();
  v86 = sub_23F6B5164(v79, 1, v85);
  if (v78)
  {
    sub_23F923588(v86, &qword_256EBE520);
    v227 = 0;
    v237 = 0;
  }
  else
  {
    v227 = sub_23FB2DFE8();
    v237 = v90;
    sub_23F70D728(v79, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 8));
  }
  v91 = v257;
  v92 = v258;
  v93 = v259;
  sub_23FB2DF04();
  v94 = sub_23F6B5164(v93, 1, v85);
  if (v78)
  {
    sub_23F923588(v94, &qword_256EBE520);
    v95 = 2;
  }
  else
  {
    v95 = sub_23FB2DFB8();
    sub_23F70D728(v93, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 8));
  }
  v96 = v267;
  sub_23FB2DF04();
  v97 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v92, 1, v85);
  v98 = (unsigned int *)MEMORY[0x24BE579D8];
  if ((_DWORD)v97 == 1)
  {
    sub_23F77E660(v97, &qword_256EBE520);
    sub_23F693EC8();
    v99 = v278;
    sub_23FAD71C4(v100, v101, v102);
LABEL_16:
    v107 = *v98;
    v105 = v279;
    v106 = v260;
    v104 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v279 + 104))(v260, *v98, v99);
    sub_23F77E660(v104, &qword_256EBE518);
    goto LABEL_17;
  }
  sub_23FB2DFD0();
  sub_23F70D728(v92, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 8));
  v99 = v278;
  sub_23F6B5164(v91, 1, v278);
  v103 = v91;
  if (v78)
    goto LABEL_16;
  v105 = v279;
  v106 = v260;
  sub_23F6B5EF0(v260, v103, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v279 + 32));
  v107 = *v98;
LABEL_17:
  sub_23F6B5EF0((uint64_t)v268, v106, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v105 + 16));
  v108 = sub_23FAD6D6C();
  v110 = v109(v108);
  v111 = v269;
  if (v110 == v107)
  {
    v112 = 0;
    goto LABEL_27;
  }
  if (v110 == *MEMORY[0x24BE579E0])
  {
    v112 = 1;
    goto LABEL_27;
  }
  if (v110 == *MEMORY[0x24BE579E8])
  {
    v112 = 2;
    goto LABEL_27;
  }
  if (v110 == *MEMORY[0x24BE579D0])
  {
    v112 = 3;
    goto LABEL_27;
  }
  if (v110 == *MEMORY[0x24BE579F8])
  {
    v112 = 4;
LABEL_27:
    v113 = v264;
    v114 = v250;
    (*(void (**)(uint64_t, uint64_t))(v279 + 8))(v106, v278);
    type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    sub_23F6F0BB0();
    v115 = v237;
    *(_QWORD *)v113 = v227;
    *(_QWORD *)(v113 + 8) = v115;
    *(_BYTE *)(v113 + 16) = v95;
    *(_BYTE *)(v113 + 17) = v112;
    sub_23F7A690C(v113, 0);
    v260 = sub_23FB2DF10();
    v259 = v116;
    v258 = sub_23FB2DEBC();
    v257 = v117;
    v250 = sub_23FB2DEB0();
    v237 = v118;
    sub_23FB2DF7C();
    v119 = sub_23FB2DF64();
    v120 = sub_23FAD66DC(v114);
    if (v78)
    {
      sub_23F6B6034(v120, &qword_256EBE510);
      v122 = 0;
      v280 = 1;
    }
    else
    {
      v121 = sub_23FB2DF40();
      v122 = v121;
      v280 = HIDWORD(v121) & 1;
      sub_23F6B563C(v114, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 8));
    }
    v123 = v251;
    sub_23FAD71E0();
    v124 = sub_23FAD66DC(v111);
    if (v78)
    {
      sub_23F77DD24(v124, &qword_256EBE510);
      v125 = 0;
      v127 = 0;
    }
    else
    {
      v125 = sub_23FB2DF58();
      v127 = v126;
      sub_23F6B563C(v111, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 8));
    }
    v128 = v253;
    sub_23FAD71E0();
    v129 = sub_23FAD66DC(v128);
    if (v78)
    {
      sub_23F77DD24(v129, &qword_256EBE510);
      v132 = 0;
      v133 = 1;
    }
    else
    {
      v130 = sub_23FB2DF4C();
      v131 = v128;
      v132 = v130;
      v133 = HIDWORD(v130) & 1;
      sub_23F6B563C(v131, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 8));
    }
    sub_23FB2DF7C();
    v134 = sub_23FAD66DC(v123);
    if (v78)
    {
      sub_23F923588(v134, &qword_256EBE510);
      v136 = 0;
      v137 = 1;
    }
    else
    {
      v135 = sub_23FB2DF28();
      v136 = v135;
      v137 = HIDWORD(v135) & 1;
      sub_23F6B563C(v123, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 8));
    }
    type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
    v138 = v265;
    sub_23F6F0BB0();
    *(_DWORD *)v138 = v122;
    *(_BYTE *)(v138 + 4) = v280;
    *(_QWORD *)(v138 + 8) = v125;
    *(_QWORD *)(v138 + 16) = v127;
    *(_DWORD *)(v138 + 24) = v132;
    *(_BYTE *)(v138 + 28) = v133;
    *(_DWORD *)(v138 + 32) = v136;
    *(_BYTE *)(v138 + 36) = v137;
    sub_23F878CF4(v138);
    v139 = v267;
    v253 = sub_23FB2E0CC();
    v141 = v140;
    v251 = sub_23FB2DF1C();
    v227 = v142;
    v226 = sub_23FB2DFAC();
    v225 = sub_23FB2DEEC();
    v143 = v254;
    sub_23FB2E0C0();
    v144 = sub_23FB2E0B4();
    v145 = sub_23FAD66DC(v143);
    if (v78)
    {
      sub_23F923588(v145, &qword_256EBE508);
      sub_23FAD720C();
    }
    else
    {
      v224 = sub_23FB2E0A8();
      v223 = v146;
      sub_23F6B563C(v143, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v144 - 8) + 8));
    }
    sub_23FAD6EC0();
    sub_23FAD6EE8();
    v147 = v275;
    v148 = sub_23FAD66DC(v275);
    if (v78)
    {
      sub_23F77DC10(v148, &qword_256EBE508);
      v254 = 0;
      v222 = 0;
    }
    else
    {
      v254 = sub_23FB2E00C();
      v222 = v149;
      sub_23F6B563C(v147, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v144 - 8) + 8));
    }
    sub_23FAD6EE8();
    v150 = v276;
    v151 = sub_23FAD66DC(v276);
    if (v78)
    {
      sub_23F77DC10(v151, &qword_256EBE508);
      v221 = 0;
      v220 = 0;
    }
    else
    {
      v221 = sub_23FB2E000();
      v220 = v152;
      sub_23F6B563C(v150, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v144 - 8) + 8));
    }
    sub_23FAD6EE8();
    v153 = v277;
    v154 = sub_23FAD66DC(v277);
    if (v78)
    {
      sub_23F77DC10(v154, &qword_256EBE508);
      v218 = 0;
      v217 = 0;
    }
    else
    {
      v218 = sub_23FB2E084();
      v217 = v155;
      sub_23F6B563C(v153, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v144 - 8) + 8));
    }
    v219 = v141 & 1;
    v156 = (uint64_t)v255;
    sub_23FAD6EE8();
    v157 = sub_23FAD66DC(v156);
    if (v78)
    {
      sub_23F77E660(v157, &qword_256EBE508);
      v216 = 0;
      v215 = 0;
    }
    else
    {
      v216 = sub_23FB2E078();
      v215 = v158;
      sub_23F6B563C(v156, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v144 - 8) + 8));
    }
    v159 = (uint64_t)v252;
    sub_23FAD6EE8();
    v160 = sub_23FAD66DC(v159);
    if (v78)
    {
      sub_23F77E660(v160, &qword_256EBE508);
    }
    else
    {
      v161 = MEMORY[0x242672D14](v160);
      v162 = v159;
      v163 = (char *)v161;
      sub_23F6B563C(v162, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v144 - 8) + 8));
      if (*((_QWORD *)v163 + 2))
      {
        sub_23FAD70B8(MEMORY[0x24BEE4AF8]);
        v280 = v164;
        sub_23F711988();
        sub_23FAD69B8();
        v255 = v163;
        v166 = &v163[v165];
        v168 = *(char **)(v167 + 72);
        v268 = *(void (**)(uint64_t, char *, uint64_t))(v167 + 16);
        v269 = (uint64_t)v168;
        v137 = v274;
        v169 = (uint64_t)v281;
        v170 = v249;
        do
        {
          v268(v169, v166, v137);
          v171 = sub_23FB2E048();
          v278 = v172;
          v279 = v171;
          v173 = sub_23FB2E060();
          v276 = v174;
          v277 = v173;
          v175 = sub_23FB2E030();
          v275 = v176;
          v177 = sub_23FB2E054();
          v179 = v178;
          v133 = sub_23FB2E018();
          v143 = v180;
          v181 = sub_23FB2E024();
          v183 = v182;
          sub_23FAC3DD4();
          sub_23FAD7130();
          *v170 = v185;
          v170[1] = v184;
          v186 = v276;
          v170[2] = v277;
          v170[3] = v186;
          v187 = v275;
          v170[4] = v175;
          v170[5] = v187;
          v188 = v273;
          v137 = v274;
          v170[6] = v177;
          v170[7] = v179;
          v169 = (uint64_t)v281;
          v170[8] = v133;
          v170[9] = v143;
          v170[10] = v181;
          v170[11] = v183;
          sub_23F6B6420(v169, *(uint64_t (**)(uint64_t, uint64_t))(v188 + 8));
          if ((sub_23F77D93C() & 1) == 0)
          {
            sub_23FAD71B0();
            sub_23F711988();
            v181 = a10;
          }
          sub_23FAD69A8();
          if (v190)
          {
            sub_23F77E294(v189);
            sub_23F711988();
            v181 = a10;
          }
          sub_23FAD6DFC();
          sub_23F6F594C((uint64_t)v170, v191 + v192 * v143, type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress);
          v166 += v269;
          --v280;
        }
        while (v280);
        sub_23F77DE3C();
        sub_23FAD6EC0();
        v139 = v267;
        goto LABEL_67;
      }
      sub_23F693E04();
    }
    v181 = MEMORY[0x24BEE4AF8];
LABEL_67:
    type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
    sub_23FAC3CEC();
    v193 = v254;
    *(_QWORD *)(v137 + 16) = v223;
    *(_QWORD *)(v137 + 24) = v193;
    v194 = v221;
    *(_QWORD *)(v137 + 32) = v222;
    *(_QWORD *)(v137 + 40) = v194;
    v195 = v218;
    *(_QWORD *)(v137 + 48) = v220;
    *(_QWORD *)(v137 + 56) = v195;
    v196 = v216;
    *(_QWORD *)(v137 + 64) = v217;
    *(_QWORD *)(v137 + 72) = v196;
    *(_QWORD *)(v137 + 80) = v215;
    v197 = v224;
    *(_QWORD *)v137 = v181;
    *(_QWORD *)(v137 + 8) = v197;
    sub_23F7A690C(v137, 0);
    BYTE4(v214) = v228;
    BYTE3(v214) = v229;
    BYTE2(v214) = v230;
    BYTE1(v214) = v231;
    LOBYTE(v214) = v232;
    v198 = v244;
    ContextProtoStructuredContextSiriRequestContext.init(sessionID:requestID:inputOrigin:responseMode:isEyesFree:isMultiUser:isVoiceTriggerEnabled:isTextToSpeechEnabled:isTriggerlessFollowup:deviceRestrictions:bargeInModes:identifiedUser:encodedLocation:countryCode:siriLocale:contentRestrictions:uiScale:temperatureUnit:allowUserGeneratedContent:censorSpeech:meCard:)(v236, v243, v235, v242, v234, v241, v233, v240, v244, v214, v239, v238, v264, v260, v259, v258, v257, v250, v237,
      v265,
      v253,
      v219,
      v251,
      v227,
      v226,
      v225,
      v137);
    (*(void (**)(uint64_t, uint64_t))(v247 + 8))(v139, v266);
    sub_23F77E2AC(v198, v245);
    sub_23F6B4F84(v270, &qword_256EAB7E8);
    sub_23F693EC8();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v199, v200, v201, v246);
    sub_23F77E628();
    sub_23FAD74EC();
    sub_23F877770();
    v202(v143);
    v203 = sub_23F72E430();
    sub_23F6F594C(v203, v204, v205);
    sub_23F77DD24(v206, &qword_256EA2D40);
    v207 = sub_23F72E3F8();
    sub_23F77E2AC(v207, v208);
    sub_23F924034(v133);
    goto LABEL_68;
  }
  sub_23F779AF8();
  v209 = sub_23F6B5AD4();
  sub_23FAD6770(v209, v210);
  v211 = *(void (**)(uint64_t, uint64_t))(v279 + 8);
  v211(v106, v99);
  v212 = sub_23FAD6D6C();
  ((void (*)(uint64_t))v211)(v212);
  sub_23F77DE3C();
  sub_23F77DE3C();
  sub_23F77DE3C();
  sub_23F77DE3C();
  sub_23F77DE3C();
  sub_23F77DE3C();
  sub_23F77DE3C();
  sub_23FAD74EC();
  sub_23F877770();
  v213(v248);
  (*(void (**)(uint64_t))(v247 + 8))(v96);
LABEL_8:
  sub_23F6B4F84(v270, &qword_256EAB7E8);
LABEL_68:
  sub_23F8778A8();
  sub_23F6B5100();
}

void ContextProtoStructuredContextSiriRequestContextUserClassification.init(context:)()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;

  sub_23FAD6D58();
  sub_23FB2DFC4();
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8](v4);
  sub_23FAD6950(v5, v10);
  v6 = sub_23FAD6F24(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88));
  if (v6 == *MEMORY[0x24BE579D8])
  {
    v7 = 0;
  }
  else if (v6 == *MEMORY[0x24BE579E0])
  {
    v7 = 1;
  }
  else if (v6 == *MEMORY[0x24BE579E8])
  {
    v7 = 2;
  }
  else if (v6 == *MEMORY[0x24BE579D0])
  {
    v7 = 3;
  }
  else
  {
    if (v6 != *MEMORY[0x24BE579F8])
    {
      sub_23F779AF8();
      v8 = sub_23F6B5AD4();
      sub_23FAD6770(v8, v9);
      sub_23F6D3BD0(v0);
      sub_23F6D3BD0(v2);
      goto LABEL_12;
    }
    v7 = 4;
  }
  sub_23F7B0990(v0, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  *v1 = v7;
LABEL_12:
  sub_23F6D3674();
}

void sub_23FAC9C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  ContextProtoStructuredContext.init(context:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void Confidence.init(transcript:)()
{
  uint64_t v0;

  v0 = sub_23FB2DA6C();
  sub_23F714040(v0, type metadata accessor for ContextProtoConfidence);
}

void sub_23FAC9CB8()
{
  Confidence.init(transcript:)();
}

char *sub_23FAC9CCC()
{
  return sub_23FAC4A78();
}

uint64_t ContextProtoConfidence.init(context:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  int v12;
  char v13;
  uint64_t v14;
  uint64_t v16;
  _BYTE *v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;

  v4 = sub_23FB2DD9C();
  sub_23F70D9A8();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B5F6C();
  sub_23FB2DA78();
  v8 = v7;
  sub_23FB2DA84();
  v9 = sub_23F6B6218();
  sub_23F6B633C(v9, v10, v11);
  v12 = sub_23F6F7574(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88));
  if (v12 == *MEMORY[0x24BE57730])
  {
    v13 = 0;
  }
  else if (v12 == *MEMORY[0x24BE57740])
  {
    v13 = 1;
  }
  else
  {
    if (v12 != *MEMORY[0x24BE57738])
    {
      sub_23F779AF8();
      v16 = sub_23F6B5AD4();
      sub_23FAD6770(v16, v17);
      v18 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
      v18(v1, v4);
      v19 = sub_23F72E2E0();
      ((void (*)(uint64_t))v18)(v19);
      goto LABEL_8;
    }
    v13 = 2;
  }
  sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  type metadata accessor for ContextProtoConfidence(0);
  sub_23FAC3044();
  *(_DWORD *)a1 = v8;
  *(_BYTE *)(a1 + 4) = v13;
LABEL_8:
  v14 = sub_23FB2DA90();
  return sub_23F78F1B0(v14);
}

#error "23FAC9E60: call analysis failed (funcsize=13)"

uint64_t sub_23FAC9E6C@<X0>(uint64_t a1@<X8>)
{
  return ContextProtoConfidence.init(context:)(a1);
}

void ConfidenceBucket.init(transcript:)(uint64_t a1)
{
  sub_23FACB1AC(a1, MEMORY[0x24BE57730], (uint64_t (*)(_QWORD))MEMORY[0x24BE57748]);
}

uint64_t sub_23FAC9EB4(char *a1, uint64_t a2, uint64_t a3)
{
  return sub_23FACA554(a1, a2, a3, (uint64_t (*)(char *))ConfidenceBucket.init(transcript:));
}

uint64_t sub_23FAC9ED0()
{
  return ContextProtoConfidenceBucket.init(context:)();
}

void BoundingBox.init(transcript:)()
{
  unsigned int *v0;
  uint64_t v1;
  unsigned int *v2;
  uint64_t v3;

  sub_23FAD7414();
  v3 = sub_23F77B94C(*v2 | ((unint64_t)*((unsigned __int8 *)v2 + 4) << 32));
  if (!v1)
  {
    sub_23FAD6A5C(v0[2]);
    sub_23FAD6A5C(v0[4]);
    sub_23FAD6A5C(v0[6]);
    v3 = sub_23FAD6FD4();
  }
  sub_23F714040(v3, type metadata accessor for ContextProtoBoundingBox);
}

void sub_23FAC9FB8()
{
  BoundingBox.init(transcript:)();
}

uint64_t sub_23FAC9FCC()
{
  return sub_23FAC4D14();
}

uint64_t ContextProtoBoundingBox.init(context:)@<X0>(uint64_t a1@<X8>)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_23FB2DAB4();
  v3 = v2;
  sub_23FB2DAC0();
  v5 = v4;
  sub_23FB2DACC();
  v7 = v6;
  sub_23FB2DAD8();
  v9 = v8;
  type metadata accessor for ContextProtoBoundingBox(0);
  sub_23F6F0BB0();
  *(_DWORD *)a1 = v3;
  *(_BYTE *)(a1 + 4) = 0;
  *(_DWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 12) = 0;
  *(_DWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 20) = 0;
  *(_DWORD *)(a1 + 24) = v9;
  *(_BYTE *)(a1 + 28) = 0;
  v10 = sub_23FB2DAE4();
  return sub_23F78F1B0(v10);
}

uint64_t sub_23FACA07C@<X0>(uint64_t a1@<X8>)
{
  return ContextProtoBoundingBox.init(context:)(a1);
}

void SurroundingText.init(transcript:)(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unsigned int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;
  uint64_t v33;
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  char v39;
  char v40;
  unsigned __int8 v41;

  v6 = v2;
  sub_23F6916B8(&qword_256EA2800);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F9231E0();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v34 - v13;
  MEMORY[0x24BDAC7A8](v12);
  sub_23F78F2D0();
  sub_23FB2DAE4();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B5208();
  v16 = *a1;
  v17 = a1[1];
  sub_23F6B5F1C();
  v18 = sub_23F77BA18(v16, v17);
  if (v6)
  {
    sub_23F714040(v18, type metadata accessor for ContextProtoSurroundingText);
    swift_bridgeObjectRelease();
  }
  else
  {
    v34[1] = v18;
    v34[2] = a2;
    v37 = v19;
    sub_23F6B5908();
    v35 = (uint64_t)a1 + *(int *)(type metadata accessor for ContextProtoSurroundingText(0) + 20);
    sub_23F6B4F58(v35, (uint64_t)v3, &qword_256EA2800);
    v36 = type metadata accessor for ContextProtoBoundingBox(0);
    v20 = sub_23F6B5164((uint64_t)v3, 1, v36);
    if (v21)
    {
      sub_23F77DD24(v20, &qword_256EA2800);
      v22 = 0;
      v23 = 1;
    }
    else
    {
      v22 = *v3;
      v23 = *((_BYTE *)v3 + 4);
      sub_23F713FFC(v20, type metadata accessor for ContextProtoBoundingBox);
    }
    v41 = v23;
    sub_23F77B94C(v22 | ((unint64_t)v23 << 32));
    v24 = v35;
    sub_23F6B4F58(v35, (uint64_t)v14, &qword_256EA2800);
    v25 = sub_23F6B5164((uint64_t)v14, 1, v36);
    if (v21)
    {
      sub_23F6B6034(v25, &qword_256EA2800);
      v26 = 1;
    }
    else
    {
      v26 = v14[12];
      sub_23F6D3D20(v25, type metadata accessor for ContextProtoBoundingBox);
    }
    v40 = v26;
    sub_23FAD6F8C();
    sub_23FAD6F30(v24, v27, &qword_256EA2800);
    v28 = sub_23F6B5164(v5, 1, v36);
    if (v21)
    {
      sub_23F77DD64(v28, &qword_256EA2800);
      v29 = 1;
    }
    else
    {
      v29 = *(_BYTE *)(v5 + 20);
      sub_23F6D3C24(v28, type metadata accessor for ContextProtoBoundingBox);
    }
    v39 = v29;
    sub_23FAD6F8C();
    sub_23F6B4F58(v24, v4, &qword_256EA2800);
    v30 = sub_23F6B5164(v4, 1, v36);
    if (v21)
    {
      sub_23F77E3DC(v30, &qword_256EA2800);
      v31 = 0;
      v32 = 1;
    }
    else
    {
      v31 = *(unsigned int *)(v4 + 24);
      v32 = *(_BYTE *)(v4 + 28);
      sub_23F72E404(v30, type metadata accessor for ContextProtoBoundingBox);
    }
    v38 = v32;
    sub_23F77B94C(v31 | ((unint64_t)v32 << 32));
    sub_23FAD6FD4();
    v33 = sub_23FB2DD78();
    sub_23F714040(v33, type metadata accessor for ContextProtoSurroundingText);
  }
}

void sub_23FACA3D4(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  SurroundingText.init(transcript:)(a1, a2);
}

uint64_t sub_23FACA3E8()
{
  return sub_23FAC4E9C();
}

void ContextProtoSurroundingText.init(context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_23F6B5220();
  v4 = sub_23F78F298();
  v5 = type metadata accessor for ContextProtoSurroundingText(v4);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B5864();
  sub_23FB2DAE4();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B573C();
  sub_23F6916B8(&qword_256EA2800);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B59E0();
  v9 = sub_23FB2DD84();
  v11 = v10;
  sub_23FB2DD6C();
  ContextProtoBoundingBox.init(context:)(v3);
  if (v1)
  {
    v12 = sub_23FB2DD90();
    sub_23F78F1B0(v12);
    sub_23F717D54();
  }
  else
  {
    type metadata accessor for ContextProtoBoundingBox(0);
    sub_23FAD6AA4(v3, 0);
    v15 = v0;
    v13 = (uint64_t)v2 + *(int *)(v5 + 20);
    sub_23FAD6AA4(v13, 1);
    sub_23F6F0BB0();
    *v2 = v9;
    v2[1] = v11;
    sub_23F710E80(v3, v13, &qword_256EA2800);
    sub_23F6F594C((uint64_t)v2, v15, type metadata accessor for ContextProtoSurroundingText);
    v14 = sub_23FB2DD90();
    sub_23F78F1B0(v14);
  }
  sub_23F877A30();
  sub_23F6B5100();
}

void sub_23FACA524()
{
  ContextProtoSurroundingText.init(context:)();
}

uint64_t sub_23FACA538(char *a1, uint64_t a2, uint64_t a3)
{
  return sub_23FACA554(a1, a2, a3, (uint64_t (*)(char *))ContextType.init(transcript:));
}

uint64_t sub_23FACA554(char *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *))
{
  char v5;

  v5 = *a1;
  return a4(&v5);
}

void sub_23FACA584()
{
  ContextProtoContextType.init(context:)();
}

void RetrievedTool.Definition.init(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD v40[16];

  sub_23F6B5220();
  sub_23FAD7304();
  v40[10] = v15;
  v16 = sub_23FB2EB94();
  v40[8] = *(_QWORD *)(v16 - 8);
  v40[9] = v16;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v17);
  v40[7] = (char *)v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v19);
  v40[5] = (char *)v40 - v20;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B6580();
  v40[15] = v22;
  v23 = sub_23FAD72F8();
  v40[13] = *(_QWORD *)(v23 - 8);
  v40[14] = v23;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v24);
  v40[12] = (char *)v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v26);
  v40[6] = (char *)v40 - v27;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v28);
  v40[11] = (char *)v40 - v29;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F9231E0();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F6D3A70();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F72E168();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F72E2B0();
  MEMORY[0x24BDAC7A8](v35);
  v36 = sub_23F9238C8();
  type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(v36);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F693EB0();
  sub_23F77B9C0();
  if (!a10)
  {
    v40[0] = v12;
    v40[1] = v14;
    v40[2] = v13;
    v40[3] = v10;
    v40[4] = v11;
    sub_23F7D260C();
    v39 = (char *)&loc_23FACA780 + 4 * byte_23FB91F1A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_23F78F204(v38, type metadata accessor for ContextProtoRetrievedTool.Definition);
  sub_23F8778A8();
  sub_23F6B5100();
}

void sub_23FACAA34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  RetrievedTool.Definition.init(transcript:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void ContextProtoRetrievedTool.Definition.init(handwritten:)()
{
  void (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(_QWORD);
  uint64_t v5;
  char *v6;
  void (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(uint64_t, uint64_t, uint64_t);
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)(uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  _BYTE *v81;
  char *v82;
  uint64_t v83;
  void (*v84)(uint64_t);
  uint64_t v85;
  void (*v86)(_QWORD);
  uint64_t v87;
  void (*v88)(uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(_QWORD);
  uint64_t v96;
  uint64_t v97;
  void (*v98)(_QWORD);
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;

  sub_23F6B5220();
  v119 = v2;
  v120 = v9;
  v115 = v10;
  v113 = sub_23FAD6B40();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  v114 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6D398C();
  v13 = sub_23FB2EF54();
  v110 = *(_QWORD *)(v13 - 8);
  v111 = v13;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F693E0C();
  v109 = v15;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v16);
  v108 = (char *)&v97 - v17;
  v18 = sub_23FAD72F8();
  v105 = *(_QWORD *)(v18 - 8);
  v106 = v18;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v19);
  v101 = (char *)&v97 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v21);
  v104 = (char *)&v97 - v22;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v23);
  v117 = (char *)&v97 - v24;
  sub_23F6D398C();
  v118 = sub_23FB2E8D0();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v25);
  v99 = (uint64_t)&v97 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v27);
  v100 = (char *)&v97 - v28;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v29);
  v102 = (char *)&v97 - v30;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v31);
  v103 = (uint64_t)&v97 - v32;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F6D3F60();
  MEMORY[0x24BDAC7A8](v34);
  v107 = (char *)&v97 - v35;
  sub_23F6D398C();
  v36 = sub_23FB2DC28();
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v37);
  v38 = sub_23F6B51D0();
  v112 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(v38);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F9231E0();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F6D3F74();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F72E168();
  v44 = MEMORY[0x24BDAC7A8](v43);
  sub_23F924B48(v44, v45, v46, v47, v48, v49, v50, v51, v97);
  sub_23F6B633C(v5, v120, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
  v52 = sub_23F6F7574(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 88));
  if (v52 != *MEMORY[0x24BE57550])
  {
    v107 = v6;
    v98 = v7;
    v117 = (char *)v36;
    v58 = v109;
    v60 = v110;
    v59 = v111;
    if (v52 == *MEMORY[0x24BE57558])
    {
      v97 = v8;
      sub_23F6B6178(v5, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 96));
      v61 = sub_23FAD6D6C();
      v62 = v59;
      sub_23F6D3ECC(v61, v63, v64);
      v65 = sub_23FAD709C();
      sub_23F6D3ECC(v65, v66, v67);
      sub_23FB2EF3C();
      v68 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
      v68(v58, v62);
      v69 = sub_23F6B6AAC();
      ((void (*)(uint64_t))v68)(v69);
      sub_23FAD71EC();
      swift_storeEnumTagMultiPayload();
      v4 = v0;
      v70 = v120;
      v8 = v97;
    }
    else
    {
      if (v52 == *MEMORY[0x24BE57548])
      {
        sub_23F6B6420(v5, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 96));
        sub_23F77DD54(v103, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
        v71 = sub_23F7D24F0();
        sub_23F77DD54(v71, v72, v73);
        sub_23FAD740C();
        if (v2)
        {
          sub_23FAD7110();
          sub_23F6B6420(v120, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
          v57 = sub_23F78F560();
          goto LABEL_4;
        }
        v119 = 0;
        sub_23FAD7110();
        v82 = v107;
        v83 = sub_23F6B619C();
        v84(v83);
        v85 = sub_23F78F560();
        v0(v85);
        sub_23FAD71EC();
        swift_storeEnumTagMultiPayload();
        v4 = (void (*)(_QWORD))v82;
      }
      else
      {
        if (v52 != *MEMORY[0x24BE57540])
        {
          sub_23F779AF8();
          v80 = sub_23F6B5AD4();
          sub_23FAD6770(v80, v81);
          v0 = *(void (**)(_QWORD))(v8 + 8);
          ((void (*)(uint64_t, char *))v0)(v120, v117);
          v57 = v5;
          goto LABEL_4;
        }
        sub_23F6B6420(v5, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 96));
        v75 = (uint64_t)v100;
        v76 = sub_23FAD6D6C();
        sub_23F75E68C(v76, v77, v78);
        v79 = v99;
        sub_23F75E68C(v99, v75, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
        sub_23FAD740C();
        if (v2)
        {
          sub_23FAD6874(v79);
          sub_23F6B6420(v120, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
          sub_23FAD6874(v75);
          goto LABEL_19;
        }
        sub_23FAD6874(v79);
        v86 = v98;
        v87 = sub_23F6B6218();
        v88(v87);
        sub_23FAD6874(v75);
        sub_23FAD71EC();
        swift_storeEnumTagMultiPayload();
        v4 = v86;
        v119 = 0;
      }
      v70 = v120;
    }
LABEL_18:
    v90 = (uint64_t)v114;
    v89 = v115;
    v91 = (uint64_t)v4;
    v92 = v116;
    sub_23F77E2AC(v91, v116);
    sub_23F77E598(v90, 1);
    sub_23F77E628();
    sub_23F6B6420(v70, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
    v93 = sub_23F72E2E0();
    sub_23F6F594C(v93, v94, v95);
    sub_23F923588(v96, &qword_256EA2578);
    sub_23F77E2AC(v92, v89);
    sub_23F77E598(v89, 0);
    goto LABEL_19;
  }
  sub_23F6B530C(v5, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 96));
  v53 = (uint64_t)v107;
  v54 = sub_23F6B6854();
  sub_23F75E68C(v54, v55, v56);
  sub_23F75E68C(v1, v53, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  sub_23FAD740C();
  if (!v2)
  {
    v119 = 0;
    sub_23F77E264();
    (*(void (**)(void (*)(_QWORD), char *, uint64_t))(v105 + 32))(v4, v117, v106);
    v74 = sub_23F6D3D70();
    v0(v74);
    sub_23FAD71EC();
    swift_storeEnumTagMultiPayload();
    v70 = v120;
    goto LABEL_18;
  }
  sub_23F77E264();
  sub_23F6B530C(v120, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  v57 = sub_23F6D3D70();
LABEL_4:
  v0(v57);
LABEL_19:
  sub_23F6B5100();
}

void sub_23FACB050()
{
  ContextProtoRetrievedTool.Definition.init(handwritten:)();
}

void ContextProtoToolQueryOutput.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;

  sub_23F6B5220();
  sub_23FAD7414();
  type metadata accessor for ContextProtoToolQueryOutput(0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B5864();
  sub_23FB2DC28();
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B5268();
  sub_23F6916B8(&qword_256EA2588);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B53AC();
  v7 = sub_23F924C14();
  sub_23F75E68C(v7, v8, v9);
  ContextProtoRetrievedTool.Definition.init(handwritten:)();
  if (!v1)
  {
    v11 = sub_23FAD6B40();
    sub_23FAD6A98(v3, 0);
    v12 = sub_23FAD6A04();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v12, v13, v14, v11);
    sub_23F6F0BB0();
    v15 = sub_23F72E2E0();
    sub_23F710E80(v15, v16, v17);
    sub_23F6F594C(v2, v0, type metadata accessor for ContextProtoToolQueryOutput);
  }
  sub_23F714040(v10, (uint64_t (*)(_QWORD))type metadata accessor for ToolQuery.Output);
  sub_23F877A30();
  sub_23F6B5100();
}

void sub_23FACB164()
{
  ContextProtoToolQueryOutput.init(handwritten:)();
}

void RetrievedTool.Stage.init(transcript:)(uint64_t a1)
{
  sub_23FACB1AC(a1, MEMORY[0x24BE575D0], (uint64_t (*)(_QWORD))MEMORY[0x24BE575F0]);
}

void sub_23FACB1AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  sub_23FAD67C8(v3);
  sub_23FAD6A50();
}

uint64_t sub_23FACB200(char *a1, uint64_t a2, uint64_t a3)
{
  return sub_23FACA554(a1, a2, a3, (uint64_t (*)(char *))RetrievedTool.Stage.init(transcript:));
}

void StructuredContext.SiriRequestContext.User.Classification.init(transcript:)(uint64_t a1)
{
  __asm { BR              X10 }
}

void sub_23FACB250()
{
  uint64_t v0;

  v0 = sub_23FB2DFC4();
  sub_23FAD67C8(v0);
  sub_23FAD6A50();
}

uint64_t sub_23FACB2A4(char *a1, uint64_t a2, uint64_t a3)
{
  return sub_23FACA554(a1, a2, a3, (uint64_t (*)(char *))StructuredContext.SiriRequestContext.User.Classification.init(transcript:));
}

void RetrievedTool.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_23FAD66AC();
  v27 = v4;
  v28 = v5;
  v7 = v6;
  v26 = v8;
  v9 = sub_23FB2DC64();
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B5F6C();
  sub_23FAD6B40();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FAD6A1C();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  v16 = sub_23F78F260();
  type metadata accessor for ContextProtoRetrievedTool(v16);
  sub_23F77B9EC();
  if (!v0)
  {
    RetrievedTool.Definition.init(transcript:)((uint64_t)v14, v18, v19, v20, v21, v22, v23, v24, v25, v26);
    swift_bridgeObjectRetain();
    sub_23F7734E4();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 104))(v3, **((unsigned int **)&unk_251002208 + *(char *)(v7 + 16)), v9);
    sub_23F75E710(v2, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32));
    v17 = sub_23FB2DC34();
  }
  sub_23F714040(v17, type metadata accessor for ContextProtoRetrievedTool);
  sub_23F8778A8();
  sub_23F70D684();
}

void sub_23FACB414()
{
  RetrievedTool.init(transcript:)();
}

void ToolQuery.Output.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;

  sub_23FAD6B40();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F6B51D0();
  sub_23FB2DC28();
  sub_23F70D9A8();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B5208();
  sub_23F77B9EC();
  if (v0)
  {
    sub_23F78F204(v4, type metadata accessor for ContextProtoToolQueryOutput);
  }
  else
  {
    RetrievedTool.Definition.init(transcript:)(v1, v5, v6, v7, v8, v9, v10, v11, v16, v17);
    sub_23F78F204(v12, type metadata accessor for ContextProtoToolQueryOutput);
    v13 = sub_23F7D2F98();
    sub_23F6B633C(v13, v14, v15);
  }
}

void sub_23FACB4F4()
{
  ToolQuery.Output.init(transcript:)();
}

#error "23FACB530: call analysis failed (funcsize=13)"

uint64_t sub_23FACB53C()
{
  return ContextProtoRetrievedTool.Stage.init(handwritten:)();
}

void ContextProtoRetrievedTool.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t);
  int v24;
  char v25;
  void (*v26)(char *, uint64_t);
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  sub_23FAD66AC();
  v43 = v5;
  v44 = v6;
  v41 = v7;
  v8 = type metadata accessor for ContextProtoRetrievedTool(0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F7A00C8();
  v10 = sub_23FB2DC64();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v39 - v13;
  sub_23FAD6A1C();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B52B0();
  sub_23F6916B8(&qword_256EA2588);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B59E0();
  sub_23FB2DC40();
  ContextProtoRetrievedTool.Definition.init(handwritten:)();
  if (!v1)
  {
    v40 = v0;
    sub_23FAD6B40();
    sub_23F7A690C(v3, 0);
    sub_23FB2DC4C();
    v18 = v17;
    v19 = sub_23FB2DC58();
    sub_23FACE154(v19);
    v42 = v20;
    sub_23FB2DC70();
    v21 = sub_23F72E430();
    sub_23F77DB9C(v21, v22, v23);
    v24 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v2, v10);
    v25 = 0;
    if (v24 != *MEMORY[0x24BE575D0])
    {
      if (v24 == *MEMORY[0x24BE575D8])
      {
        v25 = 1;
      }
      else
      {
        if (v24 != *MEMORY[0x24BE575E8])
        {
          sub_23F779AF8();
          v34 = sub_23F6B5AD4();
          sub_23FAD6770(v34, v35);
          v36 = *(void (**)(char *, uint64_t))(v4 + 8);
          v36(v14, v10);
          v36(v2, v10);
          sub_23F693E04();
          v37 = sub_23FB2DC7C();
          v38 = sub_23F78F1B0(v37);
          sub_23F77E3DC(v38, &qword_256EA2588);
          goto LABEL_9;
        }
        v25 = 2;
      }
    }
    v26 = *(void (**)(char *, uint64_t))(v4 + 8);
    v27 = v25;
    v26(v14, v10);
    v28 = v40;
    sub_23F7A690C(v40 + *(int *)(v8 + 28), 1);
    sub_23FAC3044();
    v29 = sub_23F78F560();
    sub_23F710E80(v29, v30, v31);
    *(_DWORD *)v28 = v18;
    v32 = v41;
    *(_QWORD *)(v28 + 8) = v42;
    *(_BYTE *)(v28 + 16) = v27;
    sub_23F6F594C(v28, v32, type metadata accessor for ContextProtoRetrievedTool);
  }
  v33 = sub_23FB2DC7C();
  sub_23F78F1B0(v33);
LABEL_9:
  sub_23F876FC4();
  sub_23F70D684();
}

void sub_23FACB7AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t a1))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t);
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t);
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(uint64_t);
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;

  sub_23F6B5220();
  v89 = v10;
  v16 = v15;
  v17 = sub_23F6B58C8();
  v105 = *(_QWORD *)(v17 - 8);
  v106 = v17;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B5598(v19, v10);
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  v103 = (char *)&v89 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_23F6D398C();
  v23 = type metadata accessor for TranscriptProtoSpeechRequestCandidate(v22);
  v101 = *(_QWORD *)(v23 - 8);
  v102 = v23;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v25);
  v100 = (char *)&v89 - v26;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v27);
  v99 = (uint64_t)&v89 - v28;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v29);
  v30 = sub_23F78F404();
  v98 = type metadata accessor for SpeechRequestCandidate(v30);
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v31);
  v95 = (char *)&v89 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v33);
  v111 = (char *)&v89 - v34;
  sub_23F6B5664();
  v36 = MEMORY[0x24BDAC7A8](v35);
  sub_23FAD6DB4(v36, v37, v38, v39, v40, v41, v42, v43, v89);
  v44 = *(_QWORD *)(v16 + 16);
  sub_23FAD70E0(MEMORY[0x24BEE4AF8]);
  sub_23F7112BC();
  v97 = v12;
  v91 = v16;
  v90 = v11;
  if (v44)
  {
    v94 = *(_QWORD *)(v16 + 16);
    sub_23FAD6830();
    v92 = v45;
    sub_23F6B5508();
    v46 = 0;
    v110 = v44;
    v93 = v13;
    v47 = (uint64_t *)v95;
    while (v94 != v46)
    {
      v48 = *(_QWORD *)(v12 + 72);
      v109 = v46;
      v49 = (uint64_t)v111;
      sub_23F70D654(v92 + v48 * v46, (uint64_t)v111);
      sub_23F70D654(v49, (uint64_t)v47);
      v50 = *v47;
      v107 = v47[1];
      v108 = v50;
      sub_23F75E68C(v104, (uint64_t)v47 + *(int *)(v98 + 20), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v105 + 16));
      sub_23F6B5508();
      v51 = sub_23FB2C758();
      v52 = sub_23FB2C740();
      v54 = v53;
      sub_23FAD69A0();
      v55 = (uint64_t)v103;
      sub_23FAD7240();
      *(_DWORD *)v55 = v51;
      *(_QWORD *)(v55 + 8) = v52;
      *(_QWORD *)(v55 + 16) = v54;
      v56 = v93;
      v57 = sub_23F7D24F0();
      v14 = type metadata accessor for TranscriptProtoSpeechRequestCandidate;
      v58(v57);
      sub_23F7A690C(v55, 0);
      v59 = v100;
      v60 = (uint64_t)&v100[*(int *)(v102 + 20)];
      sub_23F7A690C(v60, 1);
      sub_23FAC3044();
      v61 = v107;
      *v59 = v108;
      v59[1] = v61;
      sub_23F6B64F4(v60);
      v62 = sub_23F7F64A8();
      sub_23FAD73D8(v62, v63);
      v64 = v99;
      sub_23F77DC08((uint64_t)v59, v99);
      v65 = type metadata accessor for SpeechRequestCandidate;
      sub_23F6D38A0((uint64_t)v47);
      sub_23F77DC08(v64, v56);
      sub_23F6D38A0((uint64_t)v111);
      if ((sub_23F77D93C() & 1) == 0)
      {
        sub_23FAD6CB8();
        v65 = a10;
      }
      v66 = v109;
      v44 = v110;
      v67 = *((_QWORD *)v65 + 2);
      v12 = v97;
      if (v67 >= *((_QWORD *)v65 + 3) >> 1)
      {
        sub_23FAD6B98();
        v65 = a10;
      }
      v46 = v66 + 1;
      *((_QWORD *)v65 + 2) = v67 + 1;
      sub_23FAD66C0();
      sub_23F77DC08(v56, v68);
      if (v44 == v46)
        goto LABEL_11;
    }
    __break(1u);
  }
  else
  {
    sub_23F6B5508();
LABEL_11:
    v69 = *(_QWORD *)(v91 + 16);
    if (v44 == v69)
    {
LABEL_12:
      sub_23F6B6740();
      sub_23F6B5100();
      return;
    }
    v70 = v106;
    while (v44 < v69)
    {
      sub_23FAD706C();
      v110 = v44;
      v73 = v96;
      sub_23F70D654(v71 + v72 * v44, v96);
      v74 = v111;
      sub_23F70D654(v73, (uint64_t)v111);
      v75 = *(_QWORD *)v74;
      v108 = *((_QWORD *)v74 + 1);
      v109 = v75;
      v77 = v104;
      v76 = v105;
      (*(void (**)(uint64_t, char *, uint64_t))(v105 + 16))(v104, &v74[*(int *)(v98 + 20)], v70);
      sub_23F6B5508();
      sub_23FB2C758();
      sub_23FAD72E4();
      sub_23FAD73CC();
      sub_23FAD69A0();
      v78 = (uint64_t)v103;
      sub_23F6F0878();
      *(_DWORD *)v78 = (_DWORD)v14;
      *(_QWORD *)(v78 + 8) = v77;
      *(_QWORD *)(v78 + 16) = v12;
      sub_23F6B6420(v77, *(uint64_t (**)(uint64_t, uint64_t))(v76 + 8));
      sub_23F878CF4(v78);
      v79 = v100;
      v80 = (uint64_t)&v100[*(int *)(v102 + 20)];
      sub_23F7D2ED8(v80, 1);
      sub_23FAC3044();
      sub_23FAD7130();
      *v79 = v82;
      v79[1] = v81;
      sub_23F6D3C1C(v80);
      sub_23FAD72C8(v78, v80);
      v83 = v99;
      sub_23FAD7260((uint64_t)v79, v99);
      v84 = type metadata accessor for SpeechRequestCandidate;
      sub_23F6D38A0((uint64_t)v74);
      v85 = v90;
      sub_23FAD7260(v83, v90);
      sub_23F6D38A0(v96);
      if ((sub_23F77D93C() & 1) == 0)
      {
        sub_23FAD6CB8();
        v84 = a10;
      }
      v86 = *((_QWORD *)v84 + 2);
      v12 = v97;
      v87 = v110;
      if (v86 >= *((_QWORD *)v84 + 3) >> 1)
      {
        sub_23FAD6B98();
        v84 = a10;
      }
      v44 = v87 + 1;
      *((_QWORD *)v84 + 2) = v86 + 1;
      sub_23FAD66C0();
      sub_23FAD7260(v85, v88);
      v69 = *(_QWORD *)(v91 + 16);
      if (v44 == v69)
        goto LABEL_12;
    }
  }
  __break(1u);
}

void sub_23FACBC98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;

  sub_23F6B5220();
  v3 = v2;
  sub_23F6916B8(&qword_256EA2950);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v4);
  v101 = (char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  v7 = MEMORY[0x24BDAC7A8](v6);
  sub_23FAD6DC8(v7, v8, v9, v10, v11, v12, v13, v14, v91);
  sub_23F6916B8(&qword_256EA2610);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F693E0C();
  v108 = v16;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v17);
  v95 = (uint64_t)&v91 - v18;
  v19 = sub_23F6D398C();
  v20 = type metadata accessor for ContextProtoSpanMatchedEntity(v19);
  v103 = *(_QWORD *)(v20 - 8);
  v104 = v20;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v21);
  v97 = (uint64_t)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v23);
  v96 = (uint64_t)&v91 - v24;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F6D3D14();
  v107 = v26;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v27);
  v102 = (char *)&v91 - v28;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v29);
  v94 = (uint64_t)&v91 - v30;
  sub_23F6D398C();
  v31 = sub_23FB2DE8C();
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F6D3D14();
  v109 = v34;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v35);
  v100 = (uint64_t)&v91 - v36;
  sub_23F6B5664();
  v38 = MEMORY[0x24BDAC7A8](v37);
  sub_23FAD6DB4(v38, v39, v40, v41, v42, v43, v44, v45, v91);
  v46 = *(_QWORD *)(v3 + 16);
  v110 = MEMORY[0x24BEE4AF8];
  sub_23FAD6FC4();
  sub_23F7113AC();
  v105 = v31;
  v106 = v1;
  v92 = v3;
  if (v46)
  {
    sub_23F77E348();
    v98 = v47;
    v99 = v48;
    sub_23F6B6548();
    v49 = 0;
    while (v99 != v49)
    {
      sub_23F77DE34(v109, v98 + *(_QWORD *)(v1 + 72) * v49);
      v50 = sub_23F72E430();
      sub_23F77DE34(v50, v51);
      sub_23FB2DE74();
      sub_23FAD734C();
      if (v0)
      {
        sub_23FAD6A88();
        sub_23F6B6090();
        sub_23F77DB70();
        sub_23F77DC80(v109);
        sub_23F6B6090();
        goto LABEL_25;
      }
      v52 = sub_23FB2DE80();
      sub_23FACC1F8(v52, (uint64_t)type metadata accessor for ContextProtoEntityMatch, (uint64_t)MEMORY[0x24BE573C8], (uint64_t)sub_23F7113E8, (uint64_t)ContextProtoEntityMatch.init(handwritten:), v53, v54, v55, v91, v92);
      v57 = v56;
      v58 = v102;
      v59 = (uint64_t)&v102[*(int *)(v104 + 20)];
      v60 = sub_23F6B632C();
      sub_23F6B5A8C(v59, v61, v62, v60);
      v1 = v106;
      sub_23FAC3CEC();
      sub_23F710E80(v108, v59, &qword_256EA2610);
      *v58 = v57;
      v63 = v97;
      sub_23FAD6B38((uint64_t)v58, v97);
      sub_23FAD6A88();
      v64 = v63;
      v65 = v96;
      sub_23FAD6B38(v64, v96);
      sub_23FAD6B38(v65, v107);
      sub_23F77DC80(v109);
      if ((sub_23F77D93C() & 1) == 0)
      {
        sub_23FAD6C70();
        v57 = v110;
      }
      sub_23FAD700C();
      if (v66)
      {
        sub_23FAD6B50();
        v57 = v110;
      }
      ++v49;
      *(_QWORD *)(v57 + 16) = v65;
      sub_23FAD6728();
      sub_23F6F594C(v107, v67, type metadata accessor for ContextProtoSpanMatchedEntity);
      if (v46 == v49)
        goto LABEL_12;
    }
    __break(1u);
    goto LABEL_27;
  }
  sub_23F6B6548();
LABEL_12:
  v68 = v92;
  v69 = *(_QWORD *)(v92 + 16);
  if (v46 != v69)
  {
    v70 = v93;
    while (v46 < v69)
    {
      sub_23FAD6F9C();
      sub_23F77DE34(v70, v71 + v72 * v46);
      v73 = sub_23F7D260C();
      sub_23F77DE34(v73, v74);
      sub_23FB2DE74();
      sub_23FAD734C();
      if (v0)
      {
        v88 = *(void (**)(uint64_t))(v106 + 8);
        v89 = sub_23FAD6F0C();
        v88(v89);
        v90 = sub_23F6B6218();
        v88(v90);
        sub_23F6B6A48();
        sub_23F6B6A48();
        sub_23F77DA7C();
        goto LABEL_25;
      }
      v75 = sub_23FB2DE80();
      sub_23FACC1F8(v75, (uint64_t)type metadata accessor for ContextProtoEntityMatch, (uint64_t)MEMORY[0x24BE573C8], (uint64_t)sub_23F7113E8, (uint64_t)ContextProtoEntityMatch.init(handwritten:), v76, v77, v78, v91, v92);
      v80 = v79;
      v81 = v102;
      v82 = (uint64_t)&v102[*(int *)(v104 + 20)];
      v83 = sub_23F6B632C();
      sub_23F6B5A8C(v82, v84, v85, v83);
      v70 = v93;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      sub_23F710E80(v95, v82, &qword_256EA2610);
      *v81 = v80;
      sub_23FAD6B38((uint64_t)v81, v94);
      v86 = *(_QWORD *)(v106 + 8);
      sub_23F77DC80(v100);
      sub_23F77DC80(v70);
      if ((sub_23F77D93C() & 1) == 0)
      {
        sub_23FAD6C70();
        v86 = v110;
      }
      sub_23FAD700C();
      if (v66)
      {
        sub_23FAD6B50();
        v86 = v110;
      }
      ++v46;
      *(_QWORD *)(v86 + 16) = v82;
      sub_23FAD6728();
      sub_23FAD6B38(v94, v87);
      v69 = *(_QWORD *)(v68 + 16);
      if (v46 == v69)
        goto LABEL_13;
    }
LABEL_27:
    __break(1u);
    return;
  }
LABEL_13:
  sub_23F6B6740();
LABEL_25:
  sub_23F77DB18();
  sub_23F6B5100();
}

void sub_23FACC1F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;

  sub_23F6B5220();
  v52 = *(_QWORD *)(sub_23FAD6AC0(v16, v17, v18, v19, v20) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v21);
  v53 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v23);
  sub_23FAD6F44();
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v24);
  v51 = (char *)&v46 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F6D3A70();
  MEMORY[0x24BDAC7A8](v27);
  v48 = (char *)&v46 - v28;
  sub_23F6B5664();
  v30 = MEMORY[0x24BDAC7A8](v29);
  sub_23FAD7198(v30, v31, v32, v33, v34, v35, v36, v37, v46);
  sub_23FAD6AE4(MEMORY[0x24BEE4AF8]);
  v38 = a10;
  v46 = v15;
  v47 = v12;
  if (v14)
  {
    v39 = *(_QWORD *)(v12 + 16);
    v49 = v12 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v50 = v39;
    sub_23F6B6548();
    while (v50)
    {
      sub_23FAD6A6C();
      sub_23FAD6EF0();
      sub_23FAD6FF4();
      if (v10)
      {
        sub_23F77DA7C();
        sub_23F693DFC();
        sub_23F6B5900(v11, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
        sub_23F693DFC();
        goto LABEL_24;
      }
      sub_23F6B5900(v11, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
      if ((sub_23F77D93C() & 1) == 0)
      {
        sub_23FAD677C();
        v38 = a10;
      }
      v41 = *(_QWORD *)(v38 + 16);
      v40 = *(_QWORD *)(v38 + 24);
      if (v41 >= v40 >> 1)
      {
        sub_23FAD67E0(v40 > 1, v41 + 1);
        v38 = a10;
      }
      sub_23FAD68DC();
    }
    __break(1u);
LABEL_26:
    __break(1u);
    return;
  }
  sub_23F6B6548();
  sub_23FAD6D8C();
  if (!v43)
  {
    while (v42)
    {
      sub_23FAD68B0();
      sub_23FAD6E58();
      sub_23F77DDE4();
      if (v10)
      {
        sub_23FAD67EC(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
        sub_23F717D54();
        sub_23F717D54();
        sub_23F77DA7C();
        goto LABEL_24;
      }
      sub_23FAD67EC(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
      if ((sub_23F77D93C() & 1) == 0)
        sub_23FAD677C();
      sub_23FAD6FE4();
      if (v45)
        sub_23FAD67E0(v44 > 1, v11);
      sub_23FAD687C();
      sub_23FAD6D8C();
      if (v43)
        goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_12:
  sub_23F6B6740();
LABEL_24:
  sub_23F77DB18();
  sub_23F6B5100();
}

void sub_23FACC44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  sub_23FACC1F8(a1, (uint64_t)type metadata accessor for ContextProtoRetrievedTool, (uint64_t)MEMORY[0x24BE57608], (uint64_t)sub_23F711424, (uint64_t)ContextProtoRetrievedTool.init(handwritten:), a6, a7, a8, vars0, vars8);
}

void sub_23FACC480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t Output;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(_QWORD);
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(_QWORD);
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  sub_23F6B5220();
  v16 = v15;
  v17 = sub_23FAD6A1C();
  v102 = *(_QWORD *)(v17 - 8);
  v103 = v17;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v18);
  v97 = (char *)&v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  v21 = MEMORY[0x24BDAC7A8](v20);
  sub_23FAD6DA0(v21, v22, v23, v24, v25, v26, v27, v28, v85);
  sub_23F6916B8(&qword_256EA2588);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v29);
  v96 = (char *)&v85 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v31);
  v90 = (char *)&v85 - v32;
  v33 = sub_23F6D398C();
  Output = type metadata accessor for ContextProtoToolQueryOutput(v33);
  v99 = *(_QWORD *)(Output - 8);
  v100 = Output;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v35);
  v95 = (uint64_t)&v85 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v37);
  v94 = (uint64_t)&v85 - v38;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v39);
  v104 = (uint64_t)&v85 - v40;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F9231E0();
  MEMORY[0x24BDAC7A8](v42);
  v87 = (uint64_t)&v85 - v43;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v44);
  v86 = (uint64_t)&v85 - v45;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v46);
  v98 = (uint64_t)&v85 - v47;
  sub_23F6D398C();
  type metadata accessor for ToolQuery.Output();
  sub_23F70D9A8();
  MEMORY[0x24BDAC7A8](v48);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v49);
  sub_23F876D18();
  MEMORY[0x24BDAC7A8](v50);
  v89 = (char *)&v85 - v51;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v52);
  v88 = (char *)&v85 - v53;
  v54 = *(_QWORD *)(v16 + 16);
  sub_23FAD70C8(MEMORY[0x24BEE4AF8]);
  sub_23F711460();
  v91 = v16;
  v101 = v13;
  if (v54)
  {
    v55 = *(_QWORD *)(v16 + 16);
    v92 = v16 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v93 = v55;
    sub_23F77DCD4();
    v56 = 0;
    while (v93 != v56)
    {
      sub_23F6F5920(v92 + *(_QWORD *)(v13 + 72) * v56, v11, (uint64_t (*)(_QWORD))type metadata accessor for ToolQuery.Output);
      v57 = sub_23F7D260C();
      sub_23F6F5920(v57, v58, (uint64_t (*)(_QWORD))type metadata accessor for ToolQuery.Output);
      sub_23F6F531C(*(uint64_t (**)(uint64_t, uint64_t))(v102 + 16));
      v59 = (uint64_t)v96;
      sub_23FAD7488();
      if (v10)
      {
        sub_23F6D38A0(v12);
        sub_23F6B5908();
        sub_23F77DB70();
        sub_23F6D38A0(v11);
        sub_23F6B5908();
        goto LABEL_25;
      }
      sub_23FAD6B40();
      sub_23FAD6908(v59);
      sub_23F710E80(v59, v14, &qword_256EA2588);
      v60 = v95;
      sub_23FAD69D8(v14, v95);
      sub_23F6D3508(v12, (uint64_t (*)(_QWORD))type metadata accessor for ToolQuery.Output);
      v61 = v60;
      v62 = v94;
      sub_23FAD69D8(v61, v94);
      sub_23FAD69D8(v62, v104);
      v63 = sub_23F87781C();
      sub_23F6D3508(v63, v64);
      if ((sub_23F77D93C() & 1) == 0)
      {
        sub_23FAD6C58();
        v62 = a10;
      }
      v65 = *(_QWORD *)(v62 + 16);
      if (v65 >= *(_QWORD *)(v62 + 24) >> 1)
      {
        sub_23FAD6B80();
        v62 = a10;
      }
      ++v56;
      *(_QWORD *)(v62 + 16) = v65 + 1;
      sub_23FAD6728();
      sub_23F6F594C(v104, v66, type metadata accessor for ContextProtoToolQueryOutput);
      v13 = v101;
      if (v54 == v56)
        goto LABEL_12;
    }
    __break(1u);
    goto LABEL_27;
  }
  sub_23F77DCD4();
LABEL_12:
  v67 = *(_QWORD *)(v91 + 16);
  if (v54 != v67)
  {
    v69 = (uint64_t)v88;
    v68 = (uint64_t)v89;
    while (v54 < v67)
    {
      sub_23FAD6F9C();
      sub_23F77DA34(v70 + v71 * v54, v69);
      v72 = sub_23F6B6218();
      sub_23F77DA34(v72, v73);
      v74 = sub_23FAD6F0C();
      v75(v74);
      v76 = (uint64_t)v90;
      sub_23FAD7488();
      if (v10)
      {
        sub_23F6D38A0(v68);
        sub_23F6D38A0(v69);
        sub_23F6B6A48();
        sub_23F6B6A48();
        sub_23F77DA7C();
        goto LABEL_25;
      }
      sub_23FAD6B40();
      sub_23FAD6908(v76);
      sub_23F710E80(v76, v14, &qword_256EA2588);
      v77 = v87;
      sub_23F77DC08(v14, v87);
      sub_23F77DAB0(v68);
      v78 = v77;
      v79 = v86;
      sub_23F77DC08(v78, v86);
      sub_23F77DC08(v79, v98);
      v80 = sub_23F72E430();
      sub_23F6D3508(v80, v81);
      if ((sub_23F77D93C() & 1) == 0)
      {
        sub_23FAD6C58();
        v79 = a10;
      }
      v82 = *(_QWORD *)(v79 + 16);
      if (v82 >= *(_QWORD *)(v79 + 24) >> 1)
      {
        sub_23FAD6B80();
        v79 = a10;
      }
      ++v54;
      *(_QWORD *)(v79 + 16) = v82 + 1;
      sub_23FAD6E18();
      sub_23F6F594C(v83, v84, type metadata accessor for ContextProtoToolQueryOutput);
      v67 = *(_QWORD *)(v91 + 16);
      if (v54 == v67)
        goto LABEL_13;
    }
LABEL_27:
    __break(1u);
    return;
  }
LABEL_13:
  sub_23F6B6740();
LABEL_25:
  sub_23F77DB18();
  sub_23F6B5100();
}

void sub_23FACC97C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(_QWORD);
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;

  sub_23F6B5220();
  v118 = v0;
  v7 = v6;
  sub_23F6916B8(&qword_256EA6550);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B57F4(v9, v92);
  sub_23F6916B8(&qword_256EA2E00);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  v112 = (char *)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F6D398C();
  type metadata accessor for Expression(v12);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B5598(v14, v92);
  sub_23F6916B8(&qword_256EA8578);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  v110 = (char *)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23F6B58C8();
  v108 = *(_QWORD *)(v17 - 8);
  v109 = v17;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B51A4();
  v107 = v19;
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  v117 = (uint64_t)&v92 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_23F6D398C();
  v105 = type metadata accessor for TranscriptProtoProgramStatement(v22);
  v115 = *(_QWORD *)(v105 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v23);
  v104 = (uint64_t)&v92 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v25);
  v103 = (uint64_t)&v92 - v26;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v27);
  v102 = (uint64_t)&v92 - v28;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F6D3A70();
  MEMORY[0x24BDAC7A8](v30);
  v114 = (char *)&v92 - v31;
  v32 = sub_23F6D398C();
  v106 = type metadata accessor for ProgramStatement(v32);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F72E168();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F876D18();
  MEMORY[0x24BDAC7A8](v35);
  v94 = (char *)&v92 - v36;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F6B5314((uint64_t)&v92 - v38);
  v39 = *(_QWORD *)(v7 + 16);
  v119 = MEMORY[0x24BEE4AF8];
  sub_23FAD6860();
  sub_23F71149C();
  v95 = v7;
  if (v39)
  {
    sub_23FAD6830();
    v100 = v40;
    v101 = v41;
    sub_23F6B5508();
    v42 = 0;
    v97 = v39;
    v96 = v5;
    v98 = v1;
    v99 = v2;
    while (v101 != v42)
    {
      v43 = *(_QWORD *)(v5 + 72);
      v116 = v42;
      sub_23F77E534(v100 + v43 * v42, v2);
      sub_23F77E534(v2, v3);
      v44 = v3;
      v45 = v117;
      v46 = v107;
      v47 = v108;
      v48 = sub_23F6B6190();
      sub_23F77DB9C(v48, v49, v50);
      sub_23FB2C758();
      v51 = sub_23FAD72E4();
      v53 = v52;
      sub_23FAD69A0();
      sub_23FAD7164();
      sub_23F6F0CB4();
      *(_DWORD *)v45 = v4;
      *(_QWORD *)(v45 + 8) = v51;
      *(_QWORD *)(v45 + 16) = v53;
      sub_23F6B6178(v46, *(uint64_t (**)(uint64_t, uint64_t))(v47 + 8));
      sub_23F77E598(v45, 0);
      v54 = v106;
      sub_23F6F5920(v44 + *(int *)(v106 + 20), v111, type metadata accessor for Expression);
      v55 = (uint64_t)v110;
      TranscriptProtoExpression.init(handwritten:)();
      v56 = type metadata accessor for TranscriptProtoExpression(0);
      sub_23FAD6A98(v55, 0);
      sub_23F6B4F58(v44 + *(int *)(v54 + 24), v113, &qword_256EA6550);
      v57 = v118;
      sub_23F77C68C();
      v118 = v57;
      if (v57)
      {
        sub_23F6D38A0(v44);
        sub_23FAD6A14(v91, &qword_256EA8578);
        sub_23F6B4F84(v117, &qword_256EA25E0);
        sub_23F693E04();
        sub_23F77DB70();
        sub_23F6D38A0(v99);
        sub_23F693E04();
        goto LABEL_26;
      }
      v58 = v104;
      sub_23F77E598(v104, 1);
      v59 = v105;
      v60 = v58 + *(int *)(v105 + 20);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v60, 1, 1, v56);
      v61 = v58 + *(int *)(v59 + 24);
      v62 = sub_23FB2EB28();
      sub_23F6B5A8C(v61, v63, v64, v62);
      sub_23F6F0CB4();
      sub_23F6D3C1C(v58);
      sub_23FAD72C8(v117, v58);
      sub_23F6D3C1C(v60);
      v65 = sub_23F7F64A8();
      sub_23FAD72C8(v65, v66);
      sub_23F6D3748(v61);
      v67 = sub_23F6B6854();
      sub_23FAD6ADC(v67, v68);
      v69 = v58;
      v3 = v44;
      v70 = v103;
      sub_23F77E2AC(v69, v103);
      sub_23F77E330(v44);
      v71 = v70;
      v72 = v102;
      sub_23F77E2AC(v71, v102);
      v73 = v98;
      sub_23F77E2AC(v72, v98);
      v2 = v99;
      v74 = sub_23F7D260C();
      sub_23F6D3508(v74, v75);
      if ((sub_23F77D93C() & 1) == 0)
      {
        sub_23FAD6C28();
        v72 = v119;
      }
      v5 = v96;
      v39 = v97;
      v76 = v116;
      v78 = *(_QWORD *)(v72 + 16);
      v77 = *(_QWORD *)(v72 + 24);
      v4 = v78 + 1;
      if (v78 >= v77 >> 1)
      {
        sub_23F77DCA0(v77);
        sub_23F71149C();
        v72 = v119;
      }
      v42 = v76 + 1;
      *(_QWORD *)(v72 + 16) = v4;
      sub_23F6F594C(v73, v72+ ((*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80))+ *(_QWORD *)(v115 + 72) * v78, type metadata accessor for TranscriptProtoProgramStatement);
      if (v39 == v42)
        goto LABEL_12;
    }
    __break(1u);
    goto LABEL_28;
  }
  sub_23F6B5508();
LABEL_12:
  sub_23FAD72B4();
  if (!v80)
  {
    while (v39 < v79)
    {
      sub_23FAD6830();
      v82 = v93;
      sub_23F77DC78(v81 + *(_QWORD *)(v5 + 72) * v39, v93);
      sub_23F77DD9C();
      sub_23F77DC78(v83, v84);
      v85 = v118;
      TranscriptProtoProgramStatement.init(handwritten:)();
      v86 = v85;
      sub_23F6D3508(v82, type metadata accessor for ProgramStatement);
      v118 = v85;
      if (v85)
      {
        sub_23F693E04();
        sub_23F693E04();
        sub_23F77DA7C();
        goto LABEL_26;
      }
      if ((sub_23F77D93C() & 1) == 0)
      {
        sub_23FAD6C28();
        v86 = v119;
      }
      sub_23FAD705C();
      if (v88)
      {
        sub_23F77DA04(v87);
        sub_23F71149C();
        v86 = v119;
      }
      ++v39;
      *(_QWORD *)(v86 + 16) = v82;
      sub_23FAD66C0();
      sub_23F72E1E4(v89, v90);
      sub_23FAD72B4();
      if (v80)
        goto LABEL_14;
    }
LABEL_28:
    __break(1u);
    return;
  }
LABEL_14:
  sub_23F6B6740();
LABEL_26:
  sub_23F6B5100();
}

void sub_23FACCFE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;

  sub_23F6B5220();
  v13 = v12;
  type metadata accessor for TranscriptProtoASTExpr(0);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F878D94();
  v16 = *(_QWORD *)(v13 + 16);
  sub_23F77DA1C(MEMORY[0x24BEE4AF8]);
  sub_23F7114D8();
  v28 = v16;
  v29 = v13;
  if (v16)
  {
    v17 = *(_QWORD *)(v13 + 16);
    v18 = (unint64_t *)(v13 + 32);
    sub_23F77DCD4();
    v19 = v16;
    while (v17)
    {
      v30 = *v18;
      sub_23F6A3728(v30);
      TranscriptProtoASTExpr.init(handwritten:)(&v30);
      v20 = *(_QWORD *)(a10 + 16);
      if (v20 >= *(_QWORD *)(a10 + 24) >> 1)
        sub_23F7114D8();
      *(_QWORD *)(a10 + 16) = v20 + 1;
      sub_23FAD6E3C();
      sub_23F6F594C(v11, v21, type metadata accessor for TranscriptProtoASTExpr);
      ++v18;
      --v17;
      if (!--v19)
        goto LABEL_9;
    }
    __break(1u);
    goto LABEL_18;
  }
  sub_23F77DCD4();
LABEL_9:
  v22 = *(_QWORD *)(v29 + 16);
  v23 = v22 - v28;
  if (v22 == v28)
  {
LABEL_10:
    sub_23F6B6740();
    sub_23F6B5100();
    return;
  }
  if (v22 > v28)
  {
    v24 = (unint64_t *)(v29 + 8 * v28 + 32);
    do
    {
      v25 = *v24++;
      v30 = v25;
      sub_23F6A3728(v25);
      TranscriptProtoASTExpr.init(handwritten:)(&v30);
      v26 = *(_QWORD *)(a10 + 16);
      if (v26 >= *(_QWORD *)(a10 + 24) >> 1)
        sub_23F7114D8();
      *(_QWORD *)(a10 + 16) = v26 + 1;
      sub_23FAD6E3C();
      sub_23FAD69D8(v10, v27);
      --v23;
    }
    while (v23);
    goto LABEL_10;
  }
LABEL_18:
  __break(1u);
}

void sub_23FACD18C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t a1))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(char *, uint64_t);
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  BOOL v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  void (*v140)(uint64_t);
  void (*v141)(uint64_t);
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t (*v157)(uint64_t, uint64_t, uint64_t);
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  void (*v163)(uint64_t, char *, uint64_t);
  uint64_t v164;
  char *v165;
  uint64_t v166;
  _QWORD *v167;
  unsigned int v168;
  unint64_t v169;
  char v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  char v174;
  _QWORD *v175;
  char v176;
  unsigned int v177;
  unint64_t v178;
  char v179;
  _QWORD *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  void (**v199)(uint64_t);
  uint64_t v200;
  uint64_t v201;
  uint64_t (*v202)(uint64_t);
  uint64_t v203;
  char v204;
  uint64_t v205;
  unint64_t v206;
  unint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t (*v226)(uint64_t);
  uint64_t (*v227)(uint64_t);
  uint64_t *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t (**v231)(uint64_t);
  uint64_t v232;
  _QWORD *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  unint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t Data;
  uint64_t v244;
  uint64_t v245;
  uint64_t *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  _QWORD *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t (**v263)(uint64_t);
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  unint64_t v272;
  void (*v273)(char *, uint64_t);
  char *v274;
  char *v275;
  uint64_t v276;
  uint64_t v277;
  char *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  unsigned int v283;
  uint64_t v284;
  char *v285;
  uint64_t v286;
  uint64_t (*v287)(uint64_t, uint64_t, uint64_t);
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  void (*v291)(uint64_t);
  uint64_t v292;
  uint64_t v293;
  _QWORD *v294;
  _QWORD v295[2];
  uint64_t v296;
  _QWORD v297[3];

  sub_23F6B5220();
  v14 = v10;
  v16 = v15;
  v17 = sub_23F6B632C();
  v286 = *(_QWORD *)(v17 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v18);
  v285 = (char *)&v239 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v20);
  v278 = (char *)&v239 - v21;
  sub_23F6B5664();
  v23 = MEMORY[0x24BDAC7A8](v22);
  sub_23FAD6DB4(v23, v24, v25, v26, v27, v28, v29, v30, v239);
  v277 = sub_23F6916B8(&qword_256EA2708);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F693E0C();
  v276 = v32;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v33);
  v275 = (char *)&v239 - v34;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v35);
  v292 = (uint64_t)&v239 - v36;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v37);
  v274 = (char *)&v239 - v38;
  v269 = sub_23F6B58C8();
  v280 = *(_QWORD *)(v269 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F6B51A4();
  sub_23F6B5314(v40);
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F6B51A4();
  v253 = v42;
  v43 = sub_23F6D398C();
  v268 = type metadata accessor for TranscriptProtoActionParameterContext(v43);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v44);
  sub_23F693E0C();
  v252 = v45;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v46);
  sub_23F6B6580();
  v251 = v47;
  v48 = sub_23F6D398C();
  type metadata accessor for QueryData(v48);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v49);
  sub_23F693E0C();
  v250 = v50;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v51);
  sub_23F6B6580();
  sub_23F6B5314(v52);
  sub_23F6916B8(&qword_256EA85C0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v53);
  sub_23F693E0C();
  v254 = v54;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v55);
  v56 = sub_23F78F2D0();
  v249 = type metadata accessor for ActionParameterContext(v56);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v57);
  sub_23F6B51A4();
  sub_23F6B5314(v58);
  sub_23F6916B8(&qword_256EA85D0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v59);
  v256 = (uint64_t)&v239 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v61);
  sub_23F6B6580();
  v266 = v62;
  v63 = sub_23F6D398C();
  v260 = type metadata accessor for TranscriptProtoParameterQuery(v63);
  v259 = *(_QWORD *)(v260 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v64);
  sub_23F693E0C();
  v246 = (uint64_t *)v65;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v66);
  sub_23F6D3D14();
  v245 = v67;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v68);
  sub_23F6D3D14();
  v244 = v69;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v70);
  sub_23F6D3D14();
  v247 = v71;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v72);
  sub_23F6B6580();
  v263 = (uint64_t (**)(uint64_t))v73;
  v74 = sub_23F6D398C();
  v75 = type metadata accessor for ParameterQuery(v74);
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8](v76);
  sub_23F693E0C();
  v261 = v77;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v78);
  sub_23F6D3D14();
  v255 = v79;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v80);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v81);
  sub_23F6B6580();
  sub_23F6B5314(v82);
  v83 = *(_QWORD *)(v16 + 16);
  sub_23FAD70C8(MEMORY[0x24BEE4AF8]);
  sub_23F71158C();
  v262 = v16;
  v270 = v75;
  v258 = v12;
  v267 = v83;
  if (!v83)
  {
    sub_23F6B5508();
    goto LABEL_52;
  }
  v84 = *(_QWORD *)(v16 + 16);
  v85 = v16 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  sub_23F6B5508();
  v86 = 0;
  v242 = v11;
  v241 = v13;
  v289 = v17;
  v240 = v84;
  v239 = v85;
  do
  {
    if (v86 == v84)
      goto LABEL_69;
    sub_23F77E1C0();
    v257 = v87;
    sub_23F6F5920(v88, v89, type metadata accessor for ParameterQuery);
    v90 = v16;
    v91 = v261;
    sub_23F70D654(v90, v261);
    sub_23F77E1C0();
    sub_23F6F5920(v92, v93, type metadata accessor for ActionParameterContext);
    v94 = sub_23F924C14();
    v291 = v95;
    v95(v94);
    LODWORD(v293) = sub_23FB2C758();
    v96 = sub_23FB2C740();
    v98 = v97;
    sub_23FAD69A0();
    sub_23FAD7164();
    v99 = v253;
    sub_23FAD7240();
    *(_DWORD *)v99 = v293;
    *(_QWORD *)(v99 + 8) = v96;
    *(_QWORD *)(v99 + 16) = v98;
    v100 = sub_23F6B6854();
    v273 = v101;
    ((void (*)(uint64_t))v101)(v100);
    sub_23F77E598(v99, 0);
    v102 = v91;
    v103 = (uint64_t *)(v91 + *(int *)(v249 + 20));
    v105 = *v103;
    v104 = v103[1];
    v106 = (uint64_t *)(v102 + *(int *)(v249 + 24));
    v107 = v106[1];
    v293 = *v106;
    v108 = v268;
    v109 = v252;
    v110 = (uint64_t)v252 + *(int *)(v268 + 24);
    sub_23F77E598(v110, 1);
    sub_23F6B5508();
    sub_23F6B54F8();
    sub_23FAD7510();
    v111 = v261;
    sub_23F710E80(v99, v110, &qword_256EA25E0);
    *v109 = v105;
    v109[1] = v104;
    v109[2] = v293;
    v109[3] = v107;
    sub_23F77E1C0();
    sub_23F77DC98(v112, v113);
    sub_23F6D3508(v264, type metadata accessor for ActionParameterContext);
    v114 = v104;
    v115 = v256;
    sub_23F77DC98(v114, v256);
    v116 = v115;
    v117 = v270;
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v116, 0, 1, v108);
    sub_23FAD7400();
    sub_23F6F5920(v118, v119, type metadata accessor for QueryData);
    v120 = v254;
    TranscriptProtoQueryData.init(handwritten:)();
    if (v14)
    {
      sub_23F713FFC(v121, type metadata accessor for ParameterQuery);
LABEL_50:
      sub_23FAD6D48(&qword_256EA85D0, (uint64_t)&v287);
      sub_23F693E04();
      sub_23F77DB70();
      sub_23F77E0D4(type metadata accessor for ParameterQuery, (uint64_t)&v286);
      sub_23F693E04();
LABEL_54:
      sub_23F877A30();
      sub_23F6B5100();
      return;
    }
    ++v257;
    Data = type metadata accessor for TranscriptProtoQueryData(0);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v120, 0, 1, Data);
    v122 = *(_QWORD *)(v111 + *(int *)(v117 + 24));
    sub_23F6B5508();
    v123 = sub_23FB2F050();
    sub_23FAD736C(v295);
    v279 = v295[0];
    v271 = v295[1];
    v281 = v297[0];
    v124 = v297[1];
    v272 = (unint64_t)(v296 + 64) >> 6;
    v248 = v122;
    sub_23F6B5508();
    v125 = v269;
    while (1)
    {
      v290 = v123;
      if (v124)
      {
        v293 = v14;
        sub_23FAD714C();
        v127 = v126 | (v281 << 6);
        goto LABEL_25;
      }
      if (__OFADD__(v281, 1))
        goto LABEL_67;
      sub_23F878298();
      if (v128 == v129)
      {
        v293 = v14;
        v75 = v270;
        goto LABEL_43;
      }
      sub_23FAD6F38();
      v75 = v270;
      if (!v130)
      {
        sub_23FAD6944();
        if (v128 == v129)
          goto LABEL_42;
        sub_23F77DDD8();
        if (!v131)
        {
          sub_23FAD6944();
          if (v128 == v129)
            goto LABEL_42;
          sub_23F77DDD8();
          if (!v132)
          {
            sub_23FAD6944();
            if (v128 == v129)
              goto LABEL_42;
            sub_23F77DDD8();
            if (!v133)
            {
              sub_23FAD6944();
              if (v128 == v129)
                goto LABEL_42;
              sub_23F77DDD8();
              if (!v134)
              {
                sub_23F878298();
                if (v128 == v129)
                  goto LABEL_42;
                sub_23FAD6F38();
                if (!v187)
                  break;
              }
            }
          }
        }
      }
LABEL_24:
      v293 = v14;
      sub_23F6B5DC0();
      v281 = v135;
      v282 = v136;
      v127 = v137 + (v135 << 6);
      v125 = v269;
LABEL_25:
      v138 = v279;
      v139 = v274;
      v140 = v291;
      ((void (*)(char *, uint64_t, uint64_t))v291)(v274, *(_QWORD *)(v279 + 48) + *(_QWORD *)(v280 + 72) * v127, v125);
      v141 = v140;
      v142 = *(_QWORD *)(v138 + 56);
      v143 = sub_23F6B6634();
      v144 = *(_QWORD *)(v143 - 8);
      v145 = v142 + *(_QWORD *)(v144 + 72) * v127;
      v146 = v125;
      v147 = v277;
      v148 = (uint64_t)&v139[*(int *)(v277 + 48)];
      v287 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v144 + 16);
      sub_23F75E710(v148, v145, v287);
      v149 = (uint64_t)v139;
      v150 = v292;
      sub_23F6B4EC0(v149, v292, &qword_256EA2708);
      v151 = *(int *)(v147 + 48);
      v152 = v275;
      v153 = (uint64_t)&v275[v151];
      v154 = v150 + v151;
      v288 = v150 + v151;
      v155 = sub_23F6B619C();
      v141(v155);
      v156 = v154;
      v157 = v287;
      v287(v153, v156, v143);
      v283 = sub_23FB2C758();
      v273(v152, v146);
      (*(void (**)(uint64_t, uint64_t))(v144 + 8))(v153, v143);
      v158 = v276 + *(int *)(v147 + 48);
      v159 = sub_23FAD709C();
      v291(v159);
      v157(v158, v288, v143);
      v160 = v278;
      v161 = v293;
      sub_23FB2ED20();
      if (v161)
      {
        sub_23F7D2F30();
        sub_23FAD73E8();
        sub_23FAD7358();
        sub_23F6B4F84(v292, &qword_256EA2708);
        sub_23F77DE3C();
        sub_23FAD7044();
        sub_23F77E0D4(type metadata accessor for ParameterQuery, (uint64_t)&v293);
        sub_23FAD6D48(&qword_256EA85C0, (uint64_t)&v285);
        goto LABEL_50;
      }
      v293 = 0;
      sub_23F7D2F30();
      v162 = v286;
      v163 = *(void (**)(uint64_t, char *, uint64_t))(v286 + 32);
      v164 = v284;
      v165 = v160;
      v166 = v289;
      v163(v284, v165, v289);
      sub_23FAD73E8();
      (*(void (**)(char *, uint64_t, uint64_t))(v162 + 16))(v285, v164, v166);
      v167 = (_QWORD *)v290;
      sub_23F77D9A4();
      v294 = v167;
      v168 = v283;
      sub_23F78C718(v283);
      sub_23FAD6F64();
      if (__OFADD__(v171, v172))
      {
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
        goto LABEL_68;
      }
      v173 = v169;
      v174 = v170;
      v125 = v146;
      sub_23F6916B8(&qword_256EBEEB8);
      v175 = &v294;
      v176 = sub_23FB2F914();
      v177 = v168;
      v14 = v293;
      if ((v176 & 1) != 0)
      {
        v175 = v294;
        v178 = sub_23FAD7448();
        if ((v174 & 1) != (v179 & 1))
          goto LABEL_70;
        v173 = v178;
      }
      v180 = v294;
      if ((v174 & 1) != 0)
      {
        v181 = sub_23FAD7420();
        sub_23F77DB9C(v181, v182, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v175[5]);
      }
      else
      {
        sub_23FAD6D78((uint64_t)&v294[v173 >> 6]);
        *(_DWORD *)(v183 + 4 * v173) = v177;
        v184 = sub_23FAD7420();
        ((void (*)(uint64_t))v163)(v184);
        v185 = v180[2];
        v129 = __OFADD__(v185, 1);
        v186 = v185 + 1;
        if (v129)
          goto LABEL_66;
        v180[2] = v186;
      }
      v123 = (uint64_t)v294;
      sub_23FAD7094();
      sub_23F6B6178(v284, (uint64_t (*)(uint64_t, uint64_t))v175[1]);
      sub_23F6B4F84(v292, &qword_256EA2708);
      v124 = v282;
    }
    while (1)
    {
      sub_23F878298();
      if (v128 == v129)
        break;
      sub_23FAD713C();
      if (v188)
        goto LABEL_24;
    }
LABEL_42:
    v293 = v14;
LABEL_43:
    sub_23FAD7044();
    sub_23F77DE3C();
    v189 = v261;
    v190 = v261 + *(int *)(v75 + 28);
    v191 = *(_QWORD *)(v190 + 8);
    v291 = *(void (**)(uint64_t))v190;
    v192 = v260;
    v193 = v246;
    v194 = (uint64_t)v246 + *(int *)(v260 + 20);
    sub_23FAD6AB0(v194, 1);
    v195 = (uint64_t)v193 + *(int *)(v192 + 24);
    sub_23F693EC8();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v196, v197, v198, Data);
    v199 = (uint64_t *)((char *)v193 + *(int *)(v192 + 28));
    *v199 = 0;
    v199[1] = 0;
    sub_23F6B54F8();
    sub_23FAD7510();
    sub_23F6B4F84(v194, &qword_256EA85D0);
    sub_23F6B4EC0(v256, v194, &qword_256EA85D0);
    sub_23F6B64F4(v195);
    sub_23FAD73D8(v254, v195);
    *v193 = v290;
    swift_bridgeObjectRelease();
    *v199 = v291;
    v199[1] = v191;
    sub_23F77E1C0();
    sub_23FAD6D50(v200, v201);
    v202 = type metadata accessor for ParameterQuery;
    sub_23F6D38A0(v189);
    v203 = v244;
    sub_23FAD6D50((uint64_t)&qword_256EA85C0, v244);
    sub_23FAD6D50(v203, v247);
    sub_23F6D38A0(v255);
    if ((sub_23F77D93C() & 1) == 0)
    {
      sub_23FAD6CA0();
      v202 = a10;
    }
    v14 = v293;
    v11 = v242;
    v13 = v241;
    sub_23FAD69A8();
    if (v204)
    {
      sub_23FAD6BB0();
      v202 = a10;
    }
    *((_QWORD *)v202 + 2) = v203;
    sub_23FAD6840();
    sub_23F6F594C(v247, v205, type metadata accessor for TranscriptProtoParameterQuery);
    v86 = v257;
    v16 = v262;
    v84 = v240;
  }
  while (v257 != v267);
LABEL_52:
  v206 = *(_QWORD *)(v16 + 16);
  v207 = v267;
  if (v267 == v206)
  {
LABEL_53:
    sub_23F6B6740();
    goto LABEL_54;
  }
  while (v207 < v206)
  {
    sub_23FAD6830();
    sub_23F77DD9C();
    sub_23F77DC78(v208, v209);
    v210 = sub_23F7D24F0();
    sub_23F77DC78(v210, v211);
    sub_23FAD7400();
    sub_23F6F5920(v212, v213, type metadata accessor for ActionParameterContext);
    v214 = v266;
    TranscriptProtoActionParameterContext.init(handwritten:)();
    sub_23FAD6AB0(v214, 0);
    sub_23F77DD9C();
    sub_23F6F5920(v215, v216, type metadata accessor for QueryData);
    TranscriptProtoQueryData.init(handwritten:)();
    if (v14)
    {
      sub_23F72E404(v217, type metadata accessor for ParameterQuery);
      sub_23FAD6D48(&qword_256EA85D0, (uint64_t)v297);
      sub_23F77E0D4(type metadata accessor for ParameterQuery, (uint64_t)&v296);
      sub_23F693E04();
      swift_bridgeObjectRelease();
      sub_23F713F08();
      goto LABEL_54;
    }
    v267 = v207;
    type metadata accessor for TranscriptProtoQueryData(0);
    sub_23FAD6AA4(v11, 0);
    v218 = swift_bridgeObjectRetain();
    Dictionary<>.init(handwritten:)(v218, v219, v220, v221, v222, v223, v224, v225, v239, v240, v241, v242, Data, v244, v245, (uint64_t)v246, v247, v248, v249,
      v250);
    v227 = v226;
    v228 = (uint64_t *)(v13 + *(int *)(v75 + 28));
    v229 = v228[1];
    v292 = *v228;
    v293 = 0;
    v230 = v260;
    v231 = v263;
    v232 = (uint64_t)v263 + *(int *)(v260 + 20);
    sub_23FAD6AB0(v232, 1);
    sub_23FAD6AA4((uint64_t)v231 + *(int *)(v230 + 24), 1);
    v233 = (uint64_t (**)(uint64_t))((char *)v231 + *(int *)(v230 + 28));
    *v233 = 0;
    v233[1] = 0;
    sub_23F6B5508();
    sub_23FAD7510();
    sub_23F710E80(v266, v232, &qword_256EA85D0);
    v234 = sub_23F87781C();
    sub_23F710E80(v234, v235, &qword_256EA85C0);
    *v231 = v227;
    swift_bridgeObjectRelease();
    *v233 = v292;
    v233[1] = v229;
    sub_23F6D3928(v13);
    sub_23F6D3928(v265);
    if ((sub_23F77D93C() & 1) == 0)
    {
      sub_23FAD6CA0();
      v227 = a10;
    }
    v236 = v267;
    v237 = *((_QWORD *)v227 + 2);
    v75 = v270;
    if (v237 >= *((_QWORD *)v227 + 3) >> 1)
    {
      sub_23FAD6BB0();
      v227 = a10;
    }
    v207 = v236 + 1;
    *((_QWORD *)v227 + 2) = v237 + 1;
    sub_23FAD6728();
    sub_23F6F594C((uint64_t)v263, v238, type metadata accessor for TranscriptProtoParameterQuery);
    v206 = *(_QWORD *)(v262 + 16);
    v14 = v293;
    if (v207 == v206)
      goto LABEL_53;
  }
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  sub_23FB2FBD8();
  __break(1u);
}

void sub_23FACE154(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t (*v32)(uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, unint64_t, uint64_t);
  uint64_t (*v39)(uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  void (*v46)(char *, uint64_t);
  char *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;

  v2 = type metadata accessor for ContextProtoSampleInvocation(0);
  v61 = *(_QWORD *)(v2 - 8);
  v62 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v64 = (unint64_t)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v58 = (char *)&v51 - v6;
  MEMORY[0x24BDAC7A8](v5);
  v57 = (uint64_t)&v51 - v7;
  v59 = sub_23FB2DE38();
  v8 = *(_QWORD *)(v59 - 8);
  v9 = MEMORY[0x24BDAC7A8](v59);
  v56 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v60 = (char *)&v51 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v52 = (char *)&v51 - v13;
  v14 = *(_QWORD *)(a1 + 16);
  v65 = MEMORY[0x24BEE4AF8];
  sub_23F7115C8();
  v53 = a1;
  if (v14)
  {
    v15 = *(_QWORD *)(a1 + 16);
    v54 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v55 = v15;
    swift_bridgeObjectRetain();
    v16 = 0;
    v63 = v8;
    v17 = v59;
    v18 = v60;
    v19 = (uint64_t)v58;
    while (v55 != v16)
    {
      v20 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
      v20(v18, v54 + *(_QWORD *)(v8 + 72) * v16, v17);
      v21 = v56;
      v20(v56, (uint64_t)v18, v17);
      v22 = sub_23FB2DE20();
      v24 = v23;
      sub_23FB2DE2C();
      v26 = v25;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(_QWORD *)v19 = v22;
      *(_QWORD *)(v19 + 8) = v24;
      *(_DWORD *)(v19 + 16) = v26;
      v27 = *(void (**)(char *, uint64_t))(v63 + 8);
      v27(v21, v17);
      sub_23F6F594C(v19, v64, type metadata accessor for ContextProtoSampleInvocation);
      v27(v18, v17);
      v28 = v65;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F7115C8();
        v28 = v65;
      }
      v29 = *(_QWORD *)(v28 + 16);
      if (v29 >= *(_QWORD *)(v28 + 24) >> 1)
      {
        sub_23F7115C8();
        v28 = v65;
      }
      ++v16;
      *(_QWORD *)(v28 + 16) = v29 + 1;
      sub_23F6F594C(v64, v28+ ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))+ *(_QWORD *)(v61 + 72) * v29, type metadata accessor for ContextProtoSampleInvocation);
      v8 = v63;
      if (v14 == v16)
        goto LABEL_11;
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_11:
    v30 = v53;
    v31 = *(_QWORD *)(v53 + 16);
    if (v14 == v31)
    {
LABEL_12:
      swift_bridgeObjectRelease_n();
      return;
    }
    v32 = type metadata accessor for ContextProtoSampleInvocation;
    v33 = v52;
    v34 = (uint64_t)v58;
    v35 = v59;
    while (v14 < v31)
    {
      v36 = v30 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
      v37 = *(_QWORD *)(v8 + 72);
      v64 = v14;
      v38 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      v38(v33, v36 + v37 * v14, v35);
      v39 = v32;
      v40 = v60;
      v38(v60, (unint64_t)v33, v35);
      v41 = sub_23FB2DE20();
      v43 = v42;
      sub_23FB2DE2C();
      v45 = v44;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(_QWORD *)v34 = v41;
      *(_QWORD *)(v34 + 8) = v43;
      *(_DWORD *)(v34 + 16) = v45;
      v46 = *(void (**)(char *, uint64_t))(v8 + 8);
      v47 = v40;
      v32 = v39;
      v46(v47, v35);
      sub_23F6F594C(v34, v57, v39);
      v46(v33, v35);
      v48 = v65;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F7115C8();
        v48 = v65;
      }
      v49 = *(_QWORD *)(v48 + 16);
      v50 = v64;
      if (v49 >= *(_QWORD *)(v48 + 24) >> 1)
      {
        sub_23F7115C8();
        v48 = v65;
      }
      v14 = v50 + 1;
      *(_QWORD *)(v48 + 16) = v49 + 1;
      sub_23F6F594C(v57, v48+ ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))+ *(_QWORD *)(v61 + 72) * v49, v32);
      v30 = v53;
      v31 = *(_QWORD *)(v53 + 16);
      if (v14 == v31)
        goto LABEL_12;
    }
  }
  __break(1u);
}

void sub_23FACE5CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  sub_23F6B5220();
  v16 = v15;
  sub_23FAD7508();
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v17);
  v52 = (uint64_t)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v19);
  v50 = (uint64_t)&v45 - v20;
  v21 = sub_23F6D398C();
  type metadata accessor for AST.FlatValue(v21);
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F72E2B0();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F72E168();
  MEMORY[0x24BDAC7A8](v24);
  v47 = (uint64_t)&v45 - v25;
  v26 = *(_QWORD *)(v16 + 16);
  sub_23F77DA1C(MEMORY[0x24BEE4AF8]);
  sub_23F71167C();
  v51 = v13;
  v45 = v11;
  v46 = v16;
  if (v26)
  {
    sub_23F77E348();
    v48 = v27;
    v49 = v28;
    sub_23F6B6548();
    v29 = 0;
    while (v49 != v29)
    {
      sub_23F6F5920(v48 + *(_QWORD *)(v13 + 72) * v29, v12, type metadata accessor for AST.FlatValue);
      sub_23F6F5920(v12, v14, type metadata accessor for AST.FlatValue);
      TranscriptProtoASTFlatValue.init(handwritten:)();
      sub_23F6D3928(v12);
      if ((sub_23F77D93C() & 1) == 0)
      {
        sub_23FAD6CE8();
        v10 = a10;
      }
      v31 = *(_QWORD *)(v10 + 16);
      v30 = *(_QWORD *)(v10 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_23F77DA64(v30);
        sub_23F71167C();
        v10 = a10;
      }
      ++v29;
      *(_QWORD *)(v10 + 16) = v31 + 1;
      sub_23FAD701C();
      sub_23F6F594C(v52, v32 + v33 * v31, type metadata accessor for TranscriptProtoASTFlatValue);
      v13 = v51;
      if (v26 == v29)
        goto LABEL_11;
    }
    __break(1u);
  }
  else
  {
    v10 = a10;
    sub_23F6B6548();
LABEL_11:
    v34 = v46;
    v35 = *(_QWORD *)(v46 + 16);
    if (v26 == v35)
    {
LABEL_12:
      sub_23F6B6740();
      sub_23F6B5100();
      return;
    }
    while (v26 < v35)
    {
      sub_23FAD69B8();
      v38 = v47;
      sub_23F78F5C8(v34 + v36 + *(_QWORD *)(v37 + 72) * v26, v47);
      v39 = sub_23F7D2F98();
      sub_23F78F5C8(v39, v40);
      TranscriptProtoASTFlatValue.init(handwritten:)();
      sub_23F6D3508(v38, type metadata accessor for AST.FlatValue);
      if ((sub_23F77D93C() & 1) == 0)
      {
        sub_23FAD6CE8();
        v10 = a10;
      }
      v42 = *(_QWORD *)(v10 + 16);
      v41 = *(_QWORD *)(v10 + 24);
      if (v42 >= v41 >> 1)
      {
        sub_23F77E294(v41);
        sub_23F71167C();
        v10 = a10;
      }
      ++v26;
      *(_QWORD *)(v10 + 16) = v42 + 1;
      sub_23FAD701C();
      sub_23F6F594C(v50, v43 + v44 * v42, type metadata accessor for TranscriptProtoASTFlatValue);
      v35 = *(_QWORD *)(v34 + 16);
      if (v26 == v35)
        goto LABEL_12;
    }
  }
  __break(1u);
}

void sub_23FACE860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t updated;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t (*v103)(uint64_t);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t (*v137)(uint64_t);

  sub_23F6B5220();
  v3 = v0;
  v5 = v4;
  type metadata accessor for AST.FlatValue(0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B57BC(v7, v108);
  sub_23F6916B8(&qword_256EA84E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  v122 = (char *)&v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v10);
  v121 = (char *)&v108 - v11;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v12);
  v113 = (char *)&v108 - v13;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v14);
  v112 = (char *)&v108 - v15;
  v16 = sub_23F6D398C();
  updated = type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant(v16);
  v128 = *(_QWORD *)(updated - 8);
  v129 = updated;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v18);
  v120 = (uint64_t)&v108 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v20);
  v119 = (uint64_t)&v108 - v21;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F72E168();
  MEMORY[0x24BDAC7A8](v23);
  v125 = (char *)&v108 - v24;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v25);
  v111 = (uint64_t)&v108 - v26;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v27);
  v110 = (uint64_t)&v108 - v28;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v29);
  v124 = (uint64_t)&v108 - v30;
  v31 = sub_23F6D398C();
  v127 = type metadata accessor for AST.Update(v31);
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v32);
  v118 = (uint64_t)&v108 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v34);
  v134 = (uint64_t)&v108 - v35;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v36);
  v109 = (uint64_t)&v108 - v37;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v38);
  v123 = (uint64_t)&v108 - v39;
  v40 = *(_QWORD *)(v5 + 16);
  v137 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE4AF8];
  sub_23FAD6860();
  sub_23F7116B8();
  v114 = v5;
  v126 = v1;
  if (v40)
  {
    v117 = *(_QWORD *)(v5 + 16);
    v115 = v5 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    sub_23F6B5508();
    v41 = 0;
    v42 = type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant;
    v135 = v40;
    v116 = v2;
    while (v117 != v41)
    {
      v43 = *(_QWORD *)(v1 + 72);
      v133 = v41;
      v44 = v134;
      sub_23F70D654(v115 + v43 * v41, v134);
      v45 = v118;
      sub_23F70D654(v44, v118);
      v46 = v130;
      sub_23F78F5C8(v45, v130);
      v47 = (uint64_t)v121;
      sub_23FAD7084();
      v48 = sub_23FAD7508();
      sub_23F924034(v47);
      v49 = v127;
      v50 = swift_bridgeObjectRetain();
      sub_23FACE5CC(v50, v51, v52, v53, v54, v55, v56, v57, v108, v109);
      v132 = v58;
      v136 = v3;
      sub_23F78F5C8(v45 + *(int *)(v49 + 28), v46);
      v59 = (uint64_t)v122;
      sub_23FAD7084();
      sub_23F924034(v59);
      v131 = *(unsigned __int8 *)(v45 + *(int *)(v49 + 24));
      v60 = v129;
      v61 = (uint64_t)v125;
      v62 = v42;
      v63 = (uint64_t)&v125[*(int *)(v129 + 24)];
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v63, 1, 1, v48);
      v64 = v61 + *(int *)(v60 + 28);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v64, 1, 1, v48);
      sub_23FAC3CEC();
      sub_23F6D3748(v63);
      v65 = v63;
      v42 = v62;
      sub_23FAD6ADC(v47, v65);
      *(_QWORD *)v61 = v132;
      sub_23F6D3748(v64);
      v66 = v59;
      v67 = v116;
      sub_23FAD6ADC(v66, v64);
      *(_BYTE *)(v61 + 8) = v131;
      v68 = v120;
      sub_23F72E1E4(v61, v120);
      v69 = type metadata accessor for AST.Update;
      sub_23F6D38A0(v45);
      v70 = v68;
      v71 = v119;
      sub_23F72E1E4(v70, v119);
      sub_23F72E1E4(v71, v67);
      sub_23F6D38A0(v134);
      if ((sub_23F77D93C() & 1) == 0)
      {
        sub_23FAD6C40();
        v69 = v137;
      }
      v40 = v135;
      v3 = v136;
      sub_23FAD704C();
      v1 = v126;
      v72 = v133;
      if (v73)
      {
        sub_23FAD6B68();
        v69 = v137;
      }
      v41 = v72 + 1;
      *((_QWORD *)v69 + 2) = v47;
      sub_23FAD66C0();
      sub_23F6F594C(v67, v74, v42);
      if (v40 == v41)
        goto LABEL_11;
    }
    __break(1u);
  }
  else
  {
    sub_23F6B5508();
LABEL_11:
    v75 = v114;
    v76 = *(_QWORD *)(v114 + 16);
    if (v40 == v76)
    {
LABEL_12:
      sub_23F6B6740();
      sub_23F6B5100();
      return;
    }
    v77 = (uint64_t)v113;
    while (v40 < v76)
    {
      v78 = v75 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
      v79 = *(_QWORD *)(v1 + 72);
      v135 = v40;
      v80 = v123;
      sub_23F70D654(v78 + v79 * v40, v123);
      v81 = v109;
      sub_23F70D654(v80, v109);
      v82 = v130;
      sub_23F6F5920(v81, v130, type metadata accessor for AST.FlatValue);
      v83 = (uint64_t)v112;
      sub_23FAD7084();
      v84 = sub_23FAD7508();
      sub_23F924034(v83);
      v85 = v127;
      v86 = swift_bridgeObjectRetain();
      sub_23FACE5CC(v86, v87, v88, v89, v90, v91, v92, v93, v108, v109);
      v134 = v94;
      v136 = v3;
      sub_23F6F5920(v81 + *(int *)(v85 + 28), v82, type metadata accessor for AST.FlatValue);
      sub_23FAD7084();
      sub_23F924034(v77);
      LOBYTE(v82) = *(_BYTE *)(v81 + *(int *)(v85 + 24));
      v95 = v129;
      v96 = (uint64_t)v125;
      v97 = (uint64_t)&v125[*(int *)(v129 + 24)];
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v97, 1, 1, v84);
      v98 = v96 + *(int *)(v95 + 28);
      v99 = sub_23FAD6A04();
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v99, v100, v101, v84);
      sub_23FAC3DD4();
      sub_23F6D3748(v97);
      sub_23FAD6ADC(v83, v97);
      *(_QWORD *)v96 = v134;
      sub_23F6D3748(v98);
      sub_23FAD6ADC(v77, v98);
      *(_BYTE *)(v96 + 8) = v82;
      v102 = v111;
      sub_23FAD69D8(v96, v111);
      v103 = type metadata accessor for AST.Update;
      sub_23F6D38A0(v81);
      v104 = v102;
      v105 = v110;
      sub_23FAD69D8(v104, v110);
      sub_23FAD69D8(v105, v124);
      sub_23F6D38A0(v123);
      if ((sub_23F77D93C() & 1) == 0)
      {
        sub_23FAD6C40();
        v103 = v137;
      }
      sub_23FAD704C();
      v75 = v114;
      v1 = v126;
      v106 = v135;
      v3 = v136;
      if (v73)
      {
        sub_23FAD6B68();
        v103 = v137;
      }
      v40 = v106 + 1;
      *((_QWORD *)v103 + 2) = v96;
      sub_23FAD66C0();
      sub_23FAD69D8(v124, v107);
      v76 = *(_QWORD *)(v75 + 16);
      if (v40 == v76)
        goto LABEL_12;
    }
  }
  __break(1u);
}

void sub_23FACEF30()
{
  sub_23FAD0AE0();
}

void sub_23FACEF64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t a1))
{
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  char v96;
  BOOL v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void (*v112)(uint64_t, char *, uint64_t);
  void (*v113)(uint64_t, char *, uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t (*v118)(uint64_t, uint64_t);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void (*v122)(uint64_t, uint64_t, uint64_t);
  uint64_t v123;
  uint64_t *v124;
  void (*v125)(uint64_t, unint64_t, uint64_t);
  unint64_t v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  char v131;
  unint64_t v132;
  char v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  int v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t (*v148)(uint64_t);
  uint64_t v149;
  uint64_t v150;
  char v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t *v159;
  char *v160;
  uint64_t *v161;
  uint64_t v162;
  uint64_t v163;
  void (*v164)(uint64_t, uint64_t, uint64_t);
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  _QWORD *v181;
  uint64_t v182;
  void (*v183)(uint64_t, uint64_t, uint64_t);
  uint64_t v184;
  void (*v185)(uint64_t);
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  char *v194;
  void (*v195)(uint64_t, uint64_t, uint64_t);
  void (*v196)(uint64_t);
  uint64_t v197;
  uint64_t v198;
  void (*v199)(uint64_t);
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  void (*v206)(uint64_t, uint64_t, uint64_t);
  int v207;
  unint64_t v208;
  char v209;
  uint64_t v210;
  uint64_t v211;
  unint64_t v212;
  char v213;
  unint64_t v214;
  char v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  unint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  unint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t (*v270)(uint64_t, uint64_t);
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t *v278;
  uint64_t v279;
  uint64_t v280;
  void (*v281)(uint64_t, uint64_t, uint64_t);
  uint64_t v282;
  unint64_t v283;
  uint64_t v284;
  void (*v285)(uint64_t, uint64_t, uint64_t);
  uint64_t v286;
  char *v287;
  uint64_t v288;
  void (*v289)(uint64_t, unint64_t, uint64_t);
  void (*v290)(uint64_t, uint64_t, uint64_t);
  void (*v291)(uint64_t, char *, uint64_t);
  uint64_t v292;
  uint64_t v293;
  _QWORD v294[5];
  uint64_t v295;
  _QWORD v296[5];

  sub_23F6B5220();
  v292 = v10;
  v16 = v15;
  v277 = sub_23F6916B8(&qword_256EA2708);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  v273 = (uint64_t)&v235 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v19);
  v291 = (void (*)(uint64_t, char *, uint64_t))((char *)&v235 - v20);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6D3D14();
  v272 = v22;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F6D3D14();
  v263 = v24;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v25);
  v276 = (uint64_t)&v235 - v26;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F6D3D14();
  v268 = v28;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F6B6580();
  v262 = v30;
  v31 = sub_23F6B632C();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v32);
  v286 = (uint64_t)&v235 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F6D3D14();
  v271 = v35;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v36);
  v285 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&v235 - v37);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F72E2B0();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F6D3D14();
  v266 = v40;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F6D3D14();
  v261 = v42;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v43);
  sub_23F6D3D14();
  v265 = v44;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F6B6580();
  v241 = v46;
  v279 = sub_23F6B6634();
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v47);
  sub_23F693E0C();
  v255 = v48;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v49);
  sub_23F6B6580();
  sub_23F6B5314(v50);
  sub_23F6916B8(&qword_256EA2610);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v51);
  sub_23F693E0C();
  v258 = v52;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v53);
  sub_23F6B6580();
  v249 = v54;
  v55 = sub_23F6D398C();
  v247 = type metadata accessor for TranscriptProtoVariableSetter(v55);
  v246 = *(_QWORD *)(v247 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v56);
  sub_23F693E0C();
  v243 = v57;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v58);
  sub_23F6D3D14();
  v242 = v59;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v60);
  sub_23F6D3D14();
  v253 = v61;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v62);
  sub_23F6D3D14();
  v245 = v63;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v64);
  sub_23F6D3D14();
  v237 = v65;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v66);
  sub_23F6D3D14();
  v236 = v67;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v68);
  sub_23F6B6580();
  v238 = v69;
  v70 = sub_23F6D398C();
  v257 = type metadata accessor for VariableSetter(v70);
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v71);
  v259 = (uint64_t)&v235 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v73);
  sub_23F6D3D14();
  v260 = v74;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v75);
  sub_23F6D3D14();
  v250 = (uint64_t *)v76;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v77);
  sub_23F6B6580();
  sub_23F6B5314(v78);
  v79 = *(_QWORD *)(v16 + 16);
  sub_23F77DA1C(MEMORY[0x24BEE4AF8]);
  sub_23F71176C();
  v275 = v31;
  v282 = v13;
  v278 = v11;
  if (!v79)
  {
    v148 = a10;
    v153 = sub_23F6B5508();
    goto LABEL_51;
  }
  v10 = *(_QWORD *)(v16 + 16);
  sub_23FAD6830();
  v251 = v80;
  sub_23F6B5508();
  v81 = 0;
  v269 = v14;
  v256 = v16;
  v239 = v12;
  v244 = v79;
  v235 = v10;
LABEL_3:
  if (v81 == v10)
    goto LABEL_110;
  sub_23F77E1C0();
  v83 = v82;
  sub_23F6F5920(v84, v85, type metadata accessor for VariableSetter);
  sub_23FAD7400();
  sub_23F70D654(v86, v87);
  v88 = (uint64_t)v11 + *(int *)(v257 + 20);
  v89 = v278;
  v290 = (void (*)(uint64_t, uint64_t, uint64_t))v278[2];
  v290(v255, v88, v279);
  sub_23FAD7004();
  if (v10)
  {
    v233 = sub_23F70D66C((uint64_t (*)(uint64_t, uint64_t))v89[1]);
    sub_23F77DD2C(v233, type metadata accessor for VariableSetter);
    goto LABEL_49;
  }
  v240 = v83 + 1;
  v270 = (uint64_t (*)(uint64_t, uint64_t))v89[1];
  sub_23F70D66C(v270);
  v90 = v258;
  v281 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32);
  v281(v258, v14, v31);
  sub_23F878CF4(v90);
  v91 = *v11;
  sub_23F6B5508();
  v92 = sub_23FB2F050();
  sub_23FAD736C(&v295);
  v274 = v295;
  v264 = v296[0];
  v280 = v296[2];
  v93 = v296[3];
  v267 = (unint64_t)(v296[1] + 64) >> 6;
  v254 = v91;
  sub_23F6B5508();
  while (1)
  {
    v289 = (void (*)(uint64_t, unint64_t, uint64_t))v92;
    if (v93)
    {
      v292 = 0;
      v94 = __clz(__rbit64(v93));
      v93 &= v93 - 1;
      v283 = v93;
      v95 = v94 | (v280 << 6);
      goto LABEL_25;
    }
    if (__OFADD__(v280, 1))
      goto LABEL_106;
    sub_23F878298();
    if (v96 == v97)
      goto LABEL_42;
    sub_23FAD6F38();
    if (!v98)
    {
      sub_23FAD6944();
      if (v96 == v97)
        goto LABEL_42;
      sub_23F77DDD8();
      if (!v99)
      {
        sub_23FAD6944();
        if (v96 == v97)
          goto LABEL_42;
        sub_23F77DDD8();
        if (!v100)
        {
          sub_23FAD6944();
          if (v96 == v97)
            goto LABEL_42;
          sub_23F77DDD8();
          if (!v101)
          {
            sub_23FAD6944();
            if (v96 == v97)
              goto LABEL_42;
            sub_23F77DDD8();
            if (!v102)
            {
              sub_23F878298();
              if (v96 == v97)
                goto LABEL_42;
              sub_23FAD6F38();
              if (!v140)
              {
                while (1)
                {
                  sub_23F878298();
                  if (v96 == v97)
                    break;
                  sub_23FAD713C();
                  if (v141)
                    goto LABEL_24;
                }
LABEL_42:
                sub_23FAD72D0();
                sub_23F77DE3C();
                sub_23FAD71F8();
                v143 = *(uint64_t **)(v142 - 256);
                v145 = (uint64_t)v143 + v144;
                sub_23FAD7380();
                sub_23FAC3044();
                sub_23F6D3748(v145);
                sub_23FAD6ADC(v258, v145);
                *v143 = v92;
                sub_23F77E1C0();
                sub_23F72E1E4(v146, v147);
                v148 = type metadata accessor for VariableSetter;
                sub_23F6D38A0(v259);
                sub_23F77E1C0();
                sub_23F72E1E4(v149, v150);
                sub_23F72E1E4(v145, v253);
                sub_23F6D38A0(v260);
                if ((sub_23F77D93C() & 1) == 0)
                {
                  sub_23FAD6D00();
                  v148 = a10;
                }
                sub_23FAD69A8();
                if (v151)
                {
                  sub_23FAD6BC8();
                  v148 = a10;
                }
                *((_QWORD *)v148 + 2) = v145;
                sub_23FAD6840();
                sub_23F6F594C(v253, v152, type metadata accessor for TranscriptProtoVariableSetter);
                v79 = v244;
                v81 = v240;
                v292 = 0;
                v153 = v256;
                v12 = v239;
                v10 = v235;
                if (v240 == v244)
                {
LABEL_51:
                  v154 = *(_QWORD *)(v153 + 16);
                  v155 = v248;
                  if (v79 == v154)
                    goto LABEL_52;
                  v256 = v153;
                  v239 = v12;
                  while (1)
                  {
                    if (v79 >= v154)
                      goto LABEL_111;
                    sub_23FAD706C();
                    sub_23F77DD9C();
                    v156 = v79;
                    sub_23F6F5920(v157, v158, type metadata accessor for VariableSetter);
                    v159 = v250;
                    sub_23F77DA34((uint64_t)v148, (uint64_t)v250);
                    v160 = (char *)v159 + *(int *)(v257 + 20);
                    v161 = v278;
                    v291 = (void (*)(uint64_t, char *, uint64_t))v278[2];
                    v291(v155, v160, v279);
                    v162 = v241;
                    sub_23FAD7004();
                    if (v10)
                    {
                      v234 = sub_23F70D66C((uint64_t (*)(uint64_t, uint64_t))v161[1]);
                      sub_23F72E404(v234, type metadata accessor for VariableSetter);
LABEL_100:
                      sub_23F77E0D4(type metadata accessor for VariableSetter, (uint64_t)&v284);
                      sub_23F693DFC();
                      sub_23F693DFC();
                      sub_23F713F08();
LABEL_101:
                      sub_23F6B5100();
                      return;
                    }
                    v292 = 0;
                    v244 = v156 + 1;
                    v163 = sub_23F6B6190();
                    v281 = v164;
                    ((void (*)(uint64_t))v164)(v163);
                    v165 = v249;
                    v285 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32);
                    v285(v249, v162, v31);
                    sub_23F878CF4(v165);
                    v166 = *v159;
                    sub_23F6B5508();
                    v167 = sub_23FB2F050();
                    sub_23FAD736C(v294);
                    v283 = v294[0];
                    v274 = v294[1];
                    v284 = v294[3];
                    v10 = v294[4];
                    sub_23FAD7234((unint64_t)(v294[2] + 64) >> 6);
                    v273 = v166;
                    sub_23F6B5508();
                    while (1)
                    {
                      v290 = (void (*)(uint64_t, uint64_t, uint64_t))v167;
                      if (v10)
                      {
                        sub_23FAD714C();
                        v169 = v168 | (v284 << 6);
                        goto LABEL_76;
                      }
                      if (__OFADD__(v284, 1))
                        goto LABEL_109;
                      sub_23F878298();
                      if (v96 == v97)
                        goto LABEL_93;
                      sub_23FAD6F38();
                      if (!v170)
                      {
                        sub_23FAD6944();
                        if (v96 == v97)
                          goto LABEL_93;
                        sub_23F77DDD8();
                        if (!v171)
                        {
                          sub_23FAD6944();
                          if (v96 == v97)
                            goto LABEL_93;
                          sub_23F77DDD8();
                          if (!v172)
                          {
                            sub_23FAD6944();
                            if (v96 == v97)
                              goto LABEL_93;
                            sub_23F77DDD8();
                            if (!v173)
                            {
                              sub_23FAD6944();
                              if (v96 == v97)
                                goto LABEL_93;
                              sub_23F77DDD8();
                              if (!v174)
                              {
                                sub_23F878298();
                                if (v96 == v97)
                                  goto LABEL_93;
                                sub_23FAD6F38();
                                if (!v222)
                                  break;
                              }
                            }
                          }
                        }
                      }
LABEL_75:
                      sub_23F6B5DC0();
                      v286 = v175;
                      v169 = v177 + (v176 << 6);
                      v284 = v176;
LABEL_76:
                      v178 = v283;
                      v179 = *(_QWORD *)(v283 + 48);
                      v180 = sub_23F6B58C8();
                      v181 = *(_QWORD **)(v180 - 8);
                      v182 = v179 + v181[9] * v169;
                      v183 = (void (*)(uint64_t, uint64_t, uint64_t))v181[2];
                      v184 = v262;
                      v183(v262, v182, v180);
                      v185 = (void (*)(uint64_t))v183;
                      v289 = (void (*)(uint64_t, unint64_t, uint64_t))v183;
                      sub_23FAD7280();
                      v13 = *(_QWORD *)(v186 - 256);
                      v187 = v279;
                      ((void (*)(uint64_t))v291)(v184 + *(int *)(v13 + 48));
                      sub_23FAD7400();
                      sub_23F6B4EC0(v188, v189, &qword_256EA2708);
                      v190 = *(int *)(v13 + 48);
                      v191 = v276 + v190;
                      v192 = (char *)(v178 + v190);
                      v288 = v178 + v190;
                      v193 = sub_23F6B619C();
                      v185(v193);
                      v194 = v192;
                      v195 = (void (*)(uint64_t, uint64_t, uint64_t))v291;
                      v291(v191, v194, v187);
                      LODWORD(v287) = sub_23FB2C758();
                      v196 = (void (*)(uint64_t))v181[1];
                      v197 = sub_23F7D24F0();
                      v196(v197);
                      v198 = sub_23F7D2F98();
                      v199 = (void (*)(uint64_t))v281;
                      ((void (*)(uint64_t))v281)(v198);
                      v200 = v263 + *(int *)(v13 + 48);
                      v289(v263, v178, v180);
                      v195(v200, v288, v187);
                      sub_23FAD7004();
                      v292 = v10;
                      v201 = sub_23FAD6F0C();
                      if (v10)
                      {
                        v199(v201);
                        sub_23FAD73A4();
                        swift_bridgeObjectRelease();
                        sub_23FAD6D48(&qword_256EA2708, (uint64_t)v296);
                        sub_23F77DE3C();
                        sub_23FAD7044();
                        sub_23F77E0D4(type metadata accessor for VariableSetter, (uint64_t)&v282);
                        sub_23FAD6D48(&qword_256EA2610, (uint64_t)&v281);
                        goto LABEL_100;
                      }
                      v199(v201);
                      v202 = v265;
                      v203 = sub_23F6B619C();
                      v31 = v275;
                      sub_23FAD7294(v203, v204);
                      sub_23FAD73A4();
                      sub_23FAD7248();
                      sub_23F77DD54(v266, v202, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v205 + 16));
                      v206 = v290;
                      sub_23F77D9A4();
                      v293 = (uint64_t)v206;
                      v207 = (int)v287;
                      sub_23FAD7448();
                      sub_23FAD6F64();
                      if (__OFADD__(v210, v211))
                        goto LABEL_107;
                      v212 = v208;
                      v213 = v209;
                      sub_23F6916B8(&qword_256EBEEB8);
                      if ((sub_23FB2F914() & 1) != 0)
                      {
                        v214 = sub_23FAD7448();
                        if ((v213 & 1) != (v215 & 1))
                          goto LABEL_112;
                        v212 = v214;
                      }
                      v216 = v293;
                      if ((v213 & 1) != 0)
                      {
                        v217 = sub_23FAD70F8();
                        sub_23F77DD54(v217, v266, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 40));
                      }
                      else
                      {
                        sub_23FAD6D78(v293 + 8 * (v212 >> 6));
                        *(_DWORD *)(v218 + 4 * v212) = v207;
                        v219 = sub_23FAD70F8();
                        sub_23FAD7294(v219, v266);
                        v220 = *(_QWORD *)(v216 + 16);
                        v97 = __OFADD__(v220, 1);
                        v221 = v220 + 1;
                        if (v97)
                          goto LABEL_108;
                        *(_QWORD *)(v216 + 16) = v221;
                      }
                      v167 = v293;
                      sub_23FAD7094();
                      sub_23F6B563C(v265, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
                      sub_23F6B4F84(v268, &qword_256EA2708);
                      v10 = v286;
                    }
                    while (1)
                    {
                      sub_23F878298();
                      if (v96 == v97)
                        break;
                      sub_23FAD713C();
                      if (v223)
                        goto LABEL_75;
                    }
LABEL_93:
                    sub_23FAD7044();
                    sub_23F77DE3C();
                    sub_23FAD71F8();
                    v225 = *(uint64_t **)(v224 - 256);
                    v227 = (uint64_t)v225 + v226;
                    sub_23FAD7380();
                    sub_23F6F0BB0();
                    sub_23F6D3748(v227);
                    sub_23FAD6ADC(v249, v227);
                    *v225 = v167;
                    sub_23F77E1C0();
                    sub_23FAD6D50(v228, v229);
                    v148 = type metadata accessor for VariableSetter;
                    sub_23F6D38A0((uint64_t)v250);
                    v230 = v227;
                    v231 = v236;
                    sub_23FAD6D50(v230, v236);
                    sub_23FAD6D50(v231, v238);
                    sub_23F6D38A0(v252);
                    if ((sub_23F77D93C() & 1) == 0)
                    {
                      sub_23FAD6D00();
                      v148 = a10;
                    }
                    sub_23FAD69A8();
                    if (v151)
                    {
                      sub_23FAD6BC8();
                      v148 = a10;
                    }
                    *((_QWORD *)v148 + 2) = v231;
                    sub_23FAD6840();
                    sub_23F6F594C(v238, v232, type metadata accessor for TranscriptProtoVariableSetter);
                    v154 = *(_QWORD *)(v256 + 16);
                    v79 = v244;
                    v155 = v248;
                    if (v244 == v154)
                    {
LABEL_52:
                      sub_23F6B6740();
                      goto LABEL_101;
                    }
                  }
                }
                goto LABEL_3;
              }
            }
          }
        }
      }
    }
LABEL_24:
    v292 = 0;
    sub_23F6B5DC0();
    v283 = v103;
    v95 = v105 + (v104 << 6);
    sub_23FAD7234(v104);
LABEL_25:
    v106 = *(_QWORD *)(v274 + 48);
    v288 = *(_QWORD *)(sub_23F6B58C8() - 8);
    v107 = v106 + *(_QWORD *)(v288 + 72) * v95;
    v108 = v272;
    sub_23FAD7320(v272, v107);
    sub_23FAD7280();
    v110 = *(_QWORD *)(v109 - 256);
    v111 = v279;
    v112 = (void (*)(uint64_t, char *, uint64_t))v290;
    ((void (*)(uint64_t))v290)(v108 + *(int *)(v110 + 48));
    v113 = v291;
    sub_23F6B4EC0(v108, (uint64_t)v291, &qword_256EA2708);
    v114 = *(int *)(v110 + 48);
    v115 = v276;
    v116 = v276 + v114;
    v117 = (char *)v113 + v114;
    v287 = (char *)v113 + v114;
    sub_23FAD7320(v276, (uint64_t)v113);
    v112(v116, v117, v111);
    LODWORD(v284) = sub_23FB2C758();
    sub_23FAD7450(v115);
    v118 = v270;
    v270(v116, v111);
    v119 = v273;
    v120 = v273 + *(int *)(v110 + 48);
    sub_23FAD7320(v273, (uint64_t)v113);
    v290(v120, (uint64_t)v287, v111);
    sub_23FAD7004();
    v121 = sub_23F6B6190();
    if (v93)
    {
      ((void (*)(uint64_t))v118)(v121);
      sub_23FAD7450(v119);
      swift_bridgeObjectRelease();
      sub_23F6B4F84((uint64_t)v291, &qword_256EA2708);
      sub_23F77DE3C();
      sub_23FAD72D0();
      sub_23F77E0D4(type metadata accessor for VariableSetter, (uint64_t)&v291);
      sub_23FAD6D48(&qword_256EA2610, (uint64_t)&v290);
LABEL_49:
      sub_23F693E04();
      sub_23F77DB70();
      sub_23F77E0D4(type metadata accessor for VariableSetter, (uint64_t)&v292);
      sub_23F693E04();
      goto LABEL_101;
    }
    ((void (*)(uint64_t))v118)(v121);
    v122 = v285;
    v123 = v275;
    sub_23FAD7254();
    sub_23FAD7450(v119);
    sub_23FAD7248();
    v11 = v124;
    v31 = v123;
    sub_23F6D3ECC(v286, (uint64_t)v122, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v124[2]);
    v125 = v289;
    sub_23F77D9A4();
    v293 = (uint64_t)v125;
    v13 = v284;
    sub_23F78C718(v284);
    sub_23FAD6F64();
    if (__OFADD__(v128, v129))
      break;
    v130 = v126;
    v131 = v127;
    sub_23F6916B8(&qword_256EBEEB8);
    if ((sub_23FB2F914() & 1) != 0)
    {
      v132 = sub_23F78C718(v13);
      if ((v131 & 1) != (v133 & 1))
        goto LABEL_112;
      v130 = v132;
    }
    v134 = v293;
    if ((v131 & 1) != 0)
    {
      v135 = sub_23FAD7434();
      sub_23F77DD54(v135, v286, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v11[5]);
    }
    else
    {
      sub_23FAD6D78(v293 + 8 * (v130 >> 6));
      *(_DWORD *)(v136 + 4 * v130) = v137;
      sub_23FAD7434();
      sub_23FAD7254();
      v138 = *(_QWORD *)(v134 + 16);
      v97 = __OFADD__(v138, 1);
      v139 = v138 + 1;
      if (v97)
        goto LABEL_105;
      *(_QWORD *)(v134 + 16) = v139;
    }
    v92 = v293;
    sub_23FAD7094();
    sub_23F6B563C((uint64_t)v285, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
    sub_23F6B4F84((uint64_t)v291, &qword_256EA2708);
    v14 = v269;
    v93 = v283;
  }
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  __break(1u);
LABEL_107:
  __break(1u);
LABEL_108:
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
LABEL_112:
  sub_23FB2FBD8();
  __break(1u);
}

void sub_23FAD0134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(char *);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t (*v77)(uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t (*v102)(uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t (*v116)(uint64_t);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t (*v159)(uint64_t);

  sub_23F6B5220();
  v158 = v0;
  v5 = v4;
  v6 = sub_23FAD6B48();
  v153 = *(_QWORD *)(v6 - 8);
  v154 = v6;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  v141 = (char *)&v126 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B5314((uint64_t)&v126 - v10);
  sub_23F6916B8(&qword_256EA84C8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  v140 = (char *)&v126 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v126 - v14;
  v16 = sub_23F6B58C8();
  v151 = *(_QWORD *)(v16 - 8);
  v152 = v16;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B5810(v18, v126);
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F693E0C();
  v139 = v20;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B6580();
  v131 = v22;
  v23 = sub_23F6D398C();
  v24 = type metadata accessor for TranscriptProtoRetrievedContextStatement(v23);
  v147 = *(_QWORD *)(v24 - 8);
  v148 = v24;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v25);
  v138 = (uint64_t)&v126 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v27);
  v137 = (uint64_t)&v126 - v28;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v29);
  v156 = (uint64_t)&v126 - v30;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v31);
  v146 = (uint64_t)&v126 - v32;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v33);
  v129 = (char *)&v126 - v34;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F6D3D14();
  v128 = v36;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v37);
  v142 = (uint64_t)&v126 - v38;
  v39 = sub_23F6D398C();
  v149 = type metadata accessor for RetrievedContextStatement(v39);
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F693E0C();
  v143 = v41;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F6D3D14();
  v44 = v43;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F72E168();
  MEMORY[0x24BDAC7A8](v46);
  sub_23F878D94();
  v47 = *(_QWORD *)(v5 + 16);
  v159 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE4AF8];
  sub_23FAD6860();
  sub_23F711820();
  v133 = v5;
  v145 = v1;
  v127 = v15;
  v144 = v2;
  v130 = v3;
  if (v47)
  {
    v136 = *(_QWORD *)(v5 + 16);
    sub_23FAD6830();
    sub_23FAD7234(v48);
    sub_23F6B5508();
    v49 = 0;
    v50 = v44;
    v51 = v143;
    v157 = v47;
    v134 = v44;
    while (v136 != v49)
    {
      v52 = *(_QWORD *)(v1 + 72);
      v155 = v49;
      sub_23F6F5920(v135 + v52 * v49, v50, type metadata accessor for RetrievedContextStatement);
      v53 = sub_23F7D260C();
      sub_23F6F5920(v53, v54, type metadata accessor for RetrievedContextStatement);
      v55 = v150;
      v56 = v151;
      sub_23F6B633C(v150, v51, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v151 + 16));
      v57 = sub_23FB2C758();
      v58 = sub_23FB2C740();
      v60 = v59;
      sub_23FAD69A0();
      sub_23FAD7164();
      v61 = v139;
      sub_23FAC3DD4();
      *(_DWORD *)v61 = v57;
      v51 = v143;
      *(_QWORD *)(v61 + 8) = v58;
      *(_QWORD *)(v61 + 16) = v60;
      sub_23F6B530C(v55, *(uint64_t (**)(uint64_t, uint64_t))(v56 + 8));
      sub_23FAD69E0(v61);
      sub_23FAD7228();
      v63 = v62(v141);
      v64 = (uint64_t)v140;
      sub_23FAD7374(v63, v65, v66, v67, v68, v69, v70, v71, v126, (int)v127, SWORD2(v127), SBYTE6(v127), SHIBYTE(v127));
      v158 = v0;
      if (v0)
      {
        sub_23F6D3928(v51);
        sub_23F77E3DC(v124, &qword_256EA25E0);
        sub_23F693DFC();
        sub_23F77DB70();
        sub_23F6D3928(v134);
        sub_23F693DFC();
        goto LABEL_26;
      }
      sub_23F6D3EC4();
      sub_23F7A690C(v64, 0);
      v72 = v146;
      sub_23F77E598(v146, 1);
      v73 = v72 + *(int *)(v148 + 20);
      sub_23F7A690C(v73, 1);
      sub_23F6F0BB0();
      v74 = sub_23FAD6F18();
      sub_23F710E80(v74, v75, &qword_256EA25E0);
      sub_23F710E80(v64, v73, &qword_256EA84C8);
      v76 = v138;
      v77 = type metadata accessor for TranscriptProtoRetrievedContextStatement;
      sub_23F77DC98(v72, v138);
      sub_23F6D3508(v51, type metadata accessor for RetrievedContextStatement);
      v78 = v76;
      v79 = v137;
      sub_23F77DC98(v78, v137);
      sub_23F77DC98(v79, v156);
      v50 = v134;
      sub_23F6D3508(v134, type metadata accessor for RetrievedContextStatement);
      if ((sub_23F77D93C() & 1) == 0)
      {
        sub_23FAD6BF8();
        v77 = v159;
      }
      v1 = v145;
      v47 = v157;
      v80 = v155;
      sub_23FAD704C();
      if (v82)
      {
        sub_23F77DCA0(v81);
        sub_23F711820();
        v77 = v159;
      }
      v49 = v80 + 1;
      *((_QWORD *)v77 + 2) = v61;
      sub_23FAD66C0();
      sub_23F6F594C(v156, v83, type metadata accessor for TranscriptProtoRetrievedContextStatement);
      if (v47 == v49)
        goto LABEL_12;
    }
    __break(1u);
    goto LABEL_28;
  }
  sub_23F6B5508();
LABEL_12:
  sub_23FAD6D8C();
  if (!v85)
  {
    v86 = (uint64_t)v127;
    v87 = v130;
    while (v47 < v84)
    {
      sub_23FAD6D38();
      v88 = *(_QWORD *)(v1 + 72);
      v157 = v47;
      v90 = v144;
      sub_23F77DA34(v89 + v88 * v47, v144);
      sub_23F77DA34(v90, v87);
      v91 = v150;
      v92 = v151;
      v93 = sub_23F7D24F0();
      sub_23F6B5EF0(v93, v94, v95);
      LODWORD(v156) = sub_23FB2C758();
      v96 = v86;
      v97 = sub_23FB2C740();
      v99 = v98;
      sub_23FAD69A0();
      sub_23FAD7164();
      v100 = v131;
      sub_23F6F0BB0();
      *(_DWORD *)v100 = v156;
      *(_QWORD *)(v100 + 8) = v97;
      *(_QWORD *)(v100 + 16) = v99;
      v86 = v96;
      sub_23F70D728(v91, *(uint64_t (**)(uint64_t, uint64_t))(v92 + 8));
      sub_23FAD69E0(v100);
      sub_23FAD7228();
      v101 = v132;
      v103 = v102(v132);
      sub_23FAD7374(v103, v104, v105, v106, v107, v108, v109, v110, v126, (int)v127, SWORD2(v127), SBYTE6(v127), SHIBYTE(v127));
      v158 = v0;
      if (v0)
      {
        sub_23F6D38A0(v87);
        sub_23F923588(v125, &qword_256EA25E0);
        sub_23F6D38A0(v144);
        sub_23F693E04();
        sub_23F693E04();
        sub_23F77DA7C();
        goto LABEL_26;
      }
      v111 = sub_23F6D3EC4();
      sub_23F878CF4(v86);
      sub_23FAD7328(v146);
      sub_23FAD7464();
      sub_23F77E628();
      v112 = sub_23FAD6D6C();
      sub_23F710E80(v112, v113, &qword_256EA25E0);
      v114 = sub_23F7F64A8();
      sub_23F710E80(v114, v115, &qword_256EA84C8);
      sub_23F77E1C0();
      v116 = type metadata accessor for TranscriptProtoRetrievedContextStatement;
      sub_23F77DC98(v117, v118);
      sub_23F77DAB0(v87);
      v119 = v101;
      v120 = v128;
      sub_23F77DC98(v119, v128);
      sub_23F77DC98(v120, v142);
      sub_23F77DAB0(v144);
      if ((sub_23F77D93C() & 1) == 0)
      {
        sub_23FAD6BF8();
        v116 = v159;
      }
      v1 = v145;
      v121 = v157;
      sub_23FAD705C();
      if (v82)
      {
        sub_23F77DA04(v122);
        sub_23F711820();
        v116 = v159;
      }
      v47 = v121 + 1;
      *((_QWORD *)v116 + 2) = v111;
      sub_23FAD66C0();
      sub_23F6F594C(v142, v123, type metadata accessor for TranscriptProtoRetrievedContextStatement);
      sub_23FAD6D8C();
      if (v85)
        goto LABEL_14;
    }
LABEL_28:
    __break(1u);
    return;
  }
LABEL_14:
  sub_23F6B6740();
LABEL_26:
  sub_23F6B5100();
}

void sub_23FAD0880()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t Results;
  uint64_t v21;

  sub_23F6B5220();
  v3 = v2;
  Results = type metadata accessor for TranscriptProtoQueryResults(0);
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v18 - v6);
  v8 = *(_QWORD *)(v3 + 16);
  sub_23FAD70B8(MEMORY[0x24BEE4AF8]);
  sub_23F71185C();
  v21 = v3;
  if (v8)
  {
    v19 = *(_QWORD *)(v3 + 16);
    sub_23F77E584();
    v9 = 0;
    while (v19 != v9)
    {
      sub_23FAD6FB4();
      sub_23FAD73F4();
      sub_23FAD0AE0();
      if (v0)
      {
        sub_23F756640();
        sub_23F77DA7C();
        sub_23F6B6740();
        goto LABEL_20;
      }
      v11 = v10;
      sub_23FAC3DD4();
      sub_23F756640();
      *v1 = v11;
      sub_23FAD71CC();
      if (v12)
        sub_23FAD6BE0();
      ++v9;
      sub_23FAD6D18();
      sub_23F6F594C((uint64_t)v1, v13, type metadata accessor for TranscriptProtoQueryResults);
      v3 = v21;
      if (v8 == v9)
        goto LABEL_10;
    }
    __break(1u);
    goto LABEL_22;
  }
  sub_23F77E584();
LABEL_10:
  v14 = *(_QWORD *)(v3 + 16);
  if (v8 != v14)
  {
    while (v8 < *(_QWORD *)(v3 + 16))
    {
      sub_23FAD6FB4();
      sub_23FAD73F4();
      sub_23FAD0AE0();
      if (v0)
      {
        sub_23F77DA7C();
        sub_23F6B6740();
        sub_23F756640();
        goto LABEL_20;
      }
      v16 = v15;
      sub_23F6F0BB0();
      sub_23F756640();
      *v7 = v16;
      sub_23FAD71CC();
      if (v12)
        sub_23FAD6BE0();
      ++v8;
      sub_23FAD6D18();
      sub_23F6F594C((uint64_t)v7, v17, type metadata accessor for TranscriptProtoQueryResults);
      v3 = v21;
      if (v14 == v8)
        goto LABEL_11;
    }
LABEL_22:
    __break(1u);
    return;
  }
LABEL_11:
  sub_23F6B6740();
LABEL_20:
  sub_23F77DB18();
  sub_23F6B5100();
}

void sub_23FAD0AAC()
{
  sub_23FAD0AE0();
}

void sub_23FAD0AE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  void (*v5)(uint64_t);
  void (*v6)(_QWORD);
  void (*v7)(_QWORD);
  void (*v8)(uint64_t);
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(_QWORD);
  unint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(_QWORD);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t (*v61)(_QWORD);
  void (*v62)(uint64_t);
  uint64_t v63;
  uint64_t v64;

  sub_23F6B5220();
  v61 = v4;
  v62 = v5;
  v7 = v6;
  v9 = v8;
  v10 = v0;
  v12 = v11;
  v60 = *(_QWORD *)(v4(0) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  v63 = (uint64_t)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v15);
  v59 = (char *)&v52 - v16;
  v17 = sub_23F6D398C();
  v9(v17);
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F72E168();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F6D3A70();
  MEMORY[0x24BDAC7A8](v20);
  v54 = (uint64_t)&v52 - v21;
  sub_23F6B5664();
  v23 = MEMORY[0x24BDAC7A8](v22);
  sub_23F77E6B8(v23, v24, v25, v26, v27, v28, v29, v30, v52);
  v31 = *(_QWORD *)(v12 + 16);
  v64 = MEMORY[0x24BEE4AF8];
  v32 = sub_23FAD6860();
  v55 = v7;
  v7(v32);
  v33 = v64;
  v52 = v12;
  if (!v31)
  {
    sub_23F6B90D8();
    goto LABEL_12;
  }
  sub_23FAD6D38();
  v57 = v34;
  v58 = v35;
  sub_23F6B90D8();
  v36 = 0;
  v56 = v3;
  while (v58 != v36)
  {
    sub_23F77DA34(v57 + *(_QWORD *)(v3 + 72) * v36, v1);
    v37 = sub_23F78F534();
    sub_23F77DA34(v37, v38);
    v0 = v10;
    v62(v2);
    if (v10)
    {
      sub_23F77DA7C();
      sub_23F693DFC();
      sub_23F77DAB0(v1);
      sub_23F693DFC();
LABEL_23:
      sub_23F77DB18();
      sub_23F6B5100();
      return;
    }
    sub_23F77DAB0(v1);
    if ((sub_23F77D9A4() & 1) == 0)
    {
      sub_23FAD6A34();
      v33 = v64;
    }
    v40 = *(_QWORD *)(v33 + 16);
    v39 = *(_QWORD *)(v33 + 24);
    if (v40 >= v39 >> 1)
    {
      sub_23F77DD84(v39 > 1, v40 + 1);
      v33 = v64;
    }
    ++v36;
    *(_QWORD *)(v33 + 16) = v40 + 1;
    sub_23FAD6E18();
    sub_23F6F594C(v63, v41, v42);
    v3 = v56;
    if (v31 == v36)
    {
      while (1)
      {
LABEL_12:
        sub_23FAD6D8C();
        if (v44)
        {
          sub_23F6B6740();
          goto LABEL_23;
        }
        if (v31 >= v43)
          goto LABEL_25;
        sub_23FAD6D38();
        v46 = v53;
        sub_23F77DA34(v45 + *(_QWORD *)(v3 + 72) * v31, v53);
        v47 = v54;
        sub_23F77DA34(v46, v54);
        sub_23F77DDE4();
        sub_23F77DAB0(v46);
        if (v0)
          break;
        if ((sub_23F77D93C() & 1) == 0)
        {
          sub_23FAD6A34();
          v47 = v64;
        }
        v49 = *(_QWORD *)(v47 + 16);
        v48 = *(_QWORD *)(v47 + 24);
        if (v49 >= v48 >> 1)
        {
          sub_23F77DD84(v48 > 1, v49 + 1);
          v47 = v64;
        }
        ++v31;
        *(_QWORD *)(v47 + 16) = v49 + 1;
        sub_23FAD6728();
        sub_23F6F594C(v50, v51, v61);
      }
      sub_23F717D54();
      sub_23F717D54();
      sub_23F77DA7C();
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
}

void sub_23FAD0DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t);
  uint64_t v72;
  void (*v73)(char *);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(uint64_t);
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;

  sub_23F6B5220();
  v14 = v10;
  v16 = v15;
  v17 = sub_23FAD7188();
  v154 = *(_QWORD *)(v17 - 8);
  v155 = v17;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v18);
  v144 = (char *)&v132 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5314((uint64_t)&v132 - v21);
  sub_23F6916B8(&qword_256EA84B8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F72E168();
  MEMORY[0x24BDAC7A8](v23);
  v135 = (char *)&v132 - v24;
  v25 = sub_23F6B58C8();
  v152 = *(_QWORD *)(v25 - 8);
  v153 = v25;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F6B5810(v27, v132);
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v28);
  v143 = (char *)&v132 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v30);
  v134 = (char *)&v132 - v31;
  v32 = sub_23F6D398C();
  v33 = type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement(v32);
  v149 = *(_QWORD *)(v33 - 8);
  v150 = v33;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v34);
  v157 = (uint64_t)&v132 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v36);
  v148 = (uint64_t)&v132 - v37;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v38);
  v145 = (uint64_t)&v132 - v39;
  v40 = sub_23F6D398C();
  v151 = type metadata accessor for DynamicEnumerationEntityStatement(v40);
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v41);
  v142 = (uint64_t)&v132 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v43);
  sub_23F6D3D14();
  v45 = v44;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v46);
  v133 = (uint64_t)&v132 - v47;
  sub_23F6B5664();
  v49 = MEMORY[0x24BDAC7A8](v48);
  sub_23FAD6DA0(v49, v50, v51, v52, v53, v54, v55, v56, v132);
  v57 = *(_QWORD *)(v16 + 16);
  sub_23FAD70B8(MEMORY[0x24BEE4AF8]);
  sub_23F711A3C();
  v137 = v16;
  v147 = v11;
  if (v57)
  {
    v141 = *(_QWORD *)(v16 + 16);
    v139 = v16 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    sub_23F6B5508();
    v58 = 0;
    v158 = v57;
    v140 = v12;
    v138 = v45;
    while (v141 != v58)
    {
      v59 = *(_QWORD *)(v11 + 72);
      v156 = v58;
      sub_23F78F5C8(v139 + v59 * v58, v45);
      v60 = v142;
      sub_23F78F5C8(v45, v142);
      v61 = sub_23F6B6190();
      sub_23F77DD54(v61, v62, v63);
      sub_23FB2C758();
      v64 = sub_23FAD72E4();
      v159 = v14;
      v65 = v64;
      v67 = v66;
      sub_23FAD69A0();
      v68 = (uint64_t)v143;
      sub_23F77E628();
      *(_DWORD *)v68 = v13;
      *(_QWORD *)(v68 + 8) = v65;
      *(_QWORD *)(v68 + 16) = v67;
      v69 = sub_23FAD6F0C();
      v70 = v140;
      v71(v69);
      sub_23F77DD78(v68, 0);
      sub_23FAD7228();
      v72 = (uint64_t)v144;
      v73(v144);
      v74 = v159;
      ContextProtoDynamicEnumerationEntity.init(handwritten:)(v72, v75, v76, v77, v78, v79, v80, v81, v132, v133);
      v14 = v74;
      if (v74)
      {
        sub_23F6D38A0(v60);
        sub_23F6B6034(v130, &qword_256EA25E0);
        sub_23F693E04();
        sub_23F77DB70();
        sub_23F6D38A0(v138);
        sub_23F693E04();
        goto LABEL_26;
      }
      v82 = sub_23FAD7190();
      sub_23FAD6A98(v70, 0);
      v83 = v148;
      sub_23F77DD78(v148, 1);
      v84 = sub_23FAD6978(*(int *)(v150 + 20));
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v84, v85, v86, v82);
      sub_23FAC3044();
      v87 = sub_23F72E430();
      sub_23F710E80(v87, v88, &qword_256EA25E0);
      sub_23F710E80(v70, v72, &qword_256EA84B8);
      sub_23F6F594C(v83, v157, type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement);
      sub_23F6D3928(v60);
      v45 = v138;
      sub_23F6D3928(v138);
      if ((sub_23F77D93C() & 1) == 0)
      {
        sub_23FAD6C10();
        v72 = a10;
      }
      v11 = v147;
      v57 = v158;
      v89 = v156;
      v91 = *(_QWORD *)(v72 + 16);
      v90 = *(_QWORD *)(v72 + 24);
      v13 = v91 + 1;
      if (v91 >= v90 >> 1)
      {
        sub_23F77DCA0(v90);
        sub_23F711A3C();
        v72 = a10;
      }
      v58 = v89 + 1;
      *(_QWORD *)(v72 + 16) = v13;
      sub_23F77E16C();
      sub_23F6F594C(v157, v92, type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement);
      if (v57 == v58)
        goto LABEL_12;
    }
    __break(1u);
    goto LABEL_28;
  }
  sub_23F6B5508();
LABEL_12:
  v93 = sub_23FAD72A0();
  if (!v95)
  {
    while (v57 < v94)
    {
      v96 = v93 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
      v97 = *(_QWORD *)(v11 + 72);
      v158 = v57;
      v98 = v146;
      sub_23F77E534(v96 + v97 * v57, v146);
      v99 = v133;
      sub_23F77E534(v98, v133);
      v100 = v152;
      v101 = sub_23F6B619C();
      v102(v101);
      LODWORD(v157) = sub_23FB2C758();
      v103 = sub_23FB2C740();
      v159 = v14;
      v104 = v103;
      v106 = v105;
      sub_23FAD69A0();
      sub_23FAD7164();
      v107 = (uint64_t)v135;
      v108 = (uint64_t)v134;
      sub_23F77E628();
      *(_DWORD *)v108 = v157;
      *(_QWORD *)(v108 + 8) = v104;
      *(_QWORD *)(v108 + 16) = v106;
      sub_23F70D66C(*(uint64_t (**)(uint64_t, uint64_t))(v100 + 8));
      sub_23FAD69E0(v108);
      sub_23FAD7228();
      v109 = v136;
      v110(v136);
      v111 = v159;
      ContextProtoDynamicEnumerationEntity.init(handwritten:)(v109, v112, v113, v114, v115, v116, v117, v118, v132, v133);
      v14 = v111;
      if (v111)
      {
        sub_23F6D38A0(v99);
        sub_23F6B6034(v131, &qword_256EA25E0);
        sub_23F6D38A0(v146);
        sub_23F693E04();
        sub_23F693E04();
        sub_23F77DA7C();
        goto LABEL_26;
      }
      v119 = sub_23FAD7190();
      sub_23F878CF4(v107);
      v120 = v99;
      v121 = v148;
      sub_23FAD7328(v148);
      v123 = v121 + v122;
      sub_23FAD7464();
      sub_23F6F0BB0();
      v124 = sub_23F72E2E0();
      sub_23F710E80(v124, v125, &qword_256EA25E0);
      sub_23F710E80(v107, v123, &qword_256EA84B8);
      sub_23FAD6B38(v121, v145);
      sub_23F77E330(v120);
      sub_23F77E330(v146);
      if ((sub_23F77D93C() & 1) == 0)
      {
        sub_23FAD6C10();
        v123 = a10;
      }
      v11 = v147;
      v126 = v158;
      sub_23FAD705C();
      if (v128)
      {
        sub_23F77DA04(v127);
        sub_23F711A3C();
        v123 = a10;
      }
      v57 = v126 + 1;
      *(_QWORD *)(v123 + 16) = v119;
      sub_23FAD66C0();
      sub_23FAD6B38(v145, v129);
      v93 = sub_23FAD72A0();
      if (v95)
        goto LABEL_14;
    }
LABEL_28:
    __break(1u);
    return;
  }
LABEL_14:
  sub_23F6B6740();
LABEL_26:
  sub_23F6B5100();
}

void sub_23FAD1470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t);
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, unint64_t, uint64_t);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t);
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89[3];
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;

  sub_23F6B5220();
  v13 = v12;
  v14 = type metadata accessor for TranscriptProtoResponseParameter(0);
  v98 = *(_QWORD *)(v14 - 8);
  v99 = v14;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v16);
  v94 = (uint64_t)v89 - v17;
  sub_23F6D398C();
  v97 = sub_23FB2D1F0();
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F693E0C();
  v93 = v19;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v20);
  v95 = (char *)v89 - v21;
  sub_23F6B5664();
  v23 = MEMORY[0x24BDAC7A8](v22);
  sub_23FAD6DC8(v23, v24, v25, v26, v27, v28, v29, v30, v89[0]);
  v31 = *(_QWORD *)(v13 + 16);
  sub_23FAD70E0(MEMORY[0x24BEE4AF8]);
  sub_23F711AB4();
  v90 = v13;
  v32 = v11;
  v96 = v11;
  if (v31)
  {
    sub_23F77E348();
    v91 = v33;
    v92 = v34;
    sub_23F6B6548();
    v35 = 0;
    v106 = v31;
    v36 = v95;
    v37 = v97;
    while (v92 != v35)
    {
      v38 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 16);
      v38(v36, v91 + *(_QWORD *)(v32 + 72) * v35, v37);
      v39 = v93;
      v38(v93, (uint64_t)v36, v37);
      v40 = sub_23FB2D1B4();
      v104 = v41;
      v105 = v40;
      v42 = sub_23FB2D1CC();
      v102 = v43;
      v103 = v42;
      v44 = sub_23FB2D1C0();
      v100 = v45;
      v101 = v44;
      LOBYTE(v38) = sub_23FB2D1E4();
      v46 = sub_23FB2D1D8();
      v48 = v47;
      v49 = sub_23FB2D19C();
      sub_23F6F0878();
      v50 = v104;
      *(_QWORD *)v10 = v105;
      *(_QWORD *)(v10 + 8) = v50;
      sub_23FAD7130();
      *(_QWORD *)(v10 + 16) = v52;
      *(_QWORD *)(v10 + 24) = v51;
      v53 = v100;
      *(_QWORD *)(v10 + 32) = v101;
      *(_QWORD *)(v10 + 40) = v53;
      *(_BYTE *)(v10 + 48) = (_BYTE)v38;
      *(_QWORD *)(v10 + 56) = v46;
      *(_QWORD *)(v10 + 64) = v48;
      v54 = v96;
      *(_BYTE *)(v10 + 72) = v49;
      v32 = v54;
      v55 = *(void (**)(uint64_t))(v54 + 8);
      v56 = sub_23F6B619C();
      v55(v56);
      v57 = sub_23FAD709C();
      v55(v57);
      if ((sub_23F77D93C() & 1) == 0)
      {
        sub_23FAD6CD0();
        v39 = a10;
      }
      sub_23FAD700C();
      if (v59)
      {
        sub_23F77DA64(v58);
        sub_23F711AB4();
        v39 = a10;
      }
      ++v35;
      *((_QWORD *)v39 + 2) = v55;
      sub_23FAD6728();
      sub_23F6F594C(v10, v60, type metadata accessor for TranscriptProtoResponseParameter);
      v31 = v106;
      if (v106 == v35)
        goto LABEL_11;
    }
    __break(1u);
  }
  else
  {
    sub_23F6B6548();
LABEL_11:
    v61 = *(_QWORD *)(v90 + 16);
    if (v31 == v61)
    {
LABEL_12:
      sub_23F6B6740();
      sub_23F6B5100();
      return;
    }
    v62 = v89[2];
    v63 = v97;
    while (v31 < v61)
    {
      sub_23F77E348();
      v64 = *(_QWORD *)(v32 + 72);
      v106 = v31;
      v66 = *(void (**)(uint64_t, unint64_t, uint64_t))(v32 + 16);
      v66(v62, v65 + v64 * v31, v63);
      v67 = v95;
      v66((uint64_t)v95, v62, v63);
      v68 = sub_23FB2D1B4();
      v104 = v69;
      v105 = v68;
      v70 = sub_23FB2D1CC();
      v102 = v71;
      v103 = v70;
      v101 = sub_23FB2D1C0();
      v73 = v72;
      v74 = sub_23FB2D1E4();
      v75 = sub_23FB2D1D8();
      v77 = v76;
      LOBYTE(v66) = sub_23FB2D19C();
      v78 = v94;
      sub_23FAC3044();
      v79 = v104;
      *(_QWORD *)v78 = v105;
      *(_QWORD *)(v78 + 8) = v79;
      sub_23FAD7130();
      *(_QWORD *)(v78 + 16) = v81;
      *(_QWORD *)(v78 + 24) = v80;
      *(_QWORD *)(v78 + 32) = v101;
      *(_QWORD *)(v78 + 40) = v73;
      v82 = v96;
      *(_BYTE *)(v78 + 48) = v74;
      *(_QWORD *)(v78 + 56) = v75;
      *(_QWORD *)(v78 + 64) = v77;
      *(_BYTE *)(v78 + 72) = (_BYTE)v66;
      v32 = v82;
      v83 = *(void (**)(char *, uint64_t))(v82 + 8);
      v83(v67, v63);
      v83((char *)v62, v63);
      if ((sub_23F77D93C() & 1) == 0)
      {
        sub_23FAD6CD0();
        v67 = a10;
      }
      v85 = *((_QWORD *)v67 + 2);
      v84 = *((_QWORD *)v67 + 3);
      v86 = v90;
      v87 = v106;
      if (v85 >= v84 >> 1)
      {
        sub_23F77D9EC(v84);
        sub_23F711AB4();
        v67 = a10;
      }
      v31 = v87 + 1;
      *((_QWORD *)v67 + 2) = v85 + 1;
      sub_23FAD66C0();
      sub_23F6F594C(v94, v88, type metadata accessor for TranscriptProtoResponseParameter);
      v61 = *(_QWORD *)(v86 + 16);
      if (v31 == v61)
        goto LABEL_12;
    }
  }
  __break(1u);
}

void sub_23FAD1804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  sub_23FACC1F8(a1, (uint64_t)type metadata accessor for TranscriptProtoInterpretedStatementResult, (uint64_t)MEMORY[0x24BE53BB8], (uint64_t)sub_23F711B2C, (uint64_t)TranscriptProtoInterpretedStatementResult.init(handwritten:), a6, a7, a8, vars0, vars8);
}

void sub_23FAD1838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  sub_23FACC1F8(a1, (uint64_t)type metadata accessor for TranscriptProtoVisualOutput, (uint64_t)MEMORY[0x24BE52EA8], (uint64_t)sub_23F711B68, (uint64_t)TranscriptProtoVisualOutput.init(handwritten:), a6, a7, a8, vars0, vars8);
}

void sub_23FAD186C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, unint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  char *v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  sub_23F6B5220();
  v2 = v1;
  v3 = sub_23FAD69A0();
  v54 = *(_QWORD *)(v3 - 8);
  v55 = v3;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v4);
  v56 = (uint64_t)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B6580();
  v50 = v7;
  v51 = sub_23F6B58C8();
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v8);
  v49 = (uint64_t)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v10);
  v52 = (char *)&v43 - v11;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v12);
  v44 = (char *)&v43 - v13;
  v14 = *(_QWORD *)(v2 + 16);
  v57 = MEMORY[0x24BEE4AF8];
  sub_23FAD6FC4();
  sub_23F711604();
  v53 = v0;
  v45 = v2;
  if (v14)
  {
    v48 = *(_QWORD *)(v2 + 16);
    sub_23F77E348();
    v46 = v15;
    sub_23F6B6548();
    v16 = 0;
    v47 = v14;
    v17 = (uint64_t)v52;
    v18 = v53;
    while (v48 != v16)
    {
      sub_23F713F84(v17, v46 + *(_QWORD *)(v18 + 72) * v16);
      v19 = v49;
      sub_23F713F84(v49, v17);
      v20 = sub_23FB2C758();
      v21 = sub_23FB2C740();
      v23 = v22;
      v24 = v56;
      sub_23FAD7240();
      *(_DWORD *)v24 = v20;
      *(_QWORD *)(v24 + 8) = v21;
      *(_QWORD *)(v24 + 16) = v23;
      v25 = *(void (**)(uint64_t))(v18 + 8);
      v26 = sub_23F6B619C();
      v25(v26);
      sub_23F77E234(v17);
      if ((sub_23F77D93C() & 1) == 0)
      {
        sub_23FAD6C88();
        v19 = v57;
      }
      v14 = v47;
      v28 = *(_QWORD *)(v19 + 16);
      v27 = *(_QWORD *)(v19 + 24);
      v2 = v28 + 1;
      if (v28 >= v27 >> 1)
      {
        sub_23F77DA64(v27);
        sub_23F711604();
        v19 = v57;
      }
      ++v16;
      *(_QWORD *)(v19 + 16) = v2;
      sub_23F77E16C();
      sub_23F6F594C(v56, v29, type metadata accessor for TranscriptProtoStatementID);
      if (v14 == v16)
        goto LABEL_11;
    }
    __break(1u);
  }
  else
  {
    sub_23F6B6548();
LABEL_11:
    v30 = v45;
    v31 = *(_QWORD *)(v45 + 16);
    if (v14 == v31)
    {
LABEL_12:
      sub_23F6B6740();
      sub_23F6B5100();
      return;
    }
    v33 = v52;
    v32 = v53;
    v34 = v44;
    v36 = v50;
    v35 = v51;
    while (v14 < v31)
    {
      v37 = *(void (**)(char *, unint64_t, uint64_t))(v32 + 16);
      v37(v34, v30+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(_QWORD *)(v32 + 72) * v14, v35);
      v38 = sub_23F78F560();
      ((void (*)(uint64_t))v37)(v38);
      v39 = sub_23FB2C758();
      sub_23FB2C740();
      sub_23FAD73CC();
      sub_23FAC3CEC();
      *(_DWORD *)v36 = v39;
      *(_QWORD *)(v36 + 8) = v33;
      *(_QWORD *)(v36 + 16) = v2;
      v40 = *(_QWORD *)(v32 + 8);
      ((void (*)(char *, uint64_t))v40)(v33, v35);
      ((void (*)(char *, uint64_t))v40)(v34, v35);
      if ((sub_23F77D93C() & 1) == 0)
      {
        sub_23FAD6C88();
        v40 = v57;
      }
      sub_23FAD6FE4();
      if (v42)
      {
        sub_23F77D9EC(v41);
        sub_23F711604();
        v40 = v57;
      }
      ++v14;
      *(_QWORD *)(v40 + 16) = v39;
      sub_23F6F594C(v50, v40+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(_QWORD *)(v54 + 72) * v2, type metadata accessor for TranscriptProtoStatementID);
      v30 = v45;
      v31 = *(_QWORD *)(v45 + 16);
      if (v14 == v31)
        goto LABEL_12;
    }
  }
  __break(1u);
}

void sub_23FAD1B94()
{
  ContextProtoRetrievedTool.init(handwritten:)();
}

void QueryDecorationToolRetrievalResponse.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(_QWORD);
  uint64_t v55;
  char v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  void (*v81)(uint64_t, uint64_t, uint64_t);
  unint64_t v82;
  char v83;
  unint64_t v84;
  char v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  _QWORD *v91;
  uint64_t v92;
  BOOL v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104[4];
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  _BYTE v133[56];
  uint64_t v134;
  uint64_t v135;

  sub_23FAD66AC();
  v134 = v6;
  v135 = v7;
  v8 = v1;
  v10 = v9;
  v12 = v11;
  sub_23F6916B8(&qword_256EA2E48);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B51D0();
  v112 = sub_23FB2EB34();
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F693E0C();
  v110 = v15;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F78F404();
  v17 = sub_23FB2ED8C();
  v124 = *(_QWORD *)(v17 - 8);
  v125 = v17;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v18);
  v123 = (uint64_t)v104 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6D3F60();
  v22 = MEMORY[0x24BDAC7A8](v21);
  sub_23F77E6B8(v22, v23, v24, v25, v26, v27, v28, v29, v104[0]);
  sub_23F6916B8(&qword_256EA2E58);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F6B51A4();
  v118 = v31;
  sub_23F6D398C();
  v32 = sub_23FB2EB40();
  v116 = *(_QWORD *)(v32 - 8);
  v117 = v32;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v33);
  v115 = (uint64_t)v104 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v35);
  v114 = (uint64_t)v104 - v36;
  v37 = sub_23FAD6EDC();
  v129 = *(_QWORD *)(v37 - 8);
  v130 = v37;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F693E0C();
  v127 = v39;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v40);
  v113 = (char *)v104 - v41;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v42);
  v128 = (uint64_t)v104 - v43;
  v44 = sub_23F6D398C();
  v111 = type metadata accessor for ContextProtoToolRetrievalType(v44);
  MEMORY[0x24BDAC7A8](v111);
  sub_23F6B5208();
  v46 = *(_QWORD *)(v10 + 48);
  v47 = *(_QWORD *)(v46 + 16);
  if (!v47)
  {
LABEL_16:
    sub_23F6B6548();
    sub_23F6B5F1C();
    v95 = sub_23F6B6254();
    sub_23F773810(v95);
    if (v8)
    {
      sub_23F6B6090();
      v96 = sub_23F6B5908();
      sub_23F72E404(v96, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
LABEL_24:
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23F72E3F8();
      v97 = sub_23FB2E30C();
      sub_23F72E404(v97, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
    }
    sub_23F77DB18();
    sub_23F70D684();
    return;
  }
  v109 = v2;
  v108 = v0;
  v104[1] = v12;
  v104[3] = v10;
  v48 = v46 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
  v105 = *(_QWORD *)(v45 + 72);
  sub_23FAD6E34(v46, (uint64_t)&v132);
  v49 = (_QWORD *)MEMORY[0x24BEE4B00];
  v50 = v117;
  v51 = v118;
  v107 = v4;
  v106 = v5;
  v126 = v3;
  while (1)
  {
    v52 = sub_23F78F534();
    sub_23F6F5920(v52, v53, v54);
    sub_23F6B4F58(v3, v51, &qword_256EA2E58);
    v55 = sub_23F6B5164(v51, 1, v50);
    if (v56)
    {
      sub_23F77DD64(v55, &qword_256EA2E58);
      v131 = (_QWORD *)v50;
      sub_23F6916B8(&qword_256EA8740);
      v98 = sub_23F77D9AC();
      v100 = v99;
      sub_23F77D8D0();
      sub_23F6B5AD4();
      *v101 = v98;
      v101[1] = v100;
      swift_willThrow();
      sub_23F77E0D4(type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse, (uint64_t)v133);
      sub_23F7E7834(v102, type metadata accessor for ContextProtoToolRetrievalType);
LABEL_23:
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
    v120 = v48;
    v121 = v47;
    v57 = v4;
    v58 = v49;
    v59 = v114;
    v60 = v51;
    v61 = v116;
    sub_23F75E68C(v114, v60, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v116 + 32));
    v62 = v115;
    sub_23F75E68C(v115, v59, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v61 + 16));
    v63 = v113;
    sub_23FB2EDC8();
    if (v8)
    {
      sub_23FAD67EC(*(uint64_t (**)(uint64_t, uint64_t))(v61 + 8));
      sub_23F77E0D4(type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse, (uint64_t)v133);
LABEL_22:
      sub_23F6D3508(v126, type metadata accessor for ContextProtoToolRetrievalType);
      goto LABEL_23;
    }
    sub_23FAD67EC(*(uint64_t (**)(uint64_t, uint64_t))(v61 + 8));
    (*(void (**)(uint64_t, char *, uint64_t))(v129 + 32))(v128, v63, v130);
    v64 = v57;
    sub_23F6B4F58(v126 + *(int *)(v111 + 20), v57, &qword_256EA2E48);
    v65 = v57;
    v66 = v112;
    v67 = sub_23F6B5164(v65, 1, v112);
    if (v56)
    {
      sub_23F77DD24(v67, &qword_256EA2E48);
      v131 = (_QWORD *)v66;
      sub_23F6916B8(&qword_256EA8738);
      sub_23F77D9AC();
      sub_23FAD73CC();
      sub_23F77D8D0();
      sub_23F6B5AD4();
      *v103 = v62;
      v103[1] = v64;
      swift_willThrow();
      sub_23F77E0D4(type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse, (uint64_t)v133);
      sub_23FAD7120();
      goto LABEL_22;
    }
    v68 = v58;
    v69 = v109;
    v70 = sub_23F6B6AAC();
    sub_23F77DD54(v70, v71, v72);
    v73 = sub_23FAD6F18();
    sub_23F77DD54(v73, v74, v75);
    v76 = v108;
    sub_23FB2ED80();
    v77 = v126;
    v119 = 0;
    sub_23F6B563C(v69, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    v78 = v124;
    v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(v124 + 32);
    v80 = v122;
    v79(v122, v76, v125);
    v81 = *(void (**)(uint64_t, uint64_t, uint64_t))(v129 + 16);
    v81(v127, v128, v130);
    sub_23F6B633C(v123, v80, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v78 + 16));
    swift_isUniquelyReferenced_nonNull_native();
    v131 = v68;
    sub_23F78C74C();
    if (__OFADD__(v68[2], (v83 & 1) == 0))
      break;
    v84 = v82;
    v85 = v83;
    sub_23F6916B8(&qword_256EBE530);
    v86 = sub_23FB2F914();
    v88 = v124;
    v87 = v125;
    v51 = v118;
    if ((v86 & 1) != 0)
    {
      sub_23F78C74C();
      if ((v85 & 1) != (v90 & 1))
        goto LABEL_28;
      v84 = v89;
    }
    v91 = v131;
    if ((v85 & 1) != 0)
    {
      sub_23F77DD54(v131[7] + *(_QWORD *)(v88 + 72) * v84, v123, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v88 + 40));
    }
    else
    {
      v131[(v84 >> 6) + 8] |= 1 << v84;
      v81(v91[6] + *(_QWORD *)(v129 + 72) * v84, v127, v130);
      v79(v91[7] + *(_QWORD *)(v88 + 72) * v84, v123, v87);
      v92 = v91[2];
      v93 = __OFADD__(v92, 1);
      v94 = v92 + 1;
      if (v93)
        goto LABEL_27;
      v91[2] = v94;
    }
    v49 = v131;
    sub_23FAD7094();
    sub_23F77E234(v127);
    sub_23F6B563C(v122, *(uint64_t (**)(uint64_t, uint64_t))(v88 + 8));
    sub_23F77E234(v128);
    v3 = v77;
    sub_23F6D3928(v77);
    v48 = v120 + v105;
    v47 = v121 - 1;
    v8 = v119;
    v4 = v107;
    v5 = v106;
    v50 = v117;
    if (v121 == 1)
    {
      sub_23F77DE3C();
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  sub_23FB2FBD8();
  __break(1u);
}

void sub_23FAD22EC()
{
  QueryDecorationToolRetrievalResponse.init(transcript:)();
}

void ContextProtoQueryDecorationToolRetrievalResponse.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  void (*v75)(uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;

  sub_23FAD66AC();
  v110 = v5;
  v111 = v6;
  v108 = v0;
  v8 = v7;
  v90 = v9;
  sub_23FAD74DC();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B51A4();
  v100 = v11;
  v99 = sub_23F6916B8(&qword_256EA2720);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  v98 = (char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v14);
  v97 = (char *)&v83 - v15;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F72E2B0();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v83 - v19;
  sub_23FAD7178();
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B5268();
  v89 = sub_23FB2E318();
  v23 = v22;
  v24 = sub_23FB2E324();
  v26 = v25;
  sub_23FB2E330();
  v28 = v27;
  v29 = sub_23FB2E33C();
  v30 = v108;
  sub_23FACC1F8(v29, (uint64_t)type metadata accessor for ContextProtoRetrievedTool, (uint64_t)MEMORY[0x24BE57608], (uint64_t)sub_23F711424, (uint64_t)ContextProtoRetrievedTool.init(handwritten:), v31, v32, v33, v83, v84);
  v108 = v30;
  if (v30)
  {
    v35 = sub_23FAD74D4();
    sub_23F78F1B0(v35);
    sub_23F6B6090();
LABEL_3:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  v87 = v26;
  v86 = v23;
  v93 = v1;
  v94 = v3;
  v95 = v4;
  v96 = v20;
  v88 = v34;
  v85 = v24;
  v36 = sub_23FB2E348();
  v37 = *(_QWORD *)(v36 + 16);
  if (v37)
  {
    v84 = v8;
    v109 = MEMORY[0x24BEE4AF8];
    sub_23F711910();
    sub_23F7AE664(v36);
    v91 = v2;
    v92 = v36;
    v38 = (uint64_t)v96;
    while (1)
    {
      v101 = v37;
      v39 = v99;
      v40 = v38 + *(int *)(v99 + 48);
      v41 = sub_23FAD6F0C();
      v103 = v43;
      v104 = v42;
      v102 = v44;
      sub_23F7AE7F4(v41, v45, v42, v43, v44, v36);
      v107 = *(_QWORD *)(sub_23FB2EDD4() - 8);
      v46 = v95;
      sub_23F923308(v95, v38);
      v47 = v46 + *(int *)(v39 + 48);
      v48 = sub_23FB2ED8C();
      v106 = *(_QWORD *)(v48 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 16))(v47, v40, v48);
      v49 = v91;
      sub_23FAD73D8(v46, v91);
      sub_23F6B64F4(v38);
      v105 = &v97[*(int *)(v39 + 48)];
      v50 = (uint64_t)v105;
      v51 = sub_23F7D2F98();
      sub_23F923308(v51, v52);
      sub_23FAD7458(v50);
      v53 = (uint64_t)v98;
      v54 = (uint64_t)&v98[*(int *)(v39 + 48)];
      v55 = sub_23F78F560();
      sub_23F923308(v55, v56);
      sub_23FAD7458(v54);
      sub_23FB2E150();
      sub_23F7B0990(v53, *(uint64_t (**)(uint64_t, uint64_t))(v107 + 8));
      sub_23F6B6420((uint64_t)v105, *(uint64_t (**)(uint64_t, uint64_t))(v106 + 8));
      v57 = v94;
      v58 = v108;
      ContextProtoToolRetrievalType.init(handwritten:)();
      v108 = v58;
      if (v58)
        break;
      sub_23F6B4F84(v49, &qword_256EA2720);
      v60 = v109;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F711910();
        v60 = v109;
      }
      v61 = v96;
      v62 = v93;
      v63 = *(_QWORD *)(v60 + 16);
      if (v63 >= *(_QWORD *)(v60 + 24) >> 1)
      {
        sub_23F711910();
        v61 = v96;
        v60 = v109;
      }
      *(_QWORD *)(v60 + 16) = v63 + 1;
      sub_23F6F594C(v57, v60+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ *(_QWORD *)(v62 + 72) * v63, type metadata accessor for ContextProtoToolRetrievalType);
      v64 = sub_23F72E430();
      v65 = (uint64_t)v61;
      v66 = v102;
      v36 = v92;
      v67 = sub_23F7AE6E8(v64);
      v69 = v68;
      v71 = v70 & 1;
      v72 = sub_23F72E430();
      v73 = v66;
      v38 = v65;
      sub_23F7AE908(v72, v74, v73);
      v37 = v101 - 1;
      if (v101 == 1)
      {
        sub_23F7AE908(v67, v69, v71);
        sub_23F693E04();
        v77 = v89;
        v76 = v90;
        v78 = v87;
        v79 = v86;
        v80 = v85;
        goto LABEL_15;
      }
    }
    sub_23F6D378C(v59, &qword_256EA2720);
    sub_23F7AE908(v104, v103, v102);
    sub_23F77DE3C();
    sub_23F77DE3C();
    sub_23F77DE3C();
    sub_23F713F08();
    sub_23FAD74D4();
    sub_23F877770();
    v75(v84);
    goto LABEL_3;
  }
  sub_23F693E04();
  v60 = MEMORY[0x24BEE4AF8];
  v77 = v89;
  v76 = v90;
  v80 = v85;
  v79 = v86;
  v78 = v87;
LABEL_15:
  type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  sub_23FAC3044();
  *(_QWORD *)v76 = v77;
  *(_QWORD *)(v76 + 8) = v79;
  *(_QWORD *)(v76 + 16) = v80;
  *(_QWORD *)(v76 + 24) = v78;
  *(_DWORD *)(v76 + 32) = v28;
  sub_23FAD7248();
  *(_QWORD *)(v76 + 40) = v81;
  *(_QWORD *)(v76 + 48) = v60;
  v82 = sub_23FAD74D4();
  sub_23F78F1B0(v82);
LABEL_16:
  sub_23F70D684();
}

void ContextProtoToolRetrievalType.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_23F6B5220();
  v32 = v4;
  v30 = sub_23FAD7178();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v5);
  v31 = (uint64_t)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6D398C();
  v29 = sub_23FB2EB34();
  v27 = *(_QWORD *)(v29 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_23FB2ED8C();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA2E48);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23FAD6DDC(v12, v26);
  sub_23FB2EDD4();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B53AC();
  sub_23F6916B8(&qword_256EA2E58);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B59E0();
  sub_23FB2E144();
  sub_23FB2EDBC();
  sub_23F6B56E0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23FAD7180();
  sub_23F7A690C(v2, 0);
  sub_23FB2E138();
  sub_23FB2ED74();
  sub_23FAD70A8();
  if (v0)
  {
    v15 = sub_23FAD74DC();
    v16 = sub_23F78F2A8(v15);
    sub_23F77E3DC(v16, &qword_256EA2E58);
  }
  else
  {
    v17 = v28;
    sub_23F77DD54(v28, (uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 32));
    sub_23F878CF4(v17);
    v18 = v31;
    sub_23F7A690C(v31, 1);
    sub_23F7D2ED8(v18 + *(int *)(v30 + 20), 1);
    sub_23F6F0BB0();
    v19 = sub_23FAD6F18();
    sub_23F710E80(v19, v20, v21);
    v22 = sub_23F924C14();
    sub_23F710E80(v22, v23, v24);
    sub_23F6F594C(v18, v32, type metadata accessor for ContextProtoToolRetrievalType);
    v25 = sub_23FAD74DC();
    sub_23F78F2A8(v25);
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void sub_23FAD2A20()
{
  ContextProtoQueryDecorationToolRetrievalResponse.init(handwritten:)();
}

void DynamicEnumerationEntity.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  _QWORD v29[8];
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  sub_23F6B5220();
  v6 = v5;
  v29[6] = v7;
  v8 = sub_23F6B632C();
  v30 = *(_QWORD *)(v8 - 8);
  v31 = v8;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v29[7] = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v11);
  v32 = (char *)v29 - v12;
  sub_23F6B6634();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  v33 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6D398C();
  v15 = sub_23FB2EB28();
  v34 = *(_QWORD *)(v15 - 8);
  v35 = v15;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B6308();
  v18 = sub_23FB2ED5C();
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F6B5298();
  v29[5] = *v6;
  v20 = sub_23FAD7190();
  sub_23F77E1FC();
  sub_23F77BAF8();
  if (v1)
  {
    sub_23F6D3C24(v21, type metadata accessor for ContextProtoDynamicEnumerationEntity);
    swift_bridgeObjectRelease();
  }
  else
  {
    v29[2] = v20;
    v29[3] = v2;
    v29[4] = v18;
    v22 = v34;
    sub_23F6B633C(v3, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 16));
    sub_23FB2ED50();
    v29[1] = v0;
    sub_23F6B530C(v4, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
    v23 = (uint64_t)v32;
    sub_23F77B844();
    v24 = v30;
    v25 = sub_23F72E2E0();
    sub_23F6D3ECC(v25, v26, v27);
    sub_23FB2ED2C();
    sub_23F7B0990(v23, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
    v28 = sub_23FB2E2AC();
    sub_23F6D3C24(v28, type metadata accessor for ContextProtoDynamicEnumerationEntity);
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void sub_23FAD2CC4()
{
  DynamicEnumerationEntity.init(transcript:)();
}

void ContextProtoDynamicEnumerationEntity.init(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  sub_23F6B5220();
  sub_23FAD7304();
  v56 = v14;
  v54 = sub_23FAD7190();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  v55 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23F6B632C();
  v52 = *(_QWORD *)(v17 - 8);
  v53 = v17;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v18);
  sub_23FAD67A8(v19, v50);
  v20 = sub_23FB2ED38();
  v59 = *(_QWORD *)(v20 - 8);
  v60 = v20;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B5420(v22, v50);
  sub_23F6916B8(&qword_256EA2610);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F6B51D0();
  v61 = sub_23FB2EB28();
  v57 = *(_QWORD *)(v61 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6B5268();
  sub_23FB2ED5C();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F6B573C();
  sub_23F6916B8(&qword_256EA2E00);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F6B537C(v27, v50);
  v28 = sub_23FB2DC88();
  v30 = v29;
  sub_23FB2E2D0();
  sub_23FB2ED44();
  if (a10)
  {
    sub_23F6B530C(v13, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    v31 = sub_23FAD7188();
    sub_23F6B6454(v31);
    sub_23F6B6A48();
  }
  else
  {
    v51 = v28;
    sub_23F6B530C(v13, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    v32 = v58;
    sub_23F6B633C(v58, v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 32));
    sub_23F77DD78(v32, 0);
    sub_23FB2E2C4();
    sub_23FB2ED20();
    sub_23FAD6EA0(v59);
    v33 = sub_23F72E2E0();
    sub_23F6B5EF0(v33, v34, v35);
    sub_23FAD71C4(v11, 0, 1);
    v36 = (uint64_t *)v55;
    v37 = sub_23FAD6978(*(int *)(v54 + 20));
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v37, v38, v39, v61);
    v40 = sub_23FAD6A04();
    sub_23FAD71C4(v40, v41, v42);
    sub_23FAC3044();
    *v36 = v51;
    v36[1] = v30;
    v43 = sub_23F7F64A8();
    sub_23F710E80(v43, v44, v45);
    v46 = sub_23FAD709C();
    sub_23F710E80(v46, v47, v48);
    sub_23F6F594C((uint64_t)v36, v56, type metadata accessor for ContextProtoDynamicEnumerationEntity);
    v49 = sub_23FAD7188();
    sub_23F6B6454(v49);
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void sub_23FAD2F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  ContextProtoDynamicEnumerationEntity.init(handwritten:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void ToolRetrievalType.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t);
  _QWORD v24[5];
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  sub_23F6B5220();
  v6 = v5;
  v24[3] = v7;
  v25 = sub_23FB2EB34();
  v28 = *(_QWORD *)(v25 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  v24[4] = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v10);
  v26 = (char *)v24 - v11;
  sub_23F6D398C();
  sub_23FB2ED8C();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5208();
  v27 = sub_23FAD7180();
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F876D18();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B6308();
  v15 = sub_23FB2EDD4();
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B5268();
  sub_23F77BAA0();
  if (!v1)
  {
    v24[1] = v2;
    v24[2] = v15;
    v24[0] = v3;
    v17 = (uint64_t)v26;
    v18 = sub_23F87781C();
    sub_23F6B633C(v18, v19, v20);
    sub_23FB2EDC8();
    sub_23F6B530C(v4, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    sub_23FAD7178();
    sub_23F77BACC();
    v21 = sub_23F6B6AAC();
    sub_23F6D3ECC(v21, v22, v23);
    sub_23FB2ED80();
    sub_23F7B0990(v17, *(uint64_t (**)(uint64_t, uint64_t))(v28 + 8));
    sub_23F6D3D70();
    sub_23FB2E150();
  }
  sub_23F6D3508(v6, type metadata accessor for ContextProtoToolRetrievalType);
  sub_23F6B5100();
}

void sub_23FAD31BC()
{
  ToolRetrievalType.init(transcript:)();
}

void sub_23FAD31D0()
{
  ContextProtoToolRetrievalType.init(handwritten:)();
}

void SampleInvocation.init(transcript:)()
{
  uint64_t v0;

  sub_23FAD7414();
  sub_23F6B5F1C();
  sub_23FB2DE14();
  sub_23F6D3508(v0, type metadata accessor for ContextProtoSampleInvocation);
}

void sub_23FAD3240()
{
  SampleInvocation.init(transcript:)();
  sub_23F878AAC();
}

uint64_t ContextProtoSampleInvocation.init(handwritten:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;

  v4 = sub_23FB2DE20();
  v6 = v5;
  sub_23FB2DE2C();
  v8 = v7;
  type metadata accessor for ContextProtoSampleInvocation(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v6;
  *(_DWORD *)(a2 + 16) = v8;
  v9 = sub_23FB2DE38();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
}

void sub_23FAD32D8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  ContextProtoSampleInvocation.init(handwritten:)(a1, a2);
  sub_23F878AAC();
}

void SpanMatchedEntity.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_23FAD7414();
  sub_23F6916B8(&qword_256EA2610);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B53AC();
  sub_23F6916B8(&qword_256EA2950);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_23F6B5C2C();
  v6 = type metadata accessor for ContextProtoSpanMatchedEntity(v5);
  sub_23F6B4F58(v0 + *(int *)(v6 + 20), v2, &qword_256EA2610);
  sub_23F77A32C();
  if (!v1)
  {
    v8 = swift_bridgeObjectRetain();
    sub_23F774D28(v8, v9, v10, v11, v12, v13, v14, v15);
    v7 = sub_23FB2DE68();
  }
  sub_23F714040(v7, type metadata accessor for ContextProtoSpanMatchedEntity);
  sub_23F6D3674();
}

void sub_23FAD33EC()
{
  SpanMatchedEntity.init(transcript:)();
}

void ContextProtoSpanMatchedEntity.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = sub_23F78F298();
  v5 = type metadata accessor for ContextProtoSpanMatchedEntity(v4);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F693EB0();
  sub_23F6916B8(&qword_256EA2950);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B59E0();
  sub_23F6916B8(&qword_256EA2610);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B53AC();
  sub_23FB2DE74();
  sub_23F77C658();
  if (!v1)
  {
    v10 = sub_23FB2DE80();
    sub_23FACC1F8(v10, (uint64_t)type metadata accessor for ContextProtoEntityMatch, (uint64_t)MEMORY[0x24BE573C8], (uint64_t)sub_23F7113E8, (uint64_t)ContextProtoEntityMatch.init(handwritten:), v11, v12, v13, v20, v21);
    v15 = v14;
    v16 = (uint64_t)v2 + *(int *)(v5 + 20);
    v17 = sub_23F6B632C();
    sub_23F6B5A8C(v16, v18, v19, v17);
    sub_23FAC3044();
    sub_23F710E80(v3, v16, &qword_256EA2610);
    *v2 = v15;
    sub_23F6F594C((uint64_t)v2, v0, type metadata accessor for ContextProtoSpanMatchedEntity);
  }
  v9 = sub_23FB2DE8C();
  sub_23F78F1B0(v9);
}

void sub_23FAD356C()
{
  ContextProtoSpanMatchedEntity.init(handwritten:)();
}

void EntityMatch.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[11];
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t matched;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  sub_23FAD66AC();
  v52 = v2;
  v53 = v3;
  v51 = v0;
  v5 = v4;
  v47 = v6;
  v7 = sub_23FB2DE5C();
  v45 = *(_QWORD *)(v7 - 8);
  v46 = v7;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  v44 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B6580();
  v43 = v11;
  sub_23F6916B8(&qword_256EA2ED0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5BD8(v13, v42[0]);
  sub_23F6916B8((uint64_t *)&unk_256EA8FA0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  v50 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23F6D398C();
  matched = type metadata accessor for ContextProtoMatchProperties(v16);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B51D0();
  sub_23FB2DD60();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  v19 = sub_23F78F260();
  v20 = (uint64_t *)(v5 + *(int *)(type metadata accessor for ContextProtoEntityMatch(v19) + 52));
  v21 = *v20;
  v22 = v20[1];
  v23 = *(_QWORD *)(v5 + 8);
  v42[9] = *(_QWORD *)v5;
  v42[10] = v21;
  v25 = *(_QWORD *)(v5 + 24);
  v24 = *(_QWORD *)(v5 + 32);
  v42[7] = *(_QWORD *)(v5 + 40);
  v42[8] = v24;
  v26 = *(_QWORD *)(v5 + 80);
  v42[6] = *(_QWORD *)(v5 + 72);
  v27 = *(_QWORD *)(v5 + 16);
  sub_23F6B5F1C();
  sub_23F77E1FC();
  sub_23F77E584();
  sub_23F6B6548();
  v28 = v51;
  sub_23F77C03C();
  if (v28)
  {
    sub_23F714040(v29, type metadata accessor for ContextProtoEntityMatch);
    sub_23F6B5908();
    sub_23F6B6E44();
    sub_23F756640();
    sub_23F6B6090();
  }
  else
  {
    v42[2] = v27;
    v42[3] = v25;
    v42[4] = v22;
    v42[5] = v23;
    v51 = v26;
    v42[1] = *(_QWORD *)(v1 + 16);
    v30 = v49;
    sub_23F6B4F58(v1 + *(int *)(matched + 24), v49, &qword_256EA2ED0);
    sub_23F77B0F0(v30, v31, v32, v33, v34, v35, v36, v37);
    v38 = sub_23FB2DD30();
    sub_23F6D3D20(v38, type metadata accessor for ContextProtoMatchProperties);
    v40 = (uint64_t)v44;
    v39 = v45;
    (*(void (**)(char *, _QWORD, uint64_t))(v45 + 104))(v44, **((unsigned int **)&unk_251002220 + *(char *)(v5 + 52)), v46);
    sub_23F75E710(v43, v40, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 32));
    swift_bridgeObjectRetain();
    v41 = sub_23FB2DB08();
    sub_23F714040(v41, type metadata accessor for ContextProtoEntityMatch);
  }
  sub_23F8778A8();
  sub_23F70D684();
}

void MatchProperties.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_23F6B5220();
  v3 = v2;
  sub_23F6916B8(&qword_256EA2ED0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B5268();
  sub_23F6916B8((uint64_t *)&unk_256EA8FA0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B52B0();
  v6 = sub_23FAD7170();
  sub_23F6B4F58(v3 + *(int *)(v6 + 24), v1, &qword_256EA2ED0);
  sub_23F77B0F0(v1, v7, v8, v9, v10, v11, v12, v13);
  if (!v0)
    v14 = sub_23FB2DD30();
  sub_23F714040(v14, type metadata accessor for ContextProtoMatchProperties);
  sub_23F6B5100();
}

void EntityMatcherType.init(transcript:)()
{
  uint64_t v0;

  v0 = sub_23FB2DE5C();
  sub_23FAD67C8(v0);
  sub_23FAD6A50();
}

void sub_23FAD398C()
{
  EntityMatch.init(transcript:)();
}

void ContextProtoEntityMatch.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  sub_23FAD66AC();
  v70 = v3;
  v71 = v4;
  v69 = v0;
  v64 = v5;
  v63 = type metadata accessor for ContextProtoEntityMatch(0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B5864();
  v7 = sub_23FB2DE5C();
  v67 = *(_QWORD *)(v7 - 8);
  v68 = v7;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  v66 = (uint64_t)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v10);
  v65 = (char *)&v56 - v11;
  sub_23F6D398C();
  sub_23FB2DD60();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5268();
  sub_23F6916B8(&qword_256EA2EB8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B53AC();
  v62 = sub_23FB2DB8C();
  v15 = v14;
  v16 = sub_23FB2DAFC();
  v18 = v17;
  v19 = sub_23FB2DB38();
  v20 = sub_23FB2DB98();
  sub_23FB2DB2C();
  v22 = v21;
  sub_23FB2DB68();
  v23 = v69;
  ContextProtoMatchProperties.init(handwritten:)();
  if (v23)
  {
    v24 = sub_23FAD7500();
    sub_23F78F1B0(v24);
    sub_23F6B6A48();
    sub_23F6B6090();
  }
  else
  {
    v58 = v20;
    v59 = v19;
    v60 = v16;
    v61 = v15;
    v69 = v18;
    sub_23FAD7170();
    sub_23F7A690C(v2, 0);
    v25 = (uint64_t)v65;
    sub_23FB2DB50();
    v26 = v67;
    v27 = v68;
    sub_23F75E710(v66, v25, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 16));
    v28 = sub_23F72E3F8();
    v30 = v29(v28);
    v31 = 0;
    if (v30 != *MEMORY[0x24BE57868])
    {
      if (v30 == *MEMORY[0x24BE57858])
      {
        v31 = 1;
      }
      else
      {
        if (v30 != *MEMORY[0x24BE57860])
        {
          sub_23F779AF8();
          v50 = sub_23F6B5AD4();
          sub_23FAD6770(v50, v51);
          v52 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
          v52(v25, v27);
          v53 = sub_23F72E3F8();
          ((void (*)(uint64_t))v52)(v53);
          sub_23FAD74C4();
          sub_23F75029C();
          v54 = sub_23FAD7500();
          v55 = sub_23F78F1B0(v54);
          sub_23F6B6034(v55, &qword_256EA2EB8);
          goto LABEL_9;
        }
        v31 = 2;
      }
    }
    LODWORD(v66) = v31;
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    v32 = sub_23FB2DB74();
    v67 = v33;
    v68 = v32;
    v34 = sub_23FB2DB5C();
    v36 = v35;
    v65 = (char *)sub_23FB2DB20();
    v57 = v37;
    v38 = v63;
    sub_23F77E598(v1 + *(int *)(v63 + 48), 1);
    v39 = (_QWORD *)(v1 + *(int *)(v38 + 52));
    *v39 = 0;
    v39[1] = 0;
    sub_23F6F0BB0();
    v40 = v61;
    *(_QWORD *)v1 = v62;
    *(_QWORD *)(v1 + 8) = v40;
    v41 = v69;
    *(_QWORD *)(v1 + 16) = v60;
    *(_QWORD *)(v1 + 24) = v41;
    v42 = v58;
    *(_QWORD *)(v1 + 32) = v59;
    *(_QWORD *)(v1 + 40) = v42;
    *(_DWORD *)(v1 + 48) = v22;
    v43 = sub_23F87781C();
    sub_23F710E80(v43, v44, v45);
    *(_BYTE *)(v1 + 52) = v66;
    v46 = v67;
    *(_QWORD *)(v1 + 56) = v68;
    *(_QWORD *)(v1 + 64) = v46;
    *(_QWORD *)(v1 + 72) = v34;
    *(_QWORD *)(v1 + 80) = v36;
    swift_bridgeObjectRelease();
    v47 = v64;
    v48 = v57;
    *v39 = v65;
    v39[1] = v48;
    sub_23F6F594C(v1, v47, type metadata accessor for ContextProtoEntityMatch);
    v49 = sub_23FAD7500();
    sub_23F78F1B0(v49);
  }
LABEL_9:
  sub_23F70D684();
}

void ContextProtoMatchProperties.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  char v21;

  sub_23F6B5220();
  v2 = v1;
  sub_23F6916B8((uint64_t *)&unk_256EA8FA0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B573C();
  sub_23F6916B8(&qword_256EA2ED0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F693EB0();
  v5 = sub_23FB2DD3C();
  v7 = v6;
  v8 = sub_23FB2DD54();
  v10 = v9;
  sub_23FB2DD48();
  sub_23F77D5AC();
  if (!v0)
  {
    v21 = v10 & 1;
    if ((v10 & 1) != 0)
      v8 = 0;
    v11 = v7 & 1;
    if ((v7 & 1) != 0)
      v12 = 0;
    else
      v12 = v5;
    v13 = v2 + *(int *)(sub_23FAD7170() + 24);
    v14 = type metadata accessor for ContextProtoAliasTypes(0);
    sub_23F6B5A8C(v13, v15, v16, v14);
    sub_23F6F0878();
    *(_QWORD *)v2 = v12;
    *(_BYTE *)(v2 + 8) = v11;
    *(_QWORD *)(v2 + 16) = v8;
    *(_BYTE *)(v2 + 24) = v21;
    v17 = sub_23F7D260C();
    sub_23F710E80(v17, v18, v19);
  }
  v20 = sub_23FB2DD60();
  sub_23F78F1B0(v20);
  sub_23F876FC4();
  sub_23F6B5100();
}

#error "23FAD3E00: call analysis failed (funcsize=13)"

void sub_23FAD3E0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _DWORD *v24;
  _DWORD *v25;
  _DWORD *v26;
  _DWORD *v27;
  _DWORD *v28;
  _DWORD *v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  int v36;
  char v37;
  uint64_t v38;
  _BYTE *v39;

  sub_23F6B5220();
  a19 = v22;
  a20 = v23;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v30 = sub_23FAD6D58();
  v32 = *(_QWORD *)(v31(v30) - 8);
  sub_23F6BDE64();
  MEMORY[0x24BDAC7A8](v33);
  v35 = (char *)&a9 - v34;
  sub_23F6D3ECC((uint64_t)&a9 - v34, v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 16));
  v36 = sub_23FAD6F24(*(uint64_t (**)(uint64_t, uint64_t))(v32 + 88));
  if (v36 == *v29)
  {
    v37 = 0;
  }
  else if (v36 == *v27)
  {
    v37 = 1;
  }
  else
  {
    if (v36 != *v25)
    {
      sub_23F779AF8();
      v38 = sub_23F6B5AD4();
      sub_23FAD6770(v38, v39);
      sub_23F6D3BD0(v20);
      sub_23F6D3BD0((uint64_t)v35);
      goto LABEL_8;
    }
    v37 = 2;
  }
  sub_23F7B0990(v20, *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
  *v21 = v37;
LABEL_8:
  sub_23F77DB18();
  sub_23F6B5100();
}

void sub_23FAD3EFC()
{
  ContextProtoEntityMatch.init(handwritten:)();
}

void sub_23FAD3F10()
{
  MatchProperties.init(transcript:)();
}

void sub_23FAD3F24()
{
  ContextProtoMatchProperties.init(handwritten:)();
}

void AliasTypes.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t);
  uint64_t v51;
  uint64_t v52;
  unsigned __int8 *v53;
  char *v54;
  _QWORD v55[33];
  uint64_t v56;

  sub_23F6B5220();
  v6 = v5;
  v8 = v7;
  v55[32] = sub_23F6916B8(&qword_256EBE538);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  v55[16] = (char *)v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v11);
  v55[15] = (char *)v55 - v12;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v13);
  v55[14] = (char *)v55 - v14;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v15);
  v55[13] = (char *)v55 - v16;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6D3D14();
  v55[12] = v18;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v19);
  v55[11] = (char *)v55 - v20;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v21);
  v55[25] = (char *)v55 - v22;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v23);
  v55[10] = (char *)v55 - v24;
  sub_23F6D398C();
  v55[30] = *(_QWORD *)(sub_23FB2DA60() - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F9231E0();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v27);
  v55[9] = (char *)v55 - v28;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F72E2B0();
  MEMORY[0x24BDAC7A8](v30);
  v55[28] = (char *)v55 - v31;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v32);
  v55[23] = (char *)v55 - v33;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F6D3F74();
  MEMORY[0x24BDAC7A8](v35);
  v55[8] = (char *)v55 - v36;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v37);
  v55[7] = (char *)v55 - v38;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v39);
  v55[6] = (char *)v55 - v40;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v41);
  v55[5] = (char *)v55 - v42;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v43);
  sub_23F6D3A70();
  MEMORY[0x24BDAC7A8](v44);
  v55[27] = (char *)v55 - v45;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v46);
  v55[26] = (char *)v55 - v47;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v48);
  sub_23F6B6580();
  v55[22] = v49;
  sub_23F6D3458(&qword_256EA9028, v50, MEMORY[0x24BE57128]);
  sub_23FB2FD28();
  v55[1] = v6;
  v51 = *v6;
  v52 = *(_QWORD *)(*v6 + 16);
  v55[0] = v51;
  if (v52)
  {
    v55[4] = v0;
    v53 = (unsigned __int8 *)(v51 + 32);
    swift_bridgeObjectRetain();
    v55[29] = v8;
    v55[24] = v3;
    v55[20] = v4;
    v55[21] = v2;
    v55[3] = v1;
    v54 = (char *)&loc_23FAD42B0 + 4 * byte_23FB91F23[*v53];
    v55[31] = v53 + 1;
    __asm { BR              X9 }
  }
  swift_bridgeObjectRetain();
  sub_23F77E0D4(type metadata accessor for ContextProtoAliasTypes, (uint64_t)&v56);
  sub_23F77DE3C();
  sub_23F6B5100();
}

void sub_23FAD4A58()
{
  AliasTypes.init(transcript:)();
}

void ContextProtoAliasTypes.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_23F6B5220();
  sub_23FAD7304();
  v3 = v2;
  v4 = sub_23FB2DA60();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BE57108];
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23F6B51D0();
  type metadata accessor for ContextProtoAliasTypes(v7);
  sub_23F6F0BB0();
  v8 = MEMORY[0x24BEE4AF8];
  *v3 = MEMORY[0x24BEE4AF8];
  sub_23FB2DA0C();
  sub_23F6D3458(&qword_256EBE540, v5, MEMORY[0x24BE57120]);
  v9 = sub_23FAD6798();
  v10 = *(void (**)(uint64_t, uint64_t))(v0 + 8);
  sub_23FAD6814();
  if ((v9 & 1) != 0)
  {
    sub_23F753FD8();
    v8 = v11;
    v12 = *(_QWORD *)(v11 + 16);
    v9 = v12 + 1;
    if (v12 >= *(_QWORD *)(v11 + 24) >> 1)
    {
      sub_23FAD66F8();
      v8 = v22;
    }
    sub_23FAD6F58();
    *(_BYTE *)(v13 + 32) = 0;
  }
  sub_23FB2DA54();
  sub_23FAD6798();
  sub_23FAD67F8();
  if ((v9 & 1) != 0)
  {
    if ((sub_23FAD6D98() & 1) == 0)
    {
      sub_23FAD6710();
      v8 = v23;
    }
    sub_23FAD6A24();
    if (v14)
    {
      sub_23FAD66F8();
      v8 = v24;
    }
    sub_23FAD6F58();
    *(_BYTE *)(v15 + 32) = 1;
  }
  sub_23FB2DA30();
  sub_23FAD6798();
  sub_23FAD67F8();
  if ((v9 & 1) != 0)
  {
    if ((sub_23FAD6D98() & 1) == 0)
    {
      sub_23FAD6710();
      v8 = v25;
    }
    sub_23FAD6A24();
    if (v14)
    {
      sub_23FAD66F8();
      v8 = v26;
    }
    sub_23FAD6F58();
    *(_BYTE *)(v16 + 32) = 2;
  }
  sub_23FB2DA24();
  sub_23FAD6798();
  sub_23FAD67F8();
  if ((v9 & 1) != 0)
  {
    if ((sub_23FAD6D98() & 1) == 0)
    {
      sub_23FAD6710();
      v8 = v27;
    }
    sub_23FAD6A24();
    if (v14)
    {
      sub_23FAD66F8();
      v8 = v28;
    }
    sub_23FAD6F58();
    *(_BYTE *)(v17 + 32) = 3;
  }
  sub_23FB2DA48();
  sub_23FAD6798();
  sub_23FAD67F8();
  if ((v9 & 1) != 0)
  {
    if ((sub_23FAD6D98() & 1) == 0)
    {
      sub_23FAD6710();
      v8 = v29;
    }
    sub_23FAD6A24();
    if (v14)
    {
      sub_23FAD66F8();
      v8 = v30;
    }
    sub_23FAD6F58();
    *(_BYTE *)(v18 + 32) = 4;
  }
  sub_23FB2DA3C();
  sub_23FAD6798();
  sub_23FAD67F8();
  if ((v9 & 1) != 0)
  {
    if ((sub_23FAD6D98() & 1) == 0)
    {
      sub_23FAD6710();
      v8 = v31;
    }
    sub_23FAD6A24();
    if (v14)
    {
      sub_23FAD66F8();
      v8 = v32;
    }
    sub_23FAD6F58();
    *(_BYTE *)(v19 + 32) = 5;
  }
  sub_23FB2DA18();
  v20 = sub_23FAD6798();
  sub_23FAD6814();
  if ((v20 & 1) != 0)
  {
    if ((sub_23FAD6D98() & 1) == 0)
    {
      sub_23FAD6710();
      v8 = v33;
    }
    v21 = *(_QWORD *)(v8 + 16);
    if (v21 >= *(_QWORD *)(v8 + 24) >> 1)
    {
      sub_23F753FD8();
      v8 = v34;
    }
    *(_QWORD *)(v8 + 16) = v21 + 1;
    *(_BYTE *)(v8 + v21 + 32) = 6;
  }
  v10(v1, v4);
  swift_bridgeObjectRelease();
  *v3 = v8;
  sub_23F6B5100();
}

void sub_23FAD4D3C()
{
  ContextProtoAliasTypes.init(handwritten:)();
}

uint64_t sub_23FAD4D50(char *a1, uint64_t a2, uint64_t a3)
{
  return sub_23FACA554(a1, a2, a3, (uint64_t (*)(char *))EntityMatcherType.init(transcript:));
}

uint64_t sub_23FAD4D6C()
{
  return ContextProtoEntityMatcherType.init(handwritten:)();
}

void QueryDecorationInput.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  sub_23F6B5220();
  v5 = v2;
  v7 = v6;
  v8 = sub_23FAD7180();
  v9 = *(_QWORD *)(v8 - 8);
  v75 = v8;
  v76 = v9;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v74 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v12);
  v73 = (char *)&v53 - v13;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v14);
  v72 = (uint64_t)&v53 - v15;
  v16 = sub_23FAD6EDC();
  v79 = *(_QWORD *)(v16 - 8);
  v80 = v16;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v17);
  v71 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v19);
  v78 = (char *)&v53 - v20;
  sub_23F6D398C();
  v21 = sub_23FB2E204();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F6B5F6C();
  v24 = *(_QWORD *)v7;
  v25 = *(_QWORD *)(v7 + 8);
  v26 = *(_QWORD *)(v7 + 48);
  v27 = *(unsigned __int8 *)(v7 + 16);
  v68 = *(_QWORD *)(v7 + 40);
  v69 = v24;
  if (v27)
  {
    if (v27 == 1)
    {
      swift_bridgeObjectRetain();
      sub_23F77E1FC();
      sub_23FB2DA54();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_23F77E1FC();
      sub_23FB2DA30();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_23F77E1FC();
    sub_23FB2DA0C();
  }
  sub_23F75E68C(v3, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
  v28 = *(unsigned __int8 *)(v7 + 64);
  if (*(_BYTE *)(v7 + 64))
    v29 = 0;
  else
    v29 = *(_QWORD *)(v7 + 56);
  v30 = *(unsigned __int8 *)(v7 + 80);
  if (*(_BYTE *)(v7 + 80))
    v31 = 0;
  else
    v31 = *(_QWORD *)(v7 + 72);
  v32 = *(unsigned __int8 *)(v7 + 96);
  if (*(_BYTE *)(v7 + 96))
    v33 = 0;
  else
    v33 = *(_QWORD *)(v7 + 88);
  v34 = *(unsigned __int8 *)(v7 + 97);
  if (*(_BYTE *)(v7 + 32) != 1)
    goto LABEL_28;
  v60 = v4;
  v35 = *(_QWORD *)(v7 + 24);
  v36 = *(_QWORD *)(v35 + 16);
  v37 = MEMORY[0x24BEE4AF8];
  v67 = v28;
  v65 = v31;
  v66 = v29;
  v63 = v32;
  v64 = v30;
  v62 = v33;
  v61 = v34;
  if (!v36)
  {
LABEL_27:
    sub_23F7A3638(v37);
LABEL_28:
    v52 = sub_23FB2E1A4();
    sub_23F77DD2C(v52, type metadata accessor for ContextProtoQueryDecorationInput);
    goto LABEL_29;
  }
  v56 = v25;
  v54 = v21;
  v57 = v26;
  v58 = v3;
  v53 = v1;
  v59 = v7;
  v81 = MEMORY[0x24BEE4AF8];
  v38 = v35;
  swift_bridgeObjectRetain();
  sub_23FAD6860();
  sub_23F711E98();
  sub_23FAD69B8();
  v55 = v38;
  v40 = v38 + v39;
  v70 = *(_QWORD *)(v41 + 72);
  v42 = v71;
  while (1)
  {
    sub_23FAD73E0(v72, v40);
    v43 = sub_23F78F534();
    sub_23FAD73E0(v43, v44);
    v45 = sub_23F6B619C();
    sub_23FAD73E0(v45, v46);
    sub_23FB2EDC8();
    if (v5)
      break;
    v77 = 0;
    sub_23FAD6EAC();
    v47 = *(void (**)(char *, char *, uint64_t))(v79 + 32);
    v47(v78, v42, v80);
    sub_23FAD74B8();
    v37 = v81;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23FAD71B0();
      sub_23F711E98();
      v37 = v81;
    }
    v49 = *(_QWORD *)(v37 + 16);
    v48 = *(_QWORD *)(v37 + 24);
    if (v49 >= v48 >> 1)
    {
      sub_23F77DA04(v48);
      sub_23F711E98();
      v37 = v81;
    }
    *(_QWORD *)(v37 + 16) = v49 + 1;
    sub_23FAD6830();
    ((void (*)(unint64_t))v47)(v51 + *(_QWORD *)(v50 + 72) * v49);
    v81 = v37;
    v40 += v70;
    --v36;
    v5 = v77;
    if (!v36)
    {
      sub_23F77DE3C();
      goto LABEL_27;
    }
  }
  sub_23FAD6EAC();
  sub_23FAD74B8();
  sub_23F77DE3C();
  sub_23F77DA7C();
  sub_23F77DE3C();
  sub_23F6D3508(v59, type metadata accessor for ContextProtoQueryDecorationInput);
  sub_23F77DE3C();
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v58, v54);
LABEL_29:
  sub_23F6B5100();
}

void QueryDecorationCaller.init(transcript:)(_BYTE *a1)
{
  if (*a1)
  {
    if (*a1 == 1)
      sub_23FB2DA54();
    else
      sub_23FB2DA30();
  }
  else
  {
    sub_23FB2DA0C();
  }
  sub_23F878AAC();
}

void sub_23FAD51DC(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  QueryDecorationInput.init(transcript:)();
  if (!v1)
    *a1 = v3;
  sub_23F878AAC();
}

void ContextProtoQueryDecorationInput.init(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  sub_23F6B5220();
  sub_23F78F298();
  sub_23FB2E204();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B53AC();
  v17 = sub_23FB2E1B0();
  v19 = v18;
  v20 = sub_23FB2E1C8();
  v22 = v21;
  sub_23FB2E1BC();
  ContextProtoQueryDecorationCaller.init(handwritten:)();
  if (v15)
  {
    sub_23F6B644C();

    sub_23F6B6090();
  }
  else
  {
    v43 = v20;
    v45 = v17;
    v23 = sub_23FB2E180();
    v25 = v24;
    if ((v24 & 1) != 0)
      v26 = 0;
    else
      v26 = v23;
    v44 = v26;
    v27 = sub_23FB2E174();
    v29 = v28;
    if ((v28 & 1) != 0)
      v30 = 0;
    else
      v30 = v27;
    v42 = v30;
    v31 = sub_23FB2E198();
    v33 = v32;
    if ((v32 & 1) != 0)
      v34 = 0;
    else
      v34 = v31;
    v41 = v34;
    v35 = sub_23FB2E168();
    if (v35)
      v36 = v35;
    else
      v36 = MEMORY[0x24BEE4B08];
    v40 = sub_23FAC3F3C(v36);
    sub_23F717D54();
    v37 = sub_23FB2E168();
    if (v37)
      sub_23F717D54();
    v39 = v37 != 0;
    v38 = sub_23FB2E18C();
    type metadata accessor for ContextProtoQueryDecorationInput(0);
    sub_23F6F0878();

    *(_QWORD *)v13 = v45;
    *(_QWORD *)(v13 + 8) = v19;
    *(_QWORD *)(v13 + 40) = v43;
    *(_QWORD *)(v13 + 48) = v22;
    *(_BYTE *)(v13 + 16) = a13;
    *(_QWORD *)(v13 + 56) = v44;
    *(_BYTE *)(v13 + 64) = v25 & 1;
    *(_QWORD *)(v13 + 72) = v42;
    *(_BYTE *)(v13 + 80) = v29 & 1;
    *(_QWORD *)(v13 + 88) = v41;
    *(_BYTE *)(v13 + 96) = v33 & 1;
    *(_QWORD *)(v13 + 24) = v40;
    *(_BYTE *)(v13 + 32) = v39;
    *(_BYTE *)(v13 + 97) = v38;
  }
  sub_23F876FC4();
  sub_23F6B5100();
}

void ContextProtoQueryDecorationCaller.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  char v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  _BYTE *v17;

  sub_23F6B5220();
  v3 = v2;
  v5 = v4;
  sub_23FB2E204();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BE57C40];
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5F6C();
  v9 = sub_23F72E3F8();
  sub_23F6D3ECC(v9, v10, v11);
  sub_23FB2DA0C();
  sub_23F6D3458(&qword_256EBE550, v6, MEMORY[0x24BE57C50]);
  v12 = sub_23FAD698C();
  sub_23F878E04(v1);
  if ((v12 & 1) != 0)
  {
    sub_23F878E04(v3);
    sub_23F878E04(v0);
    v13 = 0;
  }
  else
  {
    sub_23FB2DA54();
    v14 = sub_23FAD698C();
    sub_23F878E04(v1);
    if ((v14 & 1) != 0)
    {
      sub_23F878E04(v3);
      sub_23F878E04(v0);
      v13 = 1;
    }
    else
    {
      sub_23FB2DA30();
      v15 = sub_23FAD698C();
      sub_23F878E04(v1);
      sub_23F878E04(v0);
      if ((v15 & 1) == 0)
      {
        sub_23F779AF8();
        v16 = sub_23F6B5AD4();
        sub_23FAD6770(v16, v17);
        sub_23F878E04(v3);
        goto LABEL_8;
      }
      sub_23F878E04(v3);
      v13 = 2;
    }
  }
  *v5 = v13;
LABEL_8:
  sub_23F77DB18();
  sub_23F6B5100();
}

void sub_23FAD5500(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  ContextProtoQueryDecorationInput.init(handwritten:)(*a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

uint64_t sub_23FAD5518(char *a1, uint64_t a2, uint64_t a3)
{
  return sub_23FACA554(a1, a2, a3, (uint64_t (*)(char *))QueryDecorationCaller.init(transcript:));
}

void sub_23FAD5534()
{
  ContextProtoQueryDecorationCaller.init(handwritten:)();
}

void QueryDecorationOutput.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t DecorationOutput;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  sub_23F6B5220();
  v3 = v2;
  sub_23F6916B8(&qword_256EA2DD0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B5268();
  sub_23F6916B8(&qword_256EA71F8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F693EB0();
  if (*(_BYTE *)(v3 + 8) == 1)
  {
    v6 = swift_bridgeObjectRetain();
    sub_23F7741B0(v6, v7, v8, v9, v10, v11, v12, v13, v53, v54);
    if (v1)
    {
      sub_23F77DD2C(v14, type metadata accessor for ContextProtoQueryDecorationOutput);
      goto LABEL_26;
    }
  }
  if (*(_BYTE *)(v3 + 24) == 1)
  {
    v15 = swift_bridgeObjectRetain();
    sub_23F773E44(v15, v16, v17, v18, v19, v20, v21, v22);
    if (v1)
    {
      sub_23F77DD2C(v23, type metadata accessor for ContextProtoQueryDecorationOutput);
LABEL_25:
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
  }
  if (*(_BYTE *)(v3 + 40) == 1)
  {
    v24 = swift_bridgeObjectRetain();
    sub_23F773E44(v24, v25, v26, v27, v28, v29, v30, v31);
    if (v1)
    {
      sub_23F77DD2C(v32, type metadata accessor for ContextProtoQueryDecorationOutput);
      sub_23F6B644C();
      goto LABEL_25;
    }
  }
  if (*(_BYTE *)(v3 + 56) == 1)
    swift_bridgeObjectRetain();
  if (*(_BYTE *)(v3 + 72) == 1)
    swift_bridgeObjectRetain();
  if (*(_BYTE *)(v3 + 88) == 1)
  {
    v55 = *(_QWORD *)(v3 + 80);
    swift_bridgeObjectRetain();
  }
  else
  {
    v55 = 0;
  }
  if (*(_BYTE *)(v3 + 104) == 1)
    sub_23F6B90D8();
  if (*(_BYTE *)(v3 + 120) == 1)
    sub_23F6B54F8();
  if (*(_BYTE *)(v3 + 136) == 1)
    sub_23F77E1FC();
  DecorationOutput = type metadata accessor for ContextProtoQueryDecorationOutput(0);
  sub_23FAD6F30(v3 + *(int *)(DecorationOutput + 96), v34, &qword_256EA2DD0);
  v35 = sub_23FAD73F4();
  sub_23F77AA44(v35, v36, v37, v38, v39, v40, v41, v42);
  if (v1)
  {
    sub_23F77DD2C(v43, type metadata accessor for ContextProtoQueryDecorationOutput);
    sub_23F6B644C();
    sub_23F6B6A48();
    sub_23F6B6E44();
    sub_23F693DFC();
    sub_23F717D54();
    swift_bridgeObjectRelease();
    sub_23F7D2F10();
    sub_23F75029C();
    goto LABEL_25;
  }
  if (*(_BYTE *)(v3 + 152) == 1)
  {
    v44 = swift_bridgeObjectRetain();
    sub_23F778C58(v44, v45, v46, v47, v48, v49, v50, v51, v0, v55);
  }
  v52 = sub_23FB2E288();
  sub_23F77DD2C(v52, type metadata accessor for ContextProtoQueryDecorationOutput);
LABEL_26:
  sub_23F77DB18();
  sub_23F6B5100();
}

void sub_23FAD5850(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  QueryDecorationOutput.init(transcript:)();
  if (!v1)
    *a1 = v3;
  sub_23F878AAC();
}

void ContextProtoQueryDecorationOutput.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  sub_23F6B5220();
  v4 = v3;
  v6 = v5;
  sub_23F6916B8(&qword_256EA71F8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B5268();
  sub_23F6916B8(&qword_256EA2DD0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F878D94();
  sub_23FB2E294();
  v10 = MEMORY[0x24BEE4AF8];
  sub_23FACBC98();
  if (v0)
  {

  }
  else
  {
    v12 = v11;
    v13 = sub_23FB2E294();
    if (v13)
      sub_23F6B6E44();
    v14 = sub_23FB2E21C();
    if (!v14)
      v14 = v10;
    sub_23FAD7310(v14, (uint64_t)type metadata accessor for ContextProtoRetrievedContext, (uint64_t)MEMORY[0x24BE577B0], (uint64_t)sub_23F711370, (uint64_t)ContextProtoRetrievedContext.init(context:), v15, v16, v17, v54, v57);
    v74 = v6;
    v75 = v18;
    v19 = sub_23FB2E21C();
    if (v19)
      sub_23F6B644C();
    v73 = v19;
    v20 = sub_23FB2E228();
    if (!v20)
      v20 = v10;
    sub_23FAD7310(v20, (uint64_t)type metadata accessor for ContextProtoRetrievedContext, (uint64_t)MEMORY[0x24BE577B0], (uint64_t)sub_23F711370, (uint64_t)ContextProtoRetrievedContext.init(context:), v21, v22, v23, v55, v58);
    v67 = v12;
    v63 = v13;
    v71 = v24;
    v25 = sub_23FB2E228();
    if (v25)
      sub_23F6B6E44();
    v72 = v1;
    v62 = v25;
    v26 = sub_23FB2E258();
    if (v26)
      v27 = v26;
    else
      v27 = v10;
    v70 = v27;
    v28 = sub_23FB2E258();
    if (v28)
      sub_23F6B5908();
    v61 = v28;
    v29 = sub_23FB2E240();
    if (v29)
      v30 = v29;
    else
      v30 = v10;
    v69 = v30;
    v31 = sub_23FB2E240();
    if (v31)
      sub_23F6B6090();
    v60 = v31;
    v32 = sub_23FB2E24C();
    v33 = v10;
    if (v32)
      v34 = v32;
    else
      v34 = v10;
    v68 = v34;
    v35 = sub_23FB2E24C();
    if (v35)
      sub_23F717D54();
    v36 = sub_23FB2E234();
    if (v36)
      v37 = v36;
    else
      v37 = v33;
    v66 = v37;
    v38 = sub_23FB2E234();
    if (v38)
      sub_23F6B6E44();
    v39 = sub_23FB2E27C();
    if (v39)
      v40 = v39;
    else
      v40 = v33;
    v65 = v40;
    v41 = sub_23FB2E27C();
    if (v41)
      sub_23F6B5908();
    v42 = sub_23FB2E270();
    if (v42)
      v43 = v42;
    else
      v43 = v33;
    v64 = v43;
    v44 = sub_23FB2E270();
    if (v44)
      sub_23F6B6090();
    sub_23FB2E210();
    sub_23FAD73F4();
    sub_23F77CB14();
    v45 = sub_23FB2E264();
    if (!v45)
      v45 = v33;
    sub_23FAD7310(v45, (uint64_t)type metadata accessor for ContextProtoDynamicEnumerationEntity, (uint64_t)MEMORY[0x24BE57D40], (uint64_t)sub_23F711A78, (uint64_t)ContextProtoDynamicEnumerationEntity.init(handwritten:), v46, v47, v48, v56, v59);
    v50 = v49;
    v51 = sub_23FB2E264();
    if (v51)
      sub_23F756640();
    sub_23FAD74AC(v72);
    ContextProtoQueryDecorationOutput.init(spans:spansIsPresent:requiredContext:requiredContextIsPresent:utteranceContext:utteranceContextIsPresent:originalRankedTools:originalRankedToolsIsPresent:adjustedRankedTools:adjustedRankedToolsIsPresent:originalRankedSpans:originalRankedSpansIsPresent:adjustedRankedSpans:adjustedRankedSpansIsPresent:originalRankedUtteranceContext:originalRankedUtteranceContextIsPresent:adjustedRankedUtteranceContext:adjustedRankedUtteranceContextIsPresent:toolRetrievalResponse:dynamicEnumerationEntities:dynamicEnumerationEntitiesIsPresent:)(v67, v63 != 0, v75, v73 != 0, v71, v62 != 0, v70, v61 != 0, v74, v69, v60 != 0, v68, v35 != 0, v66, v38 != 0, v65, v41 != 0, v64, v44 != 0,
      v2,
      v50,
      v51 != 0);

    v52 = sub_23F6B6AAC();
    sub_23F6B4F84(v52, v53);
  }
  sub_23F77DB18();
  sub_23F6B5100();
}

void sub_23FAD5CC4()
{
  ContextProtoQueryDecorationOutput.init(handwritten:)();
}

unint64_t sub_23FAD5CE0()
{
  unint64_t result;

  result = qword_256EBE558;
  if (!qword_256EBE558)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextConversion.Error, &type metadata for ContextConversion.Error);
    atomic_store(result, (unint64_t *)&qword_256EBE558);
  }
  return result;
}

_UNKNOWN **sub_23FAD5D1C()
{
  return &protocol witness table for ContextProtoRetrievedContext;
}

void sub_23FAD5D28(uint64_t a1)
{
  uint64_t v2;

  sub_23F6D3458(&qword_256EBE578, (uint64_t (*)(uint64_t))MEMORY[0x24BE577B0], (uint64_t)&protocol conformance descriptor for RetrievedContext);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FAD5D64()
{
  sub_23F6D3458(&qword_256EA2DB0, type metadata accessor for ContextProtoRetrievedContext, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedContext);
}

_UNKNOWN **sub_23FAD5D90()
{
  return &protocol witness table for ContextProtoContextMetadata;
}

void sub_23FAD5D9C(uint64_t a1)
{
  uint64_t v2;

  sub_23F6D3458(&qword_256EBE5E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE576C8], (uint64_t)&protocol conformance descriptor for ContextMetadata);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FAD5DD8()
{
  sub_23F6D3458(&qword_256EA2F68, type metadata accessor for ContextProtoContextMetadata, (uint64_t)&protocol conformance descriptor for ContextProtoContextMetadata);
}

_UNKNOWN **sub_23FAD5E04()
{
  return &protocol witness table for ContextProtoStructuredContext;
}

void sub_23FAD5E10(uint64_t a1)
{
  uint64_t v2;

  sub_23F6D3458(&qword_256EBE658, (uint64_t (*)(uint64_t))MEMORY[0x24BE57B20], (uint64_t)&protocol conformance descriptor for StructuredContext);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FAD5E4C()
{
  sub_23F6D3458(&qword_256EA2FC0, type metadata accessor for ContextProtoStructuredContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContext);
}

_UNKNOWN **sub_23FAD5E78()
{
  return &protocol witness table for ContextProtoConfidence;
}

void sub_23FAD5E84(uint64_t a1)
{
  uint64_t v2;

  sub_23F6D3458(&qword_256EBE6C8, (uint64_t (*)(uint64_t))MEMORY[0x24BE57150], (uint64_t)&protocol conformance descriptor for Confidence);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FAD5EC0()
{
  sub_23F6D3458(&qword_256EA2FA8, type metadata accessor for ContextProtoConfidence, (uint64_t)&protocol conformance descriptor for ContextProtoConfidence);
}

_UNKNOWN **sub_23FAD5EEC()
{
  return &protocol witness table for ContextProtoBoundingBox;
}

void sub_23FAD5EF8(uint64_t a1)
{
  uint64_t v2;

  sub_23F6D3458(&qword_256EBE768, (uint64_t (*)(uint64_t))MEMORY[0x24BE57230], (uint64_t)&protocol conformance descriptor for BoundingBox);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FAD5F34()
{
  sub_23F6D3458(&qword_256EA2F80, type metadata accessor for ContextProtoBoundingBox, (uint64_t)&protocol conformance descriptor for ContextProtoBoundingBox);
}

_UNKNOWN **sub_23FAD5F60()
{
  return &protocol witness table for ContextProtoSurroundingText;
}

void sub_23FAD5F6C(uint64_t a1)
{
  uint64_t v2;

  sub_23F6D3458(&qword_256EBE7D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE57720], (uint64_t)&protocol conformance descriptor for SurroundingText);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FAD5FA8()
{
  sub_23F6D3458(&qword_256EA2D08, type metadata accessor for ContextProtoSurroundingText, (uint64_t)&protocol conformance descriptor for ContextProtoSurroundingText);
}

_UNKNOWN **sub_23FAD5FD4()
{
  return &protocol witness table for ContextProtoRetrievedTool.Definition;
}

void sub_23FAD5FE0(uint64_t a1)
{
  uint64_t v2;

  sub_23F6D3458(&qword_256EBE878, (uint64_t (*)(uint64_t))MEMORY[0x24BE57570], (uint64_t)&protocol conformance descriptor for RetrievedTool.Definition);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FAD601C()
{
  sub_23F6D3458(&qword_256EA30A8, type metadata accessor for ContextProtoRetrievedTool.Definition, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool.Definition);
}

_UNKNOWN **sub_23FAD6048()
{
  return &protocol witness table for ContextProtoRetrievedTool;
}

void sub_23FAD6054(uint64_t a1)
{
  uint64_t v2;

  sub_23F6D3458(&qword_256EBE930, (uint64_t (*)(uint64_t))MEMORY[0x24BE57608], (uint64_t)&protocol conformance descriptor for RetrievedTool);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FAD6090()
{
  sub_23F6D3458(&qword_256EA2E80, type metadata accessor for ContextProtoRetrievedTool, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool);
}

_UNKNOWN **sub_23FAD60BC()
{
  return &protocol witness table for ContextProtoToolQueryOutput;
}

void sub_23FAD60C8(uint64_t a1)
{
  uint64_t v2;

  sub_23F6D3458(&qword_256EBE988, (uint64_t (*)(uint64_t))type metadata accessor for ToolQuery.Output, (uint64_t)&protocol conformance descriptor for ToolQuery.Output);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FAD6104()
{
  sub_23F6D3458(&qword_256EA30F8, type metadata accessor for ContextProtoToolQueryOutput, (uint64_t)&protocol conformance descriptor for ContextProtoToolQueryOutput);
}

_UNKNOWN **sub_23FAD6130()
{
  return &protocol witness table for ContextProtoQueryDecorationToolRetrievalResponse;
}

void sub_23FAD613C(uint64_t a1)
{
  uint64_t v2;

  sub_23F6D3458(&qword_256EBEA10, (uint64_t (*)(uint64_t))MEMORY[0x24BE57E10], (uint64_t)&protocol conformance descriptor for QueryDecorationToolRetrievalResponse);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FAD6178()
{
  sub_23F6D3458(&qword_256EA3110, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationToolRetrievalResponse);
}

_UNKNOWN **sub_23FAD61A4()
{
  return &protocol witness table for ContextProtoDynamicEnumerationEntity;
}

void sub_23FAD61B0(uint64_t a1)
{
  uint64_t v2;

  sub_23F6D3458(&qword_256EBEA80, (uint64_t (*)(uint64_t))MEMORY[0x24BE57D40], (uint64_t)&protocol conformance descriptor for DynamicEnumerationEntity);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FAD61EC()
{
  sub_23F6D3458(&qword_256EA2DC0, type metadata accessor for ContextProtoDynamicEnumerationEntity, (uint64_t)&protocol conformance descriptor for ContextProtoDynamicEnumerationEntity);
}

_UNKNOWN **sub_23FAD6218()
{
  return &protocol witness table for ContextProtoToolRetrievalType;
}

void sub_23FAD6224(uint64_t a1)
{
  uint64_t v2;

  sub_23F6D3458(&qword_256EBEAF0, (uint64_t (*)(uint64_t))MEMORY[0x24BE57B50], (uint64_t)&protocol conformance descriptor for ToolRetrievalType);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FAD6260()
{
  sub_23F6D3458(&qword_256EA2E88, type metadata accessor for ContextProtoToolRetrievalType, (uint64_t)&protocol conformance descriptor for ContextProtoToolRetrievalType);
}

_UNKNOWN **sub_23FAD628C()
{
  return &protocol witness table for ContextProtoSampleInvocation;
}

void sub_23FAD6298(uint64_t a1)
{
  uint64_t v2;

  sub_23F6D3458(&qword_256EBEB60, (uint64_t (*)(uint64_t))MEMORY[0x24BE577F0], (uint64_t)&protocol conformance descriptor for SampleInvocation);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FAD62D4()
{
  sub_23F6D3458(&qword_256EA2E18, type metadata accessor for ContextProtoSampleInvocation, (uint64_t)&protocol conformance descriptor for ContextProtoSampleInvocation);
}

_UNKNOWN **sub_23FAD6300()
{
  return &protocol witness table for ContextProtoSpanMatchedEntity;
}

void sub_23FAD630C(uint64_t a1)
{
  uint64_t v2;

  sub_23F6D3458(&qword_256EBEBD0, (uint64_t (*)(uint64_t))MEMORY[0x24BE578B8], (uint64_t)&protocol conformance descriptor for SpanMatchedEntity);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FAD6348()
{
  sub_23F6D3458(&qword_256EA2DB8, type metadata accessor for ContextProtoSpanMatchedEntity, (uint64_t)&protocol conformance descriptor for ContextProtoSpanMatchedEntity);
}

_UNKNOWN **sub_23FAD6374()
{
  return &protocol witness table for ContextProtoEntityMatch;
}

void sub_23FAD6380(uint64_t a1)
{
  uint64_t v2;

  sub_23F6D3458(&qword_256EBEC40, (uint64_t (*)(uint64_t))MEMORY[0x24BE573C8], (uint64_t)&protocol conformance descriptor for EntityMatch);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FAD63BC()
{
  sub_23F6D3458(&qword_256EA2E98, type metadata accessor for ContextProtoEntityMatch, (uint64_t)&protocol conformance descriptor for ContextProtoEntityMatch);
}

_UNKNOWN **sub_23FAD63E8()
{
  return &protocol witness table for ContextProtoMatchProperties;
}

void sub_23FAD63F4(uint64_t a1)
{
  uint64_t v2;

  sub_23F6D3458(&qword_256EBECB0, (uint64_t (*)(uint64_t))MEMORY[0x24BE576F8], (uint64_t)&protocol conformance descriptor for MatchProperties);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FAD6430()
{
  sub_23F6D3458(&qword_256EA3148, type metadata accessor for ContextProtoMatchProperties, (uint64_t)&protocol conformance descriptor for ContextProtoMatchProperties);
}

_UNKNOWN **sub_23FAD645C()
{
  return &protocol witness table for ContextProtoAliasTypes;
}

void sub_23FAD6468(uint64_t a1)
{
  uint64_t v2;

  sub_23F6D3458(&qword_256EBED20, (uint64_t (*)(uint64_t))MEMORY[0x24BE57108], (uint64_t)&protocol conformance descriptor for AliasTypes);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FAD64A4()
{
  sub_23F6D3458(&qword_256EA3160, type metadata accessor for ContextProtoAliasTypes, (uint64_t)&protocol conformance descriptor for ContextProtoAliasTypes);
}

_UNKNOWN **sub_23FAD64D0()
{
  return &protocol witness table for ContextProtoQueryDecorationInput;
}

void sub_23FAD64DC(uint64_t a1)
{
  uint64_t v2;

  sub_23F6D3458(&qword_256EBEDC0, MEMORY[0x24BE57BD8], (uint64_t)&protocol conformance descriptor for QueryDecorationInput);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FAD6518()
{
  sub_23F6D3458(&qword_256EA3060, type metadata accessor for ContextProtoQueryDecorationInput, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationInput);
}

_UNKNOWN **sub_23FAD6544()
{
  return &protocol witness table for ContextProtoQueryDecorationOutput;
}

void sub_23FAD6550(uint64_t a1)
{
  uint64_t v2;

  sub_23F6D3458(&qword_256EBEE60, MEMORY[0x24BE57CD8], (uint64_t)&protocol conformance descriptor for QueryDecorationOutput);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FAD658C()
{
  sub_23F6D3458(&qword_256EA3048, type metadata accessor for ContextProtoQueryDecorationOutput, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationOutput);
}

uint64_t dispatch thunk of ConvertibleFromContextProtocol.init(context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

ValueMetadata *type metadata accessor for ContextConversion()
{
  return &type metadata for ContextConversion;
}

uint64_t storeEnumTagSinglePayload for ContextConversion.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23FAD662C + 4 * byte_23FB91F2F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23FAD6660 + 4 * byte_23FB91F2A[v4]))();
}

uint64_t sub_23FAD6660(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FAD6668(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FAD6670);
  return result;
}

uint64_t sub_23FAD667C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FAD6684);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23FAD6688(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FAD6690(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContextConversion.Error()
{
  return &type metadata for ContextConversion.Error;
}

uint64_t sub_23FAD66DC(uint64_t a1)
{
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v1);
}

void sub_23FAD66F8()
{
  sub_23F753FD8();
}

void sub_23FAD6710()
{
  sub_23F753FD8();
}

uint64_t sub_23FAD6744()
{
  char v0;
  uint64_t v1;
  uint64_t (*v2)(_BYTE *, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;

  v5 = *(_BYTE **)(v4 - 152);
  v6 = &v5[*(int *)(*(_QWORD *)(v4 - 96) + 48)];
  *v5 = v0;
  return v2(v6, v3, v1);
}

uint64_t sub_23FAD6768(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23FAD6770(uint64_t a1, _BYTE *a2)
{
  *a2 = 0;
  return swift_willThrow();
}

uint64_t sub_23FAD677C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v1 - 144))(0, *(_QWORD *)(v0 + 16) + 1, 1);
}

uint64_t sub_23FAD6798()
{
  return sub_23FB2F704();
}

uint64_t sub_23FAD67A8@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_23FAD67C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 104))(v1, v2, a1);
}

uint64_t sub_23FAD67E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 - 144))(a1, a2, 1);
}

uint64_t sub_23FAD67EC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23FAD67F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t sub_23FAD6808()
{
  return sub_23FB2F11C();
}

uint64_t sub_23FAD6814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t sub_23FAD6860()
{
  return 0;
}

uint64_t sub_23FAD6874(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void sub_23FAD687C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v0 + 16) = v1;
  sub_23F6F594C(v3, v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v4 - 112) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v4 - 112) + 80))+ *(_QWORD *)(*(_QWORD *)(v4 - 112) + 72) * v2, *(uint64_t (**)(_QWORD))(v4 - 104));
}

uint64_t sub_23FAD68A8(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23FAD68B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(_QWORD, unint64_t, uint64_t))(v0 + 16))(*(_QWORD *)(v4 - 160), v1+ ((*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80))+ *(_QWORD *)(v0 + 72) * v3, v2);
}

void sub_23FAD68DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 16) = v2;
  sub_23F6F594C(*(_QWORD *)(v3 - 88), v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 112) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 112) + 80))+ *(_QWORD *)(*(_QWORD *)(v3 - 112) + 72) * v1, *(uint64_t (**)(_QWORD))(v3 - 104));
}

uint64_t sub_23FAD6908(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v1);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v2, 1, 1, v1);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_23FAD6950@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v2);
}

uint64_t sub_23FAD6978@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return v1 + a1;
}

uint64_t sub_23FAD698C()
{
  return sub_23FB2F11C();
}

uint64_t sub_23FAD69A0()
{
  return type metadata accessor for TranscriptProtoStatementID(0);
}

uint64_t sub_23FAD69C8(uint64_t result)
{
  BOOL *v1;

  *v1 = (result & 1) == 0;
  return result;
}

void sub_23FAD69D8(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F6F594C(a1, a2, v2);
}

uint64_t sub_23FAD69E0(uint64_t a1)
{
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v1);
}

uint64_t sub_23FAD6A04()
{
  uint64_t v0;

  return v0;
}

void sub_23FAD6A14(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23F6B4F84(v2, a2);
}

uint64_t sub_23FAD6A1C()
{
  return sub_23FB2DC28();
}

uint64_t sub_23FAD6A34()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v1 - 152))(0, *(_QWORD *)(v0 + 16) + 1, 1);
}

uint64_t sub_23FAD6A5C@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 v1;

  return sub_23F77B94C(a1 | ((unint64_t)v1 << 32));
}

uint64_t sub_23FAD6A6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v0, *(_QWORD *)(v4 - 136) + *(_QWORD *)(v1 + 72) * v3, v2);
}

uint64_t sub_23FAD6A88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_23FAD6A98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, a2, 1, v2);
}

uint64_t sub_23FAD6AA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, a2, 1, v2);
}

uint64_t sub_23FAD6AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, a2, 1, *(_QWORD *)(v2 - 344));
}

uint64_t sub_23FAD6AC0(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 - 104) = a2;
  *(_QWORD *)(v5 - 96) = a5;
  return a2(0);
}

void sub_23FAD6ADC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F6B4EC0(a1, a2, v2);
}

uint64_t sub_23FAD6AE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(_QWORD, uint64_t, _QWORD);
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 72) = a1;
  *(_QWORD *)(v3 - 144) = v1;
  return v1(0, v2, 0);
}

uint64_t sub_23FAD6B00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 112) + 16);
  *(_QWORD *)(v3 - 208) = v4;
  return v4(v0, v2, v1);
}

uint64_t sub_23FAD6B1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 112) + 16);
  *(_QWORD *)(v3 - 200) = v4;
  return v4(v0, v1, v2);
}

void sub_23FAD6B38(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F6F594C(a1, a2, v2);
}

uint64_t sub_23FAD6B40()
{
  return type metadata accessor for ContextProtoRetrievedTool.Definition(0);
}

uint64_t sub_23FAD6B48()
{
  return sub_23FB2DE08();
}

void sub_23FAD6B50()
{
  sub_23F7113AC();
}

void sub_23FAD6B68()
{
  sub_23F7116B8();
}

void sub_23FAD6B80()
{
  sub_23F711460();
}

void sub_23FAD6B98()
{
  sub_23F7112BC();
}

void sub_23FAD6BB0()
{
  sub_23F71158C();
}

void sub_23FAD6BC8()
{
  sub_23F71176C();
}

void sub_23FAD6BE0()
{
  sub_23F71185C();
}

void sub_23FAD6BF8()
{
  sub_23F711820();
}

void sub_23FAD6C10()
{
  sub_23F711A3C();
}

void sub_23FAD6C28()
{
  sub_23F71149C();
}

void sub_23FAD6C40()
{
  sub_23F7116B8();
}

void sub_23FAD6C58()
{
  sub_23F711460();
}

void sub_23FAD6C70()
{
  sub_23F7113AC();
}

void sub_23FAD6C88()
{
  sub_23F711604();
}

void sub_23FAD6CA0()
{
  sub_23F71158C();
}

void sub_23FAD6CB8()
{
  sub_23F7112BC();
}

void sub_23FAD6CD0()
{
  sub_23F711AB4();
}

void sub_23FAD6CE8()
{
  sub_23F71167C();
}

void sub_23FAD6D00()
{
  sub_23F71176C();
}

void sub_23FAD6D18()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = v1;
}

void sub_23FAD6D48(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  sub_23F6B4F84(*(_QWORD *)(a2 - 256), a1);
}

void sub_23FAD6D50(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F6F594C(a1, a2, v2);
}

uint64_t sub_23FAD6D58()
{
  return 0;
}

uint64_t sub_23FAD6D6C()
{
  uint64_t v0;

  return v0;
}

void sub_23FAD6D78(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 64) |= v1;
}

uint64_t sub_23FAD6D98()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void sub_23FAD6DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 208) = (char *)&a9 - v9;
}

void sub_23FAD6DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 216) = (char *)&a9 - v9;
}

void sub_23FAD6DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 224) = (char *)&a9 - v9;
}

uint64_t sub_23FAD6DDC@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 128) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

void sub_23FAD6DFC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
}

uint64_t sub_23FAD6E34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 - 256) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FAD6E58()
{
  uint64_t (*v0)(_QWORD, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(*(_QWORD *)(v3 - 152), v1, v2);
}

uint64_t sub_23FAD6E6C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_23FAD6E74()
{
  return sub_23FB2F71C();
}

uint64_t sub_23FAD6E80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 - 216) = a3;
  return sub_23FB2F710();
}

uint64_t sub_23FAD6EA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_23FAD6EAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 128) + 8))(v1, v0);
}

uint64_t sub_23FAD6EDC()
{
  return sub_23FB2EDD4();
}

uint64_t sub_23FAD6EE8()
{
  return sub_23FB2E0C0();
}

uint64_t sub_23FAD6EF0()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(*(_QWORD *)(v3 - 120), v0, v2);
}

void sub_23FAD6F04(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F6B4F58(a1, v3, a3);
}

uint64_t sub_23FAD6F0C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FAD6F18()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FAD6F24@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

void sub_23FAD6F30(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F6B4F58(a1, v3, a3);
}

uint64_t sub_23FAD6F44()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

void sub_23FAD6F58()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = v1;
}

uint64_t sub_23FAD6F74(uint64_t result)
{
  uint64_t v1;
  BOOL *v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 200) = &v2[v1];
  *v2 = (result & 1) == 0;
  return result;
}

uint64_t sub_23FAD6F8C()
{
  unsigned __int8 v0;
  uint64_t v1;

  return sub_23F77B94C(v1 | ((unint64_t)v0 << 32));
}

uint64_t sub_23FAD6FB4()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_23FAD6FC4()
{
  return 0;
}

uint64_t sub_23FAD6FD4()
{
  return sub_23FB2DAA8();
}

uint64_t sub_23FAD6FF4()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(v1 - 96))(v0);
}

uint64_t sub_23FAD7004()
{
  return sub_23FB2ED20();
}

uint64_t sub_23FAD7034()
{
  return sub_23FB2F71C();
}

uint64_t sub_23FAD7044()
{
  return swift_release();
}

void sub_23FAD7084()
{
  TranscriptProtoASTFlatValue.init(handwritten:)();
}

uint64_t sub_23FAD708C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FAD7094()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FAD709C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FAD70A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(v1, *(_QWORD *)(v2 - 88));
}

uint64_t sub_23FAD70B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = a1;
  return 0;
}

uint64_t sub_23FAD70C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = a1;
  return 0;
}

uint64_t sub_23FAD70E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = a1;
  return 0;
}

uint64_t sub_23FAD70F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return *(_QWORD *)(v0 + 56) + *(_QWORD *)(*(_QWORD *)(v2 - 264) + 72) * v1;
}

uint64_t sub_23FAD7110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t sub_23FAD7120()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 112) + 8))(*(_QWORD *)(v0 - 120), *(_QWORD *)(v0 - 104));
}

void sub_23FAD714C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 232) = (v0 - 1) & v0;
}

uint64_t sub_23FAD7170()
{
  return type metadata accessor for ContextProtoMatchProperties(0);
}

uint64_t sub_23FAD7178()
{
  return type metadata accessor for ContextProtoToolRetrievalType(0);
}

uint64_t sub_23FAD7180()
{
  return sub_23FB2EB40();
}

uint64_t sub_23FAD7188()
{
  return sub_23FB2E2DC();
}

uint64_t sub_23FAD7190()
{
  return type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
}

void sub_23FAD7198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 160) = (char *)&a9 - v9;
}

uint64_t sub_23FAD71B0()
{
  return 0;
}

uint64_t sub_23FAD71C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, a2, a3, v3);
}

void sub_23FAD71CC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
}

uint64_t sub_23FAD71E0()
{
  return sub_23FB2DF7C();
}

void sub_23FAD720C()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 536) = 0;
  *(_QWORD *)(v0 - 544) = 0;
}

uint64_t sub_23FAD7220()
{
  return swift_bridgeObjectRelease();
}

void sub_23FAD7234(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 280) = a1;
}

uint64_t sub_23FAD7240()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_23FAD7254()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 272))();
}

void sub_23FAD7260(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F6F594C(a1, a2, v2);
}

uint64_t sub_23FAD7268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 - 208) = a3;
  return sub_23FB2F710();
}

uint64_t sub_23FAD7274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 - 200) = a3;
  return sub_23FB2F710();
}

uint64_t sub_23FAD7294(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 240))(a1, a2, v2);
}

uint64_t sub_23FAD72A0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 280);
}

void sub_23FAD72C8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F6B4EC0(a1, a2, v2);
}

uint64_t sub_23FAD72D0()
{
  return swift_release();
}

uint64_t sub_23FAD72DC()
{
  return sub_23FB2E8C4();
}

uint64_t sub_23FAD72E4()
{
  return sub_23FB2C740();
}

uint64_t sub_23FAD72EC()
{
  return sub_23FB2E06C();
}

uint64_t sub_23FAD72F8()
{
  return sub_23FB2EBC4();
}

void sub_23FAD7304()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
}

void sub_23FAD7310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_23FACC1F8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_23FAD7318()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FAD7320(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_23FAD7328(uint64_t a1)
{
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 1, 1, v1);
}

void sub_23FAD734C()
{
  sub_23F77C658();
}

uint64_t sub_23FAD7358()
{
  return swift_bridgeObjectRelease();
}

void sub_23FAD7360()
{
  sub_23FAC570C();
}

uint64_t sub_23FAD736C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23F78F084(v1, a1);
}

void sub_23FAD7374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;

  ContextProtoRetrievedContext.init(context:)(v13, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t sub_23FAD7380()
{
  uint64_t v0;
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v0, 1, 1, v1);
}

uint64_t sub_23FAD73A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t sub_23FAD73B0()
{
  uint64_t v0;
  unint64_t v1;

  sub_23F6D1E0C(v0, v1);
  return swift_bridgeObjectRetain();
}

void sub_23FAD73D8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F6B4EC0(a1, a2, v2);
}

uint64_t sub_23FAD73E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23FAD73E8()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t sub_23FAD73F4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FAD740C()
{
  return sub_23FB2E8B8();
}

uint64_t sub_23FAD7420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return *(_QWORD *)(v0 + 56) + *(_QWORD *)(*(_QWORD *)(v2 - 200) + 72) * v1;
}

uint64_t sub_23FAD7434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return *(_QWORD *)(v0 + 56) + *(_QWORD *)(v1 + 72) * v2;
}

unint64_t sub_23FAD7448()
{
  unsigned int v0;

  return sub_23F78C718(v0);
}

uint64_t sub_23FAD7450(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23FAD7458(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v3, v2);
}

uint64_t sub_23FAD7464()
{
  uint64_t v0;
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v0, 1, 1, v1);
}

void sub_23FAD7488()
{
  ContextProtoRetrievedTool.Definition.init(handwritten:)();
}

uint64_t sub_23FAD7494(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, v1, v3);
}

uint64_t sub_23FAD74A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, v1, v3);
}

void sub_23FAD74AC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  sub_23F6B4F58(a1, v2, v1);
}

uint64_t sub_23FAD74B8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v2, v0);
}

uint64_t sub_23FAD74C4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FAD74CC(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_23FAD74D4()
{
  return sub_23FB2E354();
}

uint64_t sub_23FAD74DC()
{
  return sub_23FB2E15C();
}

uint64_t sub_23FAD74E4()
{
  return sub_23FB2DD24();
}

uint64_t sub_23FAD74EC()
{
  return sub_23FB2E120();
}

uint64_t sub_23FAD74F4()
{
  return sub_23FB2F488();
}

uint64_t sub_23FAD7500()
{
  return sub_23FB2DBA4();
}

uint64_t sub_23FAD7508()
{
  return type metadata accessor for TranscriptProtoASTFlatValue(0);
}

uint64_t sub_23FAD7510()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

void Array<A>.init<A>(transcript:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F6916B8(&qword_256EA2828);
  sub_23F772110();
  if (!v0)
  {
    v1 = sub_23FAD74F4();
    MEMORY[0x242674E5C](MEMORY[0x24BEE12C8], v1);
    sub_23FB2F494();
  }
  sub_23FAE2C88();
  sub_23FAD6E8C();
}

void sub_23FAD75E8()
{
  sub_23FAD761C();
}

void sub_23FAD761C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);

  sub_23F6B5220();
  v6 = v2;
  sub_23FAE2BC0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v3);
  sub_23FAE2BE4();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B65E0();
  MEMORY[0x24BDAC7A8](v5);
  sub_23FAE2B94();
  sub_23FAE2C80();
  sub_23FAE2CAC();
  sub_23FAE2BAC();
  if (v0)
  {
    sub_23F6BD15C();
  }
  else
  {
    sub_23FAE2C9C();
    v6(v1);
    sub_23F6BD15C();
    sub_23FAE2C40();
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void sub_23FAD76E8(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v19 = a3;
  v5 = sub_23FB2DA90();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v9);
  v10 = type metadata accessor for ContextProtoConfidence(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v18 - v14;
  v22 = 0;
  v20 = 0u;
  v21 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EA2FA8, type metadata accessor for ContextProtoConfidence, (uint64_t)&protocol conformance descriptor for ContextProtoConfidence);
  v16 = v23;
  sub_23FB2D8E0();
  if (v16)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    v23 = v5;
    v17 = v19;
    sub_23F7E7704((uint64_t)v15, (uint64_t)v13, type metadata accessor for ContextProtoConfidence);
    sub_23FB2DA6C();
    sub_23F6D3508((uint64_t)v13, type metadata accessor for ContextProtoConfidence);
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v17, v8, v23);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v15, type metadata accessor for ContextProtoConfidence);
  }
}

void sub_23FAD78EC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;

  v5 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v5);
  v6 = type metadata accessor for ContextProtoBoundingBox(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (unsigned int *)((char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v16 - v10;
  v17 = 0;
  memset(v16, 0, sizeof(v16));
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EA2F80, type metadata accessor for ContextProtoBoundingBox, (uint64_t)&protocol conformance descriptor for ContextProtoBoundingBox);
  sub_23FB2D8E0();
  if (v2)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v11, (uint64_t)v9, type metadata accessor for ContextProtoBoundingBox);
    v12 = *v9;
    LOBYTE(v16[0]) = *((_BYTE *)v9 + 4);
    sub_23F77B94C(v12 | ((unint64_t)LOBYTE(v16[0]) << 32));
    v13 = v9[2];
    LOBYTE(v16[0]) = *((_BYTE *)v9 + 12);
    sub_23F77B94C(v13 | ((unint64_t)LOBYTE(v16[0]) << 32));
    v14 = v9[4];
    LOBYTE(v16[0]) = *((_BYTE *)v9 + 20);
    sub_23F77B94C(v14 | ((unint64_t)LOBYTE(v16[0]) << 32));
    v15 = v9[6];
    LOBYTE(v16[0]) = *((_BYTE *)v9 + 28);
    sub_23F77B94C(v15 | ((unint64_t)LOBYTE(v16[0]) << 32));
    sub_23FB2DAA8();
    sub_23F6D3508((uint64_t)v9, type metadata accessor for ContextProtoBoundingBox);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v11, type metadata accessor for ContextProtoBoundingBox);
  }
}

void sub_23FAD7B58(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  _OWORD v12[2];
  uint64_t v13;

  v5 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v5);
  v6 = type metadata accessor for ContextProtoSampleInvocation(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v12 - v10;
  v13 = 0;
  memset(v12, 0, sizeof(v12));
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EA2E18, type metadata accessor for ContextProtoSampleInvocation, (uint64_t)&protocol conformance descriptor for ContextProtoSampleInvocation);
  sub_23FB2D8E0();
  if (v2)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v11, (uint64_t)v9, type metadata accessor for ContextProtoSampleInvocation);
    swift_bridgeObjectRetain();
    sub_23FB2DE14();
    sub_23F6D3508((uint64_t)v9, type metadata accessor for ContextProtoSampleInvocation);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v11, type metadata accessor for ContextProtoSampleInvocation);
  }
}

void sub_23FAD7D20(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;

  v25[1] = a3;
  v5 = sub_23F6916B8(&qword_256EA2610);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F6916B8(&qword_256EA2950);
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v9);
  v10 = type metadata accessor for ContextProtoSpanMatchedEntity(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v25 - v14;
  v28 = 0;
  v26 = 0u;
  v27 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EA2DB8, type metadata accessor for ContextProtoSpanMatchedEntity, (uint64_t)&protocol conformance descriptor for ContextProtoSpanMatchedEntity);
  v16 = v29;
  sub_23FB2D8E0();
  if (v16)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v15, (uint64_t)v13, type metadata accessor for ContextProtoSpanMatchedEntity);
    sub_23F7A1EDC((uint64_t)&v13[*(int *)(v10 + 20)], (uint64_t)v7, &qword_256EA2610);
    sub_23F77A32C();
    v17 = swift_bridgeObjectRetain();
    sub_23F774D28(v17, v18, v19, v20, v21, v22, v23, v24);
    sub_23FB2DE68();
    sub_23F6D3508((uint64_t)v13, type metadata accessor for ContextProtoSpanMatchedEntity);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v15, type metadata accessor for ContextProtoSpanMatchedEntity);
  }
}

void sub_23FAD7FD8(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t matched;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[4];
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;

  v25[3] = a3;
  v5 = sub_23F6916B8(&qword_256EA2ED0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F6916B8((uint64_t *)&unk_256EA8FA0);
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v9);
  matched = type metadata accessor for ContextProtoMatchProperties(0);
  v11 = MEMORY[0x24BDAC7A8](matched);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v25 - v14;
  v28 = 0;
  v26 = 0u;
  v27 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EA3148, type metadata accessor for ContextProtoMatchProperties, (uint64_t)&protocol conformance descriptor for ContextProtoMatchProperties);
  v16 = v29;
  sub_23FB2D8E0();
  if (v16)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v15, (uint64_t)v13, type metadata accessor for ContextProtoMatchProperties);
    v17 = *(_QWORD *)v13;
    v25[1] = *((_QWORD *)v13 + 2);
    v25[2] = v17;
    LODWORD(v29) = v13[24];
    sub_23F7A1EDC((uint64_t)&v13[*(int *)(matched + 24)], (uint64_t)v7, &qword_256EA2ED0);
    sub_23F77B0F0((uint64_t)v7, v18, v19, v20, v21, v22, v23, v24);
    sub_23FB2DD30();
    sub_23F6D3508((uint64_t)v13, type metadata accessor for ContextProtoMatchProperties);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v15, type metadata accessor for ContextProtoMatchProperties);
  }
}

uint64_t sub_23FAD8258()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(char *);
  unint64_t *v6;
  unint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  uint64_t (*v18)(char *);
  uint64_t v19;
  uint64_t v20;

  sub_23F6B5220();
  v19 = v3;
  v20 = v4;
  v17 = v1;
  v18 = v5;
  v7 = v6;
  sub_23FAE2BC0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6BD134();
  v9 = v0(0);
  sub_23F6D3588();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v17 - v14;
  sub_23FAE2B94();
  sub_23FB2D760();
  sub_23FAE2CF8(v7);
  sub_23FAE2BD8();
  if (v2)
  {
    sub_23F6BD15C();
  }
  else
  {
    sub_23F7E7704((uint64_t)v15, (uint64_t)v13, v0);
    v9 = v18(v13);
    sub_23F6BD15C();
    sub_23FAE2C40();
  }
  return v9;
}

uint64_t sub_23FAD8388(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  char *v12;
  _OWORD v14[2];
  uint64_t v15;

  v3 = v2;
  v6 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v6);
  v7 = type metadata accessor for TranscriptProtoParticipantID(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (uint64_t *)((char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v14 - v11;
  v15 = 0;
  memset(v14, 0, sizeof(v14));
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB2CF8, type metadata accessor for TranscriptProtoParticipantID, (uint64_t)&protocol conformance descriptor for TranscriptProtoParticipantID);
  sub_23FB2D8E0();
  if (v2)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v12, (uint64_t)v10, type metadata accessor for TranscriptProtoParticipantID);
    v3 = *v10;
    swift_bridgeObjectRetain();
    sub_23F6D3508((uint64_t)v10, type metadata accessor for TranscriptProtoParticipantID);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v12, type metadata accessor for TranscriptProtoParticipantID);
  }
  return v3;
}

uint64_t sub_23FAD8524(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  char *v12;
  _OWORD v14[2];
  uint64_t v15;

  v3 = v2;
  v6 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v6);
  v7 = type metadata accessor for TranscriptProtoSpanID(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (uint64_t *)((char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v14 - v11;
  v15 = 0;
  memset(v14, 0, sizeof(v14));
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB2D10, type metadata accessor for TranscriptProtoSpanID, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpanID);
  sub_23FB2D8E0();
  if (v2)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v12, (uint64_t)v10, type metadata accessor for TranscriptProtoSpanID);
    v3 = *v10;
    sub_23F6D3508((uint64_t)v10, type metadata accessor for TranscriptProtoSpanID);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v12, type metadata accessor for TranscriptProtoSpanID);
  }
  return v3;
}

void sub_23FAD86BC(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[2];
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  char *v22;

  v18[1] = a3;
  v6 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  MEMORY[0x24BDAC7A8](v6);
  v22 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23FB2C8C0();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v9);
  v10 = type metadata accessor for TranscriptProtoDeviceDetails(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (_QWORD *)((char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v18 - v14;
  v21 = 0;
  v19 = 0u;
  v20 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB39A0, type metadata accessor for TranscriptProtoDeviceDetails, (uint64_t)&protocol conformance descriptor for TranscriptProtoDeviceDetails);
  sub_23FB2D8E0();
  if (v3)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v15, (uint64_t)v13, type metadata accessor for TranscriptProtoDeviceDetails);
    v16 = *v13;
    swift_bridgeObjectRetain();
    sub_23F77B5C0();
    v18[0] = v16;
    v17 = (uint64_t)v22;
    sub_23FB2C8A8();
    sub_23F6D3508(v17, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
    sub_23FB2C8CC();
    sub_23F6D3508((uint64_t)v13, type metadata accessor for TranscriptProtoDeviceDetails);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v15, type metadata accessor for TranscriptProtoDeviceDetails);
  }
}

void sub_23FAD8940(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  _OWORD v12[2];
  uint64_t v13;

  v5 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v5);
  v6 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v12 - v10;
  v13 = 0;
  memset(v12, 0, sizeof(v12));
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB3988, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType, (uint64_t)&protocol conformance descriptor for TranscriptProtoDeviceDetailsDeviceType);
  sub_23FB2D8E0();
  if (v2)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v11, (uint64_t)v9, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
    sub_23FB2C8A8();
    sub_23F6D3508((uint64_t)v9, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
  }
}

void sub_23FAD8AE8(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD v17[2];
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;

  v17[1] = a3;
  v5 = sub_23FB2C50C();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v17[0] = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v9);
  v10 = type metadata accessor for TranscriptProtoLocaleSettings(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v17 - v14;
  v20 = 0;
  v18 = 0u;
  v19 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB3970, type metadata accessor for TranscriptProtoLocaleSettings, (uint64_t)&protocol conformance descriptor for TranscriptProtoLocaleSettings);
  v16 = v21;
  sub_23FB2D8E0();
  if (v16)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v15, (uint64_t)v13, type metadata accessor for TranscriptProtoLocaleSettings);
    swift_bridgeObjectRetain();
    sub_23FB2C4C4();
    swift_bridgeObjectRetain();
    sub_23FB2C4C4();
    swift_bridgeObjectRetain();
    sub_23FB2C4C4();
    sub_23FB2C95C();
    sub_23F6D3508((uint64_t)v13, type metadata accessor for TranscriptProtoLocaleSettings);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v15, type metadata accessor for TranscriptProtoLocaleSettings);
  }
}

void sub_23FAD8D60()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t *v6;
  uint64_t (*v7)(uint64_t);
  uint64_t (*v8)(uint64_t);
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  sub_23F6B5220();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  sub_23FAE2D04();
  v12 = v9;
  sub_23FAE2C38();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6BD134();
  v8(0);
  sub_23FAC3E6C();
  MEMORY[0x24BDAC7A8](v11);
  sub_23FAE2C00();
  sub_23FB2D760();
  sub_23F6D3458(v6, v8, v4);
  sub_23FAE2C1C();
  sub_23FB2D8E0();
  sub_23F6BC34C(v2, v1);
  if (!v0)
  {
    sub_23FAE2C74();
    *v12 = 0;
    v12[1] = 0xE000000000000000;
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void sub_23FAD8E3C(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  int v30;

  v7 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for TranscriptProtoSpeechQuery(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v25 - v12;
  v29 = 0;
  v27 = 0u;
  v28 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB3B48, type metadata accessor for TranscriptProtoSpeechQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechQuery);
  sub_23FB2D8E0();
  if (v3)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v13, (uint64_t)v11, type metadata accessor for TranscriptProtoSpeechQuery);
    v14 = swift_bridgeObjectRetain();
    sub_23F774D5C(v14, v15, v16, v17, v18, v19, v20, v21, v25, v26);
    v23 = v22;
    v30 = v11[8];
    v24 = *((_QWORD *)v11 + 3);
    v26 = (uint64_t (*)(uint64_t))*((_QWORD *)v11 + 2);
    swift_bridgeObjectRetain();
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoSpeechQuery);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v13, type metadata accessor for TranscriptProtoSpeechQuery);
    *(_QWORD *)a3 = v23;
    *(_BYTE *)(a3 + 8) = v30;
    *(_QWORD *)(a3 + 16) = v26;
    *(_QWORD *)(a3 + 24) = v24;
  }
}

void sub_23FAD904C(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;

  v34 = a3;
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v35 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_23FB2C764();
  v7 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v10);
  v11 = type metadata accessor for TranscriptProtoTextQuery(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v28 - v15;
  v38 = 0;
  v36 = 0u;
  v37 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB3B18, type metadata accessor for TranscriptProtoTextQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoTextQuery);
  v17 = v39;
  sub_23FB2D8E0();
  if (v17)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    v39 = a1;
    sub_23F7E7704((uint64_t)v16, (uint64_t)v14, type metadata accessor for TranscriptProtoTextQuery);
    v18 = *((_QWORD *)v14 + 1);
    v32 = *(_QWORD *)v14;
    v31 = v14[16];
    swift_bridgeObjectRetain();
    sub_23F77B8C8();
    v29 = v18;
    v30 = a2;
    v19 = (uint64_t)v35;
    swift_bridgeObjectRetain();
    sub_23FB2C74C();
    sub_23F6D3508(v19, type metadata accessor for TranscriptProtoStatementID);
    v20 = &v14[*(int *)(v11 + 28)];
    v22 = *(_QWORD *)v20;
    v21 = *((_QWORD *)v20 + 1);
    swift_bridgeObjectRetain();
    sub_23F6D3508((uint64_t)v14, type metadata accessor for TranscriptProtoTextQuery);
    v23 = type metadata accessor for TextQuery(0);
    v24 = v33;
    v25 = v34;
    v26 = (_QWORD *)((char *)v34 + *(int *)(v23 + 28));
    v27 = v29;
    *v34 = v32;
    v25[1] = v27;
    *((_BYTE *)v25 + 16) = v31;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)v25 + *(int *)(v23 + 24), v9, v24);
    sub_23F6BC34C(v39, v30);
    *v26 = v22;
    v26[1] = v21;
    sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoTextQuery);
  }
}

void sub_23FAD935C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t (*v2)(_QWORD);
  char *v3;
  unint64_t *v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(_QWORD);
  uint64_t (*v31)(_QWORD);
  char *v32;
  uint64_t v33;
  _DWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t (*v38)(_QWORD);
  uint64_t (*v39)(_QWORD);
  unint64_t *v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;

  sub_23F6B5220();
  v37 = v3;
  v38 = v2;
  v40 = v4;
  v41 = v5;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  type metadata accessor for TranscriptProtoStatementID(0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B51A4();
  v39 = v13;
  v36 = sub_23FB2C764();
  v14 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  sub_23F6BD134();
  v17 = v16 - v15;
  sub_23FAE2C38();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23FAE2C58();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F6B5CD4();
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)v34 - v21;
  v44 = 0;
  v42 = 0u;
  v43 = 0u;
  v23 = sub_23FAE2D10();
  sub_23F6D1E20(v23, v24);
  sub_23FAE2C80();
  v25 = v40;
  v40 = v7;
  sub_23F6D3458(v25, (uint64_t (*)(uint64_t))v7, v41);
  sub_23FAE2D10();
  sub_23FAE2BAC();
  if (v0)
  {
    v26 = sub_23FAE2D10();
    sub_23F6BC34C(v26, v27);
  }
  else
  {
    v41 = v11;
    v35 = v14;
    sub_23F7E7704((uint64_t)v22, (uint64_t)v1, (uint64_t (*)(_QWORD))v40);
    v28 = *v1;
    v29 = v1[1];
    swift_bridgeObjectRetain();
    v30 = v39;
    sub_23F77B8C8();
    v34[1] = *(_DWORD *)v30;
    swift_bridgeObjectRetain();
    sub_23FB2C74C();
    sub_23F6D3508((uint64_t)v30, type metadata accessor for TranscriptProtoStatementID);
    sub_23FAE2CBC();
    v32 = v37;
    v31 = v38;
    *(_QWORD *)v37 = v28;
    *((_QWORD *)v32 + 1) = v29;
    v33 = v31(0);
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(&v32[*(int *)(v33 + 20)], v17, v36);
    sub_23F6BC34C(v41, v9);
    sub_23F6D3508((uint64_t)v22, v30);
  }
  sub_23F6B5100();
}

void sub_23FAD955C(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  v7 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v15 - v12;
  v17 = 0;
  v15 = 0u;
  v16 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB2800, type metadata accessor for TranscriptProtoRequestPrescribedPlan, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlan);
  sub_23FB2D8E0();
  if (v3)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v13, (uint64_t)v11, type metadata accessor for TranscriptProtoRequestPrescribedPlan);
    RequestPrescribedPlan.init(transcript:)();
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v13, type metadata accessor for TranscriptProtoRequestPrescribedPlan);
    v14 = v16;
    *(_OWORD *)a3 = v15;
    *(_BYTE *)(a3 + 16) = v14;
  }
}

void sub_23FAD9714(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;

  v7 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v16 - v12;
  v17 = 0;
  memset(v16, 0, sizeof(v16));
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB2830, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
  sub_23FB2D8E0();
  if (v3)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v13, (uint64_t)v11, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
    v15 = *v11;
    v14 = v11[1];
    swift_bridgeObjectRetain();
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v13, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
    *a3 = v15;
    a3[1] = v14;
  }
}

void sub_23FAD98C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(uint64_t);
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;

  sub_23F6B5220();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  sub_23FAE2D04();
  v19 = v8;
  sub_23FAE2C38();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6BD134();
  v7(0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v18 - v12;
  sub_23FAE2C00();
  sub_23FB2D760();
  sub_23F6D3458(v5, v7, v3);
  sub_23FAE2C1C();
  sub_23FAE2BD8();
  if (v0)
  {
    sub_23FAE2C4C();
  }
  else
  {
    sub_23F7E7704((uint64_t)v13, v1, v7);
    v15 = *(_QWORD *)v1;
    v14 = *(_QWORD *)(v1 + 8);
    v16 = *(_BYTE *)(v1 + 16);
    swift_bridgeObjectRetain();
    sub_23F6D3508(v1, v7);
    sub_23FAE2C4C();
    sub_23FAE2C74();
    v17 = v19;
    *v19 = v15;
    v17[1] = v14;
    *((_BYTE *)v17 + 16) = v16;
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void sub_23FAD99C8(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t Step;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;

  v23 = a3;
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v25 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_23FB2C764();
  v7 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v10);
  Step = type metadata accessor for TranscriptProtoQueryStep(0);
  v12 = MEMORY[0x24BDAC7A8](Step);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v22 - v15;
  v28 = 0;
  v26 = 0u;
  v27 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB2E38, type metadata accessor for TranscriptProtoQueryStep, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStep);
  v17 = v29;
  sub_23FB2D8E0();
  if (v17)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    v29 = v7;
    sub_23F7E7704((uint64_t)v16, (uint64_t)v14, type metadata accessor for TranscriptProtoQueryStep);
    sub_23F77B8C8();
    v22 = v16;
    v18 = (uint64_t)v25;
    swift_bridgeObjectRetain();
    sub_23FB2C74C();
    sub_23F6D3508(v18, type metadata accessor for TranscriptProtoStatementID);
    swift_bridgeObjectRetain();
    sub_23F777718();
    v20 = v19;
    sub_23F6D3508((uint64_t)v14, type metadata accessor for TranscriptProtoQueryStep);
    v21 = v23;
    (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v23, v9, v24);
    sub_23F6BC34C(a1, a2);
    *(_QWORD *)(v21 + *(int *)(type metadata accessor for QueryStep(0) + 20)) = v20;
    sub_23F6D3508((uint64_t)v22, type metadata accessor for TranscriptProtoQueryStep);
  }
}

void sub_23FAD9CD4(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t (*a3)(uint64_t a1)@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  char *v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  char *v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;

  v31 = a3;
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v33 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_23FB2C764();
  v7 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v10);
  v11 = type metadata accessor for TranscriptProtoVariableStep(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v30 - v15;
  v36 = 0;
  v34 = 0u;
  v35 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB31E8, type metadata accessor for TranscriptProtoVariableStep, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableStep);
  v17 = v37;
  sub_23FB2D8E0();
  if (v17)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    v37 = v7;
    sub_23F7E7704((uint64_t)v16, (uint64_t)v14, type metadata accessor for TranscriptProtoVariableStep);
    sub_23F77B8C8();
    v30 = v16;
    v18 = (uint64_t)v33;
    swift_bridgeObjectRetain();
    sub_23FB2C74C();
    sub_23F6D3508(v18, type metadata accessor for TranscriptProtoStatementID);
    v19 = swift_bridgeObjectRetain();
    sub_23F775684(v19, v20, v21, v22, v23, v24, v25, v26, (uint64_t)v30, v31);
    v28 = v27;
    sub_23F6D3508((uint64_t)v14, type metadata accessor for TranscriptProtoVariableStep);
    v29 = v31;
    (*(void (**)(uint64_t (*)(uint64_t), char *, uint64_t))(v37 + 32))(v31, v9, v32);
    sub_23F6BC34C(a1, a2);
    *(_QWORD *)((char *)v29 + *(int *)(type metadata accessor for VariableStep(0) + 20)) = v28;
    sub_23F6D3508((uint64_t)v30, type metadata accessor for TranscriptProtoVariableStep);
  }
}

void sub_23FAD9FE0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;

  v5 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v5);
  v6 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v15 - v10;
  v16 = 0;
  memset(v15, 0, sizeof(v15));
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB2AA0, type metadata accessor for TranscriptProtoIntelligenceFlowError, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
  sub_23FB2D8E0();
  if (v2)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v11, (uint64_t)v9, type metadata accessor for TranscriptProtoIntelligenceFlowError);
    v12 = *v9;
    v13 = v9[1];
    v14 = v9[2];
    objc_allocWithZone(MEMORY[0x24BDD1540]);
    swift_bridgeObjectRetain();
    sub_23FB1F3FC(v12, v13, v14, 0);
    sub_23FB2C704();
    sub_23F6D3508((uint64_t)v9, type metadata accessor for TranscriptProtoIntelligenceFlowError);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoIntelligenceFlowError);
  }
}

void sub_23FADA1C4(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, _QWORD, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  unint64_t v49;

  v45 = a3;
  v5 = sub_23F6916B8(&qword_256EA2780);
  MEMORY[0x24BDAC7A8](v5);
  v44 = (uint64_t)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_23FB2C788();
  v38 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_23FB2C80C();
  v9 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for ActionResult(0);
  v12 = MEMORY[0x24BDAC7A8](v39);
  v41 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v42 = (uint64_t)&v36 - v14;
  v15 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v15);
  v16 = type metadata accessor for TranscriptProtoActionStepResult(0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = 0;
  v46 = 0u;
  v47 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  v19 = a1;
  sub_23F6D3458(&qword_256EB2998, type metadata accessor for TranscriptProtoActionStepResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionStepResult);
  v20 = v49;
  sub_23FB2D8E0();
  if (v20)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    v21 = sub_23FB2C4B8();
    v49 = a2;
    v22 = v45;
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v45, 1, 1, v21);
    v23 = type metadata accessor for ActionStepResult(0);
    v37 = v23;
    v24 = (_QWORD *)(v22 + *(int *)(v23 + 28));
    *v24 = 0;
    v24[1] = 0xE000000000000000;
    v25 = (_QWORD *)(v22 + *(int *)(v23 + 20));
    *v25 = 0;
    v25[1] = 0xE000000000000000;
    (*(void (**)(char *, _QWORD, uint64_t))(v38 + 104))(v8, *MEMORY[0x24BE52270], v40);
    sub_23FB2C7D0();
    v26 = v11;
    v27 = v9;
    v28 = *(void (**)(char *, _QWORD, uint64_t))(v9 + 104);
    v29 = v43;
    v28(v26, *MEMORY[0x24BE523B8], v43);
    v30 = sub_23FB2D0B8();
    v31 = v44;
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v44, 1, 1, v30);
    v32 = *(int *)(v39 + 20);
    v40 = v19;
    v33 = (uint64_t)v41;
    v34 = (uint64_t)&v41[v32];
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v41[v32], 1, 1, v30);
    (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v33, v26, v29);
    sub_23FAE2B4C(v31, v34);
    v35 = v42;
    sub_23F7E76D0(v33, v42, type metadata accessor for ActionResult);
    sub_23F7E76D0(v35, v45 + *(int *)(v37 + 24), type metadata accessor for ActionResult);
    sub_23F6BC34C(v40, v49);
    sub_23F6D3508((uint64_t)v18, type metadata accessor for TranscriptProtoActionStepResult);
  }
}

void sub_23FADA57C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t *v7;
  uint64_t (*v8)(uint64_t);
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t (*v19)(uint64_t);

  sub_23F6B5220();
  v18 = v3;
  v19 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  sub_23FAE2D04();
  sub_23FAE2C38();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23FAE2C58();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B65E0();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - v13;
  sub_23FAE2C00();
  sub_23FAE2C80();
  sub_23F6D3458(v7, v9, v5);
  sub_23FAE2BAC();
  if (v0)
  {
    sub_23FAE2C4C();
  }
  else
  {
    v15 = v18;
    sub_23F7E7704((uint64_t)v14, v1, v9);
    v16 = swift_bridgeObjectRetain();
    v17 = v19(v16);
    sub_23F6D3508(v1, v9);
    sub_23FAE2C4C();
    sub_23FAE2C74();
    *v15 = v17;
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void sub_23FADA688(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _QWORD *v23;

  v7 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for TranscriptProtoClientInitiatedClientAction(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v18 - v12;
  v22 = 0;
  v20 = 0u;
  v21 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB3160, type metadata accessor for TranscriptProtoClientInitiatedClientAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientInitiatedClientAction);
  sub_23FB2D8E0();
  if (v3)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    v23 = a3;
    sub_23F7E7704((uint64_t)v13, (uint64_t)v11, type metadata accessor for TranscriptProtoClientInitiatedClientAction);
    v14 = v11[1];
    v19 = *v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23FB23064();
    v16 = v15;
    swift_bridgeObjectRelease();
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoClientInitiatedClientAction);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v13, type metadata accessor for TranscriptProtoClientInitiatedClientAction);
    v17 = v23;
    *v23 = v19;
    v17[1] = v14;
    v17[2] = v16;
  }
}

void sub_23FADA894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  unint64_t *v4;
  uint64_t (*v5)(uint64_t);
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  sub_23F6B5220();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  sub_23FAE2C38();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6BD134();
  v6(0);
  sub_23FAC3E6C();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v11 - v9;
  sub_23FAE2B94();
  sub_23FB2D760();
  sub_23F6D3458(v4, v6, v2);
  sub_23FB2D8E0();
  sub_23F6BD15C();
  if (!v0)
    sub_23F6D3928((uint64_t)v10);
  sub_23F8778A8();
  sub_23F6B5100();
}

void sub_23FADA974(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;

  v7 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for TranscriptProtoSafetyModeException(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v16 - v12;
  v17 = 0;
  memset(v16, 0, sizeof(v16));
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB3128, type metadata accessor for TranscriptProtoSafetyModeException, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeException);
  sub_23FB2D8E0();
  if (v3)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v13, (uint64_t)v11, type metadata accessor for TranscriptProtoSafetyModeException);
    v15 = *v11;
    v14 = v11[1];
    swift_bridgeObjectRetain();
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoSafetyModeException);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v13, type metadata accessor for TranscriptProtoSafetyModeException);
    *a3 = v15;
    a3[1] = v14;
  }
}

void sub_23FADAB20(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  char *v39;

  v30 = a3;
  v5 = sub_23FB2EB1C();
  v34 = *(_QWORD *)(v5 - 8);
  v35 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v33 = (char *)&v26 - v8;
  v31 = sub_23FB2ED38();
  v9 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v12);
  v13 = type metadata accessor for TranscriptProtoVariableSetter(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v26 - v17;
  v38 = 0;
  v36 = 0u;
  v37 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB2200, type metadata accessor for TranscriptProtoVariableSetter, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableSetter);
  v19 = (uint64_t)v39;
  sub_23FB2D8E0();
  if (v19)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    v28 = v9;
    v29 = a2;
    v21 = v33;
    v20 = v34;
    v22 = v35;
    v39 = v18;
    sub_23F7E7704((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoVariableSetter);
    swift_bridgeObjectRetain();
    Dictionary<>.init(transcript:)();
    v27 = v23;
    sub_23F77B844();
    v26 = v16;
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v32, v21, v22);
    sub_23FB2ED2C();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
    sub_23F6D3508((uint64_t)v26, type metadata accessor for TranscriptProtoVariableSetter);
    v24 = v30;
    *(_QWORD *)v30 = v27;
    v25 = type metadata accessor for VariableSetter(0);
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v24[*(int *)(v25 + 20)], v11, v31);
    sub_23F6BC34C(a1, v29);
    sub_23F6D3508((uint64_t)v39, type metadata accessor for TranscriptProtoVariableSetter);
  }
}

void sub_23FADAE84(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;

  v29 = a3;
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v31 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_23FB2C764();
  v7 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v10);
  v11 = type metadata accessor for TranscriptProtoActionParameterContext(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t *)((char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v28 - v15;
  v34 = 0;
  v32 = 0u;
  v33 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB2A88, type metadata accessor for TranscriptProtoActionParameterContext, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterContext);
  v17 = v35;
  sub_23FB2D8E0();
  if (v17)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    v35 = a1;
    v28 = a2;
    sub_23F7E7704((uint64_t)v16, (uint64_t)v14, type metadata accessor for TranscriptProtoActionParameterContext);
    sub_23F77B8C8();
    v18 = (uint64_t)v31;
    swift_bridgeObjectRetain();
    v19 = v9;
    sub_23FB2C74C();
    sub_23F6D3508(v18, type metadata accessor for TranscriptProtoStatementID);
    v21 = *v14;
    v20 = v14[1];
    v22 = v14[2];
    v23 = v14[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23F6D3508((uint64_t)v14, type metadata accessor for TranscriptProtoActionParameterContext);
    v24 = v29;
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v29, v19, v30);
    sub_23F6BC34C(v35, v28);
    v25 = type metadata accessor for ActionParameterContext(0);
    v26 = (_QWORD *)(v24 + *(int *)(v25 + 20));
    *v26 = v21;
    v26[1] = v20;
    v27 = (_QWORD *)(v24 + *(int *)(v25 + 24));
    *v27 = v22;
    v27[1] = v23;
    sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoActionParameterContext);
  }
}

void sub_23FADB168(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v5);
  v6 = type metadata accessor for TranscriptProtoActionConfirmation(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v20 - v10;
  v22 = 0;
  v20 = 0u;
  v21 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB28F8, type metadata accessor for TranscriptProtoActionConfirmation, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionConfirmation);
  sub_23FB2D8E0();
  if (v2)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v11, (uint64_t)v9, type metadata accessor for TranscriptProtoActionConfirmation);
    v12 = swift_bridgeObjectRetain();
    sub_23FB21E64(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((ValueMetadata **)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, v23, v24, v25, v26, v27, v28,
      v29);
    swift_bridgeObjectRelease();
    sub_23FB2D25C();
    sub_23F6D3508((uint64_t)v9, type metadata accessor for TranscriptProtoActionConfirmation);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoActionConfirmation);
  }
}

void sub_23FADB33C(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;

  v33 = a3;
  v5 = sub_23FB2EB1C();
  v34 = *(_QWORD *)(v5 - 8);
  v35 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v36 = (char *)&v27 - v9;
  v10 = sub_23FB2ED38();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v13);
  v14 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v27 - v18;
  v39 = 0;
  v37 = 0u;
  v38 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB2C50, type metadata accessor for TranscriptProtoParameterConfirmation, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterConfirmation);
  v20 = v40;
  sub_23FB2D8E0();
  if (v20)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    v31 = v8;
    v32 = v12;
    v40 = a1;
    sub_23F7E7704((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoParameterConfirmation);
    v21 = *(_QWORD *)v17;
    v22 = *((_QWORD *)v17 + 1);
    v23 = v17[24];
    if (v17[24])
      v24 = 0;
    else
      v24 = *((_QWORD *)v17 + 2);
    swift_bridgeObjectRetain();
    sub_23F77B844();
    v27 = v24;
    v28 = v23;
    v29 = v21;
    v30 = v22;
    v25 = v34;
    v26 = v35;
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v36, v35);
    sub_23FB2ED2C();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v36, v26);
    sub_23FB2D400();
    sub_23F6D3508((uint64_t)v17, type metadata accessor for TranscriptProtoParameterConfirmation);
    sub_23F6BC34C(v40, a2);
    sub_23F6D3508((uint64_t)v19, type metadata accessor for TranscriptProtoParameterConfirmation);
  }
}

void sub_23FADB644(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD v22[2];
  uint64_t v23;
  uint64_t v24;

  v7 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for TranscriptProtoParameterDisambiguation(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v22 - v12;
  v23 = 0;
  memset(v22, 0, sizeof(v22));
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB2C68, type metadata accessor for TranscriptProtoParameterDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterDisambiguation);
  sub_23FB2D8E0();
  if (v3)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    v24 = a3;
    sub_23F7E7704((uint64_t)v13, (uint64_t)v11, type metadata accessor for TranscriptProtoParameterDisambiguation);
    swift_bridgeObjectRetain();
    v14 = swift_bridgeObjectRetain();
    sub_23F7729B8(v14, v15, v16, v17, v18, v19, v20, v21, *(uint64_t *)&v22[0], *((uint64_t *)&v22[0] + 1));
    sub_23FB2D4F0();
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoParameterDisambiguation);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v13, type metadata accessor for TranscriptProtoParameterDisambiguation);
  }
}

void sub_23FADB854(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  BOOL v15;
  _OWORD v16[2];
  uint64_t v17;

  v7 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v16 - v12;
  v17 = 0;
  memset(v16, 0, sizeof(v16));
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB2A00, type metadata accessor for TranscriptProtoCandidatePromptStatus, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidatePromptStatus);
  sub_23FB2D8E0();
  if (v3)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v13, (uint64_t)v11, type metadata accessor for TranscriptProtoCandidatePromptStatus);
    if ((v11[9] & 1) != 0)
    {
      v14 = 0;
      v15 = 1;
    }
    else
    {
      if ((v11[8] & 1) != 0)
        v14 = *(_QWORD *)v11 != 0;
      else
        v14 = *(_QWORD *)v11;
      v15 = (v11[8] & 1) != 0;
    }
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoCandidatePromptStatus);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v13, type metadata accessor for TranscriptProtoCandidatePromptStatus);
    *(_QWORD *)a3 = v14;
    *(_BYTE *)(a3 + 8) = v15;
  }
}

void sub_23FADBA30(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  _QWORD v16[7];
  char v17;

  v7 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for TranscriptProtoPlan(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (_QWORD *)((char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v16 - v12;
  memset(v16, 0, 40);
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB2D28, type metadata accessor for TranscriptProtoPlan, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlan);
  sub_23FB2D8E0();
  if (v3)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v13, (uint64_t)v11, type metadata accessor for TranscriptProtoPlan);
    Session.Plan.init(transcript:)(v11, (uint64_t)v16);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v13, type metadata accessor for TranscriptProtoPlan);
    v14 = v16[2];
    v15 = v17;
    *(_OWORD *)a3 = *(_OWORD *)v16;
    *(_QWORD *)(a3 + 16) = v14;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)&v16[3];
    *(_OWORD *)(a3 + 40) = *(_OWORD *)&v16[5];
    *(_BYTE *)(a3 + 56) = v15;
  }
}

void sub_23FADBC00(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;

  v7 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for TranscriptProtoRecoverableError(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v24 - v12;
  v26 = 0;
  v24 = 0u;
  v25 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB2D40, type metadata accessor for TranscriptProtoRecoverableError, (uint64_t)&protocol conformance descriptor for TranscriptProtoRecoverableError);
  sub_23FB2D8E0();
  if (v3)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v13, (uint64_t)v11, type metadata accessor for TranscriptProtoRecoverableError);
    Session.RecoverableError.init(transcript:)((uint64_t)v11, v14, v15, v16, v17, v18, v19, v20, v24, *((_QWORD **)&v24 + 1));
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v13, type metadata accessor for TranscriptProtoRecoverableError);
    v21 = v25;
    v22 = v26;
    v23 = v27;
    *(_OWORD *)a3 = v24;
    *(_OWORD *)(a3 + 16) = v21;
    *(_QWORD *)(a3 + 32) = v22;
    *(_QWORD *)(a3 + 40) = v23;
  }
}

void sub_23FADBDB8(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;

  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v36 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v31 - v8;
  v10 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v13);
  v14 = type metadata accessor for TranscriptProtoPlanGenerationError(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v31 - v18;
  v39 = 0;
  v37 = 0u;
  v38 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB2D58, type metadata accessor for TranscriptProtoPlanGenerationError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationError);
  v20 = v40;
  sub_23FB2D8E0();
  if (v20)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    v21 = (uint64_t *)v36;
    sub_23F7E7704((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPlanGenerationError);
    sub_23F77BE10();
    v22 = (uint64_t)v9;
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v9, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
    v23 = (uint64_t)v9;
    v24 = (uint64_t)v21;
    sub_23F7E7704(v23, (uint64_t)v21, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
    v25 = v21[1];
    v40 = *v21;
    v26 = v21[2];
    v27 = v21[3];
    v28 = *(_QWORD *)(v24 + 40);
    v33 = *(_QWORD *)(v24 + 32);
    v34 = v26;
    v32 = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23F6D3508(v24, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
    sub_23F6D3508((uint64_t)v17, type metadata accessor for TranscriptProtoPlanGenerationError);
    sub_23F6D3508(v22, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v19, type metadata accessor for TranscriptProtoPlanGenerationError);
    v29 = v35;
    *v35 = v40;
    v29[1] = v25;
    v29[2] = v34;
    v29[3] = v27;
    v30 = v32;
    v29[4] = v33;
    v29[5] = v30;
  }
}

void sub_23FADC0CC(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v7 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v18 - v12;
  v22 = 0;
  v20 = 0u;
  v21 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB2D70, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationModelOutputError);
  sub_23FB2D8E0();
  if (v3)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v13, (uint64_t)v11, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
    v14 = v11[1];
    v23 = *v11;
    v15 = v11[2];
    v16 = v11[3];
    v17 = v11[5];
    v18 = v11[4];
    v19 = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v13, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
    *a3 = v23;
    a3[1] = v14;
    a3[2] = v19;
    a3[3] = v16;
    a3[4] = v18;
    a3[5] = v17;
  }
}

void sub_23FADC2B0(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD v17[2];
  uint64_t v18;

  v7 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for TranscriptProtoDecompositionResult(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v17 - v12;
  v18 = 0;
  memset(v17, 0, sizeof(v17));
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB2A70, type metadata accessor for TranscriptProtoDecompositionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoDecompositionResult);
  sub_23FB2D8E0();
  if (v3)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v13, (uint64_t)v11, type metadata accessor for TranscriptProtoDecompositionResult);
    v14 = v11[1];
    v15 = v11[2];
    v16 = *v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoDecompositionResult);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v13, type metadata accessor for TranscriptProtoDecompositionResult);
    *a3 = v14;
    a3[1] = v15;
    a3[2] = v16;
  }
}

void sub_23FADC470(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  v7 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for TranscriptProtoValueExpression(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v15 - v12;
  v17 = 0;
  v15 = 0u;
  v16 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB3430, type metadata accessor for TranscriptProtoValueExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpression);
  sub_23FB2D8E0();
  if (v3)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v13, (uint64_t)v11, type metadata accessor for TranscriptProtoValueExpression);
    ValueExpression.init(transcript:)();
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v13, type metadata accessor for TranscriptProtoValueExpression);
    v14 = v16;
    *(_OWORD *)a3 = v15;
    *(_BYTE *)(a3 + 16) = v14;
  }
}

void sub_23FADC628(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  char *v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;

  v26 = a3;
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v27 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_23FB2C764();
  v7 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v10);
  v11 = type metadata accessor for TranscriptProtoPrefixExpression(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v22 - v15;
  v30 = 0;
  v28 = 0u;
  v29 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB3460, type metadata accessor for TranscriptProtoPrefixExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPrefixExpression);
  v17 = v31;
  sub_23FB2D8E0();
  if (v17)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    v31 = a1;
    v23 = v7;
    v24 = a2;
    sub_23F7E7704((uint64_t)v16, (uint64_t)v14, type metadata accessor for TranscriptProtoPrefixExpression);
    v18 = *v14;
    sub_23F77B8C8();
    v19 = (uint64_t)v27;
    swift_bridgeObjectRetain();
    sub_23FB2C74C();
    sub_23F6D3508(v19, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3508((uint64_t)v14, type metadata accessor for TranscriptProtoPrefixExpression);
    v20 = v26;
    *v26 = v18;
    v21 = type metadata accessor for PrefixExpression(0);
    (*(void (**)(_BYTE *, char *, uint64_t))(v23 + 32))(&v20[*(int *)(v21 + 20)], v9, v25);
    sub_23F6BC34C(v31, v24);
    sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPrefixExpression);
  }
}

void sub_23FADC8D8(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;

  v24 = a3;
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v26 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_23FB2C764();
  v7 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v10);
  v11 = type metadata accessor for TranscriptProtoDotExpression(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t *)((char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v23 - v15;
  v29 = 0;
  v27 = 0u;
  v28 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB34A8, type metadata accessor for TranscriptProtoDotExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoDotExpression);
  v17 = v30;
  sub_23FB2D8E0();
  if (v17)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    v30 = a1;
    v23 = a2;
    sub_23F7E7704((uint64_t)v16, (uint64_t)v14, type metadata accessor for TranscriptProtoDotExpression);
    sub_23F77B8C8();
    v18 = (uint64_t)v26;
    swift_bridgeObjectRetain();
    sub_23FB2C74C();
    sub_23F6D3508(v18, type metadata accessor for TranscriptProtoStatementID);
    v20 = *v14;
    v19 = v14[1];
    swift_bridgeObjectRetain();
    sub_23F6D3508((uint64_t)v14, type metadata accessor for TranscriptProtoDotExpression);
    v21 = v24;
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v24, v9, v25);
    sub_23F6BC34C(v30, v23);
    v22 = (_QWORD *)(v21 + *(int *)(type metadata accessor for DotExpression(0) + 20));
    *v22 = v20;
    v22[1] = v19;
    sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoDotExpression);
  }
}

void sub_23FADCBA4(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t updated;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _BYTE v23[4];
  int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _BYTE *v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;

  v28 = a3;
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v29 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v27 = sub_23FB2C764();
  v7 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v10);
  updated = type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter(0);
  v12 = MEMORY[0x24BDAC7A8](updated);
  v14 = &v23[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v12);
  v16 = &v23[-v15];
  v32 = 0;
  v30 = 0u;
  v31 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB2390, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
  v17 = v33;
  sub_23FB2D8E0();
  if (v17)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    v33 = a1;
    sub_23F7E7704((uint64_t)v16, (uint64_t)v14, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
    v18 = *((_QWORD *)v14 + 1);
    v26 = *(_QWORD *)v14;
    v19 = v14[16];
    swift_bridgeObjectRetain();
    sub_23F77B8C8();
    v24 = v19;
    v20 = (uint64_t)v29;
    v25 = a2;
    swift_bridgeObjectRetain();
    sub_23FB2C74C();
    sub_23F6D3508(v20, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3508((uint64_t)v14, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
    v21 = v28;
    *v28 = v26;
    v21[1] = v18;
    v21[2] = 0;
    *((_BYTE *)v21 + 24) = 1;
    *((_BYTE *)v21 + 25) = v24;
    v22 = type metadata accessor for UpdateParametersExpression.UpdateParameter(0);
    (*(void (**)(char *, _BYTE *, uint64_t))(v7 + 32))((char *)v21 + *(int *)(v22 + 28), v9, v27);
    sub_23F6BC34C(v33, v25);
    sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
  }
}

void sub_23FADCE90(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD v18[2];
  uint64_t v19;

  v7 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for TranscriptProtoCallExpression(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v18 - v12;
  v19 = 0;
  memset(v18, 0, sizeof(v18));
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB3500, type metadata accessor for TranscriptProtoCallExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoCallExpression);
  sub_23FB2D8E0();
  if (v3)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v13, (uint64_t)v11, type metadata accessor for TranscriptProtoCallExpression);
    v14 = *v11;
    v15 = v11[1];
    swift_bridgeObjectRetain();
    sub_23FB23320();
    v17 = v16;
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoCallExpression);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v13, type metadata accessor for TranscriptProtoCallExpression);
    *a3 = v14;
    a3[1] = v15;
    a3[2] = v17;
  }
}

void sub_23FADD05C(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  _OWORD v14[2];
  uint64_t v15;

  v7 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for TranscriptProtoSayExpression(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v14 - v12;
  v15 = 0;
  memset(v14, 0, sizeof(v14));
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB3518, type metadata accessor for TranscriptProtoSayExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoSayExpression);
  sub_23FB2D8E0();
  if (v3)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v13, (uint64_t)v11, type metadata accessor for TranscriptProtoSayExpression);
    SayExpression.init(transcript:)();
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v13, type metadata accessor for TranscriptProtoSayExpression);
    *a3 = *(_QWORD *)&v14[0];
  }
}

void sub_23FADD200(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;

  v22 = a3;
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v24 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23FB2C764();
  v7 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v10);
  v11 = type metadata accessor for TranscriptProtoPickExpression(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t *)((char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v21 - v15;
  v27 = 0;
  v25 = 0u;
  v26 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB3530, type metadata accessor for TranscriptProtoPickExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickExpression);
  v17 = v28;
  sub_23FB2D8E0();
  if (v17)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    v28 = a1;
    v21 = v7;
    sub_23F7E7704((uint64_t)v16, (uint64_t)v14, type metadata accessor for TranscriptProtoPickExpression);
    sub_23F77B8C8();
    v18 = (uint64_t)v24;
    swift_bridgeObjectRetain();
    sub_23FB2C74C();
    sub_23F6D3508(v18, type metadata accessor for TranscriptProtoStatementID);
    v19 = *v14;
    sub_23F6D3508((uint64_t)v14, type metadata accessor for TranscriptProtoPickExpression);
    v20 = v22;
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v22, v9, v23);
    sub_23F6BC34C(v28, a2);
    *(_QWORD *)(v20 + *(int *)(type metadata accessor for PickExpression(0) + 20)) = v19;
    sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPickExpression);
  }
}

void sub_23FADD4C0(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _OWORD v17[2];
  uint64_t v18;
  int v19;

  v7 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for TranscriptProtoSearchExpression(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v17 - v12;
  v18 = 0;
  memset(v17, 0, sizeof(v17));
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB3560, type metadata accessor for TranscriptProtoSearchExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoSearchExpression);
  sub_23FB2D8E0();
  if (v3)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v13, (uint64_t)v11, type metadata accessor for TranscriptProtoSearchExpression);
    v15 = *(_QWORD *)v11;
    v14 = *((_QWORD *)v11 + 1);
    v16 = v11[16];
    v19 = v11[17];
    swift_bridgeObjectRetain();
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoSearchExpression);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v13, type metadata accessor for TranscriptProtoSearchExpression);
    *(_QWORD *)a3 = v15;
    *(_QWORD *)(a3 + 8) = v14;
    *(_BYTE *)(a3 + 16) = v16;
    *(_BYTE *)(a3 + 17) = v19;
  }
}

void sub_23FADD688(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;

  v7 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for TranscriptProtoResolveToolExpression(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v15 - v12;
  v16 = 0;
  memset(v15, 0, sizeof(v15));
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB3590, type metadata accessor for TranscriptProtoResolveToolExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoResolveToolExpression);
  sub_23FB2D8E0();
  if (v3)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v13, (uint64_t)v11, type metadata accessor for TranscriptProtoResolveToolExpression);
    v14 = *v11;
    swift_bridgeObjectRetain();
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoResolveToolExpression);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v13, type metadata accessor for TranscriptProtoResolveToolExpression);
    *a3 = v14;
  }
}

void sub_23FADD834(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  _OWORD v12[2];
  uint64_t v13;

  v5 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v5);
  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v12 - v10;
  v13 = 0;
  memset(v12, 0, sizeof(v12));
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_23FB2D8E0();
  if (v2)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v11, (uint64_t)v9, type metadata accessor for TranscriptProtoStatementID);
    swift_bridgeObjectRetain();
    sub_23FB2C74C();
    sub_23F6D3508((uint64_t)v9, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  }
}

void sub_23FADD9F4(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  v18 = a3;
  v5 = sub_23FB2C788();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v9);
  v10 = type metadata accessor for TranscriptProtoActionOutcome(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = 0;
  v19 = 0u;
  v20 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB2B18, type metadata accessor for TranscriptProtoActionOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionOutcome);
  v13 = v22;
  sub_23FB2D8E0();
  if (v13)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BE52270], v5);
    v14 = v18;
    sub_23FB2C7D0();
    v15 = *MEMORY[0x24BE523B8];
    v16 = sub_23FB2C80C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v14, v15, v16);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v12, type metadata accessor for TranscriptProtoActionOutcome);
  }
}

void sub_23FADDBE4(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v7 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for TranscriptProtoResponseParameter(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v17 - v12;
  v25 = 0;
  v23 = 0u;
  v24 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB20A0, type metadata accessor for TranscriptProtoResponseParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseParameter);
  sub_23FB2D8E0();
  if (v3)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v13, (uint64_t)v11, type metadata accessor for TranscriptProtoResponseParameter);
    v14 = *(_QWORD *)v11;
    v16 = *((_QWORD *)v11 + 2);
    v17 = *((_QWORD *)v11 + 3);
    v15 = v17;
    v21 = *((_QWORD *)v11 + 4);
    v22 = v14;
    v26 = *((_QWORD *)v11 + 7);
    v19 = a3;
    v18 = v11[72];
    v20 = v11[48];
    swift_bridgeObjectRetain();
    sub_23F6D1E0C(v16, v15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23FB2D1A8();
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoResponseParameter);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v13, type metadata accessor for TranscriptProtoResponseParameter);
  }
}

void sub_23FADDE14(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v13[4];
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v5 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v5);
  v6 = type metadata accessor for TranscriptProtoResponseDialog(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (_QWORD *)((char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v13 - v10;
  v16 = 0;
  v14 = 0u;
  v15 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB2E78, type metadata accessor for TranscriptProtoResponseDialog, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseDialog);
  sub_23FB2D8E0();
  if (v2)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v11, (uint64_t)v9, type metadata accessor for TranscriptProtoResponseDialog);
    v17 = *v9;
    v12 = v9[2];
    v13[2] = v9[4];
    v13[3] = v12;
    v13[1] = v9[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23FB2CD28();
    sub_23F6D3508((uint64_t)v9, type metadata accessor for TranscriptProtoResponseDialog);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoResponseDialog);
  }
}

void sub_23FADE01C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;

  v5 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v5);
  v6 = type metadata accessor for TranscriptProtoUIConfirmationLabel(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v16 - v10;
  v17 = 0;
  memset(v16, 0, sizeof(v16));
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB3000, type metadata accessor for TranscriptProtoUIConfirmationLabel, (uint64_t)&protocol conformance descriptor for TranscriptProtoUIConfirmationLabel);
  sub_23FB2D8E0();
  if (v2)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v11, (uint64_t)v9, type metadata accessor for TranscriptProtoUIConfirmationLabel);
    v12 = *v9;
    v13 = v9[1];
    v15 = v9[2];
    v14 = v9[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    MEMORY[0x242671BD4](v12, v13, v15, v14);
    sub_23F6D3508((uint64_t)v9, type metadata accessor for TranscriptProtoUIConfirmationLabel);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoUIConfirmationLabel);
  }
}

void sub_23FADE1F0(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD v17[2];
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;

  v7 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for TranscriptProtoArchiveViewPayload(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (_QWORD *)((char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v17 - v12;
  v20 = 0;
  v18 = 0u;
  v19 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB3018, type metadata accessor for TranscriptProtoArchiveViewPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoArchiveViewPayload);
  sub_23FB2D8E0();
  if (v3)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v13, (uint64_t)v11, type metadata accessor for TranscriptProtoArchiveViewPayload);
    v14 = *v11;
    v15 = v11[1];
    v21 = v11[2];
    v16 = v11[4];
    v17[0] = a3;
    v17[1] = v16;
    sub_23F6D1E20(v14, v15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23FB2CECC();
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoArchiveViewPayload);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v13, type metadata accessor for TranscriptProtoArchiveViewPayload);
  }
}

void sub_23FADE3E0()
{
  uint64_t v0;
  uint64_t *v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  sub_23F6B5220();
  v8 = v2;
  sub_23FAE2BC0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v3);
  sub_23FAE2BE4();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B65E0();
  MEMORY[0x24BDAC7A8](v5);
  sub_23FAE2B94();
  sub_23FAE2C80();
  sub_23FAE2CAC();
  sub_23FAE2BAC();
  if (v0)
  {
    sub_23F6BD15C();
  }
  else
  {
    sub_23FAE2C9C();
    v6 = *v1;
    v7 = v1[1];
    swift_bridgeObjectRetain();
    v8(v6, v7);
    sub_23F6D3928((uint64_t)v1);
    sub_23F6BD15C();
    sub_23FAE2C40();
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void sub_23FADE4BC(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD v17[2];
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;

  v17[1] = a3;
  v5 = sub_23FB2EDF8();
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_23F6916B8(&qword_256EA8528);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v9);
  v10 = type metadata accessor for TranscriptProtoControlPayload(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v17 - v14;
  v20 = 0;
  v18 = 0u;
  v19 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB3060, type metadata accessor for TranscriptProtoControlPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoControlPayload);
  v16 = v21;
  sub_23FB2D8E0();
  if (v16)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v15, (uint64_t)v13, type metadata accessor for TranscriptProtoControlPayload);
    sub_23F6D1E20(*(_QWORD *)v13, *((_QWORD *)v13 + 1));
    sub_23FB2EDEC();
    sub_23F77B700();
    sub_23F6B4F84((uint64_t)v8, &qword_256EA8528);
    sub_23FB2CE90();
    sub_23F6D3508((uint64_t)v13, type metadata accessor for TranscriptProtoControlPayload);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v15, type metadata accessor for TranscriptProtoControlPayload);
  }
}

void sub_23FADE740()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;
  uint64_t *v2;
  void (*v3)(uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v4;
  unint64_t *v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v17;

  sub_23F6B5220();
  v15 = v4;
  v16 = v3;
  v6 = v5;
  sub_23FAE2BC0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23FAE2BE4();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v15 - v10;
  sub_23FAE2B94();
  sub_23FAE2C80();
  sub_23FAE2CF8(v6);
  sub_23FAE2BAC();
  if (v1)
  {
    sub_23F6BD15C();
  }
  else
  {
    sub_23F7E7704((uint64_t)v11, (uint64_t)v2, v0);
    v12 = *v2;
    v13 = v2[1];
    v14 = v2[3];
    v17 = v2[2];
    sub_23F6D1E20(*v2, v13);
    swift_bridgeObjectRetain();
    v16(v12, v13, v17, v14);
    sub_23FAE2C40();
    sub_23F6BD15C();
    sub_23F6D3928((uint64_t)v11);
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

uint64_t sub_23FADE848(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  _OWORD v14[2];
  uint64_t v15;

  v3 = v2;
  v6 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v6);
  v7 = type metadata accessor for TranscriptProtoASTStmt(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v14 - v11;
  v15 = 0;
  memset(v14, 0, sizeof(v14));
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB2430, type metadata accessor for TranscriptProtoASTStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTStmt);
  sub_23FB2D8E0();
  if (v2)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v12, (uint64_t)v10, type metadata accessor for TranscriptProtoASTStmt);
    v3 = AST.Stmt.init(transcript:)(v10);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v12, type metadata accessor for TranscriptProtoASTStmt);
  }
  return v3;
}

void sub_23FADE9E8(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  _OWORD v14[2];
  uint64_t v15;

  v7 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for TranscriptProtoASTExpr(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v14 - v12;
  v15 = 0;
  memset(v14, 0, sizeof(v14));
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB2480, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
  sub_23FB2D8E0();
  if (v3)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v13, (uint64_t)v11, type metadata accessor for TranscriptProtoASTExpr);
    AST.Expr.init(transcript:)();
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v13, type metadata accessor for TranscriptProtoASTExpr);
    *a3 = *(_QWORD *)&v14[0];
  }
}

void sub_23FADEB98(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _OWORD v17[2];
  uint64_t v18;
  uint64_t v19;

  v19 = a3;
  v6 = type metadata accessor for TranscriptProtoASTExpr(0);
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for TranscriptProtoASTUpdateExpr(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v17 - v12;
  v18 = 0;
  memset(v17, 0, sizeof(v17));
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB2520, type metadata accessor for TranscriptProtoASTUpdateExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTUpdateExpr);
  sub_23FB2D8E0();
  if (v3)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    v14 = v19;
    sub_23F7E7704((uint64_t)v13, (uint64_t)v11, type metadata accessor for TranscriptProtoASTUpdateExpr);
    v15 = *v11;
    sub_23F77B870();
    AST.Expr.init(transcript:)();
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoASTUpdateExpr);
    sub_23F6BC34C(a1, a2);
    v16 = *(_QWORD *)&v17[0];
    sub_23F6D3508((uint64_t)v13, type metadata accessor for TranscriptProtoASTUpdateExpr);
    *(_BYTE *)v14 = v15;
    *(_QWORD *)(v14 + 8) = v16;
  }
}

uint64_t sub_23FADEDE0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  _OWORD v17[2];
  uint64_t v18;

  v5 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v5);
  v6 = type metadata accessor for TranscriptProtoASTPickType(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v17 - v10;
  v18 = 0;
  memset(v17, 0, sizeof(v17));
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB32C0, type metadata accessor for TranscriptProtoASTPickType, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTPickType);
  sub_23FB2D8E0();
  if (v2)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v11, (uint64_t)v9, type metadata accessor for TranscriptProtoASTPickType);
    v12 = v9[8];
    if (v12 == 255)
    {
      *(_QWORD *)&v17[0] = &type metadata for TranscriptProtoAstpickTypeEnum;
      sub_23F6916B8(&qword_256EBEEC0);
      v14 = sub_23FB2F17C();
      v6 = v15;
      sub_23F77D8D0();
      swift_allocError();
      *v16 = v14;
      v16[1] = v6;
      swift_willThrow();
      sub_23F6D3508((uint64_t)v9, type metadata accessor for TranscriptProtoASTPickType);
      sub_23F6BC34C(a1, a2);
      sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoASTPickType);
    }
    else
    {
      if ((v12 & 1) != 0)
        v6 = 0;
      else
        v6 = *(_QWORD *)v9;
      sub_23F6D3508((uint64_t)v9, type metadata accessor for TranscriptProtoASTPickType);
      sub_23F6BC34C(a1, a2);
      sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoASTPickType);
    }
  }
  return v6;
}

uint64_t sub_23FADF014(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;

  v3 = v2;
  v6 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v6);
  v7 = type metadata accessor for TranscriptProtoASTLiteral(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v15 - v11;
  v16 = 0;
  memset(v15, 0, sizeof(v15));
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB36D8, type metadata accessor for TranscriptProtoASTLiteral, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteral);
  sub_23FB2D8E0();
  if (v2)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v12, (uint64_t)v10, type metadata accessor for TranscriptProtoASTLiteral);
    AST.Literal.init(transcript:)();
    v3 = v14;
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v12, type metadata accessor for TranscriptProtoASTLiteral);
  }
  return v3;
}

void sub_23FADF1E4(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;

  v7 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for TranscriptProtoASTIfStmt(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v22 - v12;
  v24 = 0;
  v22 = 0u;
  v23 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB3690, type metadata accessor for TranscriptProtoASTIfStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTIfStmt);
  sub_23FB2D8E0();
  if (v3)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v13, (uint64_t)v11, type metadata accessor for TranscriptProtoASTIfStmt);
    AST.IfStmt.init(transcript:)((uint64_t)v11, v14, v15, v16, v17, v18, v19, v20, v22, *((uint64_t *)&v22 + 1));
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v13, type metadata accessor for TranscriptProtoASTIfStmt);
    v21 = v23;
    *(_OWORD *)a3 = v22;
    *(_QWORD *)(a3 + 16) = v21;
  }
}

void sub_23FADF39C(uint64_t a1@<X0>, unint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;

  v7 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for TranscriptProtoASTForInStmt(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v22 - v12;
  v24 = 0;
  v22 = 0u;
  v23 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB36A8, type metadata accessor for TranscriptProtoASTForInStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTForInStmt);
  sub_23FB2D8E0();
  if (v3)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v13, (uint64_t)v11, type metadata accessor for TranscriptProtoASTForInStmt);
    AST.ForInStmt.init(transcript:)((uint64_t)v11, v14, v15, v16, v17, v18, v19, v20, v22, *((uint64_t *)&v22 + 1));
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v13, type metadata accessor for TranscriptProtoASTForInStmt);
    v21 = v23;
    *a3 = v22;
    a3[1] = v21;
  }
}

void sub_23FADF554(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v7 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for TranscriptProtoContextRetrieved(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v34 - v12;
  v36 = 0;
  v34 = 0u;
  v35 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB30D8, type metadata accessor for TranscriptProtoContextRetrieved, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextRetrieved);
  sub_23FB2D8E0();
  if (v3)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v13, (uint64_t)v11, type metadata accessor for TranscriptProtoContextRetrieved);
    v14 = swift_bridgeObjectRetain();
    sub_23F776A1C(v14, v15, v16, v17, v18, v19, v20, v21, v34, *((uint64_t *)&v34 + 1), v35, *((uint64_t *)&v35 + 1), v36, v37, v38, v39, v40, v41, v42,
      v43);
    v23 = v22;
    v24 = swift_bridgeObjectRetain();
    sub_23F776A1C(v24, v25, v26, v27, v28, v29, v30, v31, v34, *((uint64_t *)&v34 + 1), v35, *((uint64_t *)&v35 + 1), v36, v37, v38, v39, v40, v41, v42,
      v43);
    v33 = v32;
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoContextRetrieved);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v13, type metadata accessor for TranscriptProtoContextRetrieved);
    *a3 = v23;
    a3[1] = v33;
  }
}

void sub_23FADF76C(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  __int128 v14;
  int v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;

  v7 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for TranscriptProtoToolRetrievalResponse(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v16 - v12;
  v18 = 0;
  v16 = 0u;
  v17 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB3920, type metadata accessor for TranscriptProtoToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolRetrievalResponse);
  sub_23FB2D8E0();
  if (v3)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v13, (uint64_t)v11, type metadata accessor for TranscriptProtoToolRetrievalResponse);
    ToolRetrievalResponse.init(transcript:)(v11, &v16);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v13, type metadata accessor for TranscriptProtoToolRetrievalResponse);
    v14 = v17;
    v15 = v18;
    *(_OWORD *)a3 = v16;
    *(_OWORD *)(a3 + 16) = v14;
    *(_DWORD *)(a3 + 32) = v15;
    *(_OWORD *)(a3 + 40) = v19;
  }
}

void sub_23FADF934(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD v17[2];
  uint64_t v18;

  v7 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v17 - v12;
  v18 = 0;
  memset(v17, 0, sizeof(v17));
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB27E8, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  sub_23FB2D8E0();
  if (v3)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v13, (uint64_t)v11, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    v14 = *v11;
    v15 = v11[1];
    v16 = v11[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v13, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    *a3 = v14;
    a3[1] = v15;
    a3[2] = v16;
  }
}

void sub_23FADFAF4(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  _QWORD v18[2];
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  char *v22;

  v18[1] = a3;
  v6 = sub_23FB2C4B8();
  MEMORY[0x24BDAC7A8](v6);
  v22 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F6916B8(&qword_256EA2798);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v11);
  v12 = type metadata accessor for TranscriptProtoUndoContext(0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v18 - v16;
  v21 = 0;
  v19 = 0u;
  v20 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB2C38, type metadata accessor for TranscriptProtoUndoContext, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoContext);
  sub_23FB2D8E0();
  if (v3)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v17, (uint64_t)v15, type metadata accessor for TranscriptProtoUndoContext);
    sub_23FB2C47C();
    sub_23F77B568();
    sub_23F6B4F84((uint64_t)v10, &qword_256EA2798);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23FB2C83C();
    sub_23F6D3508((uint64_t)v15, type metadata accessor for TranscriptProtoUndoContext);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v17, type metadata accessor for TranscriptProtoUndoContext);
  }
}

void sub_23FADFD68(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  char *v44;

  v35 = a3;
  v5 = sub_23FB2EB1C();
  v6 = *(_QWORD *)(v5 - 8);
  v38 = v5;
  v39 = v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v37 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v40 = (char *)&v35 - v9;
  v36 = sub_23FB2ED38();
  v10 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v13);
  v14 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v35 - v18;
  v43 = 0;
  v41 = 0u;
  v42 = 0u;
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB2A40, type metadata accessor for TranscriptProtoUnresolvedParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnresolvedParameterValue);
  v20 = v44;
  sub_23FB2D8E0();
  if (v20)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    v21 = v39;
    v44 = v12;
    sub_23F7E7704((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoUnresolvedParameterValue);
    sub_23F77B844();
    v22 = v38;
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v37, v40, v38);
    sub_23FB2ED2C();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v40, v22);
    v23 = swift_bridgeObjectRetain();
    sub_23F7729B8(v23, v24, v25, v26, v27, v28, v29, v30, v35, v36);
    v32 = v31;
    sub_23F6D3508((uint64_t)v17, type metadata accessor for TranscriptProtoUnresolvedParameterValue);
    v33 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
    v34 = v35;
    v33(v35, v44, v36);
    sub_23F6BC34C(a1, a2);
    *(_QWORD *)(v34 + *(int *)(type metadata accessor for ClientAction.UnresolvedParameterValue(0) + 20)) = v32;
    sub_23F6D3508((uint64_t)v19, type metadata accessor for TranscriptProtoUnresolvedParameterValue);
  }
}

void sub_23FAE00B8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD v20[2];
  uint64_t v21;

  v5 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v5);
  v6 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v20 - v10;
  v21 = 0;
  memset(v20, 0, sizeof(v20));
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB2C80, type metadata accessor for TranscriptProtoValueDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueDisambiguation);
  sub_23FB2D8E0();
  if (v2)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v11, (uint64_t)v9, type metadata accessor for TranscriptProtoValueDisambiguation);
    v12 = swift_bridgeObjectRetain();
    sub_23F7729B8(v12, v13, v14, v15, v16, v17, v18, v19, *(uint64_t *)&v20[0], *((uint64_t *)&v20[0] + 1));
    sub_23FB2C9EC();
    sub_23F6D3508((uint64_t)v9, type metadata accessor for TranscriptProtoValueDisambiguation);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoValueDisambiguation);
  }
}

void sub_23FAE0278(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char v14;
  _OWORD v15[2];
  uint64_t v16;

  v7 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v15 - v12;
  v16 = 0;
  memset(v15, 0, sizeof(v15));
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB31C0, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionRequirementResolution);
  sub_23FB2D8E0();
  if (v3)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v13, (uint64_t)v11, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution);
    v14 = *v11;
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v13, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution);
    *a3 = v14;
  }
}

void sub_23FAE041C(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t DecorationPrePlannerResultPayload;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char v14;
  _OWORD v15[2];
  uint64_t v16;

  v7 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v7);
  DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
  v9 = MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayload);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v15 - v12;
  v16 = 0;
  memset(v15, 0, sizeof(v15));
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB3B00, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
  sub_23FB2D8E0();
  if (v3)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v13, (uint64_t)v11, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
    QueryDecorationPrePlannerResultPayload.init(transcript:)();
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v13, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
    v14 = BYTE8(v15[0]);
    *(_QWORD *)a3 = *(_QWORD *)&v15[0];
    *(_BYTE *)(a3 + 8) = v14;
  }
}

void sub_23FAE05D4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;
  uint64_t v18;

  v5 = sub_23FB2D76C();
  MEMORY[0x24BDAC7A8](v5);
  v6 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v16 - v10;
  v17 = 0;
  memset(v16, 0, sizeof(v16));
  sub_23F6D1E20(a1, a2);
  sub_23FB2D760();
  sub_23F6D3458(&qword_256EB2C08, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailureDeveloperDefinedError);
  sub_23FB2D8E0();
  if (v2)
  {
    sub_23F6BC34C(a1, a2);
  }
  else
  {
    sub_23F7E7704((uint64_t)v11, (uint64_t)v9, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
    v12 = v9[1];
    v18 = *v9;
    v14 = v9[2];
    v13 = v9[3];
    v15 = v9[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    MEMORY[0x242671418](v18, v12, v14, v13, v15);
    sub_23F6D3508((uint64_t)v9, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
    sub_23F6BC34C(a1, a2);
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
  }
}

void TranscriptBidirectionalConvertibleProtocol.init(protoBytes:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;

  sub_23F6B5220();
  v20 = v3;
  v21 = v0;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  sub_23FAE2C38();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6BD134();
  v18 = *(_QWORD *)(v5 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v19 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  sub_23F6B5CD4();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v18 - v15;
  swift_getAssociatedConformanceWitness();
  v22 = 0u;
  v23 = 0u;
  v24 = 0;
  _s16IntelligenceFlow3ASTO0aB14PlannerSupportE7BuiltinO6SearchV5query24isLowConfidenceKnowledge7pickOneAHSS_S2btcfcfA0__0();
  sub_23F6D1E20(v11, v9);
  sub_23F6BD728();
  sub_23FB2D8E0();
  if (v1)
  {
    sub_23F7D2E80();
  }
  else
  {
    v17 = v19;
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 16))(v2, v16, AssociatedTypeWitness);
    (*(void (**)(uint64_t, uint64_t))(v18 + 16))(v2, v7);
    sub_23F7D2E80();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v16, AssociatedTypeWitness);
  }
  sub_23F6B5100();
}

void ConvertibleFromTranscriptTypeProtocol.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_23F6B5220();
  v2 = v1;
  v30 = v3;
  v27 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v1);
  sub_23F6B51A4();
  v29 = v5;
  v28 = v6;
  v31 = v7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = sub_23FB2F65C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v26 - v12;
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v15 = MEMORY[0x24BDAC7A8](v11);
  v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v26 - v18;
  v20 = v2;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v2, v9);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, AssociatedTypeWitness) == 1)
  {
    v21 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v21(v20, v9);
    v22 = sub_23FAE2D10();
    ((void (*)(uint64_t))v21)(v22);
    v23 = 1;
    v24 = v30;
    v25 = v31;
LABEL_6:
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v24, v23, 1, v25);
    goto LABEL_7;
  }
  v26[1] = v2;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v13, AssociatedTypeWitness);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, AssociatedTypeWitness);
  v25 = v31;
  (*(void (**)(char *, uint64_t))(v28 + 16))(v17, v31);
  if (!v0)
  {
    sub_23FAE2CCC();
    sub_23FAE2CDC();
    v24 = v30;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v30, v29, v25);
    v23 = 0;
    goto LABEL_6;
  }
  sub_23FAE2CCC();
  sub_23FAE2CDC();
LABEL_7:
  sub_23F6B5100();
}

void sub_23FAE0B48()
{
  sub_23FAD761C();
}

void sub_23FAE0B7C()
{
  sub_23FAD761C();
}

void sub_23FAE0BB0()
{
  sub_23FAD761C();
}

void sub_23FAE0BE4()
{
  sub_23FAD761C();
}

void sub_23FAE0C18(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23FAD76E8(a1, a2, a3);
}

void sub_23FAE0C2C(uint64_t a1, unint64_t a2)
{
  sub_23FAD78EC(a1, a2);
}

void sub_23FAE0C40()
{
  sub_23FAD761C();
}

void sub_23FAE0C74()
{
  sub_23FAD761C();
}

void sub_23FAE0CA8()
{
  sub_23FAD761C();
}

void sub_23FAE0CDC()
{
  sub_23FAD761C();
}

void sub_23FAE0D10()
{
  sub_23FAD761C();
}

void sub_23FAE0D44()
{
  sub_23FAD761C();
}

void sub_23FAE0D78()
{
  sub_23FAD761C();
}

void sub_23FAE0DAC(uint64_t a1, unint64_t a2)
{
  sub_23FAD7B58(a1, a2);
}

void sub_23FAE0DC0(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23FAD7D20(a1, a2, a3);
}

void sub_23FAE0DD4()
{
  sub_23FAD761C();
}

void sub_23FAE0E08(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23FAD7FD8(a1, a2, a3);
}

void sub_23FAE0E1C()
{
  sub_23FAD761C();
}

void sub_23FAE0E50(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23FAD8258();
  if (!v1)
    *a1 = v3;
  sub_23F878AAC();
}

void sub_23FAE0E94(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23FAD8258();
  if (!v1)
    *a1 = v3;
  sub_23F878AAC();
}

uint64_t sub_23FAE0ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v14 = (char *)&v17 - v13;
  (*(void (**)(char *, uint64_t))(v15 + 16))((char *)&v17 - v13, a1);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a5 + 16))(v14, a3, a5);
  if (v7)
    *a7 = v7;
  return result;
}

uint64_t sub_23FAE0FA8(uint64_t a1, _QWORD *a2)
{
  uint64_t *v2;

  return sub_23FAE0ED8(a1, v2[6], v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t Set<>.init(transcript:)()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t vars0;

  swift_getAssociatedTypeWitness();
  v0 = sub_23FB2F488();
  sub_23F6916B8(&qword_256EA2828);
  MEMORY[0x242674E5C](MEMORY[0x24BEE12E0], v0);
  sub_23F7E79D0();
  result = sub_23FAE2CEC();
  if (&vars0 == (uint64_t *)56)
  {
    v2 = sub_23FAD74F4();
    MEMORY[0x242674E5C](MEMORY[0x24BEE12C8], v2);
    return sub_23FB2F530();
  }
  return result;
}

uint64_t sub_23FAE10EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v13 = (char *)&v16 - v12;
  (*(void (**)(char *, uint64_t))(v14 + 16))((char *)&v16 - v12, a1);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a4 + 16))(v13, a3, a4);
  if (v6)
    *a6 = v6;
  return result;
}

uint64_t sub_23FAE11BC(uint64_t a1, _QWORD *a2)
{
  uint64_t *v2;

  return sub_23FAE10EC(a1, v2[5], v2[2], v2[3], v2[4], a2);
}

void Dictionary<>.init(transcript:)()
{
  sub_23FAE2D04();
  swift_getAssociatedTypeWitness();
  sub_23FB2F05C();
  sub_23FAE2CEC();
  sub_23FAD6E8C();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  _DWORD *v48;
  unsigned int *v49;
  uint64_t v50;
  uint64_t v51;
  _DWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t);
  void (*v59)(uint64_t);
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78[4];
  uint64_t v79;
  _DWORD *v80;
  _DWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD v98[6];

  sub_23F6B5220();
  v3 = v0;
  v5 = v4;
  v6 = sub_23F6B632C();
  v93 = *(_QWORD *)(v6 - 8);
  v94 = v6;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  v84 = (uint64_t)v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B6634();
  sub_23F7F68B0();
  v91 = v9;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v90 = (uint64_t)v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6D3D14();
  v83 = v13;
  sub_23F6B5664();
  v15 = MEMORY[0x24BDAC7A8](v14);
  sub_23F77E6A4(v15, v16, v17, v18, v19, v20, v21, v22, v78[0]);
  v23 = sub_23F6B58C8();
  v24 = (void (*)(uint64_t))MEMORY[0x24BE52140];
  v95 = *(_QWORD **)(v23 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F6B5F6C();
  v82 = sub_23F6B5D98();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v28);
  v92 = (unsigned int *)((char *)v78 - v29);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F6B5314((uint64_t)v78 - v31);
  sub_23FB29654(&qword_256EA15A8, v24);
  v96 = v23;
  v97 = v1;
  v32 = sub_23FB2F050();
  sub_23F78F084(v5, v98);
  v85 = v98[0];
  v78[2] = v98[1];
  v86 = v98[3];
  v33 = v98[4];
  v78[3] = (unint64_t)(v98[2] + 64) >> 6;
  v78[1] = v5;
  sub_23F6B5508();
  v79 = v2;
  if (!v33)
    goto LABEL_3;
LABEL_2:
  sub_23FB2A1A8();
  v88 = v33;
  v35 = v34 | (v86 << 6);
  while (1)
  {
    v46 = *(_DWORD *)(*(_QWORD *)(v85 + 48) + 4 * v35);
    v47 = v82;
    v48 = v80;
    sub_23FB2B0F4((uint64_t)v80 + *(int *)(v82 + 48), *(_QWORD *)(v85 + 56) + *(_QWORD *)(v93 + 72) * v35);
    *v48 = v46;
    v49 = v92;
    sub_23F6B4EC0((uint64_t)v48, (uint64_t)v92, &qword_256EA2678);
    v50 = *v49;
    sub_23FB2C74C();
    v51 = *(int *)(v47 + 48);
    v52 = v81;
    v53 = (uint64_t)v81 + v51;
    *v81 = v50;
    sub_23FB2B0F4((uint64_t)v52 + v51, (uint64_t)v49 + v51);
    sub_23FB2B0F4(v84, v53);
    v54 = v83;
    sub_23FB2ED2C();
    if (v3)
    {
      sub_23FB29C9C(v93);
      sub_23FB2A5E8((uint64_t)v95);
      sub_23F693DFC();
      sub_23F6B4F84((uint64_t)v92, &qword_256EA2678);
      sub_23F77DE3C();
      sub_23FB2A8B8();
      goto LABEL_40;
    }
    v87 = 0;
    v55 = v97;
    sub_23FB29C9C(v93);
    v56 = v91;
    v57 = v89;
    v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(v91 + 32);
    v58(v89, v54, v55);
    v59 = (void (*)(uint64_t))v95[2];
    sub_23FB2AE34();
    v60 = sub_23F879688();
    v59(v60);
    sub_23F759774(v90, v57, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 16));
    sub_23F77D9A4();
    sub_23F78C678();
    sub_23FB2ADC8();
    if (__OFADD__(v63, v64))
      break;
    v65 = v61;
    v66 = v62;
    sub_23F6916B8(&qword_256EA86F0);
    if ((sub_23FB2F914() & 1) != 0)
    {
      sub_23F78C678();
      if ((v66 & 1) != (v68 & 1))
        goto LABEL_44;
      v65 = v67;
    }
    if ((v66 & 1) != 0)
    {
      v69 = sub_23FB2AD9C();
      sub_23FB2A888(v69, v70, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v66 + 40));
    }
    else
    {
      sub_23F7D2B98(v32 + 8 * (v65 >> 6));
      ((void (*)(unint64_t, uint64_t, uint64_t))v59)(v71 + v95[9] * v65, v50, v96);
      v72 = sub_23FB2AD9C();
      ((void (*)(uint64_t))v58)(v72);
      sub_23FB2AC90();
      if (v37)
        goto LABEL_42;
      *(_QWORD *)(v32 + 16) = v73;
    }
    sub_23FAD7094();
    v74 = (void (*)(uint64_t))v95[1];
    v75 = sub_23F6B6848();
    v74(v75);
    sub_23FB2ACA8(v89, *(uint64_t (**)(uint64_t, _QWORD))(v66 + 8));
    sub_23FB2B084();
    sub_23F6B4F84((uint64_t)v92, &qword_256EA2678);
    v3 = v87;
    v33 = v88;
    if (v88)
      goto LABEL_2;
LABEL_3:
    if (__OFADD__(v86, 1))
      goto LABEL_43;
    sub_23FB29CD8();
    if (v36 == v37)
      goto LABEL_39;
    sub_23FB2A25C();
    if (!v38)
    {
      sub_23FB29B84();
      if (v36 == v37)
        goto LABEL_39;
      sub_23FB29BB8();
      if (!v39)
      {
        sub_23FB29B84();
        if (v36 == v37)
          goto LABEL_39;
        sub_23FB29BB8();
        if (!v40)
        {
          sub_23FB29B84();
          if (v36 == v37)
            goto LABEL_39;
          sub_23FB29BB8();
          if (!v41)
          {
            sub_23FB29B84();
            if (v36 == v37)
              goto LABEL_39;
            sub_23FB29BB8();
            if (!v42)
            {
              sub_23FB29CD8();
              if (v36 == v37)
                goto LABEL_39;
              sub_23FB2A25C();
              if (!v76)
              {
                while (1)
                {
                  sub_23FB29CD8();
                  if (v36 == v37)
                    break;
                  sub_23FB2ADE0();
                  if (v77)
                    goto LABEL_19;
                }
LABEL_39:
                sub_23FB2A8B8();
                sub_23F77DE3C();
LABEL_40:
                sub_23F6B6834();
                sub_23F6B5100();
                return;
              }
            }
          }
        }
      }
    }
LABEL_19:
    sub_23F6B5DC0();
    v88 = v43;
    v35 = v45 + (v44 << 6);
    v86 = v44;
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  sub_23FB2FBD8();
  __break(1u);
}

uint64_t sub_23FAE126C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v11 = (char *)v14 - v10;
  (*(void (**)(char *, uint64_t))(v12 + 16))((char *)v14 - v10, a1);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(a6 + 16))(v11, a4, a6);
}

uint64_t sub_23FAE1330(uint64_t a1)
{
  uint64_t *v1;

  return sub_23FAE126C(a1, v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_23FAE1350(uint64_t a1)
{
  return sub_23FAE1388(a1, (void (*)(_QWORD))MEMORY[0x24BDCB410], MEMORY[0x24BDCB400], &qword_256F5C790);
}

uint64_t sub_23FAE136C(uint64_t a1)
{
  return sub_23FAE1388(a1, (void (*)(_QWORD))MEMORY[0x24BDCB268], MEMORY[0x24BDCB260], &qword_256F5C798);
}

uint64_t sub_23FAE1388(uint64_t a1, void (*a2)(_QWORD), uint64_t (*a3)(void), uint64_t *a4)
{
  uint64_t result;

  a2(0);
  swift_allocObject();
  result = a3();
  *a4 = result;
  return result;
}

void sub_23FAE13D0()
{
  sub_23FAD935C();
}

void sub_23FAE1404()
{
  sub_23FAD761C();
}

void sub_23FAE1438()
{
  sub_23FAD761C();
}

void protocol witness for ProtoBytesConvertible.init(protoBytes:) in conformance ParticipantID(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v5 = sub_23FAD8388(a1, a2);
  if (!v3)
  {
    *a3 = v5;
    a3[1] = v6;
  }
  sub_23F878AAC();
}

void protocol witness for ProtoBytesConvertible.init(protoBytes:) in conformance SpanID(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  v5 = sub_23FAD8524(a1, a2);
  if (!v3)
    *a3 = v5;
  sub_23F878AAC();
}

void sub_23FAE14B4()
{
  sub_23FAD761C();
}

void sub_23FAE14E8()
{
  sub_23FAD761C();
}

void sub_23FAE151C(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23FAD86BC(a1, a2, a3);
}

void sub_23FAE1530(uint64_t a1, unint64_t a2)
{
  sub_23FAD8940(a1, a2);
}

void sub_23FAE1544(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23FAD8AE8(a1, a2, a3);
}

void sub_23FAE1558()
{
  sub_23FAD8D60();
}

void sub_23FAE1584()
{
  sub_23FAD8D60();
}

void sub_23FAE15B0(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23FAD8E3C(a1, a2, a3);
}

void sub_23FAE15C4(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_23FAD904C(a1, a2, a3);
}

void sub_23FAE15D8()
{
  sub_23FAD761C();
}

void sub_23FAE160C()
{
  sub_23FAD761C();
}

void sub_23FAE1640()
{
  sub_23FADA894();
}

void sub_23FAE166C()
{
  sub_23FAD935C();
}

void sub_23FAE16A0()
{
  sub_23FADA57C();
}

void sub_23FAE16D4()
{
  sub_23FAD761C();
}

void sub_23FAE1708(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23FAD955C(a1, a2, a3);
}

void sub_23FAE171C()
{
  sub_23FAD98C0();
}

void sub_23FAE1748(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_23FAD9714(a1, a2, a3);
}

void sub_23FAE175C()
{
  sub_23FAD98C0();
}

void sub_23FAE1788()
{
  sub_23FAD98C0();
}

void sub_23FAE17B4()
{
  sub_23FAD98C0();
}

void sub_23FAE17E0()
{
  sub_23FAD98C0();
}

void sub_23FAE180C()
{
  sub_23FAD761C();
}

void sub_23FAE1840()
{
  sub_23FAD761C();
}

void sub_23FAE1874()
{
  sub_23FAD761C();
}

void sub_23FAE18A8(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23FAD99C8(a1, a2, a3);
}

void sub_23FAE18BC(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t (*a3)(uint64_t a1)@<X8>)
{
  sub_23FAD9CD4(a1, a2, a3);
}

void sub_23FAE18D0(uint64_t a1, unint64_t a2)
{
  sub_23FAD9FE0(a1, a2);
}

void sub_23FAE18E4()
{
  sub_23FAD761C();
}

void sub_23FAE1918(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23FADA1C4(a1, a2, a3);
}

void sub_23FAE192C()
{
  sub_23FAD761C();
}

void sub_23FAE1960()
{
  sub_23FAD761C();
}

void sub_23FAE1994()
{
  sub_23FAD761C();
}

void sub_23FAE19C8()
{
  sub_23FAD761C();
}

void sub_23FAE19FC()
{
  sub_23FAD761C();
}

void sub_23FAE1A30()
{
  sub_23FAD761C();
}

void sub_23FAE1A64()
{
  sub_23FADA57C();
}

void sub_23FAE1A98(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_23FADA688(a1, a2, a3);
}

void sub_23FAE1AAC()
{
  sub_23FADA894();
}

void sub_23FAE1AD8(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_23FADA974(a1, a2, a3);
}

void sub_23FAE1AEC(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X8>)
{
  sub_23FADAB20(a1, a2, a3);
}

void sub_23FAE1B00()
{
  sub_23FAD761C();
}

void sub_23FAE1B34()
{
  sub_23FAD761C();
}

void sub_23FAE1B68()
{
  sub_23FAD761C();
}

void sub_23FAE1B9C()
{
  sub_23FAD761C();
}

void sub_23FAE1BD0()
{
  sub_23FADA57C();
}

void sub_23FAE1C04()
{
  sub_23FAD761C();
}

void sub_23FAE1C38(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23FADAE84(a1, a2, a3);
}

void sub_23FAE1C4C(uint64_t a1, unint64_t a2)
{
  sub_23FADB168(a1, a2);
}

void sub_23FAE1C60()
{
  sub_23FAD761C();
}

void sub_23FAE1C94()
{
  sub_23FAD761C();
}

void sub_23FAE1CC8()
{
  sub_23FADE3E0();
}

void sub_23FAE1CFC(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23FADB33C(a1, a2, a3);
}

void sub_23FAE1D10(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23FADB644(a1, a2, a3);
}

void sub_23FAE1D24()
{
  sub_23FAD761C();
}

void sub_23FAE1D58()
{
  sub_23FAD761C();
}

void sub_23FAE1D8C()
{
  sub_23FAD761C();
}

void sub_23FAE1DC0(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23FADB854(a1, a2, a3);
}

void sub_23FAE1DD4(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23FADBA30(a1, a2, a3);
}

void sub_23FAE1DE8(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23FADBC00(a1, a2, a3);
}

void sub_23FAE1DFC(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_23FADBDB8(a1, a2, a3);
}

void sub_23FAE1E10(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_23FADC0CC(a1, a2, a3);
}

void sub_23FAE1E24(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_23FADC2B0(a1, a2, a3);
}

void sub_23FAE1E38()
{
  sub_23FADA57C();
}

void sub_23FAE1E6C()
{
  sub_23FAD761C();
}

void sub_23FAE1EA0(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23FADC470(a1, a2, a3);
}

void sub_23FAE1EB4(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  sub_23FADC628(a1, a2, a3);
}

void sub_23FAE1EC8()
{
  sub_23FAD761C();
}

void sub_23FAE1EFC(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23FADC8D8(a1, a2, a3);
}

void sub_23FAE1F10()
{
  sub_23FAD761C();
}

void sub_23FAE1F44()
{
  sub_23FAD761C();
}

void sub_23FAE1F78(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_23FADCBA4(a1, a2, a3);
}

void sub_23FAE1F8C(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_23FADCE90(a1, a2, a3);
}

void sub_23FAE1FA0(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_23FADD05C(a1, a2, a3);
}

void sub_23FAE1FB4(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23FADD200(a1, a2, a3);
}

void sub_23FAE1FC8()
{
  sub_23FAD761C();
}

void sub_23FAE1FFC(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23FADD4C0(a1, a2, a3);
}

void sub_23FAE2010()
{
  sub_23FAD761C();
}

void sub_23FAE2044(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_23FADD688(a1, a2, a3);
}

void sub_23FAE2058()
{
  sub_23FAD761C();
}

void sub_23FAE208C()
{
  sub_23FAD761C();
}

void sub_23FAE20C0()
{
  sub_23FAD761C();
}

void sub_23FAE20F4()
{
  sub_23FAD761C();
}

void sub_23FAE2128()
{
  sub_23FAD761C();
}

void sub_23FAE215C(uint64_t a1, unint64_t a2)
{
  sub_23FADD834(a1, a2);
}

void sub_23FAE2170(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23FADD9F4(a1, a2, a3);
}

void sub_23FAE2184()
{
  sub_23FAD761C();
}

void sub_23FAE21B8()
{
  sub_23FAD761C();
}

void sub_23FAE21EC()
{
  sub_23FAD761C();
}

void sub_23FAE2220()
{
  sub_23FAD761C();
}

void sub_23FAE2254(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23FADDBE4(a1, a2, a3);
}

void sub_23FAE2268(uint64_t a1, unint64_t a2)
{
  sub_23FADDE14(a1, a2);
}

void sub_23FAE227C()
{
  sub_23FAD761C();
}

void sub_23FAE22B0()
{
  sub_23FAD761C();
}

void sub_23FAE22E4()
{
  sub_23FAD761C();
}

void sub_23FAE2318(uint64_t a1, unint64_t a2)
{
  sub_23FADE01C(a1, a2);
}

void sub_23FAE232C(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23FADE1F0(a1, a2, a3);
}

void sub_23FAE2340()
{
  sub_23FADE3E0();
}

void sub_23FAE2374()
{
  sub_23FADE740();
}

void sub_23FAE23A8(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23FADE4BC(a1, a2, a3);
}

void sub_23FAE23BC()
{
  sub_23FAD761C();
}

void sub_23FAE23F0()
{
  sub_23FADE3E0();
}

void sub_23FAE2424()
{
  sub_23FADE3E0();
}

void sub_23FAE2458()
{
  sub_23FADE740();
}

void sub_23FAE248C()
{
  sub_23FAD761C();
}

void protocol witness for ProtoBytesConvertible.init(protoBytes:) in conformance AST.Stmt(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  v5 = sub_23FADE848(a1, a2);
  if (!v3)
    *a3 = v5;
  sub_23F878AAC();
}

void sub_23FAE24E4()
{
  sub_23FAD761C();
}

void sub_23FAE2518(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_23FADE9E8(a1, a2, a3);
}

void sub_23FAE252C(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23FADEB98(a1, a2, a3);
}

void sub_23FAE2540()
{
  sub_23FAD761C();
}

void protocol witness for ProtoBytesConvertible.init(protoBytes:) in conformance AST.PickType(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  char v6;

  v5 = sub_23FADEDE0(a1, a2);
  if (!v3)
  {
    *(_QWORD *)a3 = v5;
    *(_BYTE *)(a3 + 8) = v6 & 1;
  }
  sub_23F878AAC();
}

void protocol witness for ProtoBytesConvertible.init(protoBytes:) in conformance AST.Literal(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v5 = sub_23FADF014(a1, a2);
  if (!v3)
  {
    *(_QWORD *)a3 = v5;
    *(_QWORD *)(a3 + 8) = v6;
    *(_BYTE *)(a3 + 16) = v7;
  }
  sub_23F878AAC();
}

void protocol witness for ProtoBytesConvertible.init(protoBytes:) in conformance AST.IfStmt(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23FADF1E4(a1, a2, a3);
}

void protocol witness for ProtoBytesConvertible.init(protoBytes:) in conformance AST.ForInStmt(uint64_t a1@<X0>, unint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  sub_23FADF39C(a1, a2, a3);
}

uint64_t dispatch thunk of ProtoBytesConvertible.init(protoBytes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ProtoBytesConvertible.protoBytes()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ConvertibleFromTranscriptTypeProtocol.init(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

ValueMetadata *type metadata accessor for TranscriptConversion()
{
  return &type metadata for TranscriptConversion;
}

uint64_t getEnumTagSinglePayload for TranscriptConversion.Error(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TranscriptConversion.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t sub_23FAE26EC(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_23FAE2704(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptConversion.Error()
{
  return &type metadata for TranscriptConversion.Error;
}

void sub_23FAE2734()
{
  sub_23FAD761C();
}

void sub_23FAE2768()
{
  sub_23FAD761C();
}

void sub_23FAE279C(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_23FADF554(a1, a2, a3);
}

void sub_23FAE27B0()
{
  sub_23FAD761C();
}

void sub_23FAE27E4()
{
  sub_23FAD761C();
}

void sub_23FAE2818()
{
  sub_23FADA57C();
}

void sub_23FAE284C(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23FADF76C(a1, a2, a3);
}

void sub_23FAE2860()
{
  sub_23FAD761C();
}

void sub_23FAE2894()
{
  sub_23FAD761C();
}

void sub_23FAE28C8()
{
  sub_23FAD761C();
}

void sub_23FAE28FC()
{
  sub_23FAD761C();
}

void sub_23FAE2930(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_23FADF934(a1, a2, a3);
}

void sub_23FAE2944(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23FADFAF4(a1, a2, a3);
}

void sub_23FAE2958()
{
  sub_23FAD761C();
}

void sub_23FAE298C(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23FADFD68(a1, a2, a3);
}

void sub_23FAE29A0(uint64_t a1, unint64_t a2)
{
  sub_23FAE00B8(a1, a2);
}

void sub_23FAE29B4()
{
  sub_23FAD761C();
}

void sub_23FAE29E8(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  sub_23FAE0278(a1, a2, a3);
}

void sub_23FAE29FC()
{
  sub_23FADA894();
}

void sub_23FAE2A28()
{
  sub_23FADA894();
}

void sub_23FAE2A54()
{
  sub_23FAD761C();
}

void sub_23FAE2A88()
{
  sub_23FAD761C();
}

void sub_23FAE2ABC()
{
  sub_23FAD761C();
}

void sub_23FAE2AF0()
{
  sub_23FAD761C();
}

void sub_23FAE2B24(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23FAE041C(a1, a2, a3);
}

void sub_23FAE2B38(uint64_t a1, unint64_t a2)
{
  sub_23FAE05D4(a1, a2);
}

uint64_t sub_23FAE2B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F6916B8(&qword_256EA2780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FAE2B94()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = 0;
  *(_OWORD *)(v2 - 128) = 0u;
  *(_OWORD *)(v2 - 112) = 0u;
  return sub_23F6D1E20(v1, v0);
}

uint64_t sub_23FAE2BAC()
{
  return sub_23FB2D8E0();
}

uint64_t sub_23FAE2BC0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
  return sub_23FB2D76C();
}

uint64_t sub_23FAE2BD8()
{
  return sub_23FB2D8E0();
}

uint64_t sub_23FAE2BE4()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t sub_23FAE2C00()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = 0;
  *(_OWORD *)(v2 - 128) = 0u;
  *(_OWORD *)(v2 - 112) = 0u;
  return sub_23F6D1E20(v1, v0);
}

uint64_t sub_23FAE2C1C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FAE2C38()
{
  return sub_23FB2D76C();
}

void sub_23FAE2C40()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_23F6D3508(v1, v0);
}

uint64_t sub_23FAE2C4C()
{
  unint64_t v0;
  uint64_t v1;

  return sub_23F6BC34C(v1, v0);
}

uint64_t sub_23FAE2C58()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

void sub_23FAE2C74()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_23F6D3508(v1, v0);
}

uint64_t sub_23FAE2C80()
{
  return sub_23FB2D760();
}

uint64_t sub_23FAE2C88()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
}

void sub_23FAE2C9C()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;

  sub_23F7E7704(v1, v2, v0);
}

void sub_23FAE2CAC()
{
  uint64_t (*v0)(uint64_t);
  unint64_t *v1;
  uint64_t v2;

  sub_23F6D3458(v1, v0, v2);
}

void sub_23FAE2CBC()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F6D3508(v0, *(uint64_t (**)(_QWORD))(v1 - 144));
}

uint64_t sub_23FAE2CCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(*(_QWORD *)(v2 - 136), v1);
}

uint64_t sub_23FAE2CDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_23FAE2CEC()
{
  return swift_bridgeObjectRelease();
}

void sub_23FAE2CF8(unint64_t *a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  sub_23F6D3458(a1, v1, v2);
}

uint64_t sub_23FAE2D10()
{
  uint64_t v0;

  return v0;
}

void sub_23FAE2D1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  _QWORD *v76;
  _QWORD *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v3 = sub_23F6916B8(&qword_256EA2628);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_23F6916B8(&qword_256EA26F0);
  v6 = MEMORY[0x24BDAC7A8](v86);
  v78 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v77 = (uint64_t *)((char *)&v65 - v9);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v76 = (uint64_t *)((char *)&v65 - v11);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v65 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v75 = (uint64_t *)((char *)&v65 - v16);
  MEMORY[0x24BDAC7A8](v15);
  v74 = (uint64_t *)((char *)&v65 - v17);
  v18 = type metadata accessor for TranscriptProtoParameter(0);
  v72 = *(_QWORD *)(v18 - 8);
  v73 = v18;
  v19 = MEMORY[0x24BDAC7A8](v18);
  v71 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v65 - v21;
  v23 = *(_QWORD *)(a1 + 16);
  if (v23)
  {
    v69 = v14;
    v70 = v5;
    v87 = v1;
    v88 = MEMORY[0x24BEE4AF8];
    sub_23F7116F4();
    v24 = sub_23F7AE664(a1);
    if ((v24 & 0x8000000000000000) == 0)
    {
      v26 = v24;
      if (v24 < 1 << *(_BYTE *)(a1 + 32))
      {
        v27 = a1 + 64;
        v67 = v22;
        v68 = a1;
        v66 = a1 + 64;
        while ((*(_QWORD *)(v27 + 8 * (v26 >> 6)) & (1 << v26)) != 0)
        {
          if ((_DWORD)v25 != *(_DWORD *)(a1 + 36))
            goto LABEL_25;
          v82 = 1 << v26;
          v83 = v26 >> 6;
          v80 = v23;
          v81 = v25;
          v28 = (uint64_t)v74;
          v29 = (uint64_t)v74 + *(int *)(v86 + 48);
          v30 = *(_QWORD *)(a1 + 48);
          v31 = *(_QWORD *)(a1 + 56);
          v32 = (uint64_t *)(v30 + 32 * v26);
          v34 = *v32;
          v33 = v32[1];
          v35 = v32[2];
          v36 = *((_BYTE *)v32 + 24);
          *v74 = *v32;
          *(_QWORD *)(v28 + 8) = v33;
          *(_QWORD *)(v28 + 16) = v35;
          *(_BYTE *)(v28 + 24) = v36;
          v37 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for Candidate(0) - 8) + 72);
          v84 = v26;
          sub_23F6F5920(v31 + v37 * v26, v29, type metadata accessor for Candidate);
          v38 = v75;
          *v75 = v34;
          v38[1] = v33;
          v38[2] = v35;
          *((_BYTE *)v38 + 24) = v36;
          v39 = v86;
          sub_23F6F5920(v29, (uint64_t)v38 + *(int *)(v86 + 48), type metadata accessor for Candidate);
          v40 = (uint64_t)v38;
          v41 = (uint64_t)v69;
          sub_23F6B4EC0(v40, (uint64_t)v69, &qword_256EA26F0);
          swift_bridgeObjectRetain_n();
          sub_23F6B4F84(v28, &qword_256EA26F0);
          v42 = *(int *)(v39 + 48);
          v43 = v39;
          v44 = v76;
          v45 = (uint64_t)v76 + v42;
          v46 = v41 + v42;
          v48 = *(_QWORD *)v41;
          v47 = *(_QWORD *)(v41 + 8);
          v49 = *(_QWORD *)(v41 + 16);
          v50 = *(unsigned __int8 *)(v41 + 24);
          *v76 = *(_QWORD *)v41;
          v44[1] = v47;
          v44[2] = v49;
          *((_BYTE *)v44 + 24) = v50;
          v85 = (uint64_t)v44 + v42;
          sub_23F6F5920(v41 + v42, v45, type metadata accessor for Candidate);
          v51 = *(int *)(v43 + 48);
          v52 = v77;
          v53 = (uint64_t)v77 + v51;
          *v77 = v48;
          v52[1] = v47;
          v52[2] = v49;
          *((_BYTE *)v52 + 24) = v50;
          sub_23F6F5920(v46, (uint64_t)v52 + v51, type metadata accessor for Candidate);
          swift_bridgeObjectRetain();
          sub_23F6F8C88(v53, type metadata accessor for Candidate);
          sub_23F6F5920(v46, (uint64_t)&v78[*(int *)(v43 + 48)], type metadata accessor for Candidate);
          v54 = (uint64_t)v70;
          v55 = v87;
          TranscriptProtoCandidate.init(handwritten:)();
          v87 = v55;
          if (v55)
          {
            swift_bridgeObjectRelease();
            sub_23F6F8C88(v85, type metadata accessor for Candidate);
            sub_23F6B4F84(v41, &qword_256EA26F0);
            swift_release();
            return;
          }
          if (v50)
            v56 = 0;
          else
            v56 = v49;
          v79 = v56;
          v57 = type metadata accessor for TranscriptProtoCandidate(0);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v54, 0, 1, v57);
          v58 = (uint64_t)v71;
          v59 = (uint64_t)&v71[*(int *)(v73 + 24)];
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v59, 1, 1, v57);
          _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
          *(_QWORD *)v58 = v48;
          *(_QWORD *)(v58 + 8) = v47;
          *(_QWORD *)(v58 + 16) = v79;
          *(_BYTE *)(v58 + 24) = v50;
          sub_23F710E80(v54, v59, &qword_256EA2628);
          v60 = (uint64_t)v67;
          sub_23F6F594C(v58, (uint64_t)v67, type metadata accessor for TranscriptProtoParameter);
          sub_23F6F8C88(v85, type metadata accessor for Candidate);
          sub_23F6B4F84(v41, &qword_256EA26F0);
          v61 = v88;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23F7116F4();
            v61 = v88;
          }
          v62 = v84;
          v27 = v66;
          v63 = *(_QWORD *)(v61 + 16);
          if (v63 >= *(_QWORD *)(v61 + 24) >> 1)
          {
            sub_23F7116F4();
            v61 = v88;
          }
          *(_QWORD *)(v61 + 16) = v63 + 1;
          sub_23F6F594C(v60, v61+ ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80))+ *(_QWORD *)(v72 + 72) * v63, type metadata accessor for TranscriptProtoParameter);
          a1 = v68;
          if (v62 >= -(-1 << *(_BYTE *)(v68 + 32)))
            goto LABEL_26;
          if ((*(_QWORD *)(v27 + 8 * v83) & v82) == 0)
            goto LABEL_27;
          if ((_DWORD)v81 != *(_DWORD *)(v68 + 36))
            goto LABEL_28;
          v64 = sub_23FB2F740();
          v23 = v80 - 1;
          if (v80 == 1)
            return;
          v26 = v64;
          if ((v64 & 0x8000000000000000) == 0)
          {
            v25 = *(unsigned int *)(a1 + 36);
            if (v64 < 1 << *(_BYTE *)(a1 + 32))
              continue;
          }
          goto LABEL_29;
        }
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
      }
    }
LABEL_29:
    __break(1u);
  }
}

void sub_23FAE32F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v17 = MEMORY[0x24BEE4AF8];
    sub_23F711BA4();
    v3 = sub_23F7AE664(a1);
    if ((v3 & 0x8000000000000000) == 0)
    {
      v5 = v3;
      if (v3 < 1 << *(_BYTE *)(a1 + 32))
      {
        v6 = v4;
        v7 = a1 + 64;
        while ((*(_QWORD *)(v7 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
        {
          if (v6 != *(_DWORD *)(a1 + 36))
            goto LABEL_18;
          v8 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v5);
          v9 = v8[1];
          v14 = v1;
          v15 = *v8;
          v16 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v5);
          v11 = *(_QWORD *)(v17 + 16);
          v10 = *(_QWORD *)(v17 + 24);
          swift_bridgeObjectRetain();
          if (v11 >= v10 >> 1)
            sub_23F711BA4();
          *(_QWORD *)(v17 + 16) = v11 + 1;
          v12 = (_QWORD *)(v17 + 24 * v11);
          v12[4] = v15;
          v12[5] = v9;
          v12[6] = v16;
          if ((uint64_t)v5 >= -(-1 << *(_BYTE *)(a1 + 32)))
            goto LABEL_19;
          v7 = a1 + 64;
          if ((*(_QWORD *)(a1 + 64 + 8 * (v5 >> 6)) & (1 << v5)) == 0)
            goto LABEL_20;
          if (v6 != *(_DWORD *)(a1 + 36))
            goto LABEL_21;
          v13 = sub_23FB2F740();
          v1 = v14 - 1;
          if (v14 == 1)
            return;
          v5 = v13;
          if ((v13 & 0x8000000000000000) == 0)
          {
            v6 = *(_DWORD *)(a1 + 36);
            if (v13 < 1 << *(_BYTE *)(a1 + 32))
              continue;
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

void sub_23FAE34BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v17 = MEMORY[0x24BEE4AF8];
    sub_23F7121D0();
    v3 = sub_23F7AE664(a1);
    if ((v3 & 0x8000000000000000) == 0)
    {
      v5 = v3;
      if (v3 < 1 << *(_BYTE *)(a1 + 32))
      {
        v6 = v4;
        v7 = a1 + 64;
        while ((*(_QWORD *)(v7 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
        {
          if (v6 != *(_DWORD *)(a1 + 36))
            goto LABEL_18;
          v8 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v5);
          v9 = v8[1];
          v14 = v1;
          v15 = *v8;
          v16 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v5);
          v11 = *(_QWORD *)(v17 + 16);
          v10 = *(_QWORD *)(v17 + 24);
          swift_bridgeObjectRetain();
          if (v11 >= v10 >> 1)
            sub_23F7121D0();
          *(_QWORD *)(v17 + 16) = v11 + 1;
          v12 = (_QWORD *)(v17 + 24 * v11);
          v12[4] = v15;
          v12[5] = v9;
          v12[6] = v16;
          if ((uint64_t)v5 >= -(-1 << *(_BYTE *)(a1 + 32)))
            goto LABEL_19;
          v7 = a1 + 64;
          if ((*(_QWORD *)(a1 + 64 + 8 * (v5 >> 6)) & (1 << v5)) == 0)
            goto LABEL_20;
          if (v6 != *(_DWORD *)(a1 + 36))
            goto LABEL_21;
          v13 = sub_23FB2F740();
          v1 = v14 - 1;
          if (v14 == 1)
            return;
          v5 = v13;
          if ((v13 & 0x8000000000000000) == 0)
          {
            v6 = *(_DWORD *)(a1 + 36);
            if (v13 < 1 << *(_BYTE *)(a1 + 32))
              continue;
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

void sub_23FAE3688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_23FAE36AC(a1, a2, a3, a4, a5, &qword_256EA6540, (void (*)(_QWORD))type metadata accessor for ProgramStatement);
}

void sub_23FAE36AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, void (*a7)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  sub_23F6916B8(a6);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F693EB0();
  sub_23F6B705C(v7, v8);
  a7(0);
  v14 = sub_23FB2A344();
  sub_23F6B5164(v14, v15, v16);
  if (v17)
  {
    v18 = sub_23F77E46C();
    sub_23F6B4F84(v18, v19);
    sub_23F6BD090();
    sub_23F6B5AD4();
    *v20 = a1;
    v20[1] = a2;
    v20[2] = a3;
    v20[3] = a4;
    v20[4] = a5;
    sub_23F6B5F1C();
    sub_23F77DCD4();
    swift_willThrow();
  }
  else
  {
    v21 = sub_23F879688();
    sub_23F77DC08(v21, v22);
  }
  sub_23F77E0B0();
}

uint64_t sub_23FAE3794(uint64_t a1)
{
  return sub_23FAE37A8(a1, &qword_256EC35C0, (void (*)(uint64_t, uint64_t, uint64_t *))sub_23FB23F64);
}

uint64_t sub_23FAE37A8(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t, uint64_t *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_23F6916B8(a2);
    sub_23F713F50();
    v4 = sub_23FB2F9A4();
  }
  else
  {
    v4 = MEMORY[0x24BEE4B00];
  }
  v7 = v4;
  v5 = sub_23F6B5508();
  a3(v5, 1, &v7);
  sub_23F693E04();
  return v7;
}

void TranscriptProtoEvent.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(uint64_t, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  _QWORD *v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;

  sub_23F6B5220();
  v4 = v3;
  v128 = v5;
  sub_23F6916B8(&qword_256EA86F8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B5404(v7, v106);
  sub_23F6916B8(&qword_256EA8700);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  v10 = sub_23FB299A4(v9, v106);
  v122 = type metadata accessor for TranscriptProtoTimepoint(v10);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  v120 = (char *)&v106 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6D398C();
  v130 = sub_23FB2C470();
  v118 = *(_QWORD *)(v130 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B5598(v14, v106);
  sub_23F6916B8(&qword_256EA86E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  v125 = (char *)&v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v17);
  v119 = (char *)&v106 - v18;
  v19 = type metadata accessor for Timepoint();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B51A4();
  v22 = v21;
  sub_23F6916B8(&qword_256EA8708);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v23);
  v131 = (char *)&v106 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FB297D0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA8718);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F6B5BD8(v27, v106);
  sub_23F6B5D90();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F693EB0();
  v124 = sub_23FB2AFB0();
  v134 = v29;
  v30 = (int *)type metadata accessor for Session.Event(0);
  sub_23FB2AABC();
  v123 = sub_23FB2C488();
  v133 = v31;
  v32 = v30[6];
  v136 = v4;
  sub_23F6B58F8(v4 + v32, v1);
  v33 = sub_23F72E034();
  v34 = sub_23FB2A344();
  v36 = sub_23F6B5164(v34, v35, v33);
  if (v37)
  {
    sub_23F77DD24(v36, &qword_256EA2798);
    v121 = 0;
    v40 = 0;
  }
  else
  {
    v121 = sub_23FB2C488();
    v38 = sub_23F6B61D0();
    v40 = v39;
    sub_23F6B6178(v38, v41);
  }
  v43 = v136;
  sub_23FB2AA9C(v136 + v30[7], v42, type metadata accessor for Session.Event.Payload);
  v44 = v135;
  TranscriptProtoPayload.init(handwritten:)(v2, v45, v46, v47, v48, v49, v50, v51, v106, v107, (uint64_t)v108, v109, v110, v111, v112, v113, v114, v115, v116,
    v117);
  if (v0)
  {
    sub_23FB297D8(v52, type metadata accessor for Session.Event);
    sub_23FAD7318();
    swift_bridgeObjectRelease();
    sub_23F6B6090();
  }
  else
  {
    v117 = 0;
    v132 = v40;
    v53 = type metadata accessor for TranscriptProtoPayload(0);
    sub_23F78F2E4(v44, 0, v54, v53);
    v55 = v30[9];
    v56 = (uint64_t *)(v43 + v30[8]);
    v57 = v56[1];
    v116 = *v56;
    v58 = *(_QWORD *)(v43 + v55 + 8);
    v115 = *(_QWORD *)(v43 + v55);
    v59 = v30[11];
    v113 = *(_QWORD *)(v43 + v30[10]);
    v109 = v43 + v30[12];
    v60 = *(_QWORD *)(v43 + v59 + 8);
    v111 = *(_QWORD *)(v43 + v59);
    sub_23F6F5920(v109, v22, (uint64_t (*)(_QWORD))type metadata accessor for Timepoint);
    v108 = *(void (**)(uint64_t, uint64_t, uint64_t))(v118 + 16);
    v61 = sub_23F924C14();
    v62(v61);
    v110 = v60;
    sub_23F77DCD4();
    v118 = v57;
    sub_23F6B54F8();
    v114 = v58;
    sub_23F6B5F1C();
    sub_23FB2AEE4();
    sub_23F6B6548();
    v63 = (uint64_t)v119;
    sub_23FB2D6C4();
    sub_23FB2D6D0();
    sub_23F6B9258(v63, 0);
    v64 = *(int *)(v19 + 24);
    v106 = *(_QWORD *)(v22 + *(int *)(v19 + 20));
    v107 = *(_QWORD *)(v22 + v64);
    v65 = sub_23FB2C488();
    v67 = v66;
    v68 = v122;
    v69 = v120;
    sub_23F6B9258((uint64_t)&v120[*(int *)(v122 + 28)], 1);
    sub_23F6F0CB4();
    v70 = sub_23F879688();
    sub_23F710E80(v70, v71, v72);
    v73 = v107;
    *v69 = v106;
    v69[1] = v73;
    v69[2] = v65;
    v69[3] = v67;
    v74 = (uint64_t)v131;
    sub_23FB29F30((uint64_t)v69, v75, type metadata accessor for TranscriptProtoTimepoint);
    sub_23F6F8C88(v22, (uint64_t (*)(_QWORD))type metadata accessor for Timepoint);
    sub_23F77DD78(v74, 0);
    v108(v129, v109, v130);
    v76 = (uint64_t)v125;
    sub_23FB2AE70();
    sub_23FB2D6C4();
    sub_23F6B9258(v76, 0);
    v77 = (uint64_t *)(v136 + v30[13]);
    v78 = v77[1];
    if (v78)
    {
      v79 = *v77;
      type metadata accessor for TranscriptProtoParticipantID(0);
      sub_23F878C38();
      v80 = v126;
      sub_23F6B54F8();
      sub_23FAD7510();
      *v80 = v79;
      v80[1] = v78;
      v81 = (uint64_t)v80;
      v82 = 0;
      v83 = 1;
      v84 = v68;
    }
    else
    {
      type metadata accessor for TranscriptProtoParticipantID(0);
      v80 = v126;
      sub_23F693EC8();
    }
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v81, v82, v83, v84);
    v86 = v127;
    v85 = v128;
    v87 = (uint64_t *)(v136 + v30[14]);
    if ((v87[1] & 1) != 0)
    {
      type metadata accessor for TranscriptProtoSpanID(0);
      sub_23F693EC8();
    }
    else
    {
      v92 = *v87;
      type metadata accessor for TranscriptProtoSpanID(0);
      sub_23FB2AE90();
      sub_23F6F0CB4();
      *v86 = v92;
      v88 = (uint64_t)v86;
      v89 = 0;
      v90 = 1;
      v91 = v78;
    }
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v88, v89, v90, v91);
    v93 = sub_23F6B54F8();
    sub_23FAE32F0(v93);
    v95 = v94;
    sub_23F693DFC();
    v105 = sub_23FAE37A8(v95, &qword_256EC3650, (void (*)(uint64_t, uint64_t, uint64_t *))sub_23FB24228);
    v104 = (uint64_t)v131;
    sub_23FB2A5A4();
    v103 = v96;
    v102 = v111;
    v101 = v112;
    *((_QWORD *)&v100 + 1) = v113;
    sub_23FB2AEF0();
    *(_QWORD *)&v100 = v97;
    *((_QWORD *)&v99 + 1) = v115;
    *(_QWORD *)&v99 = v118;
    TranscriptProtoEvent.init(rawID:rawSessionID:rawQueryEventID:rawPayload:clientRequestID:clientSessionID:clientApplicationID:clientGroupID:timepoint:rawTimestamp:sender:postingSpan:rawInitiatedSpans:)(v124, v134, v123, v133, v121, v132, v135, v116, v85, v99, v100, v101, v102, v103, v104, v76, (uint64_t)v80, (uint64_t)v86, v105);
    sub_23FB297B8(v98, type metadata accessor for Session.Event);
  }
  sub_23F877A30();
  sub_23F6B5100();
}

uint64_t sub_23FAE3E4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v62;
  char *v63;
  uint64_t *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t *v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t *v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;

  v2 = v1;
  v66 = type metadata accessor for TranscriptProtoASTForInStmt(0);
  MEMORY[0x24BDAC7A8](v66);
  v65 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F6916B8(&qword_256EA84F8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v75 = (uint64_t *)((char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = MEMORY[0x24BDAC7A8](v6);
  v74 = (uint64_t *)((char *)&v62 - v9);
  MEMORY[0x24BDAC7A8](v8);
  v64 = (uint64_t *)((char *)&v62 - v10);
  v11 = sub_23F6916B8(&qword_256EA25A0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v73 = (uint64_t)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v63 = (char *)&v62 - v14;
  v15 = type metadata accessor for TranscriptProtoASTStmt(0);
  v76 = *(_QWORD *)(v15 - 8);
  v77 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (unint64_t *)((char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = *(_QWORD *)(a1 + 16);
  v83 = MEMORY[0x24BEE4AF8];
  sub_23F711514();
  v19 = v83;
  v62 = a1;
  if (v18)
  {
    v20 = (unint64_t *)(a1 + 32);
    swift_bridgeObjectRetain();
    v72 = v17;
    do
    {
      v22 = *v20++;
      v21 = v22;
      v23 = v22 >> 62;
      if (v22 >> 62)
      {
        v80 = v20;
        v78 = v19;
        if ((_DWORD)v23 == 1)
        {
          v25 = *(_QWORD *)(v21 + 32);
          v82 = *(_QWORD *)(v21 + 16);
          v24 = v82;
          v79 = v21 & 0x3FFFFFFFFFFFFFFFLL;
          swift_retain();
          sub_23F6A3728(v24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_23F6A3728(v24);
          v26 = v73;
          TranscriptProtoASTExpr.init(handwritten:)();
          v27 = type metadata accessor for TranscriptProtoASTExpr(0);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v26, 0, 1, v27);
          v28 = swift_bridgeObjectRetain();
          v29 = v2;
          v30 = sub_23FAE3E4C(v28);
          v31 = v2;
          swift_bridgeObjectRelease();
          v32 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
          v33 = v74;
          _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
          *v33 = v30;
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v33, 0, 1, v32);
          if (v25)
          {
            v34 = swift_bridgeObjectRetain();
            v35 = sub_23FAE3E4C(v34);
            v81 = v31;
            v36 = v75;
            _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
            *v36 = v35;
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v36, 0, 1, v32);
            sub_23F6A3764(v24);
            swift_bridgeObjectRelease_n();
          }
          else
          {
            v81 = v29;
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v75, 1, 1, v32);
            sub_23F6A3764(v24);
            swift_bridgeObjectRelease();
          }
          v19 = v78;
          swift_bridgeObjectRelease();
          v54 = type metadata accessor for TranscriptProtoASTIfStmt(0);
          v55 = swift_allocBox();
          v57 = v56;
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v56, 1, 1, v27);
          v58 = v57 + *(int *)(v54 + 20);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v58, 1, 1, v32);
          v59 = v57 + *(int *)(v54 + 24);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v59, 1, 1, v32);
          _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
          sub_23F710E80(v73, v57, &qword_256EA25A0);
          sub_23F710E80((uint64_t)v74, v58, &qword_256EA84F8);
          sub_23F710E80((uint64_t)v75, v59, &qword_256EA84F8);
          v38 = v55 | 0x4000000000000000;
          v17 = v72;
          v20 = v80;
        }
        else
        {
          v79 = v21 & 0x3FFFFFFFFFFFFFFFLL;
          v39 = *(_QWORD *)(v21 + 24);
          v69 = *(_QWORD *)(v21 + 16);
          v40 = *(_QWORD *)(v21 + 32);
          v41 = v66;
          v42 = swift_allocBox();
          v70 = v43;
          v71 = v42;
          v82 = v40;
          swift_retain();
          v67 = v39;
          swift_bridgeObjectRetain();
          v68 = v40;
          sub_23F6A3728(v40);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_23F6A3728(v40);
          v44 = (uint64_t)v63;
          TranscriptProtoASTExpr.init(handwritten:)();
          v45 = type metadata accessor for TranscriptProtoASTExpr(0);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v44, 0, 1, v45);
          v46 = swift_bridgeObjectRetain();
          v47 = sub_23FAE3E4C(v46);
          v81 = v2;
          swift_bridgeObjectRelease();
          v48 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
          v49 = v64;
          _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
          *v49 = v47;
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v49, 0, 1, v48);
          v50 = v65;
          v51 = (uint64_t)&v65[*(int *)(v41 + 20)];
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v51, 1, 1, v45);
          v52 = (uint64_t)v50 + *(int *)(v41 + 24);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v52, 1, 1, v48);
          _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
          v53 = v67;
          *v50 = v69;
          v50[1] = v53;
          sub_23F710E80(v44, v51, &qword_256EA25A0);
          sub_23F710E80((uint64_t)v49, v52, &qword_256EA84F8);
          sub_23F6F594C((uint64_t)v50, v70, type metadata accessor for TranscriptProtoASTForInStmt);
          swift_bridgeObjectRelease();
          sub_23F6A3764(v68);
          swift_bridgeObjectRelease();
          v17 = v72;
          v38 = v71 | 0x8000000000000000;
          v19 = v78;
          v20 = v80;
        }
      }
      else
      {
        v81 = v2;
        v37 = *(_QWORD *)(v21 + 16);
        type metadata accessor for TranscriptProtoASTExpr(0);
        v38 = swift_allocBox();
        v82 = v37;
        swift_retain();
        sub_23F6A3728(v37);
        TranscriptProtoASTExpr.init(handwritten:)();
      }
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      swift_release();
      *v17 = v38;
      v83 = v19;
      v60 = *(_QWORD *)(v19 + 16);
      if (v60 >= *(_QWORD *)(v19 + 24) >> 1)
      {
        sub_23F711514();
        v19 = v83;
      }
      *(_QWORD *)(v19 + 16) = v60 + 1;
      sub_23F6F594C((uint64_t)v17, v19+ ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80))+ *(_QWORD *)(v76 + 72) * v60, type metadata accessor for TranscriptProtoASTStmt);
      --v18;
      v2 = v81;
    }
    while (v18);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v19;
}

void StatementOutcome.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  _QWORD v76[8];
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;

  sub_23F6B5220();
  v5 = v4;
  v87 = v6;
  type metadata accessor for TranscriptProtoValueDisambiguation(0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  v83 = (char *)v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoActionFailure(v9);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  v98 = (char *)v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v12);
  v82 = (char *)v76 - v13;
  v14 = sub_23F6D398C();
  v80 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(v14);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v16);
  v84 = (char *)v76 - v17;
  v18 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoParameterNotAllowed(v18);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v19);
  v97 = (char *)v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B6580();
  v79 = v22;
  v23 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoParameterDisambiguation(v23);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v25);
  v81 = (char *)v76 - v26;
  v77 = sub_23F6B632C();
  v76[7] = *(_QWORD *)(v77 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v27);
  v96 = (char *)v76 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v30);
  v95 = (char *)v76 - v31;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F70D434((uint64_t)v76 - v33);
  sub_23FB2ED38();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v35);
  v76[6] = (char *)v76 - v36;
  v37 = sub_23F6D398C();
  v94 = type metadata accessor for TranscriptProtoParameterConfirmation(v37);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v38);
  v85 = (char *)v76 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v40);
  v78 = (char *)v76 - v41;
  v42 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoParameterNeedsValue(v42);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v43);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v44);
  v93 = (char *)v76 - v45;
  v46 = sub_23FAD72F8();
  v47 = *(_QWORD *)(v46 - 8);
  v91 = v46;
  v92 = v47;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v48);
  v90 = (char *)v76 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v50);
  v89 = (char *)v76 - v51;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v52);
  sub_23FB29AA4((uint64_t)v76 - v53);
  v54 = sub_23FB2E8D0();
  v100 = *(_QWORD *)(v54 - 8);
  v101 = v54;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v55);
  v88 = (char *)v76 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v57);
  v99 = (char *)v76 - v58;
  v59 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoToolDisambiguation(v59);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v60);
  v86 = (char *)v76 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoActionRequirement(v62);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v63);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v64);
  v65 = sub_23FB2997C();
  type metadata accessor for TranscriptProtoActionConfirmation(v65);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v66);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v67);
  v68 = sub_23F78F2D0();
  type metadata accessor for TranscriptProtoActionSuccess(v68);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v69);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v70);
  v72 = (char *)v76 - v71;
  v73 = sub_23FB299D0();
  type metadata accessor for TranscriptProtoStatementOutcomeEnum(v73);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v74);
  sub_23FB2A718();
  sub_23F77C068();
  if (!v1)
  {
    v76[1] = v3;
    v102 = v72;
    v76[2] = v0;
    v76[3] = v2;
    v76[4] = v5;
    v75 = (char *)&loc_23FAE49D4 + 4 * word_23FB929E0[sub_23FB2A688()];
    __asm { BR              X10 }
  }
  sub_23F6F8C88(v5, type metadata accessor for TranscriptProtoStatementOutcome);
  sub_23F8778A8();
  sub_23F6B5100();
}

void ConvertibleFromHandwrittenProtocol.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_23F6B5220();
  v5 = v4;
  v33 = v6;
  v30 = *(_QWORD *)(v7 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5BD8(v9, v28);
  v31 = v10;
  v34 = v11;
  swift_getAssociatedTypeWitness();
  sub_23FB2A058();
  v12 = sub_23FB2F65C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v28 - v15;
  v17 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F878D94();
  v19 = v5;
  sub_23F77DB9C((uint64_t)v16, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16));
  sub_23F6B5164((uint64_t)v16, 1, v3);
  if (v20)
  {
    v21 = *(void (**)(uint64_t))(v13 + 8);
    sub_23FB2AB14(v19);
    v22 = sub_23FAE2D10();
    v21(v22);
    v23 = 1;
    v24 = v33;
LABEL_7:
    sub_23F77DD78(v24, v23);
    goto LABEL_8;
  }
  v29 = v5;
  v25 = sub_23F7D2958();
  sub_23F75E68C(v25, v26, v27);
  sub_23F75E68C(v2, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 16));
  (*(void (**)(uint64_t, uint64_t))(v31 + 16))(v2, v34);
  if (!v0)
  {
    sub_23F6B6178(v29, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
    sub_23F6B5900(v1, *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
    v24 = v33;
    sub_23F6B633C(v33, v32, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 32));
    v23 = 0;
    goto LABEL_7;
  }
  sub_23F6B6178(v29, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
  sub_23F6B5900(v1, *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
LABEL_8:
  sub_23F77DB18();
  sub_23F6B5100();
}

void TranscriptProtoStatementOutcome.init(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t (*v112)(uint64_t);
  int v113;
  uint64_t v114;
  void (*v115)(uint64_t, uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t (*v123)(uint64_t, uint64_t, uint64_t);
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t (*v127)(uint64_t, uint64_t, uint64_t);
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void (*v132)(uint64_t);
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t (*v136)(uint64_t, uint64_t, uint64_t);
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  char *v152;
  void (*v153)(char *, char *, uint64_t);
  unint64_t v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t (*v163)(uint64_t, uint64_t, uint64_t);
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  void (*v167)(uint64_t);
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t (*v175)(uint64_t, uint64_t, uint64_t);
  uint64_t v176;
  uint64_t (*v177)(uint64_t, uint64_t);
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t (*v187)(uint64_t, uint64_t, uint64_t);
  uint64_t v188;
  uint64_t v189;
  uint64_t (*v190)(uint64_t, uint64_t, uint64_t);
  uint64_t v191;
  uint64_t v192;
  uint64_t (*v193)(uint64_t, uint64_t, uint64_t);
  uint64_t v194;
  uint64_t v195;
  uint64_t (*v196)(uint64_t, uint64_t, uint64_t);
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t (*v209)(uint64_t, uint64_t, uint64_t);
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t (*v216)(uint64_t, uint64_t, uint64_t);
  _BYTE *v217;
  uint64_t v218;
  uint64_t *v219;
  void (*v220)(uint64_t);
  uint64_t v221;
  uint64_t v222[3];
  char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t *v253;
  _QWORD v254[4];
  char *v255;
  uint64_t v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  char *v266;
  char *v267;
  char *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  char *v272;
  uint64_t v273;
  uint64_t v274;

  sub_23F6B5220();
  a19 = v27;
  a20 = v28;
  v265 = v21;
  v271 = v29;
  v263 = v30;
  v261 = sub_23FB2A07C();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v31);
  v262 = (uint64_t)v222 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6D398C();
  v33 = sub_23FB2C7E8();
  sub_23F6B53F8(v33, (uint64_t)&v251);
  v224 = v34;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F693E0C();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v36);
  v223 = (char *)v222 - v37;
  sub_23F6D398C();
  v38 = sub_23FB2D3AC();
  sub_23F6B53F8(v38, (uint64_t)v254);
  v227 = v39;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v41);
  v228 = (char *)v222 - v42;
  sub_23F6D398C();
  v43 = sub_23FB2D61C();
  sub_23F6B53F8(v43, (uint64_t)&v261);
  v235 = v44;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v46);
  v234 = (char *)v222 - v47;
  sub_23F6D398C();
  v48 = sub_23FB2D328();
  sub_23F6B53F8(v48, (uint64_t)&v266);
  v239 = v49;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v50);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v51);
  v238 = (char *)v222 - v52;
  sub_23F6D398C();
  v53 = sub_23FB2D520();
  sub_23F6B53F8(v53, (uint64_t)&v271);
  v243 = v54;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v55);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v56);
  v242 = (char *)v222 - v57;
  sub_23F6D398C();
  v58 = sub_23FB2D430();
  sub_23F6B53F8(v58, (uint64_t)&a9);
  v247 = v59;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v60);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v61);
  v246 = (char *)v222 - v62;
  sub_23F6D398C();
  v63 = sub_23FB2D2C8();
  sub_23F6B53F8(v63, (uint64_t)&a14);
  v252 = v64;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v65);
  sub_23F693E0C();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v66);
  sub_23F6B6580();
  sub_23F70D434(v67);
  v68 = sub_23FB2E8D0();
  v69 = *(_QWORD *)(v68 - 8);
  v269 = v68;
  v270 = v69;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v70);
  v268 = (char *)v222 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v72);
  v267 = (char *)v222 - v73;
  v74 = sub_23FAD72F8();
  v273 = *(_QWORD *)(v74 - 8);
  v274 = v74;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v75);
  v266 = (char *)v222 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v77);
  v272 = (char *)v222 - v78;
  sub_23F6D398C();
  v79 = sub_23FB2D2A4();
  sub_23F6B53F8(v79, (uint64_t)&a17);
  v254[3] = v80;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v81);
  sub_23F70D434((uint64_t)v222 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0));
  v232 = sub_23FB2D0E8();
  v231 = *(_QWORD *)(v232 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v83);
  sub_23F693E0C();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v84);
  sub_23F6B6580();
  v230 = v85;
  sub_23F6D398C();
  v258 = sub_23FB2D274();
  v256 = *(_QWORD *)(v258 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v86);
  v255 = (char *)v222 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v88);
  v257 = (char *)v222 - v89;
  sub_23F6D398C();
  v90 = sub_23FB2C89C();
  sub_23FB2A198();
  MEMORY[0x24BDAC7A8](v91);
  sub_23F6B5CD4();
  MEMORY[0x24BDAC7A8](v92);
  v94 = (uint64_t *)((char *)v222 - v93);
  v95 = sub_23FB29BD4();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v96);
  v97 = sub_23F78F27C();
  v264 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(v97);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v98);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v99);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v100);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v101);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v102);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v103);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v104);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v105);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v106);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v107);
  sub_23F72E2B0();
  MEMORY[0x24BDAC7A8](v108);
  sub_23F70D958();
  MEMORY[0x24BDAC7A8](v109);
  v260 = (uint64_t)v222 - v110;
  sub_23F6B5EF0(v24, v271, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 16));
  v111 = sub_23F7B0BC4();
  v113 = v112(v111);
  if (v113 != *MEMORY[0x24BE53328])
  {
    v254[0] = v23;
    v259 = v95;
    if (v113 == *MEMORY[0x24BE532D8])
    {
      v118 = v254[0];
      sub_23FB2AC88(v24, *(uint64_t (**)(uint64_t, _QWORD))(v254[0] + 96));
      v119 = v256;
      v120 = (uint64_t)v257;
      v121 = sub_23FB2A28C();
      sub_23F6B633C(v121, v122, v123);
      v124 = (uint64_t)v255;
      v125 = sub_23F6B6F08();
      v128 = sub_23F6B633C(v125, v126, v127);
      v129 = MEMORY[0x242671EEC](v128);
      v130 = v265;
      sub_23FB21880(v129);
      if (!v130)
      {
        v170 = v131;
        swift_bridgeObjectRelease();
        type metadata accessor for TranscriptProtoActionConfirmation(0);
        sub_23FAD7240();
        *v26 = v170;
        sub_23F77E234(v124);
        sub_23F77E234(v120);
        sub_23F7F64A8();
        sub_23F878B7C();
        v22 = v26;
        v23 = v118;
        goto LABEL_31;
      }
      sub_23F693DFC();
      v132 = *(void (**)(uint64_t))(v119 + 8);
      sub_23F77E234(v124);
      (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v271, v259);
      goto LABEL_9;
    }
    v23 = v254[0];
    if (v113 == *MEMORY[0x24BE532E0])
    {
      sub_23FB2AC88(v24, *(uint64_t (**)(uint64_t, _QWORD))(v254[0] + 96));
      v134 = sub_23FAD6F0C();
      sub_23F759774(v134, v135, v136);
      v137 = sub_23FB2D28C();
      v139 = v138;
      v140 = MEMORY[0x242671F1C]();
      v141 = *(_QWORD *)(v140 + 16);
      if (v141)
      {
        v255 = (char *)v137;
        v257 = v139;
        a10 = MEMORY[0x24BEE4AF8];
        sub_23FB2A21C();
        sub_23F711AF0();
        sub_23F78F3B0();
        v256 = v140;
        v143 = v140 + v142;
        v258 = *(_QWORD *)(v144 + 72);
        v23 = *(_QWORD *)(v144 + 16);
        v145 = v265;
        v146 = (uint64_t)v267;
        while (1)
        {
          v147 = sub_23F6B6F08();
          v148 = v269;
          ((void (*)(uint64_t))v23)(v147);
          v149 = (uint64_t)v268;
          ((void (*)(char *, uint64_t, uint64_t))v23)(v268, v146, v148);
          v150 = v266;
          sub_23FB2E8B8();
          if (v145)
            break;
          v151 = *(_QWORD *)(v270 + 8);
          sub_23F9243AC(v149);
          v152 = v150;
          v153 = *(void (**)(char *, char *, uint64_t))(v273 + 32);
          v153(v272, v152, v274);
          sub_23F9243AC(v146);
          if ((sub_23F77D93C() & 1) == 0)
          {
            sub_23F7D2A58();
            sub_23F711AF0();
            v151 = a10;
          }
          v155 = *(_QWORD *)(v151 + 16);
          v154 = *(_QWORD *)(v151 + 24);
          if (v155 >= v154 >> 1)
          {
            sub_23F77D9EC(v154);
            sub_23F711AF0();
            v151 = a10;
          }
          *(_QWORD *)(v151 + 16) = v155 + 1;
          sub_23F77DAB8();
          ((void (*)(unint64_t))v153)(v156 + v157 * v155);
          a10 = v151;
          v143 += v258;
          --v141;
          v145 = 0;
          if (!v141)
          {
            swift_bridgeObjectRelease();
            sub_23FB2AE34();
            v139 = v257;
            v137 = (uint64_t)v255;
            goto LABEL_30;
          }
        }
        sub_23F77E234(v149);
        sub_23F77E234(v146);
        sub_23F77DB70();
        swift_bridgeObjectRelease();
        sub_23FB2AC88(v271, *(uint64_t (**)(uint64_t, _QWORD))(v254[0] + 8));
        swift_bridgeObjectRelease();
        v116 = sub_23FB2AC68();
        v117 = v254[1];
        goto LABEL_5;
      }
      sub_23F6B5908();
      v151 = MEMORY[0x24BEE4AF8];
LABEL_30:
      type metadata accessor for TranscriptProtoToolDisambiguation(0);
      v22 = v253;
      sub_23F6F0BB0();
      v22[1] = v137;
      v22[2] = (uint64_t)v139;
      *v22 = v151;
      v176 = sub_23FB2AC68();
      sub_23F6B56E0(v176, v177);
      swift_storeEnumTagMultiPayload();
LABEL_31:
      v178 = (uint64_t)v22;
      v179 = v260;
      sub_23F77E2AC(v178, v260);
      v180 = v262;
      sub_23FAD6A98(v262, 1);
      sub_23FAC3074();
      sub_23F70D728(v271, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
      v181 = v180;
      v182 = v263;
      sub_23FB29F30(v181, v183, type metadata accessor for TranscriptProtoStatementOutcome);
      sub_23F77DC10(v184, &qword_256EA7FF8);
      sub_23F77E2AC(v179, v182);
      sub_23FAD6A98(v182, 0);
      goto LABEL_32;
    }
    v158 = v264;
    if (v113 == *MEMORY[0x24BE532E8])
    {
      v23 = v259;
      sub_23F6B51EC(v24, *(uint64_t (**)(uint64_t, uint64_t))(v254[0] + 96));
      v159 = v252;
      v160 = v250;
      v161 = sub_23FB2A2E4();
      sub_23F759774(v161, v162, v163);
      sub_23F759774(v251, v160, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v159 + 16));
      v164 = sub_23FB2D2BC();
      v166 = v165;
      type metadata accessor for TranscriptProtoParameterNeedsValue(0);
      v22 = v249;
      sub_23F6F0BB0();
      *v22 = v164;
      v22[1] = v166;
      sub_23FB2AE34();
      v167 = *(void (**)(uint64_t))(v159 + 8);
      v168 = sub_23F7D29DC();
      v167(v168);
      v169 = sub_23F8783DC();
      v167(v169);
      sub_23F878D40();
      goto LABEL_31;
    }
    v171 = v259;
    if (v113 == *MEMORY[0x24BE53300])
    {
      sub_23F70D728(v24, *(uint64_t (**)(uint64_t, uint64_t))(v254[0] + 96));
      sub_23FB2A130();
      v172 = (uint64_t)v246;
      v173 = sub_23F78F534();
      v90 = v248;
      sub_23F759774(v173, v174, v175);
      sub_23F759774(v245, v172, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 16));
      sub_23FB29B54();
      TranscriptProtoParameterConfirmation.init(handwritten:)();
      if (!v21)
        goto LABEL_53;
    }
    else if (v113 == *MEMORY[0x24BE53308])
    {
      sub_23F70D728(v24, *(uint64_t (**)(uint64_t, uint64_t))(v254[0] + 96));
      sub_23FB2A130();
      v172 = (uint64_t)v242;
      v185 = sub_23F78F534();
      v90 = v244;
      sub_23F759774(v185, v186, v187);
      sub_23F759774(v241, v172, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 16));
      sub_23FB29B54();
      TranscriptProtoParameterDisambiguation.init(handwritten:)();
      if (!v21)
        goto LABEL_53;
    }
    else if (v113 == *MEMORY[0x24BE532F0])
    {
      sub_23F70D728(v24, *(uint64_t (**)(uint64_t, uint64_t))(v254[0] + 96));
      sub_23FB2A130();
      v172 = (uint64_t)v238;
      v188 = sub_23F78F534();
      v90 = v240;
      sub_23F759774(v188, v189, v190);
      sub_23F759774(v237, v172, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 16));
      sub_23FB29B54();
      TranscriptProtoParameterNotAllowed.init(handwritten:)();
      if (!v21)
        goto LABEL_53;
    }
    else if (v113 == *MEMORY[0x24BE53310])
    {
      sub_23F70D728(v24, *(uint64_t (**)(uint64_t, uint64_t))(v254[0] + 96));
      sub_23FB2A130();
      v172 = (uint64_t)v234;
      v191 = sub_23F78F534();
      v90 = v236;
      sub_23F759774(v191, v192, v193);
      sub_23F759774(v233, v172, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 16));
      sub_23FB29B54();
      TranscriptProtoParameterCandidatesNotFound.init(handwritten:)();
      if (!v21)
        goto LABEL_53;
    }
    else if (v113 == *MEMORY[0x24BE532D0])
    {
      sub_23F70D728(v24, *(uint64_t (**)(uint64_t, uint64_t))(v254[0] + 96));
      sub_23FB2A130();
      v172 = v230;
      v194 = sub_23F78F534();
      v90 = v232;
      sub_23F759774(v194, v195, v196);
      sub_23F759774(v229, v172, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 16));
      v197 = sub_23FB29B54();
      TranscriptProtoActionRequirement.init(handwritten:)(v197, v198, v199, v200, v201, v202, v203, v204, v222[0], v222[1]);
      if (!v21)
        goto LABEL_53;
    }
    else
    {
      if (v113 == *MEMORY[0x24BE532F8])
      {
        sub_23F70D728(v24, *(uint64_t (**)(uint64_t, uint64_t))(v254[0] + 96));
        v205 = v227;
        v206 = (uint64_t)v228;
        v207 = sub_23FB2A28C();
        sub_23F6B633C(v207, v208, v209);
        v210 = v226;
        v211 = sub_23F6B633C(v226, v206, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v205 + 16));
        v212 = MEMORY[0x242672024](v211);
        v213 = v265;
        sub_23FAF1BE8(v212);
        if (!v213)
        {
          v218 = sub_23FB2A058();
          type metadata accessor for TranscriptProtoValueDisambiguation(v218);
          v219 = (uint64_t *)v222[0];
          sub_23F6F0878();
          *v219 = v158;
          v220 = *(void (**)(uint64_t))(v205 + 8);
          sub_23FB2A510(v210);
          v221 = sub_23FAD709C();
          v220(v221);
          swift_storeEnumTagMultiPayload();
          v22 = v219;
          goto LABEL_31;
        }
        v132 = *(void (**)(uint64_t))(v205 + 8);
        sub_23F77E234(v210);
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v271, v171);
LABEL_9:
        v133 = sub_23FAD709C();
LABEL_10:
        v132(v133);
        goto LABEL_32;
      }
      if (v113 != *MEMORY[0x24BE53320])
      {
        sub_23F779AF8();
        sub_23F6B5AD4();
        *v217 = 0;
        sub_23F77D9E4();
        v132 = *(void (**)(uint64_t))(v23 + 8);
        sub_23FB2A00C(v271);
        v133 = v24;
        goto LABEL_10;
      }
      sub_23F70D728(v24, *(uint64_t (**)(uint64_t, uint64_t))(v254[0] + 96));
      sub_23FB2A130();
      v172 = (uint64_t)v223;
      v214 = sub_23F78F534();
      v90 = v225;
      sub_23F759774(v214, v215, v216);
      sub_23F759774(v222[2], v172, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 16));
      sub_23FB29B54();
      TranscriptProtoActionFailure.init(handwritten:)();
      if (!v21)
      {
LABEL_53:
        sub_23F6B56E0(v172, *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
        sub_23F6D3D70();
        swift_storeEnumTagMultiPayload();
        v22 = v94;
        goto LABEL_31;
      }
    }
    sub_23F70D728(v271, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
    v115 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v116 = v172;
    goto LABEL_4;
  }
  sub_23F70D728(v24, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 96));
  sub_23F759774((uint64_t)v94, v24, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 32));
  sub_23F759774(v25, (uint64_t)v94, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 16));
  sub_23FB2A95C();
  v114 = v265;
  TranscriptProtoActionSuccess.init(handwritten:)();
  if (!v114)
  {
    sub_23F6B56E0((uint64_t)v94, *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
    sub_23F713F74();
    goto LABEL_31;
  }
  sub_23F70D728(v271, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
  v115 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
  v116 = (uint64_t)v94;
LABEL_4:
  v117 = v90;
LABEL_5:
  v115(v116, v117);
LABEL_32:
  sub_23F877A30();
  sub_23F6B5100();
}

uint64_t sub_23FAE6494(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v11[2];

  v2 = sub_23FB2C4B8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F6916B8(&qword_256EA2798);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B4F58(a1, (uint64_t)v8, &qword_256EA2798);
  v9 = 0;
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v2) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    v9 = sub_23FB2C488();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v9;
}

uint64_t sub_23FAE65B0()
{
  return sub_23FAE65C4();
}

uint64_t sub_23FAE65C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v2 = v0;
  v3 = sub_23FB2DC28();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  ContextProtoRetrievedTool.Definition.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EA30A8, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool.Definition);
    v7 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v9, type metadata accessor for ContextProtoRetrievedTool.Definition);
  }
  return v7;
}

uint64_t sub_23FAE66F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v2 = v0;
  v3 = sub_23FB2DC7C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ContextProtoRetrievedTool(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  ContextProtoRetrievedTool.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EA2E80, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool);
    v7 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v9, type metadata accessor for ContextProtoRetrievedTool);
  }
  return v7;
}

uint64_t sub_23FAE682C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Output;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = v0;
  v3 = type metadata accessor for ToolQuery.Output();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Output = type metadata accessor for ContextProtoToolQueryOutput(0);
  MEMORY[0x24BDAC7A8](Output);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v2, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ToolQuery.Output);
  ContextProtoToolQueryOutput.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EA30F8, (void (*)(uint64_t))type metadata accessor for ContextProtoToolQueryOutput);
    Output = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for ContextProtoToolQueryOutput);
  }
  return Output;
}

uint64_t sub_23FAE6958()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v2 = v0;
  v3 = sub_23FB2E354();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  MEMORY[0x24BDAC7A8](DecorationToolRetrievalResponse);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  ContextProtoQueryDecorationToolRetrievalResponse.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EA3110, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
    DecorationToolRetrievalResponse = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v9, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
  }
  return DecorationToolRetrievalResponse;
}

uint64_t sub_23FAE6A8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18[2];

  v2 = v0;
  v3 = sub_23FB2E2DC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  ContextProtoDynamicEnumerationEntity.init(handwritten:)((uint64_t)v6, v10, v11, v12, v13, v14, v15, v16, v18[0], v18[1]);
  if (!v1)
  {
    sub_23FB29654(&qword_256EA2DC0, (void (*)(uint64_t))type metadata accessor for ContextProtoDynamicEnumerationEntity);
    v7 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v9, type metadata accessor for ContextProtoDynamicEnumerationEntity);
  }
  return v7;
}

uint64_t sub_23FAE6BC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v2 = v0;
  v3 = sub_23FB2E15C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ContextProtoToolRetrievalType(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  ContextProtoToolRetrievalType.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EA2E88, (void (*)(uint64_t))type metadata accessor for ContextProtoToolRetrievalType);
    v7 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v9, type metadata accessor for ContextProtoToolRetrievalType);
  }
  return v7;
}

uint64_t sub_23FAE6CF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v15;

  v1 = sub_23FB2DE38();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ContextProtoSampleInvocation(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  v8 = sub_23FB2DE20();
  v10 = v9;
  sub_23FB2DE2C();
  v12 = v11;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_QWORD *)v7 = v8;
  *((_QWORD *)v7 + 1) = v10;
  *((_DWORD *)v7 + 4) = v12;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_23FB29654(&qword_256EA2E18, (void (*)(uint64_t))type metadata accessor for ContextProtoSampleInvocation);
  v13 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v7, type metadata accessor for ContextProtoSampleInvocation);
  return v13;
}

uint64_t sub_23FAE6E58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v2 = v0;
  v3 = sub_23FB2DE8C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ContextProtoSpanMatchedEntity(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  ContextProtoSpanMatchedEntity.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EA2DB8, (void (*)(uint64_t))type metadata accessor for ContextProtoSpanMatchedEntity);
    v7 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v9, type metadata accessor for ContextProtoSpanMatchedEntity);
  }
  return v7;
}

uint64_t sub_23FAE6F8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v2 = v0;
  v3 = sub_23FB2DBA4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ContextProtoEntityMatch(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  ContextProtoEntityMatch.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EA2E98, (void (*)(uint64_t))type metadata accessor for ContextProtoEntityMatch);
    v7 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v9, type metadata accessor for ContextProtoEntityMatch);
  }
  return v7;
}

uint64_t sub_23FAE70C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t matched;

  v2 = v0;
  v3 = sub_23F6916B8((uint64_t *)&unk_256EA8FA0);
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_23F6916B8(&qword_256EA2ED0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23FB2DD60();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  matched = type metadata accessor for ContextProtoMatchProperties(0);
  MEMORY[0x24BDAC7A8](matched);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v2, v7);
  v27 = sub_23FB2DD3C();
  v26 = v13;
  v14 = sub_23FB2DD54();
  v16 = v15;
  sub_23FB2DD48();
  sub_23F77D5AC();
  if (v1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    if ((v16 & 1) != 0)
      v17 = 0;
    else
      v17 = v14;
    v24 = v17;
    v18 = (v26 & 1) == 0;
    v25 = v16 & 1;
    v26 &= 1u;
    if (v18)
      v19 = v27;
    else
      v19 = 0;
    v20 = (uint64_t)&v12[*(int *)(matched + 24)];
    v21 = type metadata accessor for ContextProtoAliasTypes(0);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v20, 1, 1, v21);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(_QWORD *)v12 = v19;
    v12[8] = v26;
    *((_QWORD *)v12 + 2) = v24;
    v12[24] = v25;
    sub_23F710E80((uint64_t)v6, v20, &qword_256EA2ED0);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_23FB29654(&qword_256EA3148, (void (*)(uint64_t))type metadata accessor for ContextProtoMatchProperties);
    v7 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v12, type metadata accessor for ContextProtoMatchProperties);
  }
  return v7;
}

uint64_t sub_23FAE733C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v2 = v0;
  v3 = sub_23FB2DA60();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ContextProtoAliasTypes(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  ContextProtoAliasTypes.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EA3160, (void (*)(uint64_t))type metadata accessor for ContextProtoAliasTypes);
    v7 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v9, type metadata accessor for ContextProtoAliasTypes);
  }
  return v7;
}

void sub_23FAE7470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t *v23;
  void (*v24)(void *);
  void (*v25)(void *);
  void (*v26)(uint64_t);
  void (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;

  sub_23F6D3DC4();
  a17 = v20;
  a18 = v21;
  v23 = v22;
  v25 = v24;
  v27 = v26;
  sub_23F8770FC();
  sub_23FAC3E6C();
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&a9 - v29;
  v25(v18);
  if (!v19)
  {
    sub_23FB29654(v23, v27);
    sub_23FB2D8EC();
    sub_23FB29FC0();
    sub_23F70D63C((uint64_t)v30);
  }
  sub_23F6B7194();
  sub_23F6D3710();
}

uint64_t sub_23FAE7524()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = v0;
  v3 = type metadata accessor for Session.Event(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoEvent(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v2, (uint64_t)v5, type metadata accessor for Session.Event);
  TranscriptProtoEvent.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EA71F0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoEvent);
    v6 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoEvent);
  }
  return v6;
}

uint64_t sub_23FAE7650()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v0 = sub_23FB2C470();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F6916B8(&qword_256EA86E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Timepoint();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TranscriptProtoTimepoint(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v25 - v14;
  sub_23F6F5920(v26, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Timepoint);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v9, v0);
  sub_23FB2D6C4();
  v16 = sub_23FB2D6D0();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v6, 0, 1, v16);
  v17 = *(_QWORD *)&v9[*(int *)(v7 + 24)];
  v25 = *(_QWORD *)&v9[*(int *)(v7 + 20)];
  v26 = v17;
  v18 = sub_23FB2C488();
  v20 = v19;
  v21 = (uint64_t)v13 + *(int *)(v10 + 28);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v21, 1, 1, v16);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_23F710E80((uint64_t)v6, v21, &qword_256EA86E0);
  v22 = v26;
  *v13 = v25;
  v13[1] = v22;
  v13[2] = v18;
  v13[3] = v20;
  sub_23F6F594C((uint64_t)v13, (uint64_t)v15, type metadata accessor for TranscriptProtoTimepoint);
  sub_23F6F8C88((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Timepoint);
  sub_23FB29654(&qword_256EB2718, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTimepoint);
  v23 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v15, type metadata accessor for TranscriptProtoTimepoint);
  return v23;
}

uint64_t sub_23FAE78D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = type metadata accessor for TranscriptProtoParticipantID(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *v6 = a1;
  v6[1] = a2;
  sub_23FB29654(&qword_256EB2CF8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParticipantID);
  v7 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v6, type metadata accessor for TranscriptProtoParticipantID);
  return v7;
}

uint64_t sub_23FAE79BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for TranscriptProtoSpanID(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *v4 = a1;
  sub_23FB29654(&qword_256EB2D10, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSpanID);
  v5 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v4, type metadata accessor for TranscriptProtoSpanID);
  return v5;
}

#error "23FAE7B40: call analysis failed (funcsize=71)"

uint64_t sub_23FAE7BC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v1 = type metadata accessor for SessionStart(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TranscriptProtoSessionStart(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v0, (uint64_t)v3, type metadata accessor for SessionStart);
  TranscriptProtoSessionStart.init(handwritten:)();
  sub_23FB29654(&qword_256EB2730, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSessionStart);
  v7 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v6, type metadata accessor for TranscriptProtoSessionStart);
  return v7;
}

uint64_t sub_23FAE7CE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = sub_23FB2C908();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoDeviceDetails(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  TranscriptProtoDeviceDetails.init(handwritten:)();
  sub_23FB29654(&qword_256EB39A0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDeviceDetails);
  v8 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v7, type metadata accessor for TranscriptProtoDeviceDetails);
  return v8;
}

uint64_t sub_23FAE7E08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  int v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_23FB2C8C0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (_DWORD *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  v8 = sub_23FB2C8B4();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *v7 = v8;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_23FB29654(&qword_256EB3988, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
  v9 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v7, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
  return v9;
}

uint64_t sub_23FAE7F4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v0 = sub_23FB2C50C();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = (char *)&v27 - v6;
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v27 - v8;
  v10 = sub_23FB2C998();
  v11 = *(_QWORD *)(v10 - 8);
  v30 = v10;
  v31 = v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for TranscriptProtoLocaleSettings(0);
  MEMORY[0x24BDAC7A8](v29);
  v15 = (uint64_t *)((char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v32, v10);
  sub_23FB2C968();
  v32 = sub_23FB2C4D0();
  v28 = v16;
  v17 = *(void (**)(char *, uint64_t))(v1 + 8);
  v17(v9, v0);
  sub_23FB2C950();
  v18 = sub_23FB2C4D0();
  v20 = v19;
  v17(v7, v0);
  sub_23FB2C974();
  v21 = sub_23FB2C4D0();
  v23 = v22;
  v17(v4, v0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  v24 = v28;
  *v15 = v32;
  v15[1] = v24;
  v15[2] = v18;
  v15[3] = v20;
  v15[4] = v21;
  v15[5] = v23;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v30);
  sub_23FB29654(&qword_256EB3970, (void (*)(uint64_t))type metadata accessor for TranscriptProtoLocaleSettings);
  v25 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v15, type metadata accessor for TranscriptProtoLocaleSettings);
  return v25;
}

void sub_23FAE8198(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  a3(0);
  sub_23FAC3E6C();
  MEMORY[0x24BDAC7A8](v4);
  sub_23FB29E68();
  sub_23FB29DA4();
  sub_23FB29CA8();
  sub_23FB29958(v3);
  sub_23FB2A304();
  sub_23F6D3674();
}

uint64_t sub_23FAE8204(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v22[2])(uint64_t);

  v8 = type metadata accessor for TranscriptProtoSpeechQuery(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  sub_23FACB7AC(a1, v11, v12, v13, v14, v15, v16, v17, (uint64_t)v22[0], v22[1]);
  v19 = v18;
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)v10 = v19;
  v10[8] = a2;
  *((_QWORD *)v10 + 2) = a3;
  *((_QWORD *)v10 + 3) = a4;
  sub_23FB29654(&qword_256EB3B48, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSpeechQuery);
  v20 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v10, type metadata accessor for TranscriptProtoSpeechQuery);
  return v20;
}

uint64_t sub_23FAE8340()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;

  v0 = sub_23FB2C764();
  v1 = *(_QWORD *)(v0 - 8);
  v27 = v0;
  v28 = v1;
  v2 = v1;
  MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TextQuery(0);
  v29 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TranscriptProtoTextQuery(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v32, (uint64_t)v10, type metadata accessor for TextQuery);
  v14 = *((_QWORD *)v10 + 1);
  v32 = *(_QWORD *)v10;
  v30 = v14;
  v31 = v10[16];
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, &v10[*(int *)(v8 + 24)], v0);
  swift_bridgeObjectRetain();
  LODWORD(v2) = sub_23FB2C758();
  v15 = sub_23FB2C740();
  v17 = v16;
  v18 = type metadata accessor for TranscriptProtoStatementID(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)v7 = v2;
  *((_QWORD *)v7 + 1) = v15;
  *((_QWORD *)v7 + 2) = v17;
  (*(void (**)(char *, uint64_t))(v28 + 8))(v4, v27);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v18);
  v19 = &v10[*(int *)(v29 + 28)];
  v21 = *(_QWORD *)v19;
  v20 = *((_QWORD *)v19 + 1);
  v22 = (uint64_t)&v13[*(int *)(v11 + 24)];
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v22, 1, 1, v18);
  v23 = &v13[*(int *)(v11 + 28)];
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  v24 = v30;
  *(_QWORD *)v13 = v32;
  *((_QWORD *)v13 + 1) = v24;
  v13[16] = v31;
  sub_23F710E80((uint64_t)v7, v22, &qword_256EA25E0);
  swift_bridgeObjectRelease();
  *(_QWORD *)v23 = v21;
  *((_QWORD *)v23 + 1) = v20;
  sub_23F6F8C88((uint64_t)v10, type metadata accessor for TextQuery);
  sub_23FB29654(&qword_256EB3B18, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTextQuery);
  v25 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v13, type metadata accessor for TranscriptProtoTextQuery);
  return v25;
}

uint64_t sub_23FAE8608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = v0;
  v3 = type metadata accessor for Request(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoRequest(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v2, (uint64_t)v5, type metadata accessor for Request);
  TranscriptProtoRequest.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB2748, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequest);
    v6 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoRequest);
  }
  return v6;
}

uint64_t sub_23FAE8734()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = v0;
  v3 = type metadata accessor for RequestContent(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoRequestContent(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v2, (uint64_t)v5, type metadata accessor for RequestContent);
  TranscriptProtoRequestContent.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB2760, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestContent);
    v6 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoRequestContent);
  }
  return v6;
}

void sub_23FAE8860()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t (*v6)(_QWORD);
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(_QWORD);
  void (*v46)(uint64_t);
  unint64_t *v47;
  uint64_t v48;

  sub_23F6B5220();
  v47 = v3;
  v48 = v4;
  v46 = v5;
  v7 = v6;
  v8 = sub_23F6B58C8();
  v42 = *(_QWORD *)(v8 - 8);
  v39 = v8;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_23F77DB24();
  v45 = v7;
  v12 = v7(v11);
  sub_23FAC3E6C();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (uint64_t *)((char *)&v39 - v14);
  v43 = sub_23F879A30();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B5C9C();
  v18 = MEMORY[0x24BDAC7A8](v17);
  sub_23F924B48(v18, v19, v20, v21, v22, v23, v24, v25, v39);
  v26 = sub_23F6B6F88();
  sub_23F77E534(v26, v27);
  v28 = *v15;
  v40 = v15[1];
  v41 = v28;
  v29 = v42;
  sub_23F78F5D0(v0, (uint64_t)v15 + *(int *)(v12 + 20), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 16));
  sub_23F6B5F1C();
  sub_23FB2C758();
  v30 = sub_23FB29DB4();
  v32 = v31;
  sub_23FAD69A0();
  sub_23FAD7240();
  *(_DWORD *)v2 = v12;
  *(_QWORD *)(v2 + 8) = v30;
  *(_QWORD *)(v2 + 16) = v32;
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v0, v39);
  sub_23F6B9258(v2, 0);
  sub_23F6B9258((uint64_t)v1 + *(int *)(v43 + 20), 1);
  sub_23F6F0CB4();
  v33 = v40;
  *v1 = v41;
  v1[1] = v33;
  v34 = sub_23F8783DC();
  sub_23F710E80(v34, v35, &qword_256EA25E0);
  v36 = (uint64_t)v1;
  v37 = v44;
  v38 = v46;
  sub_23F77E2AC(v36, v44);
  sub_23F6F8C88((uint64_t)v15, v45);
  sub_23FB29654(v47, v38);
  sub_23FB2D8EC();
  sub_23FB29A4C(v37);
  sub_23F6B5994();
  sub_23F876FC4();
  sub_23F6B5100();
}

uint64_t sub_23FAE8A44()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15[2];

  v0 = type metadata accessor for TranscriptProtoRequestContentSpeechContent(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (uint64_t *)((char *)v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = swift_bridgeObjectRetain();
  sub_23FACB7AC(v3, v4, v5, v6, v7, v8, v9, v10, v15[0], (uint64_t (*)(uint64_t))v15[1]);
  v12 = v11;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *v2 = v12;
  sub_23FB29654(&qword_256EB27A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestContentSpeechContent);
  v13 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v2, type metadata accessor for TranscriptProtoRequestContentSpeechContent);
  return v13;
}

uint64_t sub_23FAE8B34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = v0;
  v3 = type metadata accessor for ExternalAgentRequest(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoExternalAgentRequest(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v2, (uint64_t)v5, type metadata accessor for ExternalAgentRequest);
  TranscriptProtoExternalAgentRequest.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB27D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentRequest);
    v6 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoExternalAgentRequest);
  }
  return v6;
}

uint64_t sub_23FAE8C60(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[3];
  unsigned __int8 v12;

  v7 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[1] = a1;
  v11[2] = a2;
  v12 = a3;
  sub_23F73515C(a1, a2, a3);
  TranscriptProtoRequestPrescribedPlan.init(handwritten:)();
  if (!v3)
  {
    sub_23FB29654(&qword_256EB2800, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlan);
    v7 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v9, type metadata accessor for TranscriptProtoRequestPrescribedPlan);
  }
  return v7;
}

uint64_t sub_23FAE8D64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *v6 = a1;
  v6[1] = a2;
  sub_23FB29654(&qword_256EB2830, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
  v7 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v6, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
  return v7;
}

void sub_23FAE8E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;

  sub_23F6B5220();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v26 = v25;
  v27 = sub_23FB2A058();
  v28(v27);
  sub_23FAC3E6C();
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&a9 - v30;
  sub_23F6B90D8();
  sub_23FAD7510();
  *(_QWORD *)v31 = v20;
  *((_QWORD *)v31 + 1) = v26;
  v31[16] = v24;
  sub_23FB29DA4();
  sub_23FB2D8EC();
  sub_23FB29958((uint64_t)v31);
  sub_23F876B60();
  sub_23F6B5100();
}

uint64_t sub_23FAE8EFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = v0;
  v3 = type metadata accessor for Action(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoAction(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v2, (uint64_t)v5, type metadata accessor for Action);
  TranscriptProtoAction.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EA7F08, (void (*)(uint64_t))type metadata accessor for TranscriptProtoAction);
    v6 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoAction);
  }
  return v6;
}

uint64_t sub_23FAE9028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17[2];

  v2 = v0;
  v3 = type metadata accessor for ActionCancellation(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoActionCancellation(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v2, (uint64_t)v5, type metadata accessor for ActionCancellation);
  TranscriptProtoActionCancellation.init(handwritten:)((uint64_t)v5, v9, v10, v11, v12, v13, v14, v15, v17[0], v17[1]);
  if (!v1)
  {
    sub_23FB29654(&qword_256EB28C8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionCancellation);
    v6 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoActionCancellation);
  }
  return v6;
}

uint64_t sub_23FAE9154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = v0;
  v3 = type metadata accessor for ClientAction(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoClientAction(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v2, (uint64_t)v5, type metadata accessor for ClientAction);
  TranscriptProtoClientAction.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB2A18, (void (*)(uint64_t))type metadata accessor for TranscriptProtoClientAction);
    v6 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoClientAction);
  }
  return v6;
}

uint64_t sub_23FAE9280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Step;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = v0;
  Step = type metadata accessor for QueryStep(0);
  MEMORY[0x24BDAC7A8](Step);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoQueryStep(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v2, (uint64_t)v5, type metadata accessor for QueryStep);
  TranscriptProtoQueryStep.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB2E38, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryStep);
    v6 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoQueryStep);
  }
  return v6;
}

char *sub_23FAE93AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v2 = v0;
  v42 = sub_23FB2C764();
  v3 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for VariableStep(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoVariableStep(0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (uint64_t *)((char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v13);
  v43 = (uint64_t)&v37 - v16;
  sub_23F6F5920(v2, (uint64_t)v11, type metadata accessor for VariableStep);
  v17 = swift_bridgeObjectRetain();
  sub_23FACEF64(v17, v18, v19, v20, v21, v22, v23, v24, v37, v38);
  if (v1)
  {
    sub_23F6F8C88((uint64_t)v11, type metadata accessor for VariableStep);
  }
  else
  {
    v26 = v3;
    v27 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    v41 = v25;
    v28 = v42;
    v27(v5, v11, v42);
    v39 = sub_23FB2C758();
    v29 = sub_23FB2C740();
    v38 = v30;
    v31 = type metadata accessor for TranscriptProtoStatementID(0);
    v40 = v12;
    v32 = v31;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(_DWORD *)v8 = v39;
    v33 = v38;
    *((_QWORD *)v8 + 1) = v29;
    *((_QWORD *)v8 + 2) = v33;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v28);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v32);
    v34 = (uint64_t)v15 + *(int *)(v40 + 20);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v34, 1, 1, v32);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *v15 = v41;
    sub_23F710E80((uint64_t)v8, v34, &qword_256EA25E0);
    v35 = v43;
    sub_23F6F594C((uint64_t)v15, v43, type metadata accessor for TranscriptProtoVariableStep);
    sub_23F6F8C88((uint64_t)v11, type metadata accessor for VariableStep);
    sub_23FB29654(&qword_256EB31E8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoVariableStep);
    v5 = (char *)sub_23FB2D8EC();
    sub_23F6F8C88(v35, type metadata accessor for TranscriptProtoVariableStep);
  }
  return v5;
}

uint64_t sub_23FAE9690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v18;

  v1 = v0;
  v2 = sub_23FB2C6F8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (uint64_t *)((char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v9 = (void *)sub_23FB2C6E0();
  v10 = objc_msgSend(v9, sel_domain);

  v11 = sub_23FB2F140();
  v13 = v12;

  v14 = (void *)sub_23FB2C6E0();
  v15 = objc_msgSend(v14, sel_code);

  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *v8 = v11;
  v8[1] = v13;
  v8[2] = (uint64_t)v15;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_23FB29654(&qword_256EB2AA0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoIntelligenceFlowError);
  v16 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoIntelligenceFlowError);
  return v16;
}

uint64_t sub_23FAE982C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = v0;
  v3 = type metadata accessor for RequestContent.SystemPromptResolution(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v2, (uint64_t)v5, type metadata accessor for RequestContent.SystemPromptResolution);
  TranscriptProtoSystemPromptResolution.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB3078, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemPromptResolution);
    v6 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoSystemPromptResolution);
  }
  return v6;
}

uint64_t sub_23FAE9958()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = v0;
  v3 = type metadata accessor for StatementResult(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoStatementResult(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v2, (uint64_t)v5, type metadata accessor for StatementResult);
  TranscriptProtoStatementResult.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB1D78, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementResult);
    v6 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoStatementResult);
  }
  return v6;
}

uint64_t sub_23FAE9A84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t StepResults;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = v0;
  StepResults = type metadata accessor for QueryStepResults(0);
  MEMORY[0x24BDAC7A8](StepResults);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoQueryStepResults(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v2, (uint64_t)v5, type metadata accessor for QueryStepResults);
  TranscriptProtoQueryStepResults.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB2E60, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryStepResults);
    v6 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoQueryStepResults);
  }
  return v6;
}

void sub_23FAE9BB0()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F879A30();
  sub_23FAC3E6C();
  MEMORY[0x24BDAC7A8](v1);
  sub_23FB29E68();
  sub_23FB29DA4();
  sub_23FB29CA8();
  sub_23FB29958(v0);
  sub_23FB2A304();
  sub_23F6D3674();
}

uint64_t sub_23FAE9C18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v2 = v0;
  v3 = sub_23FB2D004();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TranscriptProtoSystemResponse(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  TranscriptProtoSystemResponse.init(handwritten:)(v6);
  if (!v1)
  {
    sub_23FB29654(&qword_256EB3938, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemResponse);
    v7 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v9, type metadata accessor for TranscriptProtoSystemResponse);
  }
  return v7;
}

#error "23FAE9DFC: call analysis failed (funcsize=74)"

#error "23FAE9F2C: call analysis failed (funcsize=71)"

uint64_t sub_23FAE9FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v7 = type metadata accessor for TranscriptProtoClientInitiatedClientAction(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v10 = sub_23FB203D0(a3);
  if (v3)
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = v10;
    swift_bridgeObjectRelease();
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *v9 = a1;
    v9[1] = a2;
    v9[2] = v11;
    sub_23FB29654(&qword_256EB3160, (void (*)(uint64_t))type metadata accessor for TranscriptProtoClientInitiatedClientAction);
    v7 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v9, type metadata accessor for TranscriptProtoClientInitiatedClientAction);
  }
  return v7;
}

uint64_t sub_23FAEA0FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = type metadata accessor for TranscriptProtoSafetyModeException(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *v6 = a1;
  v6[1] = a2;
  sub_23FB29654(&qword_256EB3128, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSafetyModeException);
  v7 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v6, type metadata accessor for TranscriptProtoSafetyModeException);
  return v7;
}

uint64_t sub_23FAEA1E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = v0;
  v3 = type metadata accessor for VariableSetter(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoVariableSetter(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v2, (uint64_t)v5, type metadata accessor for VariableSetter);
  TranscriptProtoVariableSetter.init(handwritten:)(v5);
  if (!v1)
  {
    sub_23FB29654(&qword_256EB2200, (void (*)(uint64_t))type metadata accessor for TranscriptProtoVariableSetter);
    v6 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoVariableSetter);
  }
  return v6;
}

uint64_t sub_23FAEA310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = v0;
  v3 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v2, (uint64_t)v5, type metadata accessor for RequestContent.SystemPromptResolution.UserAction);
  TranscriptProtoSystemPromptResolutionUserAction.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB3190, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction);
    v6 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction);
  }
  return v6;
}

uint64_t sub_23FAEA43C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = v0;
  v3 = type metadata accessor for StatementResultPayload(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v2, (uint64_t)v5, type metadata accessor for StatementResultPayload);
  TranscriptProtoStatementResultPayload.init(handwritten:)(v5);
  if (!v1)
  {
    sub_23FB29654(&qword_256EB29B0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementResultPayload);
    v6 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoStatementResultPayload);
  }
  return v6;
}

uint64_t sub_23FAEA568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v2 = v0;
  v3 = sub_23FB2CE60();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TranscriptProtoResponseOutput(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  TranscriptProtoResponseOutput.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB2E90, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseOutput);
    v7 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v9, type metadata accessor for TranscriptProtoResponseOutput);
  }
  return v7;
}

void sub_23FAEA69C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t (*v24)(_QWORD);
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t *v31;
  void (*v32)(uint64_t);

  sub_23F6D3DC4();
  a17 = v19;
  a18 = v20;
  v22 = v21;
  sub_23F6F0918(v23, v24);
  sub_23FAC3E6C();
  MEMORY[0x24BDAC7A8](v25);
  v27 = (uint64_t *)((char *)&a9 - v26);
  v28 = sub_23F77E584();
  v29 = v22(v28);
  if (!v18)
  {
    v30 = v29;
    sub_23FAC3044();
    *v27 = v30;
    sub_23FB2A5B0();
    sub_23FB29654(v31, v32);
    sub_23FB2D8EC();
    sub_23FB2AE9C();
    sub_23F70D63C((uint64_t)v27);
  }
  sub_23FAD6F0C();
  sub_23F6D3710();
}

uint64_t sub_23FAEA75C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = v0;
  v3 = type metadata accessor for ParameterQuery(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoParameterQuery(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v2, (uint64_t)v5, type metadata accessor for ParameterQuery);
  TranscriptProtoParameterQuery.init(handwritten:)(v5);
  if (!v1)
  {
    sub_23FB29654(&qword_256EB1FD0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParameterQuery);
    v6 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoParameterQuery);
  }
  return v6;
}

uint64_t sub_23FAEA888()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v1 = type metadata accessor for ActionParameterContext(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TranscriptProtoActionParameterContext(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v0, (uint64_t)v3, type metadata accessor for ActionParameterContext);
  TranscriptProtoActionParameterContext.init(handwritten:)();
  sub_23FB29654(&qword_256EB2A88, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionParameterContext);
  v7 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v6, type metadata accessor for TranscriptProtoActionParameterContext);
  return v7;
}

char *sub_23FAEA9AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v2 = v0;
  v3 = sub_23FB2D274();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TranscriptProtoActionConfirmation(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  v11 = MEMORY[0x242671EEC](v10);
  sub_23FB21880(v11);
  if (v1)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    v13 = v12;
    swift_bridgeObjectRelease();
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *v9 = v13;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_23FB29654(&qword_256EB28F8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionConfirmation);
    v6 = (char *)sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v9, type metadata accessor for TranscriptProtoActionConfirmation);
  }
  return v6;
}

uint64_t sub_23FAEAB2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v2 = v0;
  v3 = sub_23FB2CD04();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TranscriptProtoParameterValue(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  TranscriptProtoParameterValue.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB1D18, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParameterValue);
    v7 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v9, type metadata accessor for TranscriptProtoParameterValue);
  }
  return v7;
}

uint64_t sub_23FAEAC60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;

  v1 = v0;
  v2 = sub_23FB2D040();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (uint64_t *)((char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v22 - v7;
  v9 = type metadata accessor for TranscriptProtoPromptSelection(0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v22 - v13;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v15(v8, v1, v2);
  v15((char *)v6, (uint64_t)v8, v2);
  v16 = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 88))(v6, v2);
  v17 = v16;
  v18 = *MEMORY[0x24BE53140];
  if (v16 == *MEMORY[0x24BE53140])
  {
    (*(void (**)(uint64_t *, uint64_t))(v3 + 96))(v6, v2);
    v19 = *v6;
    goto LABEL_7;
  }
  if (v16 == *MEMORY[0x24BE53150])
  {
    v19 = 0;
LABEL_7:
    *(_QWORD *)v12 = 0;
    *((_WORD *)v12 + 4) = 256;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    sub_23F6F594C((uint64_t)v12, (uint64_t)v14, type metadata accessor for TranscriptProtoPromptSelection);
    *(_QWORD *)v14 = v19;
    v14[8] = v17 != v18;
    v14[9] = 0;
    sub_23FB29654(&qword_256EB28E0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPromptSelection);
    v20 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v14, type metadata accessor for TranscriptProtoPromptSelection);
    return v20;
  }
  if (v16 == *MEMORY[0x24BE53148])
  {
    v19 = 1;
    goto LABEL_7;
  }
  result = sub_23FB2FB6C();
  __break(1u);
  return result;
}

uint64_t sub_23FAEAE9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v1 = sub_23FB2D2C8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (_QWORD *)((char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  v8 = sub_23FB2D2BC();
  v10 = v9;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *v7 = v8;
  v7[1] = v10;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_23FB29654(&qword_256EB2CA8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParameterNeedsValue);
  v11 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v7, type metadata accessor for TranscriptProtoParameterNeedsValue);
  return v11;
}

uint64_t sub_23FAEAFEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v2 = v0;
  v3 = sub_23FB2D430();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  TranscriptProtoParameterConfirmation.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB2C50, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParameterConfirmation);
    v7 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v9, type metadata accessor for TranscriptProtoParameterConfirmation);
  }
  return v7;
}

uint64_t sub_23FAEB120()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[4];
  int v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v0;
  v3 = sub_23FB2D520();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = type metadata accessor for TranscriptProtoParameterDisambiguation(0);
  MEMORY[0x24BDAC7A8](v21);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  v20 = sub_23FB2D4FC();
  v10 = v9;
  v11 = MEMORY[0x24267218C]();
  v13 = v12;
  v14 = MEMORY[0x242672198]();
  v15 = sub_23FAF1BE8(v14);
  if (v1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = v15;
    v19 = v13 & 1;
    if ((v13 & 1) != 0)
      v11 = 0;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(_QWORD *)v8 = v20;
    *((_QWORD *)v8 + 1) = v10;
    v8[32] = v19;
    *((_QWORD *)v8 + 2) = v16;
    *((_QWORD *)v8 + 3) = v11;
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
    sub_23FB29654(&qword_256EB2C68, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParameterDisambiguation);
    v3 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoParameterDisambiguation);
  }
  return v3;
}

uint64_t sub_23FAEB2D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v2 = v0;
  v3 = sub_23FB2D328();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  TranscriptProtoParameterNotAllowed.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB2CC0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParameterNotAllowed);
    v7 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v9, type metadata accessor for TranscriptProtoParameterNotAllowed);
  }
  return v7;
}

uint64_t sub_23FAEB40C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = v0;
  v3 = type metadata accessor for Candidate(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoCandidate(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v2, (uint64_t)v5, type metadata accessor for Candidate);
  TranscriptProtoCandidate.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB1FC0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoCandidate);
    v6 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoCandidate);
  }
  return v6;
}

uint64_t sub_23FAEB538()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Predicate;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = v0;
  Predicate = type metadata accessor for QueryPredicate(0);
  MEMORY[0x24BDAC7A8](Predicate);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoQueryPredicate(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v2, (uint64_t)v5, type metadata accessor for QueryPredicate);
  TranscriptProtoQueryPredicate.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB1F98, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryPredicate);
    v6 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoQueryPredicate);
  }
  return v6;
}

uint64_t sub_23FAEB664(_BOOL8 a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  _BOOL8 v10;
  uint64_t v11;
  _QWORD v13[2];

  v4 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v13 - v8;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  v10 = a1;
  if ((a2 & 1) == 0)
    v10 = a1;
  *(_QWORD *)v7 = v10;
  v7[8] = a2 & 1;
  v7[9] = 0;
  sub_23F6F594C((uint64_t)v7, (uint64_t)v9, type metadata accessor for TranscriptProtoCandidatePromptStatus);
  sub_23FB29654(&qword_256EB2A00, (void (*)(uint64_t))type metadata accessor for TranscriptProtoCandidatePromptStatus);
  v11 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v9, type metadata accessor for TranscriptProtoCandidatePromptStatus);
  return v11;
}

uint64_t sub_23FAEB78C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int128 v10;
  _BYTE v12[16];
  __int128 v13;
  __int128 v14;

  v2 = v0;
  v3 = type metadata accessor for TranscriptProtoPlan(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = *(_OWORD *)v2;
  v13 = *(_OWORD *)(v2 + 16);
  v14 = v6;
  sub_23F78CFEC(v2);
  sub_23F794F70((uint64_t)&v14);
  sub_23F794F70((uint64_t)&v13);
  swift_bridgeObjectRetain();
  sub_23FACC97C();
  if (v1)
  {
    sub_23FB2962C((uint64_t)&v14);
    sub_23FB2962C((uint64_t)&v13);
    sub_23F78D03C(v2);
  }
  else
  {
    v8 = v7;
    v9 = *(_BYTE *)(v2 + 56);
    sub_23F6B4EC0(v2 + 40, (uint64_t)v12, &qword_256EAB798);
    sub_23F794F70((uint64_t)v12);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    sub_23F78D03C(v2);
    v10 = v13;
    *(_OWORD *)v5 = v14;
    *((_OWORD *)v5 + 1) = v10;
    *((_QWORD *)v5 + 4) = v8;
    sub_23F6B4EC0((uint64_t)v12, (uint64_t)(v5 + 40), &qword_256EAB798);
    v5[56] = v9;
    sub_23FB29654(&qword_256EB2D28, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPlan);
    v3 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v5, type metadata accessor for TranscriptProtoPlan);
  }
  return v3;
}

uint64_t sub_23FAEB924()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  _BYTE v7[48];

  v2 = v0;
  v3 = type metadata accessor for TranscriptProtoRecoverableError(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23FB295A8(v2, (uint64_t)v7);
  sub_23FB295E4(v2);
  TranscriptProtoRecoverableError.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB2D40, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRecoverableError);
    v3 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v5, type metadata accessor for TranscriptProtoRecoverableError);
  }
  return v3;
}

uint64_t sub_23FAEBA1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[6];

  sub_23FB2956C(v0, (uint64_t)v18);
  v1 = v18[0];
  v2 = v18[1];
  v3 = v18[3];
  v4 = v18[5];
  v16 = v18[4];
  v17 = v18[2];
  v5 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for TranscriptProtoPlanGenerationError(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v16 - v12;
  type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *v7 = v1;
  v7[1] = v2;
  v7[2] = v17;
  v7[3] = v3;
  v7[4] = v16;
  v7[5] = v4;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v11, 1, 1, v5);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_23F6B4F84((uint64_t)v11, &qword_256EA8678);
  sub_23F6F594C((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoPlanGenerationErrorEnum);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v11, 0, 1, v5);
  sub_23F6F594C((uint64_t)v11, (uint64_t)v13, type metadata accessor for TranscriptProtoPlanGenerationError);
  sub_23FB29654(&qword_256EB2D58, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPlanGenerationError);
  v14 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v13, type metadata accessor for TranscriptProtoPlanGenerationError);
  return v14;
}

uint64_t sub_23FAEBC10()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD *v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  v1 = type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (__int128 *)((char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = *v0;
  v9 = v0[1];
  v10 = v4;
  v8 = v0[2];
  sub_23F794F70((uint64_t)&v10);
  sub_23F794F70((uint64_t)&v9);
  sub_23F794F70((uint64_t)&v8);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  v5 = v9;
  *v3 = v10;
  v3[1] = v5;
  v3[2] = v8;
  sub_23FB29654(&qword_256EB2D70, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
  v6 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v3, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
  return v6;
}

uint64_t sub_23FAEBD20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;

  v6 = type metadata accessor for TranscriptProtoDecompositionResult(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (uint64_t *)((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  v8[1] = a1;
  v8[2] = a2;
  *v8 = a3;
  sub_23FB29654(&qword_256EB2A70, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDecompositionResult);
  v9 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoDecompositionResult);
  return v9;
}

uint64_t sub_23FAEBE20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = type metadata accessor for TranscriptProtoASTProgram(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (uint64_t *)((char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = swift_bridgeObjectRetain();
  v4 = sub_23FAE3E4C(v3);
  swift_bridgeObjectRelease();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *v2 = v4;
  sub_23FB29654(&qword_256EB3668, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTProgram);
  v5 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v2, type metadata accessor for TranscriptProtoASTProgram);
  return v5;
}

uint64_t sub_23FAEBF18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v1 = type metadata accessor for Expression(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TranscriptProtoExpression(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v0, (uint64_t)v3, type metadata accessor for Expression);
  TranscriptProtoExpression.init(handwritten:)();
  sub_23FB29654(&qword_256EB3418, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExpression);
  v7 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v6, type metadata accessor for TranscriptProtoExpression);
  return v7;
}

uint64_t sub_23FAEC03C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v11[3];
  char v12;

  v6 = type metadata accessor for TranscriptProtoValueExpression(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[1] = a1;
  v11[2] = a2;
  v12 = a3;
  sub_23F6FEA38(a1, a2, a3);
  TranscriptProtoValueExpression.init(handwritten:)();
  sub_23FB29654(&qword_256EB3430, (void (*)(uint64_t))type metadata accessor for TranscriptProtoValueExpression);
  v9 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoValueExpression);
  return v9;
}

uint64_t sub_23FAEC13C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v1 = type metadata accessor for PrefixExpression(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TranscriptProtoPrefixExpression(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v0, (uint64_t)v3, type metadata accessor for PrefixExpression);
  TranscriptProtoPrefixExpression.init(handwritten:)();
  sub_23FB29654(&qword_256EB3460, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPrefixExpression);
  v7 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v6, type metadata accessor for TranscriptProtoPrefixExpression);
  return v7;
}

uint64_t sub_23FAEC260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v1 = type metadata accessor for InfixExpression(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TranscriptProtoInfixExpression(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v0, (uint64_t)v3, type metadata accessor for InfixExpression);
  TranscriptProtoInfixExpression.init(handwritten:)();
  sub_23FB29654(&qword_256EB3478, (void (*)(uint64_t))type metadata accessor for TranscriptProtoInfixExpression);
  v7 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v6, type metadata accessor for TranscriptProtoInfixExpression);
  return v7;
}

uint64_t sub_23FAEC384()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = sub_23FB2C764();
  v26 = *(_QWORD *)(v2 - 8);
  v3 = v26;
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for DotExpression(0);
  MEMORY[0x24BDAC7A8](v29);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for TranscriptProtoDotExpression(0);
  v11 = MEMORY[0x24BDAC7A8](v27);
  v13 = (uint64_t *)((char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11);
  v28 = (uint64_t)&v26 - v14;
  sub_23F6F5920(v1, (uint64_t)v10, type metadata accessor for DotExpression);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v10, v2);
  LODWORD(v1) = sub_23FB2C758();
  v15 = sub_23FB2C740();
  v17 = v16;
  v18 = type metadata accessor for TranscriptProtoStatementID(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)v8 = v1;
  *((_QWORD *)v8 + 1) = v15;
  *((_QWORD *)v8 + 2) = v17;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v2);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v18);
  v19 = &v10[*(int *)(v29 + 20)];
  v21 = *(_QWORD *)v19;
  v20 = *((_QWORD *)v19 + 1);
  v22 = (uint64_t)v13 + *(int *)(v27 + 20);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v22, 1, 1, v18);
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_23F710E80((uint64_t)v8, v22, &qword_256EA25E0);
  *v13 = v21;
  v13[1] = v20;
  v23 = v28;
  sub_23F6F594C((uint64_t)v13, v28, type metadata accessor for TranscriptProtoDotExpression);
  sub_23F6F8C88((uint64_t)v10, type metadata accessor for DotExpression);
  sub_23FB29654(&qword_256EB34A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDotExpression);
  v24 = sub_23FB2D8EC();
  sub_23F6F8C88(v23, type metadata accessor for TranscriptProtoDotExpression);
  return v24;
}

uint64_t sub_23FAEC63C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v1 = type metadata accessor for IndexExpression(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TranscriptProtoIndexExpression(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v0, (uint64_t)v3, type metadata accessor for IndexExpression);
  TranscriptProtoIndexExpression.init(handwritten:)();
  sub_23FB29654(&qword_256EB34C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoIndexExpression);
  v7 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v6, type metadata accessor for TranscriptProtoIndexExpression);
  return v7;
}

uint64_t sub_23FAEC760()
{
  uint64_t v0;
  uint64_t updated;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  updated = type metadata accessor for UpdateParametersExpression(0);
  MEMORY[0x24BDAC7A8](updated);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v0, (uint64_t)v3, type metadata accessor for UpdateParametersExpression);
  TranscriptProtoUpdateParametersExpression.init(handwritten:)();
  sub_23FB29654(&qword_256EB34D8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUpdateParametersExpression);
  v7 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v6, type metadata accessor for TranscriptProtoUpdateParametersExpression);
  return v7;
}

uint64_t sub_23FAEC884()
{
  uint64_t v0;
  uint64_t updated;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  updated = type metadata accessor for UpdateParametersExpression.UpdateParameter(0);
  MEMORY[0x24BDAC7A8](updated);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v0, (uint64_t)v3, type metadata accessor for UpdateParametersExpression.UpdateParameter);
  TranscriptProtoUpdateParameterExpression_UpdateParameter.init(handwritten:)();
  sub_23FB29654(&qword_256EB2390, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
  v7 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v6, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
  return v7;
}

uint64_t sub_23FAEC9A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = type metadata accessor for TranscriptProtoCallExpression(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain_n();
  v7 = swift_bridgeObjectRetain();
  sub_23FB2123C(v7);
  v9 = v8;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v6 = a1;
  v6[1] = a2;
  v6[2] = v9;
  sub_23FB29654(&qword_256EB3500, (void (*)(uint64_t))type metadata accessor for TranscriptProtoCallExpression);
  v10 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v6, type metadata accessor for TranscriptProtoCallExpression);
  return v10;
}

uint64_t sub_23FAECAC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD v7[2];

  v2 = type metadata accessor for TranscriptProtoSayExpression(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[1] = a1;
  swift_bridgeObjectRetain();
  TranscriptProtoSayExpression.init(handwritten:)();
  sub_23FB29654(&qword_256EB3518, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSayExpression);
  v5 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v4, type metadata accessor for TranscriptProtoSayExpression);
  return v5;
}

uint64_t sub_23FAECBA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = v0;
  v2 = sub_23FB2C764();
  v3 = *(_QWORD *)(v2 - 8);
  v25 = v2;
  v26 = v3;
  v4 = v3;
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for PickExpression(0);
  MEMORY[0x24BDAC7A8](v28);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for TranscriptProtoPickExpression(0);
  v12 = MEMORY[0x24BDAC7A8](v27);
  v14 = (uint64_t *)((char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - v15;
  sub_23F6F5920(v1, (uint64_t)v11, type metadata accessor for PickExpression);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v11, v2);
  LODWORD(v1) = sub_23FB2C758();
  v17 = sub_23FB2C740();
  v19 = v18;
  v20 = type metadata accessor for TranscriptProtoStatementID(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)v9 = v1;
  *((_QWORD *)v9 + 1) = v17;
  *((_QWORD *)v9 + 2) = v19;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v25);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v20);
  v21 = *(_QWORD *)&v11[*(int *)(v28 + 20)];
  v22 = (uint64_t)v14 + *(int *)(v27 + 20);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v22, 1, 1, v20);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_23F710E80((uint64_t)v9, v22, &qword_256EA25E0);
  *v14 = v21;
  sub_23F6F594C((uint64_t)v14, (uint64_t)v16, type metadata accessor for TranscriptProtoPickExpression);
  sub_23F6F8C88((uint64_t)v11, type metadata accessor for PickExpression);
  sub_23FB29654(&qword_256EB3530, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPickExpression);
  v23 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v16, type metadata accessor for TranscriptProtoPickExpression);
  return v23;
}

uint64_t sub_23FAECE40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v1 = type metadata accessor for ConfirmExpression(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TranscriptProtoConfirmExpression(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v0, (uint64_t)v3, type metadata accessor for ConfirmExpression);
  TranscriptProtoConfirmExpression.init(handwritten:)();
  sub_23FB29654(&qword_256EB3548, (void (*)(uint64_t))type metadata accessor for TranscriptProtoConfirmExpression);
  v7 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v6, type metadata accessor for TranscriptProtoConfirmExpression);
  return v7;
}

uint64_t sub_23FAECF64(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v6 = type metadata accessor for TranscriptProtoSearchExpression(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_QWORD *)v8 = a1;
  *((_QWORD *)v8 + 1) = a2;
  v8[16] = a3 & 1;
  v8[17] = HIBYTE(a3) & 1;
  sub_23FB29654(&qword_256EB3560, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSearchExpression);
  v9 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoSearchExpression);
  return v9;
}

uint64_t sub_23FAED068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v1 = type metadata accessor for PickOneExpression(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TranscriptProtoPickOneExpression(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v0, (uint64_t)v3, type metadata accessor for PickOneExpression);
  TranscriptProtoPickOneExpression.init(handwritten:)();
  sub_23FB29654(&qword_256EB3578, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPickOneExpression);
  v7 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v6, type metadata accessor for TranscriptProtoPickOneExpression);
  return v7;
}

uint64_t sub_23FAED18C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for TranscriptProtoResolveToolExpression(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *v4 = a1;
  sub_23FB29654(&qword_256EB3590, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResolveToolExpression);
  v5 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v4, type metadata accessor for TranscriptProtoResolveToolExpression);
  return v5;
}

uint64_t sub_23FAED270()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v1 = type metadata accessor for UndoExpression(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TranscriptProtoUndoExpression(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v0, (uint64_t)v3, type metadata accessor for UndoExpression);
  TranscriptProtoUndoExpression.init(handwritten:)();
  sub_23FB29654(&qword_256EB35A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUndoExpression);
  v7 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v6, type metadata accessor for TranscriptProtoUndoExpression);
  return v7;
}

uint64_t sub_23FAED394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v1 = type metadata accessor for RejectExpression(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TranscriptProtoRejectExpression(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v0, (uint64_t)v3, type metadata accessor for RejectExpression);
  TranscriptProtoRejectExpression.init(handwritten:)();
  sub_23FB29654(&qword_256EB35C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRejectExpression);
  v7 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v6, type metadata accessor for TranscriptProtoRejectExpression);
  return v7;
}

uint64_t sub_23FAED4B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v1 = type metadata accessor for CancelExpression(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TranscriptProtoCancelExpression(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v0, (uint64_t)v3, type metadata accessor for CancelExpression);
  TranscriptProtoCancelExpression.init(handwritten:)();
  sub_23FB29654(&qword_256EB35D8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoCancelExpression);
  v7 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v6, type metadata accessor for TranscriptProtoCancelExpression);
  return v7;
}

uint64_t sub_23FAED5DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v1 = type metadata accessor for OpenExpression(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TranscriptProtoOpenExpression(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v0, (uint64_t)v3, type metadata accessor for OpenExpression);
  TranscriptProtoOpenExpression.init(handwritten:)();
  sub_23FB29654(&qword_256EB3650, (void (*)(uint64_t))type metadata accessor for TranscriptProtoOpenExpression);
  v7 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v6, type metadata accessor for TranscriptProtoOpenExpression);
  return v7;
}

uint64_t sub_23FAED700()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = v0;
  v3 = type metadata accessor for ProgramStatement(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoProgramStatement(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v2, (uint64_t)v5, type metadata accessor for ProgramStatement);
  TranscriptProtoProgramStatement.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB1F30, (void (*)(uint64_t))type metadata accessor for TranscriptProtoProgramStatement);
    v6 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoProgramStatement);
  }
  return v6;
}

uint64_t sub_23FAED82C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];

  v1 = sub_23FB2C764();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  v8 = sub_23FB2C758();
  v9 = sub_23FB2C740();
  v11 = v10;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)v7 = v8;
  *((_QWORD *)v7 + 1) = v9;
  *((_QWORD *)v7 + 2) = v11;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_23FB29654(&qword_256EB2020, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
  v12 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  return v12;
}

uint64_t sub_23FAED988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18[2];

  v2 = v0;
  v3 = sub_23FB2D0E8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TranscriptProtoActionRequirement(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  TranscriptProtoActionRequirement.init(handwritten:)((uint64_t)v6, v10, v11, v12, v13, v14, v15, v16, v18[0], v18[1]);
  if (!v1)
  {
    sub_23FB29654(&qword_256EB2B30, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionRequirement);
    v7 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v9, type metadata accessor for TranscriptProtoActionRequirement);
  }
  return v7;
}

#error "23FAEDB6C: call analysis failed (funcsize=74)"

uint64_t sub_23FAEDBF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v2 = v0;
  v3 = sub_23FB2C89C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TranscriptProtoActionSuccess(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  TranscriptProtoActionSuccess.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB2C20, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionSuccess);
    v7 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v9, type metadata accessor for TranscriptProtoActionSuccess);
  }
  return v7;
}

uint64_t sub_23FAEDD24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  int v19;
  __int16 v20;
  char v21;
  char v22;

  v2 = v0;
  v3 = sub_23FB2D0B8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TranscriptProtoResponseManifest(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  TranscriptProtoResponseManifest.init(handwritten:)((uint64_t)v6, v10, v11, v12, v13, v14, v15, v16, v18, v19, v20, v21, v22);
  if (!v1)
  {
    sub_23FB29654(&qword_256EA7EF0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseManifest);
    v7 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v9, type metadata accessor for TranscriptProtoResponseManifest);
  }
  return v7;
}

uint64_t sub_23FAEDE58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = v0;
  v2 = sub_23FB2D1F0();
  v3 = *(_QWORD *)(v2 - 8);
  v31 = v2;
  v32 = v3;
  v4 = v3;
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TranscriptProtoResponseParameter(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1, v2);
  v10 = sub_23FB2D1B4();
  v29 = v11;
  v30 = v10;
  v12 = sub_23FB2D1CC();
  v27 = v13;
  v28 = v12;
  v14 = sub_23FB2D1C0();
  v16 = v15;
  v17 = sub_23FB2D1E4();
  v18 = sub_23FB2D1D8();
  v20 = v19;
  v21 = sub_23FB2D19C();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  v22 = v31;
  v23 = v29;
  *(_QWORD *)v9 = v30;
  *((_QWORD *)v9 + 1) = v23;
  v24 = v27;
  *((_QWORD *)v9 + 2) = v28;
  *((_QWORD *)v9 + 3) = v24;
  *((_QWORD *)v9 + 4) = v14;
  *((_QWORD *)v9 + 5) = v16;
  v9[48] = v17;
  *((_QWORD *)v9 + 7) = v18;
  *((_QWORD *)v9 + 8) = v20;
  v9[72] = v21;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v6, v22);
  sub_23FB29654(&qword_256EB20A0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseParameter);
  v25 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v9, type metadata accessor for TranscriptProtoResponseParameter);
  return v25;
}

uint64_t sub_23FAEE004()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = v0;
  v2 = sub_23FB2CD4C();
  v3 = *(_QWORD *)(v2 - 8);
  v27 = v2;
  v28 = v3;
  v4 = v3;
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TranscriptProtoResponseDialog(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1, v2);
  v10 = sub_23FB2CD34();
  v25 = v11;
  v26 = v10;
  v12 = sub_23FB2CD40();
  v14 = v13;
  v15 = sub_23FB2CD10();
  v17 = v16;
  v18 = sub_23FB2CD1C();
  v20 = v19;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  v21 = v27;
  v22 = v25;
  *v9 = v26;
  v9[1] = v22;
  v9[2] = v12;
  v9[3] = v14;
  v9[4] = v15;
  v9[5] = v17;
  v9[6] = v18;
  v9[7] = v20;
  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v21);
  sub_23FB29654(&qword_256EB2E78, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseDialog);
  v23 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v9, type metadata accessor for TranscriptProtoResponseDialog);
  return v23;
}

uint64_t sub_23FAEE194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v2 = v0;
  v3 = sub_23FB2CF8C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TranscriptProtoResponseVisual(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  TranscriptProtoResponseVisual.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB2FC8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseVisual);
    v7 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v9, type metadata accessor for TranscriptProtoResponseVisual);
  }
  return v7;
}

uint64_t sub_23FAEE2C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v2 = v0;
  v3 = sub_23FB2CF38();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TranscriptProtoUIType(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  TranscriptProtoUIType.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB20C8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUIType);
    v7 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v9, type metadata accessor for TranscriptProtoUIType);
  }
  return v7;
}

uint64_t sub_23FAEE3FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v2 = v0;
  v3 = sub_23FB2CF80();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TranscriptProtoUILabel(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  TranscriptProtoUILabel.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB20D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUILabel);
    v7 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v9, type metadata accessor for TranscriptProtoUILabel);
  }
  return v7;
}

uint64_t sub_23FAEE530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = sub_23FB2CF74();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoUIConfirmationLabel(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  v8 = sub_23FB2CF5C();
  v10 = v9;
  v11 = sub_23FB2CF20();
  v13 = v12;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *v7 = v8;
  v7[1] = v10;
  v7[2] = v11;
  v7[3] = v13;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_23FB29654(&qword_256EB3000, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUIConfirmationLabel);
  v14 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v7, type metadata accessor for TranscriptProtoUIConfirmationLabel);
  return v14;
}

uint64_t sub_23FAEE690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v1 = v0;
  v2 = sub_23FB2CED8();
  v3 = *(_QWORD *)(v2 - 8);
  v21 = v2;
  v22 = v3;
  v4 = v3;
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TranscriptProtoArchiveViewPayload(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1, v2);
  v10 = sub_23FB2CEC0();
  v12 = v11;
  v13 = sub_23FB2CEB4();
  v15 = v14;
  v16 = sub_23FB2CEA8();
  v18 = v17;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *v9 = v10;
  v9[1] = v12;
  v9[2] = v13;
  v9[3] = v15;
  v9[4] = v16;
  v9[5] = v18;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v21);
  sub_23FB29654(&qword_256EB3018, (void (*)(uint64_t))type metadata accessor for TranscriptProtoArchiveViewPayload);
  v19 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v9, type metadata accessor for TranscriptProtoArchiveViewPayload);
  return v19;
}

uint64_t sub_23FAEE80C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v1 = sub_23FB2CEFC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (_QWORD *)((char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  v8 = sub_23FB2CEF0();
  v10 = v9;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *v7 = v8;
  v7[1] = v10;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_23FB29654(&qword_256EB3030, (void (*)(uint64_t))type metadata accessor for TranscriptProtoLiveActivityPayload);
  v11 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v7, type metadata accessor for TranscriptProtoLiveActivityPayload);
  return v11;
}

uint64_t sub_23FAEE95C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = sub_23FB2CF2C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoPluginSnippetPayload(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  v8 = sub_23FB2CF08();
  v10 = v9;
  v11 = sub_23FB2CF20();
  v13 = v12;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *v7 = v8;
  v7[1] = v10;
  v7[2] = v11;
  v7[3] = v13;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_23FB29654(&qword_256EB3048, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPluginSnippetPayload);
  v14 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v7, type metadata accessor for TranscriptProtoPluginSnippetPayload);
  return v14;
}

uint64_t sub_23FAEEABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = sub_23FB2EDF8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23FB2CE9C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TranscriptProtoControlPayload(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v22 = v5;
  v12(v8, v0, v5);
  sub_23FB2CE84();
  v13 = sub_23FB2EDE0();
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v15 >> 60 == 15)
  {
    v23 = MEMORY[0x24BDCDDE8];
    sub_23F6916B8(&qword_256EBEF38);
    v16 = sub_23FB2F17C();
    v18 = v17;
    sub_23F77D8D0();
    swift_allocError();
    *v19 = v16;
    v19[1] = v18;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v22);
  }
  else
  {
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *v11 = v13;
    v11[1] = v15;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v22);
    sub_23FB29654(&qword_256EB3060, (void (*)(uint64_t))type metadata accessor for TranscriptProtoControlPayload);
    v2 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v11, type metadata accessor for TranscriptProtoControlPayload);
  }
  return v2;
}

uint64_t sub_23FAEECE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v2 = v0;
  v3 = sub_23FB2CE0C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TranscriptProtoVisualOutput(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  TranscriptProtoVisualOutput.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB2010, (void (*)(uint64_t))type metadata accessor for TranscriptProtoVisualOutput);
    v7 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v9, type metadata accessor for TranscriptProtoVisualOutput);
  }
  return v7;
}

uint64_t sub_23FAEEE18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v1 = sub_23FB2CD88();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (_QWORD *)((char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  v8 = sub_23FB2CD7C();
  v10 = v9;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *v7 = v8;
  v7[1] = v10;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_23FB29654(&qword_256EB2EB8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoLiveActivityOutputPayload);
  v11 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v7, type metadata accessor for TranscriptProtoLiveActivityOutputPayload);
  return v11;
}

uint64_t sub_23FAEEF68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v1 = sub_23FB2CDF4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (_QWORD *)((char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  v8 = sub_23FB2CD7C();
  v10 = v9;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *v7 = v8;
  v7[1] = v10;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_23FB29654(&qword_256EB2ED0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoInAppResponseOutputPayload);
  v11 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v7, type metadata accessor for TranscriptProtoInAppResponseOutputPayload);
  return v11;
}

uint64_t sub_23FAEF0B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = sub_23FB2CDB8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  v8 = sub_23FB2CD94();
  v10 = v9;
  v11 = sub_23FB2CDAC();
  v13 = v12;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *v7 = v8;
  v7[1] = v10;
  v7[2] = v11;
  v7[3] = v13;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_23FB29654(&qword_256EB2F00, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPluginSnippetOutputPayload);
  v14 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v7, type metadata accessor for TranscriptProtoPluginSnippetOutputPayload);
  return v14;
}

uint64_t sub_23FAEF218()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v2 = v0;
  v3 = sub_23FB2CE3C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TranscriptProtoDialogType(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  TranscriptProtoDialogType.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB2F18, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDialogType);
    v7 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v9, type metadata accessor for TranscriptProtoDialogType);
  }
  return v7;
}

uint64_t sub_23FAEF34C(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for TranscriptProtoASTStmt(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (unint64_t *)((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_retain();
  TranscriptProtoASTStmt.init(handwritten:)(a1, v4);
  sub_23FB29654(&qword_256EB2430, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTStmt);
  v5 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v4, type metadata accessor for TranscriptProtoASTStmt);
  return v5;
}

uint64_t sub_23FAEF428()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v1 = type metadata accessor for AST.FlatExpr(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TranscriptProtoASTFlatExpr(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v0, (uint64_t)v3, type metadata accessor for AST.FlatExpr);
  TranscriptProtoASTFlatExpr.init(handwritten:)();
  sub_23FB29654(&qword_256EB3390, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTFlatExpr);
  v7 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v6, type metadata accessor for TranscriptProtoASTFlatExpr);
  return v7;
}

uint64_t sub_23FAEF54C(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD v7[2];

  v2 = type metadata accessor for TranscriptProtoASTExpr(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[1] = a1;
  sub_23F6A3728(a1);
  TranscriptProtoASTExpr.init(handwritten:)();
  sub_23FB29654(&qword_256EB2480, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTExpr);
  v5 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v4, type metadata accessor for TranscriptProtoASTExpr);
  return v5;
}

uint64_t sub_23FAEF62C(char a1, unint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];

  v3 = a1 & 1;
  v4 = sub_23F6916B8(&qword_256EA25A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TranscriptProtoASTUpdateExpr(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v17 - v11;
  v17[1] = a2;
  sub_23F6A3728(a2);
  TranscriptProtoASTExpr.init(handwritten:)();
  v13 = type metadata accessor for TranscriptProtoASTExpr(0);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v6, 0, 1, v13);
  v14 = (uint64_t)&v10[*(int *)(v7 + 20)];
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v14, 1, 1, v13);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *v10 = v3;
  sub_23F710E80((uint64_t)v6, v14, &qword_256EA25A0);
  sub_23F6F594C((uint64_t)v10, (uint64_t)v12, type metadata accessor for TranscriptProtoASTUpdateExpr);
  sub_23FB29654(&qword_256EB2520, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTUpdateExpr);
  v15 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v12, type metadata accessor for TranscriptProtoASTUpdateExpr);
  return v15;
}

uint64_t sub_23FAEF7E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t updated;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v1 = type metadata accessor for AST.Update(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant(0);
  MEMORY[0x24BDAC7A8](updated);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v0, (uint64_t)v3, type metadata accessor for AST.Update);
  TranscriptProtoASTFlatExprUpdateVariant.init(handwritten:)();
  sub_23FB29654(&qword_256EB2278, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant);
  v7 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v6, type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant);
  return v7;
}

uint64_t sub_23FAEF908(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t v8;
  uint64_t v10;

  v4 = type metadata accessor for TranscriptProtoASTPickType(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 & 1;
  if (v7)
    a1 = 1;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_QWORD *)v6 = a1;
  v6[8] = v7;
  sub_23FB29654(&qword_256EB32C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTPickType);
  v8 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v6, type metadata accessor for TranscriptProtoASTPickType);
  return v8;
}

uint64_t sub_23FAEF9F0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v6 = type metadata accessor for TranscriptProtoASTLiteral(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6AFA0C(a1, a2, a3);
  TranscriptProtoASTLiteral.init(handwritten:)();
  sub_23FB29654(&qword_256EB36D8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTLiteral);
  v9 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoASTLiteral);
  return v9;
}

uint64_t sub_23FAEFAEC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v11[4];

  v6 = type metadata accessor for TranscriptProtoASTIfStmt(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[1] = a1;
  v11[2] = a2;
  v11[3] = a3;
  sub_23F6A3728(a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  TranscriptProtoASTIfStmt.init(handwritten:)();
  sub_23FB29654(&qword_256EB3690, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTIfStmt);
  v9 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoASTIfStmt);
  return v9;
}

uint64_t sub_23FAEFBF4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD v13[4];

  v8 = type metadata accessor for TranscriptProtoASTForInStmt(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = a1;
  v13[1] = a2;
  v13[2] = a3;
  v13[3] = a4;
  swift_bridgeObjectRetain();
  sub_23F6A3728(a3);
  swift_bridgeObjectRetain();
  TranscriptProtoASTForInStmt.init(handwritten:)();
  sub_23FB29654(&qword_256EB36A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTForInStmt);
  v11 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v10, type metadata accessor for TranscriptProtoASTForInStmt);
  return v11;
}

uint64_t sub_23FAEFD00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v1 = type metadata accessor for AST.FlatValue(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v0, (uint64_t)v3, type metadata accessor for AST.FlatValue);
  TranscriptProtoASTFlatValue.init(handwritten:)();
  sub_23FB29654(&qword_256EB2210, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTFlatValue);
  v7 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v6, type metadata accessor for TranscriptProtoASTFlatValue);
  return v7;
}

uint64_t sub_23FAEFE24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = v0;
  v3 = type metadata accessor for Action.ParameterValue(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoActionParameterValue(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v2, (uint64_t)v5, type metadata accessor for Action.ParameterValue);
  TranscriptProtoActionParameterValue.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB1CE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionParameterValue);
    v6 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoActionParameterValue);
  }
  return v6;
}

uint64_t sub_23FAEFF50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  v1 = type metadata accessor for TranscriptProtoContextRetrieved(0);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (_QWORD *)((char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v12 - v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  v7 = MEMORY[0x24BEE4AF8];
  *v4 = MEMORY[0x24BEE4AF8];
  v4[1] = v7;
  swift_bridgeObjectRetain();
  sub_23FAD0134();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23F6F8C88((uint64_t)v4, type metadata accessor for TranscriptProtoContextRetrieved);
  }
  else
  {
    *v4 = v8;
    swift_bridgeObjectRetain();
    sub_23FAD0134();
    v10 = v9;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4[1] = v10;
    sub_23F6F594C((uint64_t)v4, (uint64_t)v6, type metadata accessor for TranscriptProtoContextRetrieved);
    sub_23FB29654(&qword_256EB30D8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoContextRetrieved);
    v1 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v6, type metadata accessor for TranscriptProtoContextRetrieved);
  }
  return v1;
}

uint64_t sub_23FAF00F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = v0;
  v3 = type metadata accessor for RetrievedContextStatement(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoRetrievedContextStatement(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v2, (uint64_t)v5, type metadata accessor for RetrievedContextStatement);
  TranscriptProtoRetrievedContextStatement.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB2168, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRetrievedContextStatement);
    v6 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoRetrievedContextStatement);
  }
  return v6;
}

uint64_t sub_23FAF0220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = v0;
  v3 = type metadata accessor for DynamicEnumerationEntityStatement(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v2, (uint64_t)v5, type metadata accessor for DynamicEnumerationEntityStatement);
  TranscriptProtoDynamicEnumerationEntityStatement.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB25E0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement);
    v6 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement);
  }
  return v6;
}

uint64_t sub_23FAF034C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  _OWORD v8[3];
  uint64_t v9;

  v2 = v0;
  v3 = type metadata accessor for TranscriptProtoToolRetrievalResponse(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_OWORD *)(v2 + 16);
  v8[0] = *(_OWORD *)v2;
  v8[1] = v6;
  v8[2] = *(_OWORD *)(v2 + 32);
  v9 = *(_QWORD *)(v2 + 48);
  sub_23FB2951C(v2);
  TranscriptProtoToolRetrievalResponse.init(handwritten:)((uint64_t)v8, (uint64_t)v5);
  if (!v1)
  {
    sub_23FB29654(&qword_256EB3920, (void (*)(uint64_t))type metadata accessor for TranscriptProtoToolRetrievalResponse);
    v3 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v5, type metadata accessor for TranscriptProtoToolRetrievalResponse);
  }
  return v3;
}

uint64_t sub_23FAF0450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = v0;
  v3 = type metadata accessor for ToolParameterValue(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoToolParameterValue(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v2, (uint64_t)v5, type metadata accessor for ToolParameterValue);
  TranscriptProtoToolParameterValue.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB38F0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoToolParameterValue);
    v6 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoToolParameterValue);
  }
  return v6;
}

uint64_t sub_23FAF057C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = v0;
  v3 = type metadata accessor for ExternalAgentTextQuery(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v2, (uint64_t)v5, type metadata accessor for ExternalAgentTextQuery);
  TranscriptProtoExternalAgentTextQuery.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB3B30, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentTextQuery);
    v6 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoExternalAgentTextQuery);
  }
  return v6;
}

uint64_t sub_23FAF06A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = v0;
  v3 = type metadata accessor for ExternalAgentSpeechQuery(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v2, (uint64_t)v5, type metadata accessor for ExternalAgentSpeechQuery);
  TranscriptProtoExternalAgentSpeechQuery.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB3B60, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentSpeechQuery);
    v6 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoExternalAgentSpeechQuery);
  }
  return v6;
}

uint64_t sub_23FAF07D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = v0;
  v3 = type metadata accessor for ExternalAgentOutcome(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v2, (uint64_t)v5, type metadata accessor for ExternalAgentOutcome);
  TranscriptProtoExternalAgentOutcome.init(handwritten:)(v5);
  if (!v1)
  {
    sub_23FB29654(&qword_256EB2980, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentOutcome);
    v6 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoExternalAgentOutcome);
  }
  return v6;
}

uint64_t sub_23FAF0900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;

  v6 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (uint64_t *)((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *v8 = a1;
  v8[1] = a2;
  v8[2] = a3;
  sub_23FB29654(&qword_256EB27E8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  v9 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  return v9;
}

uint64_t sub_23FAF0A00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v1 = sub_23FB2C4B8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23FB2C848();
  v6 = *(_QWORD *)(v5 - 8);
  v24 = v5;
  v25 = v6;
  v7 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TranscriptProtoUndoContext(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v0, v5);
  sub_23FB2C830();
  v13 = sub_23FB2C488();
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v16 = sub_23FB2C818();
  v18 = v17;
  v19 = sub_23FB2C824();
  v21 = v20;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *v12 = v13;
  v12[1] = v15;
  v12[2] = v16;
  v12[3] = v18;
  v12[4] = v19;
  v12[5] = v21;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v24);
  sub_23FB29654(&qword_256EB2C38, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUndoContext);
  v22 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v12, type metadata accessor for TranscriptProtoUndoContext);
  return v22;
}

uint64_t sub_23FAF0BD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = v0;
  v3 = type metadata accessor for ClientAction.ShimParameterResolution(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoShimParameterResolution(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v2, (uint64_t)v5, type metadata accessor for ClientAction.ShimParameterResolution);
  TranscriptProtoShimParameterResolution.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB1DB0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoShimParameterResolution);
    v6 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoShimParameterResolution);
  }
  return v6;
}

uint64_t sub_23FAF0D04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = v0;
  v3 = type metadata accessor for ClientAction.UnresolvedParameterValue(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v2, (uint64_t)v5, type metadata accessor for ClientAction.UnresolvedParameterValue);
  TranscriptProtoUnresolvedParameterValue.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB2A40, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUnresolvedParameterValue);
    v6 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoUnresolvedParameterValue);
  }
  return v6;
}

char *sub_23FAF0E30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  v2 = v0;
  v3 = sub_23FB2D3AC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (_QWORD *)((char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  v11 = MEMORY[0x242672024](v10);
  v12 = sub_23FAF1BE8(v11);
  if (v1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    v13 = v12;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *v9 = v13;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_23FB29654(&qword_256EB2C80, (void (*)(uint64_t))type metadata accessor for TranscriptProtoValueDisambiguation);
    v6 = (char *)sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v9, type metadata accessor for TranscriptProtoValueDisambiguation);
  }
  return v6;
}

uint64_t sub_23FAF0F9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v2 = v0;
  v3 = sub_23FB2C7E8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TranscriptProtoActionFailure(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  TranscriptProtoActionFailure.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB2BD8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionFailure);
    v7 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v9, type metadata accessor for TranscriptProtoActionFailure);
  }
  return v7;
}

uint64_t sub_23FAF10D0(char a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *v4 = a1;
  sub_23FB29654(&qword_256EB31C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution);
  v5 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v4, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution);
  return v5;
}

uint64_t sub_23FAF11A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = v0;
  v3 = type metadata accessor for TypeConversionRequest(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoTypeConversionRequest(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v2, (uint64_t)v5, type metadata accessor for TypeConversionRequest);
  TranscriptProtoTypeConversionRequest.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB3A10, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTypeConversionRequest);
    v6 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoTypeConversionRequest);
  }
  return v6;
}

uint64_t sub_23FAF12D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17[2];

  v2 = v0;
  v3 = type metadata accessor for TypeConversionResult(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoTypeConversionResult(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v2, (uint64_t)v5, type metadata accessor for TypeConversionResult);
  TranscriptProtoTypeConversionResult.init(handwritten:)((uint64_t)v5, v9, v10, v11, v12, v13, v14, v15, v17[0], v17[1]);
  if (!v1)
  {
    sub_23FB29654(&qword_256EB3A28, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTypeConversionResult);
    v6 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoTypeConversionResult);
  }
  return v6;
}

uint64_t sub_23FAF1400()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t DecorationResult;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = v0;
  DecorationResult = type metadata accessor for QueryDecorationResult(0);
  MEMORY[0x24BDAC7A8](DecorationResult);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoQueryDecorationResult(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v2, (uint64_t)v5, type metadata accessor for QueryDecorationResult);
  TranscriptProtoQueryDecorationResult.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB3A40, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryDecorationResult);
    v6 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoQueryDecorationResult);
  }
  return v6;
}

uint64_t sub_23FAF152C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t DecorationPrePlannerResult;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = v0;
  DecorationPrePlannerResult = type metadata accessor for QueryDecorationPrePlannerResult(0);
  MEMORY[0x24BDAC7A8](DecorationPrePlannerResult);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6F5920(v2, (uint64_t)v5, type metadata accessor for QueryDecorationPrePlannerResult);
  TranscriptProtoQueryDecorationPrePlannerResult.init(handwritten:)();
  if (!v1)
  {
    sub_23FB29654(&qword_256EB3A58, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult);
    v6 = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult);
  }
  return v6;
}

uint64_t sub_23FAF1658(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t DecorationPrePlannerResultPayload;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;

  DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
  MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayload);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1;
  v10 = a2;
  swift_bridgeObjectRetain();
  TranscriptProtoQueryDecorationPrePlannerResultPayload.init(handwritten:)();
  if (!v2)
  {
    sub_23FB29654(&qword_256EB3B00, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
    DecorationPrePlannerResultPayload = sub_23FB2D8EC();
    sub_23F6F8C88((uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
  }
  return DecorationPrePlannerResultPayload;
}

uint64_t sub_23FAF1750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = v0;
  v2 = sub_23FB2C7C4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (uint64_t *)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *v8 = sub_23FB2C7A0();
  v8[1] = v9;
  v8[2] = sub_23FB2C7B8();
  v8[3] = v10;
  v11 = sub_23FB2C7AC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v8[4] = v11;
  sub_23FB29654(&qword_256EB2C08, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
  v12 = sub_23FB2D8EC();
  sub_23F6F8C88((uint64_t)v8, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
  return v12;
}

void TranscriptHandwrittenBidirectionalConvertibleProtocol.protoBytes()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t AssociatedTypeWitness;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t AssociatedConformanceWitness;

  sub_23F6B5220();
  a19 = v24;
  a20 = v25;
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F6B5268();
  a10 = *(_QWORD *)(v27 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v31 = (char *)&a9 - v30;
  sub_23F75E710(v22, v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 16));
  sub_23F6B6F88();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(v22, AssociatedTypeWitness, AssociatedConformanceWitness);
  if (!v21)
  {
    swift_getAssociatedConformanceWitness();
    sub_23F6B5994();
    _s16IntelligenceFlow3ASTO0aB14PlannerSupportE7BuiltinO6SearchV5query24isLowConfidenceKnowledge7pickOneAHSS_S2btcfcfA0__0();
    sub_23FB2A5B0();
    sub_23FB2D8EC();
    sub_23F6B56E0((uint64_t)v31, *(uint64_t (**)(uint64_t, uint64_t))(v29 + 8));
  }
  sub_23F6B689C();
  sub_23F877A30();
  sub_23F6B5100();
}

uint64_t sub_23FAF19F8()
{
  return sub_23FAE66F8();
}

uint64_t sub_23FAF1A0C()
{
  return sub_23FAE682C();
}

void Array<A>.init<A>(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;

  sub_23F6916B8(&qword_256EA2828);
  sub_23F772110();
  if (!v3)
  {
    v6 = sub_23FAD74F4();
    MEMORY[0x242674E5C](MEMORY[0x24BEE12C8], v6);
    sub_23FB2F494();
  }
  sub_23F6B56E0(a1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8));
  sub_23FAD6E8C();
}

uint64_t sub_23FAF1B08()
{
  return sub_23FAE6958();
}

uint64_t sub_23FAF1B1C()
{
  return sub_23FAE6A8C();
}

uint64_t sub_23FAF1B30()
{
  return sub_23FAE6BC0();
}

uint64_t sub_23FAF1B44()
{
  return sub_23FAE6CF4();
}

uint64_t sub_23FAF1B58()
{
  return sub_23FAE6E58();
}

uint64_t sub_23FAF1B6C()
{
  return sub_23FAE6F8C();
}

uint64_t sub_23FAF1B80()
{
  return sub_23FAE70C0();
}

uint64_t sub_23FAF1B94()
{
  return sub_23FAE733C();
}

#error "23FAF1BD8: call analysis failed (funcsize=12)"

uint64_t sub_23FAF1BE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  void (*v29)(char *, uint64_t);
  char *v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  void (*v37)(char *, unint64_t, uint64_t);
  char *v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  void (*v41)(char *, char *, uint64_t);
  unint64_t v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v2 = v1;
  v4 = sub_23FB2EB1C();
  v56 = *(_QWORD *)(v4 - 8);
  v57 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v55 = (char *)&v44 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v44 = (char *)&v44 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v52 = (char *)&v44 - v12;
  v13 = sub_23FB2ED38();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v44 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v47 = (char *)&v44 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v46 = (char *)&v44 - v23;
  v24 = *(_QWORD *)(a1 + 16);
  v58 = MEMORY[0x24BEE4AF8];
  sub_23F711334();
  v53 = v14;
  v45 = a1;
  if (v24)
  {
    v25 = *(_QWORD *)(a1 + 16);
    v50 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v51 = v25;
    result = swift_bridgeObjectRetain();
    v27 = 0;
    v48 = v17;
    v49 = v7;
    while (v51 != v27)
    {
      v28 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
      v28(v20, v50 + *(_QWORD *)(v14 + 72) * v27, v13);
      v28(v17, (uint64_t)v20, v13);
      sub_23FB2ED20();
      if (v2)
      {
        v32 = *(_QWORD *)(v14 + 8);
        ((void (*)(char *, uint64_t))v32)(v17, v13);
        swift_bridgeObjectRelease();
        swift_release();
        ((void (*)(char *, uint64_t))v32)(v20, v13);
        swift_bridgeObjectRelease();
        return v32;
      }
      v54 = 0;
      v29 = *(void (**)(char *, uint64_t))(v14 + 8);
      v29(v17, v13);
      v30 = v20;
      v31 = *(void (**)(char *, char *, uint64_t))(v56 + 32);
      v31(v55, v7, v57);
      v29(v30, v13);
      v32 = v58;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F711334();
        v32 = v58;
      }
      v33 = *(_QWORD *)(v32 + 16);
      if (v33 >= *(_QWORD *)(v32 + 24) >> 1)
      {
        sub_23F711334();
        v32 = v58;
      }
      ++v27;
      *(_QWORD *)(v32 + 16) = v33 + 1;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v31)(v32+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(_QWORD *)(v56 + 72) * v33, v55, v57);
      v58 = v32;
      v20 = v30;
      v17 = v48;
      v7 = v49;
      v14 = v53;
      v2 = v54;
      if (v24 == v27)
        goto LABEL_12;
    }
    __break(1u);
    goto LABEL_27;
  }
  v32 = v58;
  result = swift_bridgeObjectRetain();
LABEL_12:
  v34 = v45;
  v35 = *(_QWORD *)(v45 + 16);
  if (v24 != v35)
  {
    v36 = v44;
    while (v24 < v35)
    {
      v37 = *(void (**)(char *, unint64_t, uint64_t))(v14 + 16);
      v38 = v46;
      v37(v46, v34+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v24, v13);
      v39 = v47;
      v37(v47, (unint64_t)v38, v13);
      sub_23FB2ED20();
      if (v2)
      {
        v43 = *(void (**)(char *, uint64_t))(v14 + 8);
        v43(v39, v13);
        v43(v38, v13);
        swift_bridgeObjectRelease();
        v32 = v58;
        swift_bridgeObjectRelease();
        swift_release();
        return v32;
      }
      v40 = *(void (**)(char *, uint64_t))(v14 + 8);
      v40(v39, v13);
      v41 = *(void (**)(char *, char *, uint64_t))(v56 + 32);
      v41(v52, v36, v57);
      v40(v38, v13);
      v32 = v58;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F711334();
        v32 = v58;
      }
      v42 = *(_QWORD *)(v32 + 16);
      if (v42 >= *(_QWORD *)(v32 + 24) >> 1)
      {
        sub_23F711334();
        v32 = v58;
      }
      ++v24;
      *(_QWORD *)(v32 + 16) = v42 + 1;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v41)(v32+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(_QWORD *)(v56 + 72) * v42, v52, v57);
      v58 = v32;
      v35 = *(_QWORD *)(v34 + 16);
      v14 = v53;
      if (v24 == v35)
        goto LABEL_13;
    }
LABEL_27:
    __break(1u);
    return result;
  }
LABEL_13:
  swift_bridgeObjectRelease_n();
  return v32;
}

#error "23FAF2100: call analysis failed (funcsize=12)"

uint64_t sub_23FAF2110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v14 = (char *)&v17 - v13;
  (*(void (**)(char *, uint64_t))(v15 + 16))((char *)&v17 - v13, a1);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a5 + 16))(v14, a3, a5);
  if (v7)
    *a7 = v7;
  return result;
}

uint64_t Set<>.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  swift_getAssociatedTypeWitness();
  v1 = sub_23FB2F488();
  sub_23F6916B8(&qword_256EA2828);
  MEMORY[0x242674E5C](MEMORY[0x24BEE12E0], v1);
  sub_23F7E79D0();
  result = sub_23F6B644C();
  if (!v0)
  {
    v3 = sub_23FAD74F4();
    MEMORY[0x242674E5C](MEMORY[0x24BEE12C8], v3);
    sub_23FB29EEC();
    return sub_23FB2F530();
  }
  return result;
}

uint64_t sub_23FAF2300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v13 = (char *)&v16 - v12;
  (*(void (**)(char *, uint64_t))(v14 + 16))((char *)&v16 - v12, a1);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a4 + 16))(v13, a3, a4);
  if (v6)
    *a6 = v6;
  return result;
}

void Dictionary<>.init(handwritten:)()
{
  swift_getAssociatedTypeWitness();
  sub_23FB2F05C();
  sub_23F6B644C();
  sub_23FAD6E8C();
}

uint64_t sub_23FAF2468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v11 = (char *)v14 - v10;
  (*(void (**)(char *, uint64_t))(v12 + 16))((char *)v14 - v10, a1);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(a6 + 16))(v11, a4, a6);
}

BOOL static HandwrittenConversion.Error.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void HandwrittenConversion.Error.hash(into:)()
{
  sub_23FB2FC68();
  sub_23F694CC8();
}

uint64_t HandwrittenConversion.Error.hashValue.getter()
{
  sub_23FB2FC5C();
  sub_23FB2FC68();
  return sub_23FB2FC8C();
}

void SpeechRequestCandidate.init(transcript:)()
{
  sub_23FB01D18();
}

void StatementID.init(transcript:)()
{
  uint64_t v0;

  sub_23FAD7414();
  sub_23F6B6548();
  sub_23FB29EEC();
  v0 = sub_23FB2C74C();
  sub_23FB297B8(v0, type metadata accessor for TranscriptProtoStatementID);
  sub_23F6B5F7C();
}

void sub_23FAF2620()
{
  SpeechRequestCandidate.init(transcript:)();
}

void sub_23FAF2634()
{
  sub_23FAE8860();
}

void TranscriptProtoSpeechRequestCandidate.init(handwritten:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_23F6B50E8();
  v4 = v3;
  v6 = sub_23FB29ABC(v5);
  v23 = type metadata accessor for TranscriptProtoSpeechRequestCandidate(v6);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23FB29900();
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B5268();
  v10 = v4[1];
  v21 = *v4;
  v22 = (uint64_t)v4;
  v11 = type metadata accessor for SpeechRequestCandidate(0);
  sub_23FB2A2CC(v11);
  sub_23F6B5F1C();
  v12 = sub_23FB2C758();
  v13 = sub_23FB2C740();
  v15 = v14;
  v16 = sub_23FAD69A0();
  sub_23FB29DBC();
  *(_DWORD *)v2 = v12;
  *(_QWORD *)(v2 + 8) = v13;
  *(_QWORD *)(v2 + 16) = v15;
  sub_23FB2A08C(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23F7D2ED8(v2, 0);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v1 + *(int *)(v23 + 20), 1, 1, v16);
  sub_23FAC3044();
  *v1 = v21;
  v1[1] = v10;
  v17 = sub_23FB29D10();
  sub_23F710E80(v17, v18, &qword_256EA25E0);
  v19 = sub_23FB2A350();
  sub_23F6F594C(v19, v20, type metadata accessor for TranscriptProtoSpeechRequestCandidate);
  sub_23F6F8C88(v22, type metadata accessor for SpeechRequestCandidate);
  sub_23F693DDC();
}

uint64_t TranscriptProtoStatementID.init(handwritten:)()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  sub_23FB2A57C();
  sub_23FB2C758();
  v2 = sub_23FB2AAD4();
  v4 = v3;
  sub_23FAD69A0();
  sub_23F6F0878();
  *(_DWORD *)v0 = v1;
  *(_QWORD *)(v0 + 8) = v2;
  *(_QWORD *)(v0 + 16) = v4;
  sub_23F6B58C8();
  v5 = sub_23FB29A14();
  return sub_23F877AEC(v5, v6, v7);
}

void sub_23FAF27E8()
{
  TranscriptProtoSpeechRequestCandidate.init(handwritten:)();
  sub_23F878AAC();
}

void Session.Event.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  sub_23F6B5220();
  v6 = v5;
  v65 = v7;
  sub_23F6916B8(&qword_256EA86F8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B57BC(v9, v53);
  sub_23F6916B8(&qword_256EA8700);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  v12 = sub_23FB29854(v11, v53);
  type metadata accessor for TranscriptProtoTimepoint(v12);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23FB2991C(v14, v53);
  type metadata accessor for Timepoint();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  v66 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoPayload(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  v68 = (uint64_t)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FB297D0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F72E034();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v23);
  v69 = (uint64_t)&v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F7F6400();
  sub_23F6916B8(&qword_256EA2798);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F6B5CD4();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F72E168();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F923EC8();
  sub_23FB29F48();
  sub_23F77B568();
  sub_23F6B4F84(v1, &qword_256EA2798);
  v70 = v2;
  if (v2)
    goto LABEL_8;
  v60 = v4;
  v61 = v3;
  v62 = v0;
  sub_23FB2C47C();
  v30 = v70;
  sub_23F77B568();
  v32 = v6;
  if (v30)
  {
    v70 = v30;
    sub_23F6D378C(v31, &qword_256EA2798);
    v29 = sub_23F9243AC(v62);
LABEL_8:
    sub_23FB298E4(v29, type metadata accessor for TranscriptProtoEvent);
    goto LABEL_9;
  }
  sub_23F6D378C(v31, &qword_256EA2798);
  if (v6[12])
    sub_23FB2C47C();
  else
    sub_23F77DD78(v60, 1);
  v33 = (int *)type metadata accessor for TranscriptProtoEvent(0);
  sub_23F77BEC0();
  Session.Event.Payload.init(transcript:)();
  v34 = v6[5];
  v70 = v32[4];
  v35 = v32[6];
  v36 = v32[7];
  v37 = v32[9];
  v58 = v32[8];
  v59 = v35;
  v38 = (_QWORD *)((char *)v32 + v33[12]);
  v39 = v38[1];
  v57 = *v38;
  sub_23F77DCD4();
  sub_23F6B90D8();
  sub_23F77E600();
  v68 = v37;
  sub_23F6B6548();
  sub_23F77BEEC();
  v54 = v39;
  v55 = v34;
  v56 = v36;
  v40 = v66;
  sub_23FB2AA84();
  Timepoint.init(transcript:)();
  v41 = v64;
  sub_23FB2A934((uint64_t)v32 + v33[15], v42, &qword_256EA8700);
  sub_23F77A360(v41);
  sub_23FB2A124();
  v43 = v63;
  sub_23FB2A934((uint64_t)v32 + v33[16], v44, &qword_256EA86F8);
  sub_23F77A488(v43);
  v67 = v45;
  LOBYTE(v37) = v46 & 1;
  v47 = sub_23F77E584();
  sub_23FAE34BC(v47);
  v48 = (uint64_t)v40;
  v50 = v49;
  sub_23F756640();
  v51 = sub_23FAE37A8(v50, &qword_256EC3628, (void (*)(uint64_t, uint64_t, uint64_t *))sub_23FB244EC);
  v52 = Session.Event.init(id:sessionId:queryEventId:payload:clientRequestId:clientSessionId:clientApplicationId:clientGroupId:timepoint:sender:postingSpan:initiatedSpans:)(v69, v60, (uint64_t)v22, v70, v55, v59, v56, v65, v58, v68, v57, v54, v48, v39, v34, v67, v37, v51);
  sub_23FB297B8(v52, type metadata accessor for TranscriptProtoEvent);
LABEL_9:
  sub_23F6B6CA0();
  sub_23F6B5100();
}

void Session.Event.Payload.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char v178;
  _QWORD *v179;
  char *v180;
  _QWORD v181[81];
  uint64_t v182;
  uint64_t v183;
  char *v184;
  char *v185;
  char *v186;
  char *v187;
  char *v188;
  char *v189;
  uint64_t v190;

  sub_23F6B5220();
  v181[80] = v6;
  v182 = v2;
  v8 = v7;
  type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  v189 = (char *)v181 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v11);
  v181[77] = (char *)v181 - v12;
  v13 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoQueryDecorationResult(v13);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  v188 = (char *)v181 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v16);
  v181[76] = (char *)v181 - v17;
  v18 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoTypeConversionResult(v18);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v20);
  v181[75] = (char *)v181 - v21;
  v22 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoTypeConversionRequest(v22);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v23);
  v186 = (char *)v181 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v25);
  v181[73] = (char *)v181 - v26;
  v27 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoClientUndoRedoRequest(v27);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F693E0C();
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v29);
  v181[72] = (char *)v181 - v30;
  v31 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoUndoRedoRequest(v31);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v33);
  v181[71] = (char *)v181 - v34;
  v35 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoToolResolution(v35);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v37);
  v39 = sub_23F70D434((uint64_t)v181 - v38);
  type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(v39);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v41);
  v187 = (char *)v181 - v42;
  v43 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoExternalAgentOutcome(v43);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v44);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v45);
  v181[66] = (char *)v181 - v46;
  v47 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoExternalAgentRequest(v47);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v48);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v49);
  v181[64] = (char *)v181 - v50;
  v51 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(v51);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v52);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v53);
  v181[62] = (char *)v181 - v54;
  v55 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoExternalAgentTextQuery(v55);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v56);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v57);
  v181[60] = (char *)v181 - v58;
  v59 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoStatementResult(v59);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v60);
  sub_23F693E0C();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v61);
  v181[58] = (char *)v181 - v62;
  v63 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoSystemResponse(v63);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v64);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v65);
  sub_23F6B6580();
  v181[56] = v66;
  v67 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoActionCancellation(v67);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v68);
  sub_23F693E0C();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v69);
  v181[54] = (char *)v181 - v70;
  v71 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoEntitySpanMatchResult(v71);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v72);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v73);
  v181[53] = (char *)v181 - v74;
  v75 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoToolRetrievalResponse(v75);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v76);
  sub_23F693E0C();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v77);
  sub_23FB2AA2C((uint64_t)v181 - v78);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v79);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v80);
  sub_23F6B6580();
  v181[52] = v81;
  v82 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoSafetyModeException(v82);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v83);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v84);
  v185 = (char *)v181 - v85;
  v86 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoClientInitiatedClientAction(v86);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v87);
  sub_23F693E0C();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v88);
  sub_23F6B6580();
  v181[46] = v89;
  v90 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoResponseGenerationRequest(v90);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v91);
  sub_23F693E0C();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v92);
  v181[43] = (char *)v181 - v93;
  v94 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoActionResolverRequest(v94);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v95);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v96);
  sub_23F6B6580();
  v181[41] = v97;
  v98 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoActionResponse(v98);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v99);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v100);
  sub_23F6B6580();
  v181[39] = v101;
  v102 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoQueryStepResults(v102);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v103);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v104);
  v181[37] = (char *)v181 - v105;
  v106 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoActionStepResult(v106);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v107);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v108);
  v181[35] = (char *)v181 - v109;
  v110 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoSystemPromptResolution(v110);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v111);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v112);
  sub_23F6B6580();
  v181[32] = v113;
  v114 = sub_23F6D398C();
  v181[30] = type metadata accessor for TranscriptProtoClientCustom(v114);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v115);
  v184 = (char *)v181 - ((v116 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoSessionError(v117);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v118);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v119);
  sub_23F6B6580();
  v181[24] = sub_23FB2AA1C(v120);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v121);
  sub_23F693E0C();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v122);
  v181[34] = (char *)v181 - v123;
  v124 = sub_23F6D398C();
  v181[23] = type metadata accessor for TranscriptProtoQueryStep(v124);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v125);
  sub_23F693E0C();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v126);
  v181[31] = (char *)v181 - v127;
  v128 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoClientAction(v128);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v129);
  sub_23F693E0C();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v130);
  sub_23F6B6580();
  v181[22] = v131;
  v132 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoAction(v132);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v133);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v134);
  v181[19] = (char *)v181 - v135;
  v136 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoRecoverableError(v136);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v137);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v138);
  sub_23F6B6580();
  v181[11] = v139;
  v140 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoPlan(v140);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v141);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v142);
  sub_23F6B6580();
  v181[12] = v143;
  v144 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoRequest(v144);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v145);
  sub_23F693E0C();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v146);
  v181[16] = (char *)v181 - v147;
  v148 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoSpeechQuery(v148);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v149);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v150);
  sub_23F6B6580();
  v181[13] = v151;
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v152);
  sub_23F693E0C();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v153);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v154);
  sub_23F6B6580();
  v181[8] = v155;
  v156 = sub_23F6B58C8();
  v181[78] = *(_QWORD *)(v156 - 8);
  v181[79] = v156;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v157);
  sub_23F693E0C();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v158);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v159);
  sub_23F6B6580();
  v181[5] = v160;
  v161 = sub_23F6D398C();
  v183 = type metadata accessor for TranscriptProtoTextQuery(v161);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v162);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v163);
  v165 = (char *)v181 - v164;
  v166 = sub_23FB299D0();
  type metadata accessor for TranscriptProtoSessionStart(v166);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v167);
  sub_23F6B65E0();
  MEMORY[0x24BDAC7A8](v168);
  sub_23F77E490();
  sub_23F6916B8(&qword_256EAB758);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v169);
  v170 = sub_23F6B5C2C();
  v171 = type metadata accessor for TranscriptProtoPayloadEnum(v170);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v172);
  v173 = sub_23FB2A76C();
  sub_23F6B4F58(v173, v3, &qword_256EAB758);
  v174 = sub_23FB2A344();
  v176 = sub_23F6B5164(v174, v175, v171);
  if (!v178)
  {
    v181[0] = v5;
    v181[1] = v4;
    v181[2] = v0;
    v181[3] = v165;
    v181[4] = v8;
    sub_23FB29F30(v3, v177, type metadata accessor for TranscriptProtoPayloadEnum);
    v180 = (char *)&loc_23FAF38E8 + 4 * word_23FB929F6[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_23F77DD24(v176, &qword_256EAB758);
  v190 = v171;
  sub_23F6916B8(&qword_256EBEEC8);
  sub_23FB2F17C();
  sub_23F77DA84();
  sub_23F6B5AD4();
  *v179 = v0;
  v179[1] = v1;
  sub_23F77D9E4();
  sub_23F6F8C88(v8, type metadata accessor for TranscriptProtoPayload);
  sub_23F8777E8();
  sub_23F6B5100();
}

void sub_23FAF46FC()
{
  uint64_t v0;

  sub_23FB29780(type metadata accessor for TranscriptProtoPayload, v0 - 576);
  sub_23FB297D0();
  sub_23FB2AB30();
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x23FAF46F0);
}

void sub_23FAF471C()
{
  uint64_t v0;

  sub_23FB29780(type metadata accessor for TranscriptProtoPayload, v0 - 576);
  sub_23FB297D0();
  sub_23FB2AB30();
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x23FAF46F0);
}

void sub_23FAF473C()
{
  uint64_t v0;

  sub_23FB29780(type metadata accessor for TranscriptProtoPayload, v0 - 576);
  sub_23FB297D0();
  sub_23FB2AB30();
  JUMPOUT(0x23FAF4758);
}

void Timepoint.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;

  sub_23F6B5220();
  v6 = v5;
  v26 = v7;
  v8 = sub_23F72E034();
  v27 = *(_QWORD *)(v8 - 8);
  v28 = v8;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23FB298C8(v10, v24);
  sub_23F6916B8(&qword_256EA2798);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F7A00C8();
  v12 = sub_23FB2C470();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v13);
  v30 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6D398C();
  sub_23FB2D6D0();
  sub_23F70D9A8();
  MEMORY[0x24BDAC7A8](v15);
  v16 = sub_23F6B5C2C();
  type metadata accessor for TranscriptProtoTimepoint(v16);
  sub_23F77BE68();
  if (!v1)
  {
    v24 = v4;
    v25 = v12;
    v18 = v27;
    sub_23FB2D6B8();
    sub_23F6B530C(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    v20 = *v6;
    v19 = v6[1];
    sub_23FB2C47C();
    v21 = v29;
    sub_23FB2ACD4();
    sub_23F6B4F84(v0, &qword_256EA2798);
    v22 = v26;
    (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v26, v30, v25);
    v23 = (int *)type metadata accessor for Timepoint();
    *(_QWORD *)(v22 + v23[5]) = v20;
    *(_QWORD *)(v22 + v23[6]) = v19;
    v17 = sub_23F77DD54(v22 + v23[7], v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32));
  }
  sub_23FB297D8(v17, type metadata accessor for TranscriptProtoTimepoint);
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23FAF5078()
{
  Session.Event.init(transcript:)();
}

uint64_t sub_23FAF508C()
{
  return sub_23FAE7524();
}

void Session.Transcript.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD v35[2];
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_23F6B5220();
  v7 = v6;
  v9 = sub_23FB29ED4(v8);
  v43 = *(_QWORD *)(type metadata accessor for TranscriptProtoEvent(v9) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v45 = (uint64_t)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23FB29944();
  type metadata accessor for Session.Event(v13);
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23F72E034();
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B5298();
  sub_23F6916B8(&qword_256EA2798);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F6B59F8();
  sub_23FB29F48();
  sub_23F77B568();
  sub_23F6B4F84(v1, &qword_256EA2798);
  if (!v2)
  {
    v44 = v3;
    v39 = v0;
    v40 = v4;
    v41 = v17;
    v21 = v7[1];
    v22 = v7[2];
    v23 = *(_QWORD *)(v22 + 16);
    v38 = *v7;
    if (v23)
    {
      v37 = v7;
      v46 = MEMORY[0x24BEE4AF8];
      v36 = v21;
      sub_23F6B90D8();
      sub_23F6B5508();
      sub_23FB29B68();
      sub_23F711A00();
      sub_23F78F3B0();
      v35[1] = v22;
      v25 = v22 + v24;
      v43 = *(_QWORD *)(v26 + 72);
      do
      {
        v27 = sub_23F878A5C();
        sub_23F77E534(v27, v28);
        sub_23F77E534(v5, v45);
        sub_23FB2AE70();
        Session.Event.init(transcript:)();
        sub_23FB29DEC(v5);
        if ((sub_23F77D93C() & 1) == 0)
        {
          sub_23F7D2A58();
          sub_23F711A00();
          v1 = v46;
        }
        v29 = *(_QWORD *)(v1 + 16);
        if (v29 >= *(_QWORD *)(v1 + 24) >> 1)
        {
          sub_23F711A00();
          v1 = v46;
        }
        *(_QWORD *)(v1 + 16) = v29 + 1;
        sub_23FB2A490();
        sub_23F6F594C((uint64_t)v16, v30, type metadata accessor for Session.Event);
        v25 += v43;
        --v23;
      }
      while (v23);
      sub_23FAD7358();
      v21 = v36;
    }
    else
    {
      sub_23F6B90D8();
      v1 = MEMORY[0x24BEE4AF8];
    }
    v31 = v42;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v42, v39, v41);
    v20 = (int *)type metadata accessor for Session.Transcript(0);
    v32 = (_QWORD *)(v31 + v20[5]);
    *v32 = v38;
    v32[1] = v21;
    v33 = (_QWORD *)(v31 + v20[6]);
    *v33 = 0;
    v33[1] = 0xE000000000000000;
    v34 = (_QWORD *)(v31 + v20[7]);
    *v34 = 0;
    v34[1] = 0;
    *(_QWORD *)(v31 + v20[8]) = v1;
  }
  sub_23FB297C0((uint64_t)v20, type metadata accessor for TranscriptProtoTranscript);
  sub_23F876B60();
  sub_23F6B5100();
}

void sub_23FAF5360()
{
  Session.Transcript.init(handwritten:)();
}

void TranscriptProtoTranscript.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F6B5220();
  sub_23FB2A3F8();
  v35 = v4;
  type metadata accessor for Session.Event(0);
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v5);
  v40 = (uint64_t)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_23FB2997C();
  v39 = *(_QWORD *)(type metadata accessor for TranscriptProtoEvent(v8) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B5208();
  v34 = sub_23FB2AFB0();
  v11 = v10;
  v12 = type metadata accessor for Session.Transcript(0);
  v13 = (uint64_t *)(v0 + *(int *)(v12 + 20));
  v14 = v13[1];
  v15 = *(_QWORD *)(v0 + *(int *)(v12 + 32));
  v16 = *(_QWORD *)(v15 + 16);
  v36 = *v13;
  v37 = v11;
  if (v16)
  {
    v33 = v0;
    v41 = MEMORY[0x24BEE4AF8];
    v32 = v14;
    swift_bridgeObjectRetain();
    sub_23F6B6254();
    sub_23FB2A20C();
    sub_23F7112F8();
    sub_23F78F3B0();
    v31 = v15;
    v18 = v15 + v17;
    v38 = *(_QWORD *)(v1 + 72);
    while (1)
    {
      sub_23F77DA34(v18, v3);
      v19 = v40;
      sub_23F77DA34(v3, v40);
      sub_23FB2ABC8();
      TranscriptProtoEvent.init(handwritten:)();
      if (v15)
        break;
      sub_23FB29A4C(v3);
      if ((sub_23F77D93C() & 1) == 0)
      {
        sub_23F7D2A58();
        sub_23F7112F8();
        v19 = v41;
      }
      v22 = *(_QWORD *)(v19 + 16);
      v21 = *(_QWORD *)(v19 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_23F77DCA0(v21);
        sub_23F7112F8();
        v19 = v41;
      }
      *(_QWORD *)(v19 + 16) = v22 + 1;
      sub_23F77DAB8();
      sub_23F6F594C(v2, v23 + v24 * v22, type metadata accessor for TranscriptProtoEvent);
      v18 += v38;
      if (!--v16)
      {
        sub_23FAD708C();
        v26 = v32;
        goto LABEL_12;
      }
    }
    sub_23FB297D8(v20, type metadata accessor for Session.Event);
    sub_23FAD7318();
    swift_bridgeObjectRelease();
    v25 = sub_23F77DA7C();
    sub_23FB29FEC(v25, type metadata accessor for Session.Transcript);
    sub_23FAD708C();
  }
  else
  {
    v26 = v14;
    swift_bridgeObjectRetain();
    v19 = MEMORY[0x24BEE4AF8];
LABEL_12:
    v27 = v35;
    v28 = v34;
    type metadata accessor for TranscriptProtoTranscript(0);
    v29 = sub_23FAC3044();
    v30 = v37;
    *v27 = v28;
    v27[1] = v30;
    v27[3] = v36;
    v27[4] = v26;
    v27[2] = v19;
    sub_23FB297A8(v29, type metadata accessor for Session.Transcript);
  }
  sub_23F77DB18();
  sub_23F6B5100();
}

void sub_23FAF55B0()
{
  TranscriptProtoTranscript.init(handwritten:)();
}

void TranscriptProtoPayload.init(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  _QWORD v172[54];
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  char *v179;
  char *v180;
  char *v181;
  uint64_t v182;
  char *v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;

  sub_23F6B5220();
  a19 = v21;
  a20 = v22;
  v198 = v23;
  v195 = v24;
  v193 = type metadata accessor for TranscriptProtoPayload(0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v25);
  v194 = (char *)v172 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_23F6D398C();
  type metadata accessor for QueryDecorationPrePlannerResult(v27);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v29);
  v185 = (char *)v172 - v30;
  v31 = sub_23F6D398C();
  type metadata accessor for QueryDecorationResult(v31);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v33);
  v184 = (char *)v172 - v34;
  v35 = sub_23F6D398C();
  type metadata accessor for TypeConversionResult(v35);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F693E0C();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v37);
  v183 = (char *)v172 - v38;
  v39 = sub_23F6D398C();
  type metadata accessor for TypeConversionRequest(v39);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F6B6580();
  v182 = v42;
  v43 = sub_23F6D398C();
  type metadata accessor for ClientUndoRedoRequest(v43);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v44);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v45);
  v181 = (char *)v172 - v46;
  v47 = sub_23F6D398C();
  type metadata accessor for UndoRedoRequest(v47);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v48);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v49);
  v180 = (char *)v172 - v50;
  v51 = sub_23F6D398C();
  type metadata accessor for ToolResolution(v51);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v52);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v53);
  v179 = (char *)v172 - v54;
  v55 = sub_23F6D398C();
  type metadata accessor for ExternalAgentOutcome(v55);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v56);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v57);
  sub_23F6B6580();
  v178 = v58;
  v59 = sub_23F6D398C();
  type metadata accessor for ExternalAgentRequest(v59);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v60);
  sub_23F693E0C();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v61);
  v177 = (char *)v172 - v62;
  v63 = sub_23F6D398C();
  type metadata accessor for ExternalAgentSpeechQuery(v63);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v64);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v65);
  sub_23F6B6580();
  v176 = v66;
  v67 = sub_23F6D398C();
  type metadata accessor for ExternalAgentTextQuery(v67);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v68);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v69);
  v175 = (char *)v172 - v70;
  v71 = sub_23F6D398C();
  type metadata accessor for StatementResult(v71);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v72);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v73);
  sub_23F6B6580();
  v174 = v74;
  sub_23F6D398C();
  v173 = sub_23FB2D004();
  v172[53] = *(_QWORD *)(v173 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v75);
  sub_23F693E0C();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v76);
  v172[51] = (char *)v172 - v77;
  v78 = sub_23F6D398C();
  type metadata accessor for ActionCancellation(v78);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v79);
  sub_23F693E0C();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v80);
  v172[46] = sub_23FB2AA2C((uint64_t)v172 - v81);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v82);
  sub_23F6B51A4();
  v172[50] = v83;
  v84 = sub_23F6D398C();
  type metadata accessor for ActionResolverRequest(v84);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v85);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v86);
  v172[45] = (char *)v172 - v87;
  v88 = sub_23F6D398C();
  type metadata accessor for QueryStepResults(v88);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v89);
  sub_23F693E0C();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v90);
  v172[42] = (char *)v172 - v91;
  v92 = sub_23F6D398C();
  type metadata accessor for RequestContent.SystemPromptResolution(v92);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v93);
  sub_23F693E0C();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v94);
  v172[39] = (char *)v172 - v95;
  sub_23F6D398C();
  type metadata accessor for SessionError();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v96);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v97);
  sub_23F6B6580();
  v172[6] = sub_23FB2AA1C(v98);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v99);
  sub_23F6B51A4();
  v172[7] = v100;
  v101 = sub_23F6D398C();
  v172[35] = type metadata accessor for VariableStep(v101);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v102);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v103);
  v172[43] = (char *)v172 - v104;
  v105 = sub_23F6D398C();
  type metadata accessor for QueryStep(v105);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v106);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v107);
  sub_23F6B6580();
  v172[34] = v108;
  v109 = sub_23F6D398C();
  type metadata accessor for ClientAction(v109);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v110);
  sub_23F693E0C();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v111);
  sub_23F6B6580();
  v172[32] = v112;
  v113 = sub_23F6D398C();
  type metadata accessor for Action(v113);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v114);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v115);
  sub_23F6B6580();
  v172[29] = v116;
  v117 = sub_23F6D398C();
  type metadata accessor for Request(v117);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v118);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v119);
  v172[27] = (char *)v172 - v120;
  v121 = sub_23F6B58C8();
  sub_23F6B53F8(v121, (uint64_t)&a15);
  v186 = v122;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v123);
  sub_23F6B51A4();
  sub_23F6B5314(v124);
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v125);
  sub_23F6B51A4();
  v187 = v126;
  v127 = sub_23F6D398C();
  v188 = type metadata accessor for TextQuery(v127);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v128);
  sub_23F693E0C();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v129);
  v189 = (char *)v172 - v130;
  v131 = sub_23F6D398C();
  type metadata accessor for SessionStart(v131);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v132);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v133);
  v135 = sub_23F70D434((uint64_t)v172 - v134);
  v197 = type metadata accessor for Session.Event.Payload(v135);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v136);
  v137 = sub_23F6B51D0();
  v192 = type metadata accessor for TranscriptProtoPayloadEnum(v137);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v138);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v139);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v140);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v141);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v142);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v143);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v144);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v145);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v146);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v147);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v148);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v149);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v150);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v151);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v152);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v153);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v154);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v155);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v156);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v157);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v158);
  sub_23F72E168();
  MEMORY[0x24BDAC7A8](v159);
  sub_23F9231E0();
  MEMORY[0x24BDAC7A8](v160);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v161);
  sub_23FB29880();
  MEMORY[0x24BDAC7A8](v162);
  sub_23F72E2B0();
  MEMORY[0x24BDAC7A8](v163);
  sub_23F70D958();
  MEMORY[0x24BDAC7A8](v164);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v165);
  sub_23F876D18();
  MEMORY[0x24BDAC7A8](v166);
  sub_23F6D3F74();
  MEMORY[0x24BDAC7A8](v167);
  sub_23F6D3D14();
  v190 = v168;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v169);
  v191 = (char *)v172 - v170;
  sub_23F6F5920(v198, v20, type metadata accessor for Session.Event.Payload);
  v196 = v20;
  v171 = (char *)sub_23FAF6110 + 4 * word_23FB92A52[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23FAF6110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 - 736);
  sub_23F77E2AC(*(_QWORD *)(v0 - 192), v1);
  sub_23F77DC5C(v1, *(_QWORD *)(v0 - 728));
  v2 = *(_QWORD *)(v0 - 256);
  sub_23FB2AA00();
  TranscriptProtoSessionStart.init(handwritten:)();
  sub_23F70D63C(v1);
  sub_23FB29874();
  swift_storeEnumTagMultiPayload();
  v3 = *(_QWORD *)(v0 - 232);
  sub_23FB29EF8(v2, v4, type metadata accessor for TranscriptProtoPayloadEnum);
  v6 = *(_QWORD *)(v0 - 208);
  v5 = *(_QWORD *)(v0 - 200);
  sub_23F7D2ED8(v6, 1);
  v7 = sub_23F6F0BB0();
  sub_23FB297B8(v7, type metadata accessor for Session.Event.Payload);
  sub_23FB29F30(v6, v8, type metadata accessor for TranscriptProtoPayload);
  sub_23F77DC10(v9, &qword_256EAB758);
  sub_23FB29F30(v3, v10, type metadata accessor for TranscriptProtoPayloadEnum);
  sub_23F7D2ED8(v5, 0);
  sub_23F6B6834();
  sub_23F6B5100();
}

void TranscriptProtoTimepoint.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_23F6B5220();
  v5 = v4;
  v7 = sub_23FB29ABC(v6);
  v8 = type metadata accessor for TranscriptProtoTimepoint(v7);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B51D0();
  sub_23FB2C470();
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA86E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B573C();
  sub_23F6D3ECC(v1, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16));
  sub_23FB2D6C4();
  v12 = sub_23FB2D6D0();
  sub_23FB298EC(v3, 0, 1, v12);
  v13 = type metadata accessor for Timepoint();
  v14 = *(_QWORD *)(v5 + *(int *)(v13 + 20));
  v20 = *(_QWORD *)(v5 + *(int *)(v13 + 24));
  v15 = sub_23FB2C488();
  v17 = v16;
  sub_23F7D2ED8((uint64_t)v2 + *(int *)(v8 + 28), 1);
  sub_23F77E628();
  v18 = sub_23F8783DC();
  sub_23F710E80(v18, v19, &qword_256EA86E0);
  *v2 = v14;
  v2[1] = v20;
  v2[2] = v15;
  v2[3] = v17;
  sub_23F6F594C((uint64_t)v2, v21, type metadata accessor for TranscriptProtoTimepoint);
  sub_23F6F8C88(v5, (uint64_t (*)(_QWORD))type metadata accessor for Timepoint);
  sub_23FB29EE0();
  sub_23F6B5100();
}

void sub_23FAF74E8()
{
  TranscriptProtoEvent.init(handwritten:)();
}

void sub_23FAF74FC()
{
  Timepoint.init(transcript:)();
}

uint64_t sub_23FAF7510()
{
  return sub_23FAE7650();
}

void sub_23FAF7524()
{
  TranscriptProtoTimepoint.init(handwritten:)();
}

uint64_t ParticipantID.init(transcript:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = sub_23F6B6254();
  sub_23FB297B8(v2, type metadata accessor for TranscriptProtoParticipantID);
  return v1;
}

void sub_23FAF7578()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;

  sub_23FB2A404();
  *v0 = ParticipantID.init(transcript:)(v1);
  v0[1] = v2;
  sub_23F694CC8();
}

uint64_t protocol witness for ProtoBytesConvertible.protoBytes() in conformance ParticipantID()
{
  uint64_t *v0;

  return sub_23FAE78D4(*v0, v0[1]);
}

void TranscriptProtoParticipantID.init(handwritten:)(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  type metadata accessor for TranscriptProtoParticipantID(0);
  sub_23FAC3210();
  *a3 = a1;
  a3[1] = a2;
  sub_23F694C84();
}

void sub_23FAF75EC(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  TranscriptProtoParticipantID.init(handwritten:)(*a1, a1[1], a2);
}

void SpanID.init(transcript:)(uint64_t a1)
{
  sub_23F6F8C88(a1, type metadata accessor for TranscriptProtoSpanID);
  sub_23F694CC8();
}

void sub_23FAF7640()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FB2A404();
  SpanID.init(transcript:)(v1);
  *v0 = v2;
  sub_23F694CC8();
}

uint64_t protocol witness for ProtoBytesConvertible.protoBytes() in conformance SpanID()
{
  uint64_t *v0;

  return sub_23FAE79BC(*v0);
}

void TranscriptProtoSpanID.init(handwritten:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = sub_23FB29DC8();
  type metadata accessor for TranscriptProtoSpanID(v3);
  sub_23FAC3074();
  *v1 = a1;
  sub_23F694CC8();
}

void sub_23FAF76A8(uint64_t *a1)
{
  TranscriptProtoSpanID.init(handwritten:)(*a1);
}

void SessionStart.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;

  sub_23F6B5220();
  v6 = v5;
  v42 = v7;
  type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  v44 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6D398C();
  sub_23FB2C8C0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  v40 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F6D398C();
  v43 = type metadata accessor for TranscriptProtoDeviceDetails(v12);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  v47 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6D398C();
  v41 = sub_23FB2C908();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F77DB24();
  sub_23FB2C50C();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  v46 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v18);
  v45 = (char *)&v37 - v19;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v20);
  v21 = sub_23F923B4C();
  type metadata accessor for TranscriptProtoLocaleSettings(v21);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6B5864();
  sub_23FB2C998();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v23);
  v24 = sub_23F78F27C();
  type metadata accessor for TranscriptProtoSessionStart(v24);
  v48 = v6;
  sub_23F77BBD4();
  if (v0)
  {
    sub_23FB29B7C(v25, type metadata accessor for TranscriptProtoSessionStart);
  }
  else
  {
    v38 = v3;
    v39 = v1;
    v37 = v4;
    sub_23F6B54F8();
    sub_23FB2A670();
    sub_23F6B54F8();
    sub_23FB2A670();
    sub_23F6B54F8();
    sub_23FB2A670();
    v26 = sub_23FB2C95C();
    sub_23FB297A8(v26, type metadata accessor for TranscriptProtoLocaleSettings);
    v27 = v48;
    sub_23F77BC00();
    sub_23FB2AD04();
    sub_23F6B5508();
    sub_23F77B5C0();
    v28 = v39;
    v46 = 0;
    v29 = sub_23FB2C8A8();
    sub_23FB297C8(v29, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
    v30 = v37;
    sub_23FB2A5B0();
    v31 = sub_23FB2C8CC();
    sub_23FB298E4(v31, type metadata accessor for TranscriptProtoDeviceDetails);
    v32 = *v27;
    sub_23FB297EC(v33, type metadata accessor for TranscriptProtoSessionStart);
    v34 = v42;
    sub_23F75E68C(v42, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 32));
    v35 = type metadata accessor for SessionStart(0);
    v36 = sub_23FB2AAC8(v35);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(v36, v30, v41);
    *(_BYTE *)(v34 + *(int *)(v35 + 24)) = v32;
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void TextQuery.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;

  sub_23F6B5220();
  v3 = v2;
  v5 = v4;
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B58C8();
  sub_23F7F68B0();
  v21 = v7;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5208();
  v9 = v3[1];
  v20 = *v3;
  v19 = *((_BYTE *)v3 + 16);
  v10 = sub_23FB2ABB8();
  sub_23F6B90D8();
  sub_23F77B8C8();
  if (v0)
  {
    sub_23FB297A8(v11, type metadata accessor for TranscriptProtoTextQuery);
    sub_23F717D54();
  }
  else
  {
    sub_23F6B6548();
    v12 = sub_23FB29BDC();
    sub_23FB298A0(v12, type metadata accessor for TranscriptProtoStatementID);
    v13 = (uint64_t *)((char *)v3 + *(int *)(v10 + 28));
    v15 = *v13;
    v14 = v13[1];
    v16 = sub_23F6B6548();
    sub_23FB297A8(v16, type metadata accessor for TranscriptProtoTextQuery);
    v17 = sub_23FB2ABA8();
    v18 = (_QWORD *)(v5 + *(int *)(v17 + 28));
    *(_QWORD *)v5 = v20;
    *(_QWORD *)(v5 + 8) = v9;
    *(_BYTE *)(v5 + 16) = v19;
    sub_23FB2AD24(v5 + *(int *)(v17 + 24), v1, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v21 + 32));
    *v18 = v15;
    v18[1] = v14;
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

#error "23FAF7B68: call analysis failed (funcsize=26)"

void Request.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  char v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD v82[2];
  unsigned __int8 v83;
  uint64_t v84;

  sub_23F6B5220();
  v7 = v6;
  v9 = sub_23FB2A528(v8);
  v81 = type metadata accessor for Request(v9);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  v12 = sub_23FAD6DDC(v11, v70);
  v77 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(v12);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  v78 = (uint64_t *)((char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23F6B5664();
  v16 = MEMORY[0x24BDAC7A8](v15);
  sub_23FB29E4C(v16, v17, v18, v19, v20, v21, v22, v23, v70);
  sub_23F6916B8(&qword_256EB1C30);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v24);
  v76 = (uint64_t)&v70 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F7F6400();
  sub_23F6916B8(&qword_256EA2798);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F6B5C80();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F77E490();
  sub_23F6916B8(&qword_256EA8698);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v29);
  v30 = sub_23F78F27C();
  type metadata accessor for TranscriptProtoRequestContent(v30);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v31);
  v32 = sub_23F6B5C2C();
  type metadata accessor for RequestContent(v32);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v33);
  v34 = sub_23F6B51D0();
  v35 = type metadata accessor for TranscriptProtoRequest(v34);
  sub_23F77BF18();
  if (v1)
  {
    sub_23F6F8C88((uint64_t)v7, type metadata accessor for TranscriptProtoRequest);
  }
  else
  {
    v74 = v0;
    v75 = v2;
    v84 = v5;
    v36 = (int *)v81;
    RequestContent.init(transcript:)();
    v37 = *v7;
    v38 = v35;
    sub_23F6B4F58((uint64_t)&v7[*(int *)(v35 + 24)], v3, &qword_256EA8698);
    sub_23F77A5B0(v3, (uint64_t)v82);
    v39 = *(_QWORD *)&v7[*(int *)(v35 + 28) + 8];
    v73 = v83;
    v71 = v82[0];
    v72 = v82[1];
    if (v39)
    {
      sub_23F77DCD4();
      sub_23FB2C47C();
      sub_23F77B568();
      sub_23F77DD64(v40, &qword_256EA2798);
      HIDWORD(v70) = v37;
      v75 = 0;
      v44 = sub_23F72E034();
      sub_23F78F2E4(v5, 0, v45, v44);
      sub_23F6B644C();
      v38 = v35;
    }
    else
    {
      HIDWORD(v70) = v37;
      v75 = 0;
      v41 = sub_23F72E034();
      sub_23F6B5A8C(v5, v42, v43, v41);
    }
    v46 = v74;
    sub_23FB29F20((uint64_t)&v7[*(int *)(v38 + 32)], v74);
    v47 = v76;
    sub_23FB29F20(v46, v76);
    sub_23F6B5164(v47, 1, v77);
    v49 = v78;
    v48 = v79;
    if (v50)
    {
      v51 = sub_23F7F64A8();
      sub_23F6B4F84(v51, v52);
      v53 = sub_23FAC3B6C();
      sub_23F6B4F84(v53, v54);
      v77 = 0;
      v55 = 0;
      v56 = 0;
    }
    else
    {
      sub_23F72E1E4(v47, v79);
      sub_23F77DA34(v48, (uint64_t)v49);
      v55 = v49[1];
      v77 = *v49;
      v56 = v49[2];
      sub_23F6B54F8();
      sub_23F77DCD4();
      sub_23FB29A4C((uint64_t)v49);
      sub_23FAD6A14(v57, &qword_256EB1C30);
      sub_23FB29A4C(v48);
    }
    v58 = v80;
    v59 = v80 + v36[6];
    v60 = v80 + v36[7];
    v61 = sub_23F72E034();
    sub_23F6B5A8C(v60, v62, v63, v61);
    v64 = (uint64_t *)(v58 + v36[8]);
    *v64 = 0;
    v64[1] = 0;
    v64[2] = 0;
    sub_23FB29EF8(v4, v65, type metadata accessor for RequestContent);
    *(_BYTE *)(v58 + v36[5]) = BYTE4(v70);
    v66 = v72;
    *(_QWORD *)v59 = v71;
    *(_QWORD *)(v59 + 8) = v66;
    *(_BYTE *)(v59 + 16) = v73;
    sub_23FB29D9C(v84, v67, &qword_256EA2798);
    sub_23F77D90C(*v64, v64[1]);
    *v64 = v77;
    v64[1] = v55;
    v64[2] = v56;
    sub_23FB2A43C(v58, v68, type metadata accessor for Request);
    sub_23FB297B8(v69, type metadata accessor for TranscriptProtoRequest);
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void Session.Plan.init(transcript:)(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v6 = *a1;
  v5 = a1[1];
  v8 = a1[2];
  v7 = a1[3];
  sub_23F6B54F8();
  sub_23F6B5508();
  sub_23F77DCD4();
  sub_23F777970();
  if (v2)
  {
    sub_23FB297C8(v9, type metadata accessor for TranscriptProtoPlan);
    sub_23F693DFC();
    sub_23F693E04();
  }
  else
  {
    v10 = v9;
    v11 = a1[6];
    v14 = a1[5];
    v13 = 0x403020100uLL >> (8 * *((_BYTE *)a1 + 56));
    v12 = sub_23F77E600();
    sub_23FB297C8(v12, type metadata accessor for TranscriptProtoPlan);
    *(_QWORD *)a2 = v6;
    *(_QWORD *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v8;
    *(_QWORD *)(a2 + 24) = v7;
    *(_QWORD *)(a2 + 32) = v10;
    *(_QWORD *)(a2 + 40) = v14;
    *(_QWORD *)(a2 + 48) = v11;
    *(_BYTE *)(a2 + 56) = v13;
  }
  sub_23F6D3B40();
}

void Session.RecoverableError.init(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(_QWORD);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  sub_23F6B5220();
  v16 = v15;
  v18 = sub_23FB29BA4(v17);
  type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(v18);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F6B5C9C();
  MEMORY[0x24BDAC7A8](v20);
  v21 = sub_23F78F2D0();
  type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(v21);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v22);
  sub_23FB2A0D0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v40 - v25;
  v27 = sub_23FB299D0();
  type metadata accessor for TranscriptProtoRecoverableErrorEnum(v27);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v28);
  sub_23FB2A398();
  sub_23F77BE3C();
  if (v10)
  {
    sub_23F6F8C88(v16, type metadata accessor for TranscriptProtoRecoverableError);
  }
  else
  {
    sub_23F77DC98(v11, (uint64_t)v26);
    v29 = sub_23F77E608();
    sub_23F70D654(v29, v30);
    sub_23F77BE10();
    v31 = sub_23F9249A0();
    sub_23F77DC98(v31, v32);
    sub_23F70D654(v12, (uint64_t)v13);
    v33 = *v13;
    v34 = v13[1];
    v35 = v13[3];
    v42 = v13[2];
    v43 = v33;
    v36 = v13[5];
    v41 = v13[4];
    sub_23F6B5F1C();
    sub_23F77E1FC();
    sub_23F6B54F8();
    sub_23FB29AB4((uint64_t)v13);
    sub_23F6F8C88(v14, type metadata accessor for TranscriptProtoPlanGenerationError);
    sub_23FB29AB4(v12);
    sub_23FB297B8(v37, type metadata accessor for TranscriptProtoRecoverableError);
    v38 = sub_23F77E608();
    sub_23F6F8C88(v38, v39);
    *a10 = v43;
    a10[1] = v34;
    a10[2] = v42;
    a10[3] = v35;
    a10[4] = v41;
    a10[5] = v36;
  }
  sub_23F6B6834();
  sub_23F6B5100();
}

void Action.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int *v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t);
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  sub_23F6B5220();
  v4 = v3;
  v6 = v5;
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (unsigned int *)((char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23F6B58C8();
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_23F6B51D0();
  v12 = (int *)type metadata accessor for TranscriptProtoAction(v11);
  sub_23FB29D7C();
  if (v0)
  {
    sub_23FB297C8(v13, type metadata accessor for TranscriptProtoAction);
  }
  else
  {
    v47 = v6;
    v14 = *v9;
    sub_23F77E1FC();
    sub_23FB29EB0();
    v15 = sub_23FB2C74C();
    sub_23FB297EC(v15, type metadata accessor for TranscriptProtoStatementID);
    v16 = *v4;
    v17 = v4[1];
    v18 = v12[9];
    v19 = (uint64_t *)((char *)v4 + v12[8]);
    v20 = v19[1];
    v44 = *v19;
    v21 = *(uint64_t *)((char *)v4 + v18 + 8);
    v45 = *(uint64_t *)((char *)v4 + v18);
    v46 = v16;
    v48 = v21;
    swift_bridgeObjectRetain();
    sub_23F6B54F8();
    sub_23F77E584();
    sub_23F77E1FC();
    v22 = sub_23FB2ABC8();
    sub_23FB235CC(v22);
    if (v14)
    {
      sub_23F756640();
      sub_23F6B6E44();
      sub_23F7D2B44();
      v24 = sub_23F693DFC();
      sub_23FB297C8(v24, type metadata accessor for TranscriptProtoAction);
      sub_23F6B563C(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    }
    else
    {
      v43 = v23;
      sub_23F693DFC();
      v42 = *((unsigned __int8 *)v4 + 16);
      v25 = (uint64_t *)((char *)v4 + v12[10]);
      v26 = *v25;
      v40 = v25[1];
      v41 = v26;
      v27 = swift_bridgeObjectRetain();
      sub_23FB297C8(v27, type metadata accessor for TranscriptProtoAction);
      v28 = (int *)type metadata accessor for Action(0);
      v29 = v47;
      v30 = (_QWORD *)(v47 + v28[6]);
      v38 = (_QWORD *)(v47 + v28[7]);
      v39 = (_QWORD *)(v47 + v28[10]);
      v31 = sub_23F6B68A8();
      sub_23F77DD54(v31, v32, v33);
      v34 = (_QWORD *)(v29 + v28[5]);
      *v34 = v46;
      v34[1] = v17;
      *v30 = v44;
      v30[1] = v20;
      v35 = v38;
      *v38 = v45;
      v35[1] = v48;
      *(_QWORD *)(v29 + v28[9]) = v43;
      *(_BYTE *)(v29 + v28[8]) = v42;
      v36 = v39;
      v37 = v40;
      *v39 = v41;
      v36[1] = v37;
    }
  }
  sub_23F77DB18();
  sub_23F6B5100();
}

void ClientAction.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_23F6B5220();
  v4 = v3;
  v6 = v5;
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B58C8();
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23F6B51D0();
  type metadata accessor for TranscriptProtoClientAction(v9);
  sub_23FB29D7C();
  if (v0)
  {
    sub_23FB297C8(v10, type metadata accessor for TranscriptProtoClientAction);
  }
  else
  {
    sub_23F77E584();
    sub_23FB29EB0();
    v11 = sub_23FB2C74C();
    sub_23FB298A0(v11, type metadata accessor for TranscriptProtoStatementID);
    v13 = *v4;
    v12 = v4[1];
    sub_23F6B54F8();
    sub_23F77E584();
    sub_23FB23064();
    v28 = v14;
    v26 = v13;
    v27 = v6;
    sub_23F756640();
    sub_23F77E1FC();
    sub_23FB22DB8();
    v21 = v15;
    sub_23F6B6E44();
    v24 = v4[6];
    v25 = v4[4];
    v22 = v4[5];
    v23 = v4[7];
    swift_bridgeObjectRetain();
    v16 = sub_23F6B6254();
    sub_23FB297C8(v16, type metadata accessor for TranscriptProtoClientAction);
    v17 = (int *)type metadata accessor for ClientAction(0);
    v18 = (_QWORD *)(v6 + v17[7]);
    v19 = (_QWORD *)(v27 + v17[8]);
    sub_23F6B633C(v27, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32));
    v20 = (_QWORD *)(v27 + v17[5]);
    *v20 = v26;
    v20[1] = v12;
    *(_QWORD *)(v27 + v17[6]) = v28;
    *(_QWORD *)(v27 + v17[9]) = v21;
    *v18 = v25;
    v18[1] = v22;
    *v19 = v24;
    v19[1] = v23;
  }
  sub_23F77DB18();
  sub_23F6B5100();
}

void QueryStep.init(transcript:)()
{
  sub_23FAF86B4();
}

void VariableStep.init(transcript:)()
{
  sub_23FAF86B4();
}

void sub_23FAF86B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  uint64_t (*v4)(uint64_t);
  void (*v5)(uint64_t);
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD);
  uint64_t (*v18)(uint64_t);

  sub_23F6B5220();
  v17 = v3;
  v18 = v4;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B58C8();
  sub_23F70D9A8();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23F70D7F8();
  v6(v13);
  sub_23FB29D7C();
  if (v0)
  {
    sub_23FB29A4C(v8);
  }
  else
  {
    sub_23F6B5F1C();
    v14 = sub_23FB2A478();
    sub_23FB297D8(v14, type metadata accessor for TranscriptProtoStatementID);
    v15 = sub_23FB2A298();
    v16 = v18(v15);
    sub_23FB29A4C(v8);
    sub_23F6B5EF0(v10, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32));
    *(_QWORD *)(v10 + *(int *)(v17(0) + 20)) = v16;
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void SessionError.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  int EnumCaseMultiPayload;
  char *v23;
  char *v24;

  sub_23F6B5220();
  v4 = sub_23FB29ABC(v3);
  type metadata accessor for TranscriptProtoIntelligenceFlowError(v4);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v5);
  v24 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v7);
  v23 = (char *)v21 - v8;
  v9 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoPlannerError(v9);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5C9C();
  MEMORY[0x24BDAC7A8](v11);
  v12 = sub_23FB29970();
  type metadata accessor for TranscriptProtoSessionCoordinatorError(v12);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v14);
  v15 = sub_23F78F404();
  type metadata accessor for TranscriptProtoExecutorError(v15);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B6618();
  MEMORY[0x24BDAC7A8](v17);
  v18 = sub_23F923B4C();
  type metadata accessor for TranscriptProtoSessionErrorEnum(v18);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v19);
  sub_23FB2A3D8();
  sub_23F77BBA8();
  if (!v0)
  {
    v21[0] = v2;
    v21[1] = v1;
    sub_23F78F4B0();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    __asm { BR              X10 }
  }
  sub_23FB297B0(v20, type metadata accessor for TranscriptProtoSessionError);
  sub_23F876B60();
  sub_23F6B5100();
}

void RequestContent.SystemPromptResolution.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33[3];
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;

  sub_23F6B5220();
  v5 = v4;
  v33[2] = v6;
  type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B5C10(v8, v33[0]);
  sub_23F6916B8(&qword_256EA8C38);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  v34 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  v37 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F6B58C8();
  v35 = *(_QWORD *)(v13 - 8);
  v36 = v13;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v14);
  v15 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(v15);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  v17 = sub_23F6B5C2C();
  type metadata accessor for RequestContent.SystemPromptResolution.UserAction(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23FAD67A8(v19, v33[0]);
  v38 = *(_QWORD *)(sub_23FB2C4B8() - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B573C();
  sub_23F6916B8(&qword_256EA2798);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v22);
  sub_23FB29880();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F77E490();
  if (*(_QWORD *)(v5 + 24))
  {
    v1 = *(_QWORD *)(v5 + 16);
    sub_23F77E600();
    sub_23FB2A664();
    sub_23FB2AC38();
    if (v1)
    {
      sub_23F6B4F84(v0, &qword_256EA2798);
      v24 = sub_23F6B6A48();
      goto LABEL_9;
    }
    sub_23F6B4F84(v0, &qword_256EA2798);
    sub_23F7D2ED8(v3, 0);
    sub_23F6B6A48();
  }
  else
  {
    sub_23F7D2ED8(v3, 1);
  }
  sub_23FB2C47C();
  sub_23FB2AC38();
  if (v1)
  {
    sub_23F6D3748(v2);
    v26 = sub_23FB29D10();
    sub_23F6B4F84(v26, v30);
  }
  else
  {
    sub_23F6B6034(v25, &qword_256EA2798);
    type metadata accessor for TranscriptProtoSystemPromptResolution(0);
    sub_23F77BCDC();
    RequestContent.SystemPromptResolution.UserAction.init(transcript:)();
    v27 = v37;
    sub_23FB2A824();
    v33[1] = *((_QWORD *)v27 + 1);
    sub_23F6B6548();
    v28 = sub_23FB29BDC();
    sub_23FB297B0(v28, type metadata accessor for TranscriptProtoStatementID);
    sub_23F77BD08();
    v29 = (uint64_t)v34;
    sub_23FB2AA84();
    RequestContent.SystemPromptResolution.ResolutionInput.init(transcript:)();
    v31 = sub_23FB2A074();
    sub_23F78F2E4(v29, 0, v32, v31);
    RequestContent.SystemPromptResolution.init(actionEventId:systemResponseEventId:userAction:statementId:input:)();
  }
LABEL_9:
  sub_23FB297B8(v24, type metadata accessor for TranscriptProtoSystemPromptResolution);
  sub_23F876FC4();
  sub_23F6B5100();
}

void ActionStepResult.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_23F6B5220();
  v34 = v5;
  v7 = v6;
  sub_23F6916B8(&qword_256EA2780);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23FAD67A8(v9, v29);
  v32 = sub_23FB2C788();
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5864();
  sub_23FB2C80C();
  sub_23FB2A198();
  MEMORY[0x24BDAC7A8](v11);
  v12 = sub_23F77DB24();
  v31 = type metadata accessor for ActionResult(v12);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B6618();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v29 - v15;
  v17 = sub_23F72E034();
  sub_23F6B5A8C(v7, v18, v19, v17);
  v20 = (int *)type metadata accessor for ActionStepResult(0);
  v21 = v20[7];
  v30 = v7;
  v22 = (_QWORD *)(v7 + v21);
  *v22 = 0;
  v22[1] = 0xE000000000000000;
  v23 = (_QWORD *)(v7 + v20[5]);
  *v23 = 0;
  v23[1] = 0xE000000000000000;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 104))(v2, *MEMORY[0x24BE52270], v32);
  sub_23FB2C7D0();
  sub_23F6B5EF0(v4, *MEMORY[0x24BE523B8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
  sub_23FB2A370();
  sub_23F7A690C(v33, 1);
  sub_23F7A690C(v3 + *(int *)(v31 + 20), 1);
  sub_23F77DD54(v3, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32));
  v24 = sub_23F72E2E0();
  sub_23F710E80(v24, v25, &qword_256EA2780);
  v26 = sub_23F77E46C();
  sub_23F77E2AC(v26, v27);
  sub_23FB29B7C(v28, type metadata accessor for TranscriptProtoActionStepResult);
  sub_23F77E2AC((uint64_t)v16, v30 + v20[6]);
  sub_23FB29EE0();
  sub_23F6B5100();
}

void QueryStepResults.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t StepResults;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;

  sub_23F6B5220();
  v35 = v5;
  v34 = sub_23F72E034();
  sub_23F70D9A8();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA2798);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F6B58C8();
  sub_23FB2A198();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B52B0();
  v13 = sub_23FB2AE7C();
  sub_23F777260(v13, v14, v15, v16, v17, v18, v19, v20, v29, v30);
  if (!v1)
  {
    v32 = v11;
    v33 = v21;
    v30 = v2;
    v31 = v0;
    v29 = v4;
    type metadata accessor for TranscriptProtoQueryStepResults(0);
    sub_23FB2AEC0();
    v22 = *((_QWORD *)v10 + 2);
    sub_23F6B6254();
    v23 = v30;
    v24 = sub_23FB2A570();
    sub_23FB297C8(v24, type metadata accessor for TranscriptProtoStatementID);
    sub_23FB2C47C();
    sub_23FB2ACD4();
    if (v22)
    {
      v26 = sub_23F7D2F10();
      sub_23FAD6A14(v26, &qword_256EA2798);
      v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v23, v32);
    }
    else
    {
      sub_23FAD6A14(v25, &qword_256EA2798);
      *v35 = v33;
      StepResults = type metadata accessor for QueryStepResults(0);
      v28 = sub_23FB2AAC8(StepResults);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v28, v23, v32);
      v21 = sub_23FB2A26C((uint64_t)v35 + *(int *)(StepResults + 24), v3, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v29 + 32));
    }
  }
  sub_23FB297EC(v21, type metadata accessor for TranscriptProtoQueryStepResults);
  sub_23F6B6834();
  sub_23F6B5100();
}

void ActionResponse.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[2];

  sub_23F6B5220();
  v20[1] = v4;
  sub_23F6916B8(&qword_256EA8600);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FB29F8C();
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F70D7F8();
  sub_23FB2C80C();
  sub_23FB2A198();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA2798);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F72E034();
  sub_23F6B5A8C((uint64_t)v12, v14, v15, v13);
  sub_23F6B5EF0(v3, *MEMORY[0x24BE52270], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
  sub_23FB2C7D0();
  sub_23F75E68C(v2, *MEMORY[0x24BE523B8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
  v16 = sub_23FB2A378();
  sub_23F6B5A8C((uint64_t)v7, v17, v18, v16);
  v19 = sub_23FB2C920();
  sub_23FB29B7C(v19, type metadata accessor for TranscriptProtoActionResponse);
  sub_23FB29EE0();
  sub_23F6B5100();
}

#error "23FAF96A4: call analysis failed (funcsize=223)"

void ResponseGenerationRequest.init(transcript:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_23FAF9FE0(a1, (uint64_t (*)(uint64_t))sub_23F7774C0, a2);
}

void ClientInitiatedClientAction.init(transcript:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F6D3EA4();
  v2 = v1;
  v5 = *v3;
  v4 = v3[1];
  sub_23F6B5508();
  sub_23F6B90D8();
  sub_23FB23064();
  v7 = v6;
  v8 = sub_23F717D54();
  sub_23FB297C0(v8, type metadata accessor for TranscriptProtoClientInitiatedClientAction);
  if (v0)
  {
    sub_23F693E04();
  }
  else
  {
    *v2 = v5;
    v2[1] = v4;
    v2[2] = v7;
  }
  sub_23F6D3750();
}

void ContextPrewarmRequest.init(transcript:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_23F6F8C88(a1, type metadata accessor for TranscriptProtoContextPrewarmRequest);
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  sub_23F694CC8();
}

void ContextPrewarmCompleted.init(transcript:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_23F6F8C88(a1, type metadata accessor for TranscriptProtoContextPrewarmCompleted);
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  sub_23F694CC8();
}

void SafetyModeRelease.init(transcript:)(uint64_t a1)
{
  sub_23F6F8C88(a1, type metadata accessor for TranscriptProtoSafetyModeRelease);
  sub_23F878AAC();
}

void SafetyModeException.init(transcript:)(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v3 = a1[1];
  v5 = sub_23F6B5F1C();
  sub_23FB2AB04(v5, type metadata accessor for TranscriptProtoSafetyModeException);
  *a2 = v4;
  a2[1] = v3;
  sub_23F6D3C2C();
}

#error "23FAF981C: call analysis failed (funcsize=30)"

void ToolRetrievalResponse.init(transcript:)(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(_QWORD);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t, uint64_t);
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t, uint64_t);
  unint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;

  v5 = v3;
  v113 = a2;
  sub_23F6916B8(&qword_256EA2E48);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  v122 = (char *)&v112 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6D398C();
  v9 = sub_23FB2EB34();
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v112 - v12;
  sub_23FB29970();
  v14 = sub_23FB2ED8C();
  v135 = *(_QWORD *)(v14 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v15);
  v134 = (uint64_t)&v112 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v17);
  sub_23FB29880();
  MEMORY[0x24BDAC7A8](v18);
  v133 = (uint64_t)&v112 - v19;
  sub_23F6916B8(&qword_256EA2E58);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  v127 = (uint64_t)&v112 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6D398C();
  v128 = sub_23FB2EB40();
  v126 = *(_QWORD *)(v128 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v22);
  v125 = (char *)&v112 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v24);
  v124 = (char *)&v112 - v25;
  sub_23F6D398C();
  v26 = sub_23FB2EDD4();
  v139 = *(_QWORD *)(v26 - 8);
  v140 = v26;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v27);
  v137 = (uint64_t)&v112 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v29);
  v123 = (char *)&v112 - v30;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v31);
  v138 = (uint64_t)&v112 - v32;
  v33 = sub_23F6D398C();
  v121 = type metadata accessor for ContextProtoToolRetrievalType(v33);
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F6B51A4();
  v36 = *(_QWORD *)(a1[6] + 16);
  if (!v36)
  {
    v44 = MEMORY[0x24BEE4B00];
LABEL_17:
    v97 = *a1;
    v98 = a1[1];
    v100 = a1[2];
    v99 = a1[3];
    v101 = *((_DWORD *)a1 + 8);
    sub_23F6B6548();
    sub_23F6B5F1C();
    v102 = sub_23F6B6254();
    sub_23F773810(v102);
    if (v5)
    {
      sub_23F6B6090();
      v104 = sub_23F6B5908();
      sub_23FB297C0(v104, type metadata accessor for TranscriptProtoToolRetrievalResponse);
LABEL_25:
      swift_bridgeObjectRelease();
    }
    else
    {
      v105 = v103;
      sub_23FB297C0(v103, type metadata accessor for TranscriptProtoToolRetrievalResponse);
      v106 = v113;
      *v113 = v97;
      v106[1] = v98;
      v106[2] = v100;
      v106[3] = v99;
      *((_DWORD *)v106 + 8) = v101;
      v106[5] = v105;
      v106[6] = v44;
    }
    sub_23F6B6CA0();
    sub_23F70D684();
    return;
  }
  v37 = v35;
  v38 = v14;
  v120 = v13;
  v39 = v3;
  v119 = v2;
  v115 = a1;
  sub_23F78F3B0();
  v42 = v40 + v41;
  v116 = *(_QWORD *)(v43 + 72);
  v114 = v40;
  swift_bridgeObjectRetain();
  v44 = MEMORY[0x24BEE4B00];
  v118 = v9;
  v117 = v4;
  v132 = v38;
  while (1)
  {
    v136 = v44;
    v45 = sub_23F72E3F8();
    sub_23F6F5920(v45, v46, v47);
    v48 = v37;
    sub_23F6B4F58(v37, v127, &qword_256EA2E58);
    v49 = sub_23F77E1A8();
    v50 = v128;
    v52 = sub_23F6B5164(v49, v51, v128);
    if (v53)
    {
      sub_23F77DC10(v52, &qword_256EA2E58);
      v141 = v50;
      sub_23F6916B8(&qword_256EA8740);
      v107 = sub_23F77D9AC();
      sub_23FB29C94();
      sub_23F6B5AD4();
      *v108 = v107;
      v108[1] = v50;
      sub_23F77D9E4();
LABEL_22:
      sub_23FB29780(type metadata accessor for TranscriptProtoToolRetrievalResponse, (uint64_t)&v142);
LABEL_24:
      sub_23FB297B8(v109, type metadata accessor for ContextProtoToolRetrievalType);
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    v130 = v42;
    v131 = v36;
    v54 = (uint64_t)v124;
    v55 = sub_23FAC3B6C();
    v57 = v56;
    sub_23F75E710(v55, v58, v59);
    v60 = sub_23F78F560();
    sub_23F75E710(v60, v61, v62);
    v63 = (uint64_t)v123;
    sub_23FB2EDC8();
    if (v39)
    {
      sub_23F6B6420(v54, *(uint64_t (**)(uint64_t, uint64_t))(v57 + 8));
      goto LABEL_22;
    }
    sub_23F6B6420(v54, *(uint64_t (**)(uint64_t, uint64_t))(v57 + 8));
    sub_23FB2AD24(v138, v63, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v139 + 32));
    v64 = (uint64_t)v122;
    v65 = sub_23FB2AA4C(*(int *)(v121 + 20));
    sub_23F6B4F58(v65, v66, &qword_256EA2E48);
    v67 = sub_23F77E1A8();
    v69 = sub_23F6B5164(v67, v68, v9);
    if (v53)
    {
      sub_23F77DC10(v69, &qword_256EA2E48);
      v141 = v9;
      sub_23F6916B8(&qword_256EA8738);
      v110 = sub_23F77D9AC();
      sub_23FB29C94();
      sub_23F6B5AD4();
      *v111 = v110;
      v111[1] = v63;
      sub_23F77D9E4();
      sub_23FB29780(type metadata accessor for TranscriptProtoToolRetrievalResponse, (uint64_t)&v142);
      v109 = sub_23FAD7120();
      goto LABEL_24;
    }
    v70 = v136;
    v71 = (uint64_t)v120;
    sub_23F6B633C((uint64_t)v120, v64, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
    v72 = sub_23F7B0BC4();
    sub_23F6B633C(v72, v73, v74);
    v75 = v119;
    sub_23FB2ED80();
    v37 = v48;
    v129 = 0;
    sub_23F6B530C(v71, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    v76 = v135;
    v77 = *(void (**)(uint64_t, uint64_t, uint64_t))(v135 + 32);
    v78 = v133;
    v77(v133, v75, v132);
    v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(v139 + 16);
    v79(v137, v138, v140);
    sub_23F6B633C(v134, v78, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v76 + 16));
    swift_isUniquelyReferenced_nonNull_native();
    v141 = v70;
    sub_23F78C74C();
    sub_23FB2ADC8();
    if (__OFADD__(v82, v83))
      break;
    v84 = v80;
    v85 = v81;
    sub_23F6916B8(&qword_256EBE530);
    v86 = sub_23FB2F914();
    v87 = v135;
    if ((v86 & 1) != 0)
    {
      sub_23F78C74C();
      if ((v85 & 1) != (v89 & 1))
        goto LABEL_29;
      v84 = v88;
    }
    v90 = v141;
    if ((v85 & 1) != 0)
    {
      sub_23F6B5EF0(*(_QWORD *)(v141 + 56) + *(_QWORD *)(v87 + 72) * v84, v134, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v87 + 40));
    }
    else
    {
      sub_23F7D2B98(v141 + 8 * (v84 >> 6));
      v79(v91 + *(_QWORD *)(v139 + 72) * v84, v137, v140);
      v77(*(_QWORD *)(v90 + 56) + *(_QWORD *)(v87 + 72) * v84, v134, v132);
      sub_23FB2AC90();
      if (v93)
        goto LABEL_28;
      *(_QWORD *)(v90 + 16) = v92;
    }
    v44 = v141;
    sub_23FAD7094();
    sub_23F77E234(v137);
    sub_23F70D728(v133, *(uint64_t (**)(uint64_t, uint64_t))(v87 + 8));
    sub_23F77E234(v138);
    sub_23FB29958(v37);
    v94 = v130;
    v95 = v131;
    sub_23FB2A5A4();
    v42 = v94 + v96;
    v36 = v95 - 1;
    v39 = v129;
    v9 = v118;
    v4 = v117;
    if (!v36)
    {
      sub_23F77DE3C();
      a1 = v115;
      v5 = v39;
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  sub_23FB2FBD8();
  __break(1u);
}

void EntitySpanMatchResult.init(transcript:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_23FAF9FE0(a1, (uint64_t (*)(uint64_t))sub_23F7741B0, a2);
}

void sub_23FAF9FE0(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;

  v7 = sub_23FB2A7DC();
  v8 = a2(v7);
  sub_23FB29A4C(a1);
  if (!v3)
    *a3 = v8;
  sub_23F6D377C();
}

void ActionCancellation.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_23F6B5220();
  v35 = v5;
  v36 = v1;
  v6 = sub_23F6B5AC8();
  v33 = type metadata accessor for ActionCancellation(v6);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  v34 = (uint64_t)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = *(_QWORD *)(sub_23F6B58C8() - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v31 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B65E0();
  MEMORY[0x24BDAC7A8](v13);
  sub_23FB29880();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F77E490();
  sub_23F72E4BC();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B59E0();
  sub_23F6916B8(&qword_256EA49D8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  v17 = sub_23F6B5864();
  type metadata accessor for TranscriptProtoActionCancellation(v17);
  v18 = sub_23F77E668();
  sub_23F6B568C(v18, v19);
  v20 = 1;
  sub_23F6B5164(v3, 1, v11);
  if (!v21)
  {
    sub_23F72E1E4(v3, v4);
    sub_23F77DA34(v4, v0);
    sub_23F77E600();
    sub_23FB2C74C();
    sub_23FB29A4C(v0);
    sub_23FB29A4C(v4);
    v20 = 0;
  }
  sub_23FB298A8(v2, v20);
  v22 = v36;
  sub_23F77B8C8();
  if (v22)
  {
    sub_23FB2993C(v23, type metadata accessor for TranscriptProtoActionCancellation);
    sub_23F923588(v24, &qword_256EA49D8);
  }
  else
  {
    sub_23F6B6548();
    v25 = (uint64_t)v31;
    v26 = sub_23FB29BDC();
    sub_23FB297D8(v26, type metadata accessor for TranscriptProtoStatementID);
    v27 = v34;
    sub_23FB298A8(v34, 1);
    sub_23FB29C34(v2, v28, &qword_256EA49D8);
    sub_23F6B5EF0(v27 + *(int *)(v33 + 20), v25, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 32));
    sub_23FB29DDC(v27, v29, type metadata accessor for ActionCancellation);
    sub_23FB2993C(v30, type metadata accessor for TranscriptProtoActionCancellation);
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void SystemResponse.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_23F6B5220();
  v5 = v4;
  v7 = sub_23FB29BA4(v6);
  v8 = type metadata accessor for TranscriptProtoResponseOutput(v7);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B5C9C();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B62F8();
  sub_23F6B6088();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B573C();
  sub_23F6916B8(&qword_256EA8600);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23F6B5C2C();
  v14 = type metadata accessor for TranscriptProtoSystemResponse(v13);
  sub_23FB2A470(v5 + *(int *)(v14 + 32), v3);
  v15 = 1;
  v16 = sub_23F7F6798();
  sub_23F6B5164(v16, v17, v8);
  if (!v18)
  {
    sub_23FAD6D50(v3, v2);
    v19 = sub_23F6B6218();
    sub_23F77DC78(v19, v20);
    ResponseOutput.init(transcript:)();
    sub_23FB29958(v2);
    if (v0)
    {
LABEL_7:
      sub_23FB297B0(v21, type metadata accessor for TranscriptProtoSystemResponse);
      goto LABEL_8;
    }
    v15 = 0;
  }
  v22 = sub_23FB2A378();
  sub_23F78F2E4(v1, v15, v23, v22);
  sub_23F77DCD4();
  v24 = sub_23F6B6254();
  sub_23F772984(v24, v25, v26, v27, v28, v29, v30, v31);
  if (!v0)
  {
    sub_23F6B6098();
    v21 = sub_23FB2CFBC();
    goto LABEL_7;
  }
  v32 = sub_23F6B644C();
  sub_23FB297B0(v32, type metadata accessor for TranscriptProtoSystemResponse);
  sub_23F77DD24(v33, &qword_256EA8600);
LABEL_8:
  sub_23F77DB18();
  sub_23F6B5100();
}

void StatementResult.init(transcript:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  unsigned int *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int *v50;
  unsigned int *v51;

  sub_23F6B5220();
  sub_23FB2AF60();
  v45 = v5;
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  v47 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6D3D14();
  v50 = v9;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v10);
  v51 = (unsigned int *)((char *)&v42 - v11);
  v12 = sub_23F6B58C8();
  v48 = *(_QWORD *)(v12 - 8);
  v49 = v12;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  v44 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v15);
  v46 = (char *)&v42 - v16;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v17);
  v18 = sub_23FB29944();
  type metadata accessor for TranscriptProtoStatementResultPayload(v18);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v19);
  v20 = sub_23F78F260();
  type metadata accessor for StatementResultPayload(v20);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B53AC();
  sub_23F6916B8(&qword_256EA2798);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6B59F8();
  if (v0[1])
  {
    sub_23FB29F48();
  }
  else
  {
    v23 = sub_23F72E034();
    sub_23F6B5A8C(v1, v24, v25, v23);
  }
  v26 = v0[2];
  v27 = v0[3];
  type metadata accessor for TranscriptProtoStatementResult(0);
  sub_23FAD7164();
  sub_23F77E1FC();
  sub_23F77BF9C();
  if (v2)
  {
    sub_23F6B6E44();
    v28 = type metadata accessor for TranscriptProtoStatementResult;
    v29 = (uint64_t)v0;
  }
  else
  {
    v43 = v26;
    sub_23FB2A814();
    StatementResultPayload.init(transcript:)();
    v42 = v3;
    v30 = v51;
    sub_23FB29BE4();
    v31 = *v30;
    sub_23F77E600();
    v32 = sub_23FB29D40();
    sub_23FB298E4(v32, type metadata accessor for TranscriptProtoStatementID);
    v33 = v50;
    sub_23FB29BE4();
    if (v31)
    {
      v34 = sub_23F6B6E44();
      sub_23FB297B8(v34, type metadata accessor for TranscriptProtoStatementResult);
      sub_23FB2A5F4(v48);
    }
    else
    {
      v51 = (unsigned int *)v4;
      v35 = *v33;
      sub_23F6B90D8();
      v36 = (uint64_t)v46;
      v37 = sub_23FB29BF4();
      sub_23FB298A0(v37, type metadata accessor for TranscriptProtoStatementID);
      sub_23FB29BE4();
      if (!v35)
      {
        sub_23F6B6548();
        v39 = v44;
        v40 = sub_23FB29960();
        sub_23FB298E4(v40, type metadata accessor for TranscriptProtoStatementID);
        v41 = StatementResult.init(actionEventId:toolId:payload:resultStatementId:originProgramStatementId:originTaskStatementId:)(v1, v43, v27, v42, v51, v36, v39);
        sub_23FB297B8(v41, type metadata accessor for TranscriptProtoStatementResult);
        goto LABEL_8;
      }
      v38 = sub_23F6B6E44();
      sub_23FB297B8(v38, type metadata accessor for TranscriptProtoStatementResult);
      sub_23F6D39FC(v36);
      sub_23F6D39FC((uint64_t)v51);
    }
    v28 = type metadata accessor for StatementResultPayload;
    v29 = v42;
  }
  sub_23F6F8C88(v29, v28);
  sub_23F6B4F84(v1, &qword_256EA2798);
LABEL_8:
  sub_23F877A30();
  sub_23F6B5100();
}

void ExternalAgentTextQuery.init(transcript:)()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(_QWORD);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(_QWORD);
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(_QWORD);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;

  sub_23F6B5220();
  sub_23FB2A3F8();
  v6 = sub_23FB29BA4(v5);
  v63 = type metadata accessor for ExternalAgentTextQuery(v6);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  v9 = sub_23FAD67A8(v8, v57);
  v60 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(v9);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B6618();
  v12 = MEMORY[0x24BDAC7A8](v11);
  sub_23F924B48(v12, v13, v14, v15, v16, v17, v18, v19, v58);
  sub_23F6916B8(&qword_256EB1C30);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B65E0();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B62F8();
  sub_23F6916B8(&qword_256EA2798);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F77DC18();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F6B5F5C();
  v24 = v0[1];
  v61 = *v0;
  if (v0[3])
  {
    v25 = v0[2];
    sub_23F77DCD4();
    sub_23F77E584();
    sub_23FB2AA74();
    sub_23FB2ACBC();
    sub_23F77DC10(v26, &qword_256EA2798);
    if (v25)
    {
      v27 = sub_23F6B644C();
      sub_23FB297A8(v27, type metadata accessor for TranscriptProtoExternalAgentTextQuery);
      sub_23F756640();
      goto LABEL_10;
    }
    v59 = v24;
    v31 = sub_23F72E034();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v3, 0, 1, v31);
    sub_23F756640();
  }
  else
  {
    v28 = sub_23F72E034();
    sub_23F6B5A8C(v3, v29, v30, v28);
    v59 = v24;
    sub_23F77DCD4();
  }
  v32 = type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
  sub_23FB29F20((uint64_t)v0 + *(int *)(v32 + 24), v2);
  sub_23FB29F20(v2, v4);
  v33 = sub_23F7F6798();
  sub_23F6B5164(v33, v34, v60);
  if (v35)
  {
    sub_23F6B64F4(v2);
    sub_23F6B64F4(v4);
    v42 = 0;
    v41 = 0;
    v43 = 0;
  }
  else
  {
    sub_23FB2AA90();
    sub_23F6F594C(v36, v37, v38);
    v39 = sub_23F72E3F8();
    sub_23F78F5C8(v39, v40);
    v42 = *v1;
    v41 = v1[1];
    v43 = v1[2];
    sub_23F6B5508();
    sub_23F6B54F8();
    v44 = sub_23F77E46C();
    sub_23F6F8C88(v44, v45);
    sub_23F6B6034(v46, &qword_256EB1C30);
    v47 = sub_23F878A5C();
    sub_23F6F8C88(v47, v48);
  }
  v49 = (uint64_t)v62 + *(int *)(v63 + 20);
  v50 = sub_23F72E034();
  sub_23F6B5A8C(v49, v51, v52, v50);
  v53 = (_QWORD *)((char *)v62 + *(int *)(v63 + 24));
  *v53 = 0;
  v53[1] = 0;
  v53[2] = 0;
  *v62 = v61;
  v62[1] = v59;
  sub_23FB29D9C(v3, v54, &qword_256EA2798);
  sub_23F77D90C(*v53, v53[1]);
  *v53 = v42;
  v53[1] = v41;
  v53[2] = v43;
  sub_23FB2A468((uint64_t)v62, v55, type metadata accessor for ExternalAgentTextQuery);
  sub_23FB297A8(v56, type metadata accessor for TranscriptProtoExternalAgentTextQuery);
LABEL_10:
  sub_23F77DB18();
  sub_23F6B5100();
}

void ExternalAgentSpeechQuery.init(transcript:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t);
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;

  sub_23F6B5220();
  v8 = v7;
  v10 = sub_23FB29B20(v9);
  v58 = type metadata accessor for ExternalAgentSpeechQuery(v10);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  v12 = sub_23F78F27C();
  v13 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(v12);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B5C80();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F77E490();
  sub_23F6916B8(&qword_256EB1C30);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B5CD4();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F878D94();
  sub_23F6916B8(&qword_256EA2798);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F77DC18();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F6B6B3C();
  v20 = sub_23FB29FF4();
  sub_23F774D5C(v20, v21, v22, v23, v24, v25, v26, v27, v53, v54);
  if (!v0)
  {
    v55 = v5;
    v56 = v3;
    v57 = v28;
    if (*(_QWORD *)(v8 + 16))
    {
      sub_23F77E584();
      sub_23FB2AA74();
      sub_23F77B568();
      sub_23F77DC10(v29, &qword_256EA2798);
      v33 = sub_23F72E034();
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v6, 0, 1, v33);
      sub_23F756640();
    }
    else
    {
      v30 = sub_23F72E034();
      sub_23F6B5A8C(v6, v31, v32, v30);
    }
    v34 = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
    sub_23FB29F20(v8 + *(int *)(v34 + 24), v2);
    sub_23FB29F20(v2, v4);
    v35 = sub_23FB2A344();
    sub_23F6B5164(v35, v36, v13);
    if (v37)
    {
      sub_23F6D3748(v2);
      v38 = sub_23F77E680();
      sub_23F6B4F84(v38, v39);
      v43 = 0;
      v42 = 0;
      v44 = 0;
    }
    else
    {
      sub_23FAD69D8(v4, v5);
      v40 = sub_23F7F64A8();
      sub_23F77DB10(v40, v41);
      v43 = *v1;
      v42 = v1[1];
      v44 = v1[2];
      sub_23F6B54F8();
      sub_23F6B6548();
      sub_23FB29AB4((uint64_t)v1);
      sub_23F923588(v45, &qword_256EB1C30);
      sub_23FB29AB4(v55);
    }
    v46 = (uint64_t)v3 + *(int *)(v58 + 20);
    v47 = sub_23F72E034();
    sub_23F6B5A8C(v46, v48, v49, v47);
    v50 = (uint64_t *)((char *)v3 + *(int *)(v58 + 24));
    *v50 = 0;
    v50[1] = 0;
    v50[2] = 0;
    *v56 = v57;
    sub_23FB29BB0(v6, v51, &qword_256EA2798);
    sub_23FB2ACB0();
    *v50 = v43;
    v50[1] = v42;
    v50[2] = v44;
    sub_23FB29DDC((uint64_t)v56, v52, type metadata accessor for ExternalAgentSpeechQuery);
  }
  sub_23FB297B8(v28, type metadata accessor for TranscriptProtoExternalAgentSpeechQuery);
  sub_23F876FC4();
  sub_23F6B5100();
}

void ExternalAgentRequest.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;

  sub_23F6B5220();
  v7 = v6;
  v9 = sub_23FB29BA4(v8);
  v69 = type metadata accessor for ExternalAgentRequest(v9);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  v12 = sub_23FB29AC8(v11, v63);
  v70 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(v12);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  v71 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F878DA4();
  sub_23F6916B8(&qword_256EB1C30);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B5CD4();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F878D94();
  sub_23F6916B8(&qword_256EA2798);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B5C9C();
  MEMORY[0x24BDAC7A8](v19);
  v20 = sub_23FB2997C();
  type metadata accessor for TranscriptProtoRequestContent(v20);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  v22 = sub_23F7A00C8();
  type metadata accessor for RequestContent(v22);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F6B5268();
  sub_23F77BF18();
  if (v0)
  {
    v24 = type metadata accessor for TranscriptProtoExternalAgentRequest;
    v25 = v7;
  }
  else
  {
    v64 = v3;
    v65 = v2;
    v66 = v1;
    v67 = v5;
    v68 = v7;
    sub_23FB2AD2C();
    RequestContent.init(transcript:)();
    type metadata accessor for TranscriptProtoExternalAgentRequest(0);
    sub_23F878C38();
    v26 = v68;
    v28 = (uint64_t *)(v68 + v27);
    if (v28[1])
    {
      v29 = *v28;
      sub_23F77E600();
      sub_23FB2A664();
      v30 = v67;
      sub_23FB2ACD4();
      sub_23F6D378C(v31, &qword_256EA2798);
      if (v29)
      {
        sub_23FB297B8(v32, type metadata accessor for TranscriptProtoExternalAgentRequest);
        sub_23F6B6A48();
        v24 = type metadata accessor for RequestContent;
        v25 = v4;
        goto LABEL_14;
      }
      v36 = sub_23F72E034();
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v30, 0, 1, v36);
      sub_23F6B6A48();
    }
    else
    {
      v33 = sub_23F72E034();
      sub_23F6B5A8C(v67, v34, v35, v33);
    }
    v37 = v65;
    sub_23F6B6A10(v26 + *(int *)(v1 + 24), v65);
    v38 = v64;
    sub_23F6B6A10(v37, v64);
    v39 = sub_23F77E3D0();
    sub_23F6B5164(v39, v40, v70);
    v41 = (uint64_t *)v71;
    v42 = v72;
    v43 = v66;
    if (v44)
    {
      sub_23F6B64F4(v37);
      sub_23F6B64F4(v38);
      v53 = 0;
      v49 = 0;
      v51 = 0;
    }
    else
    {
      v45 = sub_23F6B6F9C();
      sub_23FAD69D8(v45, v46);
      sub_23F77DB10(v43, (uint64_t)v41);
      v47 = v4;
      v48 = v43;
      v50 = *v41;
      v49 = v41[1];
      v51 = v41[2];
      sub_23F6B54F8();
      sub_23F77E600();
      v52 = (uint64_t)v41;
      v53 = v50;
      sub_23FB29AB4(v52);
      sub_23F77DD24(v54, &qword_256EB1C30);
      v55 = v48;
      v4 = v47;
      sub_23FB29AB4(v55);
    }
    v56 = v69;
    v57 = v42 + *(int *)(v69 + 20);
    v58 = sub_23F72E034();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v57, 1, 1, v58);
    v59 = (_QWORD *)(v42 + *(int *)(v56 + 24));
    *v59 = 0;
    v59[1] = 0;
    v59[2] = 0;
    sub_23FB2A318(v4, v60, type metadata accessor for RequestContent);
    sub_23FB29C34(v67, v61, &qword_256EA2798);
    sub_23FB2ACB0();
    *v59 = v53;
    v59[1] = v49;
    v59[2] = v51;
    sub_23FB2A468(v42, v62, type metadata accessor for ExternalAgentRequest);
    v24 = type metadata accessor for TranscriptProtoExternalAgentRequest;
    v25 = v68;
  }
LABEL_14:
  sub_23F6F8C88(v25, v24);
  sub_23F6B6834();
  sub_23F6B5100();
}

void ExternalAgentOutcome.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;

  sub_23F6B5220();
  v5 = v4;
  v7 = sub_23FB29B20(v6);
  type metadata accessor for TranscriptProtoStatementOutcome(v7);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  v30 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_23FB29BD4();
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B58C8();
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v14);
  v15 = sub_23F78F260();
  type metadata accessor for TranscriptProtoExternalAgentOutcome(v15);
  sub_23FB2AC20();
  sub_23F77B8C8();
  if (v0)
  {
    sub_23FB297C0(v16, type metadata accessor for TranscriptProtoExternalAgentOutcome);
  }
  else
  {
    v26 = v1;
    v27 = v3;
    sub_23F6B90D8();
    v17 = sub_23FB29BF4();
    sub_23FB297B8(v17, type metadata accessor for TranscriptProtoStatementID);
    sub_23F77BF70();
    sub_23FB2A908();
    StatementOutcome.init(transcript:)();
    v18 = v27;
    v19 = *v5;
    v20 = sub_23F6B5508();
    sub_23FB297D8(v20, type metadata accessor for TranscriptProtoExternalAgentOutcome);
    v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32);
    v22 = v29;
    sub_23F6D3ECC(v29, v2, v21);
    v23 = type metadata accessor for ExternalAgentOutcome(0);
    v24 = sub_23FB2AAC8(v23);
    sub_23FB2AD24(v24, (uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v26 + 32));
    *(_QWORD *)(v22 + *(int *)(v23 + 24)) = v19;
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void ExternalAgentRequestRewriteMetadata.init(transcript:)(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  sub_23F6B5F1C();
  v6 = sub_23F6B6548();
  sub_23FB2AB04(v6, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  *a2 = v4;
  a2[1] = v3;
  a2[2] = v5;
  sub_23F6D377C();
}

void ToolResolution.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  sub_23F6B5220();
  v38 = v6;
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  v41 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v9);
  v42 = (char *)v35 - v10;
  v11 = sub_23F6B58C8();
  v39 = *(_QWORD *)(v11 - 8);
  v40 = v11;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F78F404();
  v43 = *(_QWORD *)(sub_23FB2EBC4() - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v35 - v16;
  sub_23FB299D0();
  v18 = sub_23FB2E8D0();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v19);
  sub_23FB2A3B8();
  sub_23F77BD34();
  if (v1)
  {
    sub_23FB297B0(v20, type metadata accessor for TranscriptProtoToolResolution);
  }
  else
  {
    v36 = v3;
    v37 = v18;
    v35[0] = v0;
    v35[1] = v2;
    v21 = v43;
    sub_23F759774(v4, (uint64_t)v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 16));
    sub_23FB2E8C4();
    v22 = v5;
    sub_23F6B56E0((uint64_t)v17, *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
    type metadata accessor for TranscriptProtoToolResolution(0);
    v23 = (unsigned int *)v42;
    sub_23FB29BE4();
    v24 = *v23;
    sub_23F77E600();
    v25 = sub_23FB29D40();
    sub_23FB297B8(v25, type metadata accessor for TranscriptProtoStatementID);
    v26 = v41;
    sub_23FB29BE4();
    v29 = v36;
    v28 = v37;
    if (v24)
    {
      sub_23FB297A8(v27, type metadata accessor for TranscriptProtoToolResolution);
      sub_23FB2A5F4(v39);
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v22, v28);
    }
    else
    {
      sub_23F6B6548();
      v30 = v35[0];
      v31 = sub_23FB29960();
      sub_23FB297B8(v31, type metadata accessor for TranscriptProtoStatementID);
      sub_23FB297A8(v32, type metadata accessor for TranscriptProtoToolResolution);
      v33 = v38;
      sub_23F75E68C(v38, v22, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 32));
      v34 = type metadata accessor for ToolResolution(0);
      sub_23FB29F5C(v34);
      sub_23FB2A1BC(v33 + *((int *)v26 + 6), v30);
    }
  }
  sub_23F877A30();
  sub_23F6B5100();
}

void UndoRedoRequest.init(transcript:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;

  sub_23F6B5220();
  v5 = sub_23FB29D30();
  v47 = type metadata accessor for UndoRedoRequest(v5);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B5420(v8, v42);
  sub_23F6916B8(&qword_256EA49D8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  v49 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  v12 = sub_23F6B58C8();
  v45 = *(_QWORD *)(v12 - 8);
  v46 = v12;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  sub_23FB298C8(v14, v42);
  sub_23F6916B8(&qword_256EA2798);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F77DC18();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B5F5C();
  v17 = v1[1];
  v18 = v1[4];
  v44 = *v1;
  if (v18)
  {
    v0 = v1[3];
    sub_23F6B90D8();
    sub_23F77E1FC();
    sub_23FB2A5DC();
    sub_23FB2C47C();
    sub_23FB2ACBC();
    sub_23F77DC10(v19, &qword_256EA2798);
    if (v0)
    {
      v20 = sub_23F717D54();
      sub_23FB297A8(v20, type metadata accessor for TranscriptProtoUndoRedoRequest);
      sub_23F6B6E44();
      goto LABEL_9;
    }
    v24 = sub_23F72E034();
    sub_23F78F2E4(v4, 0, v25, v24);
    sub_23F6B6E44();
  }
  else
  {
    v21 = sub_23F72E034();
    sub_23F6B5A8C(v4, v22, v23, v21);
    sub_23F6B90D8();
  }
  v43 = *((unsigned __int8 *)v1 + 16);
  v26 = type metadata accessor for TranscriptProtoUndoRedoRequest(0);
  sub_23FB29D7C();
  if (v0)
  {
    v27 = sub_23F717D54();
    sub_23FB297A8(v27, type metadata accessor for TranscriptProtoUndoRedoRequest);
    sub_23F77E3DC(v28, &qword_256EA2798);
  }
  else
  {
    v42 = v2;
    sub_23F6B6548();
    v29 = sub_23FB29960();
    sub_23FB297EC(v29, type metadata accessor for TranscriptProtoStatementID);
    sub_23FB2A274((uint64_t)v1 + *(int *)(v26 + 32), v30, &qword_256EA25E0);
    sub_23FB2ABC8();
    sub_23F77AA78();
    v31 = v47;
    v32 = (uint64_t)v3 + *(int *)(v47 + 20);
    v33 = sub_23F72E034();
    sub_23F6B5A8C(v32, v34, v35, v33);
    sub_23F693EC8();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v36, v37, v38, v46);
    *v3 = v44;
    v3[1] = v17;
    sub_23FB29BEC(v4, v39, &qword_256EA2798);
    *((_BYTE *)v3 + *(int *)(v31 + 24)) = v43;
    sub_23F77DB9C((uint64_t)v3 + *(int *)(v31 + 28), v48, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v45 + 32));
    sub_23FB29D9C((uint64_t)v49, v40, &qword_256EA49D8);
    sub_23F6F594C((uint64_t)v3, v42, type metadata accessor for UndoRedoRequest);
    sub_23FB297A8(v41, type metadata accessor for TranscriptProtoUndoRedoRequest);
  }
LABEL_9:
  sub_23F77DB18();
  sub_23F6B5100();
}

void ClientUndoRedoRequest.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;

  sub_23F6B5220();
  v6 = v5;
  v40 = v7;
  v39 = type metadata accessor for ClientUndoRedoRequest(0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B537C(v9, v31);
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23FB298C8(v11, v31);
  sub_23F6916B8(&qword_256EA49D8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  v41 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  v38 = sub_23F6B58C8();
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F78F27C();
  v16 = sub_23FB2C4B8();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B5298();
  sub_23F6B5D98();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B59F8();
  sub_23FB29F48();
  sub_23FB2AC38();
  v19 = sub_23F7D24F0();
  sub_23F6B4F84(v19, v20);
  if (v1)
  {
    v30 = v6;
  }
  else
  {
    v34 = v0;
    v35 = v3;
    v36 = v16;
    v33 = v4;
    v22 = (uint64_t)v41;
    v21 = v42;
    v32 = *(unsigned __int8 *)(v6 + 16);
    type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
    sub_23FB2AFDC();
    sub_23FB2A824();
    v23 = v6;
    sub_23F6B6254();
    v31 = v2;
    v24 = sub_23FB2A570();
    sub_23FB297EC(v24, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6B4F58(v6 + dword_256EA27B4, v21, &qword_256EA25E0);
    sub_23F77AA78();
    v25 = v39;
    v26 = v37;
    sub_23F7A690C(v37 + *(int *)(v39 + 28), 1);
    sub_23FB2A888(v26, v34, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v35 + 32));
    *(_BYTE *)(v26 + *(int *)(v25 + 20)) = v32;
    sub_23F759774(v26 + *(int *)(v25 + 24), v31, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 32));
    sub_23FB29BEC(v22, v27, &qword_256EA49D8);
    sub_23FB2A6A0(v28, v29, type metadata accessor for ClientUndoRedoRequest);
    v30 = v23;
  }
  sub_23F6F8C88(v30, type metadata accessor for TranscriptProtoClientUndoRedoRequest);
  sub_23F876FC4();
  sub_23F6B5100();
}

void TypeConversionRequest.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;

  sub_23F6B5220();
  v49 = v3;
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v4);
  v52 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F6B58C8();
  v47 = *(_QWORD *)(v6 - 8);
  v48 = v6;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23FB29AE8(v8, v42);
  v9 = sub_23FB2EB28();
  v54 = *(_QWORD *)(v9 - 8);
  v55 = v9;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v53 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v12);
  v56 = (char *)&v42 - v13;
  v51 = sub_23FB2A6D8();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = *(_QWORD *)(sub_23F6B632C() - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v42 - v19;
  v21 = sub_23F6B6634();
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6B5208();
  sub_23F77B844();
  if (v0)
  {
    sub_23FB297B0(v23, type metadata accessor for TranscriptProtoTypeConversionRequest);
  }
  else
  {
    v45 = v2;
    v46 = v21;
    v43 = v1;
    v44 = v16;
    v24 = v57;
    v25 = sub_23F6B5FE0();
    sub_23F75E710(v25, v26, v27);
    sub_23FB2ED2C();
    sub_23F6B51EC((uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
    type metadata accessor for TranscriptProtoTypeConversionRequest(0);
    v28 = (uint64_t)v56;
    sub_23F77BAF8();
    v29 = v54;
    v30 = sub_23FB2A28C();
    sub_23F6D3ECC(v30, v31, v32);
    v33 = (uint64_t)v44;
    sub_23FB2AC08();
    sub_23FB2ED50();
    sub_23F7B0990(v28, *(uint64_t (**)(uint64_t, uint64_t))(v29 + 8));
    sub_23FB2ADD4();
    sub_23F6B54F8();
    v34 = sub_23FB299DC();
    sub_23FB297C0(v34, type metadata accessor for TranscriptProtoStatementID);
    sub_23FB297A8(v35, type metadata accessor for TranscriptProtoTypeConversionRequest);
    v36 = v49;
    v37 = sub_23F77E19C();
    sub_23F78F5D0(v37, v38, v39);
    v40 = type metadata accessor for TypeConversionRequest(0);
    v41 = sub_23FB2A63C(v40);
    sub_23FB2A888(v41, v33, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v43 + 32));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v36 + *(int *)(v40 + 24), v50, v48);
  }
  sub_23F6B6CA0();
  sub_23F6B5100();
}

void TypeConversionResult.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;

  sub_23F6B5220();
  v39 = v5;
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  v42 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v8);
  v43 = (char *)v36 - v9;
  v10 = sub_23F6B58C8();
  v40 = *(_QWORD *)(v10 - 8);
  v41 = v10;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v36 - v13;
  v44 = *(_QWORD *)(sub_23F6B632C() - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v36 - v17;
  v19 = sub_23F6B6634();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v20);
  sub_23FB2A3B8();
  sub_23F77B844();
  if (v1)
  {
    sub_23FB297B0(v21, type metadata accessor for TranscriptProtoTypeConversionResult);
  }
  else
  {
    v37 = v2;
    v38 = v19;
    v36[0] = v0;
    v36[1] = v14;
    v22 = v44;
    sub_23F759774(v3, (uint64_t)v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 16));
    sub_23FB2ED2C();
    v23 = v4;
    sub_23F6B56E0((uint64_t)v18, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
    type metadata accessor for TranscriptProtoTypeConversionResult(0);
    v24 = (unsigned int *)v43;
    sub_23FB29BE4();
    v25 = *v24;
    sub_23F77E600();
    v26 = sub_23FB29D40();
    sub_23FB297B8(v26, type metadata accessor for TranscriptProtoStatementID);
    v27 = v42;
    sub_23FB29BE4();
    v30 = v37;
    v29 = v38;
    if (v25)
    {
      sub_23FB297A8(v28, type metadata accessor for TranscriptProtoTypeConversionResult);
      sub_23FB2A5F4(v40);
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v23, v29);
    }
    else
    {
      sub_23F6B6548();
      v31 = v36[0];
      v32 = sub_23FB29960();
      sub_23FB297B8(v32, type metadata accessor for TranscriptProtoStatementID);
      sub_23FB297A8(v33, type metadata accessor for TranscriptProtoTypeConversionResult);
      v34 = v39;
      sub_23F75E68C(v39, v23, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 32));
      v35 = type metadata accessor for TypeConversionResult(0);
      sub_23FB29F5C(v35);
      sub_23FB2A1BC(v34 + *((int *)v27 + 6), v31);
    }
  }
  sub_23F877A30();
  sub_23F6B5100();
}

#error "23FAFC018: call analysis failed (funcsize=110)"

void ContinuePlanning.init(transcript:)(uint64_t a1)
{
  sub_23F6F8C88(a1, type metadata accessor for TranscriptProtoContinuePlanning);
}

void QueryDecorationPrePlannerResult.init(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t DecorationPrePlannerResult;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  sub_23F6B5220();
  v14 = v13;
  v16 = sub_23FB29BA4(v15);
  type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(v16);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  v18 = sub_23F78F260();
  type metadata accessor for TranscriptProtoStatementID(v18);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F6B58C8();
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v20);
  v21 = sub_23F6B51D0();
  type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(v21);
  sub_23FB2AABC();
  sub_23F77B8C8();
  if (v10)
  {
    sub_23FB297A8(v22, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult);
  }
  else
  {
    sub_23F6B5508();
    sub_23FB29EB0();
    v23 = sub_23FB2AD7C();
    sub_23FB297EC(v23, type metadata accessor for TranscriptProtoStatementID);
    v24 = *v14;
    v25 = v14[1];
    sub_23F77E584();
    sub_23F77BB24();
    QueryDecorationPrePlannerResultPayload.init(transcript:)();
    sub_23FB297A8(v26, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult);
    sub_23F75E68C(a10, v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 32));
    DecorationPrePlannerResult = type metadata accessor for QueryDecorationPrePlannerResult(0);
    v28 = (_QWORD *)(a10 + *(int *)(DecorationPrePlannerResult + 20));
    *v28 = v24;
    v28[1] = v25;
    v29 = a10 + *(int *)(DecorationPrePlannerResult + 24);
    *(_QWORD *)v29 = v30;
    *(_BYTE *)(v29 + 8) = v31;
  }
  sub_23F876B60();
  sub_23F6B5100();
}

void sub_23FAFC314()
{
  Session.Event.Payload.init(transcript:)();
}

uint64_t sub_23FAFC328()
{
  return sub_23FAE7A94();
}

void TranscriptProtoSessionStart.init(handwritten:)()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_23F6B50E8();
  v6 = v5;
  v8 = sub_23FB29ABC(v7);
  v9 = type metadata accessor for TranscriptProtoSessionStart(v8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5864();
  v24 = sub_23FB2C908();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B573C();
  sub_23F6916B8(&qword_256EA86C0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B51D0();
  sub_23FB2C998();
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA86D0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B6B5C();
  v15 = sub_23F7D24F0();
  v16(v15);
  TranscriptProtoLocaleSettings.init(handwritten:)();
  v17 = type metadata accessor for TranscriptProtoLocaleSettings(0);
  v18 = sub_23FB298EC(v0, 0, 1, v17);
  v19 = type metadata accessor for SessionStart(v18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v4, v6 + *(int *)(v19 + 20), v24);
  TranscriptProtoDeviceDetails.init(handwritten:)();
  type metadata accessor for TranscriptProtoDeviceDetails(0);
  sub_23F6B9258(v2, 0);
  v20 = *(_BYTE *)(v6 + *(int *)(v19 + 24));
  v21 = (uint64_t)&v1[*(int *)(v9 + 20)];
  sub_23F77DD6C(v21, 1);
  sub_23F6B9258((uint64_t)&v1[*(int *)(v9 + 24)], 1);
  sub_23F6F0BB0();
  sub_23F710E80(v0, v21, &qword_256EA86D0);
  v22 = sub_23F6B69B8();
  sub_23F710E80(v22, v23, &qword_256EA86C0);
  *v1 = v20;
  sub_23F6F594C((uint64_t)v1, v25, type metadata accessor for TranscriptProtoSessionStart);
  sub_23F6F8C88(v6, type metadata accessor for SessionStart);
  sub_23F693DDC();
}

void TranscriptProtoTextQuery.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;

  sub_23F6B5220();
  v3 = v2;
  v5 = v4;
  v6 = sub_23F6B58C8();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B59E0();
  v24 = *(_QWORD *)v3;
  v22 = *(_QWORD *)(v3 + 8);
  v23 = *(_BYTE *)(v3 + 16);
  v21 = sub_23FB2ABA8();
  sub_23F77DD54(v0, v3 + *(int *)(v21 + 24), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
  sub_23F6B5508();
  sub_23FB2C758();
  v10 = sub_23FB2A444();
  v12 = v11;
  sub_23FAD69A0();
  sub_23FAC3DD4();
  *(_DWORD *)v1 = v7;
  *(_QWORD *)(v1 + 8) = v10;
  *(_QWORD *)(v1 + 16) = v12;
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0, v20);
  sub_23FB298A8(v1, 0);
  v13 = (uint64_t *)(v3 + *(int *)(v21 + 28));
  v15 = *v13;
  v14 = v13[1];
  v16 = sub_23FB2ABB8();
  sub_23FB298A8(v5 + *(int *)(v16 + 24), 1);
  v17 = (_QWORD *)(v5 + *(int *)(v16 + 28));
  *v17 = 0;
  v17[1] = 0;
  sub_23F6B5508();
  sub_23FAD7510();
  *(_QWORD *)v5 = v24;
  *(_QWORD *)(v5 + 8) = v22;
  *(_BYTE *)(v5 + 16) = v23;
  v18 = sub_23F78F560();
  sub_23F710E80(v18, v19, &qword_256EA25E0);
  swift_bridgeObjectRelease();
  *v17 = v15;
  v17[1] = v14;
  sub_23F6F8C88(v3, type metadata accessor for TextQuery);
  sub_23FB29EE0();
  sub_23F6B5100();
}

#error "23FAFC69C: call analysis failed (funcsize=26)"

void TranscriptProtoRequest.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;

  sub_23F6B5220();
  sub_23FB2B09C();
  sub_23F6916B8(&qword_256EB1C30);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F693EB0();
  sub_23F6916B8(&qword_256EA2798);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA8698);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_23F6B51D0();
  type metadata accessor for RequestContent(v8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B573C();
  sub_23F6916B8(&qword_256EA86A0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B59E0();
  sub_23F78F5C8(v0, v4);
  TranscriptProtoRequestContent.init(handwritten:)();
  if (!v2)
  {
    v12 = type metadata accessor for TranscriptProtoRequestContent(0);
    v13 = sub_23FB298EC(v3, 0, 1, v12);
    v14 = type metadata accessor for Request(v13);
    v15 = *(int *)(v14 + 24);
    v16 = *(_BYTE *)(v0 + v15 + 16);
    sub_23F83C1AC(*(_QWORD *)(v0 + v15), *(_QWORD *)(v0 + v15 + 8), v16);
    sub_23FB2AC08();
    sub_23F77D5E0(v16, v17);
    sub_23FB2A274(v0 + *(int *)(v14 + 28), v18, &qword_256EA2798);
    v19 = sub_23F72E034();
    v20 = sub_23F6B5164(v1, 1, v19);
    if (v21)
    {
      sub_23F77DC10(v20, &qword_256EA2798);
    }
    else
    {
      sub_23FB2C488();
      sub_23F6B6420(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8));
    }
    sub_23FB29EEC();
    sub_23F7893FC(v22, v23);
    sub_23FB29EEC();
    sub_23F77CA64(v24, v25, v26, v27);
    TranscriptProtoRequest.init(content:safetyMode:prescribedPlan:rawRewriteMetadataEventID:rewriteMetadataInlined:)();
  }
  sub_23FB297B8(v11, type metadata accessor for Request);
  sub_23F877A30();
  sub_23F6B5100();
}

void TranscriptProtoPlan.init(handwritten:)(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = a1[1];
  v12 = *a1;
  v6 = a1[3];
  v11 = a1[2];
  v7 = a1[5];
  v8 = a1[6];
  v9 = *((_BYTE *)a1 + 56);
  sub_23F6B54F8();
  sub_23F6B6548();
  sub_23F6B90D8();
  sub_23FACC97C();
  if (v2)
  {
    sub_23F717D54();
    sub_23F6B6740();
    sub_23F6B6740();
    sub_23F693E04();
  }
  else
  {
    v10 = sub_23FB2A058();
    type metadata accessor for TranscriptProtoPlan(v10);
    sub_23F6B5508();
    sub_23FAD7510();
    sub_23F693E04();
    sub_23F717D54();
    sub_23F6B6090();
    sub_23F693DFC();
    *(_QWORD *)a2 = v12;
    *(_QWORD *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v11;
    *(_QWORD *)(a2 + 24) = v6;
    *(_QWORD *)(a2 + 32) = v3;
    *(_QWORD *)(a2 + 40) = v7;
    *(_QWORD *)(a2 + 48) = v8;
    *(_BYTE *)(a2 + 56) = v9;
  }
  sub_23F6D3B40();
}

void TranscriptProtoRecoverableError.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F6B5220();
  v4 = v3;
  v6 = sub_23FB29ABC(v5);
  type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(v6);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23FB2A0D0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23F70D7F8();
  v40 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(v9);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5CD4();
  v12 = MEMORY[0x24BDAC7A8](v11);
  sub_23FB2AFF4(v12, v13, v14, v15, v16, v17, v18, v19, v38);
  v21 = *v4;
  v20 = v4[1];
  v22 = v4[2];
  v23 = v4[3];
  v24 = v4[4];
  v25 = v4[5];
  sub_23FB2A6F8();
  sub_23F6B6548();
  sub_23F6B5F1C();
  sub_23F77DCD4();
  sub_23FAD7510();
  *v2 = v21;
  v2[1] = v20;
  v2[2] = v22;
  v2[3] = v23;
  v2[4] = v24;
  v2[5] = v25;
  sub_23F693EC8();
  sub_23FB2999C(v26, v27, v28);
  v29 = sub_23FAC3CEC();
  sub_23F77DD64(v29, &qword_256EA8678);
  v30 = sub_23F6D3F0C();
  sub_23F6F594C(v30, v31, type metadata accessor for TranscriptProtoPlanGenerationErrorEnum);
  sub_23F7A690C(v1, 0);
  v32 = sub_23F6D3D70();
  sub_23F6F594C(v32, v33, type metadata accessor for TranscriptProtoPlanGenerationError);
  sub_23F6B644C();
  sub_23F6B5908();
  sub_23F6B6090();
  sub_23FAD6D50(v0, v39);
  v34 = sub_23FB298EC(v41, 1, 1, v40);
  type metadata accessor for TranscriptProtoRecoverableError(v34);
  v35 = sub_23F6F0878();
  sub_23F77E660(v35, &qword_256EA8688);
  v36 = sub_23F7D2958();
  sub_23FAD6D50(v36, v37);
  sub_23F77DD6C(v41, 0);
  sub_23FB29EE0();
  sub_23F6B5100();
}

void TranscriptProtoAction.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  sub_23F6B5220();
  v6 = v5;
  sub_23F6B58C8();
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F693EB0();
  sub_23F6B633C(v0, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  sub_23FB2C758();
  v9 = sub_23FB2A444();
  v11 = v10;
  v12 = sub_23FAD69A0();
  sub_23FAC3044();
  *(_DWORD *)v2 = v3;
  *(_QWORD *)(v2 + 8) = v9;
  *(_QWORD *)(v2 + 16) = v11;
  sub_23F6B530C(v0, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  v13 = sub_23FB298EC(v2, 0, 1, v12);
  v14 = (int *)type metadata accessor for Action(v13);
  v15 = (uint64_t *)(v6 + v14[5]);
  v16 = *v15;
  v17 = v15[1];
  v18 = (uint64_t *)(v6 + v14[6]);
  v19 = v18[1];
  v32 = v16;
  v33 = *v18;
  v20 = (uint64_t *)(v6 + v14[7]);
  v21 = v20[1];
  v30 = *v20;
  v31 = *(_BYTE *)(v6 + v14[8]);
  v22 = *(_QWORD *)(v6 + v14[9]);
  sub_23F77E600();
  sub_23F77DCD4();
  sub_23F77E584();
  sub_23F6B90D8();
  sub_23FB20740(v22);
  if (v1)
  {
    sub_23F756640();
    sub_23F717D54();
    sub_23F6B6A48();
    v24 = sub_23F6B644C();
    sub_23FB297B8(v24, type metadata accessor for Action);
    sub_23F77DD24(v25, &qword_256EA25E0);
  }
  else
  {
    v26 = v23;
    sub_23F6B644C();
    v27 = *(_QWORD *)(v6 + v14[10]);
    v28 = swift_bridgeObjectRetain();
    TranscriptProtoAction.init(statementID:toolID:bundleID:deviceID:isConfirmed:parameterValues:planEventID:)(v2, v32, v17, v33, v19, v30, v21, v31, v26, v27, v28);
    sub_23FB297B8(v29, type metadata accessor for Action);
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void TranscriptProtoClientAction.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;

  sub_23F6B5220();
  v5 = v4;
  v38 = v6;
  sub_23F6B58C8();
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B52B0();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23F77E1CC();
  v10 = (int *)type metadata accessor for ClientAction(v9);
  v11 = (uint64_t *)(v5 + v10[5]);
  v12 = *v11;
  v13 = v5;
  v39 = v11[1];
  swift_bridgeObjectRetain();
  v14 = sub_23F77E584();
  v15 = sub_23FB203D0(v14);
  v16 = sub_23F756640();
  if (v1)
  {
    sub_23FB297B8(v16, type metadata accessor for ClientAction);
    swift_bridgeObjectRelease();
  }
  else
  {
    v35 = v12;
    v36 = v0;
    v37 = v15;
    v17 = v10[8];
    v18 = (uint64_t *)(v13 + v10[7]);
    v19 = v18[1];
    v34 = *v18;
    v21 = *(_QWORD *)(v13 + v17);
    v20 = *(_QWORD *)(v13 + v17 + 8);
    sub_23F77DCD4();
    sub_23F77E584();
    sub_23F6B54F8();
    sub_23FB22DB8();
    v23 = v22;
    sub_23F756640();
    sub_23F6B633C(v2, v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
    v32 = sub_23FB2C758();
    v33 = v21;
    v24 = sub_23FB2C740();
    v31 = v25;
    v26 = sub_23FAD69A0();
    sub_23FAD7240();
    *(_DWORD *)v36 = v32;
    *(_QWORD *)(v36 + 8) = v24;
    *(_QWORD *)(v36 + 16) = v31;
    sub_23F6B530C(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    v27 = sub_23FB298EC(v36, 0, 1, v26);
    v28 = (uint64_t)v38 + *(int *)(type metadata accessor for TranscriptProtoClientAction(v27) + 36);
    sub_23F6B9258(v28, 1);
    sub_23F6F0BB0();
    *v38 = v35;
    v38[1] = v39;
    v38[4] = v34;
    v38[5] = v19;
    v38[6] = v33;
    v38[7] = v20;
    v38[2] = v37;
    v38[3] = v23;
    sub_23FB2A004(v36, v29, &qword_256EA25E0);
    sub_23FB297B8(v30, type metadata accessor for ClientAction);
  }
  sub_23F876B60();
  sub_23F6B5100();
}

void TranscriptProtoQueryStep.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*Step)(uint64_t);
  char *v35;
  uint64_t v36;

  sub_23F6B5220();
  v5 = v4;
  v7 = sub_23FB29ABC(v6);
  Step = (uint64_t (*)(uint64_t))type metadata accessor for TranscriptProtoQueryStep(v7);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  v35 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B58C8();
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F78F5D0(v1, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16));
  sub_23FB2C758();
  v14 = sub_23FB2A848();
  v16 = v15;
  v17 = sub_23FAD69A0();
  sub_23FAC3DD4();
  *(_DWORD *)v13 = v3;
  *((_QWORD *)v13 + 1) = v14;
  *((_QWORD *)v13 + 2) = v16;
  sub_23F6B6420(v1, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  v18 = sub_23FB298EC((uint64_t)v13, 0, 1, v17);
  type metadata accessor for QueryStep(v18);
  v19 = swift_bridgeObjectRetain();
  sub_23FACD18C(v19, v20, v21, v22, v23, v24, v25, v26, v33, Step);
  if (v2)
  {
    sub_23FB297C8(v27, type metadata accessor for QueryStep);
    sub_23F77E3DC(v28, &qword_256EA25E0);
  }
  else
  {
    v29 = v27;
    v30 = (uint64_t *)v35;
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v35[*((int *)Step + 5)], 1, 1, v17);
    sub_23F6F0878();
    sub_23FB29BB0((uint64_t)v13, v31, &qword_256EA25E0);
    *v30 = v29;
    sub_23F6F594C((uint64_t)v30, v36, type metadata accessor for TranscriptProtoQueryStep);
    sub_23FB297C8(v32, type metadata accessor for QueryStep);
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void TranscriptProtoVariableStep.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  sub_23F6B5220();
  v6 = sub_23FB2AE40();
  v7 = (uint64_t (*)(uint64_t))type metadata accessor for TranscriptProtoVariableStep(v6);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23F6B58C8();
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23F78F260();
  type metadata accessor for VariableStep(v13);
  v14 = swift_bridgeObjectRetain();
  sub_23FACEF64(v14, v15, v16, v17, v18, v19, v20, v21, v31, v32);
  if (v4)
  {
    v23 = v2;
  }
  else
  {
    v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16);
    v34 = v22;
    sub_23F78F5D0(v1, v2, v24);
    HIDWORD(v31) = sub_23FB2C758();
    v25 = sub_23FB2C740();
    v32 = v7;
    v26 = v25;
    v35 = v2;
    v28 = v27;
    sub_23FAD69A0();
    v33 = v3;
    sub_23FB2AC14();
    sub_23FAC3DD4();
    *(_DWORD *)v5 = HIDWORD(v31);
    *(_QWORD *)(v5 + 8) = v26;
    *(_QWORD *)(v5 + 16) = v28;
    sub_23F6B6420(v1, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    sub_23F7D2ED8(v5, 0);
    sub_23F7D2ED8((uint64_t)v10 + *((int *)v32 + 5), 1);
    sub_23FAC3044();
    *v10 = v34;
    sub_23FB29BEC(v5, v29, &qword_256EA25E0);
    sub_23FB29DDC((uint64_t)v10, v30, type metadata accessor for TranscriptProtoVariableStep);
    v23 = v35;
  }
  sub_23F6F8C88(v23, type metadata accessor for VariableStep);
  sub_23F6B6834();
  sub_23F6B5100();
}

void TranscriptProtoSessionError.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22[9];
  uint64_t v23;

  sub_23F6B50E8();
  v22[8] = v2;
  v23 = v1;
  v22[6] = type metadata accessor for TranscriptProtoSessionError(0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v3);
  v5 = sub_23FB29F94(v4, v22[0]);
  v22[3] = *(_QWORD *)(v5 - 8);
  v22[4] = v5;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  v22[2] = (uint64_t)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v8);
  v22[1] = (uint64_t)v22 - v9;
  sub_23F6D398C();
  type metadata accessor for ExecutorError();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  v22[5] = (uint64_t)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F78F404();
  type metadata accessor for PlannerError();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B5CD4();
  MEMORY[0x24BDAC7A8](v14);
  sub_23FB29970();
  type metadata accessor for SessionCoordinatorError();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v16);
  sub_23FB2997C();
  type metadata accessor for SessionError();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  v18 = sub_23F876970();
  type metadata accessor for TranscriptProtoSessionErrorEnum(v18);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F77DC18();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B62F8();
  sub_23F6F5920(v23, v0, (uint64_t (*)(_QWORD))type metadata accessor for SessionError);
  v21 = (char *)sub_23FAFD430 + 4 * byte_23FB92AB8[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23FAFD430()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(v4 - 136);
  v6 = *(_QWORD *)(v4 - 152);
  sub_23F759774(v6, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
  sub_23F759774(*(_QWORD *)(v4 - 144), v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  sub_23FB2A5DC();
  TranscriptProtoIntelligenceFlowError.init(handwritten:)();
  v7 = sub_23F878320();
  v8(v7);
  v9 = *(_QWORD *)(v4 - 96);
  v10 = *(_QWORD *)(v4 - 88);
  v11 = *(_QWORD *)(v4 - 104);
  sub_23F6B689C();
  swift_storeEnumTagMultiPayload();
  sub_23F77E2AC(v0, v3);
  sub_23F77E598(v11, 1);
  sub_23FAC3DD4();
  sub_23F6F8C88(v10, (uint64_t (*)(_QWORD))type metadata accessor for SessionError);
  sub_23FB2A8B0(v11, v12, type metadata accessor for TranscriptProtoSessionError);
  sub_23F6B4F84(v9, &qword_256EA8668);
  sub_23F77E2AC(v3, v9);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v9, 0, 1, v2);
  sub_23F693DDC();
}

void TranscriptProtoSystemPromptResolution.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;

  sub_23F6B5220();
  v7 = v6;
  v9 = sub_23FB29ED4(v8);
  type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(v9);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23FB298C8(v11, v62);
  sub_23F6916B8(&qword_256EA8648);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  v74 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F6B58C8();
  v71 = *(_QWORD *)(v14 - 8);
  v72 = v14;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B52B0();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  v17 = sub_23F78F27C();
  type metadata accessor for RequestContent.SystemPromptResolution.UserAction(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F693EB0();
  sub_23F6916B8(&qword_256EA8658);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F6B53AC();
  sub_23F6B5D98();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B59F8();
  v21 = v7;
  v22 = sub_23F6B5994();
  sub_23F6B6474(v22, v23);
  v24 = sub_23F72E034();
  v25 = sub_23F6B5164(v0, 1, v24);
  if (v26)
  {
    sub_23F77DC10(v25, &qword_256EA2798);
    v69 = 0;
    v28 = 0;
  }
  else
  {
    v69 = sub_23FB2C488();
    v28 = v27;
    sub_23F6B5900(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8));
  }
  type metadata accessor for RequestContent.SystemPromptResolution(0);
  sub_23FB2AFDC();
  sub_23F6F5920(v21 + v29, v3, type metadata accessor for RequestContent.SystemPromptResolution.UserAction);
  TranscriptProtoSystemPromptResolutionUserAction.init(handwritten:)();
  if (v1)
  {
    sub_23FB297D8(v30, type metadata accessor for RequestContent.SystemPromptResolution);
    sub_23F693E04();
  }
  else
  {
    v68 = v28;
    type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
    sub_23F73200C();
    v62 = v31;
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v32, v33, v34, v31);
    v35 = v21;
    v63 = sub_23FB2C488();
    v66 = v36;
    v67 = v5;
    v37 = v71;
    sub_23F6B633C(v2, v21 + *(int *)(v24 + 28), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v71 + 16));
    v64 = sub_23FB2C758();
    v38 = sub_23FB2C740();
    v65 = 0;
    v40 = v39;
    sub_23FAD69A0();
    sub_23F6F0CB4();
    *(_DWORD *)v4 = v64;
    *(_QWORD *)(v4 + 8) = v38;
    *(_QWORD *)(v4 + 16) = v40;
    sub_23F6B530C(v2, *(uint64_t (**)(uint64_t, uint64_t))(v37 + 8));
    sub_23FB298A8(v4, 0);
    v41 = v73;
    sub_23F6F5920(v35 + *(int *)(v24 + 32), v73, type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput);
    sub_23FB2AA68();
    v42 = v65;
    TranscriptProtoSystemPromptResolutionInput.init(handwritten:)();
    if (v42)
    {
      sub_23F877A48();
      v43 = swift_bridgeObjectRelease();
      sub_23FB297B8(v43, type metadata accessor for RequestContent.SystemPromptResolution);
      sub_23F6D378C(v44, &qword_256EA25E0);
      sub_23F6B4F84(v67, &qword_256EA8658);
    }
    else
    {
      v73 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
      v45 = sub_23FB298EC((uint64_t)v74, 0, 1, v73);
      type metadata accessor for TranscriptProtoSystemPromptResolution(v45);
      sub_23FB2AAE8();
      v46 = v70;
      sub_23F693EC8();
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v47, v48, v49, v62);
      sub_23FB298A8((uint64_t)v46 + *(int *)(v41 + 28), 1);
      v50 = (uint64_t)v46 + *(int *)(v41 + 32);
      v51 = sub_23FB29C44();
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v51, v52, v53, v73);
      sub_23FAC3074();
      v54 = v67;
      v55 = v68;
      v46[2] = v69;
      v46[3] = v55;
      sub_23FB29D9C(v54, v56, &qword_256EA8658);
      v57 = v66;
      *v46 = v63;
      v46[1] = v57;
      v58 = sub_23F7E7898();
      sub_23F710E80(v58, v59, v60);
      sub_23F710E80((uint64_t)v74, v50, &qword_256EA8648);
      sub_23FB297B8(v61, type metadata accessor for RequestContent.SystemPromptResolution);
    }
  }
  sub_23F8785C4();
  sub_23F6B5100();
}

void TranscriptProtoActionStepResult.init(handwritten:)()
{
  uint64_t v0;

  v0 = sub_23FB2B11C();
  sub_23FB297B0(v0, type metadata accessor for ActionStepResult);
  sub_23F694CC8();
}

void TranscriptProtoQueryStepResults.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t StepResults;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  sub_23F6B5220();
  v6 = sub_23FB2AE40();
  StepResults = type metadata accessor for TranscriptProtoQueryStepResults(v6);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23F6B58C8();
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B59E0();
  sub_23FB2A4E4();
  sub_23FAD0880();
  if (v4)
  {
    v14 = v2;
  }
  else
  {
    v35 = v13;
    v33 = type metadata accessor for QueryStepResults(0);
    v15 = sub_23FB2AF94();
    sub_23F78F5D0(v15, v16, v17);
    v30 = sub_23FB2C758();
    v18 = sub_23FB2C740();
    v31 = v2;
    v19 = v18;
    v34 = v3;
    v21 = v20;
    sub_23FAD69A0();
    v32 = StepResults;
    sub_23FAC3DD4();
    *(_DWORD *)v5 = v30;
    *(_QWORD *)(v5 + 8) = v19;
    *(_QWORD *)(v5 + 16) = v21;
    sub_23F6B6420(v1, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    sub_23FAD6AA4(v5, 0);
    v22 = v31;
    v23 = v31 + *(int *)(v33 + 24);
    sub_23FB2C488();
    sub_23F72E3E0();
    sub_23FAD6AA4((uint64_t)v10 + *(int *)(v32 + 24), 1);
    sub_23FAC3044();
    *v10 = v35;
    v24 = sub_23F78F560();
    sub_23F710E80(v24, v25, v26);
    v10[1] = v23;
    v10[2] = v19;
    sub_23FB2A6AC(v27, v28, type metadata accessor for TranscriptProtoQueryStepResults);
    v14 = v22;
  }
  sub_23F6F8C88(v14, type metadata accessor for QueryStepResults);
  sub_23F6B6834();
  sub_23F6B5100();
}

void TranscriptProtoActionResponse.init(handwritten:)()
{
  sub_23FB1001C();
}

void TranscriptProtoActionResolverRequest.init(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  unint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  void (*v134)(char *);
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  int v159;
  uint64_t v160;
  int64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  _QWORD *v180;
  char *v181;
  char *v182;
  char *v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t *v197;

  sub_23F6B5220();
  a19 = v23;
  a20 = v24;
  v26 = v25;
  v166 = v27;
  sub_23F6916B8(&qword_256EA2628);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v28);
  v184 = (char *)&v152 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v187 = sub_23F6916B8(&qword_256EA26F0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v30);
  v183 = (char *)&v152 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v32);
  v182 = (char *)&v152 - v33;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v34);
  v181 = (char *)&v152 - v35;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F6D3D14();
  v179 = v37;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F6D3D14();
  v180 = v39;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v40);
  v185 = (char *)&v152 - v41;
  v42 = type metadata accessor for TranscriptProtoParameter(0);
  v43 = *(_QWORD *)(v42 - 8);
  v177 = v42;
  v178 = v43;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v44);
  v176 = (char *)&v152 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v46);
  v175 = (uint64_t)&v152 - v47;
  v48 = sub_23F6B58C8();
  sub_23F6B53F8(v48, (uint64_t)&a12);
  v186 = v49;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v50);
  sub_23F6B5314((uint64_t)&v152 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v52);
  v165 = (char *)&v152 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_23F6D398C();
  v55 = type metadata accessor for TranscriptProtoParameterSet(v54);
  v168 = *(_QWORD *)(v55 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v56);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v57);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v58);
  sub_23F923EC8();
  sub_23F6916B8(&qword_256EAB750);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v59);
  v60 = sub_23F70D7F8();
  v61 = type metadata accessor for ActionResolverRequest(v60);
  v62 = (uint64_t *)(v26 + *(int *)(v61 + 20));
  v64 = *v62;
  v63 = v62[1];
  sub_23FB2AEE4();
  v66 = *(_QWORD *)(v26 + v65);
  sub_23F6B5F1C();
  sub_23F77DCD4();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_23FAE2D1C(v66);
  v195 = v21;
  if (v21)
  {
    sub_23F6B644C();
    sub_23F6B53A4();
    v68 = sub_23F6B61D0();
    v69(v68);
    sub_23FB29780(type metadata accessor for ActionResolverRequest, (uint64_t)&a15);
    sub_23F6B5908();
LABEL_41:
    sub_23F6B5100();
    return;
  }
  v70 = v67;
  v152 = v64;
  v156 = v63;
  sub_23F6B644C();
  *v20 = v70;
  sub_23FB2B0CC((uint64_t)v20, v71, type metadata accessor for TranscriptProtoParameterSet);
  sub_23FAD6AA4(v22, 0);
  v72 = *(_QWORD *)(*(_QWORD *)(v172 + *(int *)(v61 + 28)) + 16);
  v73 = (uint64_t *)MEMORY[0x24BEE4AF8];
  v157 = v22;
  v167 = v55;
  v153 = v61;
  if (!v72)
  {
    v151 = v61;
    v81 = v172;
    v79 = v186;
    v150 = v164;
LABEL_40:
    v135 = *(int *)(v151 + 40);
    LODWORD(v193) = *(unsigned __int8 *)(v81 + *(int *)(v151 + 36));
    LODWORD(v194) = *(unsigned __int8 *)(v81 + v135);
    sub_23F6B5EF0(v150, v81, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v79 + 16));
    sub_23FB2C758();
    v136 = sub_23FB2A848();
    v138 = v137;
    sub_23FAD69A0();
    sub_23FB2AC14();
    v139 = (uint64_t)v165;
    sub_23FAC3DD4();
    *(_DWORD *)v139 = v63;
    *(_QWORD *)(v139 + 8) = v136;
    *(_QWORD *)(v139 + 16) = v138;
    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v150, v169);
    sub_23F7D2ED8(v139, 0);
    v140 = *(_BYTE *)(v81 + *(int *)(v153 + 44));
    v141 = type metadata accessor for TranscriptProtoActionResolverRequest(0);
    v142 = v166;
    sub_23F693EC8();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v143, v144, v145, v167);
    sub_23F7D2ED8(v142 + *(int *)(v141 + 40), 1);
    sub_23F77E628();
    v146 = v156;
    *(_QWORD *)v142 = v152;
    *(_QWORD *)(v142 + 8) = v146;
    sub_23FB29BB0(v157, v147, &qword_256EAB750);
    *(_QWORD *)(v142 + 16) = v73;
    *(_BYTE *)(v142 + 24) = v193;
    *(_BYTE *)(v142 + 25) = v194;
    sub_23FB29D9C(v139, v148, &qword_256EA25E0);
    *(_BYTE *)(v142 + 26) = v140;
    sub_23FB297D8(v149, type metadata accessor for ActionResolverRequest);
    goto LABEL_41;
  }
  v197 = (uint64_t *)MEMORY[0x24BEE4AF8];
  v162 = swift_bridgeObjectRetain();
  v155 = v72;
  sub_23F7118D4();
  v74 = v162;
  v75 = sub_23FB2949C(v162);
  v163 = 0;
  v78 = v77 & 1;
  v158 = v74 + 56;
  v79 = v186;
  v80 = v168;
  v81 = (uint64_t)v73;
  while ((v75 & 0x8000000000000000) == 0 && v75 < 1 << *(_BYTE *)(v74 + 32))
  {
    if (((*(_QWORD *)(v158 + (((unint64_t)v75 >> 3) & 0xFFFFFFFFFFFFF8)) >> v75) & 1) == 0)
      goto LABEL_49;
    if (*(_DWORD *)(v74 + 36) != (_DWORD)v76)
      goto LABEL_50;
    v159 = v78;
    v160 = v76;
    v82 = *(_QWORD *)(v74 + 48);
    v161 = v75;
    v83 = *(_QWORD *)(v82 + 8 * v75);
    v73 = v170;
    v84 = (char *)v170 + *(int *)(v167 + 20);
    sub_23F6B91E8();
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    v85 = *(_QWORD *)(v83 + 16);
    if (v85)
    {
      v154 = v84;
      v196 = v81;
      sub_23F7116F4();
      v86 = sub_23F7AE664(v83);
      v88 = v187;
      v89 = (uint64_t)v185;
      if ((v86 & 0x8000000000000000) == 0 && v86 < 1 << *(_BYTE *)(v83 + 32))
      {
        v90 = v83 + 64;
        v174 = v83;
        v173 = v83 + 64;
        while ((*(_QWORD *)(v90 + 8 * ((unint64_t)v86 >> 6)) & (1 << v86)) != 0)
        {
          if (*(_DWORD *)(v83 + 36) != (_DWORD)v87)
            goto LABEL_43;
          v191 = 1 << v86;
          v192 = (unint64_t)v86 >> 6;
          v189 = v85;
          v190 = v87;
          v91 = v89 + *(int *)(v88 + 48);
          v92 = *(_QWORD *)(v83 + 56);
          v93 = *(_QWORD *)(v83 + 48) + 32 * v86;
          v94 = *(_QWORD *)v93;
          v95 = *(_QWORD *)(v93 + 8);
          v96 = *(_QWORD *)(v93 + 16);
          v97 = *(_BYTE *)(v93 + 24);
          *(_QWORD *)v89 = *(_QWORD *)v93;
          *(_QWORD *)(v89 + 8) = v95;
          *(_QWORD *)(v89 + 16) = v96;
          *(_BYTE *)(v89 + 24) = v97;
          v98 = sub_23F6B5AC8();
          v99 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for Candidate(v98) - 8) + 72);
          v193 = v90;
          sub_23F77DC5C(v92 + v99 * v90, v91);
          v100 = v180;
          *v180 = v94;
          v100[1] = v95;
          v100[2] = v96;
          *((_BYTE *)v100 + 24) = v97;
          sub_23F6F5920(v91, (uint64_t)v100 + *(int *)(v88 + 48), type metadata accessor for Candidate);
          v101 = (uint64_t)v100;
          v102 = v179;
          sub_23F6B4EC0(v101, v179, &qword_256EA26F0);
          sub_23F6B91E8();
          sub_23F6B64F4(v89);
          v103 = v102;
          v104 = v102 + *(int *)(v88 + 48);
          v105 = *(_QWORD *)v102;
          v106 = *(_QWORD *)(v102 + 8);
          v107 = *(_QWORD *)(v102 + 16);
          v108 = *(unsigned __int8 *)(v102 + 24);
          v109 = sub_23FB2ABE8();
          v194 = v110;
          sub_23F77DB78(v109, v110);
          v111 = (uint64_t)&v182[*(int *)(v88 + 48)];
          v112 = sub_23FB2ABE8();
          sub_23F77DB78(v112, v111);
          sub_23F77DCD4();
          sub_23FB29F00(v111);
          sub_23F77DB78(v104, (uint64_t)&v183[*(int *)(v88 + 48)]);
          v113 = (uint64_t)v184;
          v114 = v195;
          TranscriptProtoCandidate.init(handwritten:)();
          v195 = v114;
          if (v114)
          {
            sub_23F6B644C();
            sub_23F6F8C88(v194, type metadata accessor for Candidate);
            sub_23F77E660(v133, &qword_256EA26F0);
            sub_23F693DFC();
            sub_23F713F08();
            sub_23F6B53A4();
            sub_23F877770();
            v134(v154);
            sub_23F693DFC();
            sub_23F77DE3C();
            sub_23F713F08();
            sub_23FB29780(type metadata accessor for ActionResolverRequest, (uint64_t)&a15);
            sub_23F77DE3C();
            sub_23F6B4F84(v157, &qword_256EAB750);
            goto LABEL_41;
          }
          if (v108)
            v115 = 0;
          else
            v115 = v107;
          v188 = v115;
          v116 = type metadata accessor for TranscriptProtoCandidate(0);
          sub_23FB298A8(v113, 0);
          v117 = (uint64_t)v176;
          v118 = sub_23FB29C44();
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v118, v119, v120, v116);
          sub_23F6F0BB0();
          *(_QWORD *)v117 = v105;
          *(_QWORD *)(v117 + 8) = v106;
          *(_QWORD *)(v117 + 16) = v188;
          *(_BYTE *)(v117 + 24) = v108;
          v121 = sub_23F78F4B0();
          sub_23F710E80(v121, v122, &qword_256EA2628);
          v123 = v175;
          sub_23FAD7260(v117, v175);
          sub_23F70D6DC(v194);
          sub_23F6B4F84(v103, &qword_256EA26F0);
          v124 = v196;
          if ((sub_23F77D9A4() & 1) == 0)
          {
            sub_23FB29A98();
            sub_23F7116F4();
            v124 = v196;
          }
          v79 = v186;
          v125 = v187;
          v127 = *(_QWORD *)(v124 + 16);
          v126 = *(_QWORD *)(v124 + 24);
          if (v127 >= v126 >> 1)
          {
            sub_23FB2A8C8(v126);
            sub_23F7116F4();
            v124 = v196;
          }
          *(_QWORD *)(v124 + 16) = v127 + 1;
          sub_23F77DBC0();
          sub_23FAD7260(v123, v128);
          v83 = v174;
          if (v193 >= -(-1 << *(_BYTE *)(v174 + 32)))
            goto LABEL_45;
          v90 = v173;
          if ((*(_QWORD *)(v173 + 8 * v192) & v191) == 0)
            goto LABEL_46;
          if (*(_DWORD *)(v174 + 36) != (_DWORD)v190)
            goto LABEL_47;
          v86 = sub_23FB2F740();
          v85 = v189 - 1;
          if (v189 == 1)
          {
            sub_23F6B6090();
            v80 = v168;
            v73 = v170;
            v81 = MEMORY[0x24BEE4AF8];
            goto LABEL_32;
          }
          v88 = v125;
          v89 = (uint64_t)v185;
          if ((v86 & 0x8000000000000000) == 0)
          {
            v87 = *(unsigned int *)(v83 + 36);
            if (v86 < 1 << *(_BYTE *)(v83 + 32))
              continue;
          }
          goto LABEL_44;
        }
        __break(1u);
LABEL_43:
        __break(1u);
      }
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
      break;
    }
    sub_23F6B6090();
    v124 = v81;
LABEL_32:
    *v73 = v124;
    sub_23F6F594C((uint64_t)v73, v171, type metadata accessor for TranscriptProtoParameterSet);
    sub_23F6B6090();
    if ((sub_23FB2A4EC() & 1) == 0)
    {
      sub_23FAD71B0();
      sub_23F7118D4();
      v73 = v197;
    }
    v74 = v162;
    v63 = v73[2];
    v129 = v73[3];
    v130 = v171;
    if (v63 >= v129 >> 1)
    {
      sub_23F77DA64(v129);
      sub_23F7118D4();
      v74 = v162;
      v130 = v171;
      v73 = v197;
    }
    v131 = v163 + 1;
    v73[2] = v63 + 1;
    sub_23F6F594C(v130, (uint64_t)v73+ ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80))+ *(_QWORD *)(v80 + 72) * v63, type metadata accessor for TranscriptProtoParameterSet);
    v75 = sub_23FB247B4(v161, v160, v159 & 1, v74);
    v78 = v132 & 1;
    v163 = v131;
    LODWORD(v63) = 1;
    if (v131 == v155)
    {
      sub_23F7AE908(v75, v76, v78);
      sub_23F693DFC();
      v150 = v164;
      sub_23FB2AED8();
      goto LABEL_40;
    }
  }
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
}

void TranscriptProtoResponseGenerationRequest.init(handwritten:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_23FB06898(a1, (uint64_t (*)(_QWORD))sub_23FAD0AAC, a2);
}

void TranscriptProtoClientInitiatedClientAction.init(handwritten:)(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *a1;
  v4 = a1[1];
  sub_23F6B5508();
  v6 = sub_23F6B6548();
  v7 = sub_23FB203D0(v6);
  if (v2)
  {
    sub_23F6B6740();
    sub_23F6B6740();
  }
  else
  {
    v8 = v7;
    sub_23F6B6090();
    type metadata accessor for TranscriptProtoClientInitiatedClientAction(0);
    sub_23FAC3074();
    sub_23F6B6090();
    sub_23F693E04();
    *a2 = v5;
    a2[1] = v4;
    a2[2] = v8;
  }
  sub_23F6D3674();
}

uint64_t TranscriptProtoContextPrewarmRequest.init(handwritten:)()
{
  swift_bridgeObjectRelease();
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

void TranscriptProtoSafetyModeException.init(handwritten:)(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_23FB0286C(a1, type metadata accessor for TranscriptProtoSafetyModeException, a2);
}

void TranscriptProtoContextRetrieved.init(handwritten:)(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for TranscriptProtoContextRetrieved(0);
  sub_23F6F0878();
  v3 = MEMORY[0x24BEE4AF8];
  *a1 = MEMORY[0x24BEE4AF8];
  a1[1] = v3;
  sub_23F6B54F8();
  sub_23FAD0134();
  if (v1)
  {
    sub_23F6B6090();
    v5 = sub_23F693DFC();
    sub_23FB297B8(v5, type metadata accessor for TranscriptProtoContextRetrieved);
  }
  else
  {
    *a1 = v4;
    sub_23F6B6548();
    sub_23FAD0134();
    v7 = v6;
    sub_23F6B6090();
    sub_23F693DFC();
    a1[1] = v7;
  }
  sub_23F6D377C();
}

void TranscriptProtoToolRetrievalResponse.init(handwritten:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t (*v93)(uint64_t, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  v78 = a2;
  sub_23FB2E15C();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B57A0(v7, v72);
  v87 = sub_23F6916B8(&qword_256EA2720);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  v86 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v10);
  v85 = (char *)&v72 - v11;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v12);
  v84 = (uint64_t)&v72 - v13;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v72 - v16;
  v18 = sub_23FB29970();
  type metadata accessor for ContextProtoToolRetrievalType(v18);
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F6B573C();
  v21 = *(_QWORD *)a1;
  v20 = *(_QWORD *)(a1 + 8);
  v22 = *(_QWORD *)(a1 + 24);
  v77 = *(_QWORD *)(a1 + 16);
  v23 = *(_DWORD *)(a1 + 32);
  v24 = *(_QWORD *)(a1 + 48);
  v25 = *(_QWORD *)(a1 + 40);
  sub_23F6B6548();
  sub_23F6B90D8();
  v26 = sub_23F6B54F8();
  v27 = v96;
  sub_23FACC44C(v26, v28, v29, v30, v31, v32, v33, v34);
  v96 = v27;
  if (v27)
  {
    sub_23F6B5908();
    sub_23F693DFC();
    sub_23F6B6740();
    sub_23F6B6740();
  }
  else
  {
    v80 = v2;
    v81 = v4;
    v82 = v3;
    v83 = v17;
    v76 = v25;
    v36 = *(_QWORD *)(v24 + 16);
    v37 = MEMORY[0x24BEE4AF8];
    v75 = v35;
    if (v36)
    {
      v72 = v21;
      v73 = v22;
      sub_23FB2AEE4();
      v97 = v37;
      sub_23F6B5F1C();
      sub_23FB2A918();
      sub_23F711910();
      sub_23F7AE664(v24);
      v38 = v24;
      v39 = (uint64_t)v83;
      v79 = v24;
      while (1)
      {
        v88 = v36;
        v40 = v87;
        v41 = v39 + *(int *)(v87 + 48);
        v42 = sub_23F72E2E0();
        v90 = v44;
        v91 = v43;
        v89 = v45;
        sub_23F7AE7F4(v42, v46, v43, v44, v45, v38);
        v47 = sub_23FB2EDD4();
        v95 = *(_QWORD *)(v47 - 8);
        v93 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v95 + 16);
        v48 = v82;
        sub_23F6D3ECC(v82, v39, v93);
        v49 = v48 + *(int *)(v40 + 48);
        v94 = *(_QWORD *)(sub_23FB2ED8C() - 8);
        sub_23FB2B07C(v49, v41);
        v50 = v84;
        sub_23F6B4EC0(v48, v84, &qword_256EA2720);
        sub_23F6B4F84(v39, &qword_256EA2720);
        v92 = &v85[*(int *)(v40 + 48)];
        v51 = v93;
        v93((uint64_t)v85, v50, v47);
        v52 = sub_23FAE2D10();
        sub_23FB2B07C(v52, v53);
        v54 = (uint64_t)v86;
        v55 = sub_23F6B5FE0();
        ((void (*)(uint64_t))v51)(v55);
        v56 = sub_23F877F9C();
        sub_23FB2B07C(v56, v57);
        sub_23F6B7194();
        sub_23FB2E150();
        sub_23FB2AADC();
        sub_23F7B0990(v54, v58);
        sub_23F6B5900((uint64_t)v92, *(uint64_t (**)(uint64_t, uint64_t))(v94 + 8));
        v59 = v81;
        v60 = v96;
        ContextProtoToolRetrievalType.init(handwritten:)();
        sub_23F6B4F84(v50, &qword_256EA2720);
        v96 = v60;
        if (v60)
          break;
        v37 = v97;
        if ((sub_23F77D9A4() & 1) == 0)
        {
          sub_23FB29A98();
          sub_23F711910();
          v37 = v97;
        }
        v38 = v79;
        v61 = v80;
        v39 = (uint64_t)v83;
        v62 = *(_QWORD *)(v37 + 16);
        if (v62 >= *(_QWORD *)(v37 + 24) >> 1)
        {
          sub_23F711910();
          v37 = v97;
        }
        *(_QWORD *)(v37 + 16) = v62 + 1;
        sub_23F6F594C(v59, v37+ ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))+ *(_QWORD *)(v61 + 72) * v62, type metadata accessor for ContextProtoToolRetrievalType);
        v63 = sub_23F7D2F98();
        v64 = v89;
        sub_23F7AE6E8(v63);
        v66 = v65 & 1;
        v67 = sub_23F7D2F98();
        sub_23F7AE908(v67, v68, v64);
        v36 = v88 - 1;
        if (v88 == 1)
        {
          v69 = sub_23F8783E8();
          sub_23F7AE908(v69, v70, v66);
          sub_23F6B6090();
          v71 = v78;
          v20 = v74;
          v22 = v73;
          v21 = v72;
          sub_23FB2AE28();
          goto LABEL_14;
        }
      }
      sub_23F7AE908(v91, v90, v89);
      sub_23F77DE3C();
      sub_23F6B6740();
      sub_23F77DE3C();
      sub_23F6B6740();
      sub_23F6B6740();
      sub_23F713F08();
    }
    else
    {
      v36 = v77;
      v71 = v78;
LABEL_14:
      type metadata accessor for TranscriptProtoToolRetrievalResponse(0);
      sub_23F6F0CB4();
      sub_23F6B5908();
      sub_23F77DE3C();
      sub_23F717D54();
      sub_23F6B6090();
      *(_QWORD *)v71 = v21;
      *(_QWORD *)(v71 + 8) = v20;
      *(_QWORD *)(v71 + 16) = v36;
      *(_QWORD *)(v71 + 24) = v22;
      *(_DWORD *)(v71 + 32) = v23;
      *(_QWORD *)(v71 + 40) = v75;
      *(_QWORD *)(v71 + 48) = v37;
    }
  }
  sub_23F70D684();
}

void TranscriptProtoEntitySpanMatchResult.init(handwritten:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_23FB06898(a1, (uint64_t (*)(_QWORD))sub_23FACBC98, a2);
}

void TranscriptProtoActionCancellation.init(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F6B5220();
  v38 = v14;
  v16 = sub_23FB29BA4(v15);
  v41 = type metadata accessor for TranscriptProtoActionCancellation(v16);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA49D8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  v40 = (uint64_t)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B58C8();
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  v39 = (char *)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v23);
  v24 = sub_23FB2997C();
  type metadata accessor for ActionCancellation(v24);
  v25 = sub_23FB2A4F8();
  sub_23F75E68C(v25, v26, v27);
  v28 = sub_23FB2C758();
  v29 = sub_23FB2C740();
  v31 = v30;
  sub_23FAD69A0();
  sub_23FAD7164();
  sub_23FAD7240();
  *(_DWORD *)v13 = v28;
  *(_QWORD *)(v13 + 8) = v29;
  *(_QWORD *)(v13 + 16) = v31;
  sub_23F6B5900(v10, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  sub_23F77E598(v13, 0);
  v32 = v38;
  sub_23F6B4F58(v38, v40, &qword_256EA49D8);
  sub_23F77CB48();
  sub_23F77E598(v12, 1);
  sub_23F77E598(v12 + *(int *)(v41 + 20), 1);
  sub_23F6F0CB4();
  v33 = sub_23FB2A2E4();
  sub_23FB2ACF0(v33, v34);
  v35 = sub_23F6B6F9C();
  sub_23FB2ACF0(v35, v36);
  sub_23F6F594C(v12, a10, type metadata accessor for TranscriptProtoActionCancellation);
  sub_23F6F8C88(v32, type metadata accessor for ActionCancellation);
  sub_23F77DB18();
  sub_23F6B5100();
}

#error "23FAFEFB0: call analysis failed (funcsize=168)"

void TranscriptProtoStatementResult.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  int *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t);
  uint64_t (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  sub_23F6B5220();
  v6 = v5;
  v55 = v7;
  v60 = sub_23F6B58C8();
  v8 = *(_QWORD *)(v60 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  v57 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v12);
  v56 = (char *)&v47 - v13;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B6580();
  v16 = v15;
  v17 = sub_23F6D398C();
  type metadata accessor for StatementResultPayload(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA8638);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F6B53AC();
  sub_23F72E4BC();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B573C();
  v21 = sub_23F78F4B0();
  sub_23F6B568C(v21, v22);
  v54 = sub_23FAE6494(v4);
  v59 = v23;
  v24 = sub_23F9249A0();
  sub_23F6B4F84(v24, v25);
  v26 = (int *)type metadata accessor for StatementResult(0);
  v27 = v26[6];
  v28 = (uint64_t *)(v6 + v26[5]);
  v29 = v28[1];
  v53 = *v28;
  sub_23F6F5920(v6 + v27, v2, type metadata accessor for StatementResultPayload);
  v58 = v29;
  sub_23F77E1FC();
  v30 = TranscriptProtoStatementResultPayload.init(handwritten:)(v2);
  if (v1)
  {
    sub_23FB298A0(v30, type metadata accessor for StatementResult);
    sub_23F879038();
    sub_23F7D2F10();
  }
  else
  {
    v31 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
    v49 = v3;
    sub_23F78F2E4(v3, 0, v32, v31);
    v33 = v6 + v26[7];
    v52 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
    sub_23FB2A26C(v0, v33, v52);
    sub_23FB2C758();
    v34 = sub_23FB2A444();
    v36 = v35;
    sub_23FAD69A0();
    v50 = 0;
    sub_23FB2AAE8();
    sub_23F6F0878();
    *(_DWORD *)v16 = v2;
    *(_QWORD *)(v16 + 8) = v34;
    *(_QWORD *)(v16 + 16) = v36;
    v51 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    v37 = v60;
    sub_23F6B563C(v0, v51);
    sub_23F77DD78(v16, 0);
    v38 = v26[8];
    v39 = v6;
    v48 = v6;
    v52(v0, v6 + v38, v37);
    sub_23FB2C758();
    v40 = sub_23FB2A444();
    v42 = v41;
    v43 = (uint64_t)v56;
    sub_23FAC3DD4();
    *(_DWORD *)v43 = v37;
    *(_QWORD *)(v43 + 8) = v40;
    *(_QWORD *)(v43 + 16) = v42;
    v44 = v60;
    v51(v0, v60);
    sub_23F77DD78(v43, 0);
    v52(v0, v39 + v26[9], v44);
    sub_23FB2C758();
    sub_23FB2A13C();
    sub_23FB2A124();
    v45 = (uint64_t)v57;
    sub_23FAD7240();
    *(_DWORD *)v45 = (_DWORD)v26;
    *(_QWORD *)(v45 + 8) = v44;
    *(_QWORD *)(v45 + 16) = v40;
    v46 = sub_23F6B63E8();
    ((void (*)(uint64_t))v51)(v46);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v45, 0, 1, 0);
    TranscriptProtoStatementResult.init(actionEventID:toolID:payload:resultStatementID:originProgramStatementID:originTaskStatementID:)();
    sub_23F6F8C88(v48, type metadata accessor for StatementResult);
  }
  sub_23F876FC4();
  sub_23F6B5100();
}

void TranscriptProtoExternalAgentTextQuery.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_23F6B5220();
  v32 = v1;
  v6 = v5;
  type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F693EB0();
  sub_23F6916B8(&qword_256EB1C30);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B53AC();
  sub_23F6B5D98();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B59F8();
  v10 = v6[1];
  v11 = sub_23FB29B20(*v6);
  type metadata accessor for ExternalAgentTextQuery(v11);
  sub_23F878C38();
  v13 = sub_23FB2AA4C(v12);
  sub_23F6B6474(v13, v14);
  v15 = sub_23F72E034();
  v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v0, 1, v15);
  v17 = sub_23F77E584();
  if (v16 == 1)
  {
    sub_23F77DC10(v17, &qword_256EA2798);
    v30 = 0;
    v18 = 0;
  }
  else
  {
    v30 = sub_23FB2C488();
    v18 = v19;
    sub_23F6B5900(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8));
  }
  v20 = (uint64_t *)((char *)v6 + *(int *)(v2 + 24));
  v21 = *v20;
  v22 = v20[1];
  v23 = v20[2];
  sub_23F7893FC(*v20, v22);
  v24 = sub_23F77CA64(v21, v22, v23, v4);
  if (v32)
  {
    sub_23FB297B8(v24, type metadata accessor for ExternalAgentTextQuery);
    sub_23F756640();
    sub_23F6B6E44();
  }
  else
  {
    v25 = sub_23FB29D94();
    sub_23FAC2E98(v25);
    sub_23FAC3044();
    *v3 = v31;
    v3[1] = v10;
    v3[2] = v30;
    v3[3] = v18;
    sub_23FB29BEC((uint64_t)v4, v26, &qword_256EB1C30);
    sub_23FB2A6AC(v27, v28, type metadata accessor for TranscriptProtoExternalAgentTextQuery);
    sub_23FB297B8(v29, type metadata accessor for ExternalAgentTextQuery);
  }
  sub_23F6B6CA0();
  sub_23F6B5100();
}

void TranscriptProtoExternalAgentSpeechQuery.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t);
  uint64_t v46;

  sub_23F6B5220();
  v5 = v4;
  v7 = sub_23FB29BA4(v6);
  v45 = (uint64_t (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(v7);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F693EB0();
  sub_23F6916B8(&qword_256EB1C30);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B53AC();
  sub_23F6B5D90();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B59F8();
  v11 = sub_23FB29FF4();
  sub_23FACB7AC(v11, v12, v13, v14, v15, v16, v17, v18, v43, v45);
  v20 = v19;
  v21 = type metadata accessor for ExternalAgentSpeechQuery(0);
  v22 = sub_23FB2AA4C(*(int *)(v21 + 20));
  sub_23F6B58F8(v22, v23);
  v24 = sub_23F72E034();
  v25 = sub_23F77E1A8();
  v27 = sub_23F6B5164(v25, v26, v24);
  if (v28)
  {
    sub_23F77DC10(v27, &qword_256EA2798);
    v44 = 0;
    v30 = 0;
  }
  else
  {
    v44 = sub_23FB2C488();
    v30 = v29;
    sub_23F6B6178(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8));
  }
  v31 = (uint64_t *)(v5 + *(int *)(v21 + 24));
  v32 = *v31;
  v33 = v31[1];
  v34 = v31[2];
  sub_23F7893FC(*v31, v33);
  v35 = sub_23F77CA64(v32, v33, v34, v3);
  if (v1)
  {
    sub_23FB297B8(v35, type metadata accessor for ExternalAgentSpeechQuery);
    sub_23F6B644C();
    sub_23F6B5908();
  }
  else
  {
    v36 = (uint64_t)v2 + *(int *)(v46 + 24);
    v37 = sub_23FB29D94();
    sub_23F6B5A8C(v36, v38, v39, v37);
    sub_23FAC3044();
    *v2 = v20;
    v2[1] = v44;
    v2[2] = v30;
    sub_23FB29BEC((uint64_t)v3, v40, &qword_256EB1C30);
    sub_23FB2A468((uint64_t)v2, v41, type metadata accessor for TranscriptProtoExternalAgentSpeechQuery);
    sub_23FB297B8(v42, type metadata accessor for ExternalAgentSpeechQuery);
  }
  sub_23F8785C4();
  sub_23F6B5100();
}

void TranscriptProtoExternalAgentRequest.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_23F6B5220();
  sub_23FB2B09C();
  sub_23F6916B8(&qword_256EB1C30);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F693EB0();
  sub_23F6916B8(&qword_256EA2798);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23F77E1CC();
  type metadata accessor for RequestContent(v9);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5268();
  sub_23F6916B8(&qword_256EA86A0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B53AC();
  sub_23F77DB78(v0, v6);
  sub_23FB2AC08();
  TranscriptProtoRequestContent.init(handwritten:)();
  if (!v2)
  {
    v13 = type metadata accessor for TranscriptProtoRequestContent(0);
    v14 = sub_23FB298EC(v5, 0, 1, v13);
    v15 = type metadata accessor for ExternalAgentRequest(v14);
    v16 = sub_23FB2A2A8(v15);
    sub_23FB2A274(v16, v17, &qword_256EA2798);
    v18 = sub_23F72E034();
    v19 = sub_23F6B5164(v1, 1, v18);
    if (v20)
    {
      sub_23F77DC10(v19, &qword_256EA2798);
      v38 = 0;
      v39 = 0;
    }
    else
    {
      v38 = sub_23FB2C488();
      v39 = v21;
      sub_23F6B6420(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8));
    }
    sub_23FB2AB5C();
    sub_23F7893FC(v22, v23);
    sub_23FB2AA00();
    sub_23FB2AB5C();
    sub_23F77CA64(v24, v25, v26, v27);
    v28 = sub_23FB298EC(v3, 1, 1, v13);
    type metadata accessor for TranscriptProtoExternalAgentRequest(v28);
    sub_23FB2AE90();
    v30 = (uint64_t *)(v3 + v29);
    *v30 = 0;
    v30[1] = 0;
    v32 = v3 + *(int *)(v31 + 24);
    v33 = sub_23FB29D94();
    sub_23F6B5A8C(v32, v34, v35, v33);
    sub_23F6F0BB0();
    sub_23FB29BB0(v5, v36, &qword_256EA86A0);
    swift_bridgeObjectRelease();
    *v30 = v38;
    v30[1] = v39;
    sub_23FB2A004(v4, v37, &qword_256EB1C30);
  }
  sub_23FB297B8(v12, type metadata accessor for ExternalAgentRequest);
  sub_23F877A30();
  sub_23F6B5100();
}

#error "23FAFFB00: call analysis failed (funcsize=130)"

void TranscriptProtoExternalAgentRequestRewriteMetadata.init(handwritten:)()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FB2A404();
  v3 = *v1;
  v2 = v1[1];
  v4 = v1[2];
  sub_23FB29D94();
  sub_23F6B5F1C();
  sub_23F6B6548();
  sub_23FAD7510();
  sub_23F6B6090();
  sub_23F6B5908();
  *v0 = v3;
  v0[1] = v2;
  v0[2] = v4;
  sub_23F6D377C();
}

void TranscriptProtoToolResolution.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;

  sub_23F6B5220();
  v6 = v5;
  v8 = sub_23FB29B20(v7);
  v53 = type metadata accessor for TranscriptProtoToolResolution(v8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  v54 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_23F6B58C8();
  v49 = *(_QWORD *)(v51 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B52B0();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  v52 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v14);
  v50 = (char *)&v45 - v15;
  v55 = sub_23FAD72F8();
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B5C2C();
  sub_23FB2E8D0();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA3268);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B51A4();
  v20 = v19;
  sub_23F77DB9C(v0, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  sub_23FB2E8B8();
  sub_23F6B6178(v0, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  if (v1)
  {
    v21 = v6;
  }
  else
  {
    v47 = v20;
    v22 = sub_23F6B6F88();
    v23 = v55;
    sub_23F6D3ECC(v22, v24, v25);
    v26 = sub_23FB298EC(v20, 0, 1, v23);
    v56 = type metadata accessor for ToolResolution(v26);
    v27 = *(int *)(v56 + 20);
    v48 = v6;
    v28 = v49;
    v46 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 16);
    v29 = v51;
    sub_23F759774(v2, v6 + v27, v46);
    sub_23FB2C758();
    v30 = sub_23FB2A444();
    v32 = v31;
    v33 = sub_23FAD69A0();
    v34 = (uint64_t)v50;
    sub_23FAC3DD4();
    *(_DWORD *)v34 = v3;
    *(_QWORD *)(v34 + 8) = v30;
    *(_QWORD *)(v34 + 16) = v32;
    sub_23FB2B090();
    sub_23FAD6AA4(v34, 0);
    v46(v2, v48 + *(int *)(v56 + 24), v29);
    sub_23FB2C758();
    sub_23FB2A13C();
    sub_23FB2AE9C();
    v35 = (uint64_t)v52;
    sub_23F77E628();
    *(_DWORD *)v35 = v28;
    *(_QWORD *)(v35 + 8) = v2;
    *(_QWORD *)(v35 + 16) = v3;
    sub_23FB2B090();
    sub_23FAD6AA4(v35, 0);
    v36 = (uint64_t)v54;
    v37 = sub_23FB29C60();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v37, v38, v39, v55);
    v40 = v53;
    v41 = v36 + *(int *)(v53 + 20);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v41, 1, 1, v33);
    v42 = v36 + *(int *)(v40 + 24);
    sub_23FAD6AA4(v42, 1);
    sub_23FAC3044();
    sub_23FB29D9C(v47, v43, &qword_256EA3268);
    sub_23F710E80(v34, v41, &qword_256EA25E0);
    sub_23F710E80(v35, v42, &qword_256EA25E0);
    sub_23FB29DDC(v36, v44, type metadata accessor for TranscriptProtoToolResolution);
    v21 = v48;
  }
  sub_23F6F8C88(v21, type metadata accessor for ToolResolution);
  sub_23F6B6834();
  sub_23F6B5100();
}

void TranscriptProtoUndoRedoRequest.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;

  sub_23F6B5220();
  v57 = v1;
  v4 = v3;
  v6 = sub_23FB29BA4(v5);
  v58 = type metadata accessor for TranscriptProtoUndoRedoRequest(v6);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B57BC(v8, v46);
  sub_23F6916B8(&qword_256EA49D8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  v55 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F6B58C8();
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B57F4(v13, v46);
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  v56 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B6580();
  v18 = v17;
  sub_23F6916B8(&qword_256EA2798);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F6B59F8();
  v20 = v4[1];
  v53 = *v4;
  v21 = (int *)type metadata accessor for UndoRedoRequest(0);
  v22 = sub_23FB2AA4C(v21[5]);
  sub_23F6B705C(v22, v23);
  v24 = sub_23F72E034();
  v25 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v0, 1, v24);
  v54 = v20;
  v26 = sub_23F6B90D8();
  if (v25 == 1)
  {
    sub_23F77DC10(v26, &qword_256EA2798);
    v49 = 0;
    v50 = 0;
  }
  else
  {
    v27 = sub_23FB2C488();
    v49 = v28;
    v50 = v27;
    sub_23F6B6420(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8));
  }
  v29 = v21[7];
  v48 = *((unsigned __int8 *)v4 + v21[6]);
  v30 = v52;
  sub_23F6B633C(v52, (uint64_t)v4 + v29, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  v47 = sub_23FB2C758();
  v31 = sub_23FB2C740();
  v32 = v2;
  v34 = v33;
  sub_23FAD69A0();
  sub_23FB2AAE8();
  sub_23FAC3044();
  *(_DWORD *)v18 = v47;
  *(_QWORD *)(v18 + 8) = v31;
  *(_QWORD *)(v18 + 16) = v34;
  sub_23F6B6420(v30, *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v18, 0, 1, v11);
  sub_23FB2A274((uint64_t)v4 + v21[8], v35, &qword_256EA49D8);
  v36 = (uint64_t)v56;
  sub_23F77CB48();
  v37 = v58;
  v38 = v51;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v51 + *(int *)(v58 + 28), 1, 1, v11);
  v39 = v38 + *(int *)(v37 + 32);
  sub_23F77DD78(v39, 1);
  sub_23F6F0878();
  v40 = v54;
  *(_QWORD *)v38 = v53;
  *(_QWORD *)(v38 + 8) = v40;
  v41 = v49;
  *(_QWORD *)(v38 + 24) = v50;
  *(_QWORD *)(v38 + 32) = v41;
  *(_BYTE *)(v38 + 16) = v48;
  v42 = sub_23F6B7194();
  sub_23F710E80(v42, v43, &qword_256EA25E0);
  sub_23F710E80(v36, v39, &qword_256EA25E0);
  sub_23FB2A468(v38, v44, type metadata accessor for TranscriptProtoUndoRedoRequest);
  sub_23FB297D8(v45, type metadata accessor for UndoRedoRequest);
  sub_23F8778A8();
  sub_23F6B5100();
}

void TranscriptProtoClientUndoRedoRequest.init(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  sub_23F6B5220();
  v14 = v13;
  v16 = sub_23FB29BA4(v15);
  v51 = type metadata accessor for TranscriptProtoClientUndoRedoRequest(v16);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA49D8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  v50 = (uint64_t)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23F6B58C8();
  v21 = v20;
  v22 = *(_QWORD *)(v20 - 8);
  v44 = v20;
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5268();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v23);
  v46 = (char *)&v43 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F6B6B3C();
  v26 = sub_23FB2C488();
  v48 = v27;
  v49 = v26;
  v28 = (int *)type metadata accessor for ClientUndoRedoRequest(0);
  v29 = v28[5];
  v30 = v28[6];
  v45 = v14;
  v47 = *(unsigned __int8 *)(v14 + v29);
  sub_23F759774(v11, v14 + v30, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16));
  sub_23FB2C758();
  v31 = sub_23FB29DB4();
  v33 = v32;
  sub_23FAD69A0();
  sub_23FAD7240();
  *(_DWORD *)v12 = v21;
  *(_QWORD *)(v12 + 8) = v31;
  *(_QWORD *)(v12 + 16) = v33;
  v34 = sub_23FB2AC7C();
  v35(v34, v44);
  sub_23F77DD78(v12, 0);
  v36 = v45;
  sub_23F6B4F58(v45 + v28[7], v50, &qword_256EA49D8);
  v37 = (uint64_t)v46;
  sub_23F77CB48();
  v38 = v51;
  sub_23F77DD78(v10 + *(int *)(v51 + 24), 1);
  v39 = v10 + *(int *)(v38 + 28);
  sub_23F77DD78(v39, 1);
  sub_23F6F0CB4();
  v40 = v48;
  *(_QWORD *)v10 = v49;
  *(_QWORD *)(v10 + 8) = v40;
  *(_BYTE *)(v10 + 16) = v47;
  v41 = sub_23F7F64A8();
  sub_23F710E80(v41, v42, &qword_256EA25E0);
  sub_23F710E80(v37, v39, &qword_256EA25E0);
  sub_23F6F594C(v10, a10, type metadata accessor for TranscriptProtoClientUndoRedoRequest);
  sub_23F6F8C88(v36, type metadata accessor for ClientUndoRedoRequest);
  sub_23F77DB18();
  sub_23F6B5100();
}

void TranscriptProtoTypeConversionRequest.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53[2];
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  sub_23F6B5220();
  v68 = v1;
  v69 = v4;
  v6 = v5;
  v7 = sub_23F6B58C8();
  v59 = *(_QWORD *)(v7 - 8);
  v60 = v7;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  v57 = (uint64_t)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23FB299A4(v11, v53[0]);
  v12 = sub_23FB2EB28();
  v55 = *(_QWORD *)(v12 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  sub_23FB297F4(v14, v53[0]);
  v15 = sub_23FB2ED5C();
  v65 = *(_QWORD *)(v15 - 8);
  v66 = v15;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B537C(v17, v53[0]);
  sub_23F6916B8(&qword_256EA2E00);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  v54 = (char *)v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B632C();
  sub_23F7F68B0();
  v62 = v20;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F78F260();
  sub_23FB2ED38();
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA2610);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F6B5598(v24, v53[0]);
  v63 = v2;
  v25 = sub_23FB298EC(v6, 1, 1, v2);
  type metadata accessor for TranscriptProtoTypeConversionRequest(v25);
  sub_23FB2AC20();
  v27 = v6 + v26;
  v28 = sub_23FB29C44();
  v56 = v12;
  sub_23FB2999C(v28, v29, v30);
  v31 = v6 + *(int *)(v2 + 24);
  v32 = sub_23FAD69A0();
  sub_23F7A690C(v31, 1);
  v67 = v6;
  sub_23F6F0BB0();
  sub_23F78F5D0(v0, v69, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  sub_23FB2A240();
  if (v1)
  {
    v33 = sub_23F6B6420(v0, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23FB297C0(v33, type metadata accessor for TypeConversionRequest);
    sub_23FB297B8(v42, type metadata accessor for TranscriptProtoTypeConversionRequest);
  }
  else
  {
    v53[0] = v27;
    v53[1] = v32;
    v68 = v31;
    sub_23F6B6420(v0, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    v34 = v61;
    v35 = sub_23F7D24F0();
    sub_23F759774(v35, v36, v37);
    sub_23F7A690C(v34, 0);
    sub_23FB29C34(v34, v38, &qword_256EA2610);
    type metadata accessor for TypeConversionRequest(0);
    sub_23F878C38();
    v40 = v64;
    v41 = v65;
    sub_23F75E68C(v64, v69 + v39, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v65 + 16));
    sub_23FB2ED44();
    sub_23F6B5900(v40, *(uint64_t (**)(uint64_t, uint64_t))(v41 + 8));
    v43 = (uint64_t)v54;
    v44 = sub_23F6B68A8();
    sub_23F759774(v44, v45, v46);
    sub_23F7A690C(v43, 0);
    sub_23F710E80(v43, v53[0], &qword_256EA2E00);
    v47 = v59;
    v48 = v57;
    sub_23F6B5EF0(v57, v69 + *(int *)(v6 + 24), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 16));
    LODWORD(v67) = sub_23FB2C758();
    sub_23FB2C740();
    sub_23F72E3E0();
    v49 = v58;
    sub_23FAC3CEC();
    *(_DWORD *)v49 = v67;
    *(_QWORD *)(v49 + 8) = v48;
    *(_QWORD *)(v49 + 16) = v6;
    v50 = sub_23F70D728(v48, *(uint64_t (**)(uint64_t, uint64_t))(v47 + 8));
    sub_23FB297C0(v50, type metadata accessor for TypeConversionRequest);
    v51 = sub_23F7A690C(v49, 0);
    sub_23FB2AF10(v51, v52, &qword_256EA25E0);
  }
  sub_23F876B60();
  sub_23F6B5100();
}

void TranscriptProtoTypeConversionResult.init(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50[2];
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_23F6B5220();
  sub_23FB2AF54(v15);
  v17 = v16;
  v57 = sub_23F6B58C8();
  v55 = *(uint64_t (**)(uint64_t, uint64_t))(v57 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B5BD8(v19, v50[0]);
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23FB29834(v21, v50[0]);
  sub_23FB2EB1C();
  sub_23F7F68B0();
  v50[0] = v22;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)v50 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B6634();
  sub_23F70D9A8();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA2610);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F6B5268();
  v52 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v12;
  v28 = sub_23FB298EC(v17, 1, 1, v12);
  type metadata accessor for TranscriptProtoTypeConversionResult(v28);
  sub_23FB2AC20();
  v30 = v17 + v29;
  v31 = sub_23FAD69A0();
  v51 = v30;
  sub_23FAD6AA4(v30, 1);
  v53 = v17 + *(int *)(v12 + 24);
  v54 = v31;
  sub_23FAD6AA4(v53, 1);
  sub_23F77E628();
  sub_23F759774(v10, a10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16));
  sub_23FB2A240();
  if (v11)
  {
    v32 = sub_23F6B56E0(v10, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
    sub_23FB297C8(v32, type metadata accessor for TypeConversionResult);
    sub_23FB298E4(v33, type metadata accessor for TranscriptProtoTypeConversionResult);
  }
  else
  {
    sub_23F6B56E0(v10, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
    v34 = sub_23FAD709C();
    sub_23F759774(v34, v35, v36);
    sub_23F7A690C(v14, 0);
    sub_23FB2ADB0(v14, v37, &qword_256EA2610);
    type metadata accessor for TypeConversionResult(0);
    sub_23F878C38();
    v58 = 0;
    v40 = v55;
    v39 = v56;
    v52 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v55 + 2);
    v41 = v57;
    sub_23F75E68C(v56, a10 + v38, v52);
    sub_23FB2C758();
    v42 = sub_23FB2A13C();
    v44 = v43;
    v45 = v50[1];
    sub_23F6F0CB4();
    *(_DWORD *)v45 = a10;
    *(_QWORD *)(v45 + 8) = v42;
    *(_QWORD *)(v45 + 16) = v44;
    v55 = (uint64_t (*)(uint64_t, uint64_t))*((_QWORD *)v40 + 1);
    sub_23F6B5900(v39, v55);
    sub_23F7A690C(v45, 0);
    sub_23F710E80(v45, v51, &qword_256EA25E0);
    v52(v39, a10 + *((int *)v25 + 6), v41);
    sub_23FB2C758();
    v46 = sub_23FB2A848();
    v48 = v47;
    sub_23F6F0CB4();
    *(_DWORD *)v45 = (_DWORD)v25;
    *(_QWORD *)(v45 + 8) = v46;
    *(_QWORD *)(v45 + 16) = v48;
    v49 = sub_23F6B689C();
    ((void (*)(uint64_t))v55)(v49);
    sub_23F6F8C88(a10, type metadata accessor for TypeConversionResult);
    sub_23F7A690C(v45, 0);
    sub_23F710E80(v45, v53, &qword_256EA25E0);
  }
  sub_23F8777E8();
  sub_23F6B5100();
}

void TranscriptProtoQueryDecorationResult.init(handwritten:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t DecorationResult;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_23F6B5220();
  v4 = v3;
  v5 = sub_23FB29C54();
  DecorationResult = type metadata accessor for TranscriptProtoQueryDecorationResult(v5);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F693EB0();
  sub_23F6916B8(&qword_256EA71F8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B573C();
  sub_23F6916B8(&qword_256EA2DD0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  sub_23FB29C04();
  sub_23FACBC98();
  if (!v0)
  {
    v11 = v10;
    swift_bridgeObjectRetain();
    sub_23FAD0134();
    sub_23FB2AEB4();
    sub_23FAD0134();
    v33 = v12;
    v31 = type metadata accessor for QueryDecorationResult(0);
    sub_23FAD6F04(v4 + *(int *)(v31 + 28), v13, &qword_256EA71F8);
    sub_23F77CB14();
    v14 = sub_23FB2AE68();
    sub_23FAD0DB8(v14, v15, v16, v17, v18, v19, v20, v21, v30, v31);
    v22 = (uint64_t)v1 + *(int *)(DecorationResult + 32);
    v32 = v23;
    DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
    sub_23F6B5A8C(v22, v25, v26, DecorationToolRetrievalResponse);
    v27 = sub_23FAC3044();
    *v1 = v11;
    v1[1] = v2;
    v1[2] = v33;
    sub_23FB2A540(v27, v28, &qword_256EA2DD0);
    v1[3] = v32;
    sub_23FB29CE8((uint64_t)v1, v29, type metadata accessor for TranscriptProtoQueryDecorationResult);
  }
  sub_23FB297B8(v10, type metadata accessor for QueryDecorationResult);
  sub_23F8778A8();
  sub_23F6B5100();
}

void TranscriptProtoQueryDecorationPrePlannerResult.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t);
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t DecorationPrePlannerResult;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char *v40;

  sub_23F6B5220();
  v36 = v7;
  v8 = sub_23F6B5AC8();
  DecorationPrePlannerResult = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(v8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B5420(v10, v32);
  sub_23F6916B8(&qword_256EA8608);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  v40 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B58C8();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B5268();
  v15 = sub_23FB2A18C();
  sub_23F6B633C(v15, v0, v16);
  v17 = sub_23FB2C758();
  sub_23FB2C740();
  sub_23FB2A124();
  v18 = sub_23FAD69A0();
  sub_23FAC3CEC();
  *(_DWORD *)v6 = v17;
  *(_QWORD *)(v6 + 8) = v4;
  *(_QWORD *)(v6 + 16) = v5;
  sub_23F6B530C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  v19 = sub_23FB298EC(v6, 0, 1, v18);
  v20 = type metadata accessor for QueryDecorationPrePlannerResult(v19);
  v21 = *(int *)(v20 + 24);
  v22 = (uint64_t *)(v0 + *(int *)(v20 + 20));
  v24 = *v22;
  v23 = v22[1];
  LOBYTE(v22) = *(_BYTE *)(v0 + v21 + 8);
  v38 = *(_QWORD *)(v0 + v21);
  v39 = (char)v22;
  swift_bridgeObjectRetain();
  sub_23F6B5F1C();
  TranscriptProtoQueryDecorationPrePlannerResultPayload.init(handwritten:)();
  if (v2)
  {
    v25 = sub_23F6B5908();
    sub_23FB297C8(v25, type metadata accessor for QueryDecorationPrePlannerResult);
    sub_23F77DD64(v26, &qword_256EA25E0);
  }
  else
  {
    type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
    v33 = v24;
    sub_23F7D2ED8((uint64_t)v40, 0);
    v37 = v0;
    v27 = DecorationPrePlannerResult;
    v28 = v35;
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v35 + *(int *)(DecorationPrePlannerResult + 20), 1, 1, v18);
    sub_23F7D2ED8((uint64_t)v28 + *(int *)(v27 + 24), 1);
    sub_23FAC3044();
    sub_23FB2ADB0(v6, v29, &qword_256EA25E0);
    *v28 = v33;
    v28[1] = v23;
    sub_23FB2A004((uint64_t)v40, v30, &qword_256EA8608);
    sub_23F6F594C((uint64_t)v28, v36, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult);
    sub_23FB2AFA8(v31, type metadata accessor for QueryDecorationPrePlannerResult);
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

#error "23FB00E58: call analysis failed (funcsize=5)"

void LocaleSettings.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F6D3A90();
  sub_23FB29DC8();
  sub_23FB2C50C();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v0);
  sub_23FAC396C();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F70D958();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F878D94();
  sub_23F6B90D8();
  sub_23FB2A67C();
  sub_23F6B90D8();
  sub_23FB2A67C();
  sub_23F6B90D8();
  sub_23FB2A67C();
  v3 = sub_23FB2C95C();
  sub_23FB297B8(v3, type metadata accessor for TranscriptProtoLocaleSettings);
  sub_23F6B69E0();
}

void DeviceDetails.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6D3DC4();
  v1 = sub_23FB29C54();
  type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(v1);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F6B5C2C();
  sub_23FB2C8C0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B53AC();
  type metadata accessor for TranscriptProtoDeviceDetails(0);
  sub_23F77DCD4();
  sub_23F77B5C0();
  if (v0)
  {
    sub_23FB297B8(v4, type metadata accessor for TranscriptProtoDeviceDetails);
    sub_23F6B644C();
  }
  else
  {
    v5 = sub_23FB2C8A8();
    sub_23FB297C8(v5, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
    sub_23FB2A95C();
    v6 = sub_23FB2C8CC();
    sub_23FB297B8(v6, type metadata accessor for TranscriptProtoDeviceDetails);
  }
  sub_23F6D3710();
}

void sub_23FB00FEC()
{
  SessionStart.init(transcript:)();
}

uint64_t sub_23FB01000()
{
  return sub_23FAE7BC0();
}

void TranscriptProtoLocaleSettings.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_23F6B50E8();
  v4 = v3;
  sub_23FB2C50C();
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B6618();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F72E168();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B62F8();
  sub_23FB2C968();
  v18 = sub_23FB2C4D0();
  v9 = v8;
  v10 = *(void (**)(uint64_t))(v2 + 8);
  v11 = sub_23F72E2E0();
  v10(v11);
  sub_23FB2C950();
  v12 = sub_23FB2C4D0();
  v14 = v13;
  v15 = sub_23F6B6964();
  v10(v15);
  sub_23FB2C974();
  sub_23FB2C4D0();
  sub_23FB2AE9C();
  v16 = sub_23F6B6098();
  v10(v16);
  type metadata accessor for TranscriptProtoLocaleSettings(0);
  sub_23FAC3210();
  *v4 = v18;
  v4[1] = v9;
  v4[2] = v12;
  v4[3] = v14;
  v4[4] = v0;
  v4[5] = v1;
  v17 = sub_23FB2C998();
  sub_23F6B6454(v17);
  sub_23F693DDC();
}

void TranscriptProtoDeviceDetails.init(handwritten:)()
{
  uint64_t *v0;
  _DWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  uint64_t v21;

  sub_23F6B50E8();
  v3 = v2;
  v5 = sub_23FB29ABC(v4);
  v6 = type metadata accessor for TranscriptProtoDeviceDetails(v5);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B5C2C();
  sub_23FB2C8C0();
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B573C();
  sub_23F6916B8(&qword_256EA86B0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B59E0();
  v21 = v3;
  v10 = sub_23FB2C8D8();
  v12 = v11;
  sub_23FB2C8F0();
  LODWORD(v3) = sub_23FB2C8B4();
  v13 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  sub_23FAC3DD4();
  *v1 = v3;
  v14 = sub_23F6D3F0C();
  v15(v14);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v1, 0, 1, v13);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v0 + *(int *)(v6 + 20), 1, 1, v13);
  sub_23FAC3044();
  *v0 = v10;
  v0[1] = v12;
  v16 = sub_23F6B6F9C();
  sub_23F710E80(v16, v17, &qword_256EA86B0);
  v18 = sub_23FB2A350();
  sub_23F6F594C(v18, v19, type metadata accessor for TranscriptProtoDeviceDetails);
  sub_23FB2C908();
  sub_23F877770();
  v20(v21);
  sub_23F693DDC();
}

void sub_23FB01258()
{
  TranscriptProtoSessionStart.init(handwritten:)();
}

void DeviceDetails.DeviceType.init(transcript:)()
{
  uint64_t v0;

  v0 = sub_23FB2C8A8();
  sub_23FB297B8(v0, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
  sub_23F694CC8();
}

void sub_23FB012A8()
{
  DeviceDetails.init(transcript:)();
}

uint64_t sub_23FB012BC()
{
  return sub_23FAE7CE4();
}

uint64_t TranscriptProtoDeviceDetailsDeviceType.init(handwritten:)()
{
  _DWORD *v0;
  int v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);

  sub_23FB2A57C();
  v1 = sub_23FB2C8B4();
  type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  sub_23F6F0878();
  *v0 = v1;
  sub_23FB2C8C0();
  v2 = sub_23FB29A14();
  return v3(v2);
}

void sub_23FB0131C()
{
  TranscriptProtoDeviceDetails.init(handwritten:)();
}

uint64_t sub_23FB01340()
{
  return TranscriptProtoDeviceDetailsDeviceType.init(handwritten:)();
}

void sub_23FB01364()
{
  DeviceDetails.DeviceType.init(transcript:)();
  sub_23F878AAC();
}

uint64_t sub_23FB01384()
{
  return sub_23FAE7E08();
}

void sub_23FB01398()
{
  LocaleSettings.init(transcript:)();
  sub_23F878AAC();
}

uint64_t sub_23FB013B8()
{
  return sub_23FAE7F4C();
}

void sub_23FB013CC()
{
  TranscriptProtoLocaleSettings.init(handwritten:)();
}

void sub_23FB013F0(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  ContextPrewarmRequest.init(transcript:)(a1, a2);
  sub_23F878AAC();
}

void sub_23FB01410()
{
  uint64_t *v0;

  sub_23FAE8198(*v0, v0[1], (void (*)(_QWORD))type metadata accessor for TranscriptProtoContextPrewarmRequest);
}

uint64_t sub_23FB01440()
{
  return TranscriptProtoContextPrewarmRequest.init(handwritten:)();
}

void sub_23FB01464(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  ContextPrewarmCompleted.init(transcript:)(a1, a2);
  sub_23F878AAC();
}

void sub_23FB01484()
{
  uint64_t *v0;

  sub_23FAE8198(*v0, v0[1], (void (*)(_QWORD))type metadata accessor for TranscriptProtoContextPrewarmCompleted);
}

uint64_t sub_23FB014B4()
{
  return SpeechQuery.init(transcript:)();
}

uint64_t sub_23FB014C8()
{
  uint64_t v0;

  return sub_23FAE8204(*(_QWORD *)v0, *(_BYTE *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23FB014E8()
{
  return TranscriptProtoSpeechQuery.init(handwritten:)();
}

void sub_23FB014FC()
{
  TextQuery.init(transcript:)();
}

uint64_t sub_23FB01510()
{
  return sub_23FAE8340();
}

void sub_23FB01524()
{
  TranscriptProtoTextQuery.init(handwritten:)();
}

void RequestContent.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47[9];
  uint64_t v48;

  sub_23F6B5220();
  v47[8] = v4;
  v48 = v2;
  v5 = sub_23FB2A014();
  type metadata accessor for TranscriptProtoSystemPromptResolution(v5);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  v47[5] = (uint64_t)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v8);
  v47[7] = (uint64_t)v47 - v9;
  v10 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoRequestContentSpeechContent(v10);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B5C80();
  v13 = MEMORY[0x24BDAC7A8](v12);
  sub_23FB2A2F0(v13, v14, v15, v16, v17, v18, v19, v20, v47[0]);
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  v22 = sub_23F6B58C8();
  v47[2] = *(_QWORD *)(v22 - 8);
  v47[3] = v22;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v23);
  v25 = sub_23FB29834(v24, v47[0]);
  type metadata accessor for TranscriptProtoRequestContentTextContent(v25);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F6B5CB8();
  v28 = MEMORY[0x24BDAC7A8](v27);
  sub_23FB2AFF4(v28, v29, v30, v31, v32, v33, v34, v35, v47[0]);
  sub_23F6B6F00();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v36);
  v37 = sub_23F77E1CC();
  v38 = type metadata accessor for TranscriptProtoRequestContentEnum(v37);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F6B5268();
  v40 = sub_23F7F64A8();
  sub_23F6B6264(v40, v41);
  v42 = sub_23F6B5164(v1, 1, v38);
  if (!v44)
  {
    sub_23FB2B0CC(v1, v43, type metadata accessor for TranscriptProtoRequestContentEnum);
    v46 = (char *)&loc_23FB0171C + 4 * byte_23FB92ABC[sub_23FB2AF1C()];
    __asm { BR              X10 }
  }
  sub_23F77DC10(v42, &qword_256EB1C50);
  sub_23F6916B8(&qword_256EBEED0);
  sub_23FB297E0();
  sub_23F77DA84();
  sub_23F6B5AD4();
  *v45 = v0;
  v45[1] = v1;
  sub_23F77D9E4();
  sub_23F6F8C88(v3, type metadata accessor for TranscriptProtoRequestContent);
  sub_23F6B6CA0();
  sub_23F6B5100();
}

void sub_23FB0190C()
{
  Request.init(transcript:)();
}

uint64_t sub_23FB01920()
{
  return sub_23FAE8608();
}

void TranscriptProtoRequestContent.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD v23[5];
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_23F6B5220();
  v2 = v1;
  v3 = sub_23F6F0920();
  type metadata accessor for RequestContent.SystemPromptResolution(v3);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v4);
  v23[2] = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v6);
  v23[4] = (char *)v23 - v7;
  v25 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  v26 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_23F6B58C8();
  v23[3] = *(_QWORD *)(v24 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23FB2A0EC();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5C80();
  MEMORY[0x24BDAC7A8](v13);
  v27 = (char *)v23 - v14;
  v15 = sub_23F6D398C();
  type metadata accessor for RequestContent(v15);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B59E0();
  sub_23F6916B8(&qword_256EB1C50);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  v18 = sub_23F78F27C();
  v28 = type metadata accessor for TranscriptProtoRequestContentEnum(v18);
  v19 = sub_23FB298EC(v0, 1, 1, v28);
  type metadata accessor for TranscriptProtoRequestContent(v19);
  v29 = v0;
  sub_23F6F0878();
  v30 = v2;
  v20 = sub_23F6B6224();
  sub_23F6F5920(v20, v21, type metadata accessor for RequestContent);
  v22 = (char *)sub_23FB01AE8 + 4 * byte_23FB92AC0[sub_23FB2AE5C()];
  __asm { BR              X10 }
}

void sub_23FB01AE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23FB2A98C();
  sub_23FB29B7C(v2, type metadata accessor for RequestContent);
  sub_23FB2ABFC();
  sub_23F7A690C(v0, 0);
  sub_23F710E80(v0, *(_QWORD *)(v1 - 96), &qword_256EB1C50);
  sub_23F876FC4();
  sub_23F6B5100();
}

void sub_23FB01CE0()
{
  TranscriptProtoRequest.init(handwritten:)();
}

void RequestContent.TextContent.init(transcript:)()
{
  sub_23FB01D18();
}

void sub_23FB01D18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  void (*v4)(uint64_t);
  void (*v5)(uint64_t);
  uint64_t *v6;
  uint64_t *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[4];
  uint64_t (*v20)(_QWORD);

  sub_23F6B5220();
  v20 = v3;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[3] = sub_23F6B58C8();
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B59E0();
  v14 = v7[1];
  v15 = sub_23FB29B20(*v7);
  v5(v15);
  sub_23F77E1FC();
  sub_23FB2A824();
  if (v0)
  {
    sub_23FB29A4C((uint64_t)v7);
    sub_23F6B6E44();
  }
  else
  {
    v19[1] = *((_QWORD *)v12 + 1);
    sub_23F6B5508();
    v16 = sub_23FB2AD7C();
    sub_23FB297EC(v16, type metadata accessor for TranscriptProtoStatementID);
    sub_23FB29A4C((uint64_t)v7);
    *v9 = v19[2];
    v9[1] = v14;
    v17 = v20(0);
    v18 = sub_23FB2AAC8(v17);
    sub_23FB2A26C(v18, v2, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v1 + 32));
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void RequestContent.SpeechContent.init(transcript:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_23FAF9FE0(a1, (uint64_t (*)(uint64_t))sub_23F774D5C, a2);
}

void RequestContent.StopContent.init(transcript:)(uint64_t a1)
{
  sub_23F6F8C88(a1, type metadata accessor for TranscriptProtoRequestContentStopContent);
  sub_23F878AAC();
}

void sub_23FB01E78()
{
  RequestContent.init(transcript:)();
}

uint64_t sub_23FB01E8C()
{
  return sub_23FAE8734();
}

void TranscriptProtoRequestContentTextContent.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;

  sub_23F6B5220();
  v4 = v3;
  v6 = sub_23FB29ABC(v5);
  v27 = type metadata accessor for TranscriptProtoRequestContentTextContent(v6);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23F6B58C8();
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B5208();
  v12 = *v4;
  v24 = v4[1];
  v13 = v24;
  v25 = v12;
  v26 = v4;
  sub_23FB2A6E8();
  v14 = sub_23FB2AF94();
  sub_23F77DB9C(v14, v15, v16);
  sub_23F6B6548();
  sub_23FB2C758();
  v17 = sub_23FB2A13C();
  v19 = v18;
  sub_23FAD69A0();
  sub_23FB2AAE8();
  sub_23F6F0CB4();
  *(_DWORD *)v2 = v13;
  *(_QWORD *)(v2 + 8) = v17;
  *(_QWORD *)(v2 + 16) = v19;
  sub_23F6B6178(v1, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23F77DD78(v2, 0);
  sub_23F77DD78((uint64_t)v9 + *(int *)(v27 + 20), 1);
  sub_23F77E628();
  v20 = v24;
  *v9 = v25;
  v9[1] = v20;
  v21 = sub_23FAC3B6C();
  sub_23F710E80(v21, v22, &qword_256EA25E0);
  sub_23F6F594C((uint64_t)v9, v28, type metadata accessor for TranscriptProtoRequestContentTextContent);
  sub_23F6F8C88((uint64_t)v26, type metadata accessor for RequestContent.TextContent);
  sub_23FB29EE0();
  sub_23F6B5100();
}

void TranscriptProtoRequestContentSpeechContent.init(handwritten:)(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);

  sub_23FACB7AC(*a1, a2, a3, a4, a5, a6, a7, a8, v12, v13);
  v11 = v10;
  sub_23FB2A708();
  sub_23F6F0878();
  *a9 = v11;
  sub_23FAD6A50();
}

void TranscriptProtoRequestContentStopContent.init(handwritten:)()
{
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_23F878AAC();
}

void sub_23FB02050()
{
  TranscriptProtoRequestContent.init(handwritten:)();
}

void sub_23FB02064(uint64_t a1)
{
  RequestContent.StopContent.init(transcript:)(a1);
}

void sub_23FB02078()
{
  sub_23FAE9BB0();
}

void sub_23FB020A4()
{
  TranscriptProtoRequestContentStopContent.init(handwritten:)();
}

void sub_23FB020B8()
{
  RequestContent.TextContent.init(transcript:)();
}

void sub_23FB020CC()
{
  sub_23FAE8860();
}

void sub_23FB02100()
{
  TranscriptProtoRequestContentTextContent.init(handwritten:)();
}

void sub_23FB02114(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  RequestContent.SpeechContent.init(transcript:)(a1, a2);
}

uint64_t sub_23FB02128()
{
  return sub_23FAE8A44();
}

void sub_23FB02140(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  TranscriptProtoRequestContentSpeechContent.init(handwritten:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

void sub_23FB02154()
{
  ExternalAgentRequest.init(transcript:)();
}

uint64_t sub_23FB02168()
{
  return sub_23FAE8B34();
}

void sub_23FB0217C()
{
  TranscriptProtoExternalAgentRequest.init(handwritten:)();
}

void RequestPrescribedPlan.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  _QWORD v34[10];

  sub_23F6B5220();
  v4 = v3;
  v6 = sub_23FB29ABC(v5);
  type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(v6);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  v34[5] = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v9);
  v34[7] = (char *)v34 - v10;
  v11 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(v11);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  v34[4] = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v14);
  v34[6] = (char *)v34 - v15;
  v16 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(v16);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  v34[3] = (char *)v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v19);
  v34[8] = (char *)v34 - v20;
  v21 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(v21);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6B6618();
  MEMORY[0x24BDAC7A8](v23);
  v24 = sub_23F923B4C();
  type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(v24);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F6B5C9C();
  MEMORY[0x24BDAC7A8](v26);
  v27 = sub_23F78F404();
  type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(v27);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F6B5CD4();
  MEMORY[0x24BDAC7A8](v29);
  v30 = sub_23FB29944();
  type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(v30);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v31);
  sub_23FB2A750();
  sub_23F77BDB8();
  if (!v0)
  {
    v34[0] = v2;
    v34[1] = v1;
    v34[2] = v4;
    v33 = (char *)&loc_23FB02374 + 4 * byte_23FB92AC4[sub_23FB2AFB8()];
    __asm { BR              X10 }
  }
  sub_23FB297B0(v32, type metadata accessor for TranscriptProtoRequestPrescribedPlan);
  sub_23FB29EE0();
  sub_23F6B5100();
}

void RequestPrescribedPlan.SearchTool.init(transcript:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_23FB025FC(a1, a2);
}

void RequestPrescribedPlan.LowConfidenceKnowledgeTool.init(transcript:)(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v3 = a1[1];
  v5 = sub_23F6B5F1C();
  sub_23FB2AB04(v5, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
  *a2 = v4;
  a2[1] = v3;
  sub_23F6D3C2C();
}

void RequestPrescribedPlan.TextTool.init(transcript:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_23FB025FC(a1, a2);
}

void sub_23FB025FC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  v5 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  sub_23F6B6548();
  sub_23F70D63C(a1);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_BYTE *)(a2 + 16) = v6;
  sub_23F6D3674();
}

void RequestPrescribedPlan.ConvertTool.init(transcript:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_23FB025FC(a1, a2);
}

void RequestPrescribedPlan.DisplayTool.init(transcript:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_23FB025FC(a1, a2);
}

void RequestPrescribedPlan.KnowledgeTool.init(transcript:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_23FB025FC(a1, a2);
}

void sub_23FB0269C()
{
  RequestPrescribedPlan.init(transcript:)();
}

uint64_t sub_23FB026B0()
{
  uint64_t v0;

  return sub_23FAE8C60(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t TranscriptProtoRequestPrescribedPlan.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F6D3EA4();
  v1 = v0;
  v3 = v2;
  sub_23F6916B8(&qword_256EA85F0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B52B0();
  v5 = *(unsigned __int8 *)(v1 + 16);
  v6 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  v7 = sub_23FB298EC(v3, 1, 1, v6);
  type metadata accessor for TranscriptProtoRequestPrescribedPlan(v7);
  v8 = sub_23FAC3074();
  return ((uint64_t (*)(uint64_t))((char *)sub_23FB0275C + 4 * byte_23FB92ACA[v5 >> 5]))(v8);
}

void sub_23FB0275C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  v4 = sub_23FB2A968();
  type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(v4);
  sub_23F6F0BB0();
  *(_QWORD *)v0 = v2;
  *(_QWORD *)(v0 + 8) = v1;
  *(_BYTE *)(v0 + 16) = v3;
  sub_23F6B6AAC();
  swift_storeEnumTagMultiPayload();
  sub_23F77E598(v0, 0);
  sub_23FB29BEC(v0, v5, &qword_256EA85F0);
  sub_23F77E0B0();
  sub_23F6D3750();
}

void TranscriptProtoRequestPrescribedPlanSearchTool.init(handwritten:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_23FB02914(a1, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool, a2);
}

void TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool.init(handwritten:)(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_23FB0286C(a1, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool, a2);
}

void sub_23FB0286C(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v5 = a1[1];
  sub_23F6F0918((uint64_t)a1, a2);
  sub_23FAC3074();
  *a3 = v4;
  a3[1] = v5;
  sub_23F6D3C2C();
}

void TranscriptProtoRequestPrescribedPlanTextTool.init(handwritten:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_23FB02914(a1, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool, a2);
}

void TranscriptProtoRequestPrescribedPlanConvertTool.init(handwritten:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_23FB02914(a1, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool, a2);
}

void TranscriptProtoRequestPrescribedPlanDisplayTool.init(handwritten:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_23FB02914(a1, type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool, a2);
}

void TranscriptProtoRequestPrescribedPlanKnowledgeTool.init(handwritten:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_23FB02914(a1, type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool, a2);
}

void sub_23FB02914(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  sub_23F6F0918(a1, a2);
  sub_23FAC3074();
  *(_QWORD *)a3 = v4;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = v6;
  sub_23F6D377C();
}

uint64_t sub_23FB02958()
{
  return TranscriptProtoRequestPrescribedPlan.init(handwritten:)();
}

void sub_23FB0296C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  RequestPrescribedPlan.SearchTool.init(transcript:)(a1, a2);
}

#error "23FB029A8: call analysis failed (funcsize=10)"

void sub_23FB029B4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  TranscriptProtoRequestPrescribedPlanSearchTool.init(handwritten:)(a1, a2);
}

void sub_23FB029C8(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  RequestPrescribedPlan.LowConfidenceKnowledgeTool.init(transcript:)(a1, a2);
}

uint64_t sub_23FB029DC()
{
  uint64_t *v0;

  return sub_23FAE8D64(*v0, v0[1]);
}

void sub_23FB029F4(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool.init(handwritten:)(a1, a2);
}

void sub_23FB02A08(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  RequestPrescribedPlan.TextTool.init(transcript:)(a1, a2);
}

#error "23FB02A44: call analysis failed (funcsize=10)"

void sub_23FB02A50(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  TranscriptProtoRequestPrescribedPlanTextTool.init(handwritten:)(a1, a2);
}

void sub_23FB02A64(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  TranscriptProtoRequestPrescribedPlanConvertTool.init(handwritten:)(a1, a2);
}

void sub_23FB02A78(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  RequestPrescribedPlan.ConvertTool.init(transcript:)(a1, a2);
}

#error "23FB02AB4: call analysis failed (funcsize=10)"

void sub_23FB02AC0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  TranscriptProtoRequestPrescribedPlanDisplayTool.init(handwritten:)(a1, a2);
}

void sub_23FB02AD4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  RequestPrescribedPlan.DisplayTool.init(transcript:)(a1, a2);
}

#error "23FB02B10: call analysis failed (funcsize=10)"

void sub_23FB02B1C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  RequestPrescribedPlan.KnowledgeTool.init(transcript:)(a1, a2);
}

#error "23FB02B58: call analysis failed (funcsize=10)"

void sub_23FB02B64(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  TranscriptProtoRequestPrescribedPlanKnowledgeTool.init(handwritten:)(a1, a2);
}

void sub_23FB02B78()
{
  Action.init(transcript:)();
}

uint64_t sub_23FB02B8C()
{
  return sub_23FAE8EFC();
}

void sub_23FB02BA0()
{
  TranscriptProtoAction.init(handwritten:)();
}

void sub_23FB02BB4()
{
  ActionCancellation.init(transcript:)();
}

uint64_t sub_23FB02BC8()
{
  return sub_23FAE9028();
}

void sub_23FB02BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  TranscriptProtoActionCancellation.init(handwritten:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23FB02BF0()
{
  ClientAction.init(transcript:)();
}

uint64_t sub_23FB02C04()
{
  return sub_23FAE9154();
}

void sub_23FB02C18()
{
  TranscriptProtoClientAction.init(handwritten:)();
}

void sub_23FB02C2C()
{
  QueryStep.init(transcript:)();
}

uint64_t sub_23FB02C40()
{
  return sub_23FAE9280();
}

void sub_23FB02C54()
{
  TranscriptProtoQueryStep.init(handwritten:)();
}

void sub_23FB02C68()
{
  VariableStep.init(transcript:)();
}

char *sub_23FB02C7C()
{
  return sub_23FAE93AC();
}

void sub_23FB02C90()
{
  TranscriptProtoVariableStep.init(handwritten:)();
}

void IntelligenceFlowError.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  objc_allocWithZone(MEMORY[0x24BDD1540]);
  sub_23F6B5F1C();
  sub_23FB29EEC();
  sub_23FB1F3FC(v0, v1, v2, 0);
  v3 = sub_23FB2C704();
  sub_23FB297B8(v3, type metadata accessor for TranscriptProtoIntelligenceFlowError);
  sub_23F6B5F7C();
}

void sub_23FB02D0C()
{
  IntelligenceFlowError.init(transcript:)();
  sub_23F878AAC();
}

uint64_t sub_23FB02D2C()
{
  return sub_23FAE9690();
}

uint64_t TranscriptProtoIntelligenceFlowError.init(handwritten:)()
{
  uint64_t *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  sub_23FB2A57C();
  v1 = (void *)sub_23FB2C6E0();
  v2 = objc_msgSend(v1, sel_domain);

  v3 = sub_23FB2F140();
  v5 = v4;

  v6 = (void *)sub_23FB2C6E0();
  v7 = objc_msgSend(v6, sel_code);

  sub_23FB2B0DC();
  sub_23F6F0878();
  *v0 = v3;
  v0[1] = v5;
  v0[2] = (uint64_t)v7;
  sub_23FB2C6F8();
  v8 = sub_23FB29A14();
  return sub_23F877AEC(v8, v9, v10);
}

uint64_t sub_23FB02DD4()
{
  return TranscriptProtoIntelligenceFlowError.init(handwritten:)();
}

void RequestContent.SystemPromptResolution.UserAction.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34[4];
  uint64_t v35;
  char *v36;
  uint64_t v37;

  sub_23F6B5220();
  v34[3] = v5;
  v35 = v1;
  v7 = v6;
  sub_23FB2B0D4();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  v36 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  v11 = MEMORY[0x24BDAC7A8](v10);
  sub_23F6D3910(v11, v12, v13, v14, v15, v16, v17, v18, v34[0]);
  sub_23FB2EB1C();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F6B65E0();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F876D18();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B5F5C();
  sub_23F6916B8(&qword_256EB21D0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v22);
  v23 = sub_23F6B5864();
  v24 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(v23);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F6B59F8();
  v37 = v7;
  v26 = sub_23F6B6964();
  sub_23F6B4F58(v26, v27, &qword_256EB21D0);
  v28 = sub_23F6B5164(v2, 1, v24);
  if (!v30)
  {
    v34[1] = v4;
    v34[2] = v3;
    sub_23FB29F30(v2, v29, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
    sub_23F6B6190();
    v33 = (char *)&loc_23FB02F8C + 4 * byte_23FB92AD0[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_23F923588(v28, &qword_256EB21D0);
  sub_23F6916B8(&qword_256EBEED8);
  sub_23FB297E0();
  sub_23F77DA84();
  sub_23F6B5AD4();
  *v31 = v24;
  v31[1] = v0;
  v32 = sub_23F77D9E4();
  sub_23FB29B7C(v32, type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction);
  sub_23F876B60();
  sub_23F6B5100();
}

void RequestContent.SystemPromptResolution.ResolutionInput.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28[7];
  uint64_t v29;

  sub_23F6B5220();
  v28[6] = v5;
  v29 = v2;
  v6 = sub_23FB2A014();
  type metadata accessor for TranscriptProtoRequestContentSpeechContent(v6);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F923EC8();
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  v28[4] = (uint64_t)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F6B58C8();
  v28[2] = *(_QWORD *)(v11 - 8);
  v28[3] = v11;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  v14 = sub_23FB29854(v13, v28[0]);
  type metadata accessor for TranscriptProtoRequestContentTextContent(v14);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B5C80();
  MEMORY[0x24BDAC7A8](v16);
  sub_23FB29D24((uint64_t)v28 - v17);
  sub_23F6B6F00();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  v19 = sub_23FB2A108();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5298();
  v21 = sub_23F78F5B0();
  sub_23F6B6264(v21, v22);
  v23 = sub_23F6B5164(v3, 1, v19);
  if (!v25)
  {
    sub_23FB29B3C(v3, v24, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
    sub_23F7D2F98();
    v27 = (char *)&loc_23FB03334 + 4 * byte_23FB92AD8[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_23F77E3DC(v23, &qword_256EB2130);
  sub_23F6916B8(&qword_256EBEEE0);
  sub_23FB297E0();
  sub_23F77DA84();
  sub_23F6B5AD4();
  *v26 = v0;
  v26[1] = v1;
  sub_23F77D9E4();
  sub_23F6F8C88(v4, type metadata accessor for TranscriptProtoSystemPromptResolutionInput);
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23FB034DC()
{
  RequestContent.SystemPromptResolution.init(transcript:)();
}

uint64_t sub_23FB034F0()
{
  return sub_23FAE982C();
}

void TranscriptProtoSystemPromptResolutionInput.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD v21[12];

  sub_23F6B5220();
  sub_23FB2AF54(v0);
  v1 = sub_23FB29E14();
  v21[5] = type metadata accessor for TranscriptProtoRequestContentTextContent(v1);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v2);
  v21[6] = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[7] = *(_QWORD *)(sub_23F6B58C8() - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v5);
  sub_23FB2A0EC();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  v21[8] = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v8);
  v21[9] = (char *)v21 - v9;
  v10 = sub_23F6D398C();
  type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(v10);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EB2130);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23FB2A108();
  v14 = sub_23FB29C60();
  v17 = sub_23FB298EC(v14, v15, v16, v13);
  type metadata accessor for TranscriptProtoSystemPromptResolutionInput(v17);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  v18 = sub_23F6B7194();
  sub_23F6F5920(v18, v19, type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput);
  sub_23F6B6964();
  v20 = (char *)sub_23FB0367C + 4 * byte_23FB92ADC[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23FB0367C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6F8C88(v0, type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput);
  sub_23F77E608();
  swift_storeEnumTagMultiPayload();
  sub_23F6B9258(v1, 0);
  sub_23FB29C34(v1, v2, &qword_256EB2130);
  sub_23F8778A8();
  sub_23F6B5100();
}

void sub_23FB03818()
{
  TranscriptProtoSystemPromptResolutionInput.init(handwritten:)();
}

void sub_23FB0382C()
{
  RequestContent.SystemPromptResolution.ResolutionInput.init(transcript:)();
}

void TranscriptProtoSystemPromptResolutionUserAction.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  sub_23F6B5220();
  v1 = v0;
  sub_23F6B632C();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v2);
  sub_23FAD67A8(v3, v15);
  sub_23FB2ED38();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F77DC18();
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_23FB29944();
  type metadata accessor for RequestContent.SystemPromptResolution.UserAction(v6);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B52B0();
  sub_23F6916B8(&qword_256EB21D0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23F78F27C();
  v10 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(v9);
  v11 = sub_23FB298EC(v1, 1, 1, v10);
  type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(v11);
  sub_23F6F0878();
  v12 = sub_23FAD6F18();
  sub_23F6F5920(v12, v13, type metadata accessor for RequestContent.SystemPromptResolution.UserAction);
  v14 = (char *)sub_23FB03950 + 4 * byte_23FB92AE0[sub_23F70D4E8()];
  __asm { BR              X10 }
}

void sub_23FB03950(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;

  sub_23FB298A0(a1, type metadata accessor for RequestContent.SystemPromptResolution.UserAction);
  *v2 = *v1;
  sub_23F7B0BC4();
  swift_storeEnumTagMultiPayload();
  sub_23FB298A8((uint64_t)v2, 0);
  sub_23FB29C34((uint64_t)v2, v3, &qword_256EB21D0);
  sub_23F876FC4();
  sub_23F6B5100();
}

void sub_23FB03A80()
{
  TranscriptProtoSystemPromptResolution.init(handwritten:)();
}

void sub_23FB03A94()
{
  ActionStepResult.init(transcript:)();
}

void sub_23FB03AA8()
{
  sub_23FAE9BB0();
}

void sub_23FB03AD4()
{
  TranscriptProtoActionStepResult.init(handwritten:)();
}

void StatementResultPayload.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_23F6B5220();
  v5 = sub_23FB29ABC(v4);
  v31 = type metadata accessor for StatementResultPayload(v5);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F693EB0();
  sub_23F6916B8(&qword_256EA7E60);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B53AC();
  sub_23F6916B8(&qword_256EA2780);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23F78F260();
  type metadata accessor for TranscriptProtoStatementOutcome(v9);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F7A00C8();
  sub_23FB2D0DC();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F77BF70();
  if (!v0)
  {
    sub_23FB2AE70();
    StatementOutcome.init(transcript:)();
    v13 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
    v14 = sub_23FB2A63C(v13);
    sub_23F6B4F58(v14, v2, &qword_256EA7E60);
    sub_23F77A8E0(v2, v15, v16, v17, v18, v19, v20, v21);
    v22 = v1 + *(int *)(v31 + 20);
    v23 = sub_23FB2A370();
    sub_23F6B5A8C(v22, v24, v25, v23);
    v26 = sub_23F879688();
    v27(v26);
    sub_23FB29C34(v3, v28, &qword_256EA2780);
    sub_23FB2A6AC(v29, v30, type metadata accessor for StatementResultPayload);
  }
  sub_23FB297B0(v12, type metadata accessor for TranscriptProtoStatementResultPayload);
  sub_23F877A30();
  sub_23F6B5100();
}

void sub_23FB03C88()
{
  StatementResult.init(transcript:)();
}

uint64_t sub_23FB03C9C()
{
  return sub_23FAE9958();
}

#error "23FB03DAC: call analysis failed (funcsize=113)"

void sub_23FB03E9C()
{
  TranscriptProtoStatementResult.init(handwritten:)();
}

void sub_23FB03EB0()
{
  QueryStepResults.init(transcript:)();
}

uint64_t sub_23FB03EC4()
{
  return sub_23FAE9A84();
}

void sub_23FB03ED8()
{
  TranscriptProtoQueryStepResults.init(handwritten:)();
}

void sub_23FB03EEC()
{
  ActionResponse.init(transcript:)();
}

void sub_23FB03F00()
{
  sub_23FAE9BB0();
}

void sub_23FB03F2C()
{
  TranscriptProtoActionResponse.init(handwritten:)();
}

void ResponseOutput.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_23F6B5220();
  v7 = v6;
  sub_23FB29ABC(v8);
  v42 = sub_23FB2CE30();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5F6C();
  sub_23F6916B8(&qword_256EA85E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B5C80();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B6B3C();
  sub_23F6916B8(&qword_256EA85E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F77DC18();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F77E490();
  v15 = sub_23FB2A518();
  sub_23F779A80(v15, v16, v17, v18, v19, v20, v21, v22);
  if (!v1)
  {
    v41 = v2;
    v24 = type metadata accessor for TranscriptProtoResponseOutput(0);
    sub_23FAD6F04(v7 + *(int *)(v24 + 28), v25, &qword_256EA85E8);
    sub_23F77B320(v5, v26, v27, v28, v29, v30, v31, v32);
    sub_23FB2A274(v7 + *(int *)(v24 + 32), v33, &qword_256EA85E8);
    sub_23F77B320(v41, v34, v35, v36, v37, v38, v39, v40);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v0, **((unsigned int **)&unk_2510034E0 + *(char *)(v7 + 8)), v42);
    sub_23F6D3ECC(v4, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
    sub_23FB2AB5C();
    v23 = sub_23FB2CE18();
  }
  sub_23FB298A0(v23, type metadata accessor for TranscriptProtoResponseOutput);
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23FB04120()
{
  SystemResponse.init(transcript:)();
}

uint64_t sub_23FB04134()
{
  return sub_23FAE9C18();
}

uint64_t sub_23FB04148(uint64_t a1)
{
  return TranscriptProtoSystemResponse.init(handwritten:)(a1);
}

void InterpretedStatementResult.init(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61[5];
  char *v62;
  uint64_t v63;
  uint64_t v64;

  sub_23F6B5220();
  sub_23FB2A3F8();
  v61[1] = v15;
  sub_23FB2A07C();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23FAD6DDC(v17, v61[0]);
  sub_23FB2D0DC();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  v61[4] = (uint64_t)v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F876D18();
  MEMORY[0x24BDAC7A8](v24);
  v26 = (unsigned int *)((char *)v61 - v25);
  v27 = sub_23F6B58C8();
  v63 = *(_QWORD *)(v27 - 8);
  v64 = v27;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v28);
  v61[3] = (uint64_t)v61 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v30);
  v62 = (char *)v61 - v31;
  sub_23F6B5664();
  v33 = MEMORY[0x24BDAC7A8](v32);
  sub_23FB2B01C(v33, v34, v35, v36, v37, v38, v39, v40, v61[0]);
  sub_23F6916B8(&qword_256EA2798);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F77DC18();
  MEMORY[0x24BDAC7A8](v42);
  v43 = sub_23F923B4C();
  if (!*(_QWORD *)(v12 + *(int *)(type metadata accessor for TranscriptProtoInterpretedStatementResult(v43) + 28) + 8))
  {
    v46 = sub_23F72E034();
    sub_23F6B5A8C(v14, v47, v48, v46);
    goto LABEL_6;
  }
  sub_23F77E600();
  sub_23FB2A664();
  v11 = v10;
  sub_23F77B568();
  sub_23F77DC10(v44, &qword_256EA2798);
  if (!v10)
  {
    v49 = sub_23F72E034();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v14, 0, 1, v49);
    sub_23F6B6A48();
LABEL_6:
    sub_23FB29D7C();
    if (v11)
    {
      sub_23FB297A8(v50, type metadata accessor for TranscriptProtoInterpretedStatementResult);
    }
    else
    {
      v61[0] = (uint64_t)v20;
      v52 = *v26;
      sub_23F77E600();
      v53 = sub_23FB29D40();
      sub_23FB297C0(v53, type metadata accessor for TranscriptProtoStatementID);
      sub_23FB29D7C();
      if (v52)
      {
        sub_23FB297A8(v54, type metadata accessor for TranscriptProtoInterpretedStatementResult);
        v51 = sub_23FB2A5E8(v63);
      }
      else
      {
        v55 = *v13;
        sub_23F77DCD4();
        v56 = (uint64_t)v62;
        v57 = sub_23FB2C74C();
        sub_23FB297C8(v57, type metadata accessor for TranscriptProtoStatementID);
        sub_23FB29D7C();
        if (!v55)
        {
          sub_23F6B6548();
          v59 = sub_23FB29960();
          sub_23FB298A0(v59, type metadata accessor for TranscriptProtoStatementID);
          sub_23F6B6548();
          sub_23F77BF70();
          StatementOutcome.init(transcript:)();
          sub_23F6B6224();
          v60 = sub_23FB2D550();
          sub_23FB297A8(v60, type metadata accessor for TranscriptProtoInterpretedStatementResult);
          goto LABEL_14;
        }
        sub_23FB297A8(v58, type metadata accessor for TranscriptProtoInterpretedStatementResult);
        sub_23F9243AC(v56);
        v51 = sub_23F9243AC(a10);
      }
    }
    sub_23F6B6034(v51, &qword_256EA2798);
    goto LABEL_14;
  }
  sub_23FB297A8(v45, type metadata accessor for TranscriptProtoInterpretedStatementResult);
  sub_23F6B6A48();
LABEL_14:
  sub_23F77DB18();
  sub_23F6B5100();
}

void sub_23FB0452C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  InterpretedStatementResult.init(transcript:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_23FB04540()
{
  return sub_23FAE9D4C();
}

#error "23FB04668: call analysis failed (funcsize=182)"

#error "23FB04844: call analysis failed (funcsize=5)"

void TranscriptProtoParameterSet.handwrittenParameters.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(_QWORD);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  BOOL v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84[2];
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;

  sub_23F6B5220();
  v98 = v2;
  v100 = type metadata accessor for Candidate(0);
  v89 = *(_QWORD *)(v100 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v5);
  v93 = (uint64_t)v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v7);
  v94 = (uint64_t)v84 - v8;
  v9 = sub_23F6D398C();
  v97 = type metadata accessor for TranscriptProtoCandidate(v9);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  v88 = (uint64_t)v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F7F6400();
  sub_23F6916B8(&qword_256EA2628);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B6618();
  v15 = MEMORY[0x24BDAC7A8](v14);
  sub_23FB2A2F0(v15, v16, v17, v18, v19, v20, v21, v22, v84[0]);
  sub_23F6916B8(&qword_256EBEEE8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v23);
  v87 = (uint64_t)v84 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  v26 = MEMORY[0x24BDAC7A8](v25);
  v34 = sub_23F923878(v26, v27, v28, v29, v30, v31, v32, v33, v84[0]);
  v96 = type metadata accessor for TranscriptProtoParameter(v34);
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F6B5208();
  v36 = *v1;
  if (!*(_QWORD *)(*v1 + 16))
  {
    sub_23F6B5F1C();
LABEL_28:
    sub_23F6B5908();
LABEL_30:
    sub_23F6B5100();
    return;
  }
  v101 = *(_QWORD *)(*v1 + 16);
  sub_23F78F3B0();
  v103 = v36 + v37;
  v91 = *(_QWORD *)(v38 + 72);
  v84[1] = v36;
  sub_23F6B91E8();
  v86 = v0;
  v39 = (_QWORD *)MEMORY[0x24BEE4B00];
  v40 = v99;
  v92 = v3;
  v85 = v4;
  while (1)
  {
    sub_23F77DC5C(v103, v4);
    v41 = *(_QWORD *)v4;
    v42 = *(_QWORD *)(v4 + 8);
    v43 = *(_QWORD *)(v4 + 16);
    v44 = *(unsigned __int8 *)(v4 + 24);
    if (*(_BYTE *)(v4 + 24))
      v43 = 0;
    v102 = v43;
    sub_23F6B6A10(v4 + *(int *)(v96 + 24), v40);
    sub_23F6B6A10(v40, v3);
    v45 = sub_23FB2A344();
    sub_23F6B5164(v45, v46, v97);
    if (v47)
    {
      sub_23F77E584();
      sub_23F6B64F4(v40);
      sub_23F6B64F4(v3);
      v48 = 1;
      v49 = v95;
    }
    else
    {
      v90 = v39;
      v50 = v42;
      v51 = v86;
      sub_23F77DC08(v3, v86);
      sub_23F77DB78(v51, v88);
      sub_23F77DCD4();
      v52 = v98;
      Candidate.init(transcript:)();
      v98 = v52;
      if (v52)
      {
        sub_23F6B4F84(v99, &qword_256EA2628);
        sub_23FB297EC(v83, type metadata accessor for TranscriptProtoCandidate);
        sub_23FB2AF30();
        sub_23F6B6090();
        sub_23F6F8C88(v85, type metadata accessor for TranscriptProtoParameter);
        sub_23F6B6740();
        goto LABEL_30;
      }
      sub_23F6B64F4(v99);
      v53 = sub_23F6D3D70();
      sub_23F6F8C88(v53, v54);
      v49 = v95;
      sub_23F6F594C(v94, v95, type metadata accessor for Candidate);
      v48 = 0;
      v42 = v50;
      v4 = v85;
      v39 = v90;
    }
    v55 = v100;
    sub_23FB2999C(v49, v48, 1);
    sub_23F6B5164(v49, 1, v55);
    if (v47)
    {
      sub_23F6B4F84(v49, &qword_256EBEEE8);
      sub_23F77E600();
      v56 = sub_23F6B6F08();
      v58 = sub_23FB2ACDC(v56, v57, v102);
      v60 = v59;
      sub_23F6B6A48();
      if ((v60 & 1) != 0)
      {
        swift_isUniquelyReferenced_nonNull_native();
        sub_23F6916B8(&qword_256EACE88);
        sub_23FB2A6C4();
        sub_23F7A01C8();
        v61 = v87;
        sub_23F6F594C(v39[7] + *(_QWORD *)(v89 + 72) * v58, v87, type metadata accessor for Candidate);
        sub_23F691800();
        sub_23FB2F92C();
        sub_23FAD7094();
        v62 = 0;
      }
      else
      {
        v62 = 1;
        v61 = v87;
      }
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v61, v62, 1, v100);
      sub_23F756640();
      sub_23F6B4F84(v61, &qword_256EBEEE8);
      v3 = v92;
      v40 = v99;
      goto LABEL_25;
    }
    sub_23F6F594C(v49, v93, type metadata accessor for Candidate);
    swift_isUniquelyReferenced_nonNull_native();
    v63 = v42;
    LODWORD(v90) = v44;
    sub_23FB2ACDC(v41, v42, v102);
    sub_23FB2ADC8();
    if (__OFADD__(v66, v67))
      break;
    v68 = v64;
    v69 = v65;
    sub_23F6916B8(&qword_256EACE88);
    v70 = sub_23FB2F914();
    v40 = v99;
    if ((v70 & 1) != 0)
    {
      v71 = sub_23F87886C();
      v73 = sub_23F78C7B0(v71, v72, v102, (char)v90);
      if ((v69 & 1) != (v74 & 1))
        goto LABEL_33;
      v68 = v73;
    }
    if ((v69 & 1) != 0)
    {
      v75 = sub_23FB2A898();
      sub_23FB24898(v75, v76);
    }
    else
    {
      v39[(v68 >> 6) + 8] |= 1 << v68;
      v77 = v39[6] + 32 * v68;
      *(_QWORD *)v77 = v41;
      *(_QWORD *)(v77 + 8) = v63;
      *(_QWORD *)(v77 + 16) = v102;
      *(_BYTE *)(v77 + 24) = (_BYTE)v90;
      v78 = sub_23FB2A898();
      sub_23F6F594C(v78, v79, type metadata accessor for Candidate);
      v80 = v39[2];
      v81 = __OFADD__(v80, 1);
      v82 = v80 + 1;
      if (v81)
        goto LABEL_32;
      v39[2] = v82;
      sub_23F6B5508();
    }
    sub_23F693E04();
    sub_23FAD7094();
    v3 = v92;
LABEL_25:
    sub_23F70D63C(v4);
    v103 += v91;
    if (!--v101)
    {
      sub_23F6B5908();
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  sub_23FB2FBD8();
  __break(1u);
}

uint64_t sub_23FB04DE0()
{
  return ActionResolverRequest.init(transcript:)();
}

uint64_t sub_23FB04DF4()
{
  return sub_23FAE9E80();
}

void TranscriptProtoParameterSet.init(handwritten:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_23FB29E14();
  type metadata accessor for TranscriptProtoParameterSet(v2);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  v3 = sub_23FB2ABC8();
  sub_23FAE2D1C(v3);
  if (v0)
  {
    sub_23F693DFC();
    v5 = sub_23F6B53A4();
    sub_23FB29C9C(*(_QWORD *)(v5 - 8));
  }
  else
  {
    v6 = v4;
    sub_23F693DFC();
    *v1 = v6;
  }
  sub_23F6D377C();
}

#error "23FB04E84: call analysis failed (funcsize=5)"

void sub_23FB04E90(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  ResponseGenerationRequest.init(transcript:)(a1, a2);
}

#error "23FB04ED0: call analysis failed (funcsize=10)"

void sub_23FB04EDC(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  TranscriptProtoResponseGenerationRequest.init(handwritten:)(a1, a2);
}

void TranscriptProtoCandidate.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  sub_23F6B5220();
  v6 = v5;
  v8 = sub_23FB29ED4(v7);
  v62 = type metadata accessor for TranscriptProtoCandidate(v8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  v63 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F6B58C8();
  v59 = *(_QWORD *)(v11 - 8);
  v60 = v11;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  v58 = (uint64_t)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  v16 = sub_23FB29854(v15, v56);
  v66 = type metadata accessor for TranscriptProtoCandidatePromptStatus(v16);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B5268();
  sub_23F6916B8(&qword_256EA8588);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  v67 = (uint64_t)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_23F6B632C();
  sub_23F70D9A8();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B6634();
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA2610);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6B5298();
  v23 = sub_23FB2A4F8();
  sub_23F75E710(v23, v6, v24);
  sub_23FB2A458();
  if (v2)
  {
    sub_23F6B51EC(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    v25 = v6;
  }
  else
  {
    sub_23F6B51EC(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    v26 = sub_23FAE2D10();
    v27 = v65;
    sub_23F6D3ECC(v26, v28, v29);
    v30 = sub_23FB298EC(v0, 0, 1, v27);
    v31 = (int *)type metadata accessor for Candidate(v30);
    v32 = v31[6];
    v57 = *(unsigned __int8 *)(v6 + v31[5]);
    v56 = v6;
    v33 = *(_QWORD *)(v6 + v32);
    v34 = *(unsigned __int8 *)(v6 + v32 + 8);
    sub_23FAC3CEC();
    v36 = v33 != 0;
    if (!v34)
      v36 = v33;
    *(_QWORD *)v4 = v36;
    *(_BYTE *)(v4 + 8) = v34;
    *(_BYTE *)(v4 + 9) = 0;
    v37 = v67;
    sub_23FB29CE8(v4, v35, type metadata accessor for TranscriptProtoCandidatePromptStatus);
    sub_23FAD6A98(v37, 0);
    v38 = v6 + v31[7];
    v40 = v58;
    v39 = v59;
    sub_23F6B633C(v58, v38, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 16));
    sub_23FB2A890();
    v41 = sub_23FB2A13C();
    v43 = v42;
    sub_23FAD69A0();
    v44 = v61;
    sub_23FAC3DD4();
    *(_DWORD *)v44 = v34;
    *(_QWORD *)(v44 + 8) = v41;
    *(_QWORD *)(v44 + 16) = v43;
    sub_23F6B530C(v40, *(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
    sub_23FAD6AA4(v44, 0);
    v46 = v62;
    v45 = v63;
    v47 = sub_23FB29E00(*(int *)(v62 + 20));
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v47, v48, v49, v65);
    sub_23F693EC8();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v50, v51, v52, v66);
    sub_23FAD6AA4((uint64_t)&v45[*(int *)(v46 + 28)], 1);
    sub_23F6F0CB4();
    sub_23FB29BEC(v0, v53, &qword_256EA2610);
    *v45 = v57;
    sub_23FB29BB0(v67, v54, &qword_256EA8588);
    sub_23FB29D9C(v44, v55, &qword_256EA25E0);
    sub_23F6F594C((uint64_t)v45, v64, type metadata accessor for TranscriptProtoCandidate);
    v25 = v56;
  }
  sub_23F6F8C88(v25, type metadata accessor for Candidate);
  sub_23F877A30();
  sub_23F6B5100();
}

void sub_23FB05240()
{
  TranscriptProtoParameterSet.init(handwritten:)();
}

void sub_23FB05258()
{
  ClientInitiatedClientAction.init(transcript:)();
}

uint64_t sub_23FB0526C()
{
  uint64_t *v0;

  return sub_23FAE9FAC(*v0, v0[1], v0[2]);
}

void sub_23FB05288(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  TranscriptProtoClientInitiatedClientAction.init(handwritten:)(a1, a2);
}

void sub_23FB0529C(uint64_t a1)
{
  SafetyModeRelease.init(transcript:)(a1);
}

void sub_23FB052B0()
{
  sub_23FAE9BB0();
}

void sub_23FB052DC(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  SafetyModeException.init(transcript:)(a1, a2);
}

uint64_t sub_23FB052F0()
{
  uint64_t *v0;

  return sub_23FAEA0FC(*v0, v0[1]);
}

void sub_23FB05308(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  TranscriptProtoSafetyModeException.init(handwritten:)(a1, a2);
}

void VariableSetter.init(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;

  sub_23F6B5220();
  v34 = v13;
  sub_23F6B632C();
  sub_23F70D9A8();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B65E0();
  v16 = MEMORY[0x24BDAC7A8](v15);
  sub_23FB2B01C(v16, v17, v18, v19, v20, v21, v22, v23, v32);
  sub_23F6B6634();
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6B5298();
  sub_23FB2AD60();
  Dictionary<>.init(transcript:)();
  if (v10)
  {
    sub_23FB297C8(v25, type metadata accessor for TranscriptProtoVariableSetter);
  }
  else
  {
    v33 = v25;
    type metadata accessor for TranscriptProtoVariableSetter(0);
    sub_23F77B844();
    v26 = sub_23FB2A04C();
    sub_23F78F5D0(v26, v27, v28);
    sub_23FB2ED2C();
    v29 = sub_23F6B6420(a10, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
    sub_23FB297C8(v29, type metadata accessor for TranscriptProtoVariableSetter);
    *v34 = v33;
    v30 = type metadata accessor for VariableSetter(0);
    v31 = sub_23FB2A2A8(v30);
    sub_23FB2A44C(v31, v11);
  }
  sub_23F876FC4();
  sub_23F6B5100();
}

void sub_23FB059B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  VariableSetter.init(transcript:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_23FB059CC()
{
  return sub_23FAEA1E4();
}

#error "23FB05B10: call analysis failed (funcsize=101)"

void Dictionary<>.init(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int v82;
  unint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  unint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95[6];
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unsigned int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t (*v108)(uint64_t, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t (*v113)(uint64_t, uint64_t, uint64_t);
  _QWORD v114[6];

  sub_23F6B5220();
  a19 = v21;
  a20 = v22;
  v112 = v20;
  v24 = v23;
  v25 = sub_23F6B632C();
  sub_23F6B53F8(v25, (uint64_t)&a16);
  v95[4] = v26;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v27);
  v106 = (uint64_t)v95 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v29);
  v100 = (char *)v95 - v30;
  sub_23F6B5664();
  v32 = MEMORY[0x24BDAC7A8](v31);
  sub_23F77E6A4(v32, v33, v34, v35, v36, v37, v38, v39, v95[0]);
  v99 = sub_23F6916B8(&qword_256EA2708);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v40);
  v98 = (uint64_t)v95 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v43);
  v111 = (uint64_t)v95 - v44;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F6B5314((uint64_t)v95 - v46);
  v47 = sub_23FB2F050();
  sub_23F78F084(v24, v114);
  v101 = v114[0];
  v95[2] = v114[1];
  v102 = v114[3];
  v48 = v114[4];
  v95[3] = (unint64_t)(v114[2] + 64) >> 6;
  v95[1] = v24;
  sub_23F6B5508();
  while (1)
  {
    v110 = v47;
    if (v48)
    {
      sub_23FB2A1A8();
      v103 = v48;
      v50 = v49 | (v102 << 6);
    }
    else
    {
      if (__OFADD__(v102, 1))
        goto LABEL_43;
      sub_23FB29CD8();
      if (v51 == v52)
        goto LABEL_39;
      sub_23FB2A25C();
      if (!v53)
      {
        sub_23FB29B84();
        if (v51 == v52)
          goto LABEL_39;
        sub_23FB29BB8();
        if (!v54)
        {
          sub_23FB29B84();
          if (v51 == v52)
            goto LABEL_39;
          sub_23FB29BB8();
          if (!v55)
          {
            sub_23FB29B84();
            if (v51 == v52)
              goto LABEL_39;
            sub_23FB29BB8();
            if (!v56)
            {
              sub_23FB29B84();
              if (v51 == v52)
                goto LABEL_39;
              sub_23FB29BB8();
              if (!v57)
              {
                sub_23FB29CD8();
                if (v51 == v52)
                  goto LABEL_39;
                sub_23FB2A25C();
                if (!v93)
                {
                  while (1)
                  {
                    sub_23FB29CD8();
                    if (v51 == v52)
                      break;
                    sub_23FB2ADE0();
                    if (v94)
                      goto LABEL_20;
                  }
LABEL_39:
                  sub_23FB2A8B8();
                  sub_23F77DE3C();
LABEL_40:
                  sub_23F6B5100();
                  return;
                }
              }
            }
          }
        }
      }
LABEL_20:
      sub_23F6B5DC0();
      v102 = v58;
      v103 = v59;
      v50 = v60 + (v58 << 6);
    }
    v61 = v101;
    v62 = *(_QWORD *)(v101 + 48);
    v109 = *(_QWORD *)(sub_23F6B58C8() - 8);
    v63 = v62 + *(_QWORD *)(v109 + 72) * v50;
    v113 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v109 + 16);
    v64 = v96;
    sub_23F6B633C(v96, v63, v113);
    v65 = *(_QWORD *)(v61 + 56);
    v66 = sub_23F6B6634();
    v67 = *(_QWORD **)(v66 - 8);
    v68 = v99;
    v69 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v67[2];
    v69(v64 + *(int *)(v99 + 48), v65 + v67[9] * v50, v66);
    v108 = v69;
    v70 = v111;
    sub_23F6B4EC0(v64, v111, &qword_256EA2708);
    v71 = v97;
    v107 = v70 + *(int *)(v68 + 48);
    sub_23FB2AA3C(v97);
    sub_23FB2AA90();
    ((void (*)(void))v69)();
    v104 = sub_23FB2C758();
    sub_23FB2A510(v71);
    v72 = v67[1];
    v73 = sub_23F77E46C();
    ((void (*)(uint64_t))v72)(v73);
    v74 = v98;
    v75 = v98 + *(int *)(v68 + 48);
    sub_23FB2AA3C(v98);
    sub_23F78F5D0(v75, v107, v108);
    v76 = v112;
    sub_23FB2ED20();
    v112 = v76;
    v77 = sub_23F6B63E8();
    if (v76)
    {
      ((void (*)(uint64_t))v72)(v77);
      sub_23FB2A510(v74);
      sub_23F693DFC();
      sub_23F6B4F84(v111, &qword_256EA2708);
      sub_23F77DE3C();
      sub_23FB2A8B8();
      goto LABEL_40;
    }
    ((void (*)(uint64_t))v72)(v77);
    sub_23FB2AED8();
    v78 = *(void (**)(uint64_t))(v72 + 32);
    v79 = v105;
    v80 = sub_23F6B689C();
    v81 = v95[5];
    v78(v80);
    sub_23FB2A510(v74);
    sub_23F6B5EF0(v106, v79, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v72 + 16));
    v47 = v110;
    sub_23F77D9A4();
    v82 = v104;
    sub_23F78C718(v104);
    sub_23FB2ADC8();
    if (__OFADD__(v85, v86))
      break;
    v87 = v83;
    v88 = v84;
    sub_23F6916B8(&qword_256EBEEB8);
    if ((sub_23FB2A6C4() & 1) != 0)
    {
      v89 = sub_23F78C718(v82);
      if ((v88 & 1) != (v90 & 1))
        goto LABEL_44;
      v87 = v89;
    }
    if ((v88 & 1) != 0)
    {
      sub_23F6B5EF0(*(_QWORD *)(v47 + 56) + *(_QWORD *)(v72 + 72) * v87, v106, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v72 + 40));
    }
    else
    {
      sub_23F7D2B98(v47 + 8 * (v87 >> 6));
      *(_DWORD *)(v91 + 4 * v87) = v82;
      ((void (*)(unint64_t, uint64_t, uint64_t))v78)(*(_QWORD *)(v47 + 56) + *(_QWORD *)(v72 + 72) * v87, v106, v81);
      sub_23FB2AC90();
      if (v52)
        goto LABEL_42;
      *(_QWORD *)(v47 + 16) = v92;
    }
    sub_23FAD7094();
    sub_23F70D728(v105, *(uint64_t (**)(uint64_t, uint64_t))(v72 + 8));
    sub_23F6B4F84(v111, &qword_256EA2708);
    v48 = v103;
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  sub_23FB2FBD8();
  __break(1u);
}

uint64_t sub_23FB0608C(uint64_t a1)
{
  return TranscriptProtoVariableSetter.init(handwritten:)(a1);
}

void RequestContent.SystemPromptResolution.RequirementResolution.init(transcript:)(char *a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;

  v3 = *a1;
  sub_23F6F8C88((uint64_t)a1, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution);
  *a2 = v3;
  sub_23FAD6A50();
}

void RequestContent.SystemPromptResolution.ActionCancellation.init(transcript:)(uint64_t a1)
{
  sub_23F6F8C88(a1, type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation);
  sub_23F878AAC();
}

void sub_23FB06100()
{
  RequestContent.SystemPromptResolution.UserAction.init(transcript:)();
}

uint64_t sub_23FB06114()
{
  return sub_23FAEA310();
}

void TranscriptProtoSystemPromptResolutionRequirementResolution.init(handwritten:)(char *a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;

  v3 = *a1;
  sub_23FB2B0D4();
  sub_23FAC3074();
  *a2 = v3;
  sub_23FAD6A50();
}

void sub_23FB06160()
{
  TranscriptProtoSystemPromptResolutionUserAction.init(handwritten:)();
}

void ActionResult.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  sub_23F6B5220();
  sub_23FB29DC8();
  v5 = sub_23FB2C788();
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B51D0();
  v7 = sub_23FB2C80C();
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23F78F260();
  v10 = v1 + *(int *)(type metadata accessor for ActionResult(v9) + 20);
  sub_23FB2A370();
  sub_23FAD6AA4(v10, 1);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v3, *MEMORY[0x24BE52270], v5);
  v11 = sub_23FB2C7D0();
  sub_23FB29B7C(v11, type metadata accessor for TranscriptProtoActionResult);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 104))(v4, *MEMORY[0x24BE523B8], v7);
  v12 = sub_23F7D24F0();
  v15 = sub_23F75E710(v12, v13, v14);
  sub_23F77DD64(v15, &qword_256EA2780);
  sub_23FAD6AA4(v10, 1);
  sub_23FB29EE0();
  sub_23F6B5100();
}

void sub_23FB06270()
{
  ActionResult.init(transcript:)();
}

void sub_23FB06284()
{
  sub_23FAE9BB0();
}

void TranscriptProtoActionResult.init(handwritten:)()
{
  uint64_t v0;

  v0 = sub_23FB2B11C();
  sub_23FB297B0(v0, type metadata accessor for ActionResult);
  sub_23F694CC8();
}

void sub_23FB062D8()
{
  TranscriptProtoActionResult.init(handwritten:)();
}

void sub_23FB062EC()
{
  StatementResultPayload.init(transcript:)();
}

uint64_t sub_23FB06300()
{
  return sub_23FAEA43C();
}

uint64_t sub_23FB06314(uint64_t a1)
{
  return TranscriptProtoStatementResultPayload.init(handwritten:)(a1);
}

uint64_t ResponseOutput.ResponseType.init(transcript:)@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int *v3;
  uint64_t v4;
  uint64_t v5;

  if (*a1)
  {
    if (*a1 == 1)
      v3 = (unsigned int *)MEMORY[0x24BE52EE8];
    else
      v3 = (unsigned int *)MEMORY[0x24BE52EE0];
  }
  else
  {
    v3 = (unsigned int *)MEMORY[0x24BE52ED8];
  }
  v4 = *v3;
  v5 = sub_23FB2CE30();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
}

void sub_23FB06394()
{
  ResponseOutput.init(transcript:)();
}

uint64_t sub_23FB063A8()
{
  return sub_23FAEA568();
}

void TranscriptProtoResponseOutput.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  int v33;
  char *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;

  sub_23F6B5220();
  sub_23FB2AD84();
  v6 = sub_23FB29B20(v5);
  v54 = type metadata accessor for TranscriptProtoResponseOutput(v6);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  v56 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6D398C();
  v55 = sub_23FB2CE30();
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B5C9C();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F878DA4();
  sub_23F6916B8(&qword_256EA85E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B5CD4();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B62F8();
  sub_23F6916B8(&qword_256EA85E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B65E0();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F77E490();
  v15 = sub_23FB2CE24();
  sub_23FAD1838(v15, v16, v17, v18, v19, v20, v21, v22);
  if (!v2)
  {
    v51 = v1;
    v52 = v4;
    v53 = v23;
    sub_23FB2CD64();
    sub_23F77D394();
    sub_23FB2CD58();
    v25 = v52;
    sub_23F77D394();
    sub_23FB2CE48();
    v27 = sub_23F6B6964();
    v28 = v55;
    sub_23F75E68C(v27, v29, v30);
    v31 = sub_23F7E7898();
    v33 = v32(v31);
    if (v33 == *MEMORY[0x24BE52ED8])
    {
      v50 = v3;
      v34 = v56;
      v35 = 0;
    }
    else if (v33 == *MEMORY[0x24BE52EE8])
    {
      v50 = v3;
      v34 = v56;
      v35 = 1;
    }
    else
    {
      if (v33 != *MEMORY[0x24BE52EE0])
      {
        sub_23F779AF8();
        sub_23F6B5AD4();
        *v44 = 0;
        sub_23F77D9E4();
        v45 = *(void (**)(uint64_t, uint64_t))(v0 + 8);
        v45(v51, v28);
        v46 = sub_23F7E7898();
        ((void (*)(uint64_t))v45)(v46);
        sub_23FAD7318();
        v47 = sub_23FB2A378();
        sub_23F78F1B0(v47);
        sub_23F6D3748(v25);
        v48 = sub_23FB29D10();
        sub_23F6B4F84(v48, v26);
        goto LABEL_4;
      }
      v50 = v3;
      v34 = v56;
      v35 = 2;
    }
    v36 = v54;
    sub_23F6B5900(v51, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    sub_23FB2CE54();
    sub_23FAD186C();
    v38 = v37;
    v39 = (uint64_t)v34;
    v40 = v36;
    v41 = v39 + *(int *)(v36 + 28);
    type metadata accessor for TranscriptProtoDialogType(0);
    sub_23FB298A8(v41, 1);
    v42 = v39 + *(int *)(v40 + 32);
    sub_23FB298A8(v42, 1);
    sub_23FAC3DD4();
    *(_QWORD *)v39 = v53;
    sub_23F710E80(v50, v41, &qword_256EA85E8);
    sub_23F710E80(v52, v42, &qword_256EA85E8);
    *(_BYTE *)(v39 + 8) = v35;
    *(_QWORD *)(v39 + 16) = v38;
    sub_23FB29DDC(v39, v43, type metadata accessor for TranscriptProtoResponseOutput);
  }
  v24 = sub_23FB2A378();
  sub_23F78F1B0(v24);
LABEL_4:
  sub_23F876B60();
  sub_23F6B5100();
}

void TranscriptProtoResponseType.init(handwritten:)()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  int v7;
  char v8;
  _BYTE *v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;

  sub_23FB29D30();
  sub_23FB2CE30();
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B5208();
  sub_23F6D3ECC(v2, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  v5 = sub_23FAC3B6C();
  v7 = v6(v5);
  if (v7 == *MEMORY[0x24BE52ED8])
  {
    v8 = 0;
  }
  else if (v7 == *MEMORY[0x24BE52EE8])
  {
    v8 = 1;
  }
  else
  {
    if (v7 != *MEMORY[0x24BE52EE0])
    {
      sub_23F779AF8();
      sub_23F6B5AD4();
      *v9 = 0;
      sub_23F77D9E4();
      v10 = *(void (**)(uint64_t))(v3 + 8);
      v11 = sub_23F6B6AB8();
      v10(v11);
      v12 = sub_23FAC3B6C();
      v10(v12);
      goto LABEL_8;
    }
    v8 = 2;
  }
  sub_23F7B0990(v0, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  *v1 = v8;
LABEL_8:
  sub_23FB2AB24();
  sub_23F6D3674();
}

void sub_23FB067F0()
{
  TranscriptProtoResponseOutput.init(handwritten:)();
}

void QueryResults.init(transcript:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_23FAF9FE0(a1, (uint64_t (*)(uint64_t))sub_23F77542C, a2);
}

void sub_23FB06828(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  QueryResults.init(transcript:)(a1, a2);
}

#error "23FB06868: call analysis failed (funcsize=10)"

void TranscriptProtoQueryResults.init(handwritten:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_23FB06898(a1, (uint64_t (*)(_QWORD))sub_23FACEF30, a2);
}

void sub_23FB06898(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v5 = a2(*a1);
  if (!v3)
  {
    v6 = v5;
    sub_23F879A30();
    sub_23F6F0878();
    *a3 = v6;
  }
  sub_23F6D3C2C();
}

void sub_23FB068E0(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  TranscriptProtoQueryResults.init(handwritten:)(a1, a2);
}

void ParameterQuery.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;

  sub_23F6B5220();
  v6 = v5;
  v8 = sub_23FB2A528(v7);
  type metadata accessor for TranscriptProtoQueryData(v8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  v60 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F6D398C();
  type metadata accessor for QueryData(v11);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  v59 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  v62 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_23F6B58C8();
  sub_23F70D9A8();
  MEMORY[0x24BDAC7A8](v16);
  v17 = sub_23F6B5C2C();
  type metadata accessor for TranscriptProtoActionParameterContext(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  v19 = sub_23FB2A098();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  v21 = sub_23F7A00C8();
  v22 = type metadata accessor for TranscriptProtoParameterQuery(v21);
  v23 = v6;
  sub_23F77BC84();
  if (v1)
  {
    v24 = type metadata accessor for TranscriptProtoParameterQuery;
    v25 = v6;
  }
  else
  {
    v57 = v4;
    v63 = v0;
    sub_23F77B8C8();
    v56 = 0;
    sub_23F6B90D8();
    v26 = v3;
    v27 = sub_23FB29BF4();
    sub_23FB298A0(v27, type metadata accessor for TranscriptProtoStatementID);
    v29 = *v2;
    v28 = v2[1];
    v31 = v2[2];
    v30 = v2[3];
    sub_23F6B54F8();
    v32 = sub_23F6B6548();
    sub_23FB297A8(v32, type metadata accessor for TranscriptProtoActionParameterContext);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 32))(v63, v26, v61);
    v33 = (_QWORD *)(v63 + *(int *)(v19 + 20));
    *v33 = v29;
    v33[1] = v28;
    v34 = (_QWORD *)(v63 + *(int *)(v19 + 24));
    *v34 = v31;
    v34[1] = v30;
    v35 = v56;
    sub_23F77BCB0();
    if (!v35)
    {
      v36 = (uint64_t)v59;
      v37 = sub_23FB2A908();
      QueryData.init(transcript:)(v37, v38, v39, v40, v41, v42, v43, v44, v55, v56, v57, v58);
      swift_bridgeObjectRetain();
      Dictionary<>.init(transcript:)();
      v46 = v45;
      v47 = (uint64_t *)(v23 + *(int *)(v22 + 28));
      v49 = *v47;
      v48 = v47[1];
      v50 = sub_23F6B54F8();
      sub_23FB297D8(v50, type metadata accessor for TranscriptProtoParameterQuery);
      v51 = (int *)type metadata accessor for ParameterQuery(0);
      v52 = v58;
      v53 = (_QWORD *)(v58 + v51[7]);
      sub_23FB29EF8(v63, v54, type metadata accessor for ActionParameterContext);
      sub_23F6F594C(v36, v52 + v51[5], type metadata accessor for QueryData);
      *(_QWORD *)(v52 + v51[6]) = v46;
      *v53 = v49;
      v53[1] = v48;
      goto LABEL_5;
    }
    sub_23F6F8C88(v23, type metadata accessor for TranscriptProtoParameterQuery);
    v24 = type metadata accessor for ActionParameterContext;
    v25 = v63;
  }
  sub_23F6F8C88(v25, v24);
LABEL_5:
  sub_23F8778A8();
  sub_23F6B5100();
}

void ActionParameterContext.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  sub_23F6B5220();
  v4 = v3;
  v6 = v5;
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B58C8();
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23F78F27C();
  type metadata accessor for TranscriptProtoActionParameterContext(v9);
  sub_23FB2A020();
  if (v0)
  {
    sub_23FB297A8(v10, type metadata accessor for TranscriptProtoActionParameterContext);
  }
  else
  {
    sub_23F77E584();
    v11 = sub_23FB29B44();
    sub_23FB298E4(v11, type metadata accessor for TranscriptProtoStatementID);
    v13 = *v4;
    v12 = v4[1];
    v14 = v4[3];
    v19 = v4[2];
    sub_23F6B90D8();
    v15 = sub_23F77E600();
    sub_23FB297A8(v15, type metadata accessor for TranscriptProtoActionParameterContext);
    sub_23F75E710(v6, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
    v16 = type metadata accessor for ActionParameterContext(0);
    v17 = (_QWORD *)(v6 + *(int *)(v16 + 20));
    *v17 = v13;
    v17[1] = v12;
    v18 = (_QWORD *)(v6 + *(int *)(v16 + 24));
    *v18 = v19;
    v18[1] = v14;
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void QueryData.init(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_23F6B5220();
  v14 = sub_23FB29BA4(v13);
  type metadata accessor for TranscriptProtoStringQuery(v14);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  v16 = sub_23F6B5C2C();
  type metadata accessor for TranscriptProtoPropertyQuery(v16);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v18);
  v19 = sub_23FAC3D30();
  type metadata accessor for TranscriptProtoIdentifierQuery(v19);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  v21 = sub_23F70D7F8();
  type metadata accessor for TranscriptProtoQueryDataEnum(v21);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v22);
  sub_23FB2A750();
  sub_23F77BC58();
  if (v12)
  {
    sub_23FB297A8(v23, type metadata accessor for TranscriptProtoQueryData);
    sub_23F8778A8();
    sub_23F6B5100();
  }
  else
  {
    v24 = sub_23FB2AFB8();
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_23FB06DC4 + 4 * byte_23FB92AE8[v24]))(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10, a11, a12);
  }
}

void sub_23FB06F00()
{
  ParameterQuery.init(transcript:)();
}

uint64_t sub_23FB06F14()
{
  return sub_23FAEA75C();
}

#error "23FB07050: call analysis failed (funcsize=95)"

void TranscriptProtoActionParameterContext.init(handwritten:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_23F6B50E8();
  v4 = sub_23FB2A82C(v2, v3);
  v5 = type metadata accessor for TranscriptProtoActionParameterContext(v4);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  sub_23FB29900();
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23FB29A54();
  sub_23FB2C758();
  sub_23FB2AD38();
  v9 = sub_23FAD69A0();
  sub_23FAC3DD4();
  sub_23FB29C70();
  v10 = sub_23FB298EC(v1, 0, 1, v9);
  v11 = type metadata accessor for ActionParameterContext(v10);
  v12 = *(int *)(v11 + 24);
  v13 = (uint64_t *)(v22 + *(int *)(v11 + 20));
  v14 = *v13;
  v15 = v13[1];
  v17 = *(_QWORD *)(v22 + v12);
  v16 = *(_QWORD *)(v22 + v12 + 8);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v0 + *(int *)(v5 + 24), 1, 1, v9);
  sub_23F6B6254();
  sub_23F6B5F1C();
  sub_23FB2A98C();
  v18 = sub_23F77E608();
  sub_23F710E80(v18, v19, &qword_256EA25E0);
  *v0 = v14;
  v0[1] = v15;
  v0[2] = v17;
  v0[3] = v16;
  v20 = sub_23FB2A350();
  sub_23F6F594C(v20, v21, type metadata accessor for TranscriptProtoActionParameterContext);
  sub_23F6F8C88(v22, type metadata accessor for ActionParameterContext);
  sub_23F693DDC();
}

void TranscriptProtoQueryData.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t DataEnum;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD v23[4];

  sub_23F6B5220();
  sub_23FB2AF54(v1);
  v3 = v2;
  sub_23FB2A710();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v4);
  v23[0] = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23FB29944();
  type metadata accessor for QueryData(v7);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23F6B51D0();
  DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(v9);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v13);
  v23[1] = (char *)v23 - v14;
  v15 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoQueryData(v15);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F693EB0();
  v17 = sub_23FB29C44();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, v18, v19, DataEnum);
  v23[2] = v3;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v0, 1, 1, DataEnum);
  sub_23FAC3044();
  v20 = sub_23FB2A04C();
  sub_23F6F5920(v20, v21, type metadata accessor for QueryData);
  sub_23F6B69B8();
  v22 = (char *)sub_23FB07350 + 4 * byte_23FB92AEC[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23FB07350()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);

  v4 = *v1;
  type metadata accessor for TranscriptProtoIdentifierQuery(0);
  v5 = sub_23FAC3DD4();
  *v2 = v4;
  sub_23FB297D8(v5, type metadata accessor for QueryData);
  sub_23FB297B0(v6, type metadata accessor for TranscriptProtoQueryData);
  sub_23FAD6F18();
  swift_storeEnumTagMultiPayload();
  v7 = *(_QWORD *)(v3 - 104);
  sub_23F77E2AC((uint64_t)v2, v7);
  sub_23F77DD24(v8, &qword_256EA85B0);
  sub_23F77E2AC(v7, v0);
  sub_23F77DD78(v0, 0);
  v9 = sub_23F77E680();
  sub_23F77DC5C(v9, v10);
  v11 = sub_23F7D2958();
  sub_23F6F8C88(v11, v12);
  sub_23F877A30();
  sub_23F6B5100();
}

uint64_t sub_23FB074E0(uint64_t a1)
{
  return TranscriptProtoParameterQuery.init(handwritten:)(a1);
}

void sub_23FB074F4()
{
  ActionParameterContext.init(transcript:)();
}

uint64_t sub_23FB07508()
{
  return sub_23FAEA888();
}

void PropertyQuery.init(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t Predicate;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t Enum;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD v92[4];
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;

  sub_23F6B5220();
  a19 = v26;
  a20 = v27;
  v114 = v20;
  v29 = v28;
  v95 = v30;
  sub_23F6916B8(&qword_256EA2610);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v31);
  v100 = (char *)v92 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v33);
  v92[2] = (char *)v92 - v34;
  v35 = sub_23F6B632C();
  v109 = *(_QWORD *)(v35 - 8);
  v110 = v35;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v36);
  v99 = (char *)v92 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v38);
  v98 = (char *)v92 - v39;
  v40 = sub_23F6B6634();
  v107 = *(_QWORD *)(v40 - 8);
  v108 = v40;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v41);
  v97 = (char *)v92 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v43);
  v96 = (char *)v92 - v44;
  v113 = sub_23FB2AB98();
  v94 = *(_QWORD *)(v113 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v46);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v47);
  v112 = (uint64_t)v92 - v48;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v49);
  v102 = (char *)v92 - v50;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v51);
  v111 = (uint64_t)v92 - v52;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v53);
  v55 = sub_23FB29AA4((uint64_t)v92 - v54);
  Predicate = type metadata accessor for QueryPredicate(v55);
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v57);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v58);
  v59 = sub_23FAC3D30();
  type metadata accessor for TranscriptProtoQueryPredicateList(v59);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v60);
  sub_23F6B65E0();
  MEMORY[0x24BDAC7A8](v61);
  v63 = (char *)v92 - v62;
  v64 = sub_23FB29970();
  Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(v64);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v66);
  sub_23FB2A7C0();
  v67 = v114;
  sub_23F77BC2C();
  v114 = v67;
  if (v67)
  {
    sub_23FB297B0(v68, type metadata accessor for TranscriptProtoPropertyQuery);
  }
  else
  {
    v103 = v22;
    v104 = v24;
    v92[0] = v25;
    v105 = Predicate;
    v106 = v21;
    v92[1] = v29;
    v69 = sub_23FB2AE5C();
    if (v69)
    {
      if (v69 == 1)
      {
        sub_23FB29B3C(v23, v70, type metadata accessor for TranscriptProtoQueryPredicateList);
        v71 = *(char **)v63;
        v72 = v94;
        if (*(_QWORD *)(*(_QWORD *)v63 + 16))
        {
          v104 = v63;
          sub_23F77DCD4();
          sub_23FB29B68();
          sub_23F712078();
          sub_23F78F3B0();
          v102 = v71;
          v112 = *(_QWORD *)(v72 + 72);
          v74 = v101;
          sub_23F77DC5C((uint64_t)&v71[v73], v101);
          v75 = v111;
          sub_23F77DC5C(v74, v111);
          __asm { BR              X9 }
        }
        v86 = sub_23F77DCD4();
        v87 = MEMORY[0x24BEE4AF8];
        sub_23FB297C8(v86, type metadata accessor for TranscriptProtoPropertyQuery);
        v90 = sub_23F6B644C();
        sub_23FB297B8(v90, type metadata accessor for TranscriptProtoQueryPredicateList);
        *v95 = v87;
        sub_23FB2A710();
        sub_23FB2AB3C();
      }
      else
      {
        v79 = (uint64_t *)v92[0];
        sub_23FB29D1C(v23, v70, type metadata accessor for TranscriptProtoQueryPredicateList);
        v80 = *v79;
        v81 = v94;
        if (*(_QWORD *)(*v79 + 16))
        {
          sub_23F6B5508();
          sub_23FB2A21C();
          sub_23F712078();
          sub_23F78F3B0();
          v103 = v80;
          v111 = *(_QWORD *)(v81 + 72);
          v82 = (uint64_t)v102;
          v83 = sub_23F924C14();
          sub_23F77DE8C(v83, v84);
          v85 = v112;
          sub_23F77DE8C(v82, v112);
          __asm { BR              X9 }
        }
        v88 = sub_23F6B5508();
        v89 = MEMORY[0x24BEE4AF8];
        sub_23FB297C8(v88, type metadata accessor for TranscriptProtoPropertyQuery);
        v91 = sub_23F693E04();
        sub_23FB297C0(v91, type metadata accessor for TranscriptProtoQueryPredicateList);
        *v95 = v89;
        sub_23FB2A710();
        sub_23F713E50();
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      v76 = v93;
      sub_23F77E2AC(v23, v93);
      sub_23FB2AE34();
      sub_23F77DC5C(v77, Enum);
      sub_23FB2AA84();
      v78 = v114;
      QueryPredicate.init(transcript:)();
      sub_23FB29780(type metadata accessor for TranscriptProtoPropertyQuery, (uint64_t)&a14);
      sub_23F70D63C(v76);
      if (!v78)
      {
        sub_23FB2A710();
        sub_23F713F74();
      }
    }
  }
  sub_23F877A30();
  sub_23F6B5100();
}

void sub_23FB07DF8()
{
  _BYTE *v0;

  sub_23F779AF8();
  sub_23F6B5AD4();
  *v0 = 0;
  sub_23F6B54F8();
  swift_willThrow();
  JUMPOUT(0x23FB07CD8);
}

void sub_23FB07E24()
{
  _BYTE *v0;

  sub_23F779AF8();
  sub_23F6B5AD4();
  *v0 = 0;
  sub_23F6B54F8();
  swift_willThrow();
  JUMPOUT(0x23FB07D24);
}

#error "23FB07E58: call analysis failed (funcsize=5)"

void QueryPredicate.init(transcript:)()
{
  uint64_t v1;
  uint64_t v2;

  sub_23F6B5220();
  sub_23FB2AF60();
  sub_23F6B632C();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_23F6B6634();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F6B53AC();
  __asm { BR              X10 }
}

void sub_23FB07EF0()
{
  _BYTE *v0;
  uint64_t v1;

  sub_23F779AF8();
  sub_23F6B5AD4();
  *v0 = 0;
  sub_23F6B6548();
  v1 = swift_willThrow();
  sub_23FB297B8(v1, type metadata accessor for TranscriptProtoQueryPredicate);
  sub_23F6B6090();
  sub_23F8778A8();
  sub_23F6B5100();
}

#error "23FB07FFC: call analysis failed (funcsize=5)"

void TranscriptProtoPropertyQuery.init(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t Enum;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (*v99)(uint64_t);
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t (*v104)(uint64_t, uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t (*v122)(uint64_t);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  uint64_t (*v128)(uint64_t);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  char *v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t Predicate;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;

  sub_23F6B5220();
  a19 = v25;
  a20 = v26;
  v171 = v21;
  v149 = v27;
  v29 = v28;
  v30 = sub_23F6B632C();
  v167 = *(_QWORD *)(v30 - 8);
  v168 = v30;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v31);
  v154 = (char *)&v144 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v33);
  v153 = (char *)&v144 - v34;
  v35 = sub_23F6B6634();
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v36);
  v155 = (char *)&v144 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F77E490();
  sub_23F6916B8(&qword_256EA2610);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v39);
  v152 = (uint64_t)&v144 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v41);
  v151 = (char *)&v144 - v42;
  v43 = sub_23FB2AB98();
  v165 = *(_QWORD *)(v43 - 8);
  v166 = v43;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v44);
  v164 = (uint64_t)&v144 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v46);
  v169 = (char *)&v144 - v47;
  sub_23F6B5664();
  v49 = MEMORY[0x24BDAC7A8](v48);
  v57 = sub_23F923878(v49, v50, v51, v52, v53, v54, v55, v56, v144);
  Predicate = type metadata accessor for QueryPredicate(v57);
  v160 = *(_QWORD *)(Predicate - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v58);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v59);
  v158 = (char *)&v144 - v60;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v61);
  v156 = (uint64_t)&v144 - v62;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v63);
  v157 = (uint64_t)&v144 - v64;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v65);
  v161 = (uint64_t)&v144 - v66;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v67);
  v162 = (char *)&v144 - v68;
  v69 = sub_23F6D398C();
  type metadata accessor for PropertyQuery(v69);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v70);
  v71 = sub_23F77E1CC();
  Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(v71);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v73);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v74);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v75);
  sub_23F6D3D14();
  v159 = v76;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v77);
  v147 = (char *)&v144 - v78;
  v79 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoPropertyQuery(v79);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v80);
  v81 = sub_23FB2A788();
  sub_23F77E598(v81, 1);
  v148 = v29;
  sub_23F6F0BB0();
  sub_23F693EC8();
  sub_23FB2AEE4();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v82, v83, v84, Enum);
  sub_23FAC3DD4();
  v85 = sub_23F6B69B8();
  sub_23F6F5920(v85, v86, type metadata accessor for PropertyQuery);
  v87 = sub_23F70D4E8();
  if (v87)
  {
    v161 = v22;
    v162 = (char *)v35;
    if (v87 == 1)
    {
      v88 = *(_QWORD *)v20;
      v89 = *(_QWORD *)(*(_QWORD *)v20 + 16);
      if (v89)
      {
        v145 = v23;
        v172 = MEMORY[0x24BEE4AF8];
        sub_23FB29B68();
        sub_23F711550();
        sub_23FB2A7FC();
        *(_QWORD *)(v90 - 256) = v88;
        v92 = v88 + v91;
        v158 = *(char **)(v93 + 72);
        v94 = type metadata accessor for QueryPredicate;
        v88 = v156;
        v150 = v24;
        while (1)
        {
          v164 = v89;
          v95 = (uint64_t)v169;
          v160 = v92;
          sub_23FB2A5BC(v92);
          v96 = sub_23F7B0E48();
          sub_23F77DE8C(v96, v97);
          v98 = *(_QWORD *)(v88 + 8);
          v159 = *(_QWORD *)v88;
          v99 = v94;
          v100 = *(_BYTE *)(v88 + 16);
          sub_23F77DD54(v24, v88 + *(int *)(Predicate + 24), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16));
          sub_23F77E600();
          sub_23FB2ADC0();
          if (v21)
            break;
          v171 = 0;
          sub_23F6B563C(v24, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
          v101 = (uint64_t)v151;
          v102 = sub_23F77E46C();
          sub_23F759774(v102, v103, v104);
          sub_23F7A690C(v101, 0);
          v105 = v95 + *(int *)(v166 + 24);
          sub_23F7A690C(v105, 1);
          sub_23F6F0BB0();
          *(_QWORD *)v95 = v159;
          *(_QWORD *)(v95 + 8) = v98;
          *(_BYTE *)(v95 + 16) = v100 + 1;
          v106 = sub_23F77E680();
          sub_23F710E80(v106, v107, &qword_256EA2610);
          sub_23F6F594C(v95, v163, type metadata accessor for TranscriptProtoQueryPredicate);
          v88 = v156;
          sub_23FB29DEC(v156);
          sub_23FB29DEC(v157);
          v94 = v99;
          if ((sub_23F77D93C() & 1) == 0)
          {
            sub_23FB2A174();
            v105 = v172;
          }
          v108 = v164;
          v109 = *(_QWORD *)(v105 + 16);
          v23 = v109 + 1;
          v22 = v161;
          v24 = v150;
          if (v109 >= *(_QWORD *)(v105 + 24) >> 1)
          {
            sub_23FB2A1DC();
            v105 = v172;
          }
          *(_QWORD *)(v105 + 16) = v23;
          sub_23FB2A4C8();
          sub_23F6F594C(v163, v110, type metadata accessor for TranscriptProtoQueryPredicate);
          v92 = (uint64_t)&v158[v160];
          v89 = v108 - 1;
          if (!v89)
            goto LABEL_22;
        }
        sub_23F6B563C(v24, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
        sub_23F70D63C(v156);
        sub_23F6B6A48();
        v136 = v157;
LABEL_27:
        sub_23F6F8C88(v136, type metadata accessor for QueryPredicate);
        sub_23F77DB70();
        sub_23FB29780(type metadata accessor for PropertyQuery, (uint64_t)&a17);
        sub_23FB29780(type metadata accessor for TranscriptProtoPropertyQuery, (uint64_t)&a16);
        v116 = sub_23F77DE3C();
        goto LABEL_28;
      }
      sub_23F6B6090();
      v105 = MEMORY[0x24BEE4AF8];
      sub_23FB2A588();
    }
    else
    {
      v117 = *(_QWORD *)v20;
      v88 = *(_QWORD *)(*(_QWORD *)v20 + 16);
      if (v88)
      {
        v145 = v23;
        v173 = MEMORY[0x24BEE4AF8];
        sub_23FB2AD40();
        sub_23F711550();
        sub_23FB2A7FC();
        *(_QWORD *)(v118 - 256) = v117;
        v120 = v117 + v119;
        v157 = *(_QWORD *)(v121 + 72);
        v122 = type metadata accessor for QueryPredicate;
        v123 = (uint64_t)v155;
        v124 = (uint64_t)v158;
        v125 = v146;
        while (1)
        {
          v163 = v88;
          v160 = v120;
          sub_23F77DC78(v120, v124);
          sub_23F77DC78(v124, v125);
          v126 = *(_QWORD *)(v125 + 8);
          v159 = *(_QWORD *)v125;
          v127 = *(_BYTE *)(v125 + 16);
          v128 = v122;
          v129 = v161;
          sub_23F77DD54(v123, v125 + *(int *)(Predicate + 24), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v161 + 16));
          sub_23F77E600();
          v130 = (uint64_t)v154;
          sub_23FB2ADC0();
          if (v21)
            break;
          v171 = 0;
          sub_23F6B563C(v123, *(uint64_t (**)(uint64_t, uint64_t))(v129 + 8));
          v131 = v152;
          sub_23F759774(v152, v130, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v167 + 32));
          sub_23F7A690C(v131, 0);
          v24 = (uint64_t)v169;
          v105 = (uint64_t)&v169[*(int *)(v166 + 24)];
          sub_23F7A690C(v105, 1);
          sub_23FAC3CEC();
          *(_QWORD *)v24 = v159;
          *(_QWORD *)(v24 + 8) = v126;
          *(_BYTE *)(v24 + 16) = v127 + 1;
          v124 = (uint64_t)v158;
          sub_23F710E80(v131, v105, &qword_256EA2610);
          sub_23FAD69D8(v24, v164);
          sub_23FB29A4C(v125);
          sub_23FB29A4C(v124);
          v122 = v128;
          if ((sub_23F77D93C() & 1) == 0)
          {
            sub_23FB2A174();
            v105 = v173;
          }
          v132 = *(_QWORD *)(v105 + 16);
          v23 = v132 + 1;
          v123 = (uint64_t)v155;
          if (v132 >= *(_QWORD *)(v105 + 24) >> 1)
          {
            sub_23FB2A1DC();
            v105 = v173;
          }
          *(_QWORD *)(v105 + 16) = v23;
          sub_23F77DAB8();
          sub_23FAD69D8(v135, v133 + v134 * v132);
          v120 = v160 + v157;
          v88 = v163 - 1;
          if (v163 == 1)
          {
LABEL_22:
            sub_23F77DE3C();
            sub_23FB29E20();
            goto LABEL_29;
          }
        }
        sub_23F6B563C(v123, *(uint64_t (**)(uint64_t, uint64_t))(v129 + 8));
        sub_23F70D6DC(v125);
        sub_23F6B6A48();
        v136 = (uint64_t)v158;
        goto LABEL_27;
      }
      sub_23F6B5908();
      v105 = MEMORY[0x24BEE4AF8];
      sub_23FB2A588();
    }
LABEL_29:
    sub_23FB2ACF8();
    v137 = sub_23FAC3CEC();
    *(_QWORD *)v24 = v105;
    sub_23FB298E4(v137, type metadata accessor for PropertyQuery);
    sub_23FB297C0(v138, type metadata accessor for TranscriptProtoPropertyQuery);
    sub_23FAD709C();
    swift_storeEnumTagMultiPayload();
LABEL_30:
    v139 = sub_23F6B6848();
    sub_23F77DC98(v139, v140);
    sub_23F77E3DC(v141, &qword_256EA85A0);
    sub_23F77DC98(v88, v23);
    sub_23F77DD78(v23, 0);
    v142 = sub_23F78F560();
    sub_23F70D654(v142, v143);
    sub_23F70D6DC(v23);
    goto LABEL_31;
  }
  sub_23FB29990();
  sub_23FAD6D50(v111, v112);
  sub_23F77DC78(v20, v161);
  sub_23FB2AD2C();
  v113 = v171;
  TranscriptProtoQueryPredicate.init(handwritten:)();
  sub_23FB298E4(v114, type metadata accessor for PropertyQuery);
  sub_23FB29958(v20);
  sub_23FB297C0(v115, type metadata accessor for TranscriptProtoPropertyQuery);
  if (!v113)
  {
    v171 = 0;
    sub_23F713F74();
    v88 = (uint64_t)v147;
    goto LABEL_30;
  }
LABEL_28:
  sub_23FB298A0(v116, type metadata accessor for TranscriptProtoPropertyQuery);
LABEL_31:
  sub_23F876B60();
  sub_23F6B5100();
}

void TranscriptProtoQueryPredicate.init(handwritten:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[12];
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t Predicate;

  sub_23F6B5220();
  sub_23FB2AF60();
  v6 = sub_23FB29BA4(v5);
  Predicate = type metadata accessor for TranscriptProtoQueryPredicate(v6);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_23F6B632C();
  v25 = *(_QWORD *)(v10 - 8);
  v26 = v10;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F6B6634();
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA2610);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B52B0();
  v16 = v0[1];
  v24 = *v0;
  v23 = *((unsigned __int8 *)v0 + 16);
  v17 = type metadata accessor for QueryPredicate(0);
  sub_23F75E68C(v1, (uint64_t)v0 + *(int *)(v17 + 24), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  sub_23F77E584();
  sub_23FB2ED20();
  if (v3)
  {
    v18 = sub_23F6B5900(v1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    sub_23FB297B8(v18, type metadata accessor for QueryPredicate);
    sub_23F756640();
  }
  else
  {
    ++v23;
    sub_23F6B5900(v1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    sub_23F75E68C(v2, (uint64_t)v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 32));
    sub_23FAD6A98(v2, 0);
    sub_23FAD6A98((uint64_t)&v9[*(int *)(Predicate + 24)], 1);
    sub_23FAC3044();
    *(_QWORD *)v9 = v24;
    *((_QWORD *)v9 + 1) = v16;
    v9[16] = v23;
    sub_23FB29BEC(v2, v19, &qword_256EA2610);
    sub_23FB2A468((uint64_t)v9, v20, type metadata accessor for TranscriptProtoQueryPredicate);
    sub_23FB297B8(v21, type metadata accessor for QueryPredicate);
  }
  sub_23F877A30();
  sub_23F6B5100();
}

#error "23FB08AD0: call analysis failed (funcsize=5)"

void sub_23FB08ADC()
{
  TranscriptProtoQueryData.init(handwritten:)();
}

void sub_23FB08AF0()
{
  TranscriptProtoActionParameterContext.init(handwritten:)();
}

#error "23FB08B34: call analysis failed (funcsize=20)"

uint64_t sub_23FB08B68()
{
  return ActionConfirmation.init(transcript:)();
}

char *sub_23FB08B7C()
{
  return sub_23FAEA9AC();
}

void TranscriptProtoActionConfirmation.init(handwritten:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FB2A9F4();
  v2 = MEMORY[0x242671EEC]();
  sub_23FB21880(v2);
  if (v0)
  {
    sub_23F6B644C();
  }
  else
  {
    v4 = v3;
    sub_23F6B644C();
    type metadata accessor for TranscriptProtoActionConfirmation(0);
    sub_23F6F0BB0();
    *v1 = v4;
  }
  v5 = sub_23FB2D274();
  sub_23F78F1B0(v5);
  sub_23F6D377C();
}

void sub_23FB08C00()
{
  TranscriptProtoActionConfirmation.init(handwritten:)();
}

void ParameterValue.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, _QWORD);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27[4];

  sub_23F6B5220();
  v27[2] = v3;
  sub_23F6916B8(&qword_256EA8598);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v4);
  sub_23FB298C8(v5, v27[0]);
  sub_23F6916B8(&qword_256EA2750);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B632C();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v27 - v9;
  v11 = sub_23F6B6634();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B53AC();
  sub_23F77B844();
  if (!v0)
  {
    v27[0] = v2;
    v27[1] = v11;
    v14 = v27[3];
    v15 = sub_23FAE2D10();
    sub_23FB2ABE0(v15, v16, v17);
    sub_23FB2ED2C();
    sub_23FB29DD4((uint64_t)v10, *(uint64_t (**)(uint64_t, _QWORD))(v1 + 8));
    v18 = type metadata accessor for TranscriptProtoParameterValue(0);
    v19 = sub_23FB2A63C(v18);
    sub_23F6B4F58(v19, v14, &qword_256EA8598);
    sub_23F77A6E0(v14, v20, v21, v22, v23, v24, v25, v26);
    sub_23F6B6218();
    v13 = sub_23FB2CCEC();
  }
  sub_23FB297B0(v13, type metadata accessor for TranscriptProtoParameterValue);
  sub_23F876FC4();
  sub_23F6B5100();
}

void sub_23FB08DA8()
{
  ParameterValue.init(transcript:)();
}

uint64_t sub_23FB08DBC()
{
  return sub_23FAEAB2C();
}

void TranscriptProtoParameterValue.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_23F6B5220();
  v5 = v4;
  sub_23F6916B8(&qword_256EA2750);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B5BD8(v7, v27);
  sub_23F6916B8(&qword_256EA8598);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23FAD67A8(v9, v28);
  v10 = sub_23FB2EB1C();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B6634();
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F693EB0();
  sub_23F6916B8(&qword_256EA2610);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B5208();
  v14 = sub_23FB298EC(v5, 1, 1, v10);
  type metadata accessor for TranscriptProtoParameterValue(v14);
  sub_23FB2AE90();
  v16 = v5 + v15;
  v17 = type metadata accessor for TranscriptProtoPromptSelection(0);
  sub_23F6B5A8C(v16, v18, v19, v17);
  sub_23F6F0BB0();
  sub_23FB2CCF8();
  sub_23FB2A240();
  sub_23F6B56E0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  if (v0)
  {
    v20 = sub_23FB2CD04();
    v21 = sub_23FB29A28(v20);
    sub_23FB297A8(v21, type metadata accessor for TranscriptProtoParameterValue);
  }
  else
  {
    v22 = sub_23F878A5C();
    sub_23F75E68C(v22, v23, v24);
    sub_23FAD6A98(v2, 0);
    sub_23FB29BB0(v2, v25, &qword_256EA2610);
    sub_23FB2CCE0();
    sub_23F77CC74();
    v26 = sub_23FB2CD04();
    sub_23F78F1B0(v26);
    sub_23F710E80(v29, v16, &qword_256EA8598);
  }
  sub_23F6B6834();
  sub_23F6B5100();
}

void sub_23FB08FB8()
{
  TranscriptProtoParameterValue.init(handwritten:)();
}

void PromptSelection.init(transcript:)()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  unsigned int *v10;

  sub_23FB2A9F4();
  if ((*(_BYTE *)(v2 + 9) & 1) != 0)
  {
    sub_23F6916B8(&qword_256EBEEF0);
    v3 = sub_23F77E1B4();
    sub_23F77DC54();
    sub_23F6B5AD4();
    *v4 = v3;
    v4[1] = (uint64_t)v1;
    v5 = sub_23F77D9E4();
    sub_23FB297B0(v5, type metadata accessor for TranscriptProtoPromptSelection);
  }
  else
  {
    v6 = *v0;
    if ((v0[1] & 1) != 0)
    {
      sub_23FB297B0(v2, type metadata accessor for TranscriptProtoPromptSelection);
      sub_23FB2ABB0();
      sub_23FB29D84();
      if (v6)
        v10 = (unsigned int *)MEMORY[0x24BE53148];
      else
        v10 = (unsigned int *)MEMORY[0x24BE53150];
      v8 = *v10;
      v7 = (uint64_t)v1;
    }
    else
    {
      sub_23FB297B0(v2, type metadata accessor for TranscriptProtoPromptSelection);
      *v1 = v6;
      sub_23FB2ABB0();
      v7 = sub_23FB2AB70();
    }
    v9(v7, v8);
  }
  sub_23FB29D6C();
}

void sub_23FB090BC()
{
  PromptSelection.init(transcript:)();
}

uint64_t sub_23FB090D0()
{
  return sub_23FAEAC60();
}

void TranscriptProtoPromptSelection.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;

  sub_23F6B50E8();
  v4 = sub_23F78F298();
  type metadata accessor for TranscriptProtoPromptSelection(v4);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F876970();
  v6 = sub_23FB2D040();
  sub_23F70D9A8();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B53AC();
  v8 = sub_23F6B69B8();
  v9(v8);
  v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 88))(v2, v6);
  v11 = v10;
  v12 = *MEMORY[0x24BE53140];
  if (v10 == *MEMORY[0x24BE53140])
  {
    (*(void (**)(uint64_t *, uint64_t))(v3 + 96))(v2, v6);
    v13 = *v2;
    goto LABEL_7;
  }
  if (v10 == *MEMORY[0x24BE53150])
  {
    v13 = 0;
LABEL_7:
    *(_QWORD *)v1 = 0;
    *(_WORD *)(v1 + 8) = 256;
    sub_23FAC3210();
    v14 = sub_23F6B689C();
    v15(v14);
    sub_23FB29B3C(v1, v16, type metadata accessor for TranscriptProtoPromptSelection);
    *(_QWORD *)v0 = v13;
    *(_WORD *)(v0 + 8) = v11 != v12;
    sub_23F693DDC();
    return;
  }
  if (v10 == *MEMORY[0x24BE53148])
  {
    v13 = 1;
    goto LABEL_7;
  }
  sub_23FB2FB6C();
  __break(1u);
}

void sub_23FB09218()
{
  TranscriptProtoPromptSelection.init(handwritten:)();
  sub_23F878AAC();
}

void ParameterNeedsValue.init(transcript:)(uint64_t a1)
{
  sub_23FB114A4(a1, (void (*)(uint64_t))MEMORY[0x24BE53658]);
}

void sub_23FB0925C(uint64_t a1)
{
  ParameterNeedsValue.init(transcript:)(a1);
}

uint64_t sub_23FB09270()
{
  return sub_23FAEAE9C();
}

void TranscriptProtoParameterNeedsValue.init(handwritten:)()
{
  sub_23FB1166C();
}

void sub_23FB092B0()
{
  TranscriptProtoParameterNeedsValue.init(handwritten:)();
}

void ParameterConfirmation.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, _QWORD);
  uint64_t v8;

  sub_23F6B5220();
  sub_23F6B632C();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F6B6634();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v3);
  sub_23FB2A7A4();
  type metadata accessor for TranscriptProtoParameterConfirmation(0);
  sub_23F77DCD4();
  sub_23FB2A460();
  if (v0)
  {
    sub_23FB297B8(v4, type metadata accessor for TranscriptProtoParameterConfirmation);
    sub_23F6B644C();
  }
  else
  {
    v5 = sub_23F6B6854();
    sub_23FB2A26C(v5, v6, v7);
    sub_23FB29DE4();
    sub_23FB2A878();
    v8 = sub_23FB2D400();
    sub_23FB297B8(v8, type metadata accessor for TranscriptProtoParameterConfirmation);
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void sub_23FB093EC()
{
  ParameterConfirmation.init(transcript:)();
}

uint64_t sub_23FB09400()
{
  return sub_23FAEAFEC();
}

void TranscriptProtoParameterConfirmation.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_23F6B5220();
  v31 = v4;
  v32 = v1;
  v5 = sub_23FB2AEA8();
  v30 = type metadata accessor for TranscriptProtoParameterConfirmation(v5);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F6B632C();
  v28 = *(_QWORD *)(v9 - 8);
  v29 = v9;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B6634();
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B5268();
  sub_23F6916B8(&qword_256EA2610);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B52B0();
  v27 = sub_23FB2D2BC();
  v33 = v15;
  v16 = MEMORY[0x24267209C]();
  v18 = v17;
  sub_23FB2D424();
  sub_23FB2ADC0();
  if (v1)
  {
    sub_23F6B5900(v3, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    v19 = sub_23FB2D430();
    sub_23FB29A28(v19);
    swift_bridgeObjectRelease();
  }
  else
  {
    LODWORD(v32) = v18 & 1;
    if ((v18 & 1) != 0)
      v20 = 0;
    else
      v20 = v16;
    sub_23F6B5900(v3, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    sub_23F75E68C(v2, (uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 32));
    sub_23FAD6A98(v2, 0);
    sub_23FAD6A98((uint64_t)&v8[*(int *)(v30 + 24)], 1);
    sub_23FAC3044();
    v21 = v33;
    *(_QWORD *)v8 = v27;
    *((_QWORD *)v8 + 1) = v21;
    *((_QWORD *)v8 + 2) = v20;
    v8[24] = v32;
    sub_23FB2A2A0(v2, v22, &qword_256EA2610);
    sub_23FB2A6A0(v23, v24, type metadata accessor for TranscriptProtoParameterConfirmation);
    v25 = sub_23FB2D430();
    sub_23FB29A28(v25);
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void sub_23FB095CC()
{
  TranscriptProtoParameterConfirmation.init(handwritten:)();
}

#error "23FB09610: call analysis failed (funcsize=31)"

uint64_t sub_23FB09664()
{
  return ParameterDisambiguation.init(transcript:)();
}

uint64_t sub_23FB09678()
{
  return sub_23FAEB120();
}

void TranscriptProtoParameterDisambiguation.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;

  sub_23F6D3DC4();
  v2 = v1;
  v3 = sub_23FB2D4FC();
  v5 = v4;
  v6 = MEMORY[0x24267218C]();
  v8 = v7;
  v9 = MEMORY[0x242672198]();
  v10 = sub_23FAF1BE8(v9);
  if (v0)
  {
    v11 = sub_23FB2D520();
    sub_23F78F1B0(v11);
    sub_23F6B5908();
  }
  else
  {
    v12 = v10;
    v13 = v8 & 1;
    if (v13)
      v6 = 0;
    type metadata accessor for TranscriptProtoParameterDisambiguation(0);
    sub_23FAC3044();
    *(_QWORD *)v2 = v3;
    *(_QWORD *)(v2 + 8) = v5;
    *(_BYTE *)(v2 + 32) = v13;
    *(_QWORD *)(v2 + 16) = v12;
    *(_QWORD *)(v2 + 24) = v6;
    v14 = sub_23FB2D520();
    sub_23F78F1B0(v14);
  }
  sub_23F6D3710();
}

void sub_23FB0972C()
{
  TranscriptProtoParameterDisambiguation.init(handwritten:)();
}

void ParameterNotAllowed.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  _QWORD v27[2];
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  sub_23F6B5220();
  v5 = v4;
  v29 = v6;
  sub_23F6916B8(&qword_256EBEEF8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  v31 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6D398C();
  v30 = sub_23FB2D310();
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F6B632C();
  v13 = *(_QWORD *)(v12 - 8);
  v32 = v12;
  v33 = v13;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B6618();
  MEMORY[0x24BDAC7A8](v15);
  sub_23FAC3D30();
  sub_23FB2ED38();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B5298();
  v17 = *v5;
  type metadata accessor for TranscriptProtoParameterNotAllowed(0);
  sub_23F77E1FC();
  sub_23FB2A460();
  if (v0)
  {
    sub_23FB298E4(v18, type metadata accessor for TranscriptProtoParameterNotAllowed);
    sub_23F6B6E44();
  }
  else
  {
    v27[1] = v17;
    v28 = v11;
    v19 = v30;
    v20 = (uint64_t)v31;
    sub_23F6B5EF0(v2, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 16));
    sub_23FB29DE4();
    sub_23F70D728(v3, *(uint64_t (**)(uint64_t, uint64_t))(v33 + 8));
    sub_23FB2D2F8();
    sub_23F6B5164(v20, 1, v19);
    if (v21)
    {
      v22 = sub_23F6B5EF0((uint64_t)v28, *MEMORY[0x24BE53690], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
      sub_23F77DD24(v22, &qword_256EBEEF8);
    }
    else
    {
      v23 = sub_23F72E3F8();
      sub_23F6B5EF0(v23, v24, v25);
    }
    v26 = sub_23FB2D2D4();
    sub_23FB2993C(v26, type metadata accessor for TranscriptProtoParameterNotAllowed);
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void sub_23FB0993C()
{
  ParameterNotAllowed.init(transcript:)();
}

uint64_t sub_23FB09950()
{
  return sub_23FAEB2D8();
}

void TranscriptProtoParameterNotAllowed.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_23F6B5220();
  v6 = sub_23FB2AEA8();
  v25 = type metadata accessor for TranscriptProtoParameterNotAllowed(v6);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B5C2C();
  v24 = sub_23FB2D310();
  v23 = *(_QWORD *)(v24 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F77DB24();
  sub_23FB2EB1C();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B6634();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5298();
  sub_23F6916B8(&qword_256EA2610);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B5208();
  v22 = sub_23FB2D2BC();
  v26 = v12;
  sub_23FB2D2EC();
  sub_23FB2A240();
  if (v1)
  {
    sub_23F6B5900(v0, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    v13 = sub_23FB2D328();
    sub_23F7D2170(*(_QWORD *)(v13 - 8));
    sub_23F7D2B44();
  }
  else
  {
    sub_23F6B5900(v0, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    v14 = sub_23F6B6964();
    sub_23F78F5D0(v14, v15, v16);
    sub_23F6B9258(v3, 0);
    sub_23FB2D31C();
    v17 = sub_23FB2D304();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v5, v24);
    if (v17 == 2)
      v18 = 2;
    else
      v18 = v17 == 1;
    sub_23F6B9258(v2 + *(int *)(v25 + 24), 1);
    sub_23FAC3044();
    *(_QWORD *)v2 = v22;
    *(_QWORD *)(v2 + 8) = v26;
    sub_23FB29C34(v3, v19, &qword_256EA2610);
    *(_BYTE *)(v2 + 16) = v18;
    sub_23FB29DDC(v2, v20, type metadata accessor for TranscriptProtoParameterNotAllowed);
    v21 = sub_23FB2D328();
    sub_23F7D2170(*(_QWORD *)(v21 - 8));
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void sub_23FB09B6C()
{
  TranscriptProtoParameterNotAllowed.init(handwritten:)();
}

void ParameterCandidatesNotFound.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  _QWORD v15[2];

  sub_23F6B5220();
  v3 = v2;
  v15[1] = sub_23F6B632C();
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B5CD4();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v15 - v6;
  sub_23F6B6634();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5268();
  v9 = *v3;
  type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
  sub_23F77DCD4();
  sub_23F77B844();
  if (v0)
  {
    sub_23FB297B8(v10, type metadata accessor for TranscriptProtoParameterCandidatesNotFound);
    sub_23F6B644C();
  }
  else
  {
    v15[0] = v9;
    v11 = sub_23F7A1280();
    sub_23F75E710(v11, v12, v13);
    sub_23FB29DE4();
    sub_23F6B51EC((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    sub_23FB2AA90();
    v14 = sub_23FB2D5F8();
    sub_23FB297B8(v14, type metadata accessor for TranscriptProtoParameterCandidatesNotFound);
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void sub_23FB09C9C()
{
  ParameterCandidatesNotFound.init(transcript:)();
}

void TranscriptProtoParameterCandidatesNotFound.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_23F6B5220();
  v27 = v1;
  v6 = sub_23FB2A27C(v5);
  v25 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(v6);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_23F6B632C();
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B6634();
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B5268();
  sub_23F6916B8(&qword_256EA2610);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B52B0();
  v24 = sub_23FB2D2BC();
  v26 = v16;
  sub_23FB2D610();
  sub_23FB2A240();
  sub_23F6B5900(v4, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  if (v1)
  {
    v17 = sub_23FB2D61C();
    sub_23FB29A28(v17);
    sub_23F7D2F10();
  }
  else
  {
    sub_23F6B5EF0(v2, (uint64_t)v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
    sub_23FB298A8(v2, 0);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9 + *(int *)(v25 + 20), 1, 1, v10);
    sub_23FAC3044();
    v18 = v26;
    *v9 = v24;
    v9[1] = v18;
    sub_23FB2A004(v2, v19, &qword_256EA2610);
    sub_23FB2A6A0(v20, v21, type metadata accessor for TranscriptProtoParameterCandidatesNotFound);
    v22 = sub_23FB2D61C();
    sub_23FB29A28(v22);
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void sub_23FB09E40()
{
  TranscriptProtoParameterCandidatesNotFound.init(handwritten:)();
}

void Candidate.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  char v27;
  uint64_t v28;
  int v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t);
  uint64_t v41[3];
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  sub_23F6B5220();
  v3 = v2;
  v45 = v4;
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v5);
  v44 = (char *)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F6B58C8();
  v42 = *(_QWORD *)(v7 - 8);
  v43 = v7;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  v10 = sub_23FB29814(v9, v41[0]);
  type metadata accessor for TranscriptProtoCandidatePromptStatus(v10);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F6B632C();
  v46 = *(_QWORD *)(v14 - 8);
  v47 = v14;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v41 - v17;
  v19 = sub_23F6B6634();
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8](v20);
  v21 = sub_23F77DB24();
  type metadata accessor for TranscriptProtoCandidate(v21);
  sub_23F878C38();
  sub_23FB2A460();
  if (v0)
  {
    sub_23FB297C8(v22, type metadata accessor for TranscriptProtoCandidate);
  }
  else
  {
    v41[1] = v1;
    v41[2] = v19;
    v23 = v46;
    v24 = sub_23F6D3D70();
    sub_23F6B633C(v24, v25, v26);
    sub_23FB29DE4();
    sub_23F6B530C((uint64_t)v18, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
    v27 = *v3;
    sub_23F77BE94();
    if ((v13[9] & 1) != 0)
    {
      v47 = 0;
      v29 = 1;
    }
    else
    {
      sub_23FB2B044();
      if (!v30)
        v31 = v32;
      v47 = v31;
      if (v30)
        v29 = 0;
      else
        v29 = v33;
    }
    LODWORD(v46) = v29;
    v34 = v45;
    sub_23FB297D8(v28, type metadata accessor for TranscriptProtoCandidatePromptStatus);
    sub_23FB29D7C();
    sub_23F6B54F8();
    v35 = sub_23FB299DC();
    sub_23FB298E4(v35, type metadata accessor for TranscriptProtoStatementID);
    sub_23FB297C8(v36, type metadata accessor for TranscriptProtoCandidate);
    v37 = (int *)type metadata accessor for Candidate(0);
    v38 = v34 + v37[6];
    sub_23FB2AC9C();
    v39 = sub_23FAD709C();
    v40(v39);
    *(_BYTE *)(v34 + v37[5]) = v27;
    *(_QWORD *)v38 = v47;
    *(_BYTE *)(v38 + 8) = v46;
    sub_23FB2A44C(v34 + v37[7], v42);
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void Candidate.PromptStatus.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  sub_23FB2A404();
  if ((*(_BYTE *)(v1 + 9) & 1) != 0)
  {
    v2 = 0;
    v3 = 1;
  }
  else
  {
    sub_23FB2B044();
    if (v4)
      v2 = v5;
    else
      v2 = v6;
    if (v4)
      v3 = 0;
    else
      v3 = v7;
  }
  sub_23F6F8C88(v1, type metadata accessor for TranscriptProtoCandidatePromptStatus);
  *(_QWORD *)v0 = v2;
  *(_BYTE *)(v0 + 8) = v3;
  sub_23F6D3C2C();
}

void sub_23FB0A178()
{
  Candidate.init(transcript:)();
}

uint64_t sub_23FB0A18C()
{
  return sub_23FAEB40C();
}

void TranscriptProtoCandidatePromptStatus.init(handwritten:)()
{
  uint64_t v0;
  _BOOL8 v1;
  uint64_t v2;
  int v3;
  _BOOL8 v4;

  sub_23FB2AFD0();
  v3 = *(unsigned __int8 *)(v2 + 8);
  type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
  sub_23F6F0878();
  v4 = v1;
  if (!v3)
    v4 = v1;
  *(_QWORD *)v0 = v4;
  *(_BYTE *)(v0 + 8) = v3;
  *(_BYTE *)(v0 + 9) = 0;
  sub_23F694C84();
}

void sub_23FB0A1EC()
{
  TranscriptProtoCandidate.init(handwritten:)();
}

IntelligenceFlowPlannerSupport::QueryOperator __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> QueryOperator.init(transcript:)(IntelligenceFlowPlannerSupport::TranscriptProtoQueryOperator transcript)
{
  IntelligenceFlowPlannerSupport::QueryOperator result;

  __asm { BR              X12 }
  return result;
}

void sub_23FB0A230()
{
  _BYTE *v0;

  sub_23F779AF8();
  sub_23F6B5AD4();
  *v0 = 0;
  sub_23F77D9E4();
  sub_23F878AAC();
}

void sub_23FB0A2A8()
{
  QueryPredicate.init(transcript:)();
}

uint64_t sub_23FB0A2BC()
{
  return sub_23FAEB538();
}

IntelligenceFlowPlannerSupport::TranscriptProtoQueryOperator __swiftcall TranscriptProtoQueryOperator.init(handwritten:)(IntelligenceFlowPlannerSupport::QueryOperator handwritten)
{
  _BYTE *v1;
  IntelligenceFlowPlannerSupport::TranscriptProtoQueryOperator result;

  sub_23F6F0AE0(v1);
  return result;
}

void sub_23FB0A2DC()
{
  TranscriptProtoQueryPredicate.init(handwritten:)();
}

uint64_t sub_23FB0A2F0(char *a1)
{
  char v2;

  v2 = *a1;
  return QueryOperator.init(transcript:)((IntelligenceFlowPlannerSupport::TranscriptProtoQueryOperator)&v2);
}

uint64_t sub_23FB0A318(char *a1)
{
  char v2;

  v2 = *a1;
  return TranscriptProtoQueryOperator.init(handwritten:)((IntelligenceFlowPlannerSupport::QueryOperator)&v2);
}

void sub_23FB0A348()
{
  Candidate.PromptStatus.init(transcript:)();
}

uint64_t sub_23FB0A35C()
{
  uint64_t v0;

  return sub_23FAEB664(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

void sub_23FB0A378()
{
  TranscriptProtoCandidatePromptStatus.init(handwritten:)();
}

uint64_t sub_23FB0A3B8(char *a1, uint64_t a2, uint64_t a3)
{
  return sub_23FACA554(a1, a2, a3, (uint64_t (*)(char *))Session.Plan.Source.init(transcript:));
}

uint64_t sub_23FB0A3D4(char *a1, uint64_t a2, uint64_t a3)
{
  return sub_23FACA554(a1, a2, a3, (uint64_t (*)(char *))TranscriptProtoPlanSource.init(handwritten:));
}

void sub_23FB0A3F0(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  Session.Plan.init(transcript:)(a1, a2);
}

uint64_t sub_23FB0A404()
{
  return sub_23FAEB78C();
}

void sub_23FB0A444(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  TranscriptProtoPlan.init(handwritten:)(a1, a2);
}

void Session.PlanGenerationError.init(transcript:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_23F6B5220();
  v4 = sub_23F78F298();
  type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(v4);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B5C9C();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23F78F404();
  type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(v7);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F878580();
  sub_23F77BE10();
  if (v1)
  {
    sub_23FB297B0(v9, type metadata accessor for TranscriptProtoPlanGenerationError);
  }
  else
  {
    v10 = sub_23F72E2E0();
    sub_23F77DC08(v10, v11);
    sub_23F77DB78(v2, (uint64_t)v3);
    v12 = v3[1];
    v18 = *v3;
    v13 = v3[3];
    v14 = v3[5];
    v16 = v3[4];
    v17 = v3[2];
    sub_23F6B90D8();
    sub_23F77E584();
    sub_23F77E1FC();
    sub_23FB29F00((uint64_t)v3);
    sub_23FB297B0(v15, type metadata accessor for TranscriptProtoPlanGenerationError);
    sub_23FB29F00(v2);
    *v0 = v18;
    v0[1] = v12;
    v0[2] = v17;
    v0[3] = v13;
    v0[4] = v16;
    v0[5] = v14;
  }
  sub_23F876B60();
  sub_23F6B5100();
}

void sub_23FB0A554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  _QWORD *vars8;

  Session.RecoverableError.init(transcript:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_23FB0A568()
{
  uint64_t v0;
  uint64_t v2;

  sub_23FB295A8(v0, (uint64_t)&v2);
  return sub_23FAEB924();
}

void TranscriptProtoPlanGenerationError.init(handwritten:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_23F6B5220();
  v3 = v2;
  v4 = sub_23FB29DC8();
  v5 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(v4);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B5208();
  v8 = *v3;
  v7 = v3[1];
  v9 = v3[2];
  v10 = v3[3];
  v11 = v3[4];
  v12 = v3[5];
  sub_23FB2A6F8();
  sub_23F77E600();
  sub_23F77E584();
  sub_23F6B90D8();
  sub_23FAD7510();
  sub_23F717D54();
  sub_23F756640();
  sub_23F6B6A48();
  *v1 = v8;
  v1[1] = v7;
  v1[2] = v9;
  v1[3] = v10;
  v1[4] = v11;
  v1[5] = v12;
  v13 = sub_23FB298EC(v0, 1, 1, v5);
  type metadata accessor for TranscriptProtoPlanGenerationError(v13);
  v14 = sub_23FAC3074();
  sub_23F77DC10(v14, &qword_256EA8678);
  v15 = sub_23FAC3B6C();
  sub_23F6F594C(v15, v16, type metadata accessor for TranscriptProtoPlanGenerationErrorEnum);
  sub_23F77DD78(v0, 0);
  sub_23FB29EE0();
  sub_23F6B5100();
}

void sub_23FB0A674()
{
  TranscriptProtoRecoverableError.init(handwritten:)();
}

void Session.PlanGenerationModelOutputError.init(transcript:)()
{
  uint64_t v0;

  sub_23F6D3DC4();
  sub_23F6B5F1C();
  sub_23F6B6548();
  v0 = sub_23F77DCD4();
  sub_23FB2AB04(v0, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
  sub_23FB2AF74();
  sub_23F6D3710();
}

void sub_23FB0A6D8()
{
  Session.PlanGenerationError.init(transcript:)();
}

uint64_t sub_23FB0A6EC()
{
  uint64_t v0;
  uint64_t v2;

  sub_23FB2956C(v0, (uint64_t)&v2);
  return sub_23FAEBA1C();
}

void TranscriptProtoPlanGenerationModelOutputError.init(handwritten:)()
{
  sub_23F6D3DC4();
  sub_23FB2A404();
  sub_23FB2A6F8();
  sub_23F6B5F1C();
  sub_23F6B6548();
  sub_23F77DCD4();
  sub_23FAD7510();
  sub_23F6B644C();
  sub_23F6B6090();
  sub_23F6B5908();
  sub_23FB2AF74();
  sub_23F6D3710();
}

void sub_23FB0A780()
{
  TranscriptProtoPlanGenerationError.init(handwritten:)();
}

void sub_23FB0A794()
{
  Session.PlanGenerationModelOutputError.init(transcript:)();
}

uint64_t sub_23FB0A7A8()
{
  return sub_23FAEBC10();
}

void sub_23FB0A7E0()
{
  TranscriptProtoPlanGenerationModelOutputError.init(handwritten:)();
}

void Session.Plan.DecompositionResult.init(transcript:)()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FAD7414();
  v3 = v1[1];
  v2 = v1[2];
  v4 = *v1;
  sub_23F6B6254();
  v5 = sub_23F6B5F1C();
  sub_23FB297B8(v5, type metadata accessor for TranscriptProtoDecompositionResult);
  *v0 = v3;
  v0[1] = v2;
  v0[2] = v4;
  sub_23F6B5F7C();
}

void sub_23FB0A838()
{
  Session.Plan.DecompositionResult.init(transcript:)();
  sub_23F878AAC();
}

uint64_t sub_23FB0A858()
{
  uint64_t *v0;

  return sub_23FAEBD20(*v0, v0[1], v0[2]);
}

void TranscriptProtoDecompositionResult.init(handwritten:)(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  type metadata accessor for TranscriptProtoDecompositionResult(0);
  sub_23F6B54F8();
  sub_23F6B6254();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  swift_bridgeObjectRelease();
  sub_23F693DFC();
  a2[1] = v4;
  a2[2] = v3;
  *a2 = v5;
  sub_23F6B5F7C();
}

void sub_23FB0A8D0(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  TranscriptProtoDecompositionResult.init(handwritten:)(a1, a2);
}

void AST.Program.init(transcript:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_23FAF9FE0(a1, (uint64_t (*)(uint64_t))sub_23F773028, a2);
}

void sub_23FB0A918(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  AST.Program.init(transcript:)(a1, a2);
}

uint64_t sub_23FB0A92C()
{
  return sub_23FAEBE20();
}

void TranscriptProtoASTProgram.init(handwritten:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FB2AFD0();
  v2 = sub_23FB2AB0C(v1);
  sub_23F693DFC();
  type metadata accessor for TranscriptProtoASTProgram(0);
  sub_23F6F0878();
  *v0 = v2;
  sub_23F6B6664();
}

void sub_23FB0A988()
{
  TranscriptProtoASTProgram.init(handwritten:)();
}

void Expression.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t (*v117)(_QWORD);
  char *v118;
  _QWORD v119[64];

  sub_23F6B5220();
  v3 = v2;
  v5 = sub_23FB2A528(v4);
  type metadata accessor for TranscriptProtoOpenExpression(v5);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  v119[53] = (char *)v119 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v8);
  v119[54] = (char *)v119 - v9;
  v10 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoCancelExpression(v10);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  v119[51] = (char *)v119 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v13);
  v119[52] = (char *)v119 - v14;
  v15 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoRejectExpression(v15);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  v119[49] = (char *)v119 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v18);
  v119[50] = (char *)v119 - v19;
  v20 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoUndoExpression(v20);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  v119[47] = (char *)v119 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v23);
  v119[48] = (char *)v119 - v24;
  v25 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoResolveToolExpression(v25);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v26);
  v119[45] = (char *)v119 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F6B6580();
  v119[46] = v29;
  v30 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoPickOneExpression(v30);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v31);
  v119[43] = (char *)v119 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v33);
  v119[44] = (char *)v119 - v34;
  v35 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoSearchExpression(v35);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v37);
  v119[41] = (char *)v119 - v38;
  v39 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoConfirmExpression(v39);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v41);
  v119[39] = (char *)v119 - v42;
  v43 = sub_23F6D398C();
  v119[36] = type metadata accessor for TranscriptProtoPickExpression(v43);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v44);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v45);
  v119[42] = (char *)v119 - v46;
  v47 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoSayExpression(v47);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v48);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v49);
  v119[35] = (char *)v119 - v50;
  v51 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoCallExpression(v51);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v52);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v53);
  v119[33] = (char *)v119 - v54;
  v55 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoUpdateParametersExpression(v55);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v56);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v57);
  v119[30] = (char *)v119 - v58;
  v59 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoIndexExpression(v59);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v60);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v61);
  v119[28] = (char *)v119 - v62;
  v63 = sub_23F6D398C();
  v119[25] = type metadata accessor for TranscriptProtoDotExpression(v63);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v64);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v65);
  v119[31] = (char *)v119 - v66;
  v67 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoInfixExpression(v67);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v68);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v69);
  v119[24] = (char *)v119 - v70;
  v71 = sub_23F6B58C8();
  v119[55] = *(_QWORD *)(v71 - 8);
  v119[56] = v71;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v72);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v73);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v74);
  sub_23F6B6580();
  v119[4] = v75;
  v76 = sub_23F6D398C();
  v119[20] = type metadata accessor for TranscriptProtoPrefixExpression(v76);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v77);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v78);
  v119[23] = (char *)v119 - v79;
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v80);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v81);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v82);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v83);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v84);
  sub_23F6B6580();
  v86 = sub_23F70D434(v85);
  v119[58] = type metadata accessor for Expression(v86);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v87);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v88);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v89);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v90);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v91);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v92);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v93);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v94);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v95);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v96);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v97);
  sub_23F72E2B0();
  MEMORY[0x24BDAC7A8](v98);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v99);
  sub_23F6D3D14();
  v119[57] = v100;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v101);
  v103 = (char *)v119 - v102;
  v104 = sub_23FB29970();
  type metadata accessor for TranscriptProtoValueExpression(v104);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v105);
  sub_23F6B6618();
  MEMORY[0x24BDAC7A8](v106);
  sub_23F878DA4();
  sub_23F6B5D98();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v107);
  v108 = sub_23F70D7F8();
  v109 = type metadata accessor for TranscriptProtoExpressionEnum(v108);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v110);
  v111 = sub_23FB2A76C();
  sub_23F6B6474(v111, v1);
  v112 = sub_23F6B5164(v1, 1, v109);
  if (!v113)
  {
    v115 = sub_23FB29D10();
    sub_23F6F594C(v115, v116, v117);
    sub_23FAD6F0C();
    v118 = (char *)&loc_23FB0B200 + 4 * word_23FB92B28[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_23F77DD64(v112, &qword_256EB2318);
  v119[60] = v109;
  sub_23F6916B8(&qword_256EBEF00);
  sub_23FB2F17C();
  sub_23F77DA84();
  sub_23F6B5AD4();
  *v114 = v103;
  v114[1] = v0;
  sub_23F77D9E4();
  sub_23F6F8C88(v3, type metadata accessor for TranscriptProtoExpression);
  sub_23F877A30();
  sub_23F6B5100();
}

void ValueExpression.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  _QWORD v28[5];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;

  sub_23F6B5220();
  v28[4] = v6;
  v29 = v1;
  v8 = v7;
  v30 = *(_QWORD *)(sub_23FAD69A0() - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B5C9C();
  MEMORY[0x24BDAC7A8](v10);
  v34 = (char *)v28 - v11;
  v35 = sub_23F6B58C8();
  sub_23F70D9A8();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23F6B51D0();
  type metadata accessor for TranscriptProtoValueExpressionArrayVariant(v13);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B5268();
  sub_23F72E4BC();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  v16 = sub_23F6B5864();
  v17 = type metadata accessor for TranscriptProtoValueExpressionEnum(v16);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B5298();
  v33 = v8;
  sub_23FB29EEC();
  sub_23F6B4F58(v19, v20, v21);
  v22 = sub_23F6B5164(v2, 1, v17);
  if (!v24)
  {
    v31 = v4;
    v32 = v3;
    v28[2] = v5;
    sub_23FB29B3C(v2, v23, type metadata accessor for TranscriptProtoValueExpressionEnum);
    sub_23F6B5994();
    v27 = (char *)&loc_23FB0BD9C + 4 * byte_23FB92B54[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_23F923588(v22, &qword_256EB2330);
  sub_23F6916B8(&qword_256EBEF08);
  sub_23FB297E0();
  sub_23F77DA84();
  sub_23F6B5AD4();
  *v25 = v0;
  v25[1] = v17;
  v26 = sub_23F77D9E4();
  sub_23FB2AFA8(v26, type metadata accessor for TranscriptProtoValueExpression);
  sub_23F876FC4();
  sub_23F6B5100();
}

void PrefixExpression.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_23F6B5220();
  v4 = v3;
  v6 = v5;
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B58C8();
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5208();
  v9 = *v4;
  type metadata accessor for TranscriptProtoPrefixExpression(0);
  sub_23FB2A020();
  if (v0)
  {
    sub_23FB297A8(v10, type metadata accessor for TranscriptProtoPrefixExpression);
  }
  else
  {
    sub_23F77E584();
    v11 = sub_23FB29B44();
    sub_23FB298E4(v11, type metadata accessor for TranscriptProtoStatementID);
    sub_23FB297A8(v12, type metadata accessor for TranscriptProtoPrefixExpression);
    *v6 = v9;
    v13 = type metadata accessor for PrefixExpression(0);
    v14 = sub_23FB2A2A8(v13);
    sub_23F75E710(v14, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void InfixExpression.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  void (*v24)(_BYTE *, uint64_t, uint64_t);
  int v25;
  int v26;
  _BYTE *v27;
  uint64_t v28;

  sub_23F6B5220();
  v6 = v5;
  v8 = v7;
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v25 - v11;
  sub_23F6B58C8();
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B5F5C();
  if (v0)
  {
    sub_23FB297C8(v15, type metadata accessor for TranscriptProtoInfixExpression);
  }
  else
  {
    v28 = v15;
    v27 = v8;
    v26 = *v6;
    type metadata accessor for TranscriptProtoInfixExpression(0);
    sub_23F878C38();
    sub_23FB29D7C();
    v25 = *(_DWORD *)v12;
    v16 = *((_QWORD *)v12 + 2);
    sub_23F6B6254();
    v17 = sub_23FB2A570();
    sub_23FB297D8(v17, type metadata accessor for TranscriptProtoStatementID);
    sub_23FB29D7C();
    if (v16)
    {
      sub_23FB297C8(v18, type metadata accessor for TranscriptProtoInfixExpression);
      sub_23FB29DD4(v3, *(uint64_t (**)(uint64_t, _QWORD))(v1 + 8));
    }
    else
    {
      v19 = *(_QWORD *)(v4 + 8);
      sub_23F6B5F1C();
      sub_23FB29EB0();
      v20 = sub_23FB2A478();
      sub_23FB297EC(v20, type metadata accessor for TranscriptProtoStatementID);
      sub_23FB297C8(v21, type metadata accessor for TranscriptProtoInfixExpression);
      v22 = v27;
      *v27 = v26;
      type metadata accessor for InfixExpression(0);
      sub_23FB2AE90();
      v24 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v1 + 32);
      v24(&v22[v23], v3, v28);
      v24(&v22[*(int *)(v19 + 24)], v2, v28);
    }
  }
  sub_23F77DB18();
  sub_23F6B5100();
}

void DotExpression.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  sub_23F6B5220();
  v4 = v3;
  v6 = v5;
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B58C8();
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23F78F27C();
  type metadata accessor for TranscriptProtoDotExpression(v9);
  sub_23FB2A020();
  if (v0)
  {
    sub_23FB297A8(v10, type metadata accessor for TranscriptProtoDotExpression);
  }
  else
  {
    sub_23F77E584();
    v11 = sub_23FB29B44();
    sub_23FB298E4(v11, type metadata accessor for TranscriptProtoStatementID);
    v13 = *v4;
    v12 = v4[1];
    v14 = sub_23F6B90D8();
    sub_23FB297A8(v14, type metadata accessor for TranscriptProtoDotExpression);
    sub_23F75E710(v6, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
    v15 = (_QWORD *)(v6 + *(int *)(type metadata accessor for DotExpression(0) + 20));
    *v15 = v13;
    v15[1] = v12;
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void IndexExpression.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_23F6B5220();
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B5CD4();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (unsigned int *)((char *)&v22 - v6);
  v8 = sub_23F6B58C8();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F77E490();
  sub_23FB29BE4();
  if (v0)
  {
    sub_23FB297A8(v11, type metadata accessor for TranscriptProtoIndexExpression);
  }
  else
  {
    v23 = v8;
    v12 = *v7;
    sub_23F6B5508();
    v13 = sub_23FB2AD7C();
    sub_23FB297D8(v13, type metadata accessor for TranscriptProtoStatementID);
    type metadata accessor for TranscriptProtoIndexExpression(0);
    sub_23FB2AABC();
    sub_23FB29BE4();
    if (v12)
    {
      sub_23FB297A8(v14, type metadata accessor for TranscriptProtoIndexExpression);
      (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v3, v23);
    }
    else
    {
      sub_23F6B54F8();
      v15 = sub_23FB299DC();
      sub_23FB298A0(v15, type metadata accessor for TranscriptProtoStatementID);
      sub_23FB297A8(v16, type metadata accessor for TranscriptProtoIndexExpression);
      v17 = *(void (**)(uint64_t))(v1 + 32);
      v18 = sub_23F6B63E8();
      v19 = v23;
      v17(v18);
      v20 = type metadata accessor for IndexExpression(0);
      v21 = sub_23FB2A63C(v20);
      ((void (*)(uint64_t, uint64_t, uint64_t))v17)(v21, v2, v19);
    }
  }
  sub_23F877A30();
  sub_23F6B5100();
}

void UpdateParametersExpression.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  uint64_t (*v48)(uint64_t);
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t (*v63)(_QWORD);
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[2];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t updated;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  sub_23F6B5220();
  v85 = v0;
  v6 = v5;
  v70 = v7;
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  v82 = (uint64_t)v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F6D398C();
  updated = type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter(v10);
  v71 = *(_QWORD *)(updated - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  v83 = (char *)v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v13);
  v84 = (uint64_t)v66 - v14;
  v15 = sub_23F6D398C();
  v16 = type metadata accessor for UpdateParametersExpression.UpdateParameter(v15);
  v79 = *(_QWORD *)(v16 - 8);
  v80 = v16;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v17);
  v77 = (_QWORD *)((char *)v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F6D3D14();
  v78 = v20;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v21);
  v86 = (uint64_t)v66 - v22;
  v23 = sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6B5CD4();
  MEMORY[0x24BDAC7A8](v25);
  v26 = sub_23F6B58C8();
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F6B5C80();
  MEMORY[0x24BDAC7A8](v28);
  v29 = sub_23F78F2D0();
  type metadata accessor for TranscriptProtoUpdateParametersExpression(v29);
  v30 = v85;
  sub_23F77B8C8();
  if (v30)
  {
    sub_23FB297D8(v31, type metadata accessor for TranscriptProtoUpdateParametersExpression);
  }
  else
  {
    v72 = v1;
    v73 = v4;
    v74 = v23;
    v75 = v3;
    v69 = 0;
    v76 = v26;
    v32 = v84;
    sub_23F6B5F1C();
    v33 = sub_23FB2A064();
    sub_23FB298E4(v33, type metadata accessor for TranscriptProtoStatementID);
    v34 = *(_QWORD *)v6;
    v35 = *(_QWORD *)(*(_QWORD *)v6 + 16);
    if (v35)
    {
      v67 = v2;
      v68 = v6;
      v88 = MEMORY[0x24BEE4AF8];
      sub_23F77DCD4();
      sub_23FB29B68();
      sub_23F711280();
      sub_23F78F3B0();
      v66[1] = v34;
      v37 = v34 + v36;
      v38 = type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter;
      v71 = *(_QWORD *)(v39 + 72);
      v40 = (uint64_t)v83;
      while (1)
      {
        v41 = sub_23F8783DC();
        sub_23F77DB78(v41, v42);
        sub_23F77DB78(v32, v40);
        v44 = *(_QWORD *)v40;
        v43 = *(_QWORD *)(v40 + 8);
        v45 = *(_BYTE *)(v40 + 16);
        v46 = v82;
        sub_23F6B4F58(v40 + *(int *)(updated + 24), v82, &qword_256EA25E0);
        sub_23F6B5164(v46, 1, v74);
        if (v47)
          break;
        v85 = v35;
        v48 = v38;
        v49 = v73;
        sub_23F77E2AC(v46, v73);
        sub_23F77E584();
        sub_23F6B54F8();
        v40 = (uint64_t)v83;
        sub_23FB2C74C();
        v50 = v49;
        v38 = v48;
        sub_23F70D63C(v50);
        v51 = v77;
        *v77 = v44;
        v51[1] = v43;
        v51[2] = 0;
        *((_BYTE *)v51 + 24) = 1;
        *((_BYTE *)v51 + 25) = v45;
        sub_23FB2A44C((uint64_t)v51 + *(int *)(v80 + 28), v75);
        sub_23FB29958(v40);
        sub_23FB29990();
        sub_23F77E2AC(v52, v53);
        sub_23F77E2AC(v43, v86);
        v32 = v84;
        sub_23FB29958(v84);
        if ((sub_23F77D93C() & 1) == 0)
        {
          sub_23F7D2A58();
          sub_23F711280();
          v43 = v88;
        }
        v54 = v79;
        v55 = v85;
        v57 = *(_QWORD *)(v43 + 16);
        v56 = *(_QWORD *)(v43 + 24);
        if (v57 >= v56 >> 1)
        {
          sub_23F77DA04(v56);
          sub_23F711280();
          v43 = v88;
        }
        *(_QWORD *)(v43 + 16) = v57 + 1;
        sub_23F6F594C(v86, v43+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(_QWORD *)(v54 + 72) * v57, type metadata accessor for UpdateParametersExpression.UpdateParameter);
        v37 += v71;
        v35 = v55 - 1;
        if (!v35)
        {
          v2 = v67;
          v64 = v70;
          v65 = v75;
          goto LABEL_14;
        }
      }
      v59 = sub_23F6B54F8();
      sub_23F6D378C(v59, &qword_256EA25E0);
      v87 = v74;
      sub_23F6916B8(&qword_256EA8618);
      v60 = sub_23F77D9AC();
      sub_23F77DC54();
      sub_23F6B5AD4();
      *v61 = v60;
      v61[1] = v35;
      sub_23F77D9E4();
      sub_23F693DFC();
      sub_23F70D6DC(v40);
      v62 = sub_23F6B5994();
      sub_23F6F8C88(v62, v63);
      sub_23F77DB70();
      sub_23F6F8C88(v68, type metadata accessor for TranscriptProtoUpdateParametersExpression);
      sub_23F77DE3C();
      (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v67, v76);
    }
    else
    {
      v58 = sub_23F77DCD4();
      v43 = MEMORY[0x24BEE4AF8];
      v65 = v75;
      v64 = v70;
LABEL_14:
      sub_23FB297D8(v58, type metadata accessor for TranscriptProtoUpdateParametersExpression);
      sub_23F6B644C();
      sub_23F759774(v64, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v65 + 32));
      *(_QWORD *)(v64 + *(int *)(type metadata accessor for UpdateParametersExpression(0) + 20)) = v43;
    }
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void CallExpression.init(transcript:)()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FAD7414();
  v3 = *v1;
  v2 = v1[1];
  sub_23F6B5F1C();
  sub_23FB23320();
  v5 = v4;
  sub_23FB297B8(v4, type metadata accessor for TranscriptProtoCallExpression);
  *v0 = v3;
  v0[1] = v2;
  v0[2] = v5;
  sub_23F6B647C();
}

void SayExpression.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD);
  uint64_t v28;
  uint64_t (*v29)(_QWORD);
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_23F6B50E8();
  v3 = v2;
  v5 = v4;
  sub_23FAD69A0();
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B5C80();
  v8 = MEMORY[0x24BDAC7A8](v7);
  sub_23F6D3910(v8, v9, v10, v11, v12, v13, v14, v15, v35);
  v38 = sub_23FB2C764();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B5298();
  v17 = *(_QWORD *)v3;
  v18 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  if (v18)
  {
    v36 = v3;
    v39 = MEMORY[0x24BEE4AF8];
    sub_23F6B90D8();
    sub_23FB2ADF4();
    sub_23F711208();
    sub_23F78F3B0();
    v20 = v17 + v19;
    v37 = *(_QWORD *)(v1 + 72);
    v21 = v39;
    do
    {
      v22 = sub_23F78F5B0();
      sub_23F6F5920(v22, v23, type metadata accessor for TranscriptProtoStatementID);
      v24 = sub_23FAD6F18();
      sub_23F6F5920(v24, v25, type metadata accessor for TranscriptProtoStatementID);
      sub_23F6B90D8();
      sub_23FB2C74C();
      v26 = sub_23F78F534();
      sub_23F6F8C88(v26, v27);
      v28 = sub_23F78F560();
      sub_23F6F8C88(v28, v29);
      if ((sub_23F77D9A4() & 1) == 0)
      {
        sub_23FB29A98();
        sub_23F711208();
        v21 = v39;
      }
      v31 = *(_QWORD *)(v21 + 16);
      v30 = *(_QWORD *)(v21 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_23FB2A8E0(v30);
        sub_23F711208();
        v21 = v39;
      }
      *(_QWORD *)(v21 + 16) = v31 + 1;
      sub_23F77DAB8();
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v34 + 32))(v32 + v33 * v31, v0, v38);
      v39 = v21;
      v20 += v37;
      --v18;
    }
    while (v18);
    v3 = v36;
  }
  else
  {
    sub_23F6B90D8();
    v21 = MEMORY[0x24BEE4AF8];
  }
  sub_23F6F8C88(v3, type metadata accessor for TranscriptProtoSayExpression);
  swift_bridgeObjectRelease();
  *v5 = v21;
  sub_23F693DDC();
}

void PickExpression.init(transcript:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);

  sub_23F6B5220();
  v2 = v1;
  v4 = v3;
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B58C8();
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23F6B51D0();
  type metadata accessor for TranscriptProtoPickExpression(v7);
  sub_23FB2AABC();
  sub_23FB2ADD4();
  if (v0)
  {
    sub_23FB297A8(v8, type metadata accessor for TranscriptProtoPickExpression);
  }
  else
  {
    sub_23F77E584();
    v9 = sub_23FB29B44();
    sub_23FB297C0(v9, type metadata accessor for TranscriptProtoStatementID);
    v10 = *v2;
    sub_23FB297A8(v11, type metadata accessor for TranscriptProtoPickExpression);
    v12 = sub_23F8781AC();
    sub_23F75E710(v12, v13, v14);
    *(_QWORD *)(v4 + *(int *)(type metadata accessor for PickExpression(0) + 20)) = v10;
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void ConfirmExpression.init(transcript:)()
{
  sub_23FB0CCD0();
}

void SearchExpression.init(transcript:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;

  sub_23FAD7414();
  v3 = *v1;
  v2 = v1[1];
  v4 = *((_BYTE *)v1 + 16);
  v5 = *((_BYTE *)v1 + 17);
  v6 = sub_23F6B6254();
  sub_23FB297B8(v6, type metadata accessor for TranscriptProtoSearchExpression);
  *(_QWORD *)v0 = v3;
  *(_QWORD *)(v0 + 8) = v2;
  *(_BYTE *)(v0 + 16) = v4;
  *(_BYTE *)(v0 + 17) = v5;
  sub_23F6B5F7C();
}

void PickOneExpression.init(transcript:)()
{
  sub_23FB0CCD0();
}

void sub_23FB0CCD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F6B5220();
  v4 = v3;
  v6 = v5;
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B58C8();
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B59E0();
  sub_23FB29BE4();
  if (v0)
  {
    sub_23F70D63C(v4);
  }
  else
  {
    sub_23F77E1FC();
    v9 = sub_23FB2AAF4();
    sub_23FB298E4(v9, type metadata accessor for TranscriptProtoStatementID);
    sub_23F70D63C(v4);
    sub_23F75E710(v6, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32));
  }
  sub_23F877A30();
  sub_23F6B5100();
}

void ResolveToolExpression.init(transcript:)()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FAD7414();
  v2 = *v1;
  v3 = sub_23F6B6254();
  sub_23FB297B8(v3, type metadata accessor for TranscriptProtoResolveToolExpression);
  *v0 = v2;
  sub_23F694C84();
}

void UndoExpression.init(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_23F6D3DC4();
  a17 = v20;
  a18 = v21;
  v22 = sub_23F78F298();
  type metadata accessor for UndoExpression(v22);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&a9 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F6B53AC();
  sub_23F6916B8(&qword_256EA49D8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F6B5208();
  sub_23F77B8C8();
  if (!v18)
  {
    sub_23F77E584();
    v29 = sub_23FB29B44();
    sub_23FB298E4(v29, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6B58C8();
    sub_23FB298A8(v19, 0);
    sub_23FB298A8((uint64_t)v25, 1);
    sub_23FB29BB0(v19, v30, &qword_256EA49D8);
    sub_23FB29B3C((uint64_t)v25, v31, type metadata accessor for UndoExpression);
  }
  sub_23FB297B0(v28, type metadata accessor for TranscriptProtoUndoExpression);
  sub_23F6D3710();
}

void RejectExpression.init(transcript:)()
{
  sub_23FB0CCD0();
}

void CancelExpression.init(transcript:)()
{
  sub_23FB0CCD0();
}

void OpenExpression.init(transcript:)()
{
  sub_23FB0CCD0();
}

void sub_23FB0CF30()
{
  Expression.init(transcript:)();
}

uint64_t sub_23FB0CF44()
{
  return sub_23FAEBF18();
}

void TranscriptProtoExpression.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  _QWORD v73[35];
  uint64_t v74;

  sub_23F6B50E8();
  v73[34] = v2;
  v74 = v1;
  v73[32] = type metadata accessor for TranscriptProtoExpression(0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v3);
  v73[33] = (char *)v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F6D398C();
  type metadata accessor for OpenExpression(v5);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  v73[26] = (char *)v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v8);
  v73[25] = (char *)v73 - v9;
  v10 = sub_23F6D398C();
  type metadata accessor for CancelExpression(v10);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  v73[24] = (char *)v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v13);
  v73[23] = (char *)v73 - v14;
  v15 = sub_23F6D398C();
  type metadata accessor for RejectExpression(v15);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  v73[22] = (char *)v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v18);
  v73[21] = (char *)v73 - v19;
  v20 = sub_23F6D398C();
  type metadata accessor for UndoExpression(v20);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  v73[20] = (char *)v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v23);
  v73[18] = (char *)v73 - v24;
  v25 = sub_23F6D398C();
  type metadata accessor for PickOneExpression(v25);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v27);
  v73[13] = (char *)v73 - v28;
  v29 = sub_23F6D398C();
  type metadata accessor for ConfirmExpression(v29);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v31);
  v73[10] = (char *)v73 - v32;
  v33 = sub_23F6D398C();
  v73[17] = type metadata accessor for TranscriptProtoPickExpression(v33);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v34);
  v73[19] = (char *)v73 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_23F6D398C();
  v73[12] = type metadata accessor for PickExpression(v36);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v38);
  v73[15] = (char *)v73 - v39;
  v40 = sub_23F6D398C();
  type metadata accessor for UpdateParametersExpression(v40);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v42);
  v73[5] = (char *)v73 - v43;
  v44 = sub_23F6D398C();
  type metadata accessor for IndexExpression(v44);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v46);
  v73[2] = (char *)v73 - v47;
  v48 = sub_23F6D398C();
  v73[8] = type metadata accessor for TranscriptProtoDotExpression(v48);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v49);
  sub_23F6B5314((uint64_t)v73 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v51);
  v73[27] = (char *)v73 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_23F6D398C();
  v73[1] = type metadata accessor for DotExpression(v53);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v54);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v55);
  v73[4] = (char *)v73 - v56;
  v57 = sub_23F6D398C();
  type metadata accessor for InfixExpression(v57);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v58);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v59);
  v60 = sub_23FB299D0();
  type metadata accessor for PrefixExpression(v60);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v61);
  sub_23FAC396C();
  MEMORY[0x24BDAC7A8](v62);
  sub_23F78F2D0();
  v73[28] = sub_23FB2C764();
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8](v63);
  sub_23F77DC18();
  MEMORY[0x24BDAC7A8](v64);
  v65 = sub_23FAC3D30();
  type metadata accessor for Expression(v65);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v66);
  v67 = sub_23F77DB24();
  v73[31] = type metadata accessor for TranscriptProtoExpressionEnum(v67);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v68);
  v73[29] = (char *)v73 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v70);
  v73[30] = (char *)v73 - v71;
  sub_23F6F5920(v74, v0, type metadata accessor for Expression);
  sub_23F8783DC();
  v72 = (char *)sub_23FB0D46C + 4 * word_23FB92B5C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23FB0D46C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);

  v2 = *(_BYTE *)(v0 + 16);
  *(_OWORD *)(v1 - 128) = *(_OWORD *)v0;
  *(_BYTE *)(v1 - 112) = v2;
  TranscriptProtoValueExpression.init(handwritten:)();
  sub_23FB29990();
  swift_storeEnumTagMultiPayload();
  v3 = *(_QWORD *)(v1 - 152);
  sub_23F77DD6C(v3, 1);
  sub_23F6F0878();
  sub_23F6F8C88(*(_QWORD *)(v1 - 136), type metadata accessor for Expression);
  v4 = v3;
  v5 = *(_QWORD *)(v1 - 144);
  sub_23FB29B3C(v4, v6, type metadata accessor for TranscriptProtoExpression);
  sub_23F77E660(v7, &qword_256EB2318);
  v8 = sub_23F7D2958();
  sub_23F6F594C(v8, v9, v10);
  sub_23F77DD6C(v5, 0);
  sub_23F693DDC();
}

void TranscriptProtoValueExpression.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F6B50E8();
  v1 = v0;
  sub_23F6B58C8();
  sub_23F7F68B0();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F6B5C9C();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_23FB299D0();
  type metadata accessor for TranscriptProtoStatementID(v4);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_23F77DB24();
  type metadata accessor for TranscriptProtoValueExpressionEnum(v6);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F878DA4();
  __asm { BR              X10 }
}

void sub_23FB0DCC4()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *v3 = v0 & 1;
  sub_23F78F478();
  swift_storeEnumTagMultiPayload();
  v4 = sub_23FB298EC(v1, 1, 1, v2);
  type metadata accessor for TranscriptProtoValueExpression(v4);
  v5 = sub_23F6F0878();
  sub_23F77E660(v5, &qword_256EB2330);
  sub_23FB29B3C((uint64_t)v3, v6, type metadata accessor for TranscriptProtoValueExpressionEnum);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v1, 0, 1, v2);
  sub_23F693DDC();
}

void TranscriptProtoPrefixExpression.init(handwritten:)()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;

  sub_23F6B50E8();
  v4 = v3;
  v6 = sub_23FB29ABC(v5);
  v7 = type metadata accessor for TranscriptProtoPrefixExpression(v6);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23FB29900();
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5268();
  v25 = (uint64_t)v4;
  v24 = *v4;
  v11 = type metadata accessor for PrefixExpression(0);
  sub_23FB2A2CC(v11);
  v12 = sub_23FB2C758();
  v13 = sub_23FB2C740();
  v15 = v14;
  v16 = sub_23FAD69A0();
  sub_23FB29DBC();
  *(_DWORD *)v2 = v12;
  *(_QWORD *)(v2 + 8) = v13;
  *(_QWORD *)(v2 + 16) = v15;
  sub_23FB2A08C(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  v17 = sub_23FB29D00();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, v18, v19, v16);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v1[*(int *)(v7 + 20)], 1, 1, v16);
  sub_23FAC3044();
  *v1 = v24;
  v20 = sub_23FB29D10();
  sub_23F710E80(v20, v21, &qword_256EA25E0);
  v22 = sub_23FB2A350();
  sub_23F6F594C(v22, v23, type metadata accessor for TranscriptProtoPrefixExpression);
  sub_23F6F8C88(v25, type metadata accessor for PrefixExpression);
  sub_23F693DDC();
}

void TranscriptProtoInfixExpression.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, unsigned __int8 *, uint64_t);
  unsigned __int8 *v30;
  int v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;

  sub_23F6B50E8();
  v5 = v4;
  v7 = sub_23FB29ABC(v6);
  v33 = type metadata accessor for TranscriptProtoInfixExpression(v7);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  v32 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F6B58C8();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5CD4();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B6B3C();
  v30 = v5;
  v31 = *v5;
  v14 = type metadata accessor for InfixExpression(0);
  v15 = &v5[*(int *)(v14 + 20)];
  v29 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v1 + 16);
  v29(v0, v15, v10);
  v16 = sub_23FB2C758();
  v17 = sub_23FB2C740();
  v19 = v18;
  sub_23FAD69A0();
  sub_23FAD7240();
  *(_DWORD *)v3 = v16;
  *(_QWORD *)(v3 + 8) = v17;
  *(_QWORD *)(v3 + 16) = v19;
  sub_23FB2B104();
  sub_23F6B9258(v3, 0);
  v20 = (uint64_t)v30;
  v29(v0, &v30[*(int *)(v14 + 24)], v10);
  sub_23FB2C758();
  v21 = sub_23FB29DB4();
  v23 = v22;
  sub_23FAC3DD4();
  *(_DWORD *)v2 = v17;
  *(_QWORD *)(v2 + 8) = v21;
  *(_QWORD *)(v2 + 16) = v23;
  sub_23FB2B104();
  sub_23F6B9258(v2, 0);
  v25 = v32;
  v24 = v33;
  sub_23F6B9258((uint64_t)&v32[*(int *)(v33 + 20)], 1);
  v26 = (uint64_t)&v25[*(int *)(v24 + 24)];
  sub_23F6B9258(v26, 1);
  sub_23FAC3210();
  *v25 = v31;
  v27 = sub_23F8783DC();
  sub_23FB2A520(v27, v28);
  sub_23FB2A520(v2, v26);
  sub_23F6F594C((uint64_t)v25, v34, type metadata accessor for TranscriptProtoInfixExpression);
  sub_23F6F8C88(v20, type metadata accessor for InfixExpression);
  sub_23F693DDC();
}

void TranscriptProtoDotExpression.init(handwritten:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(_QWORD);
  uint64_t v20;

  sub_23F6B50E8();
  v4 = sub_23FB2A82C(v2, v3);
  v5 = type metadata accessor for TranscriptProtoDotExpression(v4);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  sub_23FB29900();
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23FB29A54();
  sub_23FB2C758();
  sub_23FB2AD38();
  v9 = sub_23FAD69A0();
  sub_23FAC3DD4();
  sub_23FB29C70();
  v10 = sub_23FB298EC(v1, 0, 1, v9);
  v11 = (uint64_t *)(v20 + *(int *)(type metadata accessor for DotExpression(v10) + 20));
  v12 = *v11;
  v13 = v11[1];
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v0 + *(int *)(v5 + 20), 1, 1, v9);
  sub_23F6B6254();
  sub_23FB2A98C();
  v14 = sub_23FAD6F18();
  sub_23F710E80(v14, v15, &qword_256EA25E0);
  *v0 = v12;
  v0[1] = v13;
  v16 = sub_23FB2A350();
  sub_23F6F594C(v16, v17, type metadata accessor for TranscriptProtoDotExpression);
  v18 = sub_23FB29D10();
  sub_23F6F8C88(v18, v19);
  sub_23F693DDC();
}

void TranscriptProtoIndexExpression.init(handwritten:)()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_23F6B50E8();
  v6 = v5;
  v8 = sub_23FB29ABC(v7);
  v27 = type metadata accessor for TranscriptProtoIndexExpression(v8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  v26 = (uint64_t)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F6B58C8();
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B5CD4();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B6B3C();
  v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  sub_23F78F5D0(v0, v6, v25);
  sub_23FB2C758();
  v15 = sub_23FB2AAD4();
  v17 = v16;
  sub_23FAD69A0();
  sub_23FAD7240();
  *(_DWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = v15;
  *(_QWORD *)(v4 + 16) = v17;
  sub_23FB2B110();
  sub_23F77DD78(v4, 0);
  v18 = type metadata accessor for IndexExpression(0);
  v25(v0, v6 + *(int *)(v18 + 20), v11);
  sub_23FB2C758();
  v19 = sub_23FB29DB4();
  v21 = v20;
  sub_23FAC3DD4();
  *(_DWORD *)v3 = v17;
  *(_QWORD *)(v3 + 8) = v19;
  *(_QWORD *)(v3 + 16) = v21;
  sub_23FB2B110();
  sub_23F77DD78(v3, 0);
  v22 = v26;
  sub_23F77DD78(v26, 1);
  sub_23F77DD78(v22 + *(int *)(v27 + 20), 1);
  sub_23FAC3210();
  sub_23FB29F28(v4, v22);
  v23 = sub_23F878320();
  sub_23FB29F28(v23, v24);
  sub_23F6F594C(v22, v28, type metadata accessor for TranscriptProtoIndexExpression);
  sub_23F6F8C88(v6, type metadata accessor for IndexExpression);
  sub_23F693DDC();
}

void TranscriptProtoUpdateParametersExpression.init(handwritten:)()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t);
  void (*v76)(uint64_t, uint64_t, uint64_t);
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t updated;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  sub_23F6B50E8();
  v5 = v4;
  v71 = v6;
  updated = type metadata accessor for UpdateParametersExpression.UpdateParameter(0);
  v89 = *(_QWORD *)(updated - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  v83 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v9);
  v90 = (uint64_t)&v67 - v10;
  v11 = sub_23F6D398C();
  v12 = type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter(v11);
  v81 = *(_QWORD *)(v12 - 8);
  v82 = v12;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  v80 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v15);
  v16 = sub_23F923B4C();
  v69 = type metadata accessor for TranscriptProtoUpdateParametersExpression(v16);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F70D434((uint64_t)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = sub_23FB2C764();
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B573C();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  v77 = (char *)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F77E490();
  v24 = sub_23F9249A0();
  v76 = v25;
  ((void (*)(uint64_t))v25)(v24);
  sub_23FB2C758();
  v26 = sub_23FB29DB4();
  v28 = v27;
  v29 = sub_23FAD69A0();
  sub_23FB29DBC();
  *(_DWORD *)v2 = v0;
  *(_QWORD *)(v2 + 8) = v26;
  *(_QWORD *)(v2 + 16) = v28;
  v78 = v3;
  v79 = v19;
  v30 = sub_23F78F5B0();
  v75 = v31;
  v31(v30);
  v68 = v2;
  v32 = sub_23FB29D00();
  v85 = v29;
  v35 = sub_23FB298EC(v32, v33, v34, v29);
  v36 = *(int *)(type metadata accessor for UpdateParametersExpression(v35) + 20);
  v72 = v5;
  v37 = *(_QWORD *)(v5 + v36);
  v38 = *(_QWORD *)(v37 + 16);
  v39 = MEMORY[0x24BEE4AF8];
  if (v38)
  {
    v91 = MEMORY[0x24BEE4AF8];
    sub_23F6B5508();
    sub_23F711640();
    sub_23F78F3B0();
    v67 = v37;
    v41 = v37 + v40;
    v73 = *(_QWORD *)(v42 + 72);
    v74 = v1;
    v43 = (uint64_t)v83;
    v44 = v79;
    v45 = (uint64_t)v77;
    do
    {
      v88 = v41;
      v89 = v38;
      v46 = v90;
      sub_23F6F5920(v41, v90, type metadata accessor for UpdateParametersExpression.UpdateParameter);
      v47 = sub_23FAE2D10();
      sub_23F6F5920(v47, v48, type metadata accessor for UpdateParametersExpression.UpdateParameter);
      v49 = *(_QWORD *)(v43 + 8);
      v87 = *(_QWORD *)v43;
      v86 = *(unsigned __int8 *)(v43 + 25);
      v76(v78, v43 + *(int *)(updated + 28), v44);
      sub_23F77DCD4();
      sub_23FB2C758();
      v50 = sub_23FB29DB4();
      v52 = v51;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(_DWORD *)v45 = v46;
      *(_QWORD *)(v45 + 8) = v50;
      *(_QWORD *)(v45 + 16) = v52;
      v53 = sub_23F6B689C();
      v75(v53);
      sub_23FAD6A98(v45, 0);
      v54 = (uint64_t)v80;
      sub_23FAD6A98((uint64_t)&v80[*(int *)(v82 + 24)], 1);
      sub_23F6F0BB0();
      *(_QWORD *)v54 = v87;
      *(_QWORD *)(v54 + 8) = v49;
      v55 = v74;
      *(_BYTE *)(v54 + 16) = v86;
      v56 = sub_23F924C14();
      sub_23F710E80(v56, v57, &qword_256EA25E0);
      sub_23F72DFE8(v54, v55);
      sub_23F70D63C(v43);
      sub_23F70D63C(v90);
      v39 = v91;
      if ((sub_23F77D9A4() & 1) == 0)
      {
        sub_23FB29A98();
        sub_23F711640();
        v39 = v91;
      }
      v59 = *(_QWORD *)(v39 + 16);
      v58 = *(_QWORD *)(v39 + 24);
      v60 = v89;
      if (v59 >= v58 >> 1)
      {
        sub_23FB2A8C8(v58);
        sub_23F711640();
        v39 = v91;
      }
      *(_QWORD *)(v39 + 16) = v59 + 1;
      sub_23FAD66C0();
      sub_23F72DFE8(v55, v61);
      v41 = v88 + v73;
      v38 = v60 - 1;
    }
    while (v38);
    swift_bridgeObjectRelease();
  }
  v62 = v70;
  v63 = (uint64_t)v70 + *(int *)(v69 + 20);
  sub_23F693EC8();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v64, v65, v66, v85);
  sub_23FAC3210();
  sub_23F710E80(v68, v63, &qword_256EA25E0);
  *v62 = v39;
  sub_23F6F594C((uint64_t)v62, v71, type metadata accessor for TranscriptProtoUpdateParametersExpression);
  sub_23F6F8C88(v72, type metadata accessor for UpdateParametersExpression);
  sub_23F693DDC();
}

void TranscriptProtoCallExpression.init(handwritten:)(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  sub_23F6B54F8();
  sub_23FB2123C(v5);
  sub_23FB2AC4C();
  sub_23F6F0878();
  swift_bridgeObjectRelease();
  sub_23F693DFC();
  *a2 = v4;
  a2[1] = v3;
  a2[2] = 0;
  sub_23F6B647C();
}

void TranscriptProtoSayExpression.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  sub_23F6B58C8();
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5C80();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F78F2D0();
  type metadata accessor for TranscriptProtoStatementID(v10);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B59E0();
  v12 = *v5;
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v27 = v7;
    v29 = MEMORY[0x24BEE4AF8];
    sub_23FB2ADF4();
    sub_23F711604();
    sub_23F78F3B0();
    v15 = v12 + v14;
    v28 = *(_QWORD *)(v2 + 72);
    v16 = *(void (**)(uint64_t))(v2 + 16);
    do
    {
      v17 = sub_23F879688();
      v16(v17);
      v18 = sub_23F6B6AAC();
      v16(v18);
      v19 = sub_23FB2C758();
      v20 = sub_23FB2C740();
      v22 = v21;
      sub_23FAC3DD4();
      *(_DWORD *)v3 = v19;
      *(_QWORD *)(v3 + 8) = v20;
      *(_QWORD *)(v3 + 16) = v22;
      sub_23F6D3DA4(v0);
      sub_23F6D3DA4(v1);
      v23 = v29;
      if ((sub_23F77D9A4() & 1) == 0)
      {
        sub_23FB2A144();
        v23 = v29;
      }
      v25 = *(_QWORD *)(v23 + 16);
      v24 = *(_QWORD *)(v23 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_23FB2A8E0(v24);
        sub_23F711604();
        v23 = v29;
      }
      *(_QWORD *)(v23 + 16) = v25 + 1;
      sub_23FAD66C0();
      sub_23F6F594C(v3, v26, type metadata accessor for TranscriptProtoStatementID);
      v15 += v28;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    v7 = v27;
  }
  else
  {
    sub_23F693E04();
    v23 = MEMORY[0x24BEE4AF8];
  }
  type metadata accessor for TranscriptProtoSayExpression(0);
  sub_23F6F0CB4();
  *v7 = v23;
  sub_23F693DDC();
}

void TranscriptProtoPickExpression.init(handwritten:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_QWORD);
  uint64_t v17;

  sub_23F6B50E8();
  v4 = sub_23FB2A82C(v2, v3);
  v5 = type metadata accessor for TranscriptProtoPickExpression(v4);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  sub_23FB29900();
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23FB29A54();
  sub_23FB2C758();
  sub_23FB2AD38();
  v9 = sub_23FAD69A0();
  sub_23FAC3DD4();
  sub_23FB29C70();
  v10 = sub_23FB298EC(v1, 0, 1, v9);
  v11 = *(_QWORD *)(v17 + *(int *)(type metadata accessor for PickExpression(v10) + 20));
  v12 = (uint64_t)v0 + *(int *)(v5 + 20);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v12, 1, 1, v9);
  sub_23FAC3044();
  sub_23F710E80(v1, v12, &qword_256EA25E0);
  *v0 = v11;
  v13 = sub_23FB2A350();
  sub_23F6F594C(v13, v14, type metadata accessor for TranscriptProtoPickExpression);
  v15 = sub_23F6B6AB8();
  sub_23F6F8C88(v15, v16);
  sub_23F693DDC();
}

void TranscriptProtoConfirmExpression.init(handwritten:)()
{
  sub_23FB0ECA8();
}

void TranscriptProtoSearchExpression.init(handwritten:)(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;

  v3 = *a1;
  v4 = a1[1];
  v5 = *((_BYTE *)a1 + 16);
  v6 = *((_BYTE *)a1 + 17);
  type metadata accessor for TranscriptProtoSearchExpression(0);
  sub_23F6F0878();
  *(_QWORD *)a2 = v3;
  *(_QWORD *)(a2 + 8) = v4;
  *(_BYTE *)(a2 + 16) = v5;
  *(_BYTE *)(a2 + 17) = v6;
  sub_23F6B5F7C();
}

void TranscriptProtoPickOneExpression.init(handwritten:)()
{
  sub_23FB0ECA8();
}

void sub_23FB0ECA8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(_QWORD);
  uint64_t v24;
  uint64_t (*v25)(_QWORD);

  sub_23F6B50E8();
  v24 = v5;
  v25 = v4;
  v22 = v6;
  v23 = v7;
  sub_23F6F08EC(v6, v7);
  sub_23FAC3E6C();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v22 - v9;
  v11 = sub_23F6B58C8();
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B573C();
  v14 = sub_23F6B6190();
  sub_23F78F5D0(v14, v15, v16);
  sub_23FB2C758();
  v17 = sub_23FB29DB4();
  v19 = v18;
  sub_23FAD69A0();
  sub_23FAD7240();
  *(_DWORD *)v3 = v0;
  *(_QWORD *)(v3 + 8) = v17;
  *(_QWORD *)(v3 + 16) = v19;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v11);
  sub_23F750B84(v3, 0);
  sub_23F750B84((uint64_t)v10, 1);
  sub_23F6F0CB4();
  v20 = sub_23FB2A2E4();
  sub_23F710E80(v20, v21, &qword_256EA25E0);
  sub_23F6F594C((uint64_t)v10, v24, v23);
  sub_23F6F8C88(v22, v25);
  sub_23F693DDC();
}

void TranscriptProtoResolveToolExpression.init(handwritten:)()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FB2AFD0();
  type metadata accessor for TranscriptProtoResolveToolExpression(0);
  sub_23F6F0878();
  *v0 = v1;
  sub_23F694CC8();
}

void TranscriptProtoUndoExpression.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_23F6B50E8();
  v0 = sub_23FB29DC8();
  type metadata accessor for TranscriptProtoUndoExpression(v0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F693EB0();
  sub_23F6916B8(&qword_256EA49D8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F6B53AC();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B5268();
  v4 = sub_23F8781AC();
  sub_23F6B4F58(v4, v5, &qword_256EA49D8);
  sub_23F77CB48();
  sub_23FAD69A0();
  v6 = sub_23FB29C60();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v6, v7, v8, v9);
  sub_23FAC3044();
  v10 = sub_23F6B6848();
  sub_23F710E80(v10, v11, &qword_256EA25E0);
  v12 = sub_23F77E680();
  sub_23F6F594C(v12, v13, type metadata accessor for TranscriptProtoUndoExpression);
  sub_23FB297B8(v14, type metadata accessor for UndoExpression);
  sub_23F693DDC();
}

void TranscriptProtoRejectExpression.init(handwritten:)()
{
  sub_23FB0ECA8();
}

void TranscriptProtoCancelExpression.init(handwritten:)()
{
  sub_23FB0ECA8();
}

void TranscriptProtoOpenExpression.init(handwritten:)()
{
  sub_23FB0ECA8();
}

void sub_23FB0EF18()
{
  TranscriptProtoExpression.init(handwritten:)();
}

void sub_23FB0EF3C()
{
  ValueExpression.init(transcript:)();
}

uint64_t sub_23FB0EF50()
{
  uint64_t v0;

  return sub_23FAEC03C(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

void sub_23FB0EF6C()
{
  TranscriptProtoValueExpression.init(handwritten:)();
}

void sub_23FB0EF90()
{
  PrefixExpression.init(transcript:)();
}

uint64_t sub_23FB0EFA4()
{
  return sub_23FAEC13C();
}

void sub_23FB0EFB8()
{
  TranscriptProtoPrefixExpression.init(handwritten:)();
}

uint64_t sub_23FB0EFDC(char *a1, uint64_t a2, uint64_t a3)
{
  return sub_23FACA554(a1, a2, a3, (uint64_t (*)(char *))PrefixExpression.PrefixOp.init(transcript:));
}

void sub_23FB0EFFC()
{
  InfixExpression.init(transcript:)();
}

uint64_t sub_23FB0F010()
{
  return sub_23FAEC260();
}

IntelligenceFlowPlannerSupport::TranscriptProtoInfixExpression_InfixOp __swiftcall TranscriptProtoInfixExpression_InfixOp.init(handwritten:)(IntelligenceFlowPlannerSupport::InfixExpression::InfixOp handwritten)
{
  _BYTE *v1;
  IntelligenceFlowPlannerSupport::TranscriptProtoInfixExpression_InfixOp result;

  sub_23F6F0AE0(v1);
  return result;
}

void sub_23FB0F02C()
{
  TranscriptProtoInfixExpression.init(handwritten:)();
}

uint64_t sub_23FB0F050(char *a1, uint64_t a2, uint64_t a3)
{
  return sub_23FACA554(a1, a2, a3, (uint64_t (*)(char *))InfixExpression.InfixOp.init(transcript:));
}

uint64_t sub_23FB0F06C(char *a1)
{
  char v2;

  v2 = *a1;
  return TranscriptProtoInfixExpression_InfixOp.init(handwritten:)((IntelligenceFlowPlannerSupport::InfixExpression::InfixOp)&v2);
}

void sub_23FB0F09C()
{
  DotExpression.init(transcript:)();
}

uint64_t sub_23FB0F0B0()
{
  return sub_23FAEC384();
}

void sub_23FB0F0C4()
{
  TranscriptProtoDotExpression.init(handwritten:)();
}

void sub_23FB0F0E8()
{
  IndexExpression.init(transcript:)();
}

uint64_t sub_23FB0F0FC()
{
  return sub_23FAEC63C();
}

void sub_23FB0F110()
{
  TranscriptProtoIndexExpression.init(handwritten:)();
}

void UpdateParametersExpression.UpdateParameter.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t updated;
  uint64_t v15;
  char v16;

  sub_23F6B5220();
  v4 = v3;
  v6 = v5;
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_23F6B58C8();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B5208();
  v10 = v4[1];
  v15 = *v4;
  v16 = *((_BYTE *)v4 + 16);
  type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter(0);
  sub_23F77E600();
  sub_23F77B8C8();
  if (v0)
  {
    sub_23FB297A8(v11, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
    sub_23F6B6A48();
  }
  else
  {
    sub_23F77E1FC();
    v12 = sub_23FB2AAF4();
    sub_23FB298E4(v12, type metadata accessor for TranscriptProtoStatementID);
    sub_23FB297A8(v13, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
    *(_QWORD *)v6 = v15;
    *(_QWORD *)(v6 + 8) = v10;
    *(_QWORD *)(v6 + 16) = 0;
    *(_BYTE *)(v6 + 24) = 1;
    *(_BYTE *)(v6 + 25) = v16;
    updated = type metadata accessor for UpdateParametersExpression.UpdateParameter(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v6 + *(int *)(updated + 28), v2, v8);
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void sub_23FB0F260()
{
  UpdateParametersExpression.init(transcript:)();
}

uint64_t sub_23FB0F274()
{
  return sub_23FAEC760();
}

void TranscriptProtoUpdateParameterExpression_UpdateParameter.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t updated;

  sub_23F6B50E8();
  v4 = v3;
  v6 = sub_23FB29ABC(v5);
  updated = type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter(v6);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23FB29900();
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B5268();
  v22 = *(_QWORD *)v4;
  v20 = *(_QWORD *)(v4 + 8);
  v21 = *(_BYTE *)(v4 + 25);
  type metadata accessor for UpdateParametersExpression.UpdateParameter(0);
  v10 = sub_23FB2A4F8();
  v11(v10);
  sub_23F6B6254();
  v12 = sub_23FB2C758();
  v13 = sub_23FB2C740();
  v15 = v14;
  sub_23FAD69A0();
  sub_23FB29DBC();
  *(_DWORD *)v2 = v12;
  *(_QWORD *)(v2 + 8) = v13;
  *(_QWORD *)(v2 + 16) = v15;
  sub_23FB2A08C(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23F7D2ED8(v2, 0);
  sub_23F7D2ED8(v1 + *(int *)(updated + 24), 1);
  sub_23FAC3044();
  *(_QWORD *)v1 = v22;
  *(_QWORD *)(v1 + 8) = v20;
  *(_BYTE *)(v1 + 16) = v21;
  v16 = sub_23FB29D10();
  sub_23F710E80(v16, v17, &qword_256EA25E0);
  v18 = sub_23FB2A350();
  sub_23F6F594C(v18, v19, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
  sub_23F6F8C88(v4, type metadata accessor for UpdateParametersExpression.UpdateParameter);
  sub_23F693DDC();
}

void sub_23FB0F3DC()
{
  TranscriptProtoUpdateParametersExpression.init(handwritten:)();
}

void sub_23FB0F404()
{
  UpdateParametersExpression.UpdateParameter.init(transcript:)();
}

uint64_t sub_23FB0F418()
{
  return sub_23FAEC884();
}

void sub_23FB0F42C()
{
  TranscriptProtoUpdateParameterExpression_UpdateParameter.init(handwritten:)();
}

uint64_t sub_23FB0F450(char *a1)
{
  char v2;

  v2 = *a1;
  return UpdateParametersExpression.UpdateKind.init(transcript:)((IntelligenceFlowPlannerSupport::TranscriptProtoUpdateParameterExpression_UpdateKind)&v2);
}

void sub_23FB0F480()
{
  CallExpression.init(transcript:)();
  sub_23F878AAC();
}

uint64_t sub_23FB0F4A0()
{
  uint64_t *v0;

  return sub_23FAEC9A8(*v0, v0[1]);
}

void sub_23FB0F4BC(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  TranscriptProtoCallExpression.init(handwritten:)(a1, a2);
}

void sub_23FB0F4E0()
{
  SayExpression.init(transcript:)();
  sub_23F878AAC();
}

uint64_t sub_23FB0F500()
{
  uint64_t *v0;

  return sub_23FAECAC4(*v0);
}

void sub_23FB0F518()
{
  TranscriptProtoSayExpression.init(handwritten:)();
}

void sub_23FB0F53C()
{
  PickExpression.init(transcript:)();
}

uint64_t sub_23FB0F550()
{
  return sub_23FAECBA4();
}

void sub_23FB0F564()
{
  TranscriptProtoPickExpression.init(handwritten:)();
}

void sub_23FB0F588()
{
  ConfirmExpression.init(transcript:)();
}

uint64_t sub_23FB0F59C()
{
  return sub_23FAECE40();
}

void sub_23FB0F5B0()
{
  TranscriptProtoConfirmExpression.init(handwritten:)();
}

void sub_23FB0F5D4()
{
  SearchExpression.init(transcript:)();
  sub_23F878AAC();
}

uint64_t sub_23FB0F5F4()
{
  uint64_t v0;
  __int16 v1;

  if (*(_BYTE *)(v0 + 17))
    v1 = 256;
  else
    v1 = 0;
  return sub_23FAECF64(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), v1 | *(unsigned __int8 *)(v0 + 16));
}

void sub_23FB0F624(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  TranscriptProtoSearchExpression.init(handwritten:)(a1, a2);
}

void sub_23FB0F648()
{
  PickOneExpression.init(transcript:)();
}

uint64_t sub_23FB0F65C()
{
  return sub_23FAED068();
}

void sub_23FB0F670()
{
  TranscriptProtoPickOneExpression.init(handwritten:)();
}

void sub_23FB0F694()
{
  ResolveToolExpression.init(transcript:)();
  sub_23F878AAC();
}

uint64_t sub_23FB0F6B4()
{
  uint64_t *v0;

  return sub_23FAED18C(*v0);
}

void sub_23FB0F6CC()
{
  TranscriptProtoResolveToolExpression.init(handwritten:)();
}

#error "23FB0F6F8: call analysis failed (funcsize=5)"

uint64_t sub_23FB0F704()
{
  return sub_23FAED270();
}

void sub_23FB0F718()
{
  TranscriptProtoUndoExpression.init(handwritten:)();
}

void sub_23FB0F73C()
{
  RejectExpression.init(transcript:)();
}

uint64_t sub_23FB0F750()
{
  return sub_23FAED394();
}

void sub_23FB0F764()
{
  TranscriptProtoRejectExpression.init(handwritten:)();
}

void sub_23FB0F788()
{
  CancelExpression.init(transcript:)();
}

uint64_t sub_23FB0F79C()
{
  return sub_23FAED4B8();
}

void sub_23FB0F7B0()
{
  TranscriptProtoCancelExpression.init(handwritten:)();
}

void sub_23FB0F7D4()
{
  OpenExpression.init(transcript:)();
}

uint64_t sub_23FB0F7E8()
{
  return sub_23FAED5DC();
}

void sub_23FB0F7FC()
{
  TranscriptProtoOpenExpression.init(handwritten:)();
}

void ProgramStatement.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t, uint64_t, uint64_t);
  void (*v51)(void);
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t, uint64_t, _QWORD);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(_QWORD);
  uint64_t v68;
  uint64_t v69[2];
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  sub_23F6B5220();
  v8 = sub_23FB2A27C(v7);
  v77 = type metadata accessor for ProgramStatement(v8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  sub_23FB2991C(v10, v69[0]);
  v80 = sub_23FB2EB28();
  v76 = *(_QWORD *)(v80 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  v73 = (uint64_t)v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v13);
  v74 = (char *)v69 - v14;
  sub_23F6B5664();
  v16 = MEMORY[0x24BDAC7A8](v15);
  sub_23FB29E4C(v16, v17, v18, v19, v20, v21, v22, v23, v69[0]);
  sub_23F6916B8(&qword_256EA2E00);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6B5268();
  sub_23F6916B8(&qword_256EA6550);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v25);
  v26 = sub_23F78F27C();
  type metadata accessor for TranscriptProtoExpression(v26);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v27);
  v29 = sub_23FAD67A8(v28, v69[0]);
  type metadata accessor for Expression(v29);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v30);
  v31 = sub_23F7A00C8();
  type metadata accessor for TranscriptProtoStatementID(v31);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F6B58C8();
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F693EB0();
  sub_23F77B8C8();
  if (!v2)
  {
    v69[1] = v6;
    v70 = v5;
    v71 = v0;
    v72 = v3;
    v35 = v80;
    sub_23F77E584();
    v36 = sub_23FB2C74C();
    sub_23FB298A0(v36, type metadata accessor for TranscriptProtoStatementID);
    v37 = type metadata accessor for TranscriptProtoProgramStatement(0);
    sub_23F77BD8C();
    v38 = v71;
    Expression.init(transcript:)();
    v79 = 0;
    sub_23FB2A274(v1 + *(int *)(v37 + 24), v39, &qword_256EA2E00);
    v40 = sub_23F77E1A8();
    sub_23F6B5164(v40, v41, v35);
    if (v42)
    {
      sub_23FB2A6D8();
      v43 = v70;
      sub_23F77DD6C(v70, 1);
      v44 = v78;
      v45 = v77;
    }
    else
    {
      v69[0] = v4;
      v46 = v75;
      v47 = v76;
      v48 = sub_23F6B6AB8();
      sub_23F75E710(v48, v49, v50);
      v51 = *(void (**)(void))(v47 + 16);
      v52 = (uint64_t)v74;
      sub_23FB29EEC();
      v51();
      sub_23FB2A1BC(v73, v52);
      v53 = v79;
      sub_23FB2ED50();
      v44 = v78;
      v45 = v77;
      v79 = v53;
      if (v53)
      {
        v54 = *(void (**)(uint64_t))(v47 + 8);
        v55 = sub_23F9249A0();
        v54(v55);
        v56 = sub_23F7F643C(v46);
        sub_23FB297EC(v56, type metadata accessor for TranscriptProtoProgramStatement);
        sub_23FB297C0(v57, type metadata accessor for Expression);
        sub_23FB29DD4(v69[0], *(uint64_t (**)(uint64_t, _QWORD))(v72 + 8));
        goto LABEL_4;
      }
      v58 = *(void (**)(uint64_t))(v47 + 8);
      v59 = sub_23F9249A0();
      v58(v59);
      sub_23F7F643C(v46);
      sub_23FB2A6D8();
      v43 = v70;
      sub_23F77DD6C(v70, 0);
    }
    v60 = v44 + *(int *)(v45 + 24);
    sub_23FB2A6D8();
    sub_23F77DD6C(v60, 1);
    v61 = sub_23F7A1280();
    sub_23FB2ABE0(v61, v62, v63);
    sub_23F6F594C(v38, v44 + *(int *)(v45 + 20), type metadata accessor for Expression);
    sub_23FB29D9C(v43, v64, &qword_256EA6550);
    v65 = sub_23F78F4B0();
    sub_23F6F594C(v65, v66, v67);
    sub_23FB297EC(v68, type metadata accessor for TranscriptProtoProgramStatement);
    goto LABEL_4;
  }
  sub_23FB297D8(v34, type metadata accessor for TranscriptProtoProgramStatement);
LABEL_4:
  sub_23F8778A8();
  sub_23F6B5100();
}

void sub_23FB0FBE8()
{
  ProgramStatement.init(transcript:)();
}

uint64_t sub_23FB0FBFC()
{
  return sub_23FAED700();
}

void TranscriptProtoProgramStatement.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t);
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_23F6B5220();
  v6 = v5;
  v8 = sub_23FB2A528(v7);
  v49 = type metadata accessor for TranscriptProtoProgramStatement(v8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B537C(v10, v48);
  sub_23F6916B8(&qword_256EA6550);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23FB298C8(v12, v48);
  sub_23F6916B8(&qword_256EA2E00);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  v15 = sub_23FB297F4(v14, v48);
  type metadata accessor for Expression(v15);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F70D7A4(v17, v48);
  sub_23F6916B8(&qword_256EA8578);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  v51 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B58C8();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B573C();
  v22 = sub_23F6B689C();
  sub_23F6B5EF0(v22, v23, v24);
  v25 = sub_23FB2C758();
  v26 = sub_23FB2C740();
  v28 = v27;
  sub_23FAD69A0();
  sub_23FB2AC14();
  sub_23FAD7240();
  *(_DWORD *)v4 = v25;
  *(_QWORD *)(v4 + 8) = v26;
  *(_QWORD *)(v4 + 16) = v28;
  v29 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
  v30 = (uint64_t)v51;
  v31 = v52;
  sub_23F70D728(v0, v29);
  v32 = sub_23FB298EC(v4, 0, 1, v2);
  v33 = type metadata accessor for ProgramStatement(v32);
  sub_23F6F5920(v6 + *(int *)(v33 + 20), v53, type metadata accessor for Expression);
  TranscriptProtoExpression.init(handwritten:)();
  v34 = type metadata accessor for TranscriptProtoExpression(0);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v30, 0, 1, v34);
  sub_23F6B4F58(v6 + *(int *)(v33 + 24), v54, &qword_256EA6550);
  sub_23FB2AD2C();
  sub_23F77C68C();
  if (v1)
  {
    sub_23FB297C8(v35, type metadata accessor for ProgramStatement);
    sub_23F923588(v36, &qword_256EA8578);
    sub_23FAD6A14(v37, &qword_256EA25E0);
  }
  else
  {
    v38 = v50;
    sub_23F7D2ED8(v50, 1);
    v39 = v49;
    sub_23FB298A8(v38 + *(int *)(v49 + 20), 1);
    v40 = v30;
    v41 = v38 + *(int *)(v39 + 24);
    v42 = sub_23FB2EB28();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v41, 1, 1, v42);
    sub_23FAC3DD4();
    sub_23FB2A004(v4, v43, &qword_256EA25E0);
    sub_23FB29C34(v40, v44, &qword_256EA8578);
    sub_23FB29BB0(v31, v45, &qword_256EA2E00);
    sub_23FB2A43C(v38, v46, type metadata accessor for TranscriptProtoProgramStatement);
    sub_23FB297C8(v47, type metadata accessor for ProgramStatement);
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void sub_23FB0FEC8()
{
  TranscriptProtoProgramStatement.init(handwritten:)();
}

void sub_23FB0FEDC()
{
  StatementID.init(transcript:)();
  sub_23F878AAC();
}

uint64_t sub_23FB0FEFC()
{
  return sub_23FAED82C();
}

void sub_23FB0FF10()
{
  TranscriptProtoStatementID.init(handwritten:)();
  sub_23F878AAC();
}

void ActionOutcome.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);

  sub_23FB29C54();
  sub_23FB2C788();
  sub_23F6B51B8();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F693EB0();
  (*(void (**)(uint64_t, _QWORD))(v2 + 104))(v0, *MEMORY[0x24BE52270]);
  sub_23FB2A250();
  v3 = sub_23FB2C7D0();
  sub_23FB297B0(v3, type metadata accessor for TranscriptProtoActionOutcome);
  sub_23FB2C80C();
  v4 = sub_23FB2AB70();
  v5(v4);
  sub_23F6D3C2C();
}

void sub_23FB0FFC0()
{
  ActionOutcome.init(transcript:)();
}

void sub_23FB0FFD4()
{
  sub_23FAE9BB0();
}

void TranscriptProtoActionOutcome.init(handwritten:)()
{
  sub_23FB1001C();
}

void sub_23FB1001C()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  v0 = sub_23F8770FC();
  sub_23FB29C9C(*(_QWORD *)(v0 - 8));
  sub_23FAD6A50();
}

void sub_23FB10058()
{
  TranscriptProtoActionOutcome.init(handwritten:)();
}

void ActionRequirement.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(_QWORD);
  char *v37;
  _QWORD v38[9];
  uint64_t v39;

  sub_23F6B5220();
  v38[8] = v3;
  v39 = v2;
  v5 = v4;
  type metadata accessor for TranscriptProtoPermissionRequirement(0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  v38[2] = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v8);
  v38[3] = (char *)v38 - v9;
  v10 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoAppRequirement(v10);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  v38[4] = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v13);
  v38[5] = (char *)v38 - v14;
  v15 = sub_23FB2D0E8();
  v38[6] = *(_QWORD *)(v15 - 8);
  v38[7] = v15;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B5C80();
  MEMORY[0x24BDAC7A8](v17);
  v38[1] = (char *)v38 - v18;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v19);
  v20 = sub_23F78F2D0();
  type metadata accessor for TranscriptProtoSystemRequirementMessage(v20);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F923EC8();
  sub_23F6B5D90();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v23);
  v24 = sub_23F78F260();
  v25 = type metadata accessor for TranscriptProtoActionRequirementEnum(v24);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F6B5208();
  v27 = sub_23F6D3D70();
  sub_23F6B58F8(v27, v28);
  v29 = sub_23F77E3D0();
  v31 = sub_23F6B5164(v29, v30, v25);
  if (!v32)
  {
    v34 = sub_23F78F560();
    sub_23F6F594C(v34, v35, v36);
    v37 = (char *)&loc_23FB10270 + 4 * byte_23FB92B8F[sub_23FB2A688()];
    __asm { BR              X10 }
  }
  sub_23F77E3DC(v31, &qword_256EA7FE0);
  sub_23F6916B8(&qword_256EBEF10);
  sub_23FB297E0();
  sub_23F77DA84();
  sub_23F6B5AD4();
  *v33 = v0;
  v33[1] = v1;
  sub_23F77D9E4();
  sub_23F6F8C88(v5, type metadata accessor for TranscriptProtoActionRequirement);
  sub_23F877A30();
  sub_23F6B5100();
}

void SystemRequirement.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;

  sub_23F6B5220();
  v2 = v1;
  type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B5C9C();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_23F78F2D0();
  type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(v5);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B5CD4();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B62F8();
  sub_23F6916B8(&qword_256EA7FD8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23F77E1CC();
  v10 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(v9);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B573C();
  sub_23F6B6A10(v2, v0);
  v12 = sub_23F6B5164(v0, 1, v10);
  if (!v14)
  {
    sub_23FB2A318(v0, v13, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
    sub_23F6D3F0C();
    v17 = (char *)&loc_23FB10608 + 4 * byte_23FB92B93[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_23F77DC10(v12, &qword_256EA7FD8);
  sub_23F6916B8(&qword_256EBEF20);
  sub_23FB297E0();
  sub_23F77DA84();
  sub_23F6B5AD4();
  *v15 = &qword_256EA7FD8;
  v15[1] = v0;
  v16 = sub_23F77D9E4();
  sub_23FB297A8(v16, type metadata accessor for TranscriptProtoSystemRequirementMessage);
  sub_23F877A30();
  sub_23F6B5100();
}

void AppRequirement.init(transcript:)(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a1;
  if (v3 == 3)
  {
    sub_23F6916B8(&qword_256EBEF18);
    sub_23F77E1B4();
    sub_23F77DA84();
    sub_23F6B5AD4();
    *v4 = v1;
    v4[1] = v2;
    v5 = sub_23F77D9E4();
    sub_23FB297A8(v5, type metadata accessor for TranscriptProtoAppRequirement);
  }
  else
  {
    sub_23FB2A404();
    sub_23FB297A8(v6, type metadata accessor for TranscriptProtoAppRequirement);
    v7 = sub_23FB2A700();
    sub_23FAD67C8(v7);
  }
  sub_23FB29D6C();
}

void PermissionRequirement.init(transcript:)(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  if ((_DWORD)v3 != 8)
  {
    sub_23FB2A404();
    sub_23FB297A8(v6, type metadata accessor for TranscriptProtoPermissionRequirement);
    __asm { BR              X9 }
  }
  sub_23F6916B8(&qword_256EBEF28);
  sub_23F77E1B4();
  sub_23F77DA84();
  sub_23F6B5AD4();
  *v4 = v1;
  v4[1] = v2;
  v5 = sub_23F77D9E4();
  sub_23FB297A8(v5, type metadata accessor for TranscriptProtoPermissionRequirement);
  sub_23FB29D6C();
}

void sub_23FB10964()
{
  ActionRequirement.init(transcript:)();
}

uint64_t sub_23FB10978()
{
  return sub_23FAED988();
}

void TranscriptProtoActionRequirement.init(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t (*v78)(uint64_t, uint64_t);
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  sub_23F6B5220();
  sub_23FB2AF54(v17);
  v19 = sub_23FB29ED4(v18);
  v89 = type metadata accessor for TranscriptProtoActionRequirement(v19);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  v90 = (uint64_t)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6D398C();
  v22 = sub_23FB2D43C();
  v83 = *(_QWORD *)(v22 - 8);
  v84 = v22;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v23);
  v81 = (uint64_t)&v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v25);
  v82 = (char *)&v79 - v26;
  sub_23F6D398C();
  v27 = sub_23FB2C944();
  v87 = *(_QWORD *)(v27 - 8);
  v88 = v27;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v28);
  v85 = (uint64_t)&v79 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v30);
  v86 = (char *)&v79 - v31;
  sub_23F6D398C();
  sub_23FB2D250();
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F6B5C80();
  MEMORY[0x24BDAC7A8](v33);
  sub_23FB2997C();
  v34 = sub_23FB2D0E8();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v35);
  v36 = sub_23F7A00C8();
  v93 = type metadata accessor for TranscriptProtoActionRequirementEnum(v36);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v37);
  v80 = (char *)&v79 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F72E168();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v41);
  sub_23FB29D24((uint64_t)&v79 - v42);
  sub_23F6D3ECC(v10, a10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16));
  v43 = sub_23F6B5994();
  v45 = v44(v43);
  if (v45 != *MEMORY[0x24BE53360])
  {
    v53 = v94;
    if (v45 == *MEMORY[0x24BE53358])
    {
      sub_23F7B0990(v10, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 96));
      v55 = (uint64_t)v86;
      v54 = v87;
      v56 = sub_23F878320();
      v57 = v88;
      sub_23F759774(v56, v58, v59);
      v60 = v85;
      sub_23F759774(v85, v55, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 16));
      TranscriptProtoAppRequirement.init(handwritten:)(v60);
      if (!v53)
      {
        v85 = v34;
        sub_23F6B56E0(v55, *(uint64_t (**)(uint64_t, uint64_t))(v54 + 8));
        sub_23F713F74();
        v70 = v13;
        goto LABEL_16;
      }
      sub_23F7B0990(a10, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
      v52 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
      v50 = v55;
    }
    else
    {
      if (v45 != *MEMORY[0x24BE53350])
      {
        v68 = v92;
        if (v45 != *MEMORY[0x24BE53368])
        {
          sub_23F779AF8();
          sub_23F6B5AD4();
          *v76 = 0;
          sub_23F77D9E4();
          sub_23F7F643C(a10);
          sub_23F7F643C(v10);
          goto LABEL_19;
        }
        v85 = v34;
        sub_23F7B0BC4();
        sub_23FB2AC58();
        goto LABEL_18;
      }
      sub_23F7B0990(v10, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 96));
      v62 = (uint64_t)v82;
      v61 = v83;
      v63 = sub_23F924C14();
      v57 = v84;
      sub_23F759774(v63, v64, v65);
      v66 = v81;
      sub_23F759774(v81, v62, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v61 + 16));
      v67 = v80;
      TranscriptProtoPermissionRequirement.init(handwritten:)(v66);
      v68 = v92;
      if (!v53)
      {
        v85 = v34;
        v77 = sub_23FB2AC7C();
        sub_23F6B56E0(v77, v78);
        sub_23FB2A04C();
        sub_23F878B7C();
        v70 = (uint64_t)v67;
        goto LABEL_17;
      }
      sub_23F7B0990(a10, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
      v50 = sub_23FB2AC7C();
    }
    v51 = v57;
    goto LABEL_11;
  }
  sub_23F7B0990(v10, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 96));
  v46 = sub_23F8783DC();
  sub_23F78F5D0(v46, v47, v48);
  sub_23F78F5D0(v11, v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16));
  v49 = v94;
  TranscriptProtoSystemRequirementMessage.init(handwritten:)();
  if (!v49)
  {
    v85 = v34;
    sub_23F6B6420(v16, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
    sub_23F878D40();
    v70 = v15;
LABEL_16:
    v68 = v92;
LABEL_17:
    sub_23FB29D1C(v70, v69, type metadata accessor for TranscriptProtoActionRequirementEnum);
LABEL_18:
    v71 = v90;
    sub_23FB298A8(v90, 1);
    sub_23FB2AD04();
    sub_23FAC3074();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a10, v85);
    v72 = v91;
    sub_23FB29B3C(v71, v73, type metadata accessor for TranscriptProtoActionRequirement);
    sub_23F77E660(v74, &qword_256EA7FE0);
    sub_23FB29B3C(v68, v75, type metadata accessor for TranscriptProtoActionRequirementEnum);
    sub_23FB298A8(v72, 0);
    goto LABEL_19;
  }
  sub_23F7B0990(a10, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  v50 = sub_23F6D3F0C();
LABEL_11:
  v52(v50, v51);
LABEL_19:
  sub_23F876FC4();
  sub_23F6B5100();
}

void TranscriptProtoSystemRequirementMessage.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  sub_23F6B5220();
  v7 = v6;
  sub_23F6F0920();
  v8 = sub_23FB2D244();
  v44 = *(_QWORD *)(v8 - 8);
  v45 = v8;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v42 = (uint64_t)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v11);
  v43 = (char *)&v42 - v12;
  sub_23F6D398C();
  v46 = *(_QWORD *)(sub_23FB2D214() - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F77DC18();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v42 - v15;
  sub_23FB299D0();
  sub_23FB2D250();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B573C();
  sub_23F6916B8(&qword_256EA7FD8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  v19 = sub_23F6B5C2C();
  v47 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(v19);
  v20 = sub_23FB298EC(v0, 1, 1, v47);
  type metadata accessor for TranscriptProtoSystemRequirementMessage(v20);
  v49 = v0;
  sub_23F6F0878();
  v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v48 = v7;
  sub_23F6B5EF0(v5, v7, v21);
  v22 = sub_23FB2A04C();
  v24 = v23(v22);
  if (v24 == *MEMORY[0x24BE53590])
  {
    sub_23F70D728(v5, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 96));
    v25 = sub_23F78F4B0();
    sub_23F6B633C(v25, v26, v27);
    v28 = sub_23F7D24F0();
    sub_23F6B633C(v28, v29, v30);
    v31 = sub_23FB2C9A4();
    v33 = v32;
    type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
    sub_23FAC3044();
    *v3 = v31;
    v3[1] = v33;
    sub_23F77E234(v1);
    sub_23F6B6178(v48, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    sub_23F77E234((uint64_t)v16);
LABEL_16:
    sub_23FB2ABFC();
    sub_23F7A690C((uint64_t)v3, 0);
    sub_23F710E80((uint64_t)v3, v49, &qword_256EA7FD8);
    goto LABEL_17;
  }
  v34 = v48;
  if (v24 == *MEMORY[0x24BE53588])
  {
    sub_23F70D728(v5, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 96));
    v36 = (uint64_t)v43;
    v35 = v44;
    v37 = sub_23F78F4B0();
    sub_23F759774(v37, v38, v39);
    sub_23F759774(v42, v36, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 16));
    sub_23FB2AA00();
    TranscriptProtoSystemRequirementAuthenticationRequest.init(handwritten:)();
    if (!v2)
    {
      sub_23F70D728(v34, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
      sub_23F6B56E0(v36, *(uint64_t (**)(uint64_t, uint64_t))(v35 + 8));
      goto LABEL_16;
    }
    sub_23F70D728(v34, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    v40 = sub_23F6B56E0(v36, *(uint64_t (**)(uint64_t, uint64_t))(v35 + 8));
  }
  else
  {
    if (v24 == *MEMORY[0x24BE53530]
      || v24 == *MEMORY[0x24BE53578]
      || v24 == *MEMORY[0x24BE53500]
      || v24 == *MEMORY[0x24BE53528]
      || v24 == *MEMORY[0x24BE53580])
    {
      sub_23F70D728(v48, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
      goto LABEL_16;
    }
    sub_23F779AF8();
    sub_23F6B5AD4();
    *v41 = 0;
    sub_23F77D9E4();
    sub_23FB2A00C(v34);
    v40 = sub_23FB2A00C(v5);
  }
  sub_23FB2993C(v40, type metadata accessor for TranscriptProtoSystemRequirementMessage);
LABEL_17:
  sub_23F8778A8();
  sub_23F6B5100();
}

void TranscriptProtoAppRequirement.init(handwritten:)(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  int v6;
  char v7;
  _BYTE *v8;
  uint64_t v9;

  sub_23FB29DC8();
  sub_23FB2C944();
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B5208();
  *v1 = 3;
  type metadata accessor for TranscriptProtoAppRequirement(0);
  sub_23FAC3074();
  sub_23F6B633C(v2, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  v6 = sub_23FB29FCC();
  if (v6 == *MEMORY[0x24BE525E0])
  {
    v7 = 0;
  }
  else if (v6 == *MEMORY[0x24BE525E8])
  {
    v7 = 1;
  }
  else
  {
    if (v6 != *MEMORY[0x24BE525F0])
    {
      sub_23F779AF8();
      sub_23F6B5AD4();
      *v8 = 0;
      sub_23F77D9E4();
      v9 = sub_23FB29FDC();
      sub_23FB297B0(v9, type metadata accessor for TranscriptProtoAppRequirement);
      sub_23FB2A248(v2);
      goto LABEL_8;
    }
    v7 = 2;
  }
  sub_23F6B530C(a1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  *v1 = v7;
LABEL_8:
  sub_23FB2AB24();
  sub_23F6D3674();
}

void TranscriptProtoPermissionRequirement.init(handwritten:)(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  int v6;
  char v7;
  _BYTE *v8;
  uint64_t v9;

  sub_23FB29DC8();
  sub_23FB2D43C();
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B5208();
  *v1 = 8;
  type metadata accessor for TranscriptProtoPermissionRequirement(0);
  sub_23FAC3074();
  sub_23F6B633C(v2, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  v6 = sub_23FB29FCC();
  if (v6 == *MEMORY[0x24BE53978])
  {
    v7 = 0;
  }
  else if (v6 == *MEMORY[0x24BE539A8])
  {
    v7 = 1;
  }
  else if (v6 == *MEMORY[0x24BE53970])
  {
    v7 = 2;
  }
  else if (v6 == *MEMORY[0x24BE53998])
  {
    v7 = 3;
  }
  else if (v6 == *MEMORY[0x24BE53980])
  {
    v7 = 4;
  }
  else if (v6 == *MEMORY[0x24BE539A0])
  {
    v7 = 5;
  }
  else if (v6 == *MEMORY[0x24BE53988])
  {
    v7 = 6;
  }
  else
  {
    if (v6 != *MEMORY[0x24BE53990])
    {
      sub_23F779AF8();
      sub_23F6B5AD4();
      *v8 = 0;
      sub_23F77D9E4();
      v9 = sub_23FB29FDC();
      sub_23FB297B0(v9, type metadata accessor for TranscriptProtoPermissionRequirement);
      sub_23FB2A248(v2);
      goto LABEL_18;
    }
    v7 = 7;
  }
  sub_23F6B530C(a1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  *v1 = v7;
LABEL_18:
  sub_23FB2AB24();
  sub_23F6D3674();
}

void sub_23FB1146C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  TranscriptProtoActionRequirement.init(handwritten:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void SystemRequirement.ProtectedAppRequest.init(transcript:)(uint64_t a1)
{
  sub_23FB114A4(a1, (void (*)(uint64_t))MEMORY[0x24BE53508]);
}

void sub_23FB114A4(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4;

  sub_23F6B90D8();
  v4 = sub_23F7B0BC4();
  a2(v4);
  sub_23F70D63C(a1);
  sub_23F6D3674();
}

void SystemRequirement.AuthenticationRequest.init(transcript:)()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unsigned int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);

  sub_23F6B5220();
  sub_23FB2AD84();
  v4 = sub_23FB29C54();
  type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(v4);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F7A00C8();
  v6 = sub_23FB2D220();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5F5C();
  sub_23F77B818();
  if (!v1)
  {
    v10 = *v0;
    if (v10 == 2)
    {
      sub_23F6916B8(&qword_256EBEF30);
      v11 = sub_23FB297E0();
      v13 = v12;
      sub_23F77D8D0();
      sub_23F6B5AD4();
      *v14 = v11;
      v14[1] = v13;
      v15 = sub_23F77D9E4();
      sub_23FB297B8(v15, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel);
    }
    else
    {
      sub_23FB297B8(v9, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel);
      v16 = (unsigned int *)MEMORY[0x24BE53538];
      if ((v10 & 1) != 0)
        v16 = (unsigned int *)MEMORY[0x24BE53540];
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v2, *v16, v6);
      v17 = sub_23F7A1280();
      sub_23F77DD54(v17, v18, v19);
      sub_23FB2A95C();
      v9 = sub_23FB2D22C();
    }
  }
  sub_23FB297B0(v9, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest);
  sub_23F876B60();
  sub_23F6B5100();
}

void sub_23FB1162C()
{
  SystemRequirement.init(transcript:)();
}

void TranscriptProtoSystemRequirementProtectedAppRequest.init(handwritten:)()
{
  sub_23FB1166C();
}

void sub_23FB1166C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6D3EA4();
  sub_23FB2AD84();
  v1 = v0;
  v3 = v2();
  v5 = v4;
  sub_23F879A30();
  sub_23F6F0CB4();
  *v1 = v3;
  v1[1] = v5;
  v6 = sub_23F8770FC();
  sub_23F78F1B0(v6);
  sub_23F6D3750();
}

void TranscriptProtoSystemRequirementAuthenticationRequest.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F6D3EA4();
  v3 = sub_23F78F298();
  type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(v3);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B5864();
  sub_23FB2D220();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B59E0();
  sub_23F6916B8(&qword_256EA7FD0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B53AC();
  sub_23FB2D238();
  v7 = sub_23FB2A814();
  TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel.init(handwritten:)(v7);
  if (!v0)
  {
    type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
    sub_23FAD6A98(v2, 0);
    sub_23FAD6A98(v1, 1);
    sub_23F6F0BB0();
    sub_23FB29BB0(v2, v8, &qword_256EA7FD0);
    sub_23FB29B3C(v1, v9, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest);
  }
  v10 = sub_23FB2D244();
  sub_23F78F1B0(v10);
  sub_23F6D3750();
}

void sub_23FB117B0()
{
  TranscriptProtoSystemRequirementMessage.init(handwritten:)();
}

void sub_23FB117C4(uint64_t a1)
{
  SystemRequirement.ProtectedAppRequest.init(transcript:)(a1);
}

void sub_23FB117D8()
{
  TranscriptProtoSystemRequirementProtectedAppRequest.init(handwritten:)();
}

void SystemRequirement.AuthenticationRequest.AuthenticationLevel.init(transcript:)(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  void (*v8)(uint64_t, _QWORD);
  unsigned int *v9;

  v3 = *a1;
  if (v3 == 2)
  {
    sub_23F6916B8(&qword_256EBEF30);
    v4 = sub_23F77E1B4();
    sub_23F77DC54();
    sub_23F6B5AD4();
    *v5 = v4;
    v5[1] = v2;
    v6 = sub_23F77D9E4();
    sub_23FB297B8(v6, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel);
  }
  else
  {
    sub_23FB297B8((uint64_t)a1, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel);
    sub_23FB2D220();
    sub_23FB29D84();
    if ((v3 & 1) != 0)
      v9 = (unsigned int *)MEMORY[0x24BE53540];
    else
      v9 = (unsigned int *)MEMORY[0x24BE53538];
    v8(a2, *v9);
  }
  sub_23FB29D6C();
}

void sub_23FB118B4()
{
  SystemRequirement.AuthenticationRequest.init(transcript:)();
}

void TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel.init(handwritten:)(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  int v6;
  char v7;
  _BYTE *v8;
  uint64_t v9;

  sub_23FB29DC8();
  sub_23FB2D220();
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B5208();
  *v1 = 2;
  type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
  sub_23FAC3074();
  sub_23F6B633C(v2, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  v6 = sub_23FB29FCC();
  if (v6 == *MEMORY[0x24BE53538])
  {
    v7 = 0;
  }
  else
  {
    if (v6 != *MEMORY[0x24BE53540])
    {
      sub_23F779AF8();
      sub_23F6B5AD4();
      *v8 = 0;
      sub_23F77D9E4();
      v9 = sub_23FB29FDC();
      sub_23FB297B0(v9, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel);
      sub_23FB2A248(v2);
      goto LABEL_7;
    }
    v7 = 1;
  }
  sub_23F6B530C(a1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  *v1 = v7;
LABEL_7:
  sub_23FB2AB24();
  sub_23F6D3674();
}

void sub_23FB119BC()
{
  TranscriptProtoSystemRequirementAuthenticationRequest.init(handwritten:)();
}

void sub_23FB119D0(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  SystemRequirement.AuthenticationRequest.AuthenticationLevel.init(transcript:)(a1, a2);
}

void sub_23FB119E4(uint64_t a1)
{
  TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel.init(handwritten:)(a1);
}

void ActionSuccess.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  sub_23F6B5220();
  v5 = v4;
  v32 = v6;
  sub_23F6916B8(&qword_256EA7FC8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B5BD8(v8, v30);
  sub_23F6916B8(&qword_256EA8560);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F78F260();
  v10 = sub_23FB2EB1C();
  v11 = *(_QWORD *)(v10 - 8);
  v34 = v10;
  v35 = v11;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5C9C();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v30 - v14;
  sub_23F6B6634();
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8](v16);
  v17 = sub_23F7A00C8();
  type metadata accessor for TranscriptProtoActionSuccess(v17);
  sub_23FAD7164();
  sub_23FB2A460();
  if (!v1)
  {
    v31 = v3;
    v19 = v33;
    v20 = sub_23F6B6964();
    sub_23F6B5EF0(v20, v21, v22);
    sub_23FB29DE4();
    v30 = v0;
    sub_23F70D728((uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t))(v35 + 8));
    sub_23F6B4F58(v5 + *(int *)(v2 + 28), v19, &qword_256EA7FC8);
    sub_23F77B354(v19, v23, v24, v25, v26, v27, v28, v29, v30, v31);
    v18 = sub_23FB2C86C();
  }
  sub_23FB297D8(v18, type metadata accessor for TranscriptProtoActionSuccess);
  sub_23F8778A8();
  sub_23F6B5100();
}

void ActionFailure.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_23F78F298();
  type metadata accessor for TranscriptProtoActionFailureFailure(v1);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v2);
  sub_23FB29F8C();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B5208();
  sub_23F77B594();
  if (!v0)
  {
    ActionFailure.Failure.init(transcript:)();
    v4 = sub_23FB2C7D0();
  }
  sub_23FB297B0(v4, type metadata accessor for TranscriptProtoActionFailure);
  sub_23F6D377C();
}

void sub_23FB11C54()
{
  StatementOutcome.init(transcript:)();
}

uint64_t sub_23FB11C68()
{
  return sub_23FAEDABC();
}

void TranscriptProtoActionSuccess.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  char v20;
  char v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;

  sub_23F6B5220();
  v6 = sub_23FB2A27C(v5);
  v31 = type metadata accessor for TranscriptProtoActionSuccess(v6);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B5C10(v8, v30);
  sub_23F6916B8(&qword_256EA8560);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  sub_23FB298C8(v10, v30);
  sub_23F6916B8(&qword_256EA7FC8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  v35 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_23F6B632C();
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F78F27C();
  sub_23FB2ED38();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B59E0();
  sub_23F6916B8(&qword_256EA2610);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B52B0();
  sub_23FB2C878();
  sub_23FB2ED20();
  sub_23F6B51EC(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  if (v1)
  {
    sub_23FB2ABA0();
    sub_23F877770();
  }
  else
  {
    v17 = sub_23F78F534();
    sub_23F75E68C(v17, v18, v19);
    sub_23FAD6A98(v2, 0);
    v20 = sub_23FB2C854();
    sub_23FB2C884();
    sub_23F77D3C8();
    v21 = sub_23FB2C854();
    v23 = v31;
    v22 = v32;
    sub_23FAD6A98((uint64_t)&v32[*(int *)(v31 + 24)], 1);
    v24 = (uint64_t)&v22[*(int *)(v23 + 28)];
    v25 = type metadata accessor for TranscriptProtoUndoContext(0);
    sub_23F6B5A8C(v24, v26, v27, v25);
    sub_23FAC3CEC();
    sub_23FB2A2A0(v2, v28, &qword_256EA2610);
    *v22 = v20 & 1;
    sub_23FB2A004((uint64_t)v35, v29, &qword_256EA7FC8);
    v22[1] = v21 & 1;
    sub_23F6F594C((uint64_t)v22, v33, type metadata accessor for TranscriptProtoActionSuccess);
    v16 = *(void (**)(uint64_t))(*(_QWORD *)(sub_23FB2ABA0() - 8) + 8);
  }
  v16(v0);
  sub_23F6B6834();
  sub_23F6B5100();
}

void TranscriptProtoValueDisambiguation.init(handwritten:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FB2A9F4();
  v3 = MEMORY[0x242672024]();
  sub_23FAF1BE8(v3);
  if (!v0)
  {
    v4 = sub_23FB2AC2C();
    type metadata accessor for TranscriptProtoValueDisambiguation(v4);
    sub_23F6F0BB0();
    *v1 = v2;
  }
  v5 = sub_23FB2D3AC();
  sub_23F78F1B0(v5);
  sub_23F6D3C2C();
}

void TranscriptProtoActionFailure.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F78F298();
  sub_23FB2C788();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B53AC();
  sub_23F6916B8(&qword_256EA7FF0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_23F6B5C2C();
  v6 = type metadata accessor for TranscriptProtoActionFailureFailure(v5);
  v7 = sub_23FB298EC(v0, 1, 1, v6);
  type metadata accessor for TranscriptProtoActionFailure(v7);
  sub_23F6F0878();
  sub_23FB2C7DC();
  TranscriptProtoActionFailureFailure.init(handwritten:)();
  v8 = sub_23FB2C7E8();
  if (v1)
  {
    v9 = sub_23F78F1B0(v8);
    sub_23FB297B8(v9, type metadata accessor for TranscriptProtoActionFailure);
  }
  else
  {
    sub_23F78F1B0(v8);
    sub_23F7D2ED8(v2, 0);
    sub_23FB29C34(v2, v10, &qword_256EA7FF0);
  }
  sub_23F6D3674();
}

#error "23FB1200C: call analysis failed (funcsize=5)"

void sub_23FB12018()
{
  ActionSuccess.init(transcript:)();
}

uint64_t sub_23FB1202C()
{
  return sub_23FAEDBF0();
}

void sub_23FB12040()
{
  TranscriptProtoActionSuccess.init(handwritten:)();
}

void ResponseManifest.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  unsigned int *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t);
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  sub_23F6B5220();
  v4 = v3;
  sub_23FB29BA4(v5);
  v59 = sub_23FB2D04C();
  v57 = *(_QWORD *)(v59 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  v56 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  v9 = MEMORY[0x24BDAC7A8](v8);
  sub_23FB2B008(v9, v10, v11, v12, v13, v14, v15, v16, v52);
  sub_23F6916B8(&qword_256EA8008);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA8550);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B53AC();
  sub_23F6B6088();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F693EB0();
  sub_23F6916B8(&qword_256EA8558);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  v21 = sub_23FB29C04();
  sub_23F7796F8(v21, v22, v23, v24, v25, v26, v27, v28, v52, v53);
  v30 = v29;
  v31 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
  v32 = sub_23FB2A2A8((uint64_t)v31);
  sub_23FB2A470(v32, v2);
  sub_23FB2ACC8();
  sub_23F77B124();
  v33 = sub_23FB2AA4C(v31[6]);
  sub_23F6B4F58(v33, v34, &qword_256EA8008);
  sub_23F77B2EC(v0, v35, v36, v37, v38, v39, v40, v41);
  if (v1)
  {
    v42 = sub_23F6B6E44();
    sub_23FB297B8(v42, type metadata accessor for TranscriptProtoResponseManifest);
    sub_23F77E3DC(v43, &qword_256EA8558);
  }
  else
  {
    v44 = *(_QWORD *)(v4 + v31[8]);
    v54 = *(_QWORD *)(v4 + v31[7]);
    v55 = v44;
    v45 = v31[9];
    LOBYTE(v44) = *(_BYTE *)(v4 + v31[10]);
    v46 = v57;
    v47 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 104);
    if ((v44 & 1) != 0)
      v48 = (unsigned int *)MEMORY[0x24BE53218];
    else
      v48 = (unsigned int *)MEMORY[0x24BE53220];
    v49 = *v48;
    HIDWORD(v53) = *(unsigned __int8 *)(v4 + v45);
    v52 = v30;
    v50 = (uint64_t)v56;
    v47(v56, v49, v59);
    sub_23F6B633C(v58, v50, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 32));
    sub_23F77DCD4();
    sub_23F6B6548();
    v51 = sub_23FB2D058();
    sub_23FB297B8(v51, type metadata accessor for TranscriptProtoResponseManifest);
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void ResponseManifest.ResponseDialogPresentationHint.init(transcript:)(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  int v3;
  uint64_t v4;
  unsigned int *v5;

  v3 = *a1;
  v4 = sub_23FB2D04C();
  v5 = (unsigned int *)MEMORY[0x24BE53218];
  if (!v3)
    v5 = (unsigned int *)MEMORY[0x24BE53220];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(a2, *v5, v4);
  sub_23FAD6A50();
}

void sub_23FB122E8()
{
  ResponseManifest.init(transcript:)();
}

uint64_t sub_23FB122FC()
{
  return sub_23FAEDD24();
}

void TranscriptProtoResponseManifest.init(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;

  sub_23F6B5220();
  v19 = sub_23FB29B20(v18);
  v83 = type metadata accessor for TranscriptProtoResponseManifest(v19);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B573C();
  sub_23F6916B8(&qword_256EA8548);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B5268();
  sub_23F6916B8(&qword_256EA8550);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA8008);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F6B52B0();
  sub_23F6916B8(&qword_256EA8558);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F693EB0();
  sub_23F6916B8(&qword_256EA8000);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F6B59E0();
  v26 = MEMORY[0x242671CE8]();
  if (!v26)
    v26 = MEMORY[0x24BEE4AF8];
  sub_23FAD1470(v26, v27, v28, v29, v30, v31, v32, v33, v62, v64);
  v35 = v34;
  sub_23FB2D0A0();
  sub_23FB2ACC8();
  v36 = v14;
  sub_23F77CEC0();
  sub_23FB2D0AC();
  sub_23F77D024();
  if (v13)
  {
    sub_23F717D54();
    v37 = sub_23FB2A370();
    v38 = sub_23F78F1B0(v37);
    sub_23F77E3DC(v38, &qword_256EA8000);
  }
  else
  {
    v80 = v35;
    v39 = (int *)v83;
    v78 = sub_23FB2D070();
    v41 = v40;
    v76 = sub_23FB2D07C();
    v43 = v42;
    v84 = sub_23FB2D088();
    sub_23FB2D094();
    sub_23F77D180(v16, v44, v45, v46, v47, v48, v49, v50, v63, v65, v67, v69, v71, v73, v75, v76, v78, v80, v82, v83);
    v51 = v17;
    v72 = (uint64_t)v17 + v39[5];
    v52 = type metadata accessor for TranscriptProtoResponseDialog(0);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v72, 1, 1, v52);
    v66 = (uint64_t)v17 + v39[6];
    v53 = type metadata accessor for TranscriptProtoResponseVisual(0);
    sub_23F6B5A8C(v66, v54, v55, v53);
    v70 = v41;
    v56 = (_QWORD *)((char *)v17 + v39[7]);
    *v56 = 0;
    v56[1] = 0;
    v74 = v43;
    v57 = v36;
    v58 = (_QWORD *)((char *)v17 + v39[8]);
    *v58 = 0;
    v58[1] = 0;
    v68 = v39[9];
    *((_BYTE *)v17 + v68) = 2;
    v59 = v39[10];
    *((_BYTE *)v51 + v59) = 2;
    sub_23FAC3CEC();
    *v51 = v81;
    sub_23F710E80(v15, v72, &qword_256EA8000);
    sub_23F710E80(v57, v66, &qword_256EA8008);
    swift_bridgeObjectRelease();
    *v56 = v79;
    v56[1] = v70;
    swift_bridgeObjectRelease();
    *v58 = v77;
    v58[1] = v74;
    *((_BYTE *)v51 + v68) = v84;
    *((_BYTE *)v51 + v59) = a13;
    sub_23FB29DDC((uint64_t)v51, v60, type metadata accessor for TranscriptProtoResponseManifest);
    v61 = sub_23FB2A370();
    sub_23F78F1B0(v61);
  }
  sub_23F877A30();
  sub_23F6B5100();
}

void sub_23FB12600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  TranscriptProtoResponseManifest.init(handwritten:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void TranscriptProtoResponseDialogPresentationHint.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL *v3;
  BOOL *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  int v8;
  BOOL v10;
  _BYTE *v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;

  sub_23FB2A3F8();
  v4 = v3;
  sub_23FB2D04C();
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F693EB0();
  sub_23F6D3ECC(v1, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  v6 = sub_23F77E680();
  v8 = v7(v6);
  if (v8 == *MEMORY[0x24BE53220] || v8 == *MEMORY[0x24BE53218])
  {
    v10 = v8 != *MEMORY[0x24BE53220];
    sub_23F7B0990(v0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    *v4 = v10;
  }
  else
  {
    sub_23F779AF8();
    sub_23F6B5AD4();
    *v11 = 0;
    sub_23F77D9E4();
    v12 = *(void (**)(uint64_t))(v2 + 8);
    v13 = sub_23F6B6AB8();
    v12(v13);
    v14 = sub_23F77E680();
    v12(v14);
  }
  sub_23FB2AB24();
  sub_23F6D3674();
}

void sub_23FB126EC()
{
  TranscriptProtoResponseDialogPresentationHint.init(handwritten:)();
}

void sub_23FB12700(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 v2;

  v2 = *a1;
  ResponseManifest.ResponseDialogPresentationHint.init(transcript:)(&v2, a2);
}

void ResponseParameter.init(transcript:)()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  sub_23FB2A850();
  sub_23F6B5F1C();
  v0 = sub_23F6B7194();
  sub_23F6D1E0C(v0, v1);
  sub_23F77E1FC();
  sub_23F77E600();
  sub_23FB29D50();
  v2 = sub_23FB2D1A8();
  sub_23FB297B8(v2, type metadata accessor for TranscriptProtoResponseParameter);
}

void sub_23FB127C4()
{
  ResponseParameter.init(transcript:)();
  sub_23F878AAC();
}

uint64_t sub_23FB127E4()
{
  return sub_23FAEDE58();
}

uint64_t TranscriptProtoResponseParameter.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v16;
  uint64_t v17;

  sub_23FB2A57C();
  v3 = sub_23FB2D1B4();
  v16 = v4;
  v17 = v3;
  sub_23FB2D1CC();
  sub_23FB29FC0();
  v5 = sub_23FB2D1C0();
  v7 = v6;
  v8 = sub_23FB2D1E4();
  v9 = sub_23FB2D1D8();
  v11 = v10;
  v12 = sub_23FB2D19C();
  type metadata accessor for TranscriptProtoResponseParameter(0);
  sub_23F6F0878();
  *(_QWORD *)v0 = v17;
  *(_QWORD *)(v0 + 8) = v16;
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = v2;
  *(_QWORD *)(v0 + 32) = v5;
  *(_QWORD *)(v0 + 40) = v7;
  *(_BYTE *)(v0 + 48) = v8;
  *(_QWORD *)(v0 + 56) = v9;
  *(_QWORD *)(v0 + 64) = v11;
  *(_BYTE *)(v0 + 72) = v12;
  sub_23FB2D1F0();
  v13 = sub_23FB29A14();
  return v14(v13);
}

void sub_23FB128B0()
{
  TranscriptProtoResponseParameter.init(handwritten:)();
  sub_23F878AAC();
}

void ResponseDialog.init(transcript:)()
{
  uint64_t v0;

  sub_23F6B50E8();
  sub_23FB2A850();
  sub_23F77E1FC();
  sub_23F6B5F1C();
  sub_23F77DCD4();
  sub_23F77E600();
  sub_23FB29D50();
  v0 = sub_23FB2CD28();
  sub_23FB297B8(v0, type metadata accessor for TranscriptProtoResponseDialog);
  sub_23F693DDC();
}

void sub_23FB1292C()
{
  ResponseDialog.init(transcript:)();
  sub_23F878AAC();
}

uint64_t sub_23FB1294C()
{
  return sub_23FAEE004();
}

uint64_t TranscriptProtoResponseDialog.init(handwritten:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);

  sub_23F6B50E8();
  sub_23FB2A57C();
  sub_23FB2CD34();
  sub_23FB2A83C();
  sub_23FB2CD40();
  sub_23FB29FC0();
  v5 = sub_23FB2CD10();
  v7 = v6;
  v8 = sub_23FB2CD1C();
  v10 = v9;
  type metadata accessor for TranscriptProtoResponseDialog(0);
  sub_23F6F0878();
  *v0 = v1;
  v0[1] = v2;
  v0[2] = v3;
  v0[3] = v4;
  v0[4] = v5;
  v0[5] = v7;
  v0[6] = v8;
  v0[7] = v10;
  sub_23FB2CD4C();
  v11 = sub_23FB29A14();
  return v12(v11);
}

void sub_23FB129E8()
{
  TranscriptProtoResponseDialog.init(handwritten:)();
  sub_23F878AAC();
}

void ResponseVisual.init(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t, uint64_t);
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;

  sub_23F6B5220();
  a19 = v25;
  a20 = v26;
  v28 = (unint64_t)v27;
  v102 = v29;
  v30 = sub_23FB2CF74();
  v111 = *(_QWORD *)(v30 - 8);
  v112 = v30;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v31);
  v110 = (char *)&v100 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoUIConfirmationLabel(v33);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v34);
  v109 = (char *)&v100 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v36);
  v108 = (uint64_t)&v100 - v37;
  sub_23F6916B8(&qword_256EA2640);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v38);
  v113 = (uint64_t)&v100 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_23F6D398C();
  v116 = type metadata accessor for TranscriptProtoLabel(v40);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v41);
  v107 = (uint64_t)&v100 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = *(_QWORD *)(sub_23FB2B058() - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v43);
  v115 = (uint64_t)&v100 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v45);
  sub_23FAC3D30();
  v46 = sub_23FB2CF80();
  v121 = *(_QWORD *)(v46 - 8);
  v122 = v46;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v47);
  v106 = (char *)&v100 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v49);
  v105 = (char *)&v100 - v50;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v51);
  v120 = (char *)&v100 - v52;
  v53 = sub_23F6D398C();
  v117 = *(_QWORD *)(type metadata accessor for TranscriptProtoUIType(v53) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v54);
  v119 = (uint64_t)&v100 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v56);
  v118 = sub_23FB2A648();
  sub_23F70D9A8();
  MEMORY[0x24BDAC7A8](v57);
  sub_23F6B573C();
  v58 = *(_QWORD *)v28;
  v59 = *(_QWORD *)(*(_QWORD *)v28 + 16);
  v103 = v28;
  v114 = v22;
  if (v59)
  {
    a10 = (_QWORD *)MEMORY[0x24BEE4AF8];
    sub_23F6B5F1C();
    sub_23FB2A20C();
    sub_23F711C8C();
    v60 = v20;
    sub_23FB2AD10();
    v62 = v58 + v61;
    v117 = *(_QWORD *)(v63 + 72);
    while (1)
    {
      v64 = sub_23F72E3F8();
      sub_23F77DC78(v64, v65);
      sub_23F77DC78(v21, v119);
      sub_23FB2AE70();
      ResponseVisual.UIType.init(transcript:)();
      sub_23FB29958(v21);
      v66 = a10;
      if (v60)
        break;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FB29A98();
        sub_23F711C8C();
        v60 = 0;
        v66 = a10;
      }
      v28 = v66[2];
      if (v28 >= v66[3] >> 1)
      {
        sub_23F711C8C();
        v66 = a10;
      }
      v66[2] = v28 + 1;
      sub_23F78F3B0();
      sub_23FB2A888((uint64_t)v66 + v67 + *(_QWORD *)(v23 + 72) * v28, v24, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v23 + 32));
      a10 = v66;
      v62 += v117;
      if (!--v59)
      {
        v101 = v60;
        sub_23FB2AE08();
        sub_23FB2AE28();
        v22 = v114;
        goto LABEL_12;
      }
    }
  }
  else
  {
    v101 = v20;
LABEL_12:
    v68 = *(_QWORD *)(v28 + 8);
    v69 = *(_QWORD *)(v68 + 16);
    if (!v69)
    {
LABEL_23:
      sub_23FB2AEF0();
      sub_23FB29D10();
      v99 = sub_23FB2CE6C();
      sub_23FB297B8(v99, type metadata accessor for TranscriptProtoResponseVisual);
      goto LABEL_24;
    }
    a10 = (_QWORD *)MEMORY[0x24BEE4AF8];
    sub_23F6B5F1C();
    v70 = &a10;
    sub_23FB2A20C();
    sub_23F711C50();
    sub_23FB2AD10();
    v72 = v68 + v71;
    v117 = *(_QWORD *)(v73 + 72);
    LODWORD(v104) = *MEMORY[0x24BE53050];
    v74 = v115;
    while (1)
    {
      v75 = sub_23F78F534();
      sub_23F77DA34(v75, v76);
      v77 = sub_23F877F9C();
      sub_23F77DA34(v77, v78);
      v79 = v113;
      sub_23F6B4F58(v74, v113, &qword_256EA2640);
      v80 = sub_23F6B5164(v79, 1, v116);
      if (v81)
        break;
      v118 = v72;
      v119 = v69;
      v82 = v79;
      v83 = v107;
      sub_23F6F594C(v82, v107, type metadata accessor for TranscriptProtoLabel);
      v84 = v108;
      sub_23F77E12C(v83, v108);
      v85 = (uint64_t)v109;
      sub_23FB2A5BC(v84);
      sub_23F6B54F8();
      sub_23F6B90D8();
      v86 = v110;
      v87 = sub_23F70DC34();
      MEMORY[0x242671BD4](v87);
      sub_23FB2AB1C(v85);
      v88 = (uint64_t)v106;
      (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v106, v86, v112);
      v89 = v115;
      sub_23FB29A4C(v115);
      v90 = v84;
      v22 = v114;
      sub_23FB2AB1C(v90);
      v92 = v121;
      v91 = v122;
      sub_23F759774(v88, v104, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v121 + 104));
      v93 = *(void (**)(char *, uint64_t, uint64_t))(v92 + 32);
      v70 = v105;
      v93(v105, v88, v91);
      v93(v120, (uint64_t)v70, v91);
      sub_23FB29A4C(v22);
      v74 = v89;
      if ((sub_23F77D93C() & 1) == 0)
      {
        sub_23F7D2A58();
        sub_23F711C50();
        v70 = a10;
      }
      v95 = v70[2];
      v94 = v70[3];
      if (v95 >= v94 >> 1)
      {
        sub_23F77D9EC(v94);
        sub_23F711C50();
        v70 = a10;
      }
      v70[2] = v95 + 1;
      sub_23F77DAB8();
      ((void (*)(unint64_t))v93)(v96 + v97 * v95);
      a10 = v70;
      v72 = v118 + v117;
      v69 = v119 - 1;
      if (v119 == 1)
      {
        sub_23FB2AE08();
        sub_23FB2AE28();
        goto LABEL_23;
      }
    }
    sub_23F77E660(v80, &qword_256EA2640);
    v123 = v116;
    sub_23F6916B8(&qword_256EA8540);
    sub_23F77D9AC();
    sub_23F77DA84();
    sub_23F6B5AD4();
    *v98 = v79;
    v98[1] = (uint64_t)v70;
    sub_23F77D9E4();
    sub_23F70D63C(v74);
    sub_23F70D63C(v22);
    sub_23F756640();
  }
  swift_release();
  sub_23FB29780(type metadata accessor for TranscriptProtoResponseVisual, (uint64_t)&a18);
  sub_23FB2AE08();
LABEL_24:
  sub_23F8778A8();
  sub_23F6B5100();
}

void ResponseVisual.UIType.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37[16];

  sub_23F6B5220();
  v6 = v5;
  sub_23FB29ED4(v7);
  sub_23FB2EDF8();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5420(v9, v37[0]);
  sub_23F6916B8(&qword_256EA8528);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  v37[10] = (uint64_t)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoControlPayload(v12);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  v37[9] = (uint64_t)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v15);
  v37[8] = (uint64_t)v37 - v16;
  v17 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoPluginSnippetPayload(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  v37[14] = (uint64_t)v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v20);
  v37[13] = (uint64_t)v37 - v21;
  v22 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoLiveActivityPayload(v22);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v23);
  v37[7] = (uint64_t)v37 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v25);
  v37[15] = (uint64_t)v37 - v26;
  v27 = sub_23FB2CF38();
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F6B5CD4();
  MEMORY[0x24BDAC7A8](v29);
  v30 = sub_23FB29944();
  type metadata accessor for TranscriptProtoArchiveViewPayload(v30);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v32);
  v33 = sub_23FB2997C();
  type metadata accessor for TranscriptProtoUitype(v33);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v34);
  sub_23FB2A718();
  sub_23F77B7EC();
  if (!v1)
  {
    v37[1] = v2;
    v37[2] = v0;
    v37[5] = v6;
    v37[6] = v4;
    v37[3] = v3;
    v37[4] = v27;
    v36 = (char *)&loc_23FB1322C + 4 * byte_23FB92BA2[sub_23FB2A688()];
    __asm { BR              X10 }
  }
  sub_23FB297B0(v35, type metadata accessor for TranscriptProtoUIType);
  sub_23F8778A8();
  sub_23F6B5100();
}

void sub_23FB133D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(v1 - 144);
  sub_23F77DC98(v0, v2);
  v3 = *(_QWORD *)(v1 - 136);
  sub_23F70D654(v2, v3);
  v4 = sub_23F6B5994();
  sub_23F6D1E20(v4, v5);
  sub_23F6B5994();
  sub_23FB2EDEC();
  v6 = *(_QWORD *)(v1 - 72);
  sub_23F77B700();
  if (v6)
  {
    sub_23F70D63C(v3);
    sub_23F6D378C(v8, &qword_256EA8528);
    sub_23FB2A5C8(v9, type metadata accessor for TranscriptProtoUIType);
    sub_23F70D63C(v2);
    JUMPOUT(0x23FB133C4);
  }
  sub_23F6D378C(v7, &qword_256EA8528);
  sub_23FB2CE90();
  sub_23F70D63C(v3);
  sub_23FB2A5C8(v10, type metadata accessor for TranscriptProtoUIType);
  sub_23F70D63C(v2);
  JUMPOUT(0x23FB133A0);
}

void ResponseVisual.UILabel.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);

  sub_23F6B5220();
  v5 = sub_23F78F298();
  type metadata accessor for TranscriptProtoUIConfirmationLabel(v5);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B5C9C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_23F78F2D0();
  type metadata accessor for TranscriptProtoLabel(v8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F878580();
  sub_23F77B6D4();
  if (v1)
  {
    sub_23FB297B0(v10, type metadata accessor for TranscriptProtoUILabel);
  }
  else
  {
    sub_23F77DC08(v4, v2);
    v11 = sub_23F6B7194();
    sub_23F77DB78(v11, v12);
    v13 = *v3;
    v14 = v3[1];
    v15 = v3[2];
    v16 = v3[3];
    sub_23F6B90D8();
    sub_23F77E1FC();
    MEMORY[0x242671BD4](v13, v14, v15, v16);
    sub_23FB29F00((uint64_t)v3);
    sub_23FB297B0(v17, type metadata accessor for TranscriptProtoUILabel);
    sub_23FB29F00(v2);
    v18 = *MEMORY[0x24BE53050];
    sub_23FB2AB90();
    sub_23FB29D84();
    v19(v0, v18);
  }
  sub_23F876FC4();
  sub_23F6B5100();
}

#error "23FB135C4: call analysis failed (funcsize=5)"

uint64_t sub_23FB135D0()
{
  return sub_23FAEE194();
}

void TranscriptProtoResponseVisual.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t);
  char *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(void);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t);
  int v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t, uint64_t, uint64_t);
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  void (*v71)(uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  void (*v77)(uint64_t);
  void (*v78)(char *, uint64_t);
  char *v79;
  void (*v80)(uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE *v89;
  uint64_t (*v90)(uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97[2];
  char *v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(void);
  char *v116;
  void (*v117)(uint64_t);
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;

  sub_23F6B5220();
  sub_23FB2A9F4();
  sub_23F6916B8(&qword_256EA2640);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  v108 = (uint64_t *)((char *)v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23F6D398C();
  v8 = sub_23FB2CF74();
  v106 = *(_QWORD *)(v8 - 8);
  v107 = v8;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v105 = (char *)v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v11);
  v104 = (char *)v97 - v12;
  v113 = sub_23FB2AB90();
  v122 = *(_QWORD *)(v113 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v14);
  v116 = (char *)v97 - v15;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v16);
  v112 = (char *)v97 - v17;
  v109 = sub_23FB2B058();
  v103 = *(_QWORD *)(v109 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v18);
  v110 = (uint64_t)v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  v21 = MEMORY[0x24BDAC7A8](v20);
  sub_23F6D3910(v21, v22, v23, v24, v25, v26, v27, v28, v97[0]);
  sub_23FB2CF38();
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v29);
  v119 = (char *)v97 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v31);
  v32 = sub_23FB29944();
  v118 = *(_QWORD *)(type metadata accessor for TranscriptProtoUIType(v32) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F6B5C10(v34, v97[0]);
  v101 = v0;
  v35 = MEMORY[0x242671AFC]();
  v36 = *(_QWORD *)(v35 + 16);
  v99 = v2;
  v111 = v3;
  if (v36)
  {
    v123 = (char *)MEMORY[0x24BEE4AF8];
    sub_23FB2A918();
    sub_23F7117E4();
    sub_23F78F3B0();
    v38 = v35 + v37;
    v114 = *((_QWORD *)v5 + 9);
    v117 = (void (*)(uint64_t))*((_QWORD *)v5 + 2);
    v100 = v35;
    v115 = v5;
    while (1)
    {
      v39 = sub_23F6B6854();
      v40 = v117;
      v117(v39);
      v41 = v119;
      v42 = sub_23F6B63E8();
      v40(v42);
      TranscriptProtoUIType.init(handwritten:)();
      if (v1)
        break;
      sub_23F6B51EC(v4, *((uint64_t (**)(uint64_t, uint64_t))v5 + 1));
      if ((sub_23F77D93C() & 1) == 0)
      {
        sub_23F7D2A58();
        sub_23F7117E4();
        v41 = v123;
      }
      v44 = *((_QWORD *)v41 + 2);
      v43 = *((_QWORD *)v41 + 3);
      if (v44 >= v43 >> 1)
      {
        sub_23F77DA04(v43);
        sub_23F7117E4();
        v41 = v123;
      }
      *((_QWORD *)v41 + 2) = v44 + 1;
      sub_23FAD6E18();
      sub_23F6F594C(v120, v45, type metadata accessor for TranscriptProtoUIType);
      v5 = v115;
      v38 += v114;
      if (!--v36)
      {
        v98 = v41;
        sub_23F77DE3C();
        v46 = v113;
        v3 = v111;
        goto LABEL_12;
      }
    }
    sub_23F6B51EC(v4, *((uint64_t (**)(uint64_t, uint64_t))v5 + 1));
    goto LABEL_23;
  }
  sub_23F6B6A48();
  v98 = (char *)MEMORY[0x24BEE4AF8];
  v46 = v113;
LABEL_12:
  v47 = v112;
  v48 = sub_23FB2CF44();
  v49 = *(char **)(v48 + 16);
  if (v49)
  {
    v97[1] = v1;
    v124 = (char *)MEMORY[0x24BEE4AF8];
    sub_23FB2A21C();
    sub_23F7117A8();
    v50 = v122;
    sub_23F78F3B0();
    v100 = v48;
    v52 = v48 + v51;
    v102 = *(_QWORD *)(v50 + 72);
    v115 = *(void (**)(void))(v50 + 16);
    LODWORD(v114) = *MEMORY[0x24BE53050];
    v53 = (uint64_t)v116;
    while (1)
    {
      sub_23FB2AA90();
      v54 = v115;
      v115();
      ((void (*)(uint64_t, char *, uint64_t))v54)(v53, v47, v46);
      v55 = type metadata accessor for TranscriptProtoLabel(0);
      v56 = v110;
      v120 = v55;
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v110, 1, 1, v55);
      sub_23FAD7240();
      ((void (*)(uint64_t, uint64_t, uint64_t))v54)(v3, v53, v46);
      v57 = sub_23F6B6F08();
      v59 = v58(v57);
      if (v59 != (_DWORD)v114)
        break;
      v118 = v52;
      v119 = v49;
      sub_23F6B6420(v3, *(uint64_t (**)(uint64_t, uint64_t))(v50 + 96));
      v60 = v106;
      v61 = v107;
      v62 = v104;
      v63 = sub_23F8781AC();
      sub_23F75E68C(v63, v64, v65);
      v66 = v105;
      v67 = sub_23F6B6190();
      sub_23F75E68C(v67, v68, v69);
      v70 = sub_23FB2CF5C();
      v117 = v71;
      v72 = sub_23FB2CF20();
      v74 = v73;
      type metadata accessor for TranscriptProtoUIConfirmationLabel(0);
      v75 = v56;
      v76 = v108;
      sub_23FAD7240();
      v77 = v117;
      *v76 = v70;
      v76[1] = (uint64_t)v77;
      v76[2] = v72;
      v76[3] = v74;
      v78 = *(void (**)(char *, uint64_t))(v60 + 8);
      v47 = v112;
      v46 = v113;
      v79 = v66;
      v53 = (uint64_t)v116;
      v78(v79, v61);
      v80 = *(void (**)(uint64_t))(v122 + 8);
      v81 = sub_23F6B63E8();
      v80(v81);
      v82 = sub_23F77E668();
      ((void (*)(uint64_t))v78)(v82);
      sub_23FB2AA58((uint64_t)v76);
      sub_23F710E80((uint64_t)v76, v75, &qword_256EA2640);
      sub_23F77E12C(v75, v121);
      v83 = sub_23F77E46C();
      v80(v83);
      if ((sub_23FB2A4EC() & 1) == 0)
      {
        sub_23FAD71B0();
        sub_23F7117A8();
        v53 = (uint64_t)v116;
        v62 = v124;
      }
      v84 = v119;
      v86 = *((_QWORD *)v62 + 2);
      v85 = *((_QWORD *)v62 + 3);
      v50 = v122;
      if (v86 >= v85 >> 1)
      {
        sub_23F77DA04(v85);
        sub_23F7117A8();
        v53 = (uint64_t)v116;
        v50 = v122;
        v62 = v124;
      }
      *((_QWORD *)v62 + 2) = v86 + 1;
      sub_23FB2A8F0();
      sub_23F77E12C(v121, v87 + v88 * v86);
      v52 = v118 + v102;
      v49 = v84 - 1;
      v3 = v111;
      if (!v49)
      {
        sub_23F77DE3C();
        goto LABEL_24;
      }
    }
    sub_23F779AF8();
    sub_23F6B5AD4();
    *v89 = 0;
    sub_23F77D9E4();
    v90 = *(uint64_t (**)(uint64_t))(v50 + 8);
    sub_23F77E358(v53);
    v91 = sub_23F6B6F08();
    v92 = v90(v91);
    sub_23FB297D8(v92, type metadata accessor for TranscriptProtoUILabel);
    v93 = sub_23F77E46C();
    v90(v93);
    sub_23F77DE3C();
LABEL_23:
    swift_release();
    v94 = sub_23FB2CF8C();
    sub_23FB2A32C(v94);
    sub_23F693E04();
    goto LABEL_25;
  }
  sub_23F693E04();
  v62 = (char *)MEMORY[0x24BEE4AF8];
LABEL_24:
  type metadata accessor for TranscriptProtoResponseVisual(0);
  v95 = v99;
  sub_23FAC3074();
  *v95 = v98;
  v95[1] = v62;
  v96 = sub_23FB2CF8C();
  sub_23FB2A32C(v96);
LABEL_25:
  sub_23F877A30();
  sub_23F6B5100();
}

void TranscriptProtoUIType.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(uint64_t, uint64_t, uint64_t);
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(uint64_t, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(uint64_t);
  uint64_t v89;
  _BYTE *v90;
  void (*v91)(uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;

  sub_23F6B5220();
  v7 = v6;
  v9 = v8;
  v10 = sub_23FB2CE9C();
  v101 = *(_QWORD *)(v10 - 8);
  v102 = v10;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  v99 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v13);
  v100 = (char *)&v93 - v14;
  sub_23F6D398C();
  v15 = sub_23FB2CF2C();
  v96 = *(_QWORD *)(v15 - 8);
  v97 = v15;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v16);
  v94 = (uint64_t)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v18);
  v95 = (char *)&v93 - v19;
  sub_23F6D398C();
  v20 = sub_23FB2CEFC();
  v105 = *(_QWORD *)(v20 - 8);
  v106 = v20;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v21);
  v103 = (char *)&v93 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  v24 = MEMORY[0x24BDAC7A8](v23);
  sub_23FB29E4C(v24, v25, v26, v27, v28, v29, v30, v31, v93);
  sub_23F6916B8(&qword_256EA2650);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v32);
  v98 = (char *)&v93 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F923B4C();
  v107 = *(_QWORD *)(sub_23FB2CED8() - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F77DC18();
  MEMORY[0x24BDAC7A8](v36);
  v37 = sub_23FB2A648();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v38);
  v39 = sub_23F78F27C();
  v108 = type metadata accessor for TranscriptProtoUitype(v39);
  v40 = sub_23FB298EC(v9, 1, 1, v108);
  type metadata accessor for TranscriptProtoUIType(v40);
  v109 = v9;
  sub_23FAC3DD4();
  v110 = v7;
  sub_23F759774(v3, v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  v41 = sub_23F7D29DC();
  v43 = v42(v41);
  if (v43 == *MEMORY[0x24BE52F78])
  {
    sub_23F6B56E0(v3, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 96));
    v44 = v2;
    v93 = v2;
    v45 = v107;
    sub_23F77DB9C(v44, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v107 + 32));
    sub_23F77DB9C(v0, v44, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v45 + 16));
    v46 = sub_23FB2CEC0();
    v105 = v47;
    v106 = v46;
    v48 = sub_23FB2CEB4();
    v104 = v49;
    v50 = sub_23FB2CEA8();
    v52 = v51;
    type metadata accessor for TranscriptProtoArchiveViewPayload(0);
    sub_23F77E628();
    v53 = v105;
    *v4 = v106;
    v4[1] = v53;
    v54 = v104;
    v4[2] = v48;
    v4[3] = v54;
    v4[4] = v50;
    v4[5] = v52;
    sub_23FB2AB14(v0);
    sub_23F6B56E0(v110, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    sub_23FB2AB14(v93);
    sub_23FB2A93C();
  }
  else
  {
    if (v43 != *MEMORY[0x24BE52F80])
    {
      if (v43 == *MEMORY[0x24BE53028])
      {
        sub_23F6B56E0(v3, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 96));
        v66 = (uint64_t)v100;
        v65 = v101;
        v67 = sub_23F6B6218();
        sub_23F6B633C(v67, v68, v69);
        v70 = sub_23F6B68A8();
        sub_23F6B633C(v70, v71, v72);
        v73 = (uint64_t *)v98;
        TranscriptProtoControlPayload.init(handwritten:)();
        if (!v1)
        {
          sub_23F6B56E0(v7, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
          sub_23F6B530C(v66, *(uint64_t (**)(uint64_t, uint64_t))(v65 + 8));
          sub_23FB2AC58();
          v4 = v73;
          goto LABEL_6;
        }
        sub_23F6B56E0(v7, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
        v74 = sub_23F6B530C(v66, *(uint64_t (**)(uint64_t, uint64_t))(v65 + 8));
      }
      else
      {
        if (v43 == *MEMORY[0x24BE52F88])
        {
          v75 = v5;
          sub_23F6B56E0(v3, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 96));
          v76 = (uint64_t)v95;
          v77 = v96;
          v78 = sub_23F78F534();
          sub_23F77DD54(v78, v79, v80);
          v81 = v94;
          sub_23F77DD54(v94, v76, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v77 + 16));
          v82 = sub_23FB2CF08();
          v106 = v83;
          v107 = v82;
          v84 = sub_23FB2CF20();
          v86 = v85;
          type metadata accessor for TranscriptProtoPluginSnippetPayload(0);
          sub_23F77E628();
          v87 = v106;
          *v4 = v107;
          v4[1] = v87;
          v4[2] = v84;
          v4[3] = v86;
          v88 = *(void (**)(uint64_t))(v77 + 8);
          sub_23FB29C3C(v81);
          sub_23F6B5900(v110, *(uint64_t (**)(uint64_t, uint64_t))(v75 + 8));
          v89 = sub_23F78F534();
          v88(v89);
          sub_23FB2A93C();
          goto LABEL_5;
        }
        sub_23F779AF8();
        sub_23F6B5AD4();
        *v90 = 0;
        sub_23F77D9E4();
        v91 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
        v91(v7, v37);
        v92 = sub_23F7D29DC();
        v74 = ((uint64_t (*)(uint64_t))v91)(v92);
      }
      sub_23FB29B7C(v74, type metadata accessor for TranscriptProtoUIType);
      goto LABEL_7;
    }
    sub_23F6B56E0(v3, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 96));
    v55 = v104;
    v56 = sub_23F78F560();
    sub_23F6B633C(v56, v57, v58);
    v59 = (uint64_t)v103;
    v60 = sub_23F7E7898();
    sub_23F6B633C(v60, v61, v62);
    sub_23FB2CEF0();
    v63 = sub_23FB29F7C();
    type metadata accessor for TranscriptProtoLiveActivityPayload(v63);
    sub_23F77E628();
    *v4 = v37;
    v4[1] = v59;
    sub_23F77E234(v59);
    sub_23F6B51EC(v7, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    sub_23F77E234(v55);
    sub_23FB2A93C();
  }
LABEL_5:
  swift_storeEnumTagMultiPayload();
LABEL_6:
  sub_23F77E598((uint64_t)v4, 0);
  sub_23FB29C34((uint64_t)v4, v64, &qword_256EA2650);
LABEL_7:
  sub_23F8778A8();
  sub_23F6B5100();
}

void TranscriptProtoUILabel.init(handwritten:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_23F6B5220();
  v4 = v3;
  v6 = v5;
  sub_23F6916B8(&qword_256EA2640);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F78F27C();
  v8 = *(_QWORD *)(sub_23FB2CF74() - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F77DC18();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B6580();
  v12 = v11;
  v13 = sub_23FB2AB90();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v14);
  v15 = sub_23F7A00C8();
  v38 = type metadata accessor for TranscriptProtoLabel(v15);
  v16 = sub_23FB298EC(v6, 1, 1, v38);
  type metadata accessor for TranscriptProtoUILabel(v16);
  sub_23FAD7240();
  v39 = v4;
  sub_23F6B5EF0(v0, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  v17 = sub_23F8781AC();
  if (v18(v17) == *MEMORY[0x24BE53050])
  {
    sub_23F70D728(v0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 96));
    v19 = sub_23F878320();
    sub_23F77DB9C(v19, v20, v21);
    v22 = sub_23FB2A4F8();
    sub_23F77DB9C(v22, v12, v23);
    v24 = sub_23FB2CF5C();
    v36 = v25;
    v37 = v24;
    v26 = sub_23FB2CF20();
    v28 = v27;
    type metadata accessor for TranscriptProtoUIConfirmationLabel(0);
    sub_23F6F0CB4();
    *v1 = v37;
    v1[1] = v36;
    v1[2] = v26;
    v1[3] = v28;
    v29 = *(void (**)(uint64_t))(v8 + 8);
    v30 = sub_23F77E19C();
    v29(v30);
    sub_23F70D728(v39, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    v31 = sub_23F78F4B0();
    v29(v31);
    sub_23FB2AA58((uint64_t)v1);
    sub_23F710E80((uint64_t)v1, v6, &qword_256EA2640);
  }
  else
  {
    sub_23F779AF8();
    sub_23F6B5AD4();
    *v32 = 0;
    sub_23F77D9E4();
    v33 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
    v33(v4, v13);
    v34 = sub_23F8781AC();
    v35 = ((uint64_t (*)(uint64_t))v33)(v34);
    sub_23FB29B7C(v35, type metadata accessor for TranscriptProtoUILabel);
  }
  sub_23F876B60();
  sub_23F6B5100();
}

void sub_23FB142F8()
{
  TranscriptProtoResponseVisual.init(handwritten:)();
}

void ResponseVisual.UIType.ArchivedViewPayload.init(transcript:)()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  sub_23F6D3A90();
  sub_23FB2A850();
  sub_23F6D1E20(v0, v1);
  sub_23F77E600();
  sub_23F77DCD4();
  sub_23FB29D50();
  v2 = sub_23FB2CECC();
  sub_23FB297B8(v2, type metadata accessor for TranscriptProtoArchiveViewPayload);
  sub_23F6B69E0();
}

void ResponseVisual.UIType.LiveActivityPayload.init(transcript:)()
{
  sub_23FB14EAC();
}

void ResponseVisual.UIType.PluginSnippetPayload.init(transcript:)()
{
  sub_23FB14F0C();
}

void ResponseVisual.UIType.ControlPayload.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F6D3EA4();
  sub_23FB29C54();
  sub_23FB2EDF8();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F693EB0();
  sub_23F6916B8(&qword_256EA8528);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F6B59F8();
  v3 = sub_23F6B6224();
  sub_23F6D1E20(v3, v4);
  sub_23F6B6224();
  sub_23FB2EDEC();
  sub_23F77B700();
  if (v0)
  {
    sub_23FB297B8(v5, type metadata accessor for TranscriptProtoControlPayload);
    sub_23F77DC10(v6, &qword_256EA8528);
  }
  else
  {
    sub_23F77DC10(v5, &qword_256EA8528);
    sub_23FB2A250();
    v7 = sub_23FB2CE90();
    sub_23FB297B8(v7, type metadata accessor for TranscriptProtoControlPayload);
  }
  sub_23F6D3750();
}

void sub_23FB14458()
{
  ResponseVisual.UIType.init(transcript:)();
}

uint64_t sub_23FB1446C()
{
  return sub_23FAEE2C8();
}

void ResponseVisual.UILabel.UIConfirmationPayload.init(transcript:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  sub_23F6B5F1C();
  sub_23F77DCD4();
  v5 = MEMORY[0x242671BD4](v1, v2, v3, v4);
  sub_23FB297B8(v5, type metadata accessor for TranscriptProtoUIConfirmationLabel);
  sub_23F6B5F7C();
}

void sub_23FB144D8()
{
  ResponseVisual.UILabel.init(transcript:)();
}

uint64_t sub_23FB144EC()
{
  return sub_23FAEE3FC();
}

uint64_t TranscriptProtoUIConfirmationLabel.init(handwritten:)()
{
  return sub_23FB15930();
}

void sub_23FB14524()
{
  TranscriptProtoUILabel.init(handwritten:)();
}

uint64_t sub_23FB14538()
{
  return TranscriptProtoUIConfirmationLabel.init(handwritten:)();
}

void sub_23FB1455C(uint64_t *a1)
{
  ResponseVisual.UILabel.UIConfirmationPayload.init(transcript:)(a1);
  sub_23F878AAC();
}

uint64_t sub_23FB1457C()
{
  return sub_23FAEE530();
}

uint64_t TranscriptProtoArchiveViewPayload.init(handwritten:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  sub_23F6D3A90();
  sub_23FB2A57C();
  sub_23FB2CEC0();
  sub_23FB2A83C();
  sub_23FB2CEB4();
  sub_23FB29FC0();
  v5 = sub_23FB2CEA8();
  v7 = v6;
  type metadata accessor for TranscriptProtoArchiveViewPayload(0);
  sub_23F6F0878();
  *v0 = v1;
  v0[1] = v2;
  v0[2] = v3;
  v0[3] = v4;
  v0[4] = v5;
  v0[5] = v7;
  sub_23FB2CED8();
  v8 = sub_23FB29A14();
  return sub_23FB29EC0(v8, v9, v10);
}

uint64_t TranscriptProtoLiveActivityPayload.init(handwritten:)(uint64_t a1)
{
  return sub_23FB15864(a1, (uint64_t)MEMORY[0x24BE52FE8], (void (*)(_QWORD))type metadata accessor for TranscriptProtoLiveActivityPayload, (void (*)(_QWORD))MEMORY[0x24BE52FF0]);
}

uint64_t TranscriptProtoPluginSnippetPayload.init(handwritten:)()
{
  return sub_23FB15930();
}

void TranscriptProtoControlPayload.init(handwritten:)()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;

  sub_23F6D3DC4();
  sub_23FB29E14();
  sub_23FB2EDF8();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v4);
  sub_23FB2A7C0();
  sub_23FB2CE84();
  sub_23FB2EDE0();
  sub_23FB2AE9C();
  sub_23F70D728(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  if (v1 >> 60 == 15)
  {
    sub_23F6916B8(&qword_256EBEF38);
    v5 = sub_23FB297E0();
    sub_23FB29C94();
    sub_23F6B5AD4();
    *v6 = v5;
    v6[1] = (uint64_t)v0;
    sub_23F77D9E4();
  }
  else
  {
    type metadata accessor for TranscriptProtoControlPayload(0);
    sub_23FAC3044();
    *v0 = v2;
    v0[1] = v1;
  }
  v7 = sub_23FB2CE9C();
  sub_23F6B6454(v7);
  sub_23F6D3710();
}

void sub_23FB14714()
{
  TranscriptProtoUIType.init(handwritten:)();
}

void sub_23FB14728()
{
  ResponseVisual.UIType.ArchivedViewPayload.init(transcript:)();
  sub_23F878AAC();
}

uint64_t sub_23FB14748()
{
  return sub_23FAEE690();
}

uint64_t sub_23FB1475C()
{
  return TranscriptProtoArchiveViewPayload.init(handwritten:)();
}

void sub_23FB14780()
{
  ResponseVisual.UIType.LiveActivityPayload.init(transcript:)();
  sub_23F878AAC();
}

uint64_t sub_23FB147A0()
{
  return sub_23FAEE80C();
}

uint64_t sub_23FB147B4(uint64_t a1)
{
  return TranscriptProtoLiveActivityPayload.init(handwritten:)(a1);
}

void sub_23FB147D8()
{
  ResponseVisual.UIType.PluginSnippetPayload.init(transcript:)();
  sub_23F878AAC();
}

uint64_t sub_23FB147F8()
{
  return sub_23FAEE95C();
}

uint64_t sub_23FB1480C()
{
  return TranscriptProtoPluginSnippetPayload.init(handwritten:)();
}

void sub_23FB14830()
{
  ResponseVisual.UIType.ControlPayload.init(transcript:)();
}

uint64_t sub_23FB14844()
{
  return sub_23FAEEABC();
}

void sub_23FB14858()
{
  TranscriptProtoControlPayload.init(handwritten:)();
}

void sub_23FB1486C()
{
  TranscriptProtoResponseType.init(handwritten:)();
}

void TranscriptProtoDialogType.init(handwritten:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;

  sub_23F6B5220();
  sub_23FB2A3F8();
  v5 = v4;
  sub_23F6916B8(&qword_256EB2060);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F78F27C();
  sub_23FB2CE3C();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_23F78F260();
  v9 = type metadata accessor for TranscriptProtoDialogFormat(v8);
  v10 = sub_23FB298EC(v5, 1, 1, v9);
  type metadata accessor for TranscriptProtoDialogType(v10);
  sub_23FAC3074();
  v11 = sub_23FAD6F18();
  sub_23F75E710(v11, v12, v13);
  v14 = sub_23F6B6F88();
  v16 = v15(v14);
  if (v16 == *MEMORY[0x24BE52F00])
  {
    sub_23F6B51EC((uint64_t)v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 96));
    v18 = *v2;
    v17 = v2[1];
    type metadata accessor for TranscriptProtoStaticText(0);
    sub_23F6F0CB4();
    *v1 = v18;
    v1[1] = v17;
  }
  else if (v16 == *MEMORY[0x24BE52F18])
  {
    sub_23F6B51EC((uint64_t)v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 96));
    v20 = *v2;
    v19 = v2[1];
    type metadata accessor for TranscriptProtoSonicText(0);
    sub_23F6F0CB4();
    *v1 = v20;
    v1[1] = v19;
  }
  else if (v16 == *MEMORY[0x24BE52F28])
  {
    sub_23F6B51EC((uint64_t)v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 96));
    v22 = *v2;
    v21 = v2[1];
    type metadata accessor for TranscriptProtoGeneratedText(0);
    sub_23F6F0CB4();
    *v1 = v22;
    v1[1] = v21;
  }
  else
  {
    if (v16 != *MEMORY[0x24BE52F10] && v16 != *MEMORY[0x24BE52F08])
    {
      sub_23F779AF8();
      sub_23F6B5AD4();
      *v24 = 0;
      sub_23F77D9E4();
      v25 = *(uint64_t (**)(uint64_t))(v3 + 8);
      sub_23FB2B084();
      v26 = sub_23F6B6F88();
      v27 = v25(v26);
      sub_23FB297B0(v27, type metadata accessor for TranscriptProtoDialogType);
      goto LABEL_11;
    }
    sub_23FB2A98C();
  }
  sub_23F6B51EC(v0, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23F7B0BC4();
  swift_storeEnumTagMultiPayload();
  sub_23FB298A8((uint64_t)v1, 0);
  sub_23FB29BEC((uint64_t)v1, v23, &qword_256EB2060);
LABEL_11:
  sub_23F77DB18();
  sub_23F6B5100();
}

void sub_23FB14AB8()
{
  TranscriptProtoDialogType.init(handwritten:)();
}

void ResponseOutput.VisualOutput.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD v29[10];

  sub_23F6B5220();
  v5 = v4;
  v7 = sub_23FB29ED4(v6);
  type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(v7);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  v29[9] = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v10);
  sub_23FB29D24((uint64_t)v29 - v11);
  sub_23F6916B8(&qword_256EBEF40);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  v29[4] = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(v14);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  v29[5] = (char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoInAppResponseOutputPayload(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  v29[8] = (char *)v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F78F404();
  sub_23FB2CE0C();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v21);
  v22 = sub_23F7A00C8();
  type metadata accessor for TranscriptProtoLiveActivityOutputPayload(v22);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v24);
  v25 = sub_23FAC3D30();
  type metadata accessor for TranscriptProtoVisualOutputType(v25);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v26);
  sub_23FB2A734();
  sub_23F77B6A8();
  if (!v1)
  {
    v29[0] = v3;
    v29[1] = v0;
    v29[2] = v2;
    v29[3] = v5;
    v28 = (char *)&loc_23FB14C8C + 4 * byte_23FB92BA6[sub_23F70D4E8()];
    __asm { BR              X10 }
  }
  sub_23FB297B0(v27, type metadata accessor for TranscriptProtoVisualOutput);
  sub_23F876B60();
  sub_23F6B5100();
}

void ResponseOutput.VisualOutput.LiveActivityOutputPayload.init(transcript:)()
{
  sub_23FB14EAC();
}

void sub_23FB14EAC()
{
  void (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;

  sub_23FB2A7E4();
  sub_23F77DCD4();
  v2 = sub_23F6B7194();
  v0(v2);
  sub_23F70D63C(v1);
  sub_23F6B5F7C();
}

void ResponseOutput.VisualOutput.InAppResponseOutputPayload.init(transcript:)()
{
  sub_23FB14EAC();
}

void ResponseOutput.VisualOutput.PluginSnippetOutputPayload.init(transcript:)()
{
  sub_23FB14F0C();
}

void sub_23FB14F0C()
{
  void (*v0)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  sub_23F6D3A90();
  sub_23FB2A7E4();
  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = sub_23F6B7194();
  sub_23F6D1E20(v7, v8);
  sub_23F77E600();
  v0(v2, v3, v5, v6);
  sub_23F70D63C(v1);
  sub_23F6B69E0();
}

void sub_23FB14F5C()
{
  ResponseOutput.VisualOutput.init(transcript:)();
}

uint64_t sub_23FB14F70()
{
  return sub_23FAEECE4();
}

void TranscriptProtoVisualOutput.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  void (*v50)(uint64_t, _QWORD *);
  _BYTE *v51;
  uint64_t v52;
  _QWORD v53[4];
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;

  sub_23F6B5220();
  v61 = v1;
  v6 = v5;
  v8 = v7;
  v9 = sub_23FB2CDB8();
  v53[1] = *(_QWORD *)(v9 - 8);
  v53[2] = v9;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v53[0] = (char *)v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6D398C();
  v54 = sub_23FB2CDD0();
  v57 = *(_QWORD *)(v54 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  v53[3] = (char *)v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6D398C();
  v56 = sub_23FB2CDF4();
  v60 = *(_QWORD **)(v56 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v14);
  v55 = (char *)v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoVisualOutput(v16);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B51D0();
  v18 = sub_23FB2CD88();
  v58 = *(_QWORD *)(v18 - 8);
  v59 = v18;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F7A00C8();
  v20 = sub_23FB2CE0C();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v21);
  v22 = sub_23F70D7F8();
  v23 = type metadata accessor for TranscriptProtoVisualOutputType(v22);
  sub_23F6B5A8C(v8, v24, v25, v23);
  sub_23FAC3DD4();
  sub_23F77DB9C(v4, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v4, v20);
  v62 = v8;
  if (v26 == *MEMORY[0x24BE52E88])
  {
    sub_23F6B6178(v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 96));
    v27 = v58;
    v28 = sub_23F70D554();
    v31 = sub_23F78F5D0(v28, v29, v30);
    v60 = v53;
    MEMORY[0x24BDAC7A8](v31);
    sub_23FB29654(&qword_256EB2010, (void (*)(uint64_t))type metadata accessor for TranscriptProtoVisualOutput);
    sub_23FB2D910();
    sub_23F6B6178(v6, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    sub_23F6F8C88(v62, type metadata accessor for TranscriptProtoVisualOutput);
    sub_23F6B6420(v0, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
  }
  else
  {
    v59 = v6;
    if (v26 == *MEMORY[0x24BE52E80])
    {
      sub_23F6B6178(v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 96));
      v33 = sub_23F6D3F0C();
      v36 = sub_23F6B633C(v33, v34, v35);
      MEMORY[0x24BDAC7A8](v36);
      sub_23FB29654(&qword_256EB2010, (void (*)(uint64_t))type metadata accessor for TranscriptProtoVisualOutput);
      sub_23FB2A5B0();
      sub_23FB2D910();
      sub_23F6B5900(v59, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
      sub_23F6F8C88(v8, type metadata accessor for TranscriptProtoVisualOutput);
      v37 = sub_23F8783E8();
    }
    else if (v26 == *MEMORY[0x24BE52E98])
    {
      sub_23F6B6178(v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 96));
      v40 = v54;
      v41 = sub_23F77E46C();
      v44 = sub_23F77DB9C(v41, v42, v43);
      MEMORY[0x24BDAC7A8](v44);
      sub_23FB2B030();
      sub_23FB29654(&qword_256EB2010, (void (*)(uint64_t))type metadata accessor for TranscriptProtoVisualOutput);
      sub_23FB2A41C();
      sub_23F6B563C(v59, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
      sub_23F6F8C88(v8, type metadata accessor for TranscriptProtoVisualOutput);
      v37 = sub_23F6B61D0();
      v38 = v40;
    }
    else
    {
      v45 = v59;
      if (v26 != *MEMORY[0x24BE52E90])
      {
        sub_23F779AF8();
        sub_23F6B5AD4();
        *v51 = 0;
        sub_23F77D9E4();
        v52 = sub_23F77E234(v45);
        sub_23FB2993C(v52, type metadata accessor for TranscriptProtoVisualOutput);
        sub_23F77E234(v4);
        goto LABEL_11;
      }
      sub_23F6B530C(v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 96));
      v46 = sub_23F77E46C();
      v49 = sub_23F78F5D0(v46, v47, v48);
      v60 = (_QWORD *)v20;
      v58 = v2;
      MEMORY[0x24BDAC7A8](v49);
      sub_23FB2B030();
      sub_23FB29654(&qword_256EB2010, (void (*)(uint64_t))type metadata accessor for TranscriptProtoVisualOutput);
      sub_23FB2A41C();
      sub_23FB2AADC();
      v50(v45, v60);
      sub_23F6F8C88(v8, type metadata accessor for TranscriptProtoVisualOutput);
      v37 = sub_23F77E46C();
    }
    v39(v37, v38);
  }
  sub_23FB29EF8(v3, v32, type metadata accessor for TranscriptProtoVisualOutput);
LABEL_11:
  sub_23F8778A8();
  sub_23F6B5100();
}

void sub_23FB15478()
{
  uint64_t *v0;
  void (*v1)(_QWORD);
  void (*v2)(_QWORD);
  uint64_t (*v3)(void);
  uint64_t (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F6D3DC4();
  v2 = v1;
  v4 = v3;
  sub_23F72E4BC();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B5268();
  v6 = v4();
  v8 = v7;
  v2(0);
  sub_23FAC3CEC();
  *v0 = v6;
  v0[1] = v8;
  type metadata accessor for TranscriptProtoVisualOutputType(0);
  sub_23FB29D10();
  swift_storeEnumTagMultiPayload();
  sub_23F77DD6C((uint64_t)v0, 0);
  v9 = sub_23FAD709C();
  sub_23FB2ACF0(v9, v10);
  sub_23F77E0B0();
  sub_23F6D3710();
}

void sub_23FB1551C(uint64_t a1)
{
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD v15[2];

  v2 = sub_23FB2C914();
  v3 = (void (*)(uint64_t))MEMORY[0x24BE52530];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F6916B8(&qword_256EA2660);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (_QWORD *)((char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23FB2CDC4();
  sub_23FB29654(&qword_256EC3600, v3);
  v10 = sub_23FB2C530();
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  if (v12 >> 60 == 15)
  {
    v10 = 0;
    v13 = 0xC000000000000000;
  }
  else
  {
    v13 = v12;
  }
  type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *v9 = v10;
  v9[1] = v13;
  v14 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v14);
  sub_23F710E80((uint64_t)v9, a1, &qword_256EA2660);
}

void sub_23FB15698(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = sub_23F6916B8(&qword_256EA2660);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_23FB2CD94();
  v7 = v6;
  v8 = sub_23FB2CDAC();
  v10 = v9;
  type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *v4 = v5;
  v4[1] = v7;
  v4[2] = v8;
  v4[3] = v10;
  v11 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v4, 0, 1, v11);
  sub_23F710E80((uint64_t)v4, a1, &qword_256EA2660);
}

void sub_23FB1578C()
{
  TranscriptProtoVisualOutput.init(handwritten:)();
}

void sub_23FB157A0()
{
  ResponseOutput.VisualOutput.LiveActivityOutputPayload.init(transcript:)();
  sub_23F878AAC();
}

uint64_t sub_23FB157C0()
{
  return sub_23FAEEE18();
}

uint64_t TranscriptProtoLiveActivityOutputPayload.init(handwritten:)(uint64_t a1)
{
  return sub_23FB15864(a1, (uint64_t)MEMORY[0x24BE52E08], (void (*)(_QWORD))type metadata accessor for TranscriptProtoLiveActivityOutputPayload, (void (*)(_QWORD))MEMORY[0x24BE52E10]);
}

uint64_t sub_23FB157F0(uint64_t a1)
{
  return TranscriptProtoLiveActivityOutputPayload.init(handwritten:)(a1);
}

void sub_23FB15814()
{
  ResponseOutput.VisualOutput.InAppResponseOutputPayload.init(transcript:)();
  sub_23F878AAC();
}

uint64_t sub_23FB15834()
{
  return sub_23FAEEF68();
}

uint64_t TranscriptProtoInAppResponseOutputPayload.init(handwritten:)(uint64_t a1)
{
  return sub_23FB15864(a1, (uint64_t)MEMORY[0x24BE52E68], (void (*)(_QWORD))type metadata accessor for TranscriptProtoInAppResponseOutputPayload, (void (*)(_QWORD))MEMORY[0x24BE52E70]);
}

uint64_t sub_23FB15864(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), void (*a4)(_QWORD))
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  sub_23FB2A9F4();
  v9();
  sub_23FB29FC0();
  a3(0);
  sub_23F6F0BB0();
  *v4 = v5;
  v4[1] = v6;
  a4(0);
  v10 = sub_23FB29A14();
  return sub_23F877AEC(v10, v11, v12);
}

uint64_t sub_23FB158B4(uint64_t a1)
{
  return TranscriptProtoInAppResponseOutputPayload.init(handwritten:)(a1);
}

void sub_23FB158D8()
{
  ResponseOutput.VisualOutput.PluginSnippetOutputPayload.init(transcript:)();
  sub_23F878AAC();
}

uint64_t sub_23FB158F8()
{
  return sub_23FAEF0B8();
}

uint64_t TranscriptProtoPluginSnippetOutputPayload.init(handwritten:)()
{
  return sub_23FB15930();
}

uint64_t sub_23FB15930()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_QWORD);
  void (*v3)(_QWORD);
  void (*v4)(_QWORD);
  void (*v5)(_QWORD);
  uint64_t (*v6)(void);
  uint64_t (*v7)(void);
  _QWORD *v8;
  _QWORD *v9;
  void (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);

  sub_23F6D3A90();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10();
  sub_23FB2A124();
  v11 = v7();
  v13 = v12;
  v5(0);
  sub_23FAC3044();
  *v9 = v0;
  v9[1] = v1;
  v9[2] = v11;
  v9[3] = v13;
  v3(0);
  v14 = sub_23FB29A14();
  return sub_23FB29EC0(v14, v15, v16);
}

uint64_t sub_23FB15998()
{
  return TranscriptProtoPluginSnippetOutputPayload.init(handwritten:)();
}

void ResponseOutput.DialogType.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;

  sub_23F6B5220();
  v2 = v1;
  type metadata accessor for TranscriptProtoGeneratedText(0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_23F6B51D0();
  type metadata accessor for TranscriptProtoSonicText(v4);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F78F260();
  sub_23FB2CE3C();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23F6B5C2C();
  type metadata accessor for TranscriptProtoStaticText(v7);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5268();
  sub_23F6B6088();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F7A00C8();
  v11 = type metadata accessor for TranscriptProtoDialogFormat(v10);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B573C();
  sub_23FB2A470(v2, v0);
  v13 = sub_23F6B5164(v0, 1, v11);
  if (!v15)
  {
    sub_23FB2A318(v0, v14, type metadata accessor for TranscriptProtoDialogFormat);
    sub_23FB297C0(v18, type metadata accessor for TranscriptProtoDialogType);
    v19 = (char *)&loc_23FB15B30 + 4 * byte_23FB92BAA[sub_23FB2AFC4()];
    __asm { BR              X10 }
  }
  sub_23F77E660(v13, &qword_256EB2060);
  sub_23F6916B8(&qword_256EBEF48);
  sub_23FB297E0();
  sub_23F77DA84();
  sub_23F6B5AD4();
  *v16 = v0;
  v16[1] = v11;
  v17 = sub_23F77D9E4();
  sub_23FB297C0(v17, type metadata accessor for TranscriptProtoDialogType);
  sub_23F876FC4();
  sub_23F6B5100();
}

void sub_23FB15C18()
{
  ResponseOutput.DialogType.init(transcript:)();
}

uint64_t sub_23FB15C2C()
{
  return sub_23FAEF218();
}

#error "23FB15E90: call analysis failed (funcsize=163)"

void AST.Expr.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  _QWORD v71[28];
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  sub_23F6B5220();
  v73 = v3;
  v74 = v2;
  v5 = v4;
  v72 = sub_23F6B58C8();
  v71[4] = *(_QWORD *)(v72 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B51A4();
  v71[5] = v7;
  v8 = sub_23F6D398C();
  v71[26] = type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant(v8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  v71[27] = (char *)v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoASTExprCancelVariant(v11);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  v71[25] = (char *)v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoASTExprRejectVariant(v14);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  v71[24] = (char *)v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoASTExprUndoVariant(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  v71[22] = (char *)v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoASTExprResolveToolVariant(v20);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  v71[21] = (char *)v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoASTExprPickOneVariant(v23);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v24);
  v71[19] = (char *)v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoASTExprSearchVariant(v26);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v27);
  v71[18] = (char *)v71 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoASTExprConfirmVariant(v29);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v30);
  v32 = sub_23FB29AA4((uint64_t)v71 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for TranscriptProtoASTPickType(v32);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v33);
  v71[20] = (char *)v71 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_23F6D398C();
  v71[13] = type metadata accessor for TranscriptProtoASTExprPickVariant(v35);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v36);
  v71[23] = (char *)v71 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoASTExprSayVariant(v38);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v39);
  v71[11] = (char *)v71 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoASTExprCallVariant(v41);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v42);
  v71[14] = (char *)v71 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_23F6D398C();
  v71[3] = type metadata accessor for TranscriptProtoASTExprIndexVariant(v44);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v45);
  v71[17] = (char *)v71 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_23F6D398C();
  v71[9] = type metadata accessor for TranscriptProtoASTExprDotVariant(v47);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v48);
  v71[12] = (char *)v71 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_23F6D398C();
  v71[10] = type metadata accessor for TranscriptProtoASTExprInfixVariant(v50);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v51);
  v71[15] = (char *)v71 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoASTExpr(v53);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v54);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v55);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v56);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v57);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v58);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v59);
  v60 = sub_23FAC3D30();
  type metadata accessor for TranscriptProtoASTExprPrefixVariant(v60);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v61);
  v62 = sub_23F78F260();
  type metadata accessor for TranscriptProtoASTLiteral(v62);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v63);
  sub_23F77DC18();
  MEMORY[0x24BDAC7A8](v64);
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v65);
  sub_23F6B5C80();
  MEMORY[0x24BDAC7A8](v66);
  sub_23F6D3F74();
  MEMORY[0x24BDAC7A8](v67);
  sub_23F878D94();
  v68 = *v5;
  if ((~*v5 & 0xF000000000000007) != 0)
  {
    v71[0] = v5;
    __asm { BR              X10 }
  }
  sub_23F6916B8(&qword_256EBEF58);
  sub_23FB297E0();
  sub_23F77DA84();
  sub_23F6B5AD4();
  *v69 = v0;
  v69[1] = v1;
  v70 = sub_23F77D9E4();
  sub_23FB298E4(v70, type metadata accessor for TranscriptProtoASTExpr);
  sub_23F8777E8();
  sub_23F6B5100();
}

void AST.IfStmt.init(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;

  sub_23F6B5220();
  sub_23FB2AD84();
  v16 = v15;
  sub_23F6916B8(&qword_256EA84F8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  v18 = sub_23F7A00C8();
  v19 = type metadata accessor for TranscriptProtoASTBlockStmt(v18);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5CD4();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F9231E0();
  MEMORY[0x24BDAC7A8](v22);
  v23 = sub_23FAC3D30();
  type metadata accessor for TranscriptProtoASTExpr(v23);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F77B870();
  if (v12)
  {
    sub_23FB297B0(v25, type metadata accessor for TranscriptProtoASTIfStmt);
  }
  else
  {
    v35 = v16;
    v34 = v14;
    AST.Expr.init(transcript:)();
    v26 = type metadata accessor for TranscriptProtoASTIfStmt(0);
    sub_23F77B8F4();
    v27 = sub_23FB2A298();
    v28 = sub_23F773028(v27);
    sub_23FB297C0(v28, type metadata accessor for TranscriptProtoASTBlockStmt);
    sub_23FB2A934(v11 + *(int *)(v26 + 24), v29, &qword_256EA84F8);
    v30 = sub_23F6B5164(v10, 1, v19);
    if (v31)
    {
      v33 = 0;
    }
    else
    {
      sub_23FAD69D8(v10, v34);
      sub_23F77DB10(v34, v13);
      v32 = sub_23FB2A518();
      v33 = sub_23F773028(v32);
      sub_23FB29AB4(v13);
      sub_23FB29AB4(v34);
    }
    sub_23FB297B8(v30, type metadata accessor for TranscriptProtoASTIfStmt);
    *v35 = a10;
    v35[1] = v28;
    v35[2] = v33;
  }
  sub_23F876B60();
  sub_23F6B5100();
}

void AST.ForInStmt.init(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_23F6B5220();
  v14 = sub_23FB29E14();
  type metadata accessor for TranscriptProtoASTBlockStmt(v14);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  v16 = sub_23F6B51D0();
  type metadata accessor for TranscriptProtoASTExpr(v16);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  sub_23FB2A7A4();
  type metadata accessor for TranscriptProtoASTForInStmt(0);
  sub_23F77DCD4();
  sub_23F77B870();
  if (v10)
  {
    sub_23FB297B8(v18, type metadata accessor for TranscriptProtoASTForInStmt);
    sub_23F6B644C();
  }
  else
  {
    AST.Expr.init(transcript:)();
    sub_23F77B8F4();
    v19 = sub_23FB2A518();
    v20 = sub_23F773028(v19);
    sub_23FB298E4(v20, type metadata accessor for TranscriptProtoASTBlockStmt);
    sub_23FB297B8(v21, type metadata accessor for TranscriptProtoASTForInStmt);
    *v11 = v13;
    v11[1] = v12;
    v11[2] = a10;
    v11[3] = v20;
  }
  sub_23F876FC4();
  sub_23F6B5100();
}

void sub_23FB173D0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = AST.Stmt.init(transcript:)(a1);
  if (!v2)
    *a2 = v4;
  sub_23F878AAC();
}

uint64_t protocol witness for ProtoBytesConvertible.protoBytes() in conformance AST.Stmt()
{
  unint64_t *v0;

  return sub_23FAEF34C(*v0);
}

uint64_t TranscriptProtoASTStmt.init(handwritten:)@<X0>(unint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  if (a1 >> 62)
  {
    if (a1 >> 62 == 1)
    {
      v4 = *(_QWORD *)(a1 + 16);
      type metadata accessor for TranscriptProtoASTIfStmt(0);
      swift_allocBox();
      sub_23FB2A124();
      sub_23F6A3728(v4);
      sub_23F6B6254();
      sub_23F6B6548();
      TranscriptProtoASTIfStmt.init(handwritten:)();
      v5 = v2 | 0x4000000000000000;
    }
    else
    {
      v7 = *(_QWORD *)(a1 + 32);
      type metadata accessor for TranscriptProtoASTForInStmt(0);
      swift_allocBox();
      sub_23FB2A124();
      sub_23F6B5F1C();
      sub_23F6A3728(v7);
      sub_23F6B6254();
      TranscriptProtoASTForInStmt.init(handwritten:)();
      v5 = v2 | 0x8000000000000000;
    }
  }
  else
  {
    v6 = *(_QWORD *)(a1 + 16);
    sub_23FB2A6E0();
    v5 = swift_allocBox();
    sub_23F6A3728(v6);
    TranscriptProtoASTExpr.init(handwritten:)();
  }
  type metadata accessor for TranscriptProtoASTStmt(0);
  sub_23F6F0878();
  result = swift_release();
  *a2 = v5;
  return result;
}

void TranscriptProtoASTExpr.init(handwritten:)()
{
  uint64_t *v0;
  uint64_t *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[18];

  sub_23F6B50E8();
  v1 = v0;
  v3 = v2;
  v32[5] = type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant(0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B57A0(v5, v32[0]);
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  v32[4] = (uint64_t)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6D398C();
  v32[2] = type metadata accessor for AST.UpdateParameters();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  v32[3] = (uint64_t)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F6D398C();
  v32[10] = type metadata accessor for TranscriptProtoASTExprPickVariant(v10);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B57F4(v12, v32[0]);
  sub_23F6916B8(&qword_256EA8510);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  v32[9] = (uint64_t)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23F6D398C();
  v32[0] = type metadata accessor for TranscriptProtoASTExprIndexVariant(v15);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  v32[1] = (uint64_t)v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoASTExprDotVariant(v18);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v19);
  v20 = sub_23F78F260();
  v32[7] = type metadata accessor for TranscriptProtoASTExprInfixVariant(v20);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  v32[8] = (uint64_t)v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoASTExprPrefixVariant(v23);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA25A0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v25);
  v32[12] = (uint64_t)v32 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v27);
  v32[14] = (uint64_t)v32 - v28;
  sub_23F6B58C8();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F77DC18();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F6B6B3C();
  v31 = *v1;
  *v3 = 0xF000000000000007;
  v32[13] = sub_23FB2A6E0();
  v32[15] = (uint64_t)v3;
  sub_23FAC3210();
  __asm { BR              X10 }
}

void sub_23FB17780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;

  v3 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  sub_23F6B54F8();
  sub_23F756688();
  v5 = *(uint64_t **)(v1 - 104);
  sub_23F6B4DF8(*v5);
  *v5 = v4;
  sub_23F693DDC();
}

void TranscriptProtoASTIfStmt.init(handwritten:)()
{
  uint64_t *v0;
  uint64_t *v1;
  unint64_t *v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  sub_23F6B50E8();
  v3 = v2;
  v5 = v4;
  sub_23F6916B8(&qword_256EA84F8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F77DC18();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F878DA4();
  sub_23F6916B8(&qword_256EA25A0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F693EB0();
  v9 = v3[2];
  sub_23F6A3728(*v3);
  sub_23FB2AD90();
  sub_23FB2A6E0();
  sub_23F73200C();
  v26 = v10;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v11, v12, v13, v10);
  v14 = sub_23F77DCD4();
  v15 = sub_23FB2AB0C(v14);
  swift_bridgeObjectRelease();
  v16 = sub_23FB2B0E4();
  sub_23F6F0BB0();
  *v1 = v15;
  sub_23FAD6A98((uint64_t)v1, 0);
  if (v9)
  {
    v17 = sub_23F77E1FC();
    v18 = sub_23FAE3E4C(v17);
    sub_23FAC3074();
    *v0 = v18;
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v0, 0, 1, v16);
    sub_23FB2AF08();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v0, 1, 1, v16);
    sub_23FB2AF08();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v19 = sub_23FB298EC(v5, 1, 1, v26);
  v20 = type metadata accessor for TranscriptProtoASTIfStmt(v19);
  v21 = v5 + *(int *)(v20 + 20);
  sub_23FAD6A98(v21, 1);
  v22 = v5 + *(int *)(v20 + 24);
  sub_23FAD6A98(v22, 1);
  sub_23F6F0878();
  v23 = sub_23F7D2958();
  sub_23F710E80(v23, v24, v25);
  sub_23FB2A520((uint64_t)v1, v21);
  sub_23FB2A520((uint64_t)v0, v22);
  sub_23F693DDC();
}

void TranscriptProtoASTForInStmt.init(handwritten:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_23F6B50E8();
  v4 = v3;
  v18 = v5;
  v6 = type metadata accessor for TranscriptProtoASTForInStmt(0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B52B0();
  sub_23F6916B8(&qword_256EA84F8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B53AC();
  sub_23F6916B8(&qword_256EA25A0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F693EB0();
  v10 = v4[1];
  v17 = *v4;
  v11 = v4[2];
  sub_23F6B54F8();
  sub_23F6A3728(v11);
  sub_23FB2AD90();
  sub_23FB2A6E0();
  sub_23F7A690C(v1, 0);
  v12 = sub_23F77E600();
  v13 = sub_23FB2AB0C(v12);
  swift_bridgeObjectRelease();
  sub_23FB2B0E4();
  sub_23F77E628();
  *v2 = v13;
  sub_23FAD6AA4((uint64_t)v2, 0);
  v14 = (uint64_t)v0 + *(int *)(v6 + 20);
  sub_23F7A690C(v14, 1);
  sub_23FAD6AA4((uint64_t)v0 + *(int *)(v6 + 24), 1);
  sub_23F6F0BB0();
  *v0 = v17;
  v0[1] = v10;
  sub_23F710E80(v1, v14, &qword_256EA25A0);
  v15 = sub_23F87886C();
  sub_23F710E80(v15, v16, &qword_256EA84F8);
  sub_23F6F594C((uint64_t)v0, v18, type metadata accessor for TranscriptProtoASTForInStmt);
  sub_23F693DFC();
  sub_23FB2AF08();
  swift_bridgeObjectRelease();
  sub_23F693DDC();
}

uint64_t sub_23FB18388@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  return TranscriptProtoASTStmt.init(handwritten:)(*a1, a2);
}

void AST.FlatExpr.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(_QWORD);
  char *v93;
  _QWORD v94[38];
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;

  sub_23F6B5220();
  v99 = v1;
  v4 = v3;
  v96 = v5;
  v94[7] = *(_QWORD *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant(0) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  v94[36] = (char *)v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v8);
  v94[35] = (char *)v94 - v9;
  v10 = sub_23F6D398C();
  v94[33] = *(_QWORD *)(type metadata accessor for AST.Update(v10) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  v94[37] = (char *)v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(v13);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  v94[32] = (char *)v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(v16);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  v94[29] = (char *)v94 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(v19);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  v94[28] = (char *)v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(v22);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v23);
  v94[30] = (char *)v94 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(v25);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v26);
  v94[25] = (char *)v94 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(v28);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v29);
  v94[26] = (char *)v94 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(v31);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v32);
  v94[23] = (char *)v94 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(v34);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v35);
  v94[24] = (char *)v94 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TranscriptProtoASTPickType(0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F6B51A4();
  v94[5] = v38;
  v39 = sub_23F6D398C();
  v94[4] = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(v39);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v40);
  v94[27] = (char *)v94 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6916B8(&qword_256EA2798);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v43);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v44);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v46);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v47);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v48);
  v100 = (char *)v94 - v49;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v50);
  v94[34] = (char *)v94 - v51;
  v95 = sub_23F72E034();
  v98 = *(_QWORD *)(v95 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v52);
  v97 = (char *)v94 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoASTFlatExprSayVariant(v54);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v55);
  v94[31] = (char *)v94 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoASTFlatExprCallVariant(v57);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v58);
  sub_23F6B51A4();
  v94[15] = v59;
  v60 = sub_23F6D398C();
  v94[3] = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(v60);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v61);
  sub_23F6B51A4();
  v94[17] = v62;
  v63 = sub_23F6D398C();
  v94[11] = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(v63);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v64);
  sub_23F6B51A4();
  v94[14] = v65;
  v66 = sub_23F6D398C();
  v94[13] = type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(v66);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v67);
  sub_23F6B51A4();
  v94[16] = v68;
  v69 = sub_23F6D398C();
  v94[10] = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(v69);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v70);
  v94[12] = (char *)v94 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoASTFlatValue(v72);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v73);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v74);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v75);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v76);
  sub_23F6D3D14();
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v77);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v78);
  sub_23F72E168();
  MEMORY[0x24BDAC7A8](v79);
  sub_23F876D18();
  MEMORY[0x24BDAC7A8](v80);
  sub_23F923EC8();
  sub_23F6B6088();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v81);
  v82 = sub_23F77DB24();
  v83 = type metadata accessor for TranscriptProtoAstflatExprEnum(v82);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v84);
  sub_23F6B53AC();
  sub_23FB2A470(v4, v2);
  v85 = sub_23F7F6798();
  v87 = sub_23F6B5164(v85, v86, v83);
  if (!v88)
  {
    v94[0] = v4;
    v90 = sub_23FB2A04C();
    sub_23F6F594C(v90, v91, v92);
    sub_23F87886C();
    v93 = (char *)&loc_23FB18A00 + 4 * word_23FB92C06[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_23FAD6A14(v87, &qword_256EB22D8);
  sub_23F6916B8(&qword_256EBEF60);
  sub_23FB297E0();
  sub_23F77DA84();
  sub_23F6B5AD4();
  *v89 = v83;
  v89[1] = v0;
  sub_23F77D9E4();
  sub_23F6F8C88(v4, type metadata accessor for TranscriptProtoASTFlatExpr);
  sub_23F8777E8();
  sub_23F6B5100();
}

void AST.FlatValue.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33[3];
  uint64_t v34;
  uint64_t v35;

  sub_23F6B5220();
  v34 = v1;
  v3 = v2;
  v35 = v4;
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v5);
  v33[2] = (uint64_t)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  v8 = MEMORY[0x24BDAC7A8](v7);
  sub_23FB2B008(v8, v9, v10, v11, v12, v13, v14, v15, v33[0]);
  sub_23F6916B8(&qword_256EA2798);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  v17 = sub_23F78F27C();
  type metadata accessor for TranscriptProtoASTFlatValueDictVariant(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  v19 = sub_23F6B5C2C();
  type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(v19);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B59E0();
  sub_23F6B6088();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  v22 = sub_23F7A00C8();
  v23 = type metadata accessor for TranscriptProtoAstflatValueEnum(v22);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6B573C();
  v25 = sub_23F924C14();
  sub_23FB2A470(v25, v26);
  v27 = sub_23F6B5164(v0, 1, v23);
  if (!v29)
  {
    v33[1] = v3;
    sub_23FB2A318(v0, v28, type metadata accessor for TranscriptProtoAstflatValueEnum);
    v32 = (char *)&loc_23FB199AC + 4 * byte_23FB92C2E[sub_23FB2AFC4()];
    __asm { BR              X10 }
  }
  sub_23F77E660(v27, &qword_256EA25F0);
  sub_23F6916B8(&qword_256EBEF68);
  sub_23FB297E0();
  sub_23F77DA84();
  sub_23F6B5AD4();
  *v30 = v0;
  v30[1] = v23;
  v31 = sub_23F77D9E4();
  sub_23FB298E4(v31, type metadata accessor for TranscriptProtoASTFlatValue);
  sub_23F877A30();
  sub_23F6B5100();
}

uint64_t AST.InfixOp.init(transcript:)(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t AST.PickType.init(transcript:)(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  v2 = *(unsigned __int8 *)(a1 + 8);
  if (v2 == 255)
  {
    sub_23F6916B8(&qword_256EBEEC0);
    v3 = sub_23F77E1B4();
    sub_23FB29C94();
    sub_23F6B5AD4();
    *v4 = v3;
    v4[1] = v1;
    v5 = sub_23F77D9E4();
    sub_23FB297B8(v5, type metadata accessor for TranscriptProtoASTPickType);
  }
  else
  {
    if ((v2 & 1) != 0)
      v1 = 0;
    else
      v1 = *(_QWORD *)a1;
    sub_23FB297B8(a1, type metadata accessor for TranscriptProtoASTPickType);
  }
  return v1;
}

void AST.Update.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  char v16;

  sub_23F6B5220();
  v5 = sub_23FB29D30();
  type metadata accessor for TranscriptProtoASTFlatValue(v5);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B5CD4();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_23FB29944();
  type metadata accessor for AST.FlatValue(v8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_23FAC3D30();
  type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant(v11);
  sub_23F77B920();
  if (v0)
  {
    sub_23F6F8C88(v1, type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant);
  }
  else
  {
    AST.FlatValue.init(transcript:)();
    sub_23FB2A4E4();
    sub_23F77328C();
    v13 = v12;
    v16 = *(_BYTE *)(v1 + 8);
    sub_23F77B920();
    AST.FlatValue.init(transcript:)();
    sub_23FB297A8(v14, type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant);
    sub_23F77DC98(v3, v2);
    v15 = (int *)type metadata accessor for AST.Update(0);
    *(_QWORD *)(v2 + v15[5]) = v13;
    *(_BYTE *)(v2 + v15[6]) = v16;
    sub_23F77DC98(v4, v2 + v15[7]);
  }
  sub_23F77DB18();
  sub_23F6B5100();
}

void sub_23FB19EFC()
{
  AST.FlatExpr.init(transcript:)();
}

uint64_t sub_23FB19F10()
{
  return sub_23FAEF428();
}

void TranscriptProtoASTFlatExpr.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  _QWORD v51[18];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_23F6B50E8();
  v52 = v1;
  v3 = v2;
  sub_23F6916B8(&qword_256EA2798);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v4);
  v51[7] = (char *)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v6);
  v51[10] = (char *)v51 - v7;
  v8 = sub_23F6D398C();
  v51[8] = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(v8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  v51[9] = (char *)v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6916B8(&qword_256EA8510);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  v51[5] = (char *)v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23FB2C4B8();
  v14 = *(_QWORD *)(v13 - 8);
  v53 = v13;
  v54 = v14;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v15);
  v51[6] = (char *)v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v17);
  v18 = sub_23F923B4C();
  v51[3] = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(v18);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v19);
  v51[4] = (char *)v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23F6D398C();
  v51[0] = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(v21);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v22);
  v23 = sub_23F77E1CC();
  v51[1] = type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(v23);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v24);
  v51[2] = (char *)v51 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(v26);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F6B5298();
  sub_23F6916B8(&qword_256EA84E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v28);
  v51[11] = (char *)v51 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v30);
  v51[13] = (char *)v51 - v31;
  v32 = sub_23F6D398C();
  type metadata accessor for AST.FlatValue(v32);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F6B6618();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v35);
  v51[12] = (char *)v51 - v36;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v37);
  v51[14] = (char *)v51 - v38;
  v39 = sub_23F6D398C();
  type metadata accessor for AST.FlatExpr(v39);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F6B6B5C();
  sub_23F6916B8(&qword_256EB22D8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v41);
  v51[16] = (char *)v51 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoAstflatExprEnum(v43);
  sub_23F693EC8();
  v51[15] = v44;
  v48 = sub_23FB298EC(v45, v46, v47, v44);
  type metadata accessor for TranscriptProtoASTFlatExpr(v48);
  v51[17] = v3;
  v49 = v52;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_23F77DE8C(v49, v0);
  v50 = (char *)sub_23FB1A250 + 4 * word_23FB92C3A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23FB1A250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v1 - 160);
  sub_23F77E2AC(v0, v2);
  sub_23F77DC5C(v2, *(_QWORD *)(v1 - 176));
  v3 = *(_QWORD *)(v1 - 144);
  TranscriptProtoASTFlatValue.init(handwritten:)();
  sub_23FB297EC(v4, type metadata accessor for AST.FlatExpr);
  sub_23F70D63C(v2);
  v5 = *(_QWORD *)(v1 - 136);
  sub_23F6B6964();
  swift_storeEnumTagMultiPayload();
  sub_23F77DD78(v3, 0);
  sub_23F710E80(v3, v5, &qword_256EB22D8);
  sub_23F693DDC();
}

void TranscriptProtoASTFlatValue.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  sub_23F6B50E8();
  v1 = sub_23FB29B20(v0);
  type metadata accessor for TranscriptProtoASTFlatValue(v1);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v2);
  sub_23FB2991C(v3, v15);
  v4 = sub_23FB2C4B8();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F77E1CC();
  sub_23FB2C764();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B5C9C();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23F78F404();
  type metadata accessor for AST.FlatValue(v7);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23F7A00C8();
  type metadata accessor for TranscriptProtoAstflatValueEnum(v9);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B5F5C();
  v12 = sub_23F87886C();
  sub_23F6F5920(v12, v13, type metadata accessor for AST.FlatValue);
  sub_23F7B0E48();
  v14 = (char *)sub_23FB1AC84 + 4 * byte_23FB92C62[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23FB1AC84()
{
  _BYTE *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *v2 = *v0;
  sub_23FB29B2C();
  swift_storeEnumTagMultiPayload();
  v5 = *(_QWORD *)(v3 - 104);
  v4 = *(_QWORD *)(v3 - 96);
  v6 = *(_QWORD *)(v3 - 112);
  sub_23F77E598(v6, 1);
  sub_23FAC3210();
  sub_23F6F8C88(v5, type metadata accessor for AST.FlatValue);
  sub_23FB29B3C(v6, v7, type metadata accessor for TranscriptProtoASTFlatValue);
  sub_23F77E660(v8, &qword_256EA25F0);
  sub_23FB29B3C((uint64_t)v2, v9, type metadata accessor for TranscriptProtoAstflatValueEnum);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v4, 0, 1, v1);
  sub_23F693DDC();
}

void sub_23FB1AE10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F72E0C8(v1, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 144) + 32));
  v5 = sub_23F6B6964();
  sub_23F72E0C8(v5, v6, v7);
  sub_23FB2A8C0();
  v8 = sub_23FB29DB4();
  v10 = v9;
  sub_23FAD69A0();
  sub_23FB29DBC();
  *(_DWORD *)v3 = v0;
  *(_QWORD *)(v3 + 8) = v8;
  *(_QWORD *)(v3 + 16) = v10;
  sub_23F6D3DA4(v2);
  sub_23F6D3DA4(v1);
  sub_23FB2AA0C();
  JUMPOUT(0x23FB1AE6CLL);
}

uint64_t TranscriptProtoASTInfixOp.init(handwritten:)@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = result;
  return result;
}

void TranscriptProtoASTPickType.init(handwritten:)(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v4;

  v4 = a2 & 1;
  if ((a2 & 1) != 0)
    a1 = 1;
  sub_23FB2B0EC();
  sub_23F6F0878();
  *(_QWORD *)a3 = a1;
  *(_BYTE *)(a3 + 8) = v4;
  sub_23F694C84();
}

void sub_23FB1AEC4()
{
  TranscriptProtoASTFlatExpr.init(handwritten:)();
}

void AST.Literal.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_QWORD);
  char *v21;

  sub_23F6D3DC4();
  v1 = sub_23FB2AEA8();
  type metadata accessor for TranscriptProtoASTLiteralDictVariant(v1);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_23F6B5C2C();
  type metadata accessor for TranscriptProtoASTLiteralArrayVariant(v3);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EB2468);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_23F78F260();
  v7 = type metadata accessor for TranscriptProtoAstliteralEnum(v6);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B53AC();
  v9 = sub_23F7D24F0();
  sub_23F6B705C(v9, v10);
  v11 = sub_23F77E3D0();
  v13 = sub_23F6B5164(v11, v12, v7);
  if (!v14)
  {
    v18 = sub_23F7A1280();
    sub_23F6F594C(v18, v19, v20);
    sub_23F72E2E0();
    v21 = (char *)sub_23FB1B034 + 4 * byte_23FB92C6D[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_23F77E3DC(v13, &qword_256EB2468);
  sub_23F6916B8(&qword_256EBEF70);
  v15 = sub_23FB297E0();
  sub_23FB29C94();
  sub_23F6B5AD4();
  *v16 = v15;
  v16[1] = v0;
  v17 = sub_23F77D9E4();
  sub_23FB297B0(v17, type metadata accessor for TranscriptProtoASTLiteral);
  sub_23F77E0B0();
}

void sub_23FB1B034(uint64_t a1)
{
  sub_23FB297B0(a1, type metadata accessor for TranscriptProtoASTLiteral);
  JUMPOUT(0x23FB1AFE0);
}

void sub_23FB1B050(uint64_t a1)
{
  sub_23FB297B0(a1, type metadata accessor for TranscriptProtoASTLiteral);
  JUMPOUT(0x23FB1AFE0);
}

void sub_23FB1B06C(uint64_t a1)
{
  sub_23FB297B0(a1, type metadata accessor for TranscriptProtoASTLiteral);
  JUMPOUT(0x23FB1AFE0);
}

void sub_23FB1B088(uint64_t a1)
{
  sub_23FB297B0(a1, type metadata accessor for TranscriptProtoASTLiteral);
  JUMPOUT(0x23FB1AFE0);
}

#error "23FB1B0B8: call analysis failed (funcsize=16)"

void sub_23FB1B0E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FAD69D8(v1, v0);
  v2 = sub_23F6B90D8();
  sub_23FB2268C(v2);
  v3 = sub_23F717D54();
  sub_23FB297B0(v3, type metadata accessor for TranscriptProtoASTLiteral);
  sub_23FB29AB4(v0);
  JUMPOUT(0x23FB1AFE0);
}

void sub_23FB1B13C(uint64_t a1)
{
  sub_23FB297B0(a1, type metadata accessor for TranscriptProtoASTLiteral);
  JUMPOUT(0x23FB1AFE0);
}

void AST.Builtin.NoMatchingTool.init(transcript:)(uint64_t a1)
{
  sub_23F6F8C88(a1, type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant);
  sub_23F878AAC();
}

void sub_23FB1B180()
{
  AST.Expr.init(transcript:)();
}

uint64_t sub_23FB1B194()
{
  unint64_t *v0;

  return sub_23FAEF54C(*v0);
}

void TranscriptProtoASTLiteral.init(handwritten:)()
{
  char v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F6D3A90();
  v1 = v0;
  v2 = sub_23F6F0920();
  type metadata accessor for TranscriptProtoAstliteralEnum(v2);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B6618();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F878DA4();
  __asm { BR              X10 }
}

void sub_23FB1B220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  *v3 = v4 & 1;
  sub_23F77E680();
  swift_storeEnumTagMultiPayload();
  sub_23F72DFE8((uint64_t)v3, v2);
  v5 = sub_23FB298EC(v0, 1, 1, v1);
  type metadata accessor for TranscriptProtoASTLiteral(v5);
  v6 = sub_23F6F0878();
  sub_23F77E660(v6, &qword_256EB2468);
  sub_23F72DFE8(v2, v0);
  sub_23F77DD6C(v0, 0);
  sub_23F6B69E0();
}

void sub_23FB1B320()
{
  TranscriptProtoASTExpr.init(handwritten:)();
  sub_23F878AAC();
}

void AST.UpdateExpr.init(transcript:)(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_23F6F0920();
  type metadata accessor for TranscriptProtoASTExpr(v4);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F693EB0();
  v6 = *a1;
  type metadata accessor for TranscriptProtoASTUpdateExpr(0);
  sub_23FB2AABC();
  sub_23F77B870();
  if (v2)
  {
    sub_23FB297A8(v7, type metadata accessor for TranscriptProtoASTUpdateExpr);
  }
  else
  {
    AST.Expr.init(transcript:)();
    sub_23FB297A8(v8, type metadata accessor for TranscriptProtoASTUpdateExpr);
    *(_BYTE *)v1 = v6;
    *(_QWORD *)(v1 + 8) = v9;
  }
  sub_23F6D3674();
}

void AST.UpdateKind.init(transcript:)(_BYTE *a1@<X8>)
{
  sub_23F6F0AE0(a1);
}

void sub_23FB1B3F8(char *a1)
{
  AST.UpdateExpr.init(transcript:)(a1);
}

uint64_t sub_23FB1B40C()
{
  uint64_t v0;

  return sub_23FAEF62C(*(_BYTE *)v0, *(_QWORD *)(v0 + 8));
}

void TranscriptProtoASTUpdateExpr.init(handwritten:)()
{
  uint64_t v0;
  char *v1;
  char *v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F6D3A90();
  v2 = v1;
  v4 = v3;
  sub_23F6916B8(&qword_256EA25A0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B52B0();
  v6 = *v2;
  TranscriptProtoASTExpr.init(handwritten:)();
  v7 = sub_23FB2A6E0();
  v8 = sub_23FB298EC(v0, 0, 1, v7);
  type metadata accessor for TranscriptProtoASTUpdateExpr(v8);
  sub_23FB2AC20();
  v10 = (uint64_t)&v4[v9];
  sub_23F750B84((uint64_t)&v4[v9], 1);
  sub_23FAC3074();
  *v4 = v6;
  sub_23FB2A520(v0, v10);
  sub_23F6B69E0();
}

void sub_23FB1B4DC()
{
  TranscriptProtoASTUpdateExpr.init(handwritten:)();
}

void sub_23FB1B500()
{
  AST.Update.init(transcript:)();
}

uint64_t sub_23FB1B514()
{
  return sub_23FAEF7E4();
}

void TranscriptProtoASTFlatExprUpdateVariant.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t updated;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_23F6B50E8();
  v5 = v4;
  v7 = sub_23FB29B20(v6);
  updated = type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant(v7);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F6B5C2C();
  type metadata accessor for AST.FlatValue(v10);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B52B0();
  sub_23F6916B8(&qword_256EA84E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5CD4();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F77E490();
  v14 = sub_23F6B5FE0();
  sub_23F77DE8C(v14, v15);
  TranscriptProtoASTFlatValue.init(handwritten:)();
  v16 = sub_23FAD7508();
  v17 = sub_23FB298EC(v3, 0, 1, v16);
  v18 = type metadata accessor for AST.Update(v17);
  v19 = sub_23FB2AE68();
  sub_23FACE5CC(v19, v20, v21, v22, v23, v24, v25, v26, v34, v36);
  v28 = v27;
  sub_23F77DE8C(v5 + *(int *)(v18 + 28), v0);
  TranscriptProtoASTFlatValue.init(handwritten:)();
  sub_23F77DD6C(v2, 0);
  v29 = *(_BYTE *)(v5 + *(int *)(v18 + 24));
  sub_23F77DD6C(v1 + *(int *)(updated + 24), 1);
  sub_23F77DD6C(v1 + *(int *)(updated + 28), 1);
  sub_23FAC3044();
  v30 = sub_23FAD709C();
  sub_23FB29F28(v30, v31);
  *(_QWORD *)v1 = v28;
  v32 = sub_23F7A1280();
  sub_23FB29F28(v32, v33);
  *(_BYTE *)(v1 + 8) = v29;
  sub_23F6F594C(v1, v35, type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant);
  sub_23F6F8C88(v5, type metadata accessor for AST.Update);
  sub_23F693DDC();
}

void sub_23FB1B6B0()
{
  TranscriptProtoASTFlatExprUpdateVariant.init(handwritten:)();
  sub_23F878AAC();
}

void sub_23FB1B6D0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  TranscriptProtoASTPickType.init(handwritten:)(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), a2);
}

void sub_23FB1B700(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char v5;

  v4 = AST.PickType.init(transcript:)(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = v4;
    *(_BYTE *)(a2 + 8) = v5 & 1;
  }
  sub_23F878AAC();
}

uint64_t protocol witness for ProtoBytesConvertible.protoBytes() in conformance AST.PickType()
{
  uint64_t v0;

  return sub_23FAEF908(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

void sub_23FB1B748(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;

  AST.Literal.init(transcript:)();
  if (!v1)
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    *(_BYTE *)(a1 + 16) = v5;
  }
  sub_23F878AAC();
}

uint64_t protocol witness for ProtoBytesConvertible.protoBytes() in conformance AST.Literal()
{
  uint64_t v0;

  return sub_23FAEF9F0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

void sub_23FB1B78C()
{
  TranscriptProtoASTLiteral.init(handwritten:)();
}

uint64_t Array<A>.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v0 = sub_23FB2A7DC();
  sub_23F773028(v0, v1, v2, v3, v4, v5, v6, v7, v11, v12);
  v9 = v8;
  sub_23FB297B8(v8, type metadata accessor for TranscriptProtoASTBlockStmt);
  return v9;
}

void sub_23FB1B804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  AST.IfStmt.init(transcript:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t protocol witness for ProtoBytesConvertible.protoBytes() in conformance AST.IfStmt()
{
  uint64_t v0;

  return sub_23FAEFAEC(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
}

void TranscriptProtoASTBlockStmt.init(handwritten:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FAD7414();
  v2 = sub_23FB2AB0C(v1);
  sub_23F693E04();
  sub_23FB2B0E4();
  sub_23FAC3074();
  *v0 = v2;
  sub_23F6B6664();
}

void sub_23FB1B870()
{
  TranscriptProtoASTIfStmt.init(handwritten:)();
}

void sub_23FB1B894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  AST.ForInStmt.init(transcript:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t protocol witness for ProtoBytesConvertible.protoBytes() in conformance AST.ForInStmt()
{
  uint64_t v0;

  return sub_23FAEFBF4(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_23FB1B8C4()
{
  TranscriptProtoASTForInStmt.init(handwritten:)();
}

void sub_23FB1B8E8()
{
  AST.FlatValue.init(transcript:)();
}

uint64_t sub_23FB1B8FC()
{
  return sub_23FAEFD00();
}

void sub_23FB1B910()
{
  TranscriptProtoASTFlatValue.init(handwritten:)();
  sub_23F878AAC();
}

uint64_t sub_23FB1B930@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;
  unsigned __int8 v4;

  v4 = *a1;
  result = AST.InfixOp.init(transcript:)(&v4);
  *a2 = result;
  return result;
}

uint64_t sub_23FB1B970@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  return TranscriptProtoASTInfixOp.init(handwritten:)(*a1, a2);
}

void sub_23FB1B998(_BYTE *a1@<X8>)
{
  AST.UpdateKind.init(transcript:)(a1);
}

void sub_23FB1B9C8()
{
  TranscriptProtoASTBlockStmt.init(handwritten:)();
}

void Action.ParameterValue.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(_QWORD);
  uint64_t v31;
  uint64_t v32;

  sub_23F6B5220();
  v5 = sub_23F78F298();
  v6 = type metadata accessor for Action.ParameterValue(v5);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B52B0();
  sub_23F6916B8(&qword_256EA8598);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B59E0();
  sub_23F6916B8(&qword_256EA2750);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F6B51D0();
  type metadata accessor for TranscriptProtoToolParameterValue(v10);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  v12 = sub_23F77DB24();
  type metadata accessor for ToolParameterValue(v12);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B5268();
  sub_23F77BF44();
  if (!v1)
  {
    ToolParameterValue.init(transcript:)();
    v14 = type metadata accessor for TranscriptProtoActionParameterValue(0);
    v15 = sub_23FB2A63C(v14);
    sub_23F6B4F58(v15, v4, &qword_256EA8598);
    v16 = sub_23FB2A814();
    sub_23F77A6E0(v16, v17, v18, v19, v20, v21, v22, v23);
    v24 = v2 + *(int *)(v6 + 20);
    v25 = sub_23FB2ABB0();
    sub_23F6B5A8C(v24, v26, v27, v25);
    v28 = sub_23FAD709C();
    sub_23F6F594C(v28, v29, v30);
    sub_23FB29D9C(v3, v31, &qword_256EA2750);
    sub_23FB29B3C(v2, v32, type metadata accessor for Action.ParameterValue);
  }
  sub_23F6F8C88(v0, type metadata accessor for TranscriptProtoActionParameterValue);
  sub_23F877A30();
  sub_23F6B5100();
}

void ToolParameterValue.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t);
  void (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  sub_23F6B5220();
  v30 = v6;
  sub_23F6B632C();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F72E168();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F7F6400();
  sub_23F8797D8();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_23FB2A0B4();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5268();
  v13 = sub_23FAD6F18();
  sub_23FB29F20(v13, v14);
  v15 = sub_23F6B5164(v2, 1, v11);
  if (v17)
  {
    sub_23F923588(v15, &qword_256EAB768);
    sub_23F6916B8(&qword_256EBEF78);
    v18 = sub_23FB297E0();
    sub_23F77DC54();
    sub_23F6B5AD4();
    *v19 = v18;
    v19[1] = v2;
    v20 = sub_23F77D9E4();
    sub_23FB29B7C(v20, type metadata accessor for TranscriptProtoToolParameterValue);
  }
  else
  {
    sub_23FB2B0CC(v2, v16, type metadata accessor for TranscriptProtoToolParameterValueEnum);
    v21 = sub_23F70D4E8();
    if ((_DWORD)v21 == 1)
    {
      v22 = sub_23F70D554();
      sub_23F75E68C(v22, v23, v24);
      v25 = *(void (**)(uint64_t))(v3 + 16);
      v26 = sub_23F7D29DC();
      v25(v26);
      v27 = sub_23F7D2F98();
      v25(v27);
      sub_23FB2ED2C();
      v28 = sub_23F77E358(v4);
      sub_23FB298E4(v28, type metadata accessor for TranscriptProtoToolParameterValue);
      sub_23F77E358(v0);
      if (!v1)
      {
        type metadata accessor for ToolParameterValue(0);
        sub_23F878B7C();
      }
    }
    else
    {
      sub_23FB298E4(v21, type metadata accessor for TranscriptProtoToolParameterValue);
      v29 = v5[1];
      *v30 = *v5;
      v30[1] = v29;
      type metadata accessor for ToolParameterValue(0);
      sub_23F713F74();
    }
  }
  sub_23F6B6CA0();
  sub_23F6B5100();
}

void sub_23FB1BD94()
{
  Action.ParameterValue.init(transcript:)();
}

uint64_t sub_23FB1BDA8()
{
  return sub_23FAEFE24();
}

void TranscriptProtoActionParameterValue.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_23F6B5220();
  sub_23FAD7414();
  sub_23F6916B8(&qword_256EA2750);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B52B0();
  sub_23F6916B8(&qword_256EA8598);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23F6B5C2C();
  type metadata accessor for ToolParameterValue(v7);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B573C();
  sub_23F6916B8(&qword_256EA84D8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F78F260();
  v11 = type metadata accessor for TranscriptProtoToolParameterValue(v10);
  v12 = sub_23FB298EC(v1, 1, 1, v11);
  v13 = v1 + *(int *)(type metadata accessor for TranscriptProtoActionParameterValue(v12) + 20);
  v14 = type metadata accessor for TranscriptProtoPromptSelection(0);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v13, 1, 1, v14);
  sub_23FAC3074();
  v15 = sub_23FAE2D10();
  sub_23F6F5920(v15, v16, type metadata accessor for ToolParameterValue);
  TranscriptProtoToolParameterValue.init(handwritten:)();
  if (v2)
  {
    sub_23FB297B8(v17, type metadata accessor for Action.ParameterValue);
    sub_23FB297B0(v18, type metadata accessor for TranscriptProtoActionParameterValue);
  }
  else
  {
    sub_23F6B9258(v4, 0);
    sub_23FB29BEC(v4, v19, &qword_256EA84D8);
    v20 = type metadata accessor for Action.ParameterValue(0);
    v21 = sub_23FB2A2A8(v20);
    sub_23FB2A934(v21, v22, &qword_256EA2750);
    sub_23F77CC74();
    sub_23F70D6DC(v0);
    sub_23FB2ADB0(v3, v23, &qword_256EA8598);
  }
  sub_23F877A30();
  sub_23F6B5100();
}

void TranscriptProtoToolParameterValue.init(handwritten:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  sub_23F6B5220();
  v48 = v4;
  v49 = v0;
  v5 = sub_23FB2A058();
  v46 = type metadata accessor for TranscriptProtoToolParameterValue(v5);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  sub_23FB297F4(v7, v42);
  v8 = sub_23FB2EB1C();
  v43 = *(_QWORD *)(v8 - 8);
  v44 = v8;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  sub_23FB29814(v10, v42);
  sub_23FB2ED38();
  sub_23F6B5B70();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23F78F2D0();
  type metadata accessor for ToolParameterValue(v13);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23FB2A0B4();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  v42 = (uint64_t)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B6B3C();
  v18 = sub_23FAD6F18();
  sub_23F6F5920(v18, v19, type metadata accessor for ToolParameterValue);
  sub_23F78F534();
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v30 = v1[1];
    *v3 = *v1;
    v3[1] = v30;
    sub_23F7F64A8();
    sub_23F713F74();
LABEL_6:
    v35 = v47;
    sub_23F77DD6C(v47, 1);
    v36 = sub_23F6F0878();
    sub_23FB2993C(v36, type metadata accessor for ToolParameterValue);
    v37 = v35;
    v38 = v48;
    sub_23FB29B3C(v37, v39, type metadata accessor for TranscriptProtoToolParameterValue);
    sub_23F77E660(v40, &qword_256EAB768);
    sub_23FB29B3C((uint64_t)v3, v41, type metadata accessor for TranscriptProtoToolParameterValueEnum);
    sub_23F77DD6C(v38, 0);
    goto LABEL_7;
  }
  v20 = sub_23F6B6098();
  sub_23F78F5D0(v20, v21, v22);
  v23 = sub_23F7B0E48();
  sub_23F78F5D0(v23, v24, v25);
  sub_23FB2A240();
  if (!v0)
  {
    v31 = *(void (**)(uint64_t))(v2 + 8);
    sub_23FB2B070();
    v32 = v42;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 32))(v42, v45, v44);
    v33 = sub_23F77E46C();
    v31(v33);
    sub_23F878B7C();
    sub_23FB2A318(v32, v34, type metadata accessor for TranscriptProtoToolParameterValueEnum);
    goto LABEL_6;
  }
  v26 = *(uint64_t (**)(uint64_t))(v2 + 8);
  v27 = sub_23F70D554();
  v28 = v26(v27);
  sub_23FB2993C(v28, type metadata accessor for ToolParameterValue);
  v29 = sub_23F77E46C();
  v26(v29);
LABEL_7:
  sub_23F877A30();
  sub_23F6B5100();
}

void sub_23FB1C17C()
{
  TranscriptProtoActionParameterValue.init(handwritten:)();
}

uint64_t sub_23FB1C190()
{
  return ContextRetrieved.init(transcript:)();
}

uint64_t sub_23FB1C1A4()
{
  return sub_23FAEFF50();
}

void sub_23FB1C1BC(_QWORD *a1@<X8>)
{
  TranscriptProtoContextRetrieved.init(handwritten:)(a1);
}

void TranscriptProtoRetrievedContextStatement.init(handwritten:)()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  sub_23F6B5220();
  v5 = v4;
  v7 = sub_23FB2A528(v6);
  v44 = type metadata accessor for TranscriptProtoRetrievedContextStatement(v7);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23FAD6DDC(v9, v43);
  v10 = sub_23FB2DE08();
  v47 = *(_QWORD *)(v10 - 8);
  v48 = v10;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B5BD8(v12, v43);
  sub_23F6916B8(&qword_256EA84C8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  v46 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B58C8();
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F77DD54(v1, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  sub_23FB2C758();
  v19 = sub_23FB29DB4();
  v21 = v20;
  v22 = sub_23FAD69A0();
  sub_23FAC3CEC();
  *(_DWORD *)v18 = v0;
  *((_QWORD *)v18 + 1) = v19;
  *((_QWORD *)v18 + 2) = v21;
  v23 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
  v24 = (uint64_t)v46;
  sub_23F6B563C(v1, v23);
  v25 = sub_23FB298EC((uint64_t)v18, 0, 1, v22);
  v26 = type metadata accessor for RetrievedContextStatement(v25);
  sub_23FB2A030(v26);
  v27 = sub_23FB2A9A4();
  ContextProtoRetrievedContext.init(context:)(v27, v28, v29, v30, v31, v32, v33, v34, v43, v44, SWORD2(v44), SBYTE6(v44), SHIBYTE(v44));
  if (v2)
  {
    sub_23FB297C8(v35, type metadata accessor for RetrievedContextStatement);
    sub_23F77DD64(v36, &qword_256EA25E0);
  }
  else
  {
    v37 = type metadata accessor for ContextProtoRetrievedContext(0);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v24, 0, 1, v37);
    v38 = v45;
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v45, 1, 1, v22);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v38 + *(int *)(v44 + 20), 1, 1, v37);
    sub_23F6F0CB4();
    sub_23FB2A2A0((uint64_t)v18, v39, &qword_256EA25E0);
    sub_23FB29BB0(v24, v40, &qword_256EA84C8);
    sub_23FB2A43C(v38, v41, type metadata accessor for TranscriptProtoRetrievedContextStatement);
    sub_23FB297C8(v42, type metadata accessor for RetrievedContextStatement);
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void sub_23FB1C3EC()
{
  TranscriptProtoRetrievedContextStatement.init(handwritten:)();
}

#error "23FB1C534: call analysis failed (funcsize=99)"

uint64_t sub_23FB1C59C()
{
  return RetrievedContextStatement.init(transcript:)();
}

uint64_t sub_23FB1C5B0()
{
  return sub_23FAF00F4();
}

void TranscriptProtoDynamicEnumerationEntityStatement.init(handwritten:)()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  sub_23F6B5220();
  v5 = v4;
  v7 = sub_23FB2A528(v6);
  v44 = type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement(v7);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23FAD6DDC(v9, v43);
  v10 = sub_23FB2E2DC();
  v47 = *(_QWORD *)(v10 - 8);
  v48 = v10;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B5BD8(v12, v43);
  sub_23F6916B8(&qword_256EA84B8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  v46 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B58C8();
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F77DD54(v1, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  sub_23FB2C758();
  v19 = sub_23FB29DB4();
  v21 = v20;
  v22 = sub_23FAD69A0();
  sub_23FAC3CEC();
  *(_DWORD *)v18 = v0;
  *((_QWORD *)v18 + 1) = v19;
  *((_QWORD *)v18 + 2) = v21;
  v23 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
  v24 = (uint64_t)v46;
  sub_23F6B563C(v1, v23);
  v25 = sub_23FB298EC((uint64_t)v18, 0, 1, v22);
  v26 = type metadata accessor for DynamicEnumerationEntityStatement(v25);
  sub_23FB2A030(v26);
  v27 = sub_23FB2A9A4();
  ContextProtoDynamicEnumerationEntity.init(handwritten:)(v27, v28, v29, v30, v31, v32, v33, v34, v43, v44);
  if (v2)
  {
    sub_23FB297C8(v35, type metadata accessor for DynamicEnumerationEntityStatement);
    sub_23F77DD64(v36, &qword_256EA25E0);
  }
  else
  {
    v37 = type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v24, 0, 1, v37);
    v38 = v45;
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v45, 1, 1, v22);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v38 + *(int *)(v44 + 20), 1, 1, v37);
    sub_23F6F0CB4();
    sub_23FB2A2A0((uint64_t)v18, v39, &qword_256EA25E0);
    sub_23FB29BB0(v24, v40, &qword_256EA84B8);
    sub_23FB2A43C(v38, v41, type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement);
    sub_23FB297C8(v42, type metadata accessor for DynamicEnumerationEntityStatement);
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void sub_23FB1C7E0()
{
  TranscriptProtoDynamicEnumerationEntityStatement.init(handwritten:)();
}

void DynamicEnumerationEntityStatement.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23[3];
  uint64_t v24;
  uint64_t v25;

  sub_23F6B5220();
  v6 = sub_23FB29B20(v5);
  type metadata accessor for ContextProtoDynamicEnumerationEntity(v6);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23FB29AC8(v8, v23[0]);
  v9 = sub_23FB2E2DC();
  sub_23F70D9A8();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FAD69A0();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (unsigned int *)((char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23F6B58C8();
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v16);
  sub_23FB29E7C();
  if (v0)
  {
    sub_23FB297C0(v17, type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement);
  }
  else
  {
    v23[2] = (uint64_t)v12;
    v24 = v1;
    v23[0] = v3;
    v23[1] = v9;
    v18 = *v15;
    sub_23F6B6548();
    v19 = sub_23FB29960();
    sub_23FB297B8(v19, type metadata accessor for TranscriptProtoStatementID);
    type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement(0);
    sub_23FB2AAA4();
    sub_23F77BDE4();
    if (v18)
    {
      sub_23FB297A8(v20, type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement);
      sub_23FB29DD4(v4, *(uint64_t (**)(uint64_t, _QWORD))(v24 + 8));
    }
    else
    {
      sub_23FB2AD68();
      DynamicEnumerationEntity.init(transcript:)();
      v21 = v24;
      sub_23F6F8C88(v2, type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement);
      sub_23F75E710(v25, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 32));
      v22 = type metadata accessor for DynamicEnumerationEntityStatement(0);
      sub_23FB2A2B4(v22);
    }
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void sub_23FB1C990()
{
  DynamicEnumerationEntityStatement.init(transcript:)();
}

uint64_t sub_23FB1C9A4()
{
  return sub_23FAF0220();
}

void sub_23FB1C9B8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  EntitySpanMatchResult.init(transcript:)(a1, a2);
}

#error "23FB1C9F8: call analysis failed (funcsize=10)"

void sub_23FB1CA04(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  TranscriptProtoEntitySpanMatchResult.init(handwritten:)(a1, a2);
}

void ExecutorError.init(transcript:)()
{
  sub_23FB1CBAC();
}

void SessionCoordinatorError.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_23F6B5220();
  v3 = sub_23F6F0920();
  type metadata accessor for TranscriptProtoIntelligenceFlowError(v3);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_23FAC3D30();
  type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(v6);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23FB2A734();
  sub_23F77BB7C();
  if (v0)
  {
    sub_23FB297A8(v8, type metadata accessor for TranscriptProtoSessionCoordinatorError);
  }
  else
  {
    sub_23FB2AF1C();
    v9 = sub_23FB2A28C();
    sub_23F77DC98(v9, v10);
    v11 = sub_23F7B0BC4();
    sub_23F70D654(v11, v12);
    objc_allocWithZone(MEMORY[0x24BDD1540]);
    sub_23F77E584();
    sub_23FB2AB5C();
    sub_23FB1F3FC(v13, v14, v15, 0);
    sub_23FB2C704();
    sub_23F70D6DC(v2);
    sub_23FB297A8(v16, type metadata accessor for TranscriptProtoSessionCoordinatorError);
    sub_23F70D6DC(v1);
    type metadata accessor for SessionCoordinatorError();
    sub_23F713E50();
    swift_storeEnumTagMultiPayload();
  }
  sub_23F876B60();
  sub_23F6B5100();
}

void PlannerError.init(transcript:)()
{
  sub_23FB1CBAC();
}

void sub_23FB1CBAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t (*v8)(uint64_t);
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_23F6B5220();
  v33 = v1;
  v34 = v4;
  v31 = v5;
  v32 = v6;
  v8 = v7;
  v10 = v9;
  v11 = sub_23FB2AC2C();
  v12 = type metadata accessor for TranscriptProtoIntelligenceFlowError(v11);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B5CD4();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B62F8();
  sub_23F6916B8(v10);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  v16 = sub_23F7A00C8();
  v17 = v8(v16);
  sub_23FAC3E6C();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v31 - v19;
  v21 = sub_23F7D2958();
  sub_23F6B4F58(v21, v22, v10);
  sub_23F6B5164(v0, 1, v17);
  if (v26)
  {
    v23 = sub_23F7D2F98();
    sub_23F6B4F84(v23, v24);
    sub_23F6916B8(v31);
    sub_23FB297E0();
    sub_23F77DA84();
    sub_23F6B5AD4();
    *v25 = v0;
    v25[1] = v17;
    sub_23F77D9E4();
    sub_23FB2A6B8();
  }
  else
  {
    sub_23F6F594C(v0, (uint64_t)v20, v8);
    sub_23F6B5164((uint64_t)v20, 1, v12);
    if (v26)
    {
      sub_23FB2A6B8();
      v28 = 1;
      v27 = v32;
    }
    else
    {
      sub_23F77E2AC((uint64_t)v20, v2);
      sub_23F77DC5C(v2, v3);
      objc_allocWithZone(MEMORY[0x24BDD1540]);
      sub_23F6B5F1C();
      sub_23FB2A380();
      v27 = v32;
      sub_23FB2C704();
      sub_23F70D63C(v3);
      sub_23FB2A6B8();
      sub_23F70D63C(v2);
      v28 = 0;
    }
    v29 = sub_23FB2C6F8();
    sub_23F78F2E4(v27, v28, v30, v29);
  }
  sub_23F876FC4();
  sub_23F6B5100();
}

void sub_23FB1CD64()
{
  SessionError.init(transcript:)();
}

void TranscriptProtoSessionCoordinatorError.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_23F6B50E8();
  v6 = v5;
  v8 = sub_23FB29ABC(v7);
  type metadata accessor for TranscriptProtoSessionCoordinatorError(v8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  sub_23FB29F94(v10, v24);
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v11);
  sub_23FAC396C();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F923B4C();
  type metadata accessor for SessionCoordinatorError();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  v14 = sub_23F77E1CC();
  type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(v14);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B6618();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B6B3C();
  v17 = sub_23F6B6AB8();
  sub_23F6F5920(v17, v18, (uint64_t (*)(_QWORD))type metadata accessor for SessionCoordinatorError);
  sub_23F7D24F0();
  swift_getEnumCaseMultiPayload();
  sub_23F78F5D0(v3, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 32));
  sub_23F78F5D0(v2, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16));
  TranscriptProtoIntelligenceFlowError.init(handwritten:)();
  v19 = sub_23F6B6F08();
  v20(v19);
  sub_23F6B7194();
  swift_storeEnumTagMultiPayload();
  v21 = sub_23F879688();
  sub_23F77DC98(v21, v22);
  sub_23F7D2ED8(v25, 1);
  sub_23F6F0878();
  sub_23F6F8C88(v6, (uint64_t (*)(_QWORD))type metadata accessor for SessionCoordinatorError);
  sub_23F6F594C(v25, v26, type metadata accessor for TranscriptProtoSessionCoordinatorError);
  sub_23F77E660(v23, &qword_256EA84A8);
  sub_23F77DC98(v4, v26);
  sub_23F7D2ED8(v26, 0);
  sub_23F693DDC();
}

void TranscriptProtoPlannerError.init(handwritten:)()
{
  sub_23FB1CF50();
}

void TranscriptProtoExecutorError.init(handwritten:)()
{
  sub_23FB1CF50();
}

void sub_23FB1CF50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  uint64_t *v4;
  uint64_t (*v5)(uint64_t);
  uint64_t (*v6)(uint64_t);
  void (*v7)(uint64_t);
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50[3];
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t);
  uint64_t (*v54)(_QWORD);
  uint64_t *v55;

  sub_23F6B50E8();
  v54 = v3;
  v55 = v4;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = sub_23FB29ED4(v11);
  v50[2] = v13(v12);
  sub_23FAC3E6C();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v50 - v15;
  v17 = sub_23FB2C6F8();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B5C80();
  MEMORY[0x24BDAC7A8](v19);
  v20 = sub_23FAC3D30();
  v8(v20);
  sub_23FAC3E6C();
  MEMORY[0x24BDAC7A8](v21);
  v22 = sub_23FB299D0();
  v50[1] = (uint64_t)v6;
  v50[0] = v6(v22);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F77DC18();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6B6B3C();
  v51 = v10;
  v25 = sub_23F6D3D70();
  v53 = v8;
  sub_23F77DC5C(v25, v26);
  v27 = sub_23F77E3D0();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v27, v28, v17) == 1)
  {
    sub_23FB2B0DC();
    v29 = sub_23FB29C44();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, v30, v31, v32);
  }
  else
  {
    v33 = sub_23F7E7898();
    sub_23F72E0C8(v33, v34, v35);
    v36 = sub_23F78F534();
    sub_23F72E0C8(v36, v37, v38);
    sub_23FB2AA68();
    TranscriptProtoIntelligenceFlowError.init(handwritten:)();
    sub_23F78F1E4(v1, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    sub_23FB2B0DC();
    sub_23F73200C();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v39, v40, v41, v42);
    v43 = sub_23F77E19C();
    sub_23F77DC98(v43, v44);
  }
  sub_23F693EC8();
  v45 = v50[0];
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v46, v47, v48, v50[0]);
  sub_23FB2AD04();
  sub_23F77E628();
  sub_23F6F8C88(v51, (uint64_t (*)(_QWORD))v53);
  v49 = v52;
  sub_23F6F594C((uint64_t)v16, v52, v54);
  sub_23F6B4F84(v49, v55);
  sub_23F77DC98(v2, v49);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v49, 0, 1, v45);
  sub_23F693DDC();
}

void sub_23FB1D11C()
{
  TranscriptProtoSessionError.init(handwritten:)();
}

void sub_23FB1D140()
{
  SessionCoordinatorError.init(transcript:)();
}

void sub_23FB1D154()
{
  TranscriptProtoSessionCoordinatorError.init(handwritten:)();
}

void sub_23FB1D178()
{
  ExecutorError.init(transcript:)();
}

void sub_23FB1D18C()
{
  TranscriptProtoExecutorError.init(handwritten:)();
}

void sub_23FB1D1B0()
{
  PlannerError.init(transcript:)();
}

void sub_23FB1D1C4()
{
  TranscriptProtoPlannerError.init(handwritten:)();
}

void sub_23FB1D1E8(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  ToolRetrievalResponse.init(transcript:)(a1, a2);
}

uint64_t sub_23FB1D1FC()
{
  return sub_23FAF034C();
}

void sub_23FB1D23C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  TranscriptProtoToolRetrievalResponse.init(handwritten:)(a1, a2);
}

void sub_23FB1D250()
{
  ToolParameterValue.init(transcript:)();
}

uint64_t sub_23FB1D264()
{
  return sub_23FAF0450();
}

void sub_23FB1D278()
{
  TranscriptProtoToolParameterValue.init(handwritten:)();
}

void sub_23FB1D28C()
{
  ExternalAgentTextQuery.init(transcript:)();
}

uint64_t sub_23FB1D2A0()
{
  return sub_23FAF057C();
}

void sub_23FB1D2B4()
{
  TranscriptProtoExternalAgentTextQuery.init(handwritten:)();
}

void sub_23FB1D2C8()
{
  ExternalAgentSpeechQuery.init(transcript:)();
}

uint64_t sub_23FB1D2DC()
{
  return sub_23FAF06A8();
}

void sub_23FB1D2F0()
{
  TranscriptProtoExternalAgentSpeechQuery.init(handwritten:)();
}

void sub_23FB1D304()
{
  ExternalAgentOutcome.init(transcript:)();
}

uint64_t sub_23FB1D318()
{
  return sub_23FAF07D4();
}

uint64_t sub_23FB1D32C(uint64_t a1)
{
  return TranscriptProtoExternalAgentOutcome.init(handwritten:)(a1);
}

void sub_23FB1D340(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  ExternalAgentRequestRewriteMetadata.init(transcript:)(a1, a2);
}

uint64_t sub_23FB1D354()
{
  uint64_t *v0;

  return sub_23FAF0900(*v0, v0[1], v0[2]);
}

void sub_23FB1D370()
{
  TranscriptProtoExternalAgentRequestRewriteMetadata.init(handwritten:)();
}

void ActionSuccess.UndoContext.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F6D3EA4();
  sub_23F72E034();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F693EB0();
  sub_23F6B6F00();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F6B59E0();
  sub_23FB2C47C();
  sub_23F77B568();
  sub_23F92470C();
  if (!v0)
  {
    sub_23F77DCD4();
    sub_23F77E600();
    sub_23FB2A250();
    v3 = sub_23FB2C83C();
  }
  sub_23FB297B8(v3, type metadata accessor for TranscriptProtoUndoContext);
  sub_23F6D3750();
}

void sub_23FB1D448()
{
  ActionSuccess.UndoContext.init(transcript:)();
}

uint64_t sub_23FB1D45C()
{
  return sub_23FAF0A00();
}

void TranscriptProtoUndoContext.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F6B5220();
  v3 = v2;
  v4 = sub_23F72E034();
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F878580();
  sub_23FB2C830();
  v6 = sub_23FB2C488();
  v8 = v7;
  sub_23F6B563C(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23FB2C818();
  sub_23FB2A124();
  v9 = sub_23FB2C824();
  v11 = v10;
  type metadata accessor for TranscriptProtoUndoContext(0);
  sub_23FAC3044();
  *v3 = v6;
  v3[1] = v8;
  v3[2] = v4;
  v3[3] = v0;
  v3[4] = v9;
  v3[5] = v11;
  v12 = sub_23FB2C848();
  sub_23FB29C9C(*(_QWORD *)(v12 - 8));
  sub_23F77DB18();
  sub_23F6B5100();
}

void sub_23FB1D528()
{
  TranscriptProtoUndoContext.init(handwritten:)();
}

void sub_23FB1D53C()
{
  ToolResolution.init(transcript:)();
}

void ClientAction.ShimParameterResolution.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t);
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;

  sub_23F6B5220();
  v8 = v7;
  v63 = v9;
  v10 = sub_23F6B6634();
  v59 = *(_QWORD *)(v10 - 8);
  v60 = v10;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  v61 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F6D398C();
  v62 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(v13);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  v65 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v16);
  v66 = (uint64_t)&v55 - v17;
  v64 = sub_23F6B632C();
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B5C9C();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F70D958();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F876D18();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F9231E0();
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v55 - v23;
  v25 = sub_23FB29970();
  type metadata accessor for TranscriptProtoShimParameterResolutionEnum(v25);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v26);
  sub_23FB2A3D8();
  sub_23F77BB50();
  if (v0)
  {
    sub_23FB297B0(v27, type metadata accessor for TranscriptProtoShimParameterResolution);
  }
  else
  {
    v56 = v3;
    v57 = v2;
    v29 = (uint64_t)v65;
    v28 = v66;
    v58 = v8;
    sub_23F7A1280();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F77DC98(v4, v28);
      sub_23F70D654(v28, v29);
      sub_23FB2A460();
      v30 = sub_23F7D24F0();
      sub_23F759774(v30, v31, v32);
      sub_23FB2ED2C();
      sub_23F6B56E0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
      v41 = sub_23FB2A298();
      sub_23F7729B8(v41, v42, v43, v44, v45, v46, v47, v48, v55, v56);
      v50 = v49;
      sub_23F70D6DC(v29);
      v51 = v63;
      v52 = sub_23F72E2E0();
      v53(v52);
      v54 = type metadata accessor for ClientAction.UnresolvedParameterValue(0);
      *(_QWORD *)(v51 + *(int *)(v54 + 20)) = v50;
      sub_23FB2AF4C(v54, type metadata accessor for TranscriptProtoShimParameterResolution);
      sub_23F70D6DC(v66);
    }
    else
    {
      v33 = (uint64_t)v24;
      v34 = sub_23F77E668();
      v35 = v64;
      sub_23F6D3ECC(v34, v36, v37);
      v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      v38(v5, v33, v35);
      v39 = sub_23F77E46C();
      ((void (*)(uint64_t))v38)(v39);
      sub_23FB2ED2C();
      v40 = sub_23F6D39FC(v5);
      sub_23FB2AF4C(v40, type metadata accessor for TranscriptProtoShimParameterResolution);
      sub_23F6D39FC(v33);
    }
    type metadata accessor for ClientAction.ShimParameterResolution(0);
    swift_storeEnumTagMultiPayload();
  }
  sub_23F876B60();
  sub_23F6B5100();
}

void ClientAction.UnresolvedParameterValue.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_23F6B5220();
  v28 = v4;
  sub_23F6B632C();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v27 - v7;
  sub_23F6B6634();
  sub_23F6B59A0();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F7A00C8();
  type metadata accessor for TranscriptProtoUnresolvedParameterValue(v10);
  sub_23F77B844();
  if (v1)
  {
    sub_23FB297C0(v11, type metadata accessor for TranscriptProtoUnresolvedParameterValue);
  }
  else
  {
    v12 = sub_23F6D3D70();
    sub_23F6B5EF0(v12, v13, v14);
    sub_23FB29DE4();
    sub_23F70D728((uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    v15 = sub_23FB2A298();
    sub_23F7729B8(v15, v16, v17, v18, v19, v20, v21, v22, v27, v28);
    v24 = v23;
    sub_23FB297C0(v23, type metadata accessor for TranscriptProtoUnresolvedParameterValue);
    v25 = v0;
    v26 = v28;
    sub_23F77DB9C(v28, v25, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
    *(_QWORD *)(v26 + *(int *)(type metadata accessor for ClientAction.UnresolvedParameterValue(0) + 20)) = v24;
  }
  sub_23F8778A8();
  sub_23F6B5100();
}

void sub_23FB1DA04()
{
  ClientAction.ShimParameterResolution.init(transcript:)();
}

uint64_t sub_23FB1DA18()
{
  return sub_23FAF0BD8();
}

void TranscriptProtoShimParameterResolution.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[4];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  sub_23F6B5220();
  v6 = sub_23FB29C54();
  type metadata accessor for ClientAction.UnresolvedParameterValue(v6);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  v43 = (uint64_t)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v9);
  v44 = (uint64_t)v42 - v10;
  v11 = sub_23F6B632C();
  v42[1] = *(_QWORD *)(v11 - 8);
  v42[2] = v11;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23FB297F4(v13, v42[0]);
  sub_23FB2ED38();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F77DC18();
  MEMORY[0x24BDAC7A8](v15);
  v16 = sub_23FB2997C();
  type metadata accessor for ClientAction.ShimParameterResolution(v16);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B5298();
  sub_23F6916B8(&qword_256EA2688);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  v19 = sub_23F70D7F8();
  type metadata accessor for TranscriptProtoShimParameterResolutionEnum(v19);
  sub_23F693EC8();
  v42[3] = v20;
  v24 = sub_23FB298EC(v21, v22, v23, v20);
  type metadata accessor for TranscriptProtoShimParameterResolution(v24);
  v45 = v3;
  sub_23F6F0BB0();
  v25 = sub_23F7D29DC();
  sub_23F6F5920(v25, v26, type metadata accessor for ClientAction.ShimParameterResolution);
  sub_23F77E668();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v27 = v0;
    v28 = v44;
    sub_23F77DC98(v27, v44);
    sub_23F70D654(v28, v43);
    TranscriptProtoUnresolvedParameterValue.init(handwritten:)();
    sub_23FB297C0(v29, type metadata accessor for ClientAction.ShimParameterResolution);
    sub_23F70D6DC(v28);
    if (!v2)
      goto LABEL_8;
  }
  else
  {
    v31 = sub_23F8783DC();
    sub_23F6B5EF0(v31, v32, v33);
    v34 = sub_23FB2A18C();
    sub_23F6B5EF0(v34, v5, v35);
    sub_23FB2A458();
    if (!v2)
    {
      sub_23FB2A00C(v1);
      v37 = sub_23FB2A28C();
      v39 = v38(v37);
      sub_23FB298A0(v39, type metadata accessor for ClientAction.ShimParameterResolution);
      sub_23FB2A00C(v5);
LABEL_8:
      swift_storeEnumTagMultiPayload();
      v40 = sub_23F7A690C(v4, 0);
      sub_23FB2AF10(v40, v41, &qword_256EA2688);
      goto LABEL_9;
    }
    v36 = sub_23FB2A00C(v1);
    sub_23FB298A0(v36, type metadata accessor for ClientAction.ShimParameterResolution);
    v30 = sub_23FB2A00C(v5);
  }
  sub_23FB29B7C(v30, type metadata accessor for TranscriptProtoShimParameterResolution);
LABEL_9:
  sub_23F876FC4();
  sub_23F6B5100();
}

void TranscriptProtoUnresolvedParameterValue.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_23F6B5220();
  v5 = v4;
  v7 = sub_23FB29B20(v6);
  v29 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(v7);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v30 = sub_23F6B632C();
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B6634();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA2610);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23FB2A18C();
  sub_23F6B633C(v18, v5, v19);
  sub_23FB2A458();
  if (v1)
  {
    v20 = sub_23F6B530C(v0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }
  else
  {
    sub_23F6B530C(v0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    v21 = (uint64_t)v13;
    v22 = v30;
    sub_23F77DB9C((uint64_t)v17, v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
    v23 = sub_23FB298EC((uint64_t)v17, 0, 1, v22);
    type metadata accessor for ClientAction.UnresolvedParameterValue(v23);
    v24 = swift_bridgeObjectRetain();
    v25 = sub_23FAF1BE8(v24);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v10 + *(int *)(v29 + 20), 1, 1, v22);
    sub_23F6F0878();
    sub_23FB29BB0((uint64_t)v17, v26, &qword_256EA2610);
    *v10 = v25;
    sub_23FB29DDC((uint64_t)v10, v27, type metadata accessor for TranscriptProtoUnresolvedParameterValue);
  }
  sub_23FB298E4(v20, type metadata accessor for ClientAction.UnresolvedParameterValue);
  sub_23F8785C4();
  sub_23F6B5100();
}

void sub_23FB1DE5C()
{
  TranscriptProtoShimParameterResolution.init(handwritten:)();
}

void sub_23FB1DE70()
{
  ClientAction.UnresolvedParameterValue.init(transcript:)();
}

uint64_t sub_23FB1DE84()
{
  return sub_23FAF0D04();
}

void sub_23FB1DE98()
{
  TranscriptProtoToolResolution.init(handwritten:)();
}

void sub_23FB1DEAC()
{
  TranscriptProtoUnresolvedParameterValue.init(handwritten:)();
}

void sub_23FB1DEC0()
{
  TranscriptProtoValueDisambiguation.init(handwritten:)();
}

void ValueDisambiguation.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23FB2B09C();
  v1 = sub_23FB2A7DC();
  sub_23F7729B8(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11);
  if (!v0)
    v9 = sub_23FB2C9EC();
  sub_23FB297B8(v9, type metadata accessor for TranscriptProtoValueDisambiguation);
  sub_23FAD6A50();
}

void sub_23FB1DF18()
{
  ValueDisambiguation.init(transcript:)();
}

char *sub_23FB1DF2C()
{
  return sub_23FAF0E30();
}

void TranscriptProtoActionFailureFailure.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  void (*v36)(uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_23F6B5220();
  sub_23FB29D30();
  v6 = sub_23FB2C7C4();
  v41 = *(_QWORD *)(v6 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F77DC18();
  v9 = MEMORY[0x24BDAC7A8](v8);
  sub_23F6D3910(v9, v10, v11, v12, v13, v14, v15, v16, v39);
  v17 = sub_23FB2C788();
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA7FE8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v19);
  v20 = sub_23F78F260();
  v21 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(v20);
  v22 = sub_23FB298EC(v3, 1, 1, v21);
  type metadata accessor for TranscriptProtoActionFailureFailure(v22);
  sub_23FAC3044();
  sub_23F78F5D0(v4, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16));
  v23 = sub_23F878A5C();
  v25 = v24(v23);
  if (v25 == *MEMORY[0x24BE522B0])
  {
    sub_23F6B6420(v4, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 96));
    sub_23F77DB9C(v42, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 32));
    sub_23F77DB9C(v1, v42, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 16));
    v40 = sub_23FAC3F0C();
    sub_23FAC3DD4();
    *v5 = sub_23FB2C7A0();
    v5[1] = v26;
    v5[2] = sub_23FB2C7B8();
    v5[3] = v27;
    v28 = sub_23FB2C7AC();
    v29 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
    v29(v1, v6);
    v5[4] = v28;
    sub_23F6B6420(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    v29(v42, v6);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v5, 0, 16, v40);
  }
  else
  {
    if (v25 == *MEMORY[0x24BE52248])
    {
      sub_23F6B6420(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
      sub_23FAC3F0C();
      v30 = sub_23F77E3D0();
    }
    else if (v25 == *MEMORY[0x24BE522B8])
    {
      sub_23FB299C4();
      sub_23FAC3F0C();
      v30 = sub_23FB29BC8();
      v31 = 2;
    }
    else if (v25 == *MEMORY[0x24BE52298])
    {
      sub_23FB299C4();
      sub_23FAC3F0C();
      v30 = sub_23FB29BC8();
      v31 = 3;
    }
    else if (v25 == *MEMORY[0x24BE52268])
    {
      sub_23FB299C4();
      sub_23FAC3F0C();
      v30 = sub_23FB29BC8();
      v31 = 4;
    }
    else if (v25 == *MEMORY[0x24BE522A0])
    {
      sub_23FB299C4();
      sub_23FAC3F0C();
      v30 = sub_23FB29BC8();
      v31 = 5;
    }
    else if (v25 == *MEMORY[0x24BE52250])
    {
      sub_23FB299C4();
      sub_23FAC3F0C();
      v30 = sub_23FB29BC8();
      v31 = 6;
    }
    else if (v25 == *MEMORY[0x24BE52258])
    {
      sub_23FB299C4();
      sub_23FAC3F0C();
      v30 = sub_23FB29BC8();
      v31 = 7;
    }
    else if (v25 == *MEMORY[0x24BE522A8])
    {
      sub_23FB299C4();
      sub_23FAC3F0C();
      v30 = sub_23FB29BC8();
      v31 = 8;
    }
    else if (v25 == *MEMORY[0x24BE522C0])
    {
      sub_23FB299C4();
      sub_23FAC3F0C();
      v30 = sub_23FB29BC8();
      v31 = 9;
    }
    else if (v25 == *MEMORY[0x24BE52278])
    {
      sub_23FB299C4();
      sub_23FAC3F0C();
      v30 = sub_23FB29BC8();
      v31 = 10;
    }
    else if (v25 == *MEMORY[0x24BE52290])
    {
      sub_23FB299C4();
      sub_23FAC3F0C();
      v30 = sub_23FB29BC8();
      v31 = 11;
    }
    else if (v25 == *MEMORY[0x24BE522C8])
    {
      sub_23FB299C4();
      sub_23FAC3F0C();
      v30 = sub_23FB29BC8();
      v31 = 14;
    }
    else if (v25 == *MEMORY[0x24BE52280])
    {
      sub_23FB299C4();
      sub_23FAC3F0C();
      v30 = sub_23FB29BC8();
      v31 = 15;
    }
    else if (v25 == *MEMORY[0x24BE52260])
    {
      sub_23F6B6420(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
      sub_23FAC3F0C();
      v30 = sub_23FB29BC8();
      v31 = 12;
    }
    else if (v25 == *MEMORY[0x24BE52270])
    {
      sub_23F6B6420(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
      sub_23FAC3F0C();
      v30 = sub_23FB29BC8();
      v31 = 13;
    }
    else
    {
      if (v25 != *MEMORY[0x24BE52288])
      {
        sub_23F779AF8();
        sub_23F6B5AD4();
        *v35 = 0;
        sub_23F77D9E4();
        v36 = *(void (**)(uint64_t))(v0 + 8);
        v37 = sub_23F6D3F0C();
        v36(v37);
        v38 = ((uint64_t (*)(uint64_t, uint64_t))v36)(v4, v17);
        sub_23FB297B8(v38, type metadata accessor for TranscriptProtoActionFailureFailure);
        goto LABEL_31;
      }
      sub_23F6B6420(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
      sub_23FAC3F0C();
      v30 = sub_23FB29BC8();
      v31 = 16;
    }
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v30, v31, 16, v32);
  }
  v33 = sub_23F77DD78((uint64_t)v5, 0);
  sub_23FB2A540(v33, v34, &qword_256EA7FE8);
LABEL_31:
  sub_23F877A30();
  sub_23F6B5100();
}

void sub_23FB1E424()
{
  TranscriptProtoActionFailure.init(handwritten:)();
}

void ActionFailure.Failure.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD);
  char *v19;

  sub_23F6B5220();
  sub_23FB2A3F8();
  v3 = sub_23FAC3F0C();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B5C9C();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F878D94();
  sub_23F8797D8();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23F70D7F8();
  v8 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(v7);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23FB2A788();
  sub_23FB29F20(v10, v2);
  v11 = sub_23F6B5164(v2, 1, v8);
  if (!v12)
  {
    v16 = sub_23F6D3D70();
    sub_23F6F594C(v16, v17, v18);
    v19 = (char *)&loc_23FB1E56C
        + 4
        * byte_23FB92C7B[_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v1, 16, v3)];
    __asm { BR              X10 }
  }
  sub_23F77DD64(v11, &qword_256EA7FE8);
  sub_23F6916B8(&qword_256EBEF90);
  v13 = sub_23FB297E0();
  sub_23FB29C94();
  sub_23F6B5AD4();
  *v14 = v13;
  v14[1] = v0;
  v15 = sub_23F77D9E4();
  sub_23FB297A8(v15, type metadata accessor for TranscriptProtoActionFailureFailure);
  sub_23F77DB18();
  sub_23F6B5100();
}

void sub_23FB1E784()
{
  ActionFailure.init(transcript:)();
}

uint64_t sub_23FB1E798()
{
  return sub_23FAF0F9C();
}

void ActionFailure.DeveloperDefinedError.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F6D3EA4();
  sub_23F6B6548();
  sub_23F6B90D8();
  v0 = sub_23F6B6AAC();
  v1 = MEMORY[0x242671418](v0);
  sub_23FB297B0(v1, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
  sub_23F6D3750();
}

void sub_23FB1E810()
{
  ActionFailure.Failure.init(transcript:)();
}

void TranscriptProtoActionFailureDeveloperDefinedError.init(handwritten:)(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FAC3F0C();
  sub_23F6F0BB0();
  *a1 = sub_23FB2C7A0();
  a1[1] = v3;
  a1[2] = sub_23FB2C7B8();
  a1[3] = v4;
  sub_23FB2C7AC();
  sub_23FB2AC2C();
  v5 = sub_23FB2C7C4();
  sub_23F78F1B0(v5);
  a1[4] = v1;
  sub_23F6D3C2C();
}

void sub_23FB1E87C()
{
  TranscriptProtoActionFailureFailure.init(handwritten:)();
}

void sub_23FB1E890()
{
  UndoRedoRequest.init(transcript:)();
}

void sub_23FB1E8A4()
{
  TranscriptProtoUndoRedoRequest.init(handwritten:)();
}

void sub_23FB1E8B8()
{
  ClientUndoRedoRequest.init(transcript:)();
}

void sub_23FB1E8CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  TranscriptProtoClientUndoRedoRequest.init(handwritten:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23FB1E8E0(unsigned __int8 *a1)
{
  AppRequirement.init(transcript:)(a1);
}

void sub_23FB1E8F4(uint64_t a1)
{
  TranscriptProtoAppRequirement.init(handwritten:)(a1);
}

void sub_23FB1E908(unsigned __int8 *a1)
{
  PermissionRequirement.init(transcript:)(a1);
}

void sub_23FB1E91C(uint64_t a1)
{
  TranscriptProtoPermissionRequirement.init(handwritten:)(a1);
}

void sub_23FB1E930(char *a1@<X0>, _BYTE *a2@<X8>)
{
  char v2;

  v2 = *a1;
  TranscriptProtoSystemPromptResolutionRequirementResolution.init(handwritten:)(&v2, a2);
}

void sub_23FB1E960(char *a1@<X0>, _BYTE *a2@<X8>)
{
  RequestContent.SystemPromptResolution.RequirementResolution.init(transcript:)(a1, a2);
}

uint64_t sub_23FB1E974()
{
  char *v0;

  return sub_23FAF10D0(*v0);
}

void sub_23FB1E98C(uint64_t a1)
{
  RequestContent.SystemPromptResolution.ActionCancellation.init(transcript:)(a1);
}

void sub_23FB1E9A0()
{
  sub_23FAE9BB0();
}

void sub_23FB1E9CC(uint64_t a1)
{
  AST.Builtin.NoMatchingTool.init(transcript:)(a1);
}

void sub_23FB1E9E0()
{
  sub_23FAE9BB0();
}

void sub_23FB1EA0C()
{
  TranscriptProtoTypeConversionRequest.init(handwritten:)();
}

void sub_23FB1EA20()
{
  TypeConversionRequest.init(transcript:)();
}

uint64_t sub_23FB1EA34()
{
  return sub_23FAF11A8();
}

void sub_23FB1EA48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  TranscriptProtoTypeConversionResult.init(handwritten:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23FB1EA5C()
{
  TranscriptProtoQueryDecorationResult.init(handwritten:)();
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayload.init(handwritten:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F6B5220();
  v2 = v1;
  v3 = sub_23F6F0920();
  type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(v3);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_23F6B5C2C();
  type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(v5);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B5CD4();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6B5F6C();
  v8 = *(unsigned __int8 *)(v2 + 8);
  sub_23FB298A8(v0, 1);
  v9 = sub_23F6F0878();
  return ((uint64_t (*)(uint64_t))((char *)sub_23FB1EB0C + 4 * byte_23FB92C8C[v8]))(v9);
}

void sub_23FB1EB0C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
  sub_23FAC3DD4();
  *v1 = v2;
  sub_23F7A1280();
  swift_storeEnumTagMultiPayload();
  sub_23FAD7260((uint64_t)v1, v0);
  MEMORY[0x24BDAC7A8](v3);
  sub_23FB29654(&qword_256EB3B00, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
  sub_23FB2D910();
  v4 = sub_23F70D554();
  sub_23F6F8C88(v4, v5);
  sub_23FB29DEC(v0);
  v6 = sub_23F7D2958();
  sub_23F6F594C(v6, v7, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
  sub_23F876FC4();
  sub_23F6B5100();
}

void sub_23FB1ECEC()
{
  TranscriptProtoQueryDecorationPrePlannerResult.init(handwritten:)();
}

void TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant.init(handwritten:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = sub_23FB29C54();
  type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(v3);
  sub_23F6F0BB0();
  *v1 = a1;
  sub_23FAD6A50();
}

void sub_23FB1ED38(uint64_t *a1)
{
  TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant.init(handwritten:)(*a1);
}

void TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant.init(handwritten:)(uint64_t *a1@<X8>)
{
  sub_23FB1EE64((uint64_t (*)(void))sub_23FAF1BE8, a1);
}

void sub_23FB1ED74(uint64_t *a1@<X8>)
{
  TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant.init(handwritten:)(a1);
}

void TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant.init(handwritten:)(uint64_t *a1@<X8>)
{
  sub_23FB1EE64((uint64_t (*)(void))sub_23FAC5A58, a1);
}

void sub_23FB1EDB0(uint64_t *a1@<X8>)
{
  TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant.init(handwritten:)(a1);
}

void TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant.init(handwritten:)(uint64_t *a1@<X8>)
{
  sub_23FB1EE64((uint64_t (*)(void))sub_23FACBC98, a1);
}

void sub_23FB1EDEC(uint64_t *a1@<X8>)
{
  TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant.init(handwritten:)(a1);
}

void TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant.init(handwritten:)(uint64_t *a1@<X8>)
{
  sub_23FB1EE64((uint64_t (*)(void))sub_23FACC44C, a1);
}

void sub_23FB1EE28(uint64_t *a1@<X8>)
{
  TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant.init(handwritten:)(a1);
}

void TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant.init(handwritten:)(uint64_t *a1@<X8>)
{
  sub_23FB1EE64((uint64_t (*)(void))sub_23FACC480, a1);
}

void sub_23FB1EE64(uint64_t (*a1)(void)@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = a1();
  if (!v2)
  {
    v5 = v4;
    sub_23F879A30();
    sub_23F6F0878();
    *a2 = v5;
  }
  sub_23F6D3C2C();
}

void sub_23FB1EEA8(uint64_t *a1@<X8>)
{
  TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant.init(handwritten:)(a1);
}

uint64_t sub_23FB1EEC0(uint64_t a1, uint64_t a2)
{
  uint64_t DecorationPrePlannerPayloadEnum;

  sub_23F6B4F84(a1, &qword_256EB2630);
  sub_23F6F5920(a2, a1, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, DecorationPrePlannerPayloadEnum);
}

uint64_t sub_23FB1EF2C()
{
  return TranscriptProtoQueryDecorationPrePlannerResultPayload.init(handwritten:)();
}

void sub_23FB1EF40()
{
  TypeConversionResult.init(transcript:)();
}

uint64_t sub_23FB1EF54()
{
  return sub_23FAF12D4();
}

uint64_t sub_23FB1EF68()
{
  return QueryDecorationResult.init(transcript:)();
}

uint64_t sub_23FB1EF7C()
{
  return sub_23FAF1400();
}

void QueryDecorationPrePlannerResultPayload.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t *v26;
  char *v27;
  _QWORD v28[3];
  uint64_t v29;

  sub_23F6B5220();
  v28[2] = v3;
  v29 = v2;
  v5 = v4;
  type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  v28[1] = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(v8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  v28[0] = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(v11);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23F6B51D0();
  type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(v13);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  v15 = sub_23F70D7F8();
  type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(v15);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  v17 = sub_23F77DB24();
  type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B59F8();
  sub_23F72E4BC();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v19);
  v20 = sub_23F7A00C8();
  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(v20);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6B59E0();
  sub_23F6B568C(v5, v0);
  v23 = sub_23F6B5164(v0, 1, DecorationPrePlannerPayloadEnum);
  if (!v25)
  {
    sub_23FB29EF8(v0, v24, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    sub_23FAD6F18();
    v27 = (char *)&loc_23FB1F154 + 4 * byte_23FB92C92[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_23F77E660(v23, &qword_256EB2630);
  sub_23F6916B8(&qword_256EBEF98);
  sub_23FB297E0();
  sub_23F77DA84();
  sub_23F6B5AD4();
  *v26 = v0;
  v26[1] = v1;
  sub_23F77D9E4();
  sub_23F6F8C88(v5, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
  sub_23F876FC4();
  sub_23F6B5100();
}

void sub_23FB1F320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  QueryDecorationPrePlannerResult.init(transcript:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_23FB1F334()
{
  return sub_23FAF152C();
}

void sub_23FB1F348()
{
  QueryDecorationPrePlannerResultPayload.init(transcript:)();
}

uint64_t sub_23FB1F35C()
{
  uint64_t v0;

  return sub_23FAF1658(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

void sub_23FB1F378(uint64_t *a1@<X8>)
{
  TranscriptProtoActionFailureDeveloperDefinedError.init(handwritten:)(a1);
}

void sub_23FB1F38C()
{
  ActionFailure.DeveloperDefinedError.init(transcript:)();
}

uint64_t sub_23FB1F3A0()
{
  return sub_23FAF1750();
}

uint64_t sub_23FB1F3B4()
{
  return TranscriptProtoContinuePlanning.init(handwritten:)();
}

void sub_23FB1F3D8(uint64_t a1)
{
  ContinuePlanning.init(transcript:)(a1);
}

id sub_23FB1F3FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v7;
  void *v8;
  id v9;

  v7 = (void *)sub_23FB2F134();
  swift_bridgeObjectRelease();
  if (a4)
  {
    v8 = (void *)sub_23FB2F02C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  v9 = objc_msgSend(v4, sel_initWithDomain_code_userInfo_, v7, a3, v8);

  return v9;
}

void sub_23FB1F4A8(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  int64_t v27;
  _QWORD *v28;
  char v29;
  _QWORD *v30;
  _QWORD v31[6];

  v3 = v2;
  v5 = (_QWORD *)*v2;
  sub_23F6916B8(&qword_256EC3638);
  sub_23F70DC34();
  v29 = a2;
  v30 = (_QWORD *)sub_23FB2AD54();
  if (v5[2])
  {
    sub_23F7F65E8();
    v28 = v5 + 8;
    v7 = -1;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    v8 = v7 & v5[8];
    v26 = v2;
    v27 = (unint64_t)(v6 + 63) >> 6;
    swift_retain();
    v9 = 0;
    if (!v8)
      goto LABEL_6;
LABEL_5:
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (i = v10 | (v9 << 6); ; i = v16 + (v9 << 6))
    {
      v17 = (uint64_t *)(v5[6] + 48 * i);
      v19 = *v17;
      v18 = v17[1];
      v20 = v17[2];
      v21 = v17[3];
      v22 = v17[4];
      v23 = v17[5];
      v24 = *(_QWORD *)(v5[7] + 8 * i);
      if ((v29 & 1) == 0)
      {
        sub_23F77E584();
        sub_23F77E600();
        sub_23F6B90D8();
        sub_23F77DCD4();
      }
      v31[0] = v19;
      v31[1] = v18;
      v31[2] = v20;
      v31[3] = v21;
      v31[4] = v22;
      v31[5] = v23;
      sub_23FB202A8((uint64_t)v31, v24, v30);
      if (v8)
        goto LABEL_5;
LABEL_6:
      v12 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
LABEL_29:
        __break(1u);
        return;
      }
      if (v12 >= v27)
        goto LABEL_22;
      ++v9;
      if (!v28[v12])
      {
        v9 = v12 + 1;
        if (v12 + 1 >= v27)
          goto LABEL_22;
        if (!v28[v9])
        {
          v13 = v12 + 2;
          if (v13 >= v27)
          {
LABEL_22:
            swift_release();
            v3 = v26;
            if ((v29 & 1) != 0)
            {
              sub_23F7F65E8();
              if (v25 > 63)
                sub_23F7F0E44(0, (unint64_t)(v25 + 63) >> 6, v28);
              else
                *v28 = -1 << v25;
              v5[2] = 0;
            }
            break;
          }
          if (!v28[v13])
          {
            while (1)
            {
              v9 = v13 + 1;
              if (__OFADD__(v13, 1))
                goto LABEL_29;
              if (v9 >= v27)
                goto LABEL_22;
              ++v13;
              if (v28[v9])
                goto LABEL_17;
            }
          }
          v9 = v13;
        }
      }
LABEL_17:
      sub_23FB29EA0();
      v8 = v15 & v14;
    }
  }
  swift_release();
  *v3 = v30;
}

uint64_t sub_23FB1F6B8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  sub_23F6916B8(&qword_256EC35C0);
  v37 = a2;
  v6 = sub_23FB2F998();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_39;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v2;
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  if (!v10)
    goto LABEL_7;
LABEL_6:
  v15 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v15 | (v14 << 6); ; i = __clz(__rbit64(v19)) + (v14 << 6))
  {
    v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * i);
    v23 = *v21;
    v22 = v21[1];
    v24 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * i);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_23FB2FC5C();
    sub_23FB2F200();
    result = sub_23FB2FC8C();
    v25 = -1 << *(_BYTE *)(v7 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) == 0)
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v25) >> 6;
      while (++v27 != v30 || (v29 & 1) == 0)
      {
        v31 = v27 == v30;
        if (v27 == v30)
          v27 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v12 + 8 * v27);
        if (v32 != -1)
        {
          v28 = __clz(__rbit64(~v32)) + (v27 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    v28 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v12 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    v33 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v28);
    *v33 = v23;
    v33[1] = v22;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v28) = v24;
    ++*(_QWORD *)(v7 + 16);
    if (v10)
      goto LABEL_6;
LABEL_7:
    v17 = v14 + 1;
    if (__OFADD__(v14, 1))
      goto LABEL_41;
    if (v17 >= v11)
    {
      swift_release();
      v3 = v35;
      v18 = (_QWORD *)(v5 + 64);
      goto LABEL_34;
    }
    v18 = (_QWORD *)(v5 + 64);
    v19 = *(_QWORD *)(v36 + 8 * v17);
    ++v14;
    if (!v19)
    {
      v14 = v17 + 1;
      if (v17 + 1 >= v11)
        goto LABEL_32;
      v19 = *(_QWORD *)(v36 + 8 * v14);
      if (!v19)
        break;
    }
LABEL_18:
    v10 = (v19 - 1) & v19;
  }
  v20 = v17 + 2;
  if (v20 < v11)
  {
    v19 = *(_QWORD *)(v36 + 8 * v20);
    if (!v19)
    {
      while (1)
      {
        v14 = v20 + 1;
        if (__OFADD__(v20, 1))
          goto LABEL_42;
        if (v14 >= v11)
          goto LABEL_32;
        v19 = *(_QWORD *)(v36 + 8 * v14);
        ++v20;
        if (v19)
          goto LABEL_18;
      }
    }
    v14 = v20;
    goto LABEL_18;
  }
LABEL_32:
  swift_release();
  v3 = v35;
LABEL_34:
  if ((v37 & 1) != 0)
  {
    v34 = 1 << *(_BYTE *)(v5 + 32);
    if (v34 >= 64)
      sub_23F7F0E44(0, (unint64_t)(v34 + 63) >> 6, v18);
    else
      *v18 = -1 << v34;
    *(_QWORD *)(v5 + 16) = 0;
  }
LABEL_39:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23FB1F9AC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  _QWORD *v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  sub_23F6916B8(&qword_256EC3650);
  v37 = a2;
  v6 = sub_23FB2F998();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_39;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  if (!v10)
    goto LABEL_7;
LABEL_6:
  v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v18)) + (v13 << 6))
  {
    v20 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * i);
    v22 = *v20;
    v21 = v20[1];
    v23 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * i);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_23FB2FC5C();
    sub_23FB2F200();
    result = sub_23FB2FC8C();
    v24 = -1 << *(_BYTE *)(v7 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) == 0)
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v24) >> 6;
      while (++v26 != v29 || (v28 & 1) == 0)
      {
        v30 = v26 == v29;
        if (v26 == v29)
          v26 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v11 + 8 * v26);
        if (v31 != -1)
        {
          v27 = __clz(__rbit64(~v31)) + (v26 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    v27 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v11 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    v32 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v27);
    *v32 = v22;
    v32[1] = v21;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v27) = v23;
    ++*(_QWORD *)(v7 + 16);
    if (v10)
      goto LABEL_6;
LABEL_7:
    v16 = v13 + 1;
    if (__OFADD__(v13, 1))
      goto LABEL_41;
    if (v16 >= v35)
    {
      swift_release();
      v3 = v34;
      v17 = (_QWORD *)(v5 + 64);
      goto LABEL_34;
    }
    v17 = (_QWORD *)(v5 + 64);
    v18 = *(_QWORD *)(v36 + 8 * v16);
    ++v13;
    if (!v18)
    {
      v13 = v16 + 1;
      if (v16 + 1 >= v35)
        goto LABEL_32;
      v18 = *(_QWORD *)(v36 + 8 * v13);
      if (!v18)
        break;
    }
LABEL_18:
    v10 = (v18 - 1) & v18;
  }
  v19 = v16 + 2;
  if (v19 < v35)
  {
    v18 = *(_QWORD *)(v36 + 8 * v19);
    if (!v18)
    {
      while (1)
      {
        v13 = v19 + 1;
        if (__OFADD__(v19, 1))
          goto LABEL_42;
        if (v13 >= v35)
          goto LABEL_32;
        v18 = *(_QWORD *)(v36 + 8 * v13);
        ++v19;
        if (v18)
          goto LABEL_18;
      }
    }
    v13 = v19;
    goto LABEL_18;
  }
LABEL_32:
  swift_release();
  v3 = v34;
LABEL_34:
  if ((v37 & 1) != 0)
  {
    v33 = 1 << *(_BYTE *)(v5 + 32);
    if (v33 >= 64)
      sub_23F7F0E44(0, (unint64_t)(v33 + 63) >> 6, v17);
    else
      *v17 = -1 << v33;
    *(_QWORD *)(v5 + 16) = 0;
  }
LABEL_39:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23FB1FCA4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  _QWORD *v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  sub_23F6916B8(&qword_256EC3628);
  v37 = a2;
  v6 = sub_23FB2F998();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_39;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  if (!v10)
    goto LABEL_7;
LABEL_6:
  v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v18)) + (v13 << 6))
  {
    v20 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * i);
    v22 = *v20;
    v21 = v20[1];
    v23 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * i);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_23FB2FC5C();
    swift_bridgeObjectRetain();
    sub_23FB2F200();
    swift_bridgeObjectRelease();
    result = sub_23FB2FC8C();
    v24 = -1 << *(_BYTE *)(v7 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) == 0)
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v24) >> 6;
      while (++v26 != v29 || (v28 & 1) == 0)
      {
        v30 = v26 == v29;
        if (v26 == v29)
          v26 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v11 + 8 * v26);
        if (v31 != -1)
        {
          v27 = __clz(__rbit64(~v31)) + (v26 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    v27 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v11 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    v32 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v27);
    *v32 = v22;
    v32[1] = v21;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v27) = v23;
    ++*(_QWORD *)(v7 + 16);
    if (v10)
      goto LABEL_6;
LABEL_7:
    v16 = v13 + 1;
    if (__OFADD__(v13, 1))
      goto LABEL_41;
    if (v16 >= v35)
    {
      swift_release();
      v3 = v34;
      v17 = (_QWORD *)(v5 + 64);
      goto LABEL_34;
    }
    v17 = (_QWORD *)(v5 + 64);
    v18 = *(_QWORD *)(v36 + 8 * v16);
    ++v13;
    if (!v18)
    {
      v13 = v16 + 1;
      if (v16 + 1 >= v35)
        goto LABEL_32;
      v18 = *(_QWORD *)(v36 + 8 * v13);
      if (!v18)
        break;
    }
LABEL_18:
    v10 = (v18 - 1) & v18;
  }
  v19 = v16 + 2;
  if (v19 < v35)
  {
    v18 = *(_QWORD *)(v36 + 8 * v19);
    if (!v18)
    {
      while (1)
      {
        v13 = v19 + 1;
        if (__OFADD__(v19, 1))
          goto LABEL_42;
        if (v13 >= v35)
          goto LABEL_32;
        v18 = *(_QWORD *)(v36 + 8 * v13);
        ++v19;
        if (v18)
          goto LABEL_18;
      }
    }
    v13 = v19;
    goto LABEL_18;
  }
LABEL_32:
  swift_release();
  v3 = v34;
LABEL_34:
  if ((v37 & 1) != 0)
  {
    v33 = 1 << *(_BYTE *)(v5 + 32);
    if (v33 >= 64)
      sub_23F7F0E44(0, (unint64_t)(v33 + 63) >> 6, v17);
    else
      *v17 = -1 << v33;
    *(_QWORD *)(v5 + 16) = 0;
  }
LABEL_39:
  result = swift_release();
  *v3 = v7;
  return result;
}

void sub_23FB1FFAC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  int64_t i;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  _QWORD *v41;
  char v42;
  uint64_t v43;
  uint64_t v44;

  sub_23F6B50E8();
  v2 = v1;
  v4 = v3;
  sub_23FB2AEA8();
  v44 = sub_23FB2ED38();
  sub_23F6B6124();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B5404(v6, v39);
  v7 = (_QWORD *)*v1;
  sub_23F6916B8(&qword_256EC3620);
  sub_23F6B69B8();
  v42 = v4;
  v8 = sub_23FB2AD54();
  if (v7[2])
  {
    sub_23F7F65E8();
    v41 = v7 + 8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & v7[8];
    v40 = (unint64_t)(v9 + 63) >> 6;
    v12 = v8 + 64;
    swift_retain();
    v13 = 0;
    if (!v11)
      goto LABEL_7;
LABEL_6:
    sub_23FB2A1A8();
    for (i = v14 | (v13 << 6); ; i = v20 + (v13 << 6))
    {
      v21 = v7[7];
      v22 = v7;
      v23 = (uint64_t *)(v7[6] + 16 * i);
      v25 = *v23;
      v24 = v23[1];
      v26 = *(_QWORD *)(v0 + 72);
      v27 = v21 + v26 * i;
      if ((v42 & 1) != 0)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 32))(v43, v27, v44);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v43, v27, v44);
        sub_23F77E584();
      }
      sub_23FB2FC5C();
      sub_23FB2F200();
      v28 = sub_23FB2FC8C();
      v29 = -1 << *(_BYTE *)(v8 + 32);
      v30 = v28 & ~v29;
      v31 = v30 >> 6;
      if (((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6))) == 0)
      {
        v33 = 0;
        v34 = (unint64_t)(63 - v29) >> 6;
        while (++v31 != v34 || (v33 & 1) == 0)
        {
          v35 = v31 == v34;
          if (v31 == v34)
            v31 = 0;
          v33 |= v35;
          v36 = *(_QWORD *)(v12 + 8 * v31);
          if (v36 != -1)
          {
            v32 = __clz(__rbit64(~v36)) + (v31 << 6);
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return;
      }
      v32 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
LABEL_31:
      *(_QWORD *)(v12 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
      v37 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v32);
      *v37 = v25;
      v37[1] = v24;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 32))(*(_QWORD *)(v8 + 56) + v26 * v32, v43, v44);
      ++*(_QWORD *)(v8 + 16);
      v7 = v22;
      if (v11)
        goto LABEL_6;
LABEL_7:
      v16 = v13 + 1;
      if (__OFADD__(v13, 1))
        goto LABEL_40;
      if (v16 >= v40)
        goto LABEL_33;
      ++v13;
      if (!v41[v16])
      {
        v13 = v16 + 1;
        if (v16 + 1 >= v40)
          goto LABEL_33;
        if (!v41[v13])
        {
          v17 = v16 + 2;
          if (v17 >= v40)
          {
LABEL_33:
            swift_release();
            v2 = v1;
            if ((v42 & 1) != 0)
            {
              sub_23F7F65E8();
              if (v38 >= 64)
                sub_23F7F0E44(0, (unint64_t)(v38 + 63) >> 6, v41);
              else
                *v41 = -1 << v38;
              v7[2] = 0;
            }
            break;
          }
          if (!v41[v17])
          {
            while (1)
            {
              v13 = v17 + 1;
              if (__OFADD__(v17, 1))
                goto LABEL_41;
              if (v13 >= v40)
                goto LABEL_33;
              ++v17;
              if (v41[v13])
                goto LABEL_18;
            }
          }
          v13 = v17;
        }
      }
LABEL_18:
      sub_23FB29EA0();
      v11 = v19 & v18;
    }
  }
  swift_release();
  *v2 = v8;
  sub_23F693DDC();
}

__n128 sub_23FB202A8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  unint64_t v6;
  uint64_t v7;
  __int128 v8;
  __n128 result;

  sub_23FB2FC5C();
  swift_bridgeObjectRetain();
  sub_23FB2F200();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23FB2F200();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23FB2F200();
  swift_bridgeObjectRelease();
  sub_23FB2FC8C();
  v6 = sub_23FB2F74C();
  *(_QWORD *)((char *)a3 + ((v6 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v6;
  v7 = a3[6] + 48 * v6;
  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v7 = *(_OWORD *)a1;
  *(_OWORD *)(v7 + 16) = v8;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v7 + 32) = result;
  *(_QWORD *)(a3[7] + 8 * v6) = a2;
  ++a3[2];
  return result;
}

uint64_t sub_23FB203D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  unint64_t v22;
  char *v23;
  BOOL v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  void (*v31)(char *, unint64_t, uint64_t);
  void (*v32)(char *, uint64_t);
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;

  v2 = v1;
  v4 = sub_23FB2EB1C();
  v42 = *(_QWORD *)(v4 - 8);
  v43 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v44 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23FB2ED38();
  v7 = *(_QWORD **)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v47 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v38 - v10;
  sub_23F6916B8(&qword_256EC3618);
  result = sub_23FB2F98C();
  v13 = result;
  v14 = 0;
  v45 = a1;
  v46 = result;
  v17 = *(_QWORD *)(a1 + 64);
  v16 = a1 + 64;
  v15 = v17;
  v18 = 1 << *(_BYTE *)(v16 - 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v15;
  v38 = v16;
  v39 = (unint64_t)(v18 + 63) >> 6;
  v40 = v7;
  v41 = result + 64;
  v21 = v44;
  if (!v20)
    goto LABEL_5;
LABEL_4:
  v48 = (v20 - 1) & v20;
  v49 = v14;
  v22 = __clz(__rbit64(v20)) | (v14 << 6);
  v23 = v47;
  while (1)
  {
    v28 = *(_QWORD *)(v45 + 56);
    v29 = (uint64_t *)(*(_QWORD *)(v45 + 48) + 16 * v22);
    v30 = v29[1];
    v50 = *v29;
    v31 = (void (*)(char *, unint64_t, uint64_t))v7[2];
    v31(v11, v28 + v7[9] * v22, v6);
    v31(v23, (unint64_t)v11, v6);
    swift_bridgeObjectRetain();
    sub_23FB2ED20();
    if (v2)
    {
      v36 = (void (*)(char *, uint64_t))v7[1];
      v36(v23, v6);
      swift_bridgeObjectRelease();
      v37 = v46;
      swift_release();
      v36(v11, v6);
      return v37;
    }
    v32 = (void (*)(char *, uint64_t))v7[1];
    v32(v23, v6);
    v32(v11, v6);
    *(_QWORD *)(v41 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    v13 = v46;
    v33 = (_QWORD *)(*(_QWORD *)(v46 + 48) + 16 * v22);
    *v33 = v50;
    v33[1] = v30;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v42 + 32))(*(_QWORD *)(v13 + 56) + *(_QWORD *)(v42 + 72) * v22, v21, v43);
    v34 = *(_QWORD *)(v13 + 16);
    v24 = __OFADD__(v34, 1);
    v35 = v34 + 1;
    if (v24)
    {
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    *(_QWORD *)(v13 + 16) = v35;
    v2 = 0;
    v7 = v40;
    v20 = v48;
    v14 = v49;
    if (v48)
      goto LABEL_4;
LABEL_5:
    v24 = __OFADD__(v14, 1);
    v25 = v14 + 1;
    v23 = v47;
    if (v24)
      goto LABEL_28;
    if (v25 >= v39)
      return v13;
    v26 = *(_QWORD *)(v38 + 8 * v25);
    if (!v26)
      break;
LABEL_15:
    v48 = (v26 - 1) & v26;
    v49 = v25;
    v22 = __clz(__rbit64(v26)) + (v25 << 6);
  }
  v27 = v25 + 1;
  if (v25 + 1 >= v39)
    return v13;
  v26 = *(_QWORD *)(v38 + 8 * v27);
  if (v26)
    goto LABEL_14;
  v27 = v25 + 2;
  if (v25 + 2 >= v39)
    return v13;
  v26 = *(_QWORD *)(v38 + 8 * v27);
  if (v26)
    goto LABEL_14;
  v27 = v25 + 3;
  if (v25 + 3 >= v39)
    return v13;
  v26 = *(_QWORD *)(v38 + 8 * v27);
  if (v26)
  {
LABEL_14:
    v25 = v27;
    goto LABEL_15;
  }
  while (1)
  {
    v25 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v25 >= v39)
      return v46;
    v26 = *(_QWORD *)(v38 + 8 * v25);
    ++v27;
    if (v26)
      goto LABEL_15;
  }
LABEL_29:
  __break(1u);
  return result;
}

void sub_23FB20740(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t (*v27)(uint64_t);
  unint64_t i;
  BOOL v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v2 = v1;
  v4 = sub_23F6916B8(&qword_256EA2750);
  MEMORY[0x24BDAC7A8](v4);
  v57 = (uint64_t)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F6916B8(&qword_256EA8598);
  MEMORY[0x24BDAC7A8](v6);
  v56 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolParameterValue(0);
  MEMORY[0x24BDAC7A8](v8);
  v62 = (uint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F6916B8(&qword_256EA84D8);
  MEMORY[0x24BDAC7A8](v10);
  v61 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for TranscriptProtoActionParameterValue(0);
  v55 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for Action.ParameterValue(0);
  v59 = *(_QWORD *)(v54 - 8);
  v14 = MEMORY[0x24BDAC7A8](v54);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v51 - v17;
  sub_23F6916B8(&qword_256EAB770);
  v19 = sub_23FB2F98C();
  v20 = 0;
  v63 = a1;
  v21 = a1;
  v22 = (uint64_t)v16;
  v23 = *(_QWORD *)(v21 + 64);
  v51 = v21 + 64;
  v24 = 1 << *(_BYTE *)(v21 + 32);
  v25 = -1;
  if (v24 < 64)
    v25 = ~(-1 << v24);
  v26 = v25 & v23;
  v52 = (unint64_t)(v24 + 63) >> 6;
  v53 = v19 + 64;
  v27 = type metadata accessor for Action.ParameterValue;
  v64 = v19;
  v58 = v18;
  if (!v26)
    goto LABEL_5;
LABEL_4:
  v69 = v2;
  v65 = (v26 - 1) & v26;
  v66 = v20;
  for (i = __clz(__rbit64(v26)) | (v20 << 6); ; i = __clz(__rbit64(v31)) + (v30 << 6))
  {
    v33 = *(_QWORD *)(v63 + 56);
    v34 = (uint64_t *)(*(_QWORD *)(v63 + 48) + 16 * i);
    v35 = v34[1];
    v67 = *v34;
    sub_23F6F5920(v33 + *(_QWORD *)(v59 + 72) * i, (uint64_t)v18, v27);
    sub_23F6F5920((uint64_t)v18, v22, v27);
    v36 = type metadata accessor for TranscriptProtoToolParameterValue(0);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v13, 1, 1, v36);
    v37 = (uint64_t)v13;
    v38 = (uint64_t)&v13[*(int *)(v60 + 20)];
    v39 = type metadata accessor for TranscriptProtoPromptSelection(0);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v38, 1, 1, v39);
    v68 = v35;
    swift_bridgeObjectRetain();
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    v40 = v27;
    sub_23F6F5920(v22, v62, type metadata accessor for ToolParameterValue);
    v41 = (uint64_t)v61;
    v42 = v69;
    TranscriptProtoToolParameterValue.init(handwritten:)();
    v43 = v22;
    if (v42)
    {
      sub_23F6F8C88(v22, type metadata accessor for Action.ParameterValue);
      sub_23F6F8C88(v37, type metadata accessor for TranscriptProtoActionParameterValue);
      swift_bridgeObjectRelease();
      swift_release();
      sub_23F6F8C88((uint64_t)v58, type metadata accessor for Action.ParameterValue);
      return;
    }
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v41, 0, 1, v36);
    sub_23F710E80(v41, v37, &qword_256EA84D8);
    sub_23F6B4F58(v22 + *(int *)(v54 + 20), v57, &qword_256EA2750);
    v44 = (uint64_t)v56;
    sub_23F77CC74();
    v2 = 0;
    sub_23F6F8C88(v22, v40);
    sub_23F710E80(v44, v38, &qword_256EA8598);
    v45 = (uint64_t)v58;
    sub_23F6F8C88((uint64_t)v58, v40);
    *(_QWORD *)(v53 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v46 = v64;
    v47 = (_QWORD *)(*(_QWORD *)(v64 + 48) + 16 * i);
    v48 = v68;
    *v47 = v67;
    v47[1] = v48;
    sub_23F6F594C(v37, *(_QWORD *)(v46 + 56) + *(_QWORD *)(v55 + 72) * i, type metadata accessor for TranscriptProtoActionParameterValue);
    v49 = *(_QWORD *)(v46 + 16);
    v29 = __OFADD__(v49, 1);
    v50 = v49 + 1;
    if (v29)
    {
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    v13 = (char *)v37;
    v18 = (char *)v45;
    v22 = v43;
    v27 = v40;
    *(_QWORD *)(v46 + 16) = v50;
    v26 = v65;
    v20 = v66;
    if (v65)
      goto LABEL_4;
LABEL_5:
    v29 = __OFADD__(v20, 1);
    v30 = v20 + 1;
    if (v29)
      goto LABEL_28;
    if (v30 >= v52)
      return;
    v31 = *(_QWORD *)(v51 + 8 * v30);
    if (!v31)
      break;
LABEL_15:
    v69 = v2;
    v65 = (v31 - 1) & v31;
    v66 = v30;
  }
  v32 = v30 + 1;
  if (v30 + 1 >= v52)
    return;
  v31 = *(_QWORD *)(v51 + 8 * v32);
  if (v31)
    goto LABEL_14;
  v32 = v30 + 2;
  if (v30 + 2 >= v52)
    return;
  v31 = *(_QWORD *)(v51 + 8 * v32);
  if (v31)
    goto LABEL_14;
  v32 = v30 + 3;
  if (v30 + 3 >= v52)
    return;
  v31 = *(_QWORD *)(v51 + 8 * v32);
  if (v31)
  {
LABEL_14:
    v30 = v32;
    goto LABEL_15;
  }
  while (1)
  {
    v30 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v30 >= v52)
      return;
    v31 = *(_QWORD *)(v51 + 8 * v30);
    ++v32;
    if (v31)
      goto LABEL_15;
  }
LABEL_29:
  __break(1u);
}

void sub_23FB20CB4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  unint64_t v30;

  v2 = type metadata accessor for TranscriptProtoASTExpr(0);
  v29 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6916B8(&qword_256EC35E0);
  v5 = sub_23FB2F98C();
  v6 = (_QWORD *)v5;
  v7 = 0;
  v8 = *(_QWORD *)(a1 + 64);
  v27 = a1 + 64;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v28 = (unint64_t)(v9 + 63) >> 6;
  v12 = v5 + 64;
  if ((v10 & v8) == 0)
    goto LABEL_5;
LABEL_4:
  v13 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (i = v13 | (v7 << 6); ; i = __clz(__rbit64(v16)) + (v7 << 6))
  {
    v18 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v20 = *v18;
    v19 = v18[1];
    v30 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i);
    v21 = v30;
    swift_bridgeObjectRetain();
    sub_23F6A3728(v21);
    TranscriptProtoASTExpr.init(handwritten:)(&v30);
    *(_QWORD *)(v12 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v22 = (_QWORD *)(v6[6] + 16 * i);
    *v22 = v20;
    v22[1] = v19;
    sub_23F6F594C((uint64_t)v4, v6[7] + *(_QWORD *)(v29 + 72) * i, type metadata accessor for TranscriptProtoASTExpr);
    v23 = v6[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v6[2] = v25;
    if (v11)
      goto LABEL_4;
LABEL_5:
    v15 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_24;
    if (v15 >= v28)
      return;
    v16 = *(_QWORD *)(v27 + 8 * v15);
    ++v7;
    if (!v16)
    {
      v7 = v15 + 1;
      if (v15 + 1 >= v28)
        return;
      v16 = *(_QWORD *)(v27 + 8 * v7);
      if (!v16)
      {
        v7 = v15 + 2;
        if (v15 + 2 >= v28)
          return;
        v16 = *(_QWORD *)(v27 + 8 * v7);
        if (!v16)
          break;
      }
    }
LABEL_18:
    v11 = (v16 - 1) & v16;
  }
  v17 = v15 + 3;
  if (v17 >= v28)
    return;
  v16 = *(_QWORD *)(v27 + 8 * v17);
  if (v16)
  {
    v7 = v17;
    goto LABEL_18;
  }
  while (1)
  {
    v7 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v7 >= v28)
      return;
    v16 = *(_QWORD *)(v27 + 8 * v7);
    ++v17;
    if (v16)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
}

void sub_23FB20F08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  char *v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  unint64_t v48;

  v2 = sub_23F6916B8(&qword_256EA25A0);
  MEMORY[0x24BDAC7A8](v2);
  v43 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TranscriptProtoASTUpdateExpr(0);
  v41 = *(_QWORD *)(v4 - 8);
  v42 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6916B8(&qword_256EC35E8);
  v6 = sub_23FB2F98C();
  v7 = 0;
  v44 = a1;
  v10 = *(_QWORD *)(a1 + 64);
  v9 = a1 + 64;
  v8 = v10;
  v11 = 1 << *(_BYTE *)(v9 - 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v8;
  v36 = v9;
  v37 = (unint64_t)(v11 + 63) >> 6;
  v38 = v6 + 64;
  v39 = (_QWORD *)v6;
  v14 = v42;
  v15 = v40;
  if (!v13)
    goto LABEL_5;
LABEL_4:
  v45 = (v13 - 1) & v13;
  v46 = v7;
  for (i = __clz(__rbit64(v13)) | (v7 << 6); ; i = __clz(__rbit64(v18)) + (v19 << 6))
  {
    v21 = *(_QWORD *)(v44 + 56);
    v22 = (uint64_t *)(*(_QWORD *)(v44 + 48) + 16 * i);
    v23 = v22[1];
    v47 = *v22;
    v24 = (char *)(v21 + 16 * i);
    v25 = *v24;
    v26 = *((_QWORD *)v24 + 1);
    v48 = v26;
    sub_23F6A3728(v26);
    sub_23F6A3728(v26);
    swift_bridgeObjectRetain();
    v27 = (uint64_t)v43;
    TranscriptProtoASTExpr.init(handwritten:)(&v48);
    v28 = type metadata accessor for TranscriptProtoASTExpr(0);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v27, 0, 1, v28);
    v29 = (uint64_t)&v15[*(int *)(v14 + 20)];
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 1, 1, v28);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *v15 = v25;
    sub_23F710E80(v27, v29, &qword_256EA25A0);
    sub_23F6A3764(v26);
    v30 = v39;
    *(_QWORD *)(v38 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v31 = (_QWORD *)(v30[6] + 16 * i);
    *v31 = v47;
    v31[1] = v23;
    sub_23F6F594C((uint64_t)v15, v30[7] + *(_QWORD *)(v41 + 72) * i, type metadata accessor for TranscriptProtoASTUpdateExpr);
    v32 = v30[2];
    v33 = __OFADD__(v32, 1);
    v34 = v32 + 1;
    if (v33)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v30[2] = v34;
    v13 = v45;
    v7 = v46;
    if (v45)
      goto LABEL_4;
LABEL_5:
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_24;
    if (v17 >= v37)
      return;
    v18 = *(_QWORD *)(v36 + 8 * v17);
    v19 = v7 + 1;
    if (!v18)
    {
      v19 = v7 + 2;
      if (v7 + 2 >= v37)
        return;
      v18 = *(_QWORD *)(v36 + 8 * v19);
      if (!v18)
      {
        v19 = v7 + 3;
        if (v7 + 3 >= v37)
          return;
        v18 = *(_QWORD *)(v36 + 8 * v19);
        if (!v18)
          break;
      }
    }
LABEL_18:
    v45 = (v18 - 1) & v18;
    v46 = v19;
  }
  v20 = v7 + 4;
  if (v7 + 4 >= v37)
    return;
  v18 = *(_QWORD *)(v36 + 8 * v20);
  if (v18)
  {
    v19 = v7 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    v19 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v19 >= v37)
      return;
    v18 = *(_QWORD *)(v36 + 8 * v19);
    ++v20;
    if (v18)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
}

void sub_23FB2123C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t i;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  void (*v28)(char *, unint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char *v45;
  char *v46;
  char *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int64_t v54;
  uint64_t v55;
  uint64_t v56;

  v2 = type metadata accessor for TranscriptProtoStatementID(0);
  v50 = *(_QWORD *)(v2 - 8);
  v51 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v47 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23FB2C764();
  v48 = *(_QWORD **)(v4 - 8);
  v49 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v46 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v45 = (char *)&v40 - v7;
  sub_23F6916B8(&qword_256EC3608);
  v8 = sub_23FB2F98C();
  v9 = 0;
  v52 = a1;
  v12 = *(_QWORD *)(a1 + 64);
  v11 = a1 + 64;
  v10 = v12;
  v13 = 1 << *(_BYTE *)(v11 - 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v10;
  v41 = v11;
  v42 = (unint64_t)(v13 + 63) >> 6;
  v43 = v8 + 64;
  v44 = (_QWORD *)v8;
  v16 = v48;
  v17 = v49;
  v18 = v45;
  v19 = (uint64_t)v47;
  if (!v15)
    goto LABEL_5;
LABEL_4:
  v53 = (v15 - 1) & v15;
  v54 = v9;
  for (i = __clz(__rbit64(v15)) | (v9 << 6); ; i = __clz(__rbit64(v22)) + (v23 << 6))
  {
    v25 = *(_QWORD *)(v52 + 56);
    v26 = (uint64_t *)(*(_QWORD *)(v52 + 48) + 16 * i);
    v27 = v26[1];
    v56 = *v26;
    v55 = v27;
    v28 = (void (*)(char *, unint64_t, uint64_t))v16[2];
    v28(v18, v25 + v16[9] * i, v17);
    v29 = v46;
    v28(v46, (unint64_t)v18, v17);
    swift_bridgeObjectRetain();
    LODWORD(v27) = sub_23FB2C758();
    v30 = sub_23FB2C740();
    v32 = v31;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(_DWORD *)v19 = v27;
    *(_QWORD *)(v19 + 8) = v30;
    *(_QWORD *)(v19 + 16) = v32;
    v33 = (void (*)(char *, uint64_t))v16[1];
    v33(v29, v17);
    v33(v18, v17);
    v34 = v44;
    *(_QWORD *)(v43 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v35 = (_QWORD *)(v34[6] + 16 * i);
    v36 = v55;
    *v35 = v56;
    v35[1] = v36;
    sub_23F6F594C(v19, v34[7] + *(_QWORD *)(v50 + 72) * i, type metadata accessor for TranscriptProtoStatementID);
    v37 = v34[2];
    v38 = __OFADD__(v37, 1);
    v39 = v37 + 1;
    if (v38)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v34[2] = v39;
    v15 = v53;
    v9 = v54;
    if (v53)
      goto LABEL_4;
LABEL_5:
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_24;
    if (v21 >= v42)
      return;
    v22 = *(_QWORD *)(v41 + 8 * v21);
    v23 = v9 + 1;
    if (!v22)
    {
      v23 = v9 + 2;
      if (v9 + 2 >= v42)
        return;
      v22 = *(_QWORD *)(v41 + 8 * v23);
      if (!v22)
      {
        v23 = v9 + 3;
        if (v9 + 3 >= v42)
          return;
        v22 = *(_QWORD *)(v41 + 8 * v23);
        if (!v22)
          break;
      }
    }
LABEL_18:
    v53 = (v22 - 1) & v22;
    v54 = v23;
  }
  v24 = v9 + 4;
  if (v9 + 4 >= v42)
    return;
  v22 = *(_QWORD *)(v41 + 8 * v24);
  if (v22)
  {
    v23 = v9 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    v23 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v23 >= v42)
      return;
    v22 = *(_QWORD *)(v41 + 8 * v23);
    ++v24;
    if (v22)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
}

void sub_23FB21578(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t i;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v2 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v43 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v42 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for AST.FlatValue(0);
  v41 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v38 = (char *)&v34 - v7;
  sub_23F6916B8(&qword_256EC35D0);
  v8 = sub_23FB2F98C();
  v9 = 0;
  v44 = a1;
  v12 = *(_QWORD *)(a1 + 64);
  v11 = a1 + 64;
  v10 = v12;
  v13 = 1 << *(_BYTE *)(v11 - 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v10;
  v35 = v11;
  v36 = (unint64_t)(v13 + 63) >> 6;
  v39 = v8 + 64;
  v37 = v8;
  v16 = (uint64_t)v38;
  v17 = (uint64_t)v40;
  v18 = (uint64_t)v42;
  if ((v14 & v10) == 0)
    goto LABEL_5;
LABEL_4:
  v19 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  v20 = v9;
  for (i = v19 | (v9 << 6); ; i = __clz(__rbit64(v23)) + (v24 << 6))
  {
    v26 = (uint64_t *)(*(_QWORD *)(v44 + 48) + 16 * i);
    v27 = *v26;
    v28 = v26[1];
    sub_23F6F5920(*(_QWORD *)(v44 + 56) + *(_QWORD *)(v41 + 72) * i, v16, type metadata accessor for AST.FlatValue);
    sub_23F6F5920(v16, v17, type metadata accessor for AST.FlatValue);
    swift_bridgeObjectRetain();
    TranscriptProtoASTFlatValue.init(handwritten:)(v17);
    sub_23F6F8C88(v16, type metadata accessor for AST.FlatValue);
    *(_QWORD *)(v39 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v29 = v37;
    v30 = (_QWORD *)(*(_QWORD *)(v37 + 48) + 16 * i);
    *v30 = v27;
    v30[1] = v28;
    sub_23F6F594C(v18, *(_QWORD *)(v29 + 56) + *(_QWORD *)(v43 + 72) * i, type metadata accessor for TranscriptProtoASTFlatValue);
    v31 = *(_QWORD *)(v29 + 16);
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    *(_QWORD *)(v29 + 16) = v33;
    v9 = v20;
    if (v15)
      goto LABEL_4;
LABEL_5:
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_24;
    if (v22 >= v36)
      return;
    v23 = *(_QWORD *)(v35 + 8 * v22);
    v24 = v9 + 1;
    if (!v23)
    {
      v24 = v9 + 2;
      if (v9 + 2 >= v36)
        return;
      v23 = *(_QWORD *)(v35 + 8 * v24);
      if (!v23)
      {
        v24 = v9 + 3;
        if (v9 + 3 >= v36)
          return;
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
          break;
      }
    }
LABEL_18:
    v15 = (v23 - 1) & v23;
    v20 = v24;
  }
  v25 = v9 + 4;
  if (v9 + 4 >= v36)
    return;
  v23 = *(_QWORD *)(v35 + 8 * v25);
  if (v23)
  {
    v24 = v9 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    v24 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v24 >= v36)
      return;
    v23 = *(_QWORD *)(v35 + 8 * v24);
    ++v25;
    if (v23)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
}

void sub_23FB21880(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  unint64_t v26;
  char *v27;
  BOOL v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  void (*v35)(char *, unint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  unint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  int64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  int64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  _QWORD *v72;

  v3 = sub_23F6916B8(&qword_256EA2750);
  MEMORY[0x24BDAC7A8](v3);
  v57 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F6916B8(&qword_256EA8598);
  MEMORY[0x24BDAC7A8](v5);
  v56 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_23FB2EB1C();
  v55 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v71 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23FB2ED38();
  v60 = *(_QWORD *)(v8 - 8);
  v61 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F6916B8(&qword_256EA2610);
  MEMORY[0x24BDAC7A8](v11);
  v54 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for TranscriptProtoParameterValue(0);
  v53 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23FB2CD04();
  v72 = *(_QWORD **)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v58 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v64 = (char *)&v49 - v18;
  sub_23F6916B8(&qword_256EC3640);
  v19 = sub_23FB2F98C();
  v20 = 0;
  v62 = a1;
  v21 = *(_QWORD *)(a1 + 64);
  v49 = a1 + 64;
  v22 = 1 << *(_BYTE *)(a1 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v21;
  v50 = (unint64_t)(v22 + 63) >> 6;
  v63 = v19;
  v51 = v10;
  v52 = v19 + 64;
  v25 = v58;
  if (!v24)
    goto LABEL_5;
LABEL_4:
  v65 = (v24 - 1) & v24;
  v66 = v20;
  v26 = __clz(__rbit64(v24)) | (v20 << 6);
  v27 = v64;
  while (1)
  {
    v32 = *(_QWORD *)(v62 + 56);
    v33 = (uint64_t *)(*(_QWORD *)(v62 + 48) + 16 * v26);
    v34 = v33[1];
    v67 = *v33;
    v68 = v26;
    v35 = (void (*)(char *, unint64_t, uint64_t))v72[2];
    v35(v27, v32 + v72[9] * v26, v15);
    v35(v25, (unint64_t)v27, v15);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v14, 1, 1, v70);
    v36 = (uint64_t)&v14[*(int *)(v59 + 20)];
    v37 = type metadata accessor for TranscriptProtoPromptSelection(0);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v36, 1, 1, v37);
    v69 = v34;
    swift_bridgeObjectRetain();
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    sub_23FB2CCF8();
    sub_23FB2ED20();
    if (v1)
    {
      (*(void (**)(char *, uint64_t))(v60 + 8))(v10, v61);
      v48 = (void (*)(char *, uint64_t))v72[1];
      v48(v25, v15);
      sub_23F6F8C88((uint64_t)v14, type metadata accessor for TranscriptProtoParameterValue);
      swift_bridgeObjectRelease();
      swift_release();
      v48(v27, v15);
      return;
    }
    (*(void (**)(char *, uint64_t))(v60 + 8))(v10, v61);
    v38 = (uint64_t)v54;
    v39 = v70;
    (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v54, v71, v70);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v38, 0, 1, v39);
    sub_23F710E80(v38, (uint64_t)v14, &qword_256EA2610);
    sub_23FB2CCE0();
    v40 = (uint64_t)v56;
    sub_23F77CC74();
    v41 = (void (*)(char *, uint64_t))v72[1];
    v41(v25, v15);
    sub_23F710E80(v40, v36, &qword_256EA8598);
    v41(v27, v15);
    v42 = v68;
    *(_QWORD *)(v52 + ((v68 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v68;
    v43 = v63;
    v44 = (_QWORD *)(*(_QWORD *)(v63 + 48) + 16 * v42);
    v45 = v69;
    *v44 = v67;
    v44[1] = v45;
    sub_23F6F594C((uint64_t)v14, *(_QWORD *)(v43 + 56) + *(_QWORD *)(v53 + 72) * v42, type metadata accessor for TranscriptProtoParameterValue);
    v46 = *(_QWORD *)(v43 + 16);
    v28 = __OFADD__(v46, 1);
    v47 = v46 + 1;
    if (v28)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    *(_QWORD *)(v43 + 16) = v47;
    v10 = v51;
    v24 = v65;
    v20 = v66;
    if (v65)
      goto LABEL_4;
LABEL_5:
    v28 = __OFADD__(v20, 1);
    v29 = v20 + 1;
    v27 = v64;
    if (v28)
      goto LABEL_27;
    if (v29 >= v50)
      return;
    v30 = *(_QWORD *)(v49 + 8 * v29);
    if (!v30)
      break;
LABEL_15:
    v65 = (v30 - 1) & v30;
    v66 = v29;
    v26 = __clz(__rbit64(v30)) + (v29 << 6);
  }
  v31 = v29 + 1;
  if (v29 + 1 >= v50)
    return;
  v30 = *(_QWORD *)(v49 + 8 * v31);
  if (v30)
    goto LABEL_14;
  v31 = v29 + 2;
  if (v29 + 2 >= v50)
    return;
  v30 = *(_QWORD *)(v49 + 8 * v31);
  if (v30)
    goto LABEL_14;
  v31 = v29 + 3;
  if (v29 + 3 >= v50)
    return;
  v30 = *(_QWORD *)(v49 + 8 * v31);
  if (v30)
  {
LABEL_14:
    v29 = v31;
    goto LABEL_15;
  }
  while (1)
  {
    v29 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v29 >= v50)
      return;
    v30 = *(_QWORD *)(v49 + 8 * v29);
    ++v31;
    if (v30)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
}

void sub_23FB21E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ValueMetadata *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t i;
  BOOL v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(uint64_t, uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(uint64_t, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t (*v104)(uint64_t, uint64_t, uint64_t);
  uint64_t *v105;
  _QWORD *v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  int v125;
  unsigned int v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  int v157;

  sub_23F6B5220();
  a19 = v24;
  a20 = v25;
  sub_23FB2A3F8();
  v26 = sub_23FB2ABB0();
  v130 = *(_QWORD *)(v26 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v27);
  v28 = sub_23F78F27C();
  v142 = type metadata accessor for TranscriptProtoPromptSelection(v28);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F713E20();
  MEMORY[0x24BDAC7A8](v30);
  v138 = (uint64_t)&v121 - v31;
  sub_23F6916B8(&qword_256EA8598);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v32);
  v141 = (uint64_t)&v121 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F878D94();
  sub_23F6916B8(&qword_256EA2750);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F6B51A4();
  sub_23F6B5314(v36);
  sub_23F6916B8(&qword_256EA2610);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v37);
  v147 = (uint64_t)&v121 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = sub_23F6B632C();
  v144 = *(_QWORD *)(v148 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v39);
  v143 = (char *)&v121 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v41);
  v43 = (char *)&v121 - v42;
  v123 = sub_23F6B6634();
  v122 = *(_QWORD *)(v123 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v44);
  v154 = (char *)&v121 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6D398C();
  v136 = sub_23FB2CD04();
  v135 = *(_QWORD *)(v136 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v46);
  sub_23F6B51A4();
  v134 = v47;
  v48 = sub_23F6D398C();
  v140 = type metadata accessor for TranscriptProtoParameterValue(v48);
  v146 = *(_QWORD *)(v140 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v49);
  v156 = (uint64_t)&v121 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v51);
  sub_23FB29D24((uint64_t)&v121 - v52);
  sub_23F6916B8(&qword_256EC3648);
  sub_23FB2AE84();
  v53 = 0;
  v145 = v21;
  v129 = v21 + 64;
  sub_23F6B5754();
  v56 = v55 & v54;
  sub_23F6B5AE8();
  v131 = v57;
  v125 = *MEMORY[0x24BE53148];
  v124 = *MEMORY[0x24BE53150];
  v126 = *MEMORY[0x24BE53140];
  v133 = v58 + 8;
  v149 = v58;
  v150 = v22;
  v127 = v23;
  v137 = v43;
  v139 = v26;
  if (!v56)
    goto LABEL_3;
LABEL_2:
  v59 = __clz(__rbit64(v56));
  v60 = (v56 - 1) & v56;
  for (i = v59 | (v53 << 6); ; i = v70 + (v53 << 6))
  {
    v71 = *(_QWORD *)(v145 + 56);
    v72 = (uint64_t *)(*(_QWORD *)(v145 + 48) + 16 * i);
    v73 = v72[1];
    v152 = *v72;
    v74 = v155;
    sub_23F70D654(v71 + *(_QWORD *)(v146 + 72) * i, v155);
    v75 = v74;
    v76 = v156;
    sub_23F70D654(v75, v156);
    sub_23F6B4F58(v76, v147, &qword_256EA2610);
    v77 = sub_23F77E3D0();
    v78 = v148;
    sub_23F6B5164(v77, v79, v148);
    if (v80)
    {
      v112 = sub_23F6B5F1C();
      sub_23F77E3DC(v112, &qword_256EA2610);
      a10 = (ValueMetadata *)v78;
      sub_23F6916B8(&qword_256EA8628);
      v113 = sub_23FB297E0();
      sub_23FB29C94();
      sub_23F6B5AD4();
      *v114 = v113;
      v114[1] = i;
      v115 = sub_23F77D9E4();
      sub_23FB2A480(v115, type metadata accessor for TranscriptProtoParameterValue);
LABEL_41:
      sub_23F6B5908();
      v120 = sub_23F77DA7C();
      sub_23FB2AFA8(v120, type metadata accessor for TranscriptProtoParameterValue);
LABEL_42:
      sub_23F77DB18();
      sub_23F6B5100();
      return;
    }
    v151 = v60;
    v81 = sub_23F6B6224();
    v83 = v82;
    sub_23F6D3ECC(v81, v84, v85);
    v86 = v20;
    v87 = sub_23F8781AC();
    sub_23F6D3ECC(v87, v88, v89);
    v153 = v73;
    sub_23F6B5F1C();
    sub_23FB2ED2C();
    if (v20)
    {
      v116 = sub_23F7B0990((uint64_t)v43, *(uint64_t (**)(uint64_t, uint64_t))(v83 + 8));
      sub_23FB2A480(v116, type metadata accessor for TranscriptProtoParameterValue);
      goto LABEL_41;
    }
    sub_23F7B0990((uint64_t)v43, *(uint64_t (**)(uint64_t, uint64_t))(v83 + 8));
    v90 = v150;
    sub_23F6B6264(v156 + *(int *)(v140 + 20), v150);
    v91 = v141;
    sub_23F6B6264(v90, v141);
    v92 = sub_23F77E3D0();
    sub_23F6B5164(v92, v93, v142);
    if (v80)
    {
      v94 = sub_23F6B68A8();
      sub_23F6B4F84(v94, v95);
      sub_23F92470C();
      sub_23FB2AED8();
    }
    else
    {
      v97 = v138;
      sub_23FAD69D8(v91, v138);
      v98 = v97;
      v99 = v128;
      sub_23F77DB10(v98, v128);
      v100 = v99;
      if ((*(_BYTE *)(v99 + 9) & 1) != 0)
      {
        a10 = &type metadata for TranscriptProtoPromptSelectionEnum;
        sub_23F6916B8(&qword_256EBEEF0);
        v117 = sub_23FB297E0();
        sub_23FB29C94();
        sub_23F6B5AD4();
        *v118 = v117;
        v118[1] = i;
        sub_23F77D9E4();
        sub_23FB29958(v99);
        sub_23F6B4F84(v150, &qword_256EA8598);
        sub_23F6F8C88(v138, type metadata accessor for TranscriptProtoPromptSelection);
        sub_23FB2A480(v119, type metadata accessor for TranscriptProtoParameterValue);
        (*(void (**)(char *, uint64_t))(v122 + 8))(v154, v123);
        goto LABEL_41;
      }
      v101 = *(_QWORD *)v99;
      if ((*(_BYTE *)(v100 + 8) & 1) != 0)
      {
        sub_23FB29AB4(v100);
        sub_23FB2A5A4();
        v104 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v103 + 104);
        v86 = v132;
        v102 = v127;
        v105 = v101 ? &a9 : (uint64_t *)&v157;
        sub_23F75E68C((uint64_t)v127, *((unsigned int *)v105 - 64), v104);
        sub_23FB2AEFC();
      }
      else
      {
        sub_23FB29AB4(v100);
        v102 = v127;
        *v127 = v101;
        sub_23FB2AEFC();
        sub_23F75E68C((uint64_t)v102, v126, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v101 + 104));
        sub_23FB2AED8();
      }
      sub_23F6B4F84(v150, &qword_256EA8598);
      sub_23FB29AB4(v138);
      sub_23F75E68C(v86, (uint64_t)v102, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v101 + 32));
      v96 = 0;
    }
    v106 = v149;
    sub_23FAD6A98(v86, v96);
    v107 = v134;
    sub_23FB2CCEC();
    sub_23FB29AB4(v156);
    sub_23FB29AB4(v155);
    *(_QWORD *)((char *)v133 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v108 = (_QWORD *)(v106[6] + 16 * i);
    v109 = v153;
    *v108 = v152;
    v108[1] = v109;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v135 + 32))(v106[7] + *(_QWORD *)(v135 + 72) * i, v107, v136);
    v110 = v106[2];
    v62 = __OFADD__(v110, 1);
    v111 = v110 + 1;
    v43 = v137;
    if (v62)
      break;
    v106[2] = v111;
    v56 = v151;
    if (v151)
      goto LABEL_2;
LABEL_3:
    v62 = __OFADD__(v53++, 1);
    if (v62)
      goto LABEL_44;
    if (v53 >= v131)
      goto LABEL_42;
    if (!*(_QWORD *)(v129 + 8 * v53))
    {
      sub_23FB2A994();
      if (v63 == v62)
        goto LABEL_42;
      sub_23FB2A9B4();
      if (!v65)
      {
        sub_23FB2A994();
        if (v63 == v62)
          goto LABEL_42;
        sub_23FB2A9B4();
        if (!v66)
        {
          sub_23FB2A994();
          if (v63 == v62)
            goto LABEL_42;
          sub_23FB2A9B4();
          if (!v67)
          {
            while (1)
            {
              v53 = v64 + 1;
              if (__OFADD__(v64, 1))
                goto LABEL_45;
              if (v53 >= v131)
                goto LABEL_42;
              ++v64;
              if (*(_QWORD *)(v129 + 8 * v53))
                goto LABEL_16;
            }
          }
        }
      }
      v53 = v64;
    }
LABEL_16:
    sub_23FB29EA0();
    v60 = v69 & v68;
  }
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
}

uint64_t sub_23FB22628(uint64_t a1, _QWORD *a2)
{
  uint64_t *v2;

  return sub_23FAF2110(a1, v2[6], v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_23FB2264C(uint64_t a1, _QWORD *a2)
{
  uint64_t *v2;

  return sub_23FAF2300(a1, v2[5], v2[2], v2[3], v2[4], a2);
}

uint64_t sub_23FB2266C(uint64_t a1)
{
  uint64_t *v1;

  return sub_23FAF2468(a1, v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_23FB2268C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t i;
  BOOL v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v3 = type metadata accessor for TranscriptProtoASTExpr(0);
  v36 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v35 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v31 - v6;
  sub_23F6916B8(&qword_256EC35F0);
  result = sub_23FB2F98C();
  v9 = 0;
  v37 = a1;
  v12 = *(_QWORD *)(a1 + 64);
  v11 = a1 + 64;
  v10 = v12;
  v13 = 1 << *(_BYTE *)(v11 - 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v10;
  v32 = v11;
  v33 = (unint64_t)(v13 + 63) >> 6;
  v34 = result + 64;
  v38 = result;
  if ((v14 & v10) == 0)
    goto LABEL_5;
LABEL_4:
  v16 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (i = v16 | (v9 << 6); ; i = __clz(__rbit64(v19)) + (v9 << 6))
  {
    v21 = (uint64_t *)(*(_QWORD *)(v37 + 48) + 16 * i);
    v22 = *v21;
    v23 = v21[1];
    sub_23F6F5920(*(_QWORD *)(v37 + 56) + *(_QWORD *)(v36 + 72) * i, (uint64_t)v7, type metadata accessor for TranscriptProtoASTExpr);
    v24 = (uint64_t)v7;
    v25 = (uint64_t)v7;
    v26 = v35;
    sub_23F6F5920(v24, v35, type metadata accessor for TranscriptProtoASTExpr);
    swift_bridgeObjectRetain();
    AST.Expr.init(transcript:)(&v39, v26);
    if (v1)
    {
      swift_bridgeObjectRelease();
      v30 = v38;
      swift_release();
      sub_23F6F8C88(v25, type metadata accessor for TranscriptProtoASTExpr);
      return v30;
    }
    sub_23F6F8C88(v25, type metadata accessor for TranscriptProtoASTExpr);
    *(_QWORD *)(v34 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    result = v38;
    v27 = (_QWORD *)(*(_QWORD *)(v38 + 48) + 16 * i);
    *v27 = v22;
    v27[1] = v23;
    *(_QWORD *)(*(_QWORD *)(result + 56) + 8 * i) = v39;
    v28 = *(_QWORD *)(result + 16);
    v18 = __OFADD__(v28, 1);
    v29 = v28 + 1;
    if (v18)
    {
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    v7 = (char *)v25;
    *(_QWORD *)(result + 16) = v29;
    if (v15)
      goto LABEL_4;
LABEL_5:
    v18 = __OFADD__(v9++, 1);
    if (v18)
      goto LABEL_28;
    if (v9 >= v33)
      return result;
    v19 = *(_QWORD *)(v32 + 8 * v9);
    if (!v19)
      break;
LABEL_15:
    v15 = (v19 - 1) & v19;
  }
  v20 = v9 + 1;
  if (v9 + 1 >= v33)
    return result;
  v19 = *(_QWORD *)(v32 + 8 * v20);
  if (v19)
    goto LABEL_14;
  v20 = v9 + 2;
  if (v9 + 2 >= v33)
    return result;
  v19 = *(_QWORD *)(v32 + 8 * v20);
  if (v19)
    goto LABEL_14;
  v20 = v9 + 3;
  if (v9 + 3 >= v33)
    return result;
  v19 = *(_QWORD *)(v32 + 8 * v20);
  if (v19)
  {
LABEL_14:
    v9 = v20;
    goto LABEL_15;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v33)
      return v38;
    v19 = *(_QWORD *)(v32 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_15;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_23FB22964(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t i;
  BOOL v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v2 = v1;
  v4 = sub_23F6916B8(&qword_256EA25A0);
  MEMORY[0x24BDAC7A8](v4);
  v51 = (uint64_t)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for TranscriptProtoASTExpr(0);
  MEMORY[0x24BDAC7A8](v54);
  v48 = (uint64_t)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TranscriptProtoASTUpdateExpr(0);
  v49 = *(_QWORD *)(v7 - 8);
  v50 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v56 = (uint64_t)&v44 - v11;
  sub_23F6916B8(&qword_256EC35F8);
  result = sub_23FB2F98C();
  v13 = 0;
  v52 = a1;
  v53 = result;
  v16 = *(_QWORD *)(a1 + 64);
  v15 = a1 + 64;
  v14 = v16;
  v17 = 1 << *(_BYTE *)(v15 - 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v14;
  v45 = v15;
  v46 = (unint64_t)(v17 + 63) >> 6;
  v47 = result + 64;
  if ((v18 & v14) == 0)
    goto LABEL_5;
LABEL_4:
  v20 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (i = v20 | (v13 << 6); ; i = __clz(__rbit64(v23)) + (v13 << 6))
  {
    v25 = (uint64_t *)(*(_QWORD *)(v52 + 48) + 16 * i);
    v26 = *v25;
    v27 = v25[1];
    v28 = v56;
    sub_23F6F5920(*(_QWORD *)(v52 + 56) + *(_QWORD *)(v49 + 72) * i, v56, type metadata accessor for TranscriptProtoASTUpdateExpr);
    sub_23F6F5920(v28, (uint64_t)v10, type metadata accessor for TranscriptProtoASTUpdateExpr);
    v29 = *v10;
    v30 = v51;
    sub_23F6B4F58((uint64_t)&v10[*(int *)(v50 + 20)], v51, &qword_256EA25A0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v30, 1, v54) == 1)
    {
      swift_bridgeObjectRetain();
      sub_23F6B4F84(v30, &qword_256EA25A0);
      v57 = v54;
      sub_23F6916B8(&qword_256EA8508);
      v39 = sub_23FB2F17C();
      v41 = v40;
      sub_23F77D8D0();
      swift_allocError();
      *v42 = v39;
      v42[1] = v41;
      swift_willThrow();
LABEL_26:
      sub_23F6F8C88((uint64_t)v10, type metadata accessor for TranscriptProtoASTUpdateExpr);
      swift_bridgeObjectRelease();
      v43 = v53;
      swift_release();
      sub_23F6F8C88(v56, type metadata accessor for TranscriptProtoASTUpdateExpr);
      return v43;
    }
    v31 = v30;
    v32 = v48;
    sub_23F6F594C(v31, v48, type metadata accessor for TranscriptProtoASTExpr);
    swift_bridgeObjectRetain();
    AST.Expr.init(transcript:)(&v58, v32);
    if (v2)
      goto LABEL_26;
    v55 = v27;
    sub_23F6F8C88((uint64_t)v10, type metadata accessor for TranscriptProtoASTUpdateExpr);
    v33 = v58;
    sub_23F6F8C88(v56, type metadata accessor for TranscriptProtoASTUpdateExpr);
    *(_QWORD *)(v47 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    result = v53;
    v34 = (_QWORD *)(*(_QWORD *)(v53 + 48) + 16 * i);
    v35 = v55;
    *v34 = v26;
    v34[1] = v35;
    v36 = *(_QWORD *)(result + 56) + 16 * i;
    *(_BYTE *)v36 = v29;
    *(_QWORD *)(v36 + 8) = v33;
    v37 = *(_QWORD *)(result + 16);
    v22 = __OFADD__(v37, 1);
    v38 = v37 + 1;
    if (v22)
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    *(_QWORD *)(result + 16) = v38;
    v2 = 0;
    if (v19)
      goto LABEL_4;
LABEL_5:
    v22 = __OFADD__(v13++, 1);
    if (v22)
      goto LABEL_30;
    if (v13 >= v46)
      return result;
    v23 = *(_QWORD *)(v45 + 8 * v13);
    if (!v23)
      break;
LABEL_15:
    v19 = (v23 - 1) & v23;
  }
  v24 = v13 + 1;
  if (v13 + 1 >= v46)
    return result;
  v23 = *(_QWORD *)(v45 + 8 * v24);
  if (v23)
    goto LABEL_14;
  v24 = v13 + 2;
  if (v13 + 2 >= v46)
    return result;
  v23 = *(_QWORD *)(v45 + 8 * v24);
  if (v23)
    goto LABEL_14;
  v24 = v13 + 3;
  if (v13 + 3 >= v46)
    return result;
  v23 = *(_QWORD *)(v45 + 8 * v24);
  if (v23)
  {
LABEL_14:
    v13 = v24;
    goto LABEL_15;
  }
  while (1)
  {
    v13 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v13 >= v46)
      return v53;
    v23 = *(_QWORD *)(v45 + 8 * v13);
    ++v24;
    if (v23)
      goto LABEL_15;
  }
LABEL_31:
  __break(1u);
  return result;
}

void sub_23FB22DB8()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t (*v3)(uint64_t);
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t);
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[2];
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(_QWORD);
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void (*v56)(uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;

  sub_23F6B5220();
  v56 = v2;
  v4 = v3;
  v5 = sub_23FB2AC2C();
  v51 = v6;
  v7 = v6(v5);
  v50 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v54 = (char *)v48 - v8;
  v9 = sub_23F6D398C();
  v53 = *(_QWORD *)(v4(v9) - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v52 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v12);
  v58 = (char *)v48 - v13;
  sub_23F8797D8();
  sub_23FB2F98C();
  v55 = v1;
  sub_23F6B5754();
  v16 = v15 & v14;
  sub_23F6B5AE8();
  v48[0] = v1 + 64;
  v48[1] = v18;
  v57 = v19;
  v49 = v19 + 64;
  v20 = (uint64_t)v52;
  v21 = (uint64_t)v54;
  if (!v16)
    goto LABEL_3;
LABEL_2:
  v22 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  v59 = v17;
  v23 = v22 | (v17 << 6);
  v24 = (uint64_t)v58;
  while (1)
  {
    v36 = (uint64_t *)(*(_QWORD *)(v55 + 48) + 16 * v23);
    v38 = *v36;
    v37 = v36[1];
    sub_23F77DC78(*(_QWORD *)(v55 + 56) + *(_QWORD *)(v53 + 72) * v23, v24);
    sub_23F77DC78(v24, v20);
    sub_23F6B6548();
    v39 = sub_23FB2AD2C();
    v56(v39);
    if (v0)
    {
      sub_23F6B6090();
      sub_23F77DA7C();
      sub_23FB29958(v24);
LABEL_27:
      sub_23F877A30();
      sub_23F6B5100();
      return;
    }
    v40 = v24;
    v41 = v4;
    sub_23FB29958(v40);
    *(_QWORD *)(v49 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v42 = v57;
    v43 = (_QWORD *)(*(_QWORD *)(v57 + 48) + 16 * v23);
    *v43 = v38;
    v43[1] = v37;
    sub_23F6F594C(v21, *(_QWORD *)(v42 + 56) + *(_QWORD *)(v50 + 72) * v23, v51);
    v44 = *(_QWORD *)(v42 + 16);
    v27 = __OFADD__(v44, 1);
    v45 = v44 + 1;
    if (v27)
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    *(_QWORD *)(v42 + 16) = v45;
    v4 = v41;
    v17 = v59;
    if (v16)
      goto LABEL_2;
LABEL_3:
    v24 = (uint64_t)v58;
    if (__OFADD__(v17, 1))
      goto LABEL_29;
    sub_23FB2ABD4();
    if (v26 == v27)
      goto LABEL_27;
    if (!*(_QWORD *)(v48[0] + 8 * v25))
    {
      sub_23FB2A410();
      if (v26 == v27)
        goto LABEL_27;
      sub_23FB2A430();
      if (!v28)
      {
        sub_23FB2A410();
        if (v26 == v27)
          goto LABEL_27;
        sub_23FB2A430();
        if (!v29)
        {
          sub_23FB2A410();
          if (v26 == v27)
            goto LABEL_27;
          sub_23FB2A430();
          if (!v31)
            break;
        }
      }
    }
LABEL_16:
    sub_23FB29EA0();
    v16 = v33 & v32;
    v59 = v34;
    v23 = v35 + (v34 << 6);
  }
  while (!__OFADD__(v30, 1))
  {
    sub_23FB2ABD4();
    if (v26 == v27)
      goto LABEL_27;
    v30 = v46 + 1;
    if (*(_QWORD *)(v48[0] + 8 * v47))
      goto LABEL_16;
  }
LABEL_30:
  __break(1u);
}

void sub_23FB23064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t i;
  uint64_t v25;
  char v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t);
  uint64_t v54;
  uint64_t v55[2];
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;

  sub_23F6B5220();
  v3 = v2;
  v4 = sub_23F6B6634();
  v57 = *(_QWORD *)(v4 - 8);
  v58 = v4;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v5);
  v65 = (char *)v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B632C();
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v7);
  v59 = (char *)v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v11 = MEMORY[0x24BDAC7A8](v10);
  sub_23FB2A2F0(v11, v12, v13, v14, v15, v16, v17, v18, v55[0]);
  sub_23F6916B8(&qword_256EC3620);
  v19 = sub_23FB2AE84();
  v61 = v3;
  v62 = v19;
  sub_23F6B5754();
  sub_23F6B5AE8();
  v55[0] = v3 + 64;
  v55[1] = v22;
  v56 = v23 + 64;
  if (!v20)
    goto LABEL_3;
LABEL_2:
  v63 = (v20 - 1) & v20;
  v64 = v21;
  for (i = __clz(__rbit64(v20)) | (v21 << 6); ; i = v35 + (v34 << 6))
  {
    v36 = (uint64_t *)(*(_QWORD *)(v61 + 48) + 16 * i);
    v38 = *v36;
    v37 = v36[1];
    sub_23FB2B0FC(v60, *(_QWORD *)(v61 + 56) + *(_QWORD *)(v1 + 72) * i);
    v39 = sub_23F87886C();
    sub_23FB2B0FC(v39, v40);
    v41 = sub_23F7B0BC4();
    sub_23FB2B0FC(v41, v42);
    sub_23F6B6548();
    sub_23FB2ED2C();
    if (v0)
    {
      v53 = *(void (**)(uint64_t))(v1 + 8);
      v54 = sub_23F6B6F08();
      v53(v54);
      sub_23F6B6090();
      sub_23F77DA7C();
      sub_23FB2B070();
LABEL_27:
      sub_23F6B5100();
      return;
    }
    v43 = v1;
    v44 = *(void (**)(uint64_t))(v1 + 8);
    v45 = sub_23F6B6F08();
    v44(v45);
    v46 = sub_23F70D554();
    v44(v46);
    *(_QWORD *)(v56 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v47 = v62;
    v48 = (_QWORD *)(*(_QWORD *)(v62 + 48) + 16 * i);
    *v48 = v38;
    v48[1] = v37;
    (*(void (**)(unint64_t, char *, uint64_t))(v57 + 32))(*(_QWORD *)(v47 + 56) + *(_QWORD *)(v57 + 72) * i, v65, v58);
    v49 = *(_QWORD *)(v47 + 16);
    v27 = __OFADD__(v49, 1);
    v50 = v49 + 1;
    if (v27)
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    *(_QWORD *)(v47 + 16) = v50;
    v1 = v43;
    v20 = v63;
    v21 = v64;
    if (v63)
      goto LABEL_2;
LABEL_3:
    if (__OFADD__(v21, 1))
      goto LABEL_29;
    sub_23FB2ABD4();
    if (v26 == v27)
      goto LABEL_27;
    if (!*(_QWORD *)(v55[0] + 8 * v25))
    {
      sub_23FB2A410();
      if (v26 == v27)
        goto LABEL_27;
      sub_23FB2A430();
      if (!v28)
      {
        sub_23FB2A410();
        if (v26 == v27)
          goto LABEL_27;
        sub_23FB2A430();
        if (!v29)
        {
          sub_23FB2A410();
          if (v26 == v27)
            goto LABEL_27;
          sub_23FB2A430();
          if (!v31)
            break;
        }
      }
    }
LABEL_16:
    sub_23FB29EA0();
    v63 = v33 & v32;
    v64 = v34;
  }
  while (!__OFADD__(v30, 1))
  {
    sub_23FB2ABD4();
    if (v26 == v27)
      goto LABEL_27;
    v30 = v51 + 1;
    if (*(_QWORD *)(v55[0] + 8 * v52))
      goto LABEL_16;
  }
LABEL_30:
  __break(1u);
}

void sub_23FB23320()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  unint64_t i;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_23F6B5220();
  v41 = v0;
  v2 = v1;
  v3 = sub_23F6B58C8();
  v50 = *(_QWORD *)(v3 - 8);
  v51 = v3;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v4);
  v49 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = *(_QWORD *)(sub_23FAD69A0() - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  v44 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  v9 = MEMORY[0x24BDAC7A8](v8);
  sub_23FB29E4C(v9, v10, v11, v12, v13, v14, v15, v16, v40);
  sub_23F6916B8(&qword_256EA6520);
  sub_23FB2F98C();
  v52 = v2;
  sub_23F6B5754();
  v19 = v18 & v17;
  sub_23F6B5AE8();
  v42 = v2 + 64;
  v43 = v21;
  v45 = v22 + 8;
  v46 = v22;
  v23 = (uint64_t)v44;
  v24 = v49;
  if (!v19)
    goto LABEL_3;
LABEL_2:
  v25 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  v53 = v20;
  for (i = v25 | (v20 << 6); ; i = __clz(__rbit64(v28)) + (v29 << 6))
  {
    v31 = (uint64_t *)(*(_QWORD *)(v52 + 48) + 16 * i);
    v32 = v31[1];
    v54 = *v31;
    v33 = v47;
    sub_23F77E534(*(_QWORD *)(v52 + 56) + *(_QWORD *)(v48 + 72) * i, v47);
    v34 = sub_23F7D24F0();
    sub_23F77E534(v34, v35);
    sub_23F6B6548();
    sub_23F77E1FC();
    sub_23FB29BDC();
    sub_23FB29DEC(v23);
    sub_23FB29DEC(v33);
    v36 = v46;
    *(_QWORD *)((char *)v45 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v37 = (_QWORD *)(v36[6] + 16 * i);
    *v37 = v54;
    v37[1] = v32;
    (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v36[7] + *(_QWORD *)(v50 + 72) * i, v24, v51);
    sub_23FB2AC90();
    if (v39)
    {
      __break(1u);
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    v36[2] = v38;
    v20 = v53;
    if (v19)
      goto LABEL_2;
LABEL_3:
    v27 = v20 + 1;
    if (__OFADD__(v20, 1))
      goto LABEL_22;
    if (v27 >= v43)
      goto LABEL_20;
    v28 = *(_QWORD *)(v42 + 8 * v27);
    v29 = v20 + 1;
    if (!v28)
    {
      v29 = v20 + 2;
      if (v20 + 2 >= v43)
        goto LABEL_20;
      v28 = *(_QWORD *)(v42 + 8 * v29);
      if (!v28)
      {
        v29 = v20 + 3;
        if (v20 + 3 >= v43)
          goto LABEL_20;
        v28 = *(_QWORD *)(v42 + 8 * v29);
        if (!v28)
          break;
      }
    }
LABEL_16:
    v19 = (v28 - 1) & v28;
    v53 = v29;
  }
  v30 = v20 + 4;
  if (v20 + 4 >= v43)
  {
LABEL_20:
    sub_23F6B5100();
    return;
  }
  v28 = *(_QWORD *)(v42 + 8 * v30);
  if (v28)
  {
    v29 = v20 + 4;
    goto LABEL_16;
  }
  while (1)
  {
    v29 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v29 >= v43)
      goto LABEL_20;
    v28 = *(_QWORD *)(v42 + 8 * v29);
    ++v30;
    if (v28)
      goto LABEL_16;
  }
LABEL_23:
  __break(1u);
}

void sub_23FB235CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t i;
  BOOL v36;
  unint64_t v37;
  int64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  ValueMetadata **v61;
  void (*v62)(char *, _QWORD *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t (*v75)(uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  _DWORD v81[3];
  unsigned int v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  ValueMetadata *v105;
  uint64_t v106;
  char *v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  ValueMetadata *v113;

  v2 = sub_23FB2D040();
  v86 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v83 = (_QWORD *)((char *)v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v99 = type metadata accessor for TranscriptProtoPromptSelection(0);
  v4 = MEMORY[0x24BDAC7A8](v99);
  v84 = (uint64_t)v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v95 = (uint64_t)v81 - v6;
  v7 = sub_23F6916B8(&qword_256EA8598);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v98 = (uint64_t)v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v81 - v10;
  v12 = sub_23F6916B8(&qword_256EA2750);
  MEMORY[0x24BDAC7A8](v12);
  v89 = (char *)v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F6916B8(&qword_256EA84D8);
  MEMORY[0x24BDAC7A8](v14);
  v102 = (uint64_t)v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = (ValueMetadata *)type metadata accessor for TranscriptProtoToolParameterValue(0);
  MEMORY[0x24BDAC7A8](v105);
  v100 = (uint64_t)v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ToolParameterValue(0);
  MEMORY[0x24BDAC7A8](v17);
  v109 = (uint64_t)v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Action.ParameterValue(0);
  v93 = *(_QWORD *)(v19 - 8);
  v94 = v19;
  v20 = MEMORY[0x24BDAC7A8](v19);
  v92 = (char *)v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v91 = (uint64_t)v81 - v22;
  v97 = type metadata accessor for TranscriptProtoActionParameterValue(0);
  v101 = *(_QWORD *)(v97 - 8);
  v23 = MEMORY[0x24BDAC7A8](v97);
  v25 = (char *)v81 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v111 = (uint64_t)v81 - v26;
  sub_23F6916B8(&qword_256EB04A0);
  v27 = sub_23FB2F98C();
  v28 = 0;
  v103 = a1;
  v29 = *(_QWORD *)(a1 + 64);
  v85 = a1 + 64;
  v30 = 1 << *(_BYTE *)(a1 + 32);
  v31 = -1;
  if (v30 < 64)
    v31 = ~(-1 << v30);
  v32 = v31 & v29;
  v87 = (unint64_t)(v30 + 63) >> 6;
  v81[2] = *MEMORY[0x24BE53148];
  v81[1] = *MEMORY[0x24BE53150];
  v82 = *MEMORY[0x24BE53140];
  v104 = v27;
  v90 = v27 + 64;
  v106 = v2;
  v107 = v11;
  v96 = v25;
  if ((v31 & v29) == 0)
    goto LABEL_5;
LABEL_4:
  v33 = __clz(__rbit64(v32));
  v34 = (v32 - 1) & v32;
  for (i = v33 | (v28 << 6); ; i = __clz(__rbit64(v37)) + (v28 << 6))
  {
    v39 = (uint64_t *)(*(_QWORD *)(v103 + 48) + 16 * i);
    v40 = *v39;
    v41 = v39[1];
    v42 = v111;
    sub_23F6F5920(*(_QWORD *)(v103 + 56) + *(_QWORD *)(v101 + 72) * i, v111, type metadata accessor for TranscriptProtoActionParameterValue);
    sub_23F6F5920(v42, (uint64_t)v25, type metadata accessor for TranscriptProtoActionParameterValue);
    v43 = v102;
    sub_23F6B4F58((uint64_t)v25, v102, &qword_256EA84D8);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v43, 1, (uint64_t)v105) == 1)
    {
      swift_bridgeObjectRetain();
      sub_23F6B4F84(v43, &qword_256EA84D8);
      v113 = v105;
      sub_23F6916B8(&qword_256EA84E0);
      v71 = sub_23FB2F17C();
      v73 = v72;
      sub_23F77D8D0();
      swift_allocError();
      *v74 = v71;
      v74[1] = v73;
      swift_willThrow();
      v75 = type metadata accessor for TranscriptProtoActionParameterValue;
      v76 = (uint64_t)v25;
      goto LABEL_39;
    }
    sub_23F6F594C(v43, v100, type metadata accessor for TranscriptProtoToolParameterValue);
    swift_bridgeObjectRetain();
    v44 = v110;
    ToolParameterValue.init(transcript:)();
    v110 = v44;
    if (v44)
    {
      sub_23F6F8C88((uint64_t)v25, type metadata accessor for TranscriptProtoActionParameterValue);
      goto LABEL_40;
    }
    v45 = (uint64_t)v107;
    sub_23F6B4F58((uint64_t)&v25[*(int *)(v97 + 20)], (uint64_t)v107, &qword_256EA8598);
    v46 = v98;
    sub_23F6B4F58(v45, v98, &qword_256EA8598);
    v47 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v46, 1, v99);
    v108 = v34;
    if (v47 == 1)
    {
      v48 = v28;
      sub_23F6B4F84(v45, &qword_256EA8598);
      sub_23F6B4F84(v46, &qword_256EA8598);
      v49 = 1;
      v50 = (uint64_t)v89;
      goto LABEL_32;
    }
    v51 = v95;
    sub_23F6F594C(v46, v95, type metadata accessor for TranscriptProtoPromptSelection);
    v52 = v51;
    v53 = v84;
    sub_23F6F5920(v52, v84, type metadata accessor for TranscriptProtoPromptSelection);
    v54 = v53;
    if ((*(_BYTE *)(v53 + 9) & 1) != 0)
    {
      v113 = &type metadata for TranscriptProtoPromptSelectionEnum;
      sub_23F6916B8(&qword_256EBEEF0);
      v77 = sub_23FB2F17C();
      v79 = v78;
      sub_23F77D8D0();
      swift_allocError();
      *v80 = v77;
      v80[1] = v79;
      swift_willThrow();
      sub_23F6F8C88(v53, type metadata accessor for TranscriptProtoPromptSelection);
      sub_23F6B4F84((uint64_t)v107, &qword_256EA8598);
      sub_23F6F8C88(v95, type metadata accessor for TranscriptProtoPromptSelection);
      sub_23F6F8C88((uint64_t)v96, type metadata accessor for TranscriptProtoActionParameterValue);
      v75 = type metadata accessor for ToolParameterValue;
      v76 = v109;
LABEL_39:
      sub_23F6F8C88(v76, v75);
LABEL_40:
      swift_bridgeObjectRelease();
      swift_release();
      sub_23F6F8C88(v111, type metadata accessor for TranscriptProtoActionParameterValue);
      return;
    }
    v55 = (uint64_t)v107;
    v56 = *(_QWORD *)v53;
    v57 = *(_BYTE *)(v54 + 8);
    v88 = v41;
    if ((v57 & 1) != 0)
    {
      sub_23F6F8C88(v54, type metadata accessor for TranscriptProtoPromptSelection);
      v58 = v83;
      v61 = v56 ? &v113 : (ValueMetadata **)((char *)&v112 + 4);
      v60 = v106;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v86 + 104))(v83, *((unsigned int *)v61 - 64), v106);
      v59 = v86;
    }
    else
    {
      sub_23F6F8C88(v54, type metadata accessor for TranscriptProtoPromptSelection);
      v58 = v83;
      *v83 = v56;
      v59 = v86;
      v60 = v106;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v86 + 104))(v58, v82, v106);
    }
    v48 = v28;
    sub_23F6B4F84(v55, &qword_256EA8598);
    sub_23F6F8C88(v95, type metadata accessor for TranscriptProtoPromptSelection);
    v62 = *(void (**)(char *, _QWORD *, uint64_t))(v59 + 32);
    v50 = (uint64_t)v89;
    v62(v89, v58, v60);
    v49 = 0;
    v2 = v60;
    v41 = v88;
LABEL_32:
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v50, v49, 1, v2);
    v63 = v2;
    v64 = (uint64_t)v92;
    v65 = (uint64_t)&v92[*(int *)(v94 + 20)];
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v65, 1, 1, v63);
    sub_23F6F594C(v109, v64, type metadata accessor for ToolParameterValue);
    sub_23F710E80(v50, v65, &qword_256EA2750);
    v66 = v91;
    sub_23F6F594C(v64, v91, type metadata accessor for Action.ParameterValue);
    v25 = v96;
    sub_23F6F8C88((uint64_t)v96, type metadata accessor for TranscriptProtoActionParameterValue);
    sub_23F6F8C88(v111, type metadata accessor for TranscriptProtoActionParameterValue);
    *(_QWORD *)(v90 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v67 = v104;
    v68 = (_QWORD *)(*(_QWORD *)(v104 + 48) + 16 * i);
    *v68 = v40;
    v68[1] = v41;
    sub_23F6F594C(v66, *(_QWORD *)(v67 + 56) + *(_QWORD *)(v93 + 72) * i, type metadata accessor for Action.ParameterValue);
    v69 = *(_QWORD *)(v67 + 16);
    v36 = __OFADD__(v69, 1);
    v70 = v69 + 1;
    if (v36)
      break;
    *(_QWORD *)(v67 + 16) = v70;
    v2 = v106;
    v28 = v48;
    v32 = v108;
    if (v108)
      goto LABEL_4;
LABEL_5:
    v36 = __OFADD__(v28++, 1);
    if (v36)
      goto LABEL_42;
    if (v28 >= v87)
      return;
    v37 = *(_QWORD *)(v85 + 8 * v28);
    if (!v37)
    {
      v38 = v28 + 1;
      if (v28 + 1 >= v87)
        return;
      v37 = *(_QWORD *)(v85 + 8 * v38);
      if (!v37)
      {
        v38 = v28 + 2;
        if (v28 + 2 >= v87)
          return;
        v37 = *(_QWORD *)(v85 + 8 * v38);
        if (!v37)
        {
          v38 = v28 + 3;
          if (v28 + 3 >= v87)
            return;
          v37 = *(_QWORD *)(v85 + 8 * v38);
          if (!v37)
          {
            while (1)
            {
              v28 = v38 + 1;
              if (__OFADD__(v38, 1))
                goto LABEL_43;
              if (v28 >= v87)
                return;
              v37 = *(_QWORD *)(v85 + 8 * v28);
              ++v38;
              if (v37)
                goto LABEL_15;
            }
          }
        }
      }
      v28 = v38;
    }
LABEL_15:
    v34 = (v37 - 1) & v37;
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
}

void sub_23FB23F64(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t *i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  void *v24;
  id v25;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  for (i = (uint64_t *)(swift_bridgeObjectRetain() + 48); ; i += 3)
  {
    v8 = *(i - 2);
    v7 = *(i - 1);
    v9 = *i;
    v10 = (_QWORD *)*a3;
    swift_bridgeObjectRetain();
    v12 = sub_23F78C6DC();
    v13 = v10[2];
    v14 = (v11 & 1) == 0;
    v15 = v13 + v14;
    if (__OFADD__(v13, v14))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_23FB2FBD8();
      __break(1u);
      goto LABEL_20;
    }
    v16 = v11;
    if (v10[3] < v15)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v11 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_23F6916B8(&qword_256EC35C8);
      sub_23FB2F920();
      if ((v16 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v19 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    v20 = (_QWORD *)(v19[6] + 16 * v12);
    *v20 = v8;
    v20[1] = v7;
    *(_QWORD *)(v19[7] + 8 * v12) = v9;
    v21 = v19[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_18;
    v19[2] = v23;
    a2 = 1;
    if (!--v3)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_23FB1F6B8(v15, a2 & 1);
  v17 = sub_23F78C6DC();
  if ((v16 & 1) != (v18 & 1))
    goto LABEL_19;
  v12 = v17;
  if ((v16 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v24 = (void *)swift_allocError();
  swift_willThrow();
  v25 = v24;
  sub_23F6916B8(&qword_256EA2828);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_20:
  sub_23FB2F7AC();
  sub_23FB2F254();
  sub_23FB2F8FC();
  sub_23FB2F254();
  sub_23FB2F944();
  __break(1u);
}

void sub_23FB24228(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  void *v23;
  id v24;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v5 = (uint64_t *)(swift_bridgeObjectRetain() + 48);
  while (1)
  {
    v7 = *(v5 - 2);
    v6 = *(v5 - 1);
    v8 = *v5;
    v9 = (_QWORD *)*a3;
    swift_bridgeObjectRetain();
    v11 = sub_23F78C6DC();
    v12 = v9[2];
    v13 = (v10 & 1) == 0;
    v14 = v12 + v13;
    if (__OFADD__(v12, v13))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_23FB2FBD8();
      __break(1u);
      goto LABEL_20;
    }
    v15 = v10;
    if (v9[3] < v14)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v10 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_23F6916B8(&qword_256EC3658);
      sub_23FB2F920();
      if ((v15 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v18 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    v19 = (_QWORD *)(v18[6] + 16 * v11);
    *v19 = v7;
    v19[1] = v6;
    *(_QWORD *)(v18[7] + 8 * v11) = v8;
    v20 = v18[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_18;
    v5 += 3;
    v18[2] = v22;
    a2 = 1;
    if (!--v3)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_23FB1F9AC(v14, a2 & 1);
  v16 = sub_23F78C6DC();
  if ((v15 & 1) != (v17 & 1))
    goto LABEL_19;
  v11 = v16;
  if ((v15 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v23 = (void *)swift_allocError();
  swift_willThrow();
  v24 = v23;
  sub_23F6916B8(&qword_256EA2828);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_20:
  sub_23FB2F7AC();
  sub_23FB2F254();
  sub_23FB2F8FC();
  sub_23FB2F254();
  sub_23FB2F944();
  __break(1u);
}

void sub_23FB244EC(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  void *v23;
  id v24;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v5 = (uint64_t *)(swift_bridgeObjectRetain() + 48);
  while (1)
  {
    v7 = *(v5 - 2);
    v6 = *(v5 - 1);
    v8 = *v5;
    v9 = (_QWORD *)*a3;
    swift_bridgeObjectRetain();
    v11 = sub_23F78C62C();
    v12 = v9[2];
    v13 = (v10 & 1) == 0;
    v14 = v12 + v13;
    if (__OFADD__(v12, v13))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_23FB2FBD8();
      __break(1u);
      goto LABEL_20;
    }
    v15 = v10;
    if (v9[3] < v14)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v10 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_23F6916B8(&qword_256EC3630);
      sub_23FB2F920();
      if ((v15 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v18 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    v19 = (_QWORD *)(v18[6] + 16 * v11);
    *v19 = v7;
    v19[1] = v6;
    *(_QWORD *)(v18[7] + 8 * v11) = v8;
    v20 = v18[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_18;
    v5 += 3;
    v18[2] = v22;
    a2 = 1;
    if (!--v3)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_23FB1FCA4(v14, a2 & 1);
  v16 = sub_23F78C62C();
  if ((v15 & 1) != (v17 & 1))
    goto LABEL_19;
  v11 = v16;
  if ((v15 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v23 = (void *)swift_allocError();
  swift_willThrow();
  v24 = v23;
  sub_23F6916B8(&qword_256EA2828);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_20:
  sub_23FB2F7AC();
  sub_23FB2F254();
  sub_23FB2F8FC();
  sub_23FB2F254();
  sub_23FB2F944();
  __break(1u);
}

int64_t sub_23FB247B4(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  if (v5 + 1 < (unint64_t)(result + 63) >> 6)
  {
    v10 = *(_QWORD *)(v6 + 8 * v9);
    if (v10)
      return __clz(__rbit64(v10)) + (v9 << 6);
    v11 = (unint64_t)(result + 63) >> 6;
    v9 = v5 + 2;
    if (v5 + 2 < v11)
    {
      v10 = *(_QWORD *)(v6 + 8 * v9);
      if (v10)
        return __clz(__rbit64(v10)) + (v9 << 6);
      while (v5 + 3 < v11)
      {
        v10 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v10)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v10)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_23FB24898(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Candidate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_23FB248DC(uint64_t a1)
{
  sub_23FB15698(a1);
}

void sub_23FB248F4(uint64_t a1)
{
  sub_23FB1551C(a1);
}

void sub_23FB2490C()
{
  sub_23FB15478();
}

void sub_23FB24938()
{
  sub_23FB15478();
}

uint64_t sub_23FB24964()
{
  uint64_t v0;

  sub_23F6B6A60();
  sub_23F6A3764(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23FB24994()
{
  uint64_t v0;

  sub_23F6A3764(*(_QWORD *)(v0 + 16));
  sub_23F6B6A60();
  sub_23F756638();
  sub_23F6B68BC();
  return swift_deallocObject();
}

uint64_t sub_23FB249B8()
{
  uint64_t v0;

  sub_23F6A3764(*(_QWORD *)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_23FB249DC()
{
  sub_23F6B6A60();
  sub_23F6B688C();
  return swift_deallocObject();
}

uint64_t sub_23FB249F4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23FB24A18()
{
  sub_23F6B6A60();
  return swift_deallocObject();
}

uint64_t sub_23FB24A38()
{
  sub_23F6B6A60();
  return swift_deallocObject();
}

uint64_t sub_23FB24A58()
{
  sub_23F6B6A60();
  sub_23F756638();
  sub_23F6B68BC();
  return swift_deallocObject();
}

uint64_t sub_23FB24A74()
{
  uint64_t v0;

  sub_23F6A3764(*(_QWORD *)(v0 + 16));
  sub_23F6A3764(*(_QWORD *)(v0 + 24));
  sub_23F6B688C();
  return swift_deallocObject();
}

uint64_t sub_23FB24A98()
{
  uint64_t v0;

  sub_23F6A3764(*(_QWORD *)(v0 + 16));
  sub_23F756638();
  sub_23F6B68BC();
  return swift_deallocObject();
}

uint64_t sub_23FB24AB8()
{
  uint64_t v0;

  sub_23F6A3764(*(_QWORD *)(v0 + 24));
  sub_23F6A3764(*(_QWORD *)(v0 + 32));
  sub_23F6B68BC();
  return swift_deallocObject();
}

uint64_t sub_23FB24ADC()
{
  uint64_t v0;

  sub_23F6A3764(*(_QWORD *)(v0 + 24));
  sub_23F6B688C();
  return swift_deallocObject();
}

uint64_t sub_23FB24AF8()
{
  uint64_t v0;

  sub_23F6AEACC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_23FB24B20(uint64_t a1)
{
  uint64_t v1;

  return sub_23FB1EEC0(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_23FB24B3C()
{
  unint64_t result;

  result = qword_256EBEFA0;
  if (!qword_256EBEFA0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for HandwrittenConversion.Error, &type metadata for HandwrittenConversion.Error);
    atomic_store(result, (unint64_t *)&qword_256EBEFA0);
  }
  return result;
}

_UNKNOWN **sub_23FB24B78()
{
  return &protocol witness table for TranscriptProtoSpeechRequestCandidate;
}

void sub_23FB24B84(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EBEFC0, (void (*)(uint64_t))type metadata accessor for SpeechRequestCandidate);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB24BC0()
{
  sub_23FB29654(&qword_256EB1C78, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSpeechRequestCandidate);
}

_UNKNOWN **sub_23FB24BEC()
{
  return &protocol witness table for TranscriptProtoEvent;
}

void sub_23FB24BF8(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EBF030, (void (*)(uint64_t))type metadata accessor for Session.Event);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB24C34()
{
  sub_23FB29654(&qword_256EA71F0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoEvent);
}

_UNKNOWN **sub_23FB24C60()
{
  return &protocol witness table for TranscriptProtoTimepoint;
}

void sub_23FB24C6C(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EBF0D0, (void (*)(uint64_t))type metadata accessor for Timepoint);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB24CA8()
{
  sub_23FB29654(&qword_256EB2718, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTimepoint);
}

_UNKNOWN **sub_23FB24CD4()
{
  return &protocol witness table for TranscriptProtoParticipantID;
}

unint64_t sub_23FB24CE0(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB24D04();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB24D04()
{
  unint64_t result;

  result = qword_256EBF140;
  if (!qword_256EBF140)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ParticipantID, &type metadata for ParticipantID);
    atomic_store(result, (unint64_t *)&qword_256EBF140);
  }
  return result;
}

void sub_23FB24D40()
{
  sub_23FB29654(&qword_256EB2CF8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParticipantID);
}

_UNKNOWN **sub_23FB24D6C()
{
  return &protocol witness table for TranscriptProtoSpanID;
}

unint64_t sub_23FB24D78(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB24D9C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB24D9C()
{
  unint64_t result;

  result = qword_256EBF1B0;
  if (!qword_256EBF1B0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for SpanID, &type metadata for SpanID);
    atomic_store(result, (unint64_t *)&qword_256EBF1B0);
  }
  return result;
}

void sub_23FB24DD8()
{
  sub_23FB29654(&qword_256EB2D10, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSpanID);
}

_UNKNOWN **sub_23FB24E04()
{
  return &protocol witness table for TranscriptProtoPayload;
}

void sub_23FB24E10(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EBF220, (void (*)(uint64_t))type metadata accessor for Session.Event.Payload);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB24E4C()
{
  sub_23FB29654(&qword_256EB26F0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPayload);
}

_UNKNOWN **sub_23FB24E78()
{
  return &protocol witness table for TranscriptProtoSessionStart;
}

void sub_23FB24E84(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EBF290, (void (*)(uint64_t))type metadata accessor for SessionStart);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB24EC0()
{
  sub_23FB29654(&qword_256EB2730, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSessionStart);
}

_UNKNOWN **sub_23FB24EEC()
{
  return &protocol witness table for TranscriptProtoDeviceDetails;
}

void sub_23FB24EF8(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EBF300, (void (*)(uint64_t))MEMORY[0x24BE524C0]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB24F34()
{
  sub_23FB29654(&qword_256EB39A0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDeviceDetails);
}

_UNKNOWN **sub_23FB24F60()
{
  return &protocol witness table for TranscriptProtoDeviceDetailsDeviceType;
}

void sub_23FB24F6C(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EBF388, (void (*)(uint64_t))MEMORY[0x24BE52488]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB24FA8()
{
  sub_23FB29654(&qword_256EB3988, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
}

_UNKNOWN **sub_23FB24FD4()
{
  return &protocol witness table for TranscriptProtoLocaleSettings;
}

void sub_23FB24FE0(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EBF3E0, (void (*)(uint64_t))MEMORY[0x24BE52660]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB2501C()
{
  sub_23FB29654(&qword_256EB3970, (void (*)(uint64_t))type metadata accessor for TranscriptProtoLocaleSettings);
}

_UNKNOWN **sub_23FB25048()
{
  return &protocol witness table for TranscriptProtoContextPrewarmRequest;
}

unint64_t sub_23FB25054(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB25078();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB25078()
{
  unint64_t result;

  result = qword_256EBF450;
  if (!qword_256EBF450)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextPrewarmRequest, &type metadata for ContextPrewarmRequest);
    atomic_store(result, (unint64_t *)&qword_256EBF450);
  }
  return result;
}

void sub_23FB250B4()
{
  sub_23FB29654(&qword_256EB2938, (void (*)(uint64_t))type metadata accessor for TranscriptProtoContextPrewarmRequest);
}

_UNKNOWN **sub_23FB250E0()
{
  return &protocol witness table for TranscriptProtoContextPrewarmCompleted;
}

unint64_t sub_23FB250EC(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB25110();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB25110()
{
  unint64_t result;

  result = qword_256EBF4C0;
  if (!qword_256EBF4C0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextPrewarmCompleted, &type metadata for ContextPrewarmCompleted);
    atomic_store(result, (unint64_t *)&qword_256EBF4C0);
  }
  return result;
}

void sub_23FB2514C()
{
  sub_23FB29654(&qword_256EB2950, (void (*)(uint64_t))type metadata accessor for TranscriptProtoContextPrewarmCompleted);
}

_UNKNOWN **sub_23FB25178()
{
  return &protocol witness table for TranscriptProtoSpeechQuery;
}

unint64_t sub_23FB25184(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB251A8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB251A8()
{
  unint64_t result;

  result = qword_256EBF530;
  if (!qword_256EBF530)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for SpeechQuery, &type metadata for SpeechQuery);
    atomic_store(result, (unint64_t *)&qword_256EBF530);
  }
  return result;
}

void sub_23FB251E4()
{
  sub_23FB29654(&qword_256EB3B48, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSpeechQuery);
}

_UNKNOWN **sub_23FB25210()
{
  return &protocol witness table for TranscriptProtoTextQuery;
}

void sub_23FB2521C(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EBF5A0, (void (*)(uint64_t))type metadata accessor for TextQuery);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB25258()
{
  sub_23FB29654(&qword_256EB3B18, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTextQuery);
}

_UNKNOWN **sub_23FB25284()
{
  return &protocol witness table for TranscriptProtoRequest;
}

void sub_23FB25290(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EBF610, (void (*)(uint64_t))type metadata accessor for Request);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB252CC()
{
  sub_23FB29654(&qword_256EB2748, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequest);
}

_UNKNOWN **sub_23FB252F8()
{
  return &protocol witness table for TranscriptProtoRequestContent;
}

void sub_23FB25304(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EBF680, (void (*)(uint64_t))type metadata accessor for RequestContent);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB25340()
{
  sub_23FB29654(&qword_256EB2760, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestContent);
}

_UNKNOWN **sub_23FB2536C()
{
  return &protocol witness table for TranscriptProtoRequestContentStopContent;
}

unint64_t sub_23FB25378(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB2539C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB2539C()
{
  unint64_t result;

  result = qword_256EBF6F0;
  if (!qword_256EBF6F0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestContent.StopContent, &type metadata for RequestContent.StopContent);
    atomic_store(result, (unint64_t *)&qword_256EBF6F0);
  }
  return result;
}

void sub_23FB253D8()
{
  sub_23FB29654(&qword_256EB2778, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestContentStopContent);
}

_UNKNOWN **sub_23FB25404()
{
  return &protocol witness table for TranscriptProtoRequestContentTextContent;
}

void sub_23FB25410(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EBF760, (void (*)(uint64_t))type metadata accessor for RequestContent.TextContent);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB2544C()
{
  sub_23FB29654(&qword_256EB2790, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestContentTextContent);
}

_UNKNOWN **sub_23FB25478()
{
  return &protocol witness table for TranscriptProtoRequestContentSpeechContent;
}

unint64_t sub_23FB25484(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB254A8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB254A8()
{
  unint64_t result;

  result = qword_256EBF7D0;
  if (!qword_256EBF7D0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestContent.SpeechContent, &type metadata for RequestContent.SpeechContent);
    atomic_store(result, (unint64_t *)&qword_256EBF7D0);
  }
  return result;
}

void sub_23FB254E4()
{
  sub_23FB29654(&qword_256EB27A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestContentSpeechContent);
}

_UNKNOWN **sub_23FB25510()
{
  return &protocol witness table for TranscriptProtoExternalAgentRequest;
}

void sub_23FB2551C(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EBF840, (void (*)(uint64_t))type metadata accessor for ExternalAgentRequest);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB25558()
{
  sub_23FB29654(&qword_256EB27D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentRequest);
}

_UNKNOWN **sub_23FB25584()
{
  return &protocol witness table for TranscriptProtoRequestPrescribedPlan;
}

unint64_t sub_23FB25590(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB255B4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB255B4()
{
  unint64_t result;

  result = qword_256EBF8B0;
  if (!qword_256EBF8B0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestPrescribedPlan, &type metadata for RequestPrescribedPlan);
    atomic_store(result, (unint64_t *)&qword_256EBF8B0);
  }
  return result;
}

void sub_23FB255F0()
{
  sub_23FB29654(&qword_256EB2800, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlan);
}

_UNKNOWN **sub_23FB2561C()
{
  return &protocol witness table for TranscriptProtoRequestPrescribedPlanSearchTool;
}

unint64_t sub_23FB25628(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB2564C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB2564C()
{
  unint64_t result;

  result = qword_256EBF920;
  if (!qword_256EBF920)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestPrescribedPlan.SearchTool, &type metadata for RequestPrescribedPlan.SearchTool);
    atomic_store(result, (unint64_t *)&qword_256EBF920);
  }
  return result;
}

void sub_23FB25688()
{
  sub_23FB29654(&qword_256EB2818, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool);
}

_UNKNOWN **sub_23FB256B4()
{
  return &protocol witness table for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool;
}

unint64_t sub_23FB256C0(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB256E4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB256E4()
{
  unint64_t result;

  result = qword_256EBF990;
  if (!qword_256EBF990)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestPrescribedPlan.LowConfidenceKnowledgeTool, &type metadata for RequestPrescribedPlan.LowConfidenceKnowledgeTool);
    atomic_store(result, (unint64_t *)&qword_256EBF990);
  }
  return result;
}

void sub_23FB25720()
{
  sub_23FB29654(&qword_256EB2830, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
}

_UNKNOWN **sub_23FB2574C()
{
  return &protocol witness table for TranscriptProtoRequestPrescribedPlanTextTool;
}

unint64_t sub_23FB25758(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB2577C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB2577C()
{
  unint64_t result;

  result = qword_256EBFA00;
  if (!qword_256EBFA00)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestPrescribedPlan.TextTool, &type metadata for RequestPrescribedPlan.TextTool);
    atomic_store(result, (unint64_t *)&qword_256EBFA00);
  }
  return result;
}

void sub_23FB257B8()
{
  sub_23FB29654(&qword_256EB2848, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool);
}

_UNKNOWN **sub_23FB257E4()
{
  return &protocol witness table for TranscriptProtoRequestPrescribedPlanConvertTool;
}

unint64_t sub_23FB257F0(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB25814();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB25814()
{
  unint64_t result;

  result = qword_256EBFA88;
  if (!qword_256EBFA88)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestPrescribedPlan.ConvertTool, &type metadata for RequestPrescribedPlan.ConvertTool);
    atomic_store(result, (unint64_t *)&qword_256EBFA88);
  }
  return result;
}

void sub_23FB25850()
{
  sub_23FB29654(&qword_256EB2860, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool);
}

_UNKNOWN **sub_23FB2587C()
{
  return &protocol witness table for TranscriptProtoRequestPrescribedPlanDisplayTool;
}

unint64_t sub_23FB25888(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB258AC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB258AC()
{
  unint64_t result;

  result = qword_256EBFAF8;
  if (!qword_256EBFAF8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestPrescribedPlan.DisplayTool, &type metadata for RequestPrescribedPlan.DisplayTool);
    atomic_store(result, (unint64_t *)&qword_256EBFAF8);
  }
  return result;
}

void sub_23FB258E8()
{
  sub_23FB29654(&qword_256EB2878, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool);
}

_UNKNOWN **sub_23FB25914()
{
  return &protocol witness table for TranscriptProtoRequestPrescribedPlanKnowledgeTool;
}

unint64_t sub_23FB25920(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB25944();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB25944()
{
  unint64_t result;

  result = qword_256EBFB50;
  if (!qword_256EBFB50)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestPrescribedPlan.KnowledgeTool, &type metadata for RequestPrescribedPlan.KnowledgeTool);
    atomic_store(result, (unint64_t *)&qword_256EBFB50);
  }
  return result;
}

void sub_23FB25980()
{
  sub_23FB29654(&qword_256EB2890, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
}

_UNKNOWN **sub_23FB259AC()
{
  return &protocol witness table for TranscriptProtoAction;
}

void sub_23FB259B8(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EBFBC0, (void (*)(uint64_t))type metadata accessor for Action);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB259F4()
{
  sub_23FB29654(&qword_256EA7F08, (void (*)(uint64_t))type metadata accessor for TranscriptProtoAction);
}

_UNKNOWN **sub_23FB25A20()
{
  return &protocol witness table for TranscriptProtoActionCancellation;
}

void sub_23FB25A2C(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EBFC30, (void (*)(uint64_t))type metadata accessor for ActionCancellation);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB25A68()
{
  sub_23FB29654(&qword_256EB28C8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionCancellation);
}

_UNKNOWN **sub_23FB25A94()
{
  return &protocol witness table for TranscriptProtoClientAction;
}

void sub_23FB25AA0(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EBFCA0, (void (*)(uint64_t))type metadata accessor for ClientAction);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB25ADC()
{
  sub_23FB29654(&qword_256EB2A18, (void (*)(uint64_t))type metadata accessor for TranscriptProtoClientAction);
}

_UNKNOWN **sub_23FB25B08()
{
  return &protocol witness table for TranscriptProtoQueryStep;
}

void sub_23FB25B14(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EBFD10, (void (*)(uint64_t))type metadata accessor for QueryStep);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB25B50()
{
  sub_23FB29654(&qword_256EB2E38, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryStep);
}

_UNKNOWN **sub_23FB25B7C()
{
  return &protocol witness table for TranscriptProtoVariableStep;
}

void sub_23FB25B88(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EBFD80, (void (*)(uint64_t))type metadata accessor for VariableStep);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB25BC4()
{
  sub_23FB29654(&qword_256EB31E8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoVariableStep);
}

_UNKNOWN **sub_23FB25BF0()
{
  return &protocol witness table for TranscriptProtoIntelligenceFlowError;
}

void sub_23FB25BFC(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EBFDF0, (void (*)(uint64_t))MEMORY[0x24BE52080]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB25C38()
{
  sub_23FB29654(&qword_256EB2AA0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoIntelligenceFlowError);
}

_UNKNOWN **sub_23FB25C64()
{
  return &protocol witness table for TranscriptProtoSystemPromptResolution;
}

void sub_23FB25C70(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EBFE60, (void (*)(uint64_t))type metadata accessor for RequestContent.SystemPromptResolution);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB25CAC()
{
  sub_23FB29654(&qword_256EB3078, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemPromptResolution);
}

_UNKNOWN **sub_23FB25CD8()
{
  return &protocol witness table for TranscriptProtoActionStepResult;
}

void sub_23FB25CE4(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EBFF00, (void (*)(uint64_t))type metadata accessor for ActionStepResult);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB25D20()
{
  sub_23FB29654(&qword_256EB2998, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionStepResult);
}

_UNKNOWN **sub_23FB25D4C()
{
  return &protocol witness table for TranscriptProtoStatementResult;
}

void sub_23FB25D58(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EBFF70, (void (*)(uint64_t))type metadata accessor for StatementResult);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB25D94()
{
  sub_23FB29654(&qword_256EB1D78, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementResult);
}

_UNKNOWN **sub_23FB25DC0()
{
  return &protocol witness table for TranscriptProtoQueryStepResults;
}

void sub_23FB25DCC(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EBFFE0, (void (*)(uint64_t))type metadata accessor for QueryStepResults);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB25E08()
{
  sub_23FB29654(&qword_256EB2E60, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryStepResults);
}

_UNKNOWN **sub_23FB25E34()
{
  return &protocol witness table for TranscriptProtoActionResponse;
}

void sub_23FB25E40(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC0050, (void (*)(uint64_t))MEMORY[0x24BE525C0]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB25E7C()
{
  sub_23FB29654(&qword_256EB30A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionResponse);
}

_UNKNOWN **sub_23FB25EA8()
{
  return &protocol witness table for TranscriptProtoSystemResponse;
}

void sub_23FB25EB4(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC00C0, (void (*)(uint64_t))MEMORY[0x24BE530F8]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB25EF0()
{
  sub_23FB29654(&qword_256EB3938, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemResponse);
}

_UNKNOWN **sub_23FB25F1C()
{
  return &protocol witness table for TranscriptProtoInterpretedStatementResult;
}

void sub_23FB25F28(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC0130, (void (*)(uint64_t))MEMORY[0x24BE53BB8]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB25F64()
{
  sub_23FB29654(&qword_256EB2560, (void (*)(uint64_t))type metadata accessor for TranscriptProtoInterpretedStatementResult);
}

_UNKNOWN **sub_23FB25F90()
{
  return &protocol witness table for TranscriptProtoActionResolverRequest;
}

void sub_23FB25F9C(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC01A0, (void (*)(uint64_t))type metadata accessor for ActionResolverRequest);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB25FD8()
{
  sub_23FB29654(&qword_256EB30C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionResolverRequest);
}

_UNKNOWN **sub_23FB26004()
{
  return &protocol witness table for TranscriptProtoResponseGenerationRequest;
}

unint64_t sub_23FB26010(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB26034();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB26034()
{
  unint64_t result;

  result = qword_256EC0210;
  if (!qword_256EC0210)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ResponseGenerationRequest, &type metadata for ResponseGenerationRequest);
    atomic_store(result, (unint64_t *)&qword_256EC0210);
  }
  return result;
}

void sub_23FB26070()
{
  sub_23FB29654(&qword_256EB29D8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseGenerationRequest);
}

_UNKNOWN **sub_23FB2609C()
{
  return &protocol witness table for TranscriptProtoClientInitiatedClientAction;
}

unint64_t sub_23FB260A8(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB260CC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB260CC()
{
  unint64_t result;

  result = qword_256EC0298;
  if (!qword_256EC0298)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ClientInitiatedClientAction, &type metadata for ClientInitiatedClientAction);
    atomic_store(result, (unint64_t *)&qword_256EC0298);
  }
  return result;
}

void sub_23FB26108()
{
  sub_23FB29654(&qword_256EB3160, (void (*)(uint64_t))type metadata accessor for TranscriptProtoClientInitiatedClientAction);
}

_UNKNOWN **sub_23FB26134()
{
  return &protocol witness table for TranscriptProtoSafetyModeRelease;
}

unint64_t sub_23FB26140(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB26164();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB26164()
{
  unint64_t result;

  result = qword_256EC0308;
  if (!qword_256EC0308)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for SafetyModeRelease, &type metadata for SafetyModeRelease);
    atomic_store(result, (unint64_t *)&qword_256EC0308);
  }
  return result;
}

void sub_23FB261A0()
{
  sub_23FB29654(&qword_256EB3110, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSafetyModeRelease);
}

_UNKNOWN **sub_23FB261CC()
{
  return &protocol witness table for TranscriptProtoSafetyModeException;
}

unint64_t sub_23FB261D8(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB261FC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB261FC()
{
  unint64_t result;

  result = qword_256EC0378;
  if (!qword_256EC0378)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for SafetyModeException, &type metadata for SafetyModeException);
    atomic_store(result, (unint64_t *)&qword_256EC0378);
  }
  return result;
}

void sub_23FB26238()
{
  sub_23FB29654(&qword_256EB3128, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSafetyModeException);
}

_UNKNOWN **sub_23FB26264()
{
  return &protocol witness table for TranscriptProtoVariableSetter;
}

void sub_23FB26270(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC03E8, (void (*)(uint64_t))type metadata accessor for VariableSetter);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB262AC()
{
  sub_23FB29654(&qword_256EB2200, (void (*)(uint64_t))type metadata accessor for TranscriptProtoVariableSetter);
}

_UNKNOWN **sub_23FB262D8()
{
  return &protocol witness table for TranscriptProtoSystemPromptResolutionUserAction;
}

void sub_23FB262E4(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC0458, (void (*)(uint64_t))type metadata accessor for RequestContent.SystemPromptResolution.UserAction);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB26320()
{
  sub_23FB29654(&qword_256EB3190, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction);
}

_UNKNOWN **sub_23FB2634C()
{
  return &protocol witness table for TranscriptProtoActionResult;
}

void sub_23FB26358(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC04C8, (void (*)(uint64_t))type metadata accessor for ActionResult);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB26394()
{
  sub_23FB29654(&qword_256EB2968, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionResult);
}

_UNKNOWN **sub_23FB263C0()
{
  return &protocol witness table for TranscriptProtoStatementResultPayload;
}

void sub_23FB263CC(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC0538, (void (*)(uint64_t))type metadata accessor for StatementResultPayload);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB26408()
{
  sub_23FB29654(&qword_256EB29B0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementResultPayload);
}

_UNKNOWN **sub_23FB26434()
{
  return &protocol witness table for TranscriptProtoResponseOutput;
}

void sub_23FB26440(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC05A8, (void (*)(uint64_t))MEMORY[0x24BE52F50]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB2647C()
{
  sub_23FB29654(&qword_256EB2E90, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseOutput);
}

_UNKNOWN **sub_23FB264A8()
{
  return &protocol witness table for TranscriptProtoQueryResults;
}

unint64_t sub_23FB264B4(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB264D8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB264D8()
{
  unint64_t result;

  result = qword_256EC0618;
  if (!qword_256EC0618)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for QueryResults, &type metadata for QueryResults);
    atomic_store(result, (unint64_t *)&qword_256EC0618);
  }
  return result;
}

void sub_23FB26514()
{
  sub_23FB29654(&qword_256EB1FF8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryResults);
}

_UNKNOWN **sub_23FB26540()
{
  return &protocol witness table for TranscriptProtoParameterQuery;
}

void sub_23FB2654C(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC0688, (void (*)(uint64_t))type metadata accessor for ParameterQuery);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB26588()
{
  sub_23FB29654(&qword_256EB1FD0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParameterQuery);
}

_UNKNOWN **sub_23FB265B4()
{
  return &protocol witness table for TranscriptProtoActionParameterContext;
}

void sub_23FB265C0(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC06F8, (void (*)(uint64_t))type metadata accessor for ActionParameterContext);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB265FC()
{
  sub_23FB29654(&qword_256EB2A88, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionParameterContext);
}

_UNKNOWN **sub_23FB26628()
{
  return &protocol witness table for TranscriptProtoActionConfirmation;
}

void sub_23FB26634(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC07C8, (void (*)(uint64_t))MEMORY[0x24BE535D0]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB26670()
{
  sub_23FB29654(&qword_256EB28F8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionConfirmation);
}

_UNKNOWN **sub_23FB2669C()
{
  return &protocol witness table for TranscriptProtoParameterValue;
}

void sub_23FB266A8(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC0838, (void (*)(uint64_t))MEMORY[0x24BE52D68]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB266E4()
{
  sub_23FB29654(&qword_256EB1D18, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParameterValue);
}

_UNKNOWN **sub_23FB26710()
{
  return &protocol witness table for TranscriptProtoPromptSelection;
}

void sub_23FB2671C(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC08A8, (void (*)(uint64_t))MEMORY[0x24BE53158]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB26758()
{
  sub_23FB29654(&qword_256EB28E0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPromptSelection);
}

_UNKNOWN **sub_23FB26784()
{
  return &protocol witness table for TranscriptProtoParameterNeedsValue;
}

void sub_23FB26790(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC0918, (void (*)(uint64_t))MEMORY[0x24BE53668]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB267CC()
{
  sub_23FB29654(&qword_256EB2CA8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParameterNeedsValue);
}

_UNKNOWN **sub_23FB267F8()
{
  return &protocol witness table for TranscriptProtoParameterConfirmation;
}

void sub_23FB26804(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC0988, (void (*)(uint64_t))MEMORY[0x24BE53960]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB26840()
{
  sub_23FB29654(&qword_256EB2C50, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParameterConfirmation);
}

_UNKNOWN **sub_23FB2686C()
{
  return &protocol witness table for TranscriptProtoParameterDisambiguation;
}

void sub_23FB26878(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC09F8, (void (*)(uint64_t))MEMORY[0x24BE53AD0]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB268B4()
{
  sub_23FB29654(&qword_256EB2C68, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParameterDisambiguation);
}

_UNKNOWN **sub_23FB268E0()
{
  return &protocol witness table for TranscriptProtoParameterNotAllowed;
}

void sub_23FB268EC(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC0A68, (void (*)(uint64_t))MEMORY[0x24BE536C0]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB26928()
{
  sub_23FB29654(&qword_256EB2CC0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParameterNotAllowed);
}

_UNKNOWN **sub_23FB26954()
{
  return &protocol witness table for TranscriptProtoCandidate;
}

void sub_23FB26960(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC0B08, (void (*)(uint64_t))type metadata accessor for Candidate);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB2699C()
{
  sub_23FB29654(&qword_256EB1FC0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoCandidate);
}

_UNKNOWN **sub_23FB269C8()
{
  return &protocol witness table for TranscriptProtoQueryPredicate;
}

void sub_23FB269D4(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC0B78, (void (*)(uint64_t))type metadata accessor for QueryPredicate);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB26A10()
{
  sub_23FB29654(&qword_256EB1F98, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryPredicate);
}

_UNKNOWN **sub_23FB26A3C()
{
  return &protocol witness table for TranscriptProtoCandidatePromptStatus;
}

unint64_t sub_23FB26A48(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB26A6C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB26A6C()
{
  unint64_t result;

  result = qword_256EC0C48;
  if (!qword_256EC0C48)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for Candidate.PromptStatus, &type metadata for Candidate.PromptStatus);
    atomic_store(result, (unint64_t *)&qword_256EC0C48);
  }
  return result;
}

void sub_23FB26AA8()
{
  sub_23FB29654(&qword_256EB2A00, (void (*)(uint64_t))type metadata accessor for TranscriptProtoCandidatePromptStatus);
}

_UNKNOWN **sub_23FB26AD4()
{
  return &protocol witness table for TranscriptProtoPlan;
}

unint64_t sub_23FB26AE0(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB26B04();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB26B04()
{
  unint64_t result;

  result = qword_256EC0CE8;
  if (!qword_256EC0CE8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for Session.Plan, &type metadata for Session.Plan);
    atomic_store(result, (unint64_t *)&qword_256EC0CE8);
  }
  return result;
}

void sub_23FB26B40()
{
  sub_23FB29654(&qword_256EB2D28, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPlan);
}

_UNKNOWN **sub_23FB26B6C()
{
  return &protocol witness table for TranscriptProtoRecoverableError;
}

unint64_t sub_23FB26B78(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB26B9C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB26B9C()
{
  unint64_t result;

  result = qword_256EC0D58;
  if (!qword_256EC0D58)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for Session.RecoverableError, &type metadata for Session.RecoverableError);
    atomic_store(result, (unint64_t *)&qword_256EC0D58);
  }
  return result;
}

void sub_23FB26BD8()
{
  sub_23FB29654(&qword_256EB2D40, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRecoverableError);
}

_UNKNOWN **sub_23FB26C04()
{
  return &protocol witness table for TranscriptProtoPlanGenerationError;
}

unint64_t sub_23FB26C10(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB26C34();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB26C34()
{
  unint64_t result;

  result = qword_256EC0DC8;
  if (!qword_256EC0DC8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for Session.PlanGenerationError, &type metadata for Session.PlanGenerationError);
    atomic_store(result, (unint64_t *)&qword_256EC0DC8);
  }
  return result;
}

void sub_23FB26C70()
{
  sub_23FB29654(&qword_256EB2D58, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPlanGenerationError);
}

_UNKNOWN **sub_23FB26C9C()
{
  return &protocol witness table for TranscriptProtoPlanGenerationModelOutputError;
}

unint64_t sub_23FB26CA8(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB26CCC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB26CCC()
{
  unint64_t result;

  result = qword_256EC0E38;
  if (!qword_256EC0E38)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for Session.PlanGenerationModelOutputError, &type metadata for Session.PlanGenerationModelOutputError);
    atomic_store(result, (unint64_t *)&qword_256EC0E38);
  }
  return result;
}

void sub_23FB26D08()
{
  sub_23FB29654(&qword_256EB2D70, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
}

_UNKNOWN **sub_23FB26D34()
{
  return &protocol witness table for TranscriptProtoDecompositionResult;
}

unint64_t sub_23FB26D40(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB26D64();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB26D64()
{
  unint64_t result;

  result = qword_256EC0EA8;
  if (!qword_256EC0EA8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for Session.Plan.DecompositionResult, &type metadata for Session.Plan.DecompositionResult);
    atomic_store(result, (unint64_t *)&qword_256EC0EA8);
  }
  return result;
}

void sub_23FB26DA0()
{
  sub_23FB29654(&qword_256EB2A70, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDecompositionResult);
}

_UNKNOWN **sub_23FB26DCC()
{
  return &protocol witness table for TranscriptProtoASTProgram;
}

unint64_t sub_23FB26DD8(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB26DFC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB26DFC()
{
  unint64_t result;

  result = qword_256EC0F18;
  if (!qword_256EC0F18)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Program, &type metadata for AST.Program);
    atomic_store(result, (unint64_t *)&qword_256EC0F18);
  }
  return result;
}

void sub_23FB26E38()
{
  sub_23FB29654(&qword_256EB3668, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTProgram);
}

_UNKNOWN **sub_23FB26E64()
{
  return &protocol witness table for TranscriptProtoExpression;
}

void sub_23FB26E70(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC0F88, (void (*)(uint64_t))type metadata accessor for Expression);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB26EAC()
{
  sub_23FB29654(&qword_256EB3418, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExpression);
}

_UNKNOWN **sub_23FB26ED8()
{
  return &protocol witness table for TranscriptProtoValueExpression;
}

unint64_t sub_23FB26EE4(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB26F08();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB26F08()
{
  unint64_t result;

  result = qword_256EC0FF8;
  if (!qword_256EC0FF8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ValueExpression, &type metadata for ValueExpression);
    atomic_store(result, (unint64_t *)&qword_256EC0FF8);
  }
  return result;
}

void sub_23FB26F44()
{
  sub_23FB29654(&qword_256EB3430, (void (*)(uint64_t))type metadata accessor for TranscriptProtoValueExpression);
}

_UNKNOWN **sub_23FB26F70()
{
  return &protocol witness table for TranscriptProtoPrefixExpression;
}

void sub_23FB26F7C(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC1068, (void (*)(uint64_t))type metadata accessor for PrefixExpression);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB26FB8()
{
  sub_23FB29654(&qword_256EB3460, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPrefixExpression);
}

_UNKNOWN **sub_23FB26FE4()
{
  return &protocol witness table for TranscriptProtoInfixExpression;
}

void sub_23FB26FF0(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC1108, (void (*)(uint64_t))type metadata accessor for InfixExpression);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB2702C()
{
  sub_23FB29654(&qword_256EB3478, (void (*)(uint64_t))type metadata accessor for TranscriptProtoInfixExpression);
}

_UNKNOWN **sub_23FB27058()
{
  return &protocol witness table for TranscriptProtoDotExpression;
}

void sub_23FB27064(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC11A8, (void (*)(uint64_t))type metadata accessor for DotExpression);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB270A0()
{
  sub_23FB29654(&qword_256EB34A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDotExpression);
}

_UNKNOWN **sub_23FB270CC()
{
  return &protocol witness table for TranscriptProtoIndexExpression;
}

void sub_23FB270D8(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC1218, (void (*)(uint64_t))type metadata accessor for IndexExpression);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB27114()
{
  sub_23FB29654(&qword_256EB34C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoIndexExpression);
}

_UNKNOWN **sub_23FB27140()
{
  return &protocol witness table for TranscriptProtoUpdateParametersExpression;
}

void sub_23FB2714C(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC1288, (void (*)(uint64_t))type metadata accessor for UpdateParametersExpression);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB27188()
{
  sub_23FB29654(&qword_256EB34D8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUpdateParametersExpression);
}

_UNKNOWN **sub_23FB271B4()
{
  return &protocol witness table for TranscriptProtoUpdateParameterExpression_UpdateParameter;
}

void sub_23FB271C0(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC12F8, (void (*)(uint64_t))type metadata accessor for UpdateParametersExpression.UpdateParameter);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB271FC()
{
  sub_23FB29654(&qword_256EB2390, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
}

_UNKNOWN **sub_23FB27228()
{
  return &protocol witness table for TranscriptProtoCallExpression;
}

unint64_t sub_23FB27234(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB27258();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB27258()
{
  unint64_t result;

  result = qword_256EC1398;
  if (!qword_256EC1398)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for CallExpression, &type metadata for CallExpression);
    atomic_store(result, (unint64_t *)&qword_256EC1398);
  }
  return result;
}

void sub_23FB27294()
{
  sub_23FB29654(&qword_256EB3500, (void (*)(uint64_t))type metadata accessor for TranscriptProtoCallExpression);
}

_UNKNOWN **sub_23FB272C0()
{
  return &protocol witness table for TranscriptProtoSayExpression;
}

unint64_t sub_23FB272CC(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB272F0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB272F0()
{
  unint64_t result;

  result = qword_256EC1408;
  if (!qword_256EC1408)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for SayExpression, &type metadata for SayExpression);
    atomic_store(result, (unint64_t *)&qword_256EC1408);
  }
  return result;
}

void sub_23FB2732C()
{
  sub_23FB29654(&qword_256EB3518, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSayExpression);
}

_UNKNOWN **sub_23FB27358()
{
  return &protocol witness table for TranscriptProtoPickExpression;
}

void sub_23FB27364(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC1478, (void (*)(uint64_t))type metadata accessor for PickExpression);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB273A0()
{
  sub_23FB29654(&qword_256EB3530, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPickExpression);
}

_UNKNOWN **sub_23FB273CC()
{
  return &protocol witness table for TranscriptProtoConfirmExpression;
}

void sub_23FB273D8(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC14E8, (void (*)(uint64_t))type metadata accessor for ConfirmExpression);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB27414()
{
  sub_23FB29654(&qword_256EB3548, (void (*)(uint64_t))type metadata accessor for TranscriptProtoConfirmExpression);
}

_UNKNOWN **sub_23FB27440()
{
  return &protocol witness table for TranscriptProtoSearchExpression;
}

unint64_t sub_23FB2744C(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB27470();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB27470()
{
  unint64_t result;

  result = qword_256EC1558;
  if (!qword_256EC1558)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for SearchExpression, &type metadata for SearchExpression);
    atomic_store(result, (unint64_t *)&qword_256EC1558);
  }
  return result;
}

void sub_23FB274AC()
{
  sub_23FB29654(&qword_256EB3560, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSearchExpression);
}

_UNKNOWN **sub_23FB274D8()
{
  return &protocol witness table for TranscriptProtoPickOneExpression;
}

void sub_23FB274E4(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC15C8, (void (*)(uint64_t))type metadata accessor for PickOneExpression);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB27520()
{
  sub_23FB29654(&qword_256EB3578, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPickOneExpression);
}

_UNKNOWN **sub_23FB2754C()
{
  return &protocol witness table for TranscriptProtoResolveToolExpression;
}

unint64_t sub_23FB27558(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB2757C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB2757C()
{
  unint64_t result;

  result = qword_256EC1638;
  if (!qword_256EC1638)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ResolveToolExpression, &type metadata for ResolveToolExpression);
    atomic_store(result, (unint64_t *)&qword_256EC1638);
  }
  return result;
}

void sub_23FB275B8()
{
  sub_23FB29654(&qword_256EB3590, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResolveToolExpression);
}

_UNKNOWN **sub_23FB275E4()
{
  return &protocol witness table for TranscriptProtoUndoExpression;
}

void sub_23FB275F0(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC16A8, (void (*)(uint64_t))type metadata accessor for UndoExpression);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB2762C()
{
  sub_23FB29654(&qword_256EB35A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUndoExpression);
}

_UNKNOWN **sub_23FB27658()
{
  return &protocol witness table for TranscriptProtoRejectExpression;
}

void sub_23FB27664(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC1718, (void (*)(uint64_t))type metadata accessor for RejectExpression);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB276A0()
{
  sub_23FB29654(&qword_256EB35C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRejectExpression);
}

_UNKNOWN **sub_23FB276CC()
{
  return &protocol witness table for TranscriptProtoCancelExpression;
}

void sub_23FB276D8(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC1788, (void (*)(uint64_t))type metadata accessor for CancelExpression);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB27714()
{
  sub_23FB29654(&qword_256EB35D8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoCancelExpression);
}

_UNKNOWN **sub_23FB27740()
{
  return &protocol witness table for TranscriptProtoOpenExpression;
}

void sub_23FB2774C(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC17F8, (void (*)(uint64_t))type metadata accessor for OpenExpression);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB27788()
{
  sub_23FB29654(&qword_256EB3650, (void (*)(uint64_t))type metadata accessor for TranscriptProtoOpenExpression);
}

_UNKNOWN **sub_23FB277B4()
{
  return &protocol witness table for TranscriptProtoProgramStatement;
}

void sub_23FB277C0(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC1868, (void (*)(uint64_t))type metadata accessor for ProgramStatement);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB277FC()
{
  sub_23FB29654(&qword_256EB1F30, (void (*)(uint64_t))type metadata accessor for TranscriptProtoProgramStatement);
}

_UNKNOWN **sub_23FB27828()
{
  return &protocol witness table for TranscriptProtoStatementID;
}

void sub_23FB27834(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC18D8, (void (*)(uint64_t))MEMORY[0x24BE52140]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB27870()
{
  sub_23FB29654(&qword_256EB2020, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
}

_UNKNOWN **sub_23FB2789C()
{
  return &protocol witness table for TranscriptProtoActionOutcome;
}

void sub_23FB278A8(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC1948, (void (*)(uint64_t))MEMORY[0x24BE523C8]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB278E4()
{
  sub_23FB29654(&qword_256EB2B18, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionOutcome);
}

_UNKNOWN **sub_23FB27910()
{
  return &protocol witness table for TranscriptProtoActionRequirement;
}

void sub_23FB2791C(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC19B8, (void (*)(uint64_t))MEMORY[0x24BE53378]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB27958()
{
  sub_23FB29654(&qword_256EB2B30, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionRequirement);
}

_UNKNOWN **sub_23FB27984()
{
  return &protocol witness table for TranscriptProtoStatementOutcome;
}

void sub_23FB27990(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC1AE8, (void (*)(uint64_t))MEMORY[0x24BE53330]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB279CC()
{
  sub_23FB29654(&qword_256EA7F00, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementOutcome);
}

_UNKNOWN **sub_23FB279F8()
{
  return &protocol witness table for TranscriptProtoActionSuccess;
}

void sub_23FB27A04(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC1B58, (void (*)(uint64_t))MEMORY[0x24BE52458]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB27A40()
{
  sub_23FB29654(&qword_256EB2C20, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionSuccess);
}

_UNKNOWN **sub_23FB27A6C()
{
  return &protocol witness table for TranscriptProtoResponseManifest;
}

void sub_23FB27A78(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC1BC8, (void (*)(uint64_t))MEMORY[0x24BE532A0]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB27AB4()
{
  sub_23FB29654(&qword_256EA7EF0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseManifest);
}

_UNKNOWN **sub_23FB27AE0()
{
  return &protocol witness table for TranscriptProtoResponseParameter;
}

void sub_23FB27AEC(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC1C68, (void (*)(uint64_t))MEMORY[0x24BE534F0]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB27B28()
{
  sub_23FB29654(&qword_256EB20A0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseParameter);
}

_UNKNOWN **sub_23FB27B54()
{
  return &protocol witness table for TranscriptProtoResponseDialog;
}

void sub_23FB27B60(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC1CD8, (void (*)(uint64_t))MEMORY[0x24BE52DE0]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB27B9C()
{
  sub_23FB29654(&qword_256EB2E78, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseDialog);
}

_UNKNOWN **sub_23FB27BC8()
{
  return &protocol witness table for TranscriptProtoResponseVisual;
}

void sub_23FB27BD4(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC1D48, (void (*)(uint64_t))MEMORY[0x24BE53098]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB27C10()
{
  sub_23FB29654(&qword_256EB2FC8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseVisual);
}

_UNKNOWN **sub_23FB27C3C()
{
  return &protocol witness table for TranscriptProtoUIType;
}

void sub_23FB27C48(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC1DB8, (void (*)(uint64_t))MEMORY[0x24BE53030]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB27C84()
{
  sub_23FB29654(&qword_256EB20C8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUIType);
}

_UNKNOWN **sub_23FB27CB0()
{
  return &protocol witness table for TranscriptProtoUILabel;
}

void sub_23FB27CBC(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC1E10, (void (*)(uint64_t))MEMORY[0x24BE53080]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB27CF8()
{
  sub_23FB29654(&qword_256EB20D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUILabel);
}

_UNKNOWN **sub_23FB27D24()
{
  return &protocol witness table for TranscriptProtoUIConfirmationLabel;
}

void sub_23FB27D30(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC1E98, (void (*)(uint64_t))MEMORY[0x24BE53070]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB27D6C()
{
  sub_23FB29654(&qword_256EB3000, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUIConfirmationLabel);
}

_UNKNOWN **sub_23FB27D98()
{
  return &protocol witness table for TranscriptProtoArchiveViewPayload;
}

void sub_23FB27DA4(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC1F08, (void (*)(uint64_t))MEMORY[0x24BE52FD0]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB27DE0()
{
  sub_23FB29654(&qword_256EB3018, (void (*)(uint64_t))type metadata accessor for TranscriptProtoArchiveViewPayload);
}

_UNKNOWN **sub_23FB27E0C()
{
  return &protocol witness table for TranscriptProtoLiveActivityPayload;
}

void sub_23FB27E18(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC1F78, (void (*)(uint64_t))MEMORY[0x24BE52FF0]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB27E54()
{
  sub_23FB29654(&qword_256EB3030, (void (*)(uint64_t))type metadata accessor for TranscriptProtoLiveActivityPayload);
}

_UNKNOWN **sub_23FB27E80()
{
  return &protocol witness table for TranscriptProtoPluginSnippetPayload;
}

void sub_23FB27E8C(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC1FE8, (void (*)(uint64_t))MEMORY[0x24BE53018]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB27EC8()
{
  sub_23FB29654(&qword_256EB3048, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPluginSnippetPayload);
}

_UNKNOWN **sub_23FB27EF4()
{
  return &protocol witness table for TranscriptProtoControlPayload;
}

void sub_23FB27F00(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC2058, (void (*)(uint64_t))MEMORY[0x24BE52FA0]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB27F3C()
{
  sub_23FB29654(&qword_256EB3060, (void (*)(uint64_t))type metadata accessor for TranscriptProtoControlPayload);
}

_UNKNOWN **sub_23FB27F68()
{
  return &protocol witness table for TranscriptProtoVisualOutput;
}

void sub_23FB27F74(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC20F8, (void (*)(uint64_t))MEMORY[0x24BE52EA8]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB27FB0()
{
  sub_23FB29654(&qword_256EB2010, (void (*)(uint64_t))type metadata accessor for TranscriptProtoVisualOutput);
}

_UNKNOWN **sub_23FB27FDC()
{
  return &protocol witness table for TranscriptProtoLiveActivityOutputPayload;
}

void sub_23FB27FE8(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC2168, (void (*)(uint64_t))MEMORY[0x24BE52E10]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB28024()
{
  sub_23FB29654(&qword_256EB2EB8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoLiveActivityOutputPayload);
}

_UNKNOWN **sub_23FB28050()
{
  return &protocol witness table for TranscriptProtoInAppResponseOutputPayload;
}

void sub_23FB2805C(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC21D8, (void (*)(uint64_t))MEMORY[0x24BE52E70]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB28098()
{
  sub_23FB29654(&qword_256EB2ED0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoInAppResponseOutputPayload);
}

_UNKNOWN **sub_23FB280C4()
{
  return &protocol witness table for TranscriptProtoPluginSnippetOutputPayload;
}

void sub_23FB280D0(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC2248, (void (*)(uint64_t))MEMORY[0x24BE52E38]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB2810C()
{
  sub_23FB29654(&qword_256EB2F00, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPluginSnippetOutputPayload);
}

_UNKNOWN **sub_23FB28138()
{
  return &protocol witness table for TranscriptProtoDialogType;
}

void sub_23FB28144(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC22B8, (void (*)(uint64_t))MEMORY[0x24BE52F30]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB28180()
{
  sub_23FB29654(&qword_256EB2F18, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDialogType);
}

_UNKNOWN **sub_23FB281AC()
{
  return &protocol witness table for TranscriptProtoASTStmt;
}

unint64_t sub_23FB281B8(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB281DC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB281DC()
{
  unint64_t result;

  result = qword_256EC2310;
  if (!qword_256EC2310)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Stmt, &type metadata for AST.Stmt);
    atomic_store(result, (unint64_t *)&qword_256EC2310);
  }
  return result;
}

void sub_23FB28218()
{
  sub_23FB29654(&qword_256EB2430, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTStmt);
}

_UNKNOWN **sub_23FB28244()
{
  return &protocol witness table for TranscriptProtoASTFlatExpr;
}

void sub_23FB28250(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC2380, (void (*)(uint64_t))type metadata accessor for AST.FlatExpr);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB2828C()
{
  sub_23FB29654(&qword_256EB3390, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTFlatExpr);
}

_UNKNOWN **sub_23FB282B8()
{
  return &protocol witness table for TranscriptProtoASTExpr;
}

unint64_t sub_23FB282C4(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB282E8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB282E8()
{
  unint64_t result;

  result = qword_256EC23F0;
  if (!qword_256EC23F0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Expr, &type metadata for AST.Expr);
    atomic_store(result, (unint64_t *)&qword_256EC23F0);
  }
  return result;
}

void sub_23FB28324()
{
  sub_23FB29654(&qword_256EB2480, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTExpr);
}

_UNKNOWN **sub_23FB28350()
{
  return &protocol witness table for TranscriptProtoASTUpdateExpr;
}

unint64_t sub_23FB2835C(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB28380();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB28380()
{
  unint64_t result;

  result = qword_256EC2460;
  if (!qword_256EC2460)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.UpdateExpr, &type metadata for AST.UpdateExpr);
    atomic_store(result, (unint64_t *)&qword_256EC2460);
  }
  return result;
}

void sub_23FB283BC()
{
  sub_23FB29654(&qword_256EB2520, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTUpdateExpr);
}

_UNKNOWN **sub_23FB283E8()
{
  return &protocol witness table for TranscriptProtoASTFlatExprUpdateVariant;
}

void sub_23FB283F4(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC24D0, (void (*)(uint64_t))type metadata accessor for AST.Update);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB28430()
{
  sub_23FB29654(&qword_256EB2278, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant);
}

_UNKNOWN **sub_23FB2845C()
{
  return &protocol witness table for TranscriptProtoASTPickType;
}

unint64_t sub_23FB28468(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB2848C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB2848C()
{
  unint64_t result;

  result = qword_256EC2558;
  if (!qword_256EC2558)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.PickType, &type metadata for AST.PickType);
    atomic_store(result, (unint64_t *)&qword_256EC2558);
  }
  return result;
}

void sub_23FB284C8()
{
  sub_23FB29654(&qword_256EB32C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTPickType);
}

_UNKNOWN **sub_23FB284F4()
{
  return &protocol witness table for TranscriptProtoASTLiteral;
}

unint64_t sub_23FB28500(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB28524();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB28524()
{
  unint64_t result;

  result = qword_256EC25B0;
  if (!qword_256EC25B0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Literal, &type metadata for AST.Literal);
    atomic_store(result, (unint64_t *)&qword_256EC25B0);
  }
  return result;
}

void sub_23FB28560()
{
  sub_23FB29654(&qword_256EB36D8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTLiteral);
}

_UNKNOWN **sub_23FB2858C()
{
  return &protocol witness table for TranscriptProtoASTIfStmt;
}

unint64_t sub_23FB28598(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB285BC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB285BC()
{
  unint64_t result;

  result = qword_256EC2620;
  if (!qword_256EC2620)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.IfStmt, &type metadata for AST.IfStmt);
    atomic_store(result, (unint64_t *)&qword_256EC2620);
  }
  return result;
}

void sub_23FB285F8()
{
  sub_23FB29654(&qword_256EB3690, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTIfStmt);
}

_UNKNOWN **sub_23FB28624()
{
  return &protocol witness table for TranscriptProtoASTForInStmt;
}

unint64_t sub_23FB28630(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB28654();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB28654()
{
  unint64_t result;

  result = qword_256EC2690;
  if (!qword_256EC2690)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.ForInStmt, &type metadata for AST.ForInStmt);
    atomic_store(result, (unint64_t *)&qword_256EC2690);
  }
  return result;
}

void sub_23FB28690()
{
  sub_23FB29654(&qword_256EB36A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTForInStmt);
}

_UNKNOWN **sub_23FB286BC()
{
  return &protocol witness table for TranscriptProtoASTFlatValue;
}

void sub_23FB286C8(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC2700, (void (*)(uint64_t))type metadata accessor for AST.FlatValue);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB28704()
{
  sub_23FB29654(&qword_256EB2210, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTFlatValue);
}

_UNKNOWN **sub_23FB28730()
{
  return &protocol witness table for TranscriptProtoActionParameterValue;
}

void sub_23FB2873C(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC2818, (void (*)(uint64_t))type metadata accessor for Action.ParameterValue);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB28778()
{
  sub_23FB29654(&qword_256EB1CE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionParameterValue);
}

_UNKNOWN **sub_23FB287A4()
{
  return &protocol witness table for TranscriptProtoContextRetrieved;
}

unint64_t sub_23FB287B0(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB287D4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB287D4()
{
  unint64_t result;

  result = qword_256EC2888;
  if (!qword_256EC2888)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ContextRetrieved, &type metadata for ContextRetrieved);
    atomic_store(result, (unint64_t *)&qword_256EC2888);
  }
  return result;
}

void sub_23FB28810()
{
  sub_23FB29654(&qword_256EB30D8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoContextRetrieved);
}

_UNKNOWN **sub_23FB2883C()
{
  return &protocol witness table for TranscriptProtoRetrievedContextStatement;
}

void sub_23FB28848(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC2910, (void (*)(uint64_t))type metadata accessor for RetrievedContextStatement);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB28884()
{
  sub_23FB29654(&qword_256EB2168, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRetrievedContextStatement);
}

_UNKNOWN **sub_23FB288B0()
{
  return &protocol witness table for TranscriptProtoDynamicEnumerationEntityStatement;
}

void sub_23FB288BC(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC2980, (void (*)(uint64_t))type metadata accessor for DynamicEnumerationEntityStatement);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB288F8()
{
  sub_23FB29654(&qword_256EB25E0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement);
}

_UNKNOWN **sub_23FB28924()
{
  return &protocol witness table for TranscriptProtoEntitySpanMatchResult;
}

unint64_t sub_23FB28930(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB28954();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB28954()
{
  unint64_t result;

  result = qword_256EC29D8;
  if (!qword_256EC29D8)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for EntitySpanMatchResult, &type metadata for EntitySpanMatchResult);
    atomic_store(result, (unint64_t *)&qword_256EC29D8);
  }
  return result;
}

void sub_23FB28990()
{
  sub_23FB29654(&qword_256EB3908, (void (*)(uint64_t))type metadata accessor for TranscriptProtoEntitySpanMatchResult);
}

_UNKNOWN **sub_23FB289BC()
{
  return &protocol witness table for TranscriptProtoToolRetrievalResponse;
}

unint64_t sub_23FB289C8(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB289EC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB289EC()
{
  unint64_t result;

  result = qword_256EC2B08;
  if (!qword_256EC2B08)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ToolRetrievalResponse, &type metadata for ToolRetrievalResponse);
    atomic_store(result, (unint64_t *)&qword_256EC2B08);
  }
  return result;
}

void sub_23FB28A28()
{
  sub_23FB29654(&qword_256EB3920, (void (*)(uint64_t))type metadata accessor for TranscriptProtoToolRetrievalResponse);
}

_UNKNOWN **sub_23FB28A54()
{
  return &protocol witness table for TranscriptProtoToolParameterValue;
}

void sub_23FB28A60(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC2B78, (void (*)(uint64_t))type metadata accessor for ToolParameterValue);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB28A9C()
{
  sub_23FB29654(&qword_256EB38F0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoToolParameterValue);
}

_UNKNOWN **sub_23FB28AC8()
{
  return &protocol witness table for TranscriptProtoExternalAgentTextQuery;
}

void sub_23FB28AD4(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC2BE8, (void (*)(uint64_t))type metadata accessor for ExternalAgentTextQuery);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB28B10()
{
  sub_23FB29654(&qword_256EB3B30, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentTextQuery);
}

_UNKNOWN **sub_23FB28B3C()
{
  return &protocol witness table for TranscriptProtoExternalAgentSpeechQuery;
}

void sub_23FB28B48(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC2C58, (void (*)(uint64_t))type metadata accessor for ExternalAgentSpeechQuery);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB28B84()
{
  sub_23FB29654(&qword_256EB3B60, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentSpeechQuery);
}

_UNKNOWN **sub_23FB28BB0()
{
  return &protocol witness table for TranscriptProtoExternalAgentOutcome;
}

void sub_23FB28BBC(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC2CC8, (void (*)(uint64_t))type metadata accessor for ExternalAgentOutcome);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB28BF8()
{
  sub_23FB29654(&qword_256EB2980, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentOutcome);
}

_UNKNOWN **sub_23FB28C24()
{
  return &protocol witness table for TranscriptProtoExternalAgentRequestRewriteMetadata;
}

unint64_t sub_23FB28C30(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB28C54();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB28C54()
{
  unint64_t result;

  result = qword_256EC2D38;
  if (!qword_256EC2D38)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ExternalAgentRequestRewriteMetadata, &type metadata for ExternalAgentRequestRewriteMetadata);
    atomic_store(result, (unint64_t *)&qword_256EC2D38);
  }
  return result;
}

void sub_23FB28C90()
{
  sub_23FB29654(&qword_256EB27E8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
}

_UNKNOWN **sub_23FB28CBC()
{
  return &protocol witness table for TranscriptProtoUndoContext;
}

void sub_23FB28CC8(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC2DA8, (void (*)(uint64_t))MEMORY[0x24BE52408]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB28D04()
{
  sub_23FB29654(&qword_256EB2C38, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUndoContext);
}

_UNKNOWN **sub_23FB28D30()
{
  return &protocol witness table for TranscriptProtoShimParameterResolution;
}

void sub_23FB28D3C(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC2E30, (void (*)(uint64_t))type metadata accessor for ClientAction.ShimParameterResolution);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB28D78()
{
  sub_23FB29654(&qword_256EB1DB0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoShimParameterResolution);
}

_UNKNOWN **sub_23FB28DA4()
{
  return &protocol witness table for TranscriptProtoUnresolvedParameterValue;
}

void sub_23FB28DB0(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC2EA0, (void (*)(uint64_t))type metadata accessor for ClientAction.UnresolvedParameterValue);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB28DEC()
{
  sub_23FB29654(&qword_256EB2A40, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUnresolvedParameterValue);
}

_UNKNOWN **sub_23FB28E18()
{
  return &protocol witness table for TranscriptProtoValueDisambiguation;
}

void sub_23FB28E24(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC2F70, (void (*)(uint64_t))MEMORY[0x24BE53778]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB28E60()
{
  sub_23FB29654(&qword_256EB2C80, (void (*)(uint64_t))type metadata accessor for TranscriptProtoValueDisambiguation);
}

_UNKNOWN **sub_23FB28E8C()
{
  return &protocol witness table for TranscriptProtoActionFailure;
}

void sub_23FB28E98(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC2FE0, (void (*)(uint64_t))MEMORY[0x24BE52340]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB28ED4()
{
  sub_23FB29654(&qword_256EB2BD8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionFailure);
}

_UNKNOWN **sub_23FB28F00()
{
  return &protocol witness table for TranscriptProtoSystemPromptResolutionRequirementResolution;
}

unint64_t sub_23FB28F0C(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB28F30();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB28F30()
{
  unint64_t result;

  result = qword_256EC3140;
  if (!qword_256EC3140)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestContent.SystemPromptResolution.RequirementResolution, &type metadata for RequestContent.SystemPromptResolution.RequirementResolution);
    atomic_store(result, (unint64_t *)&qword_256EC3140);
  }
  return result;
}

void sub_23FB28F6C()
{
  sub_23FB29654(&qword_256EB31C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution);
}

_UNKNOWN **sub_23FB28F98()
{
  return &protocol witness table for TranscriptProtoSystemPromptResolutionActionCancellation;
}

unint64_t sub_23FB28FA4(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB28FC8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB28FC8()
{
  unint64_t result;

  result = qword_256EC31B0;
  if (!qword_256EC31B0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for RequestContent.SystemPromptResolution.ActionCancellation, &type metadata for RequestContent.SystemPromptResolution.ActionCancellation);
    atomic_store(result, (unint64_t *)&qword_256EC31B0);
  }
  return result;
}

void sub_23FB29004()
{
  sub_23FB29654(&qword_256EB31A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation);
}

_UNKNOWN **sub_23FB29030()
{
  return &protocol witness table for TranscriptProtoASTExprNoMatchingToolVariant;
}

unint64_t sub_23FB2903C(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB29060();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB29060()
{
  unint64_t result;

  result = qword_256EC3220;
  if (!qword_256EC3220)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for AST.Builtin.NoMatchingTool, &type metadata for AST.Builtin.NoMatchingTool);
    atomic_store(result, (unint64_t *)&qword_256EC3220);
  }
  return result;
}

void sub_23FB2909C()
{
  sub_23FB29654(&qword_256EB3850, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant);
}

_UNKNOWN **sub_23FB290C8()
{
  return &protocol witness table for TranscriptProtoTypeConversionRequest;
}

void sub_23FB290D4(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC3290, (void (*)(uint64_t))type metadata accessor for TypeConversionRequest);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB29110()
{
  sub_23FB29654(&qword_256EB3A10, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTypeConversionRequest);
}

_UNKNOWN **sub_23FB2913C()
{
  return &protocol witness table for TranscriptProtoTypeConversionResult;
}

void sub_23FB29148(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC33D8, (void (*)(uint64_t))type metadata accessor for TypeConversionResult);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB29184()
{
  sub_23FB29654(&qword_256EB3A28, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTypeConversionResult);
}

_UNKNOWN **sub_23FB291B0()
{
  return &protocol witness table for TranscriptProtoQueryDecorationResult;
}

void sub_23FB291BC(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC3430, (void (*)(uint64_t))type metadata accessor for QueryDecorationResult);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB291F8()
{
  sub_23FB29654(&qword_256EB3A40, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryDecorationResult);
}

_UNKNOWN **sub_23FB29224()
{
  return &protocol witness table for TranscriptProtoQueryDecorationPrePlannerResult;
}

void sub_23FB29230(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC3488, (void (*)(uint64_t))type metadata accessor for QueryDecorationPrePlannerResult);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB2926C()
{
  sub_23FB29654(&qword_256EB3A58, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult);
}

_UNKNOWN **sub_23FB29298()
{
  return &protocol witness table for TranscriptProtoQueryDecorationPrePlannerResultPayload;
}

unint64_t sub_23FB292A4(uint64_t a1)
{
  unint64_t result;

  result = sub_23FB292C8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23FB292C8()
{
  unint64_t result;

  result = qword_256EC34E0;
  if (!qword_256EC34E0)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for QueryDecorationPrePlannerResultPayload, &type metadata for QueryDecorationPrePlannerResultPayload);
    atomic_store(result, (unint64_t *)&qword_256EC34E0);
  }
  return result;
}

void sub_23FB29304()
{
  sub_23FB29654(&qword_256EB3B00, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
}

_UNKNOWN **sub_23FB29330()
{
  return &protocol witness table for TranscriptProtoActionFailureDeveloperDefinedError;
}

void sub_23FB2933C(uint64_t a1)
{
  uint64_t v2;

  sub_23FB29654(&qword_256EC3550, (void (*)(uint64_t))MEMORY[0x24BE52318]);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FB29378()
{
  sub_23FB29654(&qword_256EB2C08, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
}

uint64_t dispatch thunk of ConvertibleFromHandwrittenProtocol.init(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

ValueMetadata *type metadata accessor for HandwrittenConversion()
{
  return &type metadata for HandwrittenConversion;
}

uint64_t storeEnumTagSinglePayload for HandwrittenConversion.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23FB29418 + 4 * byte_23FB92CA5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23FB2944C + 4 * byte_23FB92CA0[v4]))();
}

uint64_t sub_23FB2944C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FB29454(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FB2945CLL);
  return result;
}

uint64_t sub_23FB29468(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FB29470);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23FB29474(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FB2947C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HandwrittenConversion.Error()
{
  return &type metadata for HandwrittenConversion.Error;
}

uint64_t sub_23FB2949C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t i;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v2 = 64;
  for (i = 9; i - 7 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    v1 = *(_QWORD *)(a1 + 8 * i);
    v2 += 64;
    if (v1)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_23FB2951C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23FB2956C(uint64_t a1, uint64_t a2)
{
  initializeWithTake for Session.PlanGenerationModelOutputError(a2, a1);
  return a2;
}

uint64_t sub_23FB295A8(uint64_t a1, uint64_t a2)
{
  initializeWithTake for Session.PlanGenerationModelOutputError(a2, a1);
  return a2;
}

uint64_t sub_23FB295E4(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23FB2962C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

void sub_23FB29654(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t v3;

  if (!*a1)
  {
    a2(255);
    v3 = sub_23F713F50();
    atomic_store(MEMORY[0x242674E5C](v3), a1);
  }
  sub_23F694CC8();
}

IntelligenceFlowPlannerSupport::Session::Plan::Source __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Session.Plan.Source.init(transcript:)(IntelligenceFlowPlannerSupport::TranscriptProtoPlanSource transcript)
{
  return InfixExpression.InfixOp.init(transcript:)((IntelligenceFlowPlannerSupport::TranscriptProtoInfixExpression_InfixOp)transcript);
}

IntelligenceFlowPlannerSupport::TranscriptProtoPlanSource __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> TranscriptProtoPlanSource.init(handwritten:)(IntelligenceFlowPlannerSupport::Session::Plan::Source handwritten)
{
  return InfixExpression.InfixOp.init(transcript:)((IntelligenceFlowPlannerSupport::TranscriptProtoInfixExpression_InfixOp)handwritten);
}

IntelligenceFlowPlannerSupport::PrefixExpression::PrefixOp __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> PrefixExpression.PrefixOp.init(transcript:)(IntelligenceFlowPlannerSupport::TranscriptProtoPrefixExpression_PrefixOp transcript)
{
  return InfixExpression.InfixOp.init(transcript:)((IntelligenceFlowPlannerSupport::TranscriptProtoInfixExpression_InfixOp)transcript);
}

void TranscriptProtoSafetyModeRelease.init(handwritten:)()
{
  TranscriptProtoRequestContentStopContent.init(handwritten:)();
}

void TranscriptProtoSystemPromptResolutionActionCancellation.init(handwritten:)()
{
  TranscriptProtoRequestContentStopContent.init(handwritten:)();
}

void TranscriptProtoASTExprNoMatchingToolVariant.init(handwritten:)()
{
  TranscriptProtoRequestContentStopContent.init(handwritten:)();
}

uint64_t sub_23FB29714(char *a1)
{
  return sub_23FB0F06C(a1);
}

void sub_23FB29758(_BYTE *a1@<X8>)
{
  sub_23FB1B998(a1);
}

uint64_t sub_23FB2976C@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_23FB1B970(a1, a2);
}

void sub_23FB29780(uint64_t (*a1)(_QWORD)@<X1>, uint64_t a2@<X8>)
{
  sub_23F6F8C88(*(_QWORD *)(a2 - 256), a1);
}

void sub_23FB29788(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v2)(_QWORD);

  sub_23F6F594C(a1, *(_QWORD *)(a2 - 256), v2);
}

void sub_23FB29798(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v2)(_QWORD);

  sub_23F6F5920(a1, *(_QWORD *)(a2 - 256), v2);
}

void sub_23FB297A8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F6F8C88(v2, a2);
}

void sub_23FB297B0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F6F8C88(v2, a2);
}

void sub_23FB297B8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F6F8C88(v2, a2);
}

void sub_23FB297C0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F6F8C88(v2, a2);
}

void sub_23FB297C8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F6F8C88(v2, a2);
}

uint64_t sub_23FB297D0()
{
  return type metadata accessor for Session.Event.Payload(0);
}

void sub_23FB297D8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F6F8C88(v2, a2);
}

uint64_t sub_23FB297E0()
{
  return sub_23FB2F17C();
}

void sub_23FB297EC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F6F8C88(v2, a2);
}

uint64_t sub_23FB297F4@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_23FB29814@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_23FB29834@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_23FB29854@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_23FB29890()
{
  uint64_t v0;

  return v0;
}

void sub_23FB298A0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F6F8C88(v2, a2);
}

uint64_t sub_23FB298A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, a2, 1, v2);
}

uint64_t sub_23FB298B4()
{
  uint64_t v0;

  return v0;
}

void sub_23FB298C8(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 88) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_23FB298E4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F6F8C88(v2, a2);
}

uint64_t sub_23FB298EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, a2, a3, a4);
  return 0;
}

uint64_t sub_23FB29900()
{
  return sub_23FB2C764();
}

uint64_t sub_23FB2991C@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

void sub_23FB2993C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F6F8C88(*(_QWORD *)(v2 - 72), a2);
}

uint64_t sub_23FB29944()
{
  return 0;
}

void sub_23FB29958(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F6F8C88(a1, v1);
}

uint64_t sub_23FB29960()
{
  return sub_23FB2C74C();
}

uint64_t sub_23FB29970()
{
  return 0;
}

uint64_t sub_23FB2997C()
{
  return 0;
}

uint64_t sub_23FB2999C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, a2, a3, v3);
}

uint64_t sub_23FB299A4@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_23FB299C4()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_23FB299D0()
{
  return 0;
}

uint64_t sub_23FB299DC()
{
  return sub_23FB2C74C();
}

uint64_t sub_23FB299EC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB29A00()
{
  return swift_retain();
}

uint64_t sub_23FB29A14()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB29A28(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(*(_QWORD *)(v1 - 72), a1);
}

uint64_t sub_23FB29A3C()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

void sub_23FB29A4C(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F6F8C88(a1, v1);
}

uint64_t sub_23FB29A54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v1, v2, v3);
}

uint64_t sub_23FB29A7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 - 112) + 32))(v1, v0, *(_QWORD *)(v2 - 120));
}

uint64_t sub_23FB29A98()
{
  return 0;
}

uint64_t sub_23FB29AA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 208) = a1;
  return 0;
}

void sub_23FB29AB4(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F6F8C88(a1, v1);
}

uint64_t sub_23FB29ABC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = a1;
  return 0;
}

uint64_t sub_23FB29AC8@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 88) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_23FB29AE8@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 144) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_23FB29B08()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_23FB29B14()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB29B20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  return 0;
}

uint64_t sub_23FB29B2C()
{
  uint64_t v0;

  return v0;
}

void sub_23FB29B3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F6F594C(a1, v3, a3);
}

uint64_t sub_23FB29B44()
{
  return sub_23FB2C74C();
}

uint64_t sub_23FB29B54()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB29B68()
{
  return 0;
}

void sub_23FB29B7C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F6F8C88(*(_QWORD *)(v2 - 88), a2);
}

uint64_t sub_23FB29B94()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB29BA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = a1;
  return 0;
}

void sub_23FB29BB0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F710E80(a1, v3, a3);
}

uint64_t sub_23FB29BC8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB29BD4()
{
  return sub_23FB2D0DC();
}

uint64_t sub_23FB29BDC()
{
  return sub_23FB2C74C();
}

void sub_23FB29BE4()
{
  sub_23F77B8C8();
}

void sub_23FB29BEC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F710E80(a1, v3, a3);
}

uint64_t sub_23FB29BF4()
{
  return sub_23FB2C74C();
}

uint64_t sub_23FB29C04()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FB29C20()
{
  return 0;
}

void sub_23FB29C34(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F710E80(a1, v3, a3);
}

uint64_t sub_23FB29C3C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23FB29C44()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB29C54()
{
  return 0;
}

uint64_t sub_23FB29C60()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB29C70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  *(_DWORD *)v4 = v6;
  *(_QWORD *)(v4 + 8) = v3;
  *(_QWORD *)(v4 + 16) = v2;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v5);
}

uint64_t sub_23FB29C88()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

unint64_t sub_23FB29C94()
{
  return sub_23F77D8D0();
}

uint64_t sub_23FB29C9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_23FB29CA8()
{
  return sub_23FB2D8EC();
}

uint64_t sub_23FB29CC0()
{
  return type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
}

uint64_t sub_23FB29CC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

void sub_23FB29CE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F6F594C(a1, v3, a3);
}

void sub_23FB29CF0()
{
  sub_23F77B568();
}

uint64_t sub_23FB29D00()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB29D10()
{
  uint64_t v0;

  return v0;
}

void sub_23FB29D1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F6F594C(a1, v3, a3);
}

void sub_23FB29D24(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = a1;
}

uint64_t sub_23FB29D30()
{
  return 0;
}

uint64_t sub_23FB29D40()
{
  return sub_23FB2C74C();
}

uint64_t sub_23FB29D50()
{
  uint64_t v0;

  return v0;
}

void sub_23FB29D7C()
{
  sub_23F77B8C8();
}

uint64_t sub_23FB29D94()
{
  return type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
}

void sub_23FB29D9C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F710E80(a1, v3, a3);
}

void sub_23FB29DA4()
{
  unint64_t *v0;
  void (*v1)(uint64_t);

  sub_23FB29654(v0, v1);
}

uint64_t sub_23FB29DB4()
{
  return sub_23FB2C740();
}

uint64_t sub_23FB29DBC()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_23FB29DC8()
{
  return 0;
}

uint64_t sub_23FB29DD4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 72));
}

void sub_23FB29DDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F6F594C(a1, *(_QWORD *)(v3 - 96), a3);
}

uint64_t sub_23FB29DE4()
{
  return sub_23FB2ED2C();
}

void sub_23FB29DEC(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F6F8C88(a1, v1);
}

void sub_23FB29DF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F6F594C(a1, *(_QWORD *)(v3 - 144), a3);
}

uint64_t sub_23FB29E00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return v1 + a1;
}

uint64_t sub_23FB29E14()
{
  return 0;
}

void sub_23FB29E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 136) = (char *)&a9 - v9;
}

uint64_t sub_23FB29E60()
{
  return type metadata accessor for RequestContent(0);
}

uint64_t sub_23FB29E68()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

void sub_23FB29E7C()
{
  sub_23F77B8C8();
}

uint64_t sub_23FB29EB0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB29EC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_23FB29ED4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = a1;
  return 0;
}

void sub_23FB29EF8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F6F594C(a1, v3, a3);
}

void sub_23FB29F00(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F6F8C88(a1, v1);
}

unint64_t sub_23FB29F08()
{
  unint64_t v0;

  return sub_23F6A3764(v0);
}

void sub_23FB29F20(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F6B4F58(a1, a2, v2);
}

void sub_23FB29F28(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F710E80(a1, a2, v2);
}

void sub_23FB29F30(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F6F594C(a1, v3, a3);
}

uint64_t sub_23FB29F38()
{
  return swift_allocBox();
}

uint64_t sub_23FB29F40()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_23FB29F48()
{
  return sub_23FB2C47C();
}

uint64_t sub_23FB29F50()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB29F5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v3 - 120) + 32))(v1 + *(int *)(a1 + 20), v2, *(_QWORD *)(v3 - 112));
}

uint64_t sub_23FB29F7C()
{
  return 0;
}

uint64_t sub_23FB29F8C()
{
  return sub_23FB2C788();
}

uint64_t sub_23FB29F94@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return sub_23FB2C6F8();
}

uint64_t sub_23FB29FB4()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_23FB29FCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v0);
}

uint64_t sub_23FB29FDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void sub_23FB29FEC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F6F8C88(*(_QWORD *)(v2 - 144), a2);
}

uint64_t sub_23FB29FF4()
{
  return swift_bridgeObjectRetain();
}

void sub_23FB29FFC()
{
  AST.FlatValue.init(transcript:)();
}

void sub_23FB2A004(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F710E80(a1, v3, a3);
}

uint64_t sub_23FB2A00C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23FB2A014()
{
  return 0;
}

void sub_23FB2A020()
{
  sub_23F77B8C8();
}

uint64_t sub_23FB2A030(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v2 - 96) + 16))(*(_QWORD *)(v2 - 104), v1 + *(int *)(a1 + 20), *(_QWORD *)(v2 - 88));
}

uint64_t sub_23FB2A04C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB2A058()
{
  return 0;
}

uint64_t sub_23FB2A064()
{
  return sub_23FB2C74C();
}

uint64_t sub_23FB2A074()
{
  return type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
}

uint64_t sub_23FB2A07C()
{
  return type metadata accessor for TranscriptProtoStatementOutcome(0);
}

uint64_t sub_23FB2A084()
{
  return type metadata accessor for QueryData(0);
}

uint64_t sub_23FB2A08C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23FB2A098()
{
  return type metadata accessor for ActionParameterContext(0);
}

uint64_t sub_23FB2A0B4()
{
  return type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
}

uint64_t sub_23FB2A0D0()
{
  return type metadata accessor for TranscriptProtoPlanGenerationError(0);
}

uint64_t sub_23FB2A0EC()
{
  return type metadata accessor for RequestContent.TextContent(0);
}

uint64_t sub_23FB2A108()
{
  return type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
}

uint64_t sub_23FB2A13C()
{
  return sub_23FB2C740();
}

void sub_23FB2A144()
{
  sub_23F711604();
}

void sub_23FB2A15C()
{
  sub_23F712078();
}

void sub_23FB2A174()
{
  sub_23F711550();
}

uint64_t sub_23FB2A18C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB2A1BC(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_23FB2A1C4()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v1 - 240) + 32))(*(_QWORD *)(v1 - 224), v0, *(_QWORD *)(v1 - 232));
}

void sub_23FB2A1DC()
{
  sub_23F711550();
}

uint64_t sub_23FB2A1F4@<X0>(unsigned int *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v2 - 112) + 104))(v1, *a1, *(_QWORD *)(v2 - 104));
}

uint64_t sub_23FB2A20C()
{
  return 0;
}

uint64_t sub_23FB2A21C()
{
  return 0;
}

_QWORD *sub_23FB2A230@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return AST.Expr.init(transcript:)(a2, a1);
}

void sub_23FB2A238()
{
  sub_23F77B920();
}

uint64_t sub_23FB2A240()
{
  return sub_23FB2ED20();
}

uint64_t sub_23FB2A248(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23FB2A250()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB2A26C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 88));
}

void sub_23FB2A274(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F6B4F58(a1, v3, a3);
}

uint64_t sub_23FB2A27C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = a1;
  return 0;
}

uint64_t sub_23FB2A28C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB2A298()
{
  return swift_bridgeObjectRetain();
}

void sub_23FB2A2A0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F710E80(a1, v3, a3);
}

uint64_t sub_23FB2A2A8(uint64_t a1)
{
  uint64_t v1;

  return v1 + *(int *)(a1 + 20);
}

uint64_t sub_23FB2A2B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v3 - 128) + 32))(v1 + *(int *)(a1 + 20), v2, *(_QWORD *)(v3 - 120));
}

uint64_t sub_23FB2A2CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v3 + *(int *)(a1 + 20), v4);
}

uint64_t sub_23FB2A2E4()
{
  uint64_t v0;

  return v0;
}

void sub_23FB2A2F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 128) = (char *)&a9 - v9;
}

uint64_t sub_23FB2A304()
{
  uint64_t v0;

  return v0;
}

void sub_23FB2A318(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F6F594C(a1, v3, a3);
}

uint64_t sub_23FB2A320()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB2A32C(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(*(_QWORD *)(v1 - 264), a1);
}

uint64_t sub_23FB2A344()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB2A350()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB2A35C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB2A370()
{
  return sub_23FB2D0B8();
}

uint64_t sub_23FB2A378()
{
  return sub_23FB2CE60();
}

id sub_23FB2A380()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_23FB1F3FC(v0, v1, v2, 0);
}

uint64_t sub_23FB2A41C()
{
  return sub_23FB2D910();
}

void sub_23FB2A43C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F6F594C(a1, *(_QWORD *)(v3 - 120), a3);
}

uint64_t sub_23FB2A444()
{
  return sub_23FB2C740();
}

uint64_t sub_23FB2A44C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, v2);
}

uint64_t sub_23FB2A458()
{
  return sub_23FB2ED20();
}

void sub_23FB2A460()
{
  sub_23F77B844();
}

void sub_23FB2A468(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F6F594C(a1, *(_QWORD *)(v3 - 72), a3);
}

void sub_23FB2A470(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F6B4F58(a1, a2, v2);
}

uint64_t sub_23FB2A478()
{
  return sub_23FB2C74C();
}

void sub_23FB2A480(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F6F8C88(*(_QWORD *)(v2 - 96), a2);
}

uint64_t sub_23FB2A488()
{
  return sub_23FB2C488();
}

unint64_t sub_23FB2A4AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return v1
       + ((*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80))
       + *(_QWORD *)(v0 + 72) * v2;
}

uint64_t sub_23FB2A4E4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FB2A4EC()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23FB2A4F8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB2A510(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23FB2A518()
{
  return swift_bridgeObjectRetain();
}

void sub_23FB2A520(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F710E80(a1, a2, v2);
}

uint64_t sub_23FB2A528@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = a1;
  return 0;
}

void sub_23FB2A540(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_23F710E80(v3, v4, a3);
}

uint64_t sub_23FB2A54C(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;

  sub_23F6A3728(a1);
  sub_23F6A3728(v1);
  return TranscriptProtoASTExpr.init(handwritten:)(v2 - 96);
}

uint64_t sub_23FB2A570()
{
  return sub_23FB2C74C();
}

void sub_23FB2A5BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_23F6F5920(a1, v1, v2);
}

void sub_23FB2A5C8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F6F8C88(*(_QWORD *)(v2 - 168), a2);
}

uint64_t sub_23FB2A5D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 16) = v2;
  *(_QWORD *)(v0 + 24) = v1;
  return sub_23F6B4DF8(v3);
}

uint64_t sub_23FB2A5DC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB2A5E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_23FB2A5F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_23FB2A600()
{
  return swift_projectBox();
}

uint64_t sub_23FB2A614()
{
  return swift_retain();
}

uint64_t sub_23FB2A628(uint64_t a1)
{
  return sub_23F6B4DF8(a1);
}

uint64_t sub_23FB2A63C(uint64_t a1)
{
  uint64_t v1;

  return v1 + *(int *)(a1 + 20);
}

uint64_t sub_23FB2A648()
{
  return sub_23FB2CF38();
}

uint64_t sub_23FB2A65C()
{
  return swift_deallocUninitializedObject();
}

uint64_t sub_23FB2A664()
{
  return sub_23FB2C47C();
}

uint64_t sub_23FB2A670()
{
  return sub_23FB2C4C4();
}

uint64_t sub_23FB2A67C()
{
  return sub_23FB2C4C4();
}

uint64_t sub_23FB2A688()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23FB2A694()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

void sub_23FB2A6A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_23F6F594C(v3, *(_QWORD *)(v4 - 104), a3);
}

void sub_23FB2A6AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_23F6F594C(v3, *(_QWORD *)(v4 - 88), a3);
}

void sub_23FB2A6B8()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F6F8C88(v0, *(uint64_t (**)(_QWORD))(v1 - 88));
}

uint64_t sub_23FB2A6C4()
{
  return sub_23FB2F914();
}

uint64_t sub_23FB2A6D8()
{
  return sub_23FB2ED5C();
}

uint64_t sub_23FB2A6E0()
{
  return type metadata accessor for TranscriptProtoASTExpr(0);
}

uint64_t sub_23FB2A6E8()
{
  return type metadata accessor for RequestContent.TextContent(0);
}

uint64_t sub_23FB2A6F0()
{
  return sub_23FB2D250();
}

uint64_t sub_23FB2A6F8()
{
  return type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0);
}

uint64_t sub_23FB2A700()
{
  return sub_23FB2C944();
}

uint64_t sub_23FB2A708()
{
  return type metadata accessor for TranscriptProtoRequestContentSpeechContent(0);
}

uint64_t sub_23FB2A710()
{
  return type metadata accessor for PropertyQuery(0);
}

uint64_t sub_23FB2A76C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB2A788()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB2A7DC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FB2A814()
{
  uint64_t v0;

  return v0;
}

void sub_23FB2A824()
{
  sub_23F77B8C8();
}

uint64_t sub_23FB2A82C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = a1;
  *(_QWORD *)(v2 - 88) = a2;
  return 0;
}

uint64_t sub_23FB2A848()
{
  return sub_23FB2C740();
}

uint64_t sub_23FB2A860()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(int *)(*(_QWORD *)(v1 - 176) + 24);
}

uint64_t sub_23FB2A878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(v1, *(_QWORD *)(v2 - 88));
}

uint64_t sub_23FB2A888@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 136));
}

uint64_t sub_23FB2A890()
{
  return sub_23FB2C758();
}

uint64_t sub_23FB2A898()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 176);
}

void sub_23FB2A8B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F6F594C(a1, v3, a3);
}

uint64_t sub_23FB2A8B8()
{
  return swift_release();
}

uint64_t sub_23FB2A8C0()
{
  return sub_23FB2C758();
}

BOOL sub_23FB2A8C8@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

BOOL sub_23FB2A8E0@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_23FB2A908()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB2A918()
{
  return 0;
}

void sub_23FB2A934(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F6B4F58(a1, v3, a3);
}

uint64_t sub_23FB2A93C()
{
  uint64_t v0;

  return v0;
}

void sub_23FB2A94C()
{
  sub_23F77B8C8();
}

uint64_t sub_23FB2A95C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB2A968()
{
  return 0;
}

uint64_t sub_23FB2A974()
{
  uint64_t v0;

  return v0;
}

void sub_23FB2A984()
{
  sub_23F77B870();
}

uint64_t sub_23FB2A98C()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_23FB2A9A4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB2A9C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v2 - 112) + 104))(*(_QWORD *)(v2 - 96), a2, *(_QWORD *)(v2 - 104));
}

uint64_t sub_23FB2AA00()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB2AA0C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB2AA1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for TranscriptProtoVariableStep(0);
}

uint64_t sub_23FB2AA2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for TranscriptProtoContextRetrieved(0);
}

uint64_t sub_23FB2AA3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 136))(a1, v1, v2);
}

uint64_t sub_23FB2AA4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return v1 + a1;
}

uint64_t sub_23FB2AA58(uint64_t a1)
{
  uint64_t v1;

  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, *(_QWORD *)(v1 - 112));
}

uint64_t sub_23FB2AA68()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB2AA74()
{
  return sub_23FB2C47C();
}

uint64_t sub_23FB2AA84()
{
  uint64_t v0;

  return v0;
}

void sub_23FB2AA9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F6F5920(a1, v3, a3);
}

uint64_t sub_23FB2AAC8(uint64_t a1)
{
  uint64_t v1;

  return v1 + *(int *)(a1 + 20);
}

uint64_t sub_23FB2AAD4()
{
  return sub_23FB2C740();
}

uint64_t sub_23FB2AAF4()
{
  return sub_23FB2C74C();
}

void sub_23FB2AB04(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F6F8C88(v2, a2);
}

uint64_t sub_23FB2AB0C(uint64_t a1)
{
  return sub_23FAE3E4C(a1);
}

uint64_t sub_23FB2AB14(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void sub_23FB2AB1C(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F6F8C88(a1, v1);
}

uint64_t sub_23FB2AB30()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 224);
}

uint64_t sub_23FB2AB3C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB2AB4C()
{
  uint64_t v0;

  return v0;
}

void sub_23FB2AB68()
{
  TranscriptProtoASTFlatValue.init(handwritten:)();
}

uint64_t sub_23FB2AB70()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB2AB88()
{
  return sub_23FB2D004();
}

uint64_t sub_23FB2AB90()
{
  return sub_23FB2CF80();
}

uint64_t sub_23FB2AB98()
{
  return type metadata accessor for TranscriptProtoQueryPredicate(0);
}

uint64_t sub_23FB2ABA0()
{
  return sub_23FB2C89C();
}

uint64_t sub_23FB2ABA8()
{
  return type metadata accessor for TextQuery(0);
}

uint64_t sub_23FB2ABB0()
{
  return sub_23FB2D040();
}

uint64_t sub_23FB2ABB8()
{
  return type metadata accessor for TranscriptProtoTextQuery(0);
}

uint64_t sub_23FB2ABC0()
{
  uint64_t v0;

  return sub_23F6B4E2C(v0);
}

uint64_t sub_23FB2ABC8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB2ABE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 72));
}

uint64_t sub_23FB2ABE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  *(_QWORD *)v0 = v1;
  *(_QWORD *)(v0 + 8) = v2;
  *(_QWORD *)(v0 + 16) = v3;
  *(_BYTE *)(v0 + 24) = v4;
  return v5;
}

uint64_t sub_23FB2ABFC()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23FB2AC08()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB2AC2C()
{
  return 0;
}

void sub_23FB2AC38()
{
  sub_23F77B568();
}

uint64_t sub_23FB2AC40()
{
  return type metadata accessor for TranscriptProtoStringQuery(0);
}

uint64_t sub_23FB2AC4C()
{
  return type metadata accessor for TranscriptProtoCallExpression(0);
}

uint64_t sub_23FB2AC58()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_23FB2AC60(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F6F8C88(*(_QWORD *)(v2 - 192), a2);
}

uint64_t sub_23FB2AC68()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 264);
}

uint64_t sub_23FB2AC7C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB2AC88@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 216));
}

uint64_t sub_23FB2ACA8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 136));
}

uint64_t sub_23FB2ACB0()
{
  uint64_t *v0;

  return sub_23F77D90C(*v0, v0[1]);
}

void sub_23FB2ACBC()
{
  sub_23F77B568();
}

uint64_t sub_23FB2ACC8()
{
  uint64_t v0;

  return v0;
}

void sub_23FB2ACD4()
{
  sub_23F77B568();
}

unint64_t sub_23FB2ACDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;

  return sub_23F78C7B0(a1, a2, a3, v3);
}

void sub_23FB2ACE8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F6F8C88(*(_QWORD *)(v2 - 136), a2);
}

void sub_23FB2ACF0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F710E80(a1, a2, v2);
}

uint64_t sub_23FB2ACF8()
{
  return type metadata accessor for TranscriptProtoQueryPredicateList(0);
}

void sub_23FB2AD10()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = v0;
}

uint64_t sub_23FB2AD24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 104));
}

uint64_t sub_23FB2AD2C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB2AD38()
{
  return sub_23FB2C740();
}

uint64_t sub_23FB2AD40()
{
  return 0;
}

uint64_t sub_23FB2AD54()
{
  return sub_23FB2F998();
}

uint64_t sub_23FB2AD60()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FB2AD68()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB2AD7C()
{
  return sub_23FB2C74C();
}

void sub_23FB2AD90()
{
  TranscriptProtoASTExpr.init(handwritten:)();
}

uint64_t sub_23FB2AD9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return *(_QWORD *)(v0 + 56) + *(_QWORD *)(*(_QWORD *)(v2 - 184) + 72) * v1;
}

void sub_23FB2ADB0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F710E80(a1, v3, a3);
}

unint64_t sub_23FB2ADB8()
{
  uint64_t v0;

  return sub_23F6A3764(*(_QWORD *)(v0 - 128));
}

uint64_t sub_23FB2ADC0()
{
  return sub_23FB2ED20();
}

void sub_23FB2ADD4()
{
  sub_23F77B8C8();
}

uint64_t sub_23FB2ADF4()
{
  return 0;
}

uint64_t sub_23FB2AE08()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FB2AE1C()
{
  return swift_projectBox();
}

uint64_t sub_23FB2AE40()
{
  return 0;
}

unint64_t sub_23FB2AE54()
{
  unint64_t v0;

  return sub_23F6A3764(v0);
}

uint64_t sub_23FB2AE5C()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23FB2AE68()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FB2AE70()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB2AE7C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FB2AE84()
{
  return sub_23FB2F98C();
}

uint64_t sub_23FB2AEA8()
{
  return 0;
}

uint64_t sub_23FB2AEB4()
{
  return swift_bridgeObjectRetain();
}

void sub_23FB2AEC0()
{
  sub_23F77B8C8();
}

uint64_t sub_23FB2AECC()
{
  uint64_t v0;

  return v0;
}

void sub_23FB2AEE4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 288) = v0;
}

unint64_t sub_23FB2AF08()
{
  unint64_t v0;

  return sub_23F6A3764(v0);
}

void sub_23FB2AF10(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_23F710E80(v3, *(_QWORD *)(v4 - 88), a3);
}

uint64_t sub_23FB2AF1C()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23FB2AF28()
{
  return sub_23FB2C47C();
}

uint64_t sub_23FB2AF30()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FB2AF38()
{
  uint64_t v0;

  return v0;
}

void sub_23FB2AF4C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F6F8C88(*(_QWORD *)(v2 - 152), a2);
}

uint64_t sub_23FB2AF54(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 88) = v1;
  *(_QWORD *)(v2 - 72) = result;
  return result;
}

uint64_t sub_23FB2AF6C()
{
  return swift_projectBox();
}

void sub_23FB2AF74()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *v0 = v4;
  v0[1] = v1;
  v0[2] = v5;
  v0[3] = v2;
  v0[4] = v6;
  v0[5] = v3;
}

_BYTE *_s30IntelligenceFlowPlannerSupport15InfixExpressionV0E2OpO10transcriptAeA015TranscriptProtoef1_eG0O_tKcfC_0@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_23FB2AF94()
{
  uint64_t v0;

  return v0;
}

void sub_23FB2AFA8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F6F8C88(*(_QWORD *)(v2 - 104), a2);
}

uint64_t sub_23FB2AFB0()
{
  return sub_23FB2C488();
}

uint64_t sub_23FB2AFB8()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23FB2AFC4()
{
  return swift_getEnumCaseMultiPayload();
}

void sub_23FB2AFF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 112) = (char *)&a9 - v9;
}

void sub_23FB2B008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 96) = (char *)&a9 - v9;
}

void sub_23FB2B01C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 72) = (char *)&a9 - v9;
}

uint64_t sub_23FB2B058()
{
  return type metadata accessor for TranscriptProtoUILabel(0);
}

void sub_23FB2B064()
{
  uint64_t v0;

  sub_23FB21578(v0);
}

uint64_t sub_23FB2B070()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0, v2);
}

uint64_t sub_23FB2B07C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23FB2B084()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t sub_23FB2B090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t sub_23FB2B0A8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 136);
}

uint64_t sub_23FB2B0B4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FB2B0C0()
{
  uint64_t v0;

  return v0;
}

void sub_23FB2B0CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F6F594C(a1, v3, a3);
}

uint64_t sub_23FB2B0D4()
{
  return type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0);
}

uint64_t sub_23FB2B0DC()
{
  return type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
}

uint64_t sub_23FB2B0E4()
{
  return type metadata accessor for TranscriptProtoASTBlockStmt(0);
}

uint64_t sub_23FB2B0EC()
{
  return type metadata accessor for TranscriptProtoASTPickType(0);
}

uint64_t sub_23FB2B0F4(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_23FB2B0FC(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_23FB2B104()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t sub_23FB2B110()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0, v2);
}

uint64_t sub_23FB2B11C()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t ConvertibleFromToolKitProtocol.init(toolkit:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v30 = a3;
  v27 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v29 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = v5;
  v31 = v6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_23FB2F65C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v26 - v11;
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = MEMORY[0x24BDAC7A8](v10);
  v16 = (char *)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v26 - v17;
  v19 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, AssociatedTypeWitness) == 1)
  {
    v20 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v20(v19, v8);
    v20((uint64_t)v12, v8);
    v21 = 1;
    v22 = v30;
    v23 = v31;
  }
  else
  {
    v26[1] = a1;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v12, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, AssociatedTypeWitness);
    v24 = v32;
    v23 = v31;
    (*(void (**)(char *, uint64_t))(v28 + 16))(v16, v31);
    if (v24)
    {
      sub_23FAE2CCC();
      return sub_23FAE2CDC();
    }
    sub_23FAE2CCC();
    sub_23FAE2CDC();
    v22 = v30;
    (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v30, v29, v23);
    v21 = 0;
  }
  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v22, v21, 1, v23);
}

uint64_t TypedValue.init(transcript:)(uint64_t a1)
{
  return sub_23FB2BDF0(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEB95B0], (void (*)(char *))MEMORY[0x24BEB99F8]);
}

void ToolKitProtoTypedValue.init(toolkit:)(uint64_t a1)
{
  sub_23FB2B4FC(a1, (void (*)(void))MEMORY[0x24BEB99F0], (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18]);
}

uint64_t ToolDefinition.init(transcript:)(uint64_t a1)
{
  return sub_23FB2BDF0(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEB96E0], (void (*)(char *))MEMORY[0x24BEB8FD0]);
}

uint64_t AssistantSchemaIdentifier.init(transcript:)(uint64_t a1)
{
  return sub_23FB2BDF0(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9698], (void (*)(char *))MEMORY[0x24BEBA5D8]);
}

void ToolKitProtoToolDefinition.Version1.init(toolkit:)(uint64_t a1)
{
  sub_23FB2B4FC(a1, (void (*)(void))MEMORY[0x24BEB8FC8], (uint64_t (*)(_QWORD))MEMORY[0x24BEB8FE0]);
}

void ToolKitProtoAssistantSchemaIdentifier.init(toolkit:)(uint64_t a1)
{
  sub_23FB2BEDC(a1, (void (*)(void))MEMORY[0x24BEBA5D0], (uint64_t (*)(_QWORD))MEMORY[0x24BEBA5E0]);
}

uint64_t TypeIdentifier.init(transcript:)(uint64_t a1)
{
  return sub_23FB2BDF0(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9618], (void (*)(char *))MEMORY[0x24BEB9D10]);
}

uint64_t TypeDefinition.init(transcript:)(uint64_t a1)
{
  return sub_23FB2BDF0(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEB95F8], (void (*)(char *))MEMORY[0x24BEB9B60]);
}

uint64_t TypeInstance.init(transcript:)(uint64_t a1)
{
  return sub_23FB2BDF0(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEB95D8], (void (*)(char *))MEMORY[0x24BEB9AB0]);
}

void ToolKitProtoTypeInstance.init(toolkit:)(uint64_t a1)
{
  sub_23FB2B4FC(a1, (void (*)(void))MEMORY[0x24BEB9AA8], (uint64_t (*)(_QWORD))MEMORY[0x24BEB9AB8]);
}

void ToolKitProtoTypeIdentifier.init(toolkit:)(uint64_t a1)
{
  sub_23FB2BEDC(a1, (void (*)(void))MEMORY[0x24BEB9D08], (uint64_t (*)(_QWORD))MEMORY[0x24BEB9D20]);
}

void ToolKitProtoTypeDefinition.Version1.init(toolkit:)(uint64_t a1)
{
  sub_23FB2B4FC(a1, (void (*)(void))MEMORY[0x24BEB9B58], (uint64_t (*)(_QWORD))MEMORY[0x24BEB9B70]);
}

void sub_23FB2B4FC(uint64_t a1, void (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t v4;

  a2();
  v4 = a3(0);
  sub_23F78F1B0(v4);
  sub_23FAD6A50();
}

void Array<A>.init<A>(toolkit:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F6916B8(&qword_256EA2828);
  sub_23F772110();
  if (!v0)
  {
    v1 = sub_23FAD74F4();
    MEMORY[0x242674E5C](MEMORY[0x24BEE12C8], v1);
    sub_23FB2F494();
  }
  sub_23FAE2C88();
  sub_23FAD6E8C();
}

void Dictionary<>.init(toolkit:)()
{
  swift_getAssociatedTypeWitness();
  sub_23FB2F05C();
  sub_23FAE2CEC();
  sub_23FAD6E8C();
}

uint64_t sub_23FB2B698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v14 = (char *)&v17 - v13;
  (*(void (**)(char *, uint64_t))(v15 + 16))((char *)&v17 - v13, a1);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a5 + 16))(v14, a3, a5);
  if (v7)
    *a7 = v7;
  return result;
}

uint64_t sub_23FB2B768(uint64_t a1, _QWORD *a2)
{
  uint64_t *v2;

  return sub_23FB2B698(a1, v2[6], v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t Set<>.init(toolkit:)()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t vars0;

  swift_getAssociatedTypeWitness();
  v0 = sub_23FB2F488();
  sub_23F6916B8(&qword_256EA2828);
  MEMORY[0x242674E5C](MEMORY[0x24BEE12E0], v0);
  sub_23F7E79D0();
  result = sub_23FAE2CEC();
  if (&vars0 == (uint64_t *)56)
  {
    v2 = sub_23FAD74F4();
    MEMORY[0x242674E5C](MEMORY[0x24BEE12C8], v2);
    return sub_23FB2F530();
  }
  return result;
}

uint64_t sub_23FB2B8AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v13 = (char *)&v16 - v12;
  (*(void (**)(char *, uint64_t))(v14 + 16))((char *)&v16 - v12, a1);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a4 + 16))(v13, a3, a4);
  if (v6)
    *a6 = v6;
  return result;
}

uint64_t sub_23FB2B97C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v11 = (char *)v14 - v10;
  (*(void (**)(char *, uint64_t))(v12 + 16))((char *)v14 - v10, a1);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(a6 + 16))(v11, a4, a6);
}

uint64_t sub_23FB2BA40(uint64_t a1)
{
  uint64_t *v1;

  return sub_23FB2B97C(a1, v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_23FB2BA60(uint64_t a1, _QWORD *a2)
{
  uint64_t *v2;

  return sub_23FB2B8AC(a1, v2[5], v2[2], v2[3], v2[4], a2);
}

uint64_t sub_23FB2BA80(uint64_t a1)
{
  return sub_23FB2BAC8(a1, &qword_256EA1280, &qword_256F5C790, &qword_256F5C7A0);
}

uint64_t sub_23FB2BAA4(uint64_t a1)
{
  return sub_23FB2BAC8(a1, &qword_256EA1288, &qword_256F5C798, &qword_256F5C7A8);
}

uint64_t sub_23FB2BAC8(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4)
{
  if (*a2 != -1)
    swift_once();
  *a4 = *a3;
  return swift_retain();
}

BOOL static ToolKitConversion.Error.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ToolKitConversion.Error.hash(into:)()
{
  return sub_23FB2FC68();
}

uint64_t ToolKitConversion.Error.hashValue.getter()
{
  sub_23FB2FC5C();
  sub_23FB2FC68();
  return sub_23FB2FC8C();
}

uint64_t SecureCodable.init(transcript:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4;

  if (qword_256EA1298 != -1)
    swift_once();
  v4 = sub_23FB2ED68();
  MEMORY[0x242674E5C](MEMORY[0x24BEB9B18], v4);
  sub_23FB2C05C();
  return sub_23F6BC34C(a1, a2);
}

uint64_t SecureCodable.encodeTranscriptBytes()(uint64_t a1)
{
  if (qword_256EA1290 != -1)
    swift_once();
  MEMORY[0x242674E5C](MEMORY[0x24BEB9B10], a1);
  return sub_23FB2C0E0();
}

uint64_t sub_23FB2BCDC(uint64_t a1)
{
  return TypedValue.init(transcript:)(a1);
}

void sub_23FB2BCF0(uint64_t a1)
{
  ToolKitProtoTypedValue.init(toolkit:)(a1);
}

uint64_t sub_23FB2BD04(uint64_t a1)
{
  return TypeInstance.init(transcript:)(a1);
}

void sub_23FB2BD18(uint64_t a1)
{
  ToolKitProtoTypeInstance.init(toolkit:)(a1);
}

uint64_t sub_23FB2BD2C(uint64_t a1)
{
  return TypeIdentifier.init(transcript:)(a1);
}

void sub_23FB2BD40(uint64_t a1)
{
  ToolKitProtoTypeIdentifier.init(toolkit:)(a1);
}

uint64_t sub_23FB2BD54(uint64_t a1)
{
  return ToolDefinition.init(transcript:)(a1);
}

void sub_23FB2BD68(uint64_t a1)
{
  ToolKitProtoToolDefinition.Version1.init(toolkit:)(a1);
}

uint64_t sub_23FB2BD7C(uint64_t a1)
{
  return TypeDefinition.init(transcript:)(a1);
}

void sub_23FB2BD90(uint64_t a1)
{
  ToolKitProtoTypeDefinition.Version1.init(toolkit:)(a1);
}

uint64_t sub_23FB2BDA4(uint64_t a1)
{
  return AssistantSchemaIdentifier.init(transcript:)(a1);
}

void sub_23FB2BDB8(uint64_t a1)
{
  ToolKitProtoAssistantSchemaIdentifier.init(toolkit:)(a1);
}

uint64_t TypeDisplayRepresentation.init(transcript:)(uint64_t a1)
{
  return sub_23FB2BDF0(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEB96B0], MEMORY[0x24BEBA668]);
}

uint64_t sub_23FB2BDF0(uint64_t a1, uint64_t (*a2)(_QWORD), void (*a3)(char *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = a2(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)v10 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v10 - v7, a1, v5);
  a3(v8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
}

uint64_t sub_23FB2BEA4(uint64_t a1)
{
  return TypeDisplayRepresentation.init(transcript:)(a1);
}

void ToolKitProtoTypeDisplayRepresentation.init(toolkit:)(uint64_t a1)
{
  sub_23FB2BEDC(a1, (void (*)(void))MEMORY[0x24BEBA660], (uint64_t (*)(_QWORD))MEMORY[0x24BEBA670]);
}

void sub_23FB2BEDC(uint64_t a1, void (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t v4;

  a2();
  v4 = a3(0);
  sub_23F78F1B0(v4);
  sub_23FAD6A50();
}

unint64_t sub_23FB2BF18()
{
  unint64_t result;

  result = qword_256EC3660;
  if (!qword_256EC3660)
  {
    result = MEMORY[0x242674E5C](&protocol conformance descriptor for ToolKitConversion.Error, &type metadata for ToolKitConversion.Error);
    atomic_store(result, (unint64_t *)&qword_256EC3660);
  }
  return result;
}

void sub_23FB2BF54(uint64_t a1)
{
  ToolKitProtoTypeDisplayRepresentation.init(toolkit:)(a1);
}

uint64_t dispatch thunk of ConvertibleFromToolKitProtocol.init(toolkit:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

ValueMetadata *type metadata accessor for ToolKitConversion()
{
  return &type metadata for ToolKitConversion;
}

uint64_t storeEnumTagSinglePayload for ToolKitConversion.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23FB2BFDC + 4 * byte_23FB96D65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23FB2C010 + 4 * byte_23FB96D60[v4]))();
}

uint64_t sub_23FB2C010(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FB2C018(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FB2C020);
  return result;
}

uint64_t sub_23FB2C02C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FB2C034);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23FB2C038(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FB2C040(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ToolKitConversion.Error()
{
  return &type metadata for ToolKitConversion.Error;
}

uint64_t sub_23FB2C05C()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_23FB2C068()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_23FB2C074()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_23FB2C080()
{
  return MEMORY[0x24BDCB288]();
}

uint64_t sub_23FB2C08C()
{
  return MEMORY[0x24BDCB290]();
}

uint64_t sub_23FB2C098()
{
  return MEMORY[0x24BDCB2A8]();
}

uint64_t sub_23FB2C0A4()
{
  return MEMORY[0x24BDCB2E0]();
}

uint64_t sub_23FB2C0B0()
{
  return MEMORY[0x24BDCB300]();
}

uint64_t sub_23FB2C0BC()
{
  return MEMORY[0x24BDCB318]();
}

uint64_t sub_23FB2C0C8()
{
  return MEMORY[0x24BDCB360]();
}

uint64_t sub_23FB2C0D4()
{
  return MEMORY[0x24BDCB378]();
}

uint64_t sub_23FB2C0E0()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_23FB2C0EC()
{
  return MEMORY[0x24BDCB3F8]();
}

uint64_t sub_23FB2C0F8()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_23FB2C104()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_23FB2C110()
{
  return MEMORY[0x24BDCB630]();
}

uint64_t sub_23FB2C11C()
{
  return MEMORY[0x24BDCB638]();
}

uint64_t sub_23FB2C128()
{
  return MEMORY[0x24BDCB6C0]();
}

uint64_t sub_23FB2C134()
{
  return MEMORY[0x24BDCB710]();
}

uint64_t sub_23FB2C140()
{
  return MEMORY[0x24BDCB720]();
}

uint64_t sub_23FB2C14C()
{
  return MEMORY[0x24BDCB750]();
}

uint64_t sub_23FB2C158()
{
  return MEMORY[0x24BDCB9D8]();
}

uint64_t sub_23FB2C164()
{
  return MEMORY[0x24BDCB9E0]();
}

uint64_t sub_23FB2C170()
{
  return MEMORY[0x24BDCB9E8]();
}

uint64_t sub_23FB2C17C()
{
  return MEMORY[0x24BDCBBA0]();
}

uint64_t sub_23FB2C188()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_23FB2C194()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_23FB2C1A0()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_23FB2C1AC()
{
  return MEMORY[0x24BDCBC10]();
}

uint64_t sub_23FB2C1B8()
{
  return MEMORY[0x24BDCC1E0]();
}

uint64_t sub_23FB2C1C4()
{
  return MEMORY[0x24BDCC5A8]();
}

uint64_t sub_23FB2C1D0()
{
  return MEMORY[0x24BDCC6B8]();
}

uint64_t sub_23FB2C1DC()
{
  return MEMORY[0x24BDCCA20]();
}

uint64_t sub_23FB2C1E8()
{
  return MEMORY[0x24BDCCA40]();
}

uint64_t sub_23FB2C1F4()
{
  return MEMORY[0x24BDCCA48]();
}

uint64_t sub_23FB2C200()
{
  return MEMORY[0x24BDCCB28]();
}

uint64_t sub_23FB2C20C()
{
  return MEMORY[0x24BDCCB38]();
}

uint64_t sub_23FB2C218()
{
  return MEMORY[0x24BDCCB48]();
}

uint64_t sub_23FB2C224()
{
  return MEMORY[0x24BDCCB50]();
}

uint64_t sub_23FB2C230()
{
  return MEMORY[0x24BDCCB68]();
}

uint64_t sub_23FB2C23C()
{
  return MEMORY[0x24BDCCB78]();
}

uint64_t sub_23FB2C248()
{
  return MEMORY[0x24BDCCBB0]();
}

uint64_t sub_23FB2C254()
{
  return MEMORY[0x24BDCCBC0]();
}

uint64_t sub_23FB2C260()
{
  return MEMORY[0x24BDCCBE0]();
}

uint64_t sub_23FB2C26C()
{
  return MEMORY[0x24BDCCC00]();
}

uint64_t sub_23FB2C278()
{
  return MEMORY[0x24BDCCC10]();
}

uint64_t sub_23FB2C284()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_23FB2C290()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_23FB2C29C()
{
  return MEMORY[0x24BDCD3C8]();
}

uint64_t sub_23FB2C2A8()
{
  return MEMORY[0x24BDCD7B8]();
}

uint64_t sub_23FB2C2B4()
{
  return MEMORY[0x24BDCD820]();
}

uint64_t sub_23FB2C2C0()
{
  return MEMORY[0x24BDCD870]();
}

uint64_t sub_23FB2C2CC()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_23FB2C2D8()
{
  return MEMORY[0x24BDCD928]();
}

uint64_t sub_23FB2C2E4()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_23FB2C2F0()
{
  return MEMORY[0x24BDCD9E8]();
}

uint64_t sub_23FB2C2FC()
{
  return MEMORY[0x24BDCD9F8]();
}

uint64_t sub_23FB2C308()
{
  return MEMORY[0x24BDCDA70]();
}

uint64_t sub_23FB2C314()
{
  return MEMORY[0x24BDCDAA0]();
}

uint64_t sub_23FB2C320()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_23FB2C32C()
{
  return MEMORY[0x24BDCDB58]();
}

uint64_t sub_23FB2C338()
{
  return MEMORY[0x24BDCDB60]();
}

uint64_t sub_23FB2C344()
{
  return MEMORY[0x24BDCDB68]();
}

uint64_t sub_23FB2C350()
{
  return MEMORY[0x24BDCDB78]();
}

uint64_t sub_23FB2C35C()
{
  return MEMORY[0x24BDCDBD0]();
}

uint64_t sub_23FB2C368()
{
  return MEMORY[0x24BDCDC28]();
}

uint64_t sub_23FB2C374()
{
  return MEMORY[0x24BDCDC30]();
}

uint64_t sub_23FB2C380()
{
  return MEMORY[0x24BDCDC40]();
}

uint64_t sub_23FB2C38C()
{
  return MEMORY[0x24BDCDC60]();
}

uint64_t sub_23FB2C398()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_23FB2C3A4()
{
  return MEMORY[0x24BDCDCC8]();
}

uint64_t sub_23FB2C3B0()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_23FB2C3BC()
{
  return MEMORY[0x24BDCDD10]();
}

uint64_t sub_23FB2C3C8()
{
  return MEMORY[0x24BDCDD20]();
}

uint64_t sub_23FB2C3D4()
{
  return MEMORY[0x24BDCDD60]();
}

uint64_t sub_23FB2C3E0()
{
  return MEMORY[0x24BDCE2F0]();
}

uint64_t sub_23FB2C3EC()
{
  return MEMORY[0x24BDCE350]();
}

uint64_t sub_23FB2C3F8()
{
  return MEMORY[0x24BDCE378]();
}

uint64_t sub_23FB2C404()
{
  return MEMORY[0x24BDCE3A0]();
}

uint64_t sub_23FB2C410()
{
  return MEMORY[0x24BDCE3B8]();
}

uint64_t sub_23FB2C41C()
{
  return MEMORY[0x24BDCE3E8]();
}

uint64_t sub_23FB2C428()
{
  return MEMORY[0x24BDCE448]();
}

uint64_t sub_23FB2C434()
{
  return MEMORY[0x24BDCE780]();
}

uint64_t sub_23FB2C440()
{
  return MEMORY[0x24BDCE858]();
}

uint64_t sub_23FB2C44C()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t sub_23FB2C458()
{
  return MEMORY[0x24BDCE8D8]();
}

uint64_t sub_23FB2C464()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_23FB2C470()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_23FB2C47C()
{
  return MEMORY[0x24BDCE998]();
}

uint64_t sub_23FB2C488()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_23FB2C494()
{
  return MEMORY[0x24BDCE9B8]();
}

uint64_t sub_23FB2C4A0()
{
  return MEMORY[0x24BDCE9E0]();
}

uint64_t _s30IntelligenceFlowPlannerSupport20PlatformPnRTelemetryC7startedy10Foundation4UUIDVAA12StartedStateO_0aE7Library0aB11IdentifiersVSgAGtFZfA1__0()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_23FB2C4B8()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_23FB2C4C4()
{
  return MEMORY[0x24BDCEB18]();
}

uint64_t sub_23FB2C4D0()
{
  return MEMORY[0x24BDCEB20]();
}

uint64_t sub_23FB2C4DC()
{
  return MEMORY[0x24BDCEC90]();
}

uint64_t sub_23FB2C4E8()
{
  return MEMORY[0x24BDCECA0]();
}

uint64_t sub_23FB2C4F4()
{
  return MEMORY[0x24BDCECE0]();
}

uint64_t sub_23FB2C500()
{
  return MEMORY[0x24BDCED58]();
}

uint64_t sub_23FB2C50C()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_23FB2C518()
{
  return MEMORY[0x24BDCF4C8]();
}

uint64_t sub_23FB2C524()
{
  return MEMORY[0x24BDCF510]();
}

uint64_t sub_23FB2C530()
{
  return MEMORY[0x24BEAA5E0]();
}

uint64_t sub_23FB2C53C()
{
  return MEMORY[0x24BE30C20]();
}

uint64_t sub_23FB2C548()
{
  return MEMORY[0x24BE30C30]();
}

uint64_t sub_23FB2C554()
{
  return MEMORY[0x24BE30C38]();
}

uint64_t sub_23FB2C560()
{
  return MEMORY[0x24BEBFC40]();
}

uint64_t sub_23FB2C56C()
{
  return MEMORY[0x24BEBFC50]();
}

uint64_t sub_23FB2C578()
{
  return MEMORY[0x24BEBFC58]();
}

uint64_t sub_23FB2C584()
{
  return MEMORY[0x24BEBFC88]();
}

uint64_t sub_23FB2C590()
{
  return MEMORY[0x24BEBFC98]();
}

uint64_t sub_23FB2C59C()
{
  return MEMORY[0x24BEBFCA0]();
}

uint64_t sub_23FB2C5A8()
{
  return MEMORY[0x24BEBFCA8]();
}

uint64_t sub_23FB2C5B4()
{
  return MEMORY[0x24BEBFCC0]();
}

uint64_t sub_23FB2C5C0()
{
  return MEMORY[0x24BEBFCC8]();
}

uint64_t sub_23FB2C5CC()
{
  return MEMORY[0x24BEBFCE0]();
}

uint64_t sub_23FB2C5D8()
{
  return MEMORY[0x24BEBFCE8]();
}

uint64_t sub_23FB2C5E4()
{
  return MEMORY[0x24BEBFD08]();
}

uint64_t sub_23FB2C5F0()
{
  return MEMORY[0x24BEBFD38]();
}

uint64_t sub_23FB2C5FC()
{
  return MEMORY[0x24BEBFD48]();
}

uint64_t sub_23FB2C608()
{
  return MEMORY[0x24BEBFD50]();
}

uint64_t sub_23FB2C614()
{
  return MEMORY[0x24BEBFD70]();
}

uint64_t sub_23FB2C620()
{
  return MEMORY[0x24BEBFD80]();
}

uint64_t sub_23FB2C62C()
{
  return MEMORY[0x24BEBFD88]();
}

uint64_t sub_23FB2C638()
{
  return MEMORY[0x24BEBFDA0]();
}

uint64_t sub_23FB2C644()
{
  return MEMORY[0x24BEBFDC0]();
}

uint64_t sub_23FB2C650()
{
  return MEMORY[0x24BEBFDE0]();
}

uint64_t sub_23FB2C65C()
{
  return MEMORY[0x24BEBFDF0]();
}

uint64_t sub_23FB2C668()
{
  return MEMORY[0x24BEBFDF8]();
}

uint64_t sub_23FB2C674()
{
  return MEMORY[0x24BEBFE00]();
}

uint64_t sub_23FB2C680()
{
  return MEMORY[0x24BEBFE38]();
}

uint64_t sub_23FB2C68C()
{
  return MEMORY[0x24BEBFE58]();
}

uint64_t sub_23FB2C698()
{
  return MEMORY[0x24BEBFE68]();
}

uint64_t sub_23FB2C6A4()
{
  return MEMORY[0x24BEBFE90]();
}

uint64_t sub_23FB2C6B0()
{
  return MEMORY[0x24BEBFEA0]();
}

uint64_t sub_23FB2C6BC()
{
  return MEMORY[0x24BE51FF8]();
}

uint64_t sub_23FB2C6C8()
{
  return MEMORY[0x24BE52008]();
}

uint64_t sub_23FB2C6D4()
{
  return MEMORY[0x24BE52020]();
}

uint64_t sub_23FB2C6E0()
{
  return MEMORY[0x24BE52068]();
}

uint64_t sub_23FB2C6EC()
{
  return MEMORY[0x24BE52070]();
}

uint64_t sub_23FB2C6F8()
{
  return MEMORY[0x24BE52080]();
}

uint64_t sub_23FB2C704()
{
  return MEMORY[0x24BE520A0]();
}

uint64_t sub_23FB2C710()
{
  return MEMORY[0x24BE52100]();
}

uint64_t sub_23FB2C71C()
{
  return MEMORY[0x24BE52108]();
}

uint64_t sub_23FB2C728()
{
  return MEMORY[0x24BE52110]();
}

uint64_t _s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0()
{
  return MEMORY[0x24BE52120]();
}

uint64_t sub_23FB2C740()
{
  return MEMORY[0x24BE52128]();
}

uint64_t sub_23FB2C74C()
{
  return MEMORY[0x24BE52130]();
}

uint64_t sub_23FB2C758()
{
  return MEMORY[0x24BE52138]();
}

uint64_t sub_23FB2C764()
{
  return MEMORY[0x24BE52140]();
}

uint64_t sub_23FB2C770()
{
  return MEMORY[0x24BE52220]();
}

uint64_t sub_23FB2C77C()
{
  return MEMORY[0x24BE52228]();
}

uint64_t sub_23FB2C788()
{
  return MEMORY[0x24BE522D8]();
}

uint64_t sub_23FB2C794()
{
  return MEMORY[0x24BE522F8]();
}

uint64_t sub_23FB2C7A0()
{
  return MEMORY[0x24BE52300]();
}

uint64_t sub_23FB2C7AC()
{
  return MEMORY[0x24BE52308]();
}

uint64_t sub_23FB2C7B8()
{
  return MEMORY[0x24BE52310]();
}

uint64_t sub_23FB2C7C4()
{
  return MEMORY[0x24BE52318]();
}

uint64_t sub_23FB2C7D0()
{
  return MEMORY[0x24BE52330]();
}

uint64_t sub_23FB2C7DC()
{
  return MEMORY[0x24BE52338]();
}

uint64_t sub_23FB2C7E8()
{
  return MEMORY[0x24BE52340]();
}

uint64_t sub_23FB2C7F4()
{
  return MEMORY[0x24BE52360]();
}

uint64_t sub_23FB2C800()
{
  return MEMORY[0x24BE523B0]();
}

uint64_t sub_23FB2C80C()
{
  return MEMORY[0x24BE523C8]();
}

uint64_t sub_23FB2C818()
{
  return MEMORY[0x24BE523E8]();
}

uint64_t sub_23FB2C824()
{
  return MEMORY[0x24BE523F0]();
}

uint64_t sub_23FB2C830()
{
  return MEMORY[0x24BE523F8]();
}

uint64_t sub_23FB2C83C()
{
  return MEMORY[0x24BE52400]();
}

uint64_t sub_23FB2C848()
{
  return MEMORY[0x24BE52408]();
}

uint64_t sub_23FB2C854()
{
  return MEMORY[0x24BE52418]();
}

uint64_t sub_23FB2C860()
{
  return MEMORY[0x24BE52420]();
}

uint64_t sub_23FB2C86C()
{
  return MEMORY[0x24BE52428]();
}

uint64_t sub_23FB2C878()
{
  return MEMORY[0x24BE52430]();
}

uint64_t sub_23FB2C884()
{
  return MEMORY[0x24BE52440]();
}

uint64_t sub_23FB2C890()
{
  return MEMORY[0x24BE52448]();
}

uint64_t sub_23FB2C89C()
{
  return MEMORY[0x24BE52458]();
}

uint64_t sub_23FB2C8A8()
{
  return MEMORY[0x24BE52478]();
}

uint64_t sub_23FB2C8B4()
{
  return MEMORY[0x24BE52480]();
}

uint64_t sub_23FB2C8C0()
{
  return MEMORY[0x24BE52488]();
}

uint64_t sub_23FB2C8CC()
{
  return MEMORY[0x24BE52498]();
}

uint64_t sub_23FB2C8D8()
{
  return MEMORY[0x24BE524A0]();
}

uint64_t sub_23FB2C8E4()
{
  return MEMORY[0x24BE524A8]();
}

uint64_t sub_23FB2C8F0()
{
  return MEMORY[0x24BE524B0]();
}

uint64_t sub_23FB2C8FC()
{
  return MEMORY[0x24BE524B8]();
}

uint64_t sub_23FB2C908()
{
  return MEMORY[0x24BE524C0]();
}

uint64_t sub_23FB2C914()
{
  return MEMORY[0x24BE52530]();
}

uint64_t sub_23FB2C920()
{
  return MEMORY[0x24BE52578]();
}

uint64_t sub_23FB2C92C()
{
  return MEMORY[0x24BE525A0]();
}

uint64_t sub_23FB2C938()
{
  return MEMORY[0x24BE525C0]();
}

uint64_t sub_23FB2C944()
{
  return MEMORY[0x24BE525F8]();
}

uint64_t sub_23FB2C950()
{
  return MEMORY[0x24BE52630]();
}

uint64_t sub_23FB2C95C()
{
  return MEMORY[0x24BE52638]();
}

uint64_t sub_23FB2C968()
{
  return MEMORY[0x24BE52640]();
}

uint64_t sub_23FB2C974()
{
  return MEMORY[0x24BE52648]();
}

uint64_t sub_23FB2C980()
{
  return MEMORY[0x24BE52650]();
}

uint64_t sub_23FB2C98C()
{
  return MEMORY[0x24BE52658]();
}

uint64_t sub_23FB2C998()
{
  return MEMORY[0x24BE52660]();
}

uint64_t sub_23FB2C9A4()
{
  return MEMORY[0x24BE526B8]();
}

uint64_t sub_23FB2C9B0()
{
  return MEMORY[0x24BE526C0]();
}

uint64_t _s16IntelligenceFlow14MessagePayloadO14RequestContentO04StopF0V0aB14PlannerSupportE4ifpsAghDOAFV_tcfC_0()
{
  return MEMORY[0x24BE52790]();
}

uint64_t sub_23FB2C9C8()
{
  return MEMORY[0x24BE527A0]();
}

uint64_t sub_23FB2C9D4()
{
  return MEMORY[0x24BE527A8]();
}

uint64_t sub_23FB2C9E0()
{
  return MEMORY[0x24BE527B0]();
}

uint64_t sub_23FB2C9EC()
{
  return MEMORY[0x24BE527B8]();
}

uint64_t sub_23FB2C9F8()
{
  return MEMORY[0x24BE527C0]();
}

uint64_t sub_23FB2CA04()
{
  return MEMORY[0x24BE527C8]();
}

uint64_t sub_23FB2CA10()
{
  return MEMORY[0x24BE527D0]();
}

uint64_t sub_23FB2CA1C()
{
  return MEMORY[0x24BE527D8]();
}

uint64_t sub_23FB2CA28()
{
  return MEMORY[0x24BE527E8]();
}

uint64_t sub_23FB2CA34()
{
  return MEMORY[0x24BE52810]();
}

uint64_t sub_23FB2CA40()
{
  return MEMORY[0x24BE52860]();
}

uint64_t sub_23FB2CA4C()
{
  return MEMORY[0x24BE52868]();
}

uint64_t sub_23FB2CA58()
{
  return MEMORY[0x24BE52870]();
}

uint64_t sub_23FB2CA64()
{
  return MEMORY[0x24BE52880]();
}

uint64_t sub_23FB2CA70()
{
  return MEMORY[0x24BE52890]();
}

uint64_t sub_23FB2CA7C()
{
  return MEMORY[0x24BE528A0]();
}

uint64_t sub_23FB2CA88()
{
  return MEMORY[0x24BE528B0]();
}

uint64_t sub_23FB2CA94()
{
  return MEMORY[0x24BE528C0]();
}

uint64_t sub_23FB2CAA0()
{
  return MEMORY[0x24BE528D0]();
}

uint64_t sub_23FB2CAAC()
{
  return MEMORY[0x24BE528E0]();
}

uint64_t sub_23FB2CAB8()
{
  return MEMORY[0x24BE529E0]();
}

uint64_t sub_23FB2CAC4()
{
  return MEMORY[0x24BE52A08]();
}

uint64_t sub_23FB2CAD0()
{
  return MEMORY[0x24BE52A10]();
}

uint64_t sub_23FB2CADC()
{
  return MEMORY[0x24BE52A18]();
}

uint64_t sub_23FB2CAE8()
{
  return MEMORY[0x24BE52A20]();
}

uint64_t sub_23FB2CAF4()
{
  return MEMORY[0x24BE52A28]();
}

uint64_t sub_23FB2CB00()
{
  return MEMORY[0x24BE52A78]();
}

uint64_t sub_23FB2CB0C()
{
  return MEMORY[0x24BE52A80]();
}

uint64_t sub_23FB2CB18()
{
  return MEMORY[0x24BE52A88]();
}

uint64_t sub_23FB2CB24()
{
  return MEMORY[0x24BE52A90]();
}

uint64_t sub_23FB2CB30()
{
  return MEMORY[0x24BE52AA0]();
}

uint64_t sub_23FB2CB3C()
{
  return MEMORY[0x24BE52AA8]();
}

uint64_t sub_23FB2CB48()
{
  return MEMORY[0x24BE52AB0]();
}

uint64_t sub_23FB2CB54()
{
  return MEMORY[0x24BE52AB8]();
}

uint64_t sub_23FB2CB60()
{
  return MEMORY[0x24BE52AC0]();
}

uint64_t sub_23FB2CB6C()
{
  return MEMORY[0x24BE52AC8]();
}

uint64_t sub_23FB2CB78()
{
  return MEMORY[0x24BE52AD0]();
}

uint64_t sub_23FB2CB84()
{
  return MEMORY[0x24BE52AD8]();
}

uint64_t sub_23FB2CB90()
{
  return MEMORY[0x24BE52AF0]();
}

uint64_t sub_23FB2CB9C()
{
  return MEMORY[0x24BE52AF8]();
}

uint64_t sub_23FB2CBA8()
{
  return MEMORY[0x24BE52B00]();
}

uint64_t sub_23FB2CBB4()
{
  return MEMORY[0x24BE52B08]();
}

uint64_t sub_23FB2CBC0()
{
  return MEMORY[0x24BE52B18]();
}

uint64_t sub_23FB2CBCC()
{
  return MEMORY[0x24BE52B20]();
}

uint64_t sub_23FB2CBD8()
{
  return MEMORY[0x24BE52B28]();
}

uint64_t sub_23FB2CBE4()
{
  return MEMORY[0x24BE52B38]();
}

uint64_t sub_23FB2CBF0()
{
  return MEMORY[0x24BE52B40]();
}

uint64_t sub_23FB2CBFC()
{
  return MEMORY[0x24BE52B48]();
}

uint64_t sub_23FB2CC08()
{
  return MEMORY[0x24BE52B50]();
}

uint64_t sub_23FB2CC14()
{
  return MEMORY[0x24BE52B60]();
}

uint64_t sub_23FB2CC20()
{
  return MEMORY[0x24BE52B80]();
}

uint64_t sub_23FB2CC2C()
{
  return MEMORY[0x24BE52BB0]();
}

uint64_t sub_23FB2CC38()
{
  return MEMORY[0x24BE52C00]();
}

uint64_t sub_23FB2CC44()
{
  return MEMORY[0x24BE52C08]();
}

uint64_t sub_23FB2CC50()
{
  return MEMORY[0x24BE52C10]();
}

uint64_t sub_23FB2CC5C()
{
  return MEMORY[0x24BE52C70]();
}

uint64_t sub_23FB2CC68()
{
  return MEMORY[0x24BE52C78]();
}

uint64_t sub_23FB2CC74()
{
  return MEMORY[0x24BE52C80]();
}

uint64_t sub_23FB2CC80()
{
  return MEMORY[0x24BE52C88]();
}

uint64_t sub_23FB2CC8C()
{
  return MEMORY[0x24BE52CD0]();
}

uint64_t sub_23FB2CC98()
{
  return MEMORY[0x24BE52CD8]();
}

uint64_t sub_23FB2CCA4()
{
  return MEMORY[0x24BE52CE0]();
}

uint64_t sub_23FB2CCB0()
{
  return MEMORY[0x24BE52CE8]();
}

uint64_t sub_23FB2CCBC()
{
  return MEMORY[0x24BE52CF0]();
}

uint64_t sub_23FB2CCC8()
{
  return MEMORY[0x24BE52CF8]();
}

uint64_t sub_23FB2CCD4()
{
  return MEMORY[0x24BE52D08]();
}

uint64_t sub_23FB2CCE0()
{
  return MEMORY[0x24BE52D50]();
}

uint64_t sub_23FB2CCEC()
{
  return MEMORY[0x24BE52D58]();
}

uint64_t sub_23FB2CCF8()
{
  return MEMORY[0x24BE52D60]();
}

uint64_t sub_23FB2CD04()
{
  return MEMORY[0x24BE52D68]();
}

uint64_t sub_23FB2CD10()
{
  return MEMORY[0x24BE52D88]();
}

uint64_t sub_23FB2CD1C()
{
  return MEMORY[0x24BE52D98]();
}

uint64_t sub_23FB2CD28()
{
  return MEMORY[0x24BE52DB0]();
}

uint64_t sub_23FB2CD34()
{
  return MEMORY[0x24BE52DB8]();
}

uint64_t sub_23FB2CD40()
{
  return MEMORY[0x24BE52DC8]();
}

uint64_t sub_23FB2CD4C()
{
  return MEMORY[0x24BE52DE0]();
}

uint64_t sub_23FB2CD58()
{
  return MEMORY[0x24BE52DF0]();
}

uint64_t sub_23FB2CD64()
{
  return MEMORY[0x24BE52DF8]();
}

uint64_t sub_23FB2CD70()
{
  return MEMORY[0x24BE52E00]();
}

uint64_t sub_23FB2CD7C()
{
  return MEMORY[0x24BE52E08]();
}

uint64_t sub_23FB2CD88()
{
  return MEMORY[0x24BE52E10]();
}

uint64_t sub_23FB2CD94()
{
  return MEMORY[0x24BE52E20]();
}

uint64_t sub_23FB2CDA0()
{
  return MEMORY[0x24BE52E28]();
}

uint64_t sub_23FB2CDAC()
{
  return MEMORY[0x24BE52E30]();
}

uint64_t sub_23FB2CDB8()
{
  return MEMORY[0x24BE52E38]();
}

uint64_t sub_23FB2CDC4()
{
  return MEMORY[0x24BE52E48]();
}

uint64_t sub_23FB2CDD0()
{
  return MEMORY[0x24BE52E58]();
}

uint64_t sub_23FB2CDDC()
{
  return MEMORY[0x24BE52E60]();
}

uint64_t sub_23FB2CDE8()
{
  return MEMORY[0x24BE52E68]();
}

uint64_t sub_23FB2CDF4()
{
  return MEMORY[0x24BE52E70]();
}

uint64_t sub_23FB2CE00()
{
  return MEMORY[0x24BE52EA0]();
}

uint64_t sub_23FB2CE0C()
{
  return MEMORY[0x24BE52EA8]();
}

uint64_t sub_23FB2CE18()
{
  return MEMORY[0x24BE52EB8]();
}

uint64_t sub_23FB2CE24()
{
  return MEMORY[0x24BE52ED0]();
}

uint64_t sub_23FB2CE30()
{
  return MEMORY[0x24BE52EF0]();
}

uint64_t sub_23FB2CE3C()
{
  return MEMORY[0x24BE52F30]();
}

uint64_t sub_23FB2CE48()
{
  return MEMORY[0x24BE52F40]();
}

uint64_t sub_23FB2CE54()
{
  return MEMORY[0x24BE52F48]();
}

uint64_t sub_23FB2CE60()
{
  return MEMORY[0x24BE52F50]();
}

uint64_t sub_23FB2CE6C()
{
  return MEMORY[0x24BE52F60]();
}

uint64_t sub_23FB2CE78()
{
  return MEMORY[0x24BE52F70]();
}

uint64_t sub_23FB2CE84()
{
  return MEMORY[0x24BE52F90]();
}

uint64_t sub_23FB2CE90()
{
  return MEMORY[0x24BE52F98]();
}

uint64_t sub_23FB2CE9C()
{
  return MEMORY[0x24BE52FA0]();
}

uint64_t sub_23FB2CEA8()
{
  return MEMORY[0x24BE52FB0]();
}

uint64_t sub_23FB2CEB4()
{
  return MEMORY[0x24BE52FB8]();
}

uint64_t sub_23FB2CEC0()
{
  return MEMORY[0x24BE52FC0]();
}

uint64_t sub_23FB2CECC()
{
  return MEMORY[0x24BE52FC8]();
}

uint64_t sub_23FB2CED8()
{
  return MEMORY[0x24BE52FD0]();
}

uint64_t sub_23FB2CEE4()
{
  return MEMORY[0x24BE52FE0]();
}

uint64_t sub_23FB2CEF0()
{
  return MEMORY[0x24BE52FE8]();
}

uint64_t sub_23FB2CEFC()
{
  return MEMORY[0x24BE52FF0]();
}

uint64_t sub_23FB2CF08()
{
  return MEMORY[0x24BE53000]();
}

uint64_t sub_23FB2CF14()
{
  return MEMORY[0x24BE53008]();
}

uint64_t sub_23FB2CF20()
{
  return MEMORY[0x24BE53010]();
}

uint64_t sub_23FB2CF2C()
{
  return MEMORY[0x24BE53018]();
}

uint64_t sub_23FB2CF38()
{
  return MEMORY[0x24BE53030]();
}

uint64_t sub_23FB2CF44()
{
  return MEMORY[0x24BE53040]();
}

uint64_t sub_23FB2CF50()
{
  return MEMORY[0x24BE53058]();
}

uint64_t sub_23FB2CF5C()
{
  return MEMORY[0x24BE53060]();
}

uint64_t sub_23FB2CF68()
{
  return MEMORY[0x24BE53068]();
}

uint64_t sub_23FB2CF74()
{
  return MEMORY[0x24BE53070]();
}

uint64_t sub_23FB2CF80()
{
  return MEMORY[0x24BE53080]();
}

uint64_t sub_23FB2CF8C()
{
  return MEMORY[0x24BE53098]();
}

uint64_t sub_23FB2CF98()
{
  return MEMORY[0x24BE530A8]();
}

uint64_t sub_23FB2CFA4()
{
  return MEMORY[0x24BE530B8]();
}

uint64_t sub_23FB2CFB0()
{
  return MEMORY[0x24BE530C0]();
}

uint64_t sub_23FB2CFBC()
{
  return MEMORY[0x24BE530C8]();
}

uint64_t sub_23FB2CFC8()
{
  return MEMORY[0x24BE530D0]();
}

uint64_t sub_23FB2CFD4()
{
  return MEMORY[0x24BE530D8]();
}

uint64_t sub_23FB2CFE0()
{
  return MEMORY[0x24BE530E0]();
}

uint64_t sub_23FB2CFEC()
{
  return MEMORY[0x24BE530E8]();
}

uint64_t sub_23FB2CFF8()
{
  return MEMORY[0x24BE530F0]();
}

uint64_t sub_23FB2D004()
{
  return MEMORY[0x24BE530F8]();
}

uint64_t sub_23FB2D010()
{
  return MEMORY[0x24BE53118]();
}

uint64_t sub_23FB2D01C()
{
  return MEMORY[0x24BE53120]();
}

uint64_t sub_23FB2D028()
{
  return MEMORY[0x24BE53128]();
}

uint64_t sub_23FB2D034()
{
  return MEMORY[0x24BE53130]();
}

uint64_t sub_23FB2D040()
{
  return MEMORY[0x24BE53158]();
}

uint64_t sub_23FB2D04C()
{
  return MEMORY[0x24BE53228]();
}

uint64_t sub_23FB2D058()
{
  return MEMORY[0x24BE53238]();
}

uint64_t sub_23FB2D064()
{
  return MEMORY[0x24BE53240]();
}

uint64_t sub_23FB2D070()
{
  return MEMORY[0x24BE53248]();
}

uint64_t sub_23FB2D07C()
{
  return MEMORY[0x24BE53260]();
}

uint64_t sub_23FB2D088()
{
  return MEMORY[0x24BE53268]();
}

uint64_t sub_23FB2D094()
{
  return MEMORY[0x24BE53270]();
}

uint64_t sub_23FB2D0A0()
{
  return MEMORY[0x24BE53280]();
}

uint64_t sub_23FB2D0AC()
{
  return MEMORY[0x24BE53288]();
}

uint64_t sub_23FB2D0B8()
{
  return MEMORY[0x24BE532A0]();
}

uint64_t sub_23FB2D0C4()
{
  return MEMORY[0x24BE532C8]();
}

uint64_t sub_23FB2D0D0()
{
  return MEMORY[0x24BE53318]();
}

uint64_t sub_23FB2D0DC()
{
  return MEMORY[0x24BE53330]();
}

uint64_t sub_23FB2D0E8()
{
  return MEMORY[0x24BE53378]();
}

uint64_t sub_23FB2D0F4()
{
  return MEMORY[0x24BE533C8]();
}

uint64_t sub_23FB2D100()
{
  return MEMORY[0x24BE53408]();
}

uint64_t sub_23FB2D10C()
{
  return MEMORY[0x24BE53418]();
}

uint64_t sub_23FB2D118()
{
  return MEMORY[0x24BE53420]();
}

uint64_t sub_23FB2D124()
{
  return MEMORY[0x24BE53430]();
}

uint64_t sub_23FB2D130()
{
  return MEMORY[0x24BE53438]();
}

uint64_t sub_23FB2D13C()
{
  return MEMORY[0x24BE53440]();
}

uint64_t sub_23FB2D148()
{
  return MEMORY[0x24BE53448]();
}

uint64_t sub_23FB2D154()
{
  return MEMORY[0x24BE53458]();
}

uint64_t sub_23FB2D160()
{
  return MEMORY[0x24BE53460]();
}

uint64_t sub_23FB2D16C()
{
  return MEMORY[0x24BE53470]();
}

uint64_t sub_23FB2D178()
{
  return MEMORY[0x24BE53490]();
}

uint64_t sub_23FB2D184()
{
  return MEMORY[0x24BE534A0]();
}

uint64_t sub_23FB2D190()
{
  return MEMORY[0x24BE534A8]();
}

uint64_t sub_23FB2D19C()
{
  return MEMORY[0x24BE534B8]();
}

uint64_t sub_23FB2D1A8()
{
  return MEMORY[0x24BE534C0]();
}

uint64_t sub_23FB2D1B4()
{
  return MEMORY[0x24BE534C8]();
}

uint64_t sub_23FB2D1C0()
{
  return MEMORY[0x24BE534D0]();
}

uint64_t sub_23FB2D1CC()
{
  return MEMORY[0x24BE534D8]();
}

uint64_t sub_23FB2D1D8()
{
  return MEMORY[0x24BE534E0]();
}

uint64_t sub_23FB2D1E4()
{
  return MEMORY[0x24BE534E8]();
}

uint64_t sub_23FB2D1F0()
{
  return MEMORY[0x24BE534F0]();
}

uint64_t sub_23FB2D1FC()
{
  return MEMORY[0x24BE53508]();
}

uint64_t sub_23FB2D208()
{
  return MEMORY[0x24BE53510]();
}

uint64_t sub_23FB2D214()
{
  return MEMORY[0x24BE53518]();
}

uint64_t sub_23FB2D220()
{
  return MEMORY[0x24BE53548]();
}

uint64_t sub_23FB2D22C()
{
  return MEMORY[0x24BE53558]();
}

uint64_t sub_23FB2D238()
{
  return MEMORY[0x24BE53560]();
}

uint64_t sub_23FB2D244()
{
  return MEMORY[0x24BE53568]();
}

uint64_t sub_23FB2D250()
{
  return MEMORY[0x24BE53598]();
}

uint64_t sub_23FB2D25C()
{
  return MEMORY[0x24BE535C0]();
}

uint64_t sub_23FB2D268()
{
  return MEMORY[0x24BE535C8]();
}

uint64_t sub_23FB2D274()
{
  return MEMORY[0x24BE535D0]();
}

uint64_t sub_23FB2D280()
{
  return MEMORY[0x24BE53610]();
}

uint64_t sub_23FB2D28C()
{
  return MEMORY[0x24BE53618]();
}

uint64_t sub_23FB2D298()
{
  return MEMORY[0x24BE53620]();
}

uint64_t sub_23FB2D2A4()
{
  return MEMORY[0x24BE53628]();
}

uint64_t sub_23FB2D2B0()
{
  return MEMORY[0x24BE53658]();
}

uint64_t sub_23FB2D2BC()
{
  return MEMORY[0x24BE53660]();
}

uint64_t sub_23FB2D2C8()
{
  return MEMORY[0x24BE53668]();
}

uint64_t sub_23FB2D2D4()
{
  return MEMORY[0x24BE53678]();
}

uint64_t sub_23FB2D2E0()
{
  return MEMORY[0x24BE53680]();
}

uint64_t sub_23FB2D2EC()
{
  return MEMORY[0x24BE53688]();
}

uint64_t sub_23FB2D2F8()
{
  return MEMORY[0x24BE53698]();
}

uint64_t sub_23FB2D304()
{
  return MEMORY[0x24BE536A0]();
}

uint64_t sub_23FB2D310()
{
  return MEMORY[0x24BE536A8]();
}

uint64_t sub_23FB2D31C()
{
  return MEMORY[0x24BE536B8]();
}

uint64_t sub_23FB2D328()
{
  return MEMORY[0x24BE536C0]();
}

uint64_t sub_23FB2D334()
{
  return MEMORY[0x24BE536E8]();
}

uint64_t sub_23FB2D340()
{
  return MEMORY[0x24BE536F0]();
}

uint64_t sub_23FB2D34C()
{
  return MEMORY[0x24BE536F8]();
}

uint64_t sub_23FB2D358()
{
  return MEMORY[0x24BE53700]();
}

uint64_t sub_23FB2D364()
{
  return MEMORY[0x24BE53708]();
}

uint64_t sub_23FB2D370()
{
  return MEMORY[0x24BE53710]();
}

uint64_t sub_23FB2D37C()
{
  return MEMORY[0x24BE53728]();
}

uint64_t sub_23FB2D388()
{
  return MEMORY[0x24BE53740]();
}

uint64_t sub_23FB2D394()
{
  return MEMORY[0x24BE53768]();
}

uint64_t sub_23FB2D3A0()
{
  return MEMORY[0x24BE53770]();
}

uint64_t sub_23FB2D3AC()
{
  return MEMORY[0x24BE53778]();
}

uint64_t sub_23FB2D3B8()
{
  return MEMORY[0x24BE53788]();
}

uint64_t sub_23FB2D3C4()
{
  return MEMORY[0x24BE537E8]();
}

uint64_t sub_23FB2D3D0()
{
  return MEMORY[0x24BE537F8]();
}

uint64_t sub_23FB2D3DC()
{
  return MEMORY[0x24BE53848]();
}

uint64_t sub_23FB2D3E8()
{
  return MEMORY[0x24BE53890]();
}

uint64_t sub_23FB2D3F4()
{
  return MEMORY[0x24BE53898]();
}

uint64_t sub_23FB2D400()
{
  return MEMORY[0x24BE53940]();
}

uint64_t sub_23FB2D40C()
{
  return MEMORY[0x24BE53948]();
}

uint64_t sub_23FB2D418()
{
  return MEMORY[0x24BE53950]();
}

uint64_t sub_23FB2D424()
{
  return MEMORY[0x24BE53958]();
}

uint64_t sub_23FB2D430()
{
  return MEMORY[0x24BE53960]();
}

uint64_t sub_23FB2D43C()
{
  return MEMORY[0x24BE539B0]();
}

uint64_t sub_23FB2D448()
{
  return MEMORY[0x24BE539D0]();
}

uint64_t sub_23FB2D454()
{
  return MEMORY[0x24BE539D8]();
}

uint64_t sub_23FB2D460()
{
  return MEMORY[0x24BE539E0]();
}

uint64_t sub_23FB2D46C()
{
  return MEMORY[0x24BE539E8]();
}

uint64_t sub_23FB2D478()
{
  return MEMORY[0x24BE53A10]();
}

uint64_t sub_23FB2D484()
{
  return MEMORY[0x24BE53A60]();
}

uint64_t sub_23FB2D490()
{
  return MEMORY[0x24BE53A68]();
}

uint64_t sub_23FB2D49C()
{
  return MEMORY[0x24BE53A70]();
}

uint64_t sub_23FB2D4A8()
{
  return MEMORY[0x24BE53A78]();
}

uint64_t sub_23FB2D4B4()
{
  return MEMORY[0x24BE53A80]();
}

uint64_t _s16IntelligenceFlow22SystemPromptResolutionV18ActionCancellationV0aB14PlannerSupportE4ifpsAeF14RequestContentOABVADV_tcfC_0()
{
  return MEMORY[0x24BE53A88]();
}

uint64_t sub_23FB2D4CC()
{
  return MEMORY[0x24BE53A98]();
}

uint64_t sub_23FB2D4D8()
{
  return MEMORY[0x24BE53AA0]();
}

uint64_t sub_23FB2D4E4()
{
  return MEMORY[0x24BE53AA8]();
}

uint64_t sub_23FB2D4F0()
{
  return MEMORY[0x24BE53AB0]();
}

uint64_t sub_23FB2D4FC()
{
  return MEMORY[0x24BE53AB8]();
}

uint64_t sub_23FB2D508()
{
  return MEMORY[0x24BE53AC0]();
}

uint64_t sub_23FB2D514()
{
  return MEMORY[0x24BE53AC8]();
}

uint64_t sub_23FB2D520()
{
  return MEMORY[0x24BE53AD0]();
}

uint64_t sub_23FB2D52C()
{
  return MEMORY[0x24BE53B80]();
}

uint64_t sub_23FB2D538()
{
  return MEMORY[0x24BE53B88]();
}

uint64_t sub_23FB2D544()
{
  return MEMORY[0x24BE53B90]();
}

uint64_t sub_23FB2D550()
{
  return MEMORY[0x24BE53B98]();
}

uint64_t sub_23FB2D55C()
{
  return MEMORY[0x24BE53BA0]();
}

uint64_t sub_23FB2D568()
{
  return MEMORY[0x24BE53BA8]();
}

uint64_t sub_23FB2D574()
{
  return MEMORY[0x24BE53BB0]();
}

uint64_t sub_23FB2D580()
{
  return MEMORY[0x24BE53BB8]();
}

uint64_t sub_23FB2D58C()
{
  return MEMORY[0x24BE53E60]();
}

uint64_t sub_23FB2D598()
{
  return MEMORY[0x24BE53E68]();
}

uint64_t sub_23FB2D5A4()
{
  return MEMORY[0x24BE53E70]();
}

uint64_t sub_23FB2D5B0()
{
  return MEMORY[0x24BE53E78]();
}

uint64_t sub_23FB2D5BC()
{
  return MEMORY[0x24BE53E80]();
}

uint64_t sub_23FB2D5C8()
{
  return MEMORY[0x24BE53E88]();
}

uint64_t sub_23FB2D5D4()
{
  return MEMORY[0x24BE53EA0]();
}

uint64_t sub_23FB2D5E0()
{
  return MEMORY[0x24BE53EB0]();
}

uint64_t sub_23FB2D5EC()
{
  return MEMORY[0x24BE53EC0]();
}

uint64_t sub_23FB2D5F8()
{
  return MEMORY[0x24BE53ED0]();
}

uint64_t sub_23FB2D604()
{
  return MEMORY[0x24BE53ED8]();
}

uint64_t sub_23FB2D610()
{
  return MEMORY[0x24BE53EE0]();
}

uint64_t sub_23FB2D61C()
{
  return MEMORY[0x24BE53EE8]();
}

uint64_t sub_23FB2D628()
{
  return MEMORY[0x24BE7A568]();
}

uint64_t sub_23FB2D634()
{
  return MEMORY[0x24BE7A578]();
}

uint64_t sub_23FB2D640()
{
  return MEMORY[0x24BE7A580]();
}

uint64_t sub_23FB2D64C()
{
  return MEMORY[0x24BEE73C0]();
}

uint64_t sub_23FB2D658()
{
  return MEMORY[0x24BEE7408]();
}

uint64_t sub_23FB2D664()
{
  return MEMORY[0x24BEE7420]();
}

uint64_t sub_23FB2D670()
{
  return MEMORY[0x24BE581F8]();
}

uint64_t sub_23FB2D67C()
{
  return MEMORY[0x24BE58200]();
}

uint64_t sub_23FB2D688()
{
  return MEMORY[0x24BE58208]();
}

uint64_t sub_23FB2D694()
{
  return MEMORY[0x24BE58210]();
}

uint64_t sub_23FB2D6A0()
{
  return MEMORY[0x24BE5B940]();
}

uint64_t sub_23FB2D6AC()
{
  return MEMORY[0x24BE5B948]();
}

uint64_t sub_23FB2D6B8()
{
  return MEMORY[0x24BE5B970]();
}

uint64_t sub_23FB2D6C4()
{
  return MEMORY[0x24BE5B978]();
}

uint64_t sub_23FB2D6D0()
{
  return MEMORY[0x24BE5B990]();
}

uint64_t sub_23FB2D6DC()
{
  return MEMORY[0x24BE5BEC0]();
}

uint64_t sub_23FB2D6E8()
{
  return MEMORY[0x24BE5BED8]();
}

uint64_t sub_23FB2D6F4()
{
  return MEMORY[0x24BE5BEF0]();
}

uint64_t sub_23FB2D700()
{
  return MEMORY[0x24BE5BF00]();
}

uint64_t _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0()
{
  return MEMORY[0x24BE5BF08]();
}

uint64_t sub_23FB2D718()
{
  return MEMORY[0x24BE5BF10]();
}

uint64_t sub_23FB2D724()
{
  return MEMORY[0x24BE5BF88]();
}

uint64_t sub_23FB2D730()
{
  return MEMORY[0x24BE5BF90]();
}

uint64_t sub_23FB2D73C()
{
  return MEMORY[0x24BE5BF98]();
}

uint64_t sub_23FB2D748()
{
  return MEMORY[0x24BE5BFA8]();
}

uint64_t sub_23FB2D754()
{
  return MEMORY[0x24BE5BFB0]();
}

uint64_t sub_23FB2D760()
{
  return MEMORY[0x24BE5BFC0]();
}

uint64_t sub_23FB2D76C()
{
  return MEMORY[0x24BE5BFC8]();
}

uint64_t sub_23FB2D778()
{
  return MEMORY[0x24BE5C008]();
}

uint64_t sub_23FB2D784()
{
  return MEMORY[0x24BE5C010]();
}

uint64_t sub_23FB2D790()
{
  return MEMORY[0x24BE5C018]();
}

uint64_t sub_23FB2D79C()
{
  return MEMORY[0x24BE5C028]();
}

uint64_t sub_23FB2D7A8()
{
  return MEMORY[0x24BE5C030]();
}

uint64_t sub_23FB2D7B4()
{
  return MEMORY[0x24BE5C038]();
}

uint64_t sub_23FB2D7C0()
{
  return MEMORY[0x24BE5C048]();
}

uint64_t sub_23FB2D7CC()
{
  return MEMORY[0x24BE5C058]();
}

uint64_t sub_23FB2D7D8()
{
  return MEMORY[0x24BE5C060]();
}

uint64_t sub_23FB2D7E4()
{
  return MEMORY[0x24BE5C068]();
}

uint64_t sub_23FB2D7F0()
{
  return MEMORY[0x24BE5C070]();
}

uint64_t sub_23FB2D7FC()
{
  return MEMORY[0x24BE5C078]();
}

uint64_t sub_23FB2D808()
{
  return MEMORY[0x24BE5C0A0]();
}

uint64_t sub_23FB2D814()
{
  return MEMORY[0x24BE5C0B0]();
}

uint64_t sub_23FB2D820()
{
  return MEMORY[0x24BE5C0B8]();
}

uint64_t sub_23FB2D82C()
{
  return MEMORY[0x24BE5C0C0]();
}

uint64_t sub_23FB2D838()
{
  return MEMORY[0x24BE5C0C8]();
}

uint64_t sub_23FB2D844()
{
  return MEMORY[0x24BE5C0D0]();
}

uint64_t sub_23FB2D850()
{
  return MEMORY[0x24BE5C0D8]();
}

uint64_t sub_23FB2D85C()
{
  return MEMORY[0x24BE5C0E8]();
}

uint64_t sub_23FB2D868()
{
  return MEMORY[0x24BE5C100]();
}

uint64_t sub_23FB2D874()
{
  return MEMORY[0x24BE5C118]();
}

uint64_t sub_23FB2D880()
{
  return MEMORY[0x24BE5C120]();
}

uint64_t sub_23FB2D88C()
{
  return MEMORY[0x24BE5C130]();
}

uint64_t sub_23FB2D898()
{
  return MEMORY[0x24BE5C140]();
}

uint64_t sub_23FB2D8A4()
{
  return MEMORY[0x24BE5C148]();
}

uint64_t sub_23FB2D8B0()
{
  return MEMORY[0x24BE5C160]();
}

uint64_t sub_23FB2D8BC()
{
  return MEMORY[0x24BE5C198]();
}

uint64_t sub_23FB2D8C8()
{
  return MEMORY[0x24BE5C1A0]();
}

uint64_t sub_23FB2D8D4()
{
  return MEMORY[0x24BE5C1B0]();
}

uint64_t sub_23FB2D8E0()
{
  return MEMORY[0x24BE5C1B8]();
}

uint64_t sub_23FB2D8EC()
{
  return MEMORY[0x24BE5C1C0]();
}

uint64_t sub_23FB2D8F8()
{
  return MEMORY[0x24BE5C1D0]();
}

uint64_t sub_23FB2D904()
{
  return MEMORY[0x24BE5C1E8]();
}

uint64_t sub_23FB2D910()
{
  return MEMORY[0x24BE5C1F0]();
}

uint64_t sub_23FB2D91C()
{
  return MEMORY[0x24BE5C210]();
}

uint64_t sub_23FB2D928()
{
  return MEMORY[0x24BE5C218]();
}

uint64_t sub_23FB2D934()
{
  return MEMORY[0x24BE5C230]();
}

uint64_t sub_23FB2D940()
{
  return MEMORY[0x24BE5C270]();
}

uint64_t sub_23FB2D94C()
{
  return MEMORY[0x24BE5C278]();
}

uint64_t sub_23FB2D958()
{
  return MEMORY[0x24BE5C298]();
}

uint64_t sub_23FB2D964()
{
  return MEMORY[0x24BE5C2A0]();
}

uint64_t sub_23FB2D970()
{
  return MEMORY[0x24BE5C2A8]();
}

uint64_t sub_23FB2D97C()
{
  return MEMORY[0x24BE5C2B0]();
}

uint64_t sub_23FB2D988()
{
  return MEMORY[0x24BE5C2C0]();
}

uint64_t sub_23FB2D994()
{
  return MEMORY[0x24BE5C2D8]();
}

uint64_t sub_23FB2D9A0()
{
  return MEMORY[0x24BE5C2E8]();
}

uint64_t sub_23FB2D9AC()
{
  return MEMORY[0x24BE5C2F0]();
}

uint64_t sub_23FB2D9B8()
{
  return MEMORY[0x24BE5C2F8]();
}

uint64_t sub_23FB2D9C4()
{
  return MEMORY[0x24BE5C300]();
}

uint64_t sub_23FB2D9D0()
{
  return MEMORY[0x24BE5C310]();
}

uint64_t sub_23FB2D9DC()
{
  return MEMORY[0x24BE5C330]();
}

uint64_t sub_23FB2D9E8()
{
  return MEMORY[0x24BE5C340]();
}

uint64_t sub_23FB2D9F4()
{
  return MEMORY[0x24BE5C348]();
}

uint64_t sub_23FB2DA00()
{
  return MEMORY[0x24BE5C350]();
}

uint64_t sub_23FB2DA0C()
{
  return MEMORY[0x24BE570C8]();
}

uint64_t sub_23FB2DA18()
{
  return MEMORY[0x24BE570D0]();
}

uint64_t sub_23FB2DA24()
{
  return MEMORY[0x24BE570D8]();
}

uint64_t sub_23FB2DA30()
{
  return MEMORY[0x24BE570E0]();
}

uint64_t sub_23FB2DA3C()
{
  return MEMORY[0x24BE570E8]();
}

uint64_t sub_23FB2DA48()
{
  return MEMORY[0x24BE570F0]();
}

uint64_t sub_23FB2DA54()
{
  return MEMORY[0x24BE570F8]();
}

uint64_t sub_23FB2DA60()
{
  return MEMORY[0x24BE57108]();
}

uint64_t sub_23FB2DA6C()
{
  return MEMORY[0x24BE57138]();
}

uint64_t sub_23FB2DA78()
{
  return MEMORY[0x24BE57140]();
}

uint64_t sub_23FB2DA84()
{
  return MEMORY[0x24BE57148]();
}

uint64_t sub_23FB2DA90()
{
  return MEMORY[0x24BE57150]();
}

uint64_t sub_23FB2DA9C()
{
  return MEMORY[0x24BE571D8]();
}

uint64_t sub_23FB2DAA8()
{
  return MEMORY[0x24BE57208]();
}

uint64_t sub_23FB2DAB4()
{
  return MEMORY[0x24BE57210]();
}

uint64_t sub_23FB2DAC0()
{
  return MEMORY[0x24BE57218]();
}

uint64_t sub_23FB2DACC()
{
  return MEMORY[0x24BE57220]();
}

uint64_t sub_23FB2DAD8()
{
  return MEMORY[0x24BE57228]();
}

uint64_t sub_23FB2DAE4()
{
  return MEMORY[0x24BE57230]();
}

uint64_t sub_23FB2DAF0()
{
  return MEMORY[0x24BE57320]();
}

uint64_t sub_23FB2DAFC()
{
  return MEMORY[0x24BE57358]();
}

uint64_t sub_23FB2DB08()
{
  return MEMORY[0x24BE57360]();
}

uint64_t sub_23FB2DB14()
{
  return MEMORY[0x24BE57368]();
}

uint64_t sub_23FB2DB20()
{
  return MEMORY[0x24BE57370]();
}

uint64_t sub_23FB2DB2C()
{
  return MEMORY[0x24BE57378]();
}

uint64_t sub_23FB2DB38()
{
  return MEMORY[0x24BE57380]();
}

uint64_t sub_23FB2DB44()
{
  return MEMORY[0x24BE57388]();
}

uint64_t sub_23FB2DB50()
{
  return MEMORY[0x24BE57390]();
}

uint64_t sub_23FB2DB5C()
{
  return MEMORY[0x24BE57398]();
}

uint64_t sub_23FB2DB68()
{
  return MEMORY[0x24BE573A0]();
}

uint64_t sub_23FB2DB74()
{
  return MEMORY[0x24BE573A8]();
}

uint64_t sub_23FB2DB80()
{
  return MEMORY[0x24BE573B0]();
}

uint64_t sub_23FB2DB8C()
{
  return MEMORY[0x24BE573B8]();
}

uint64_t sub_23FB2DB98()
{
  return MEMORY[0x24BE573C0]();
}

uint64_t sub_23FB2DBA4()
{
  return MEMORY[0x24BE573C8]();
}

uint64_t sub_23FB2DBB0()
{
  return MEMORY[0x24BE574A0]();
}

uint64_t sub_23FB2DBBC()
{
  return MEMORY[0x24BE574A8]();
}

uint64_t sub_23FB2DBC8()
{
  return MEMORY[0x24BE574B0]();
}

uint64_t sub_23FB2DBD4()
{
  return MEMORY[0x24BE574B8]();
}

uint64_t sub_23FB2DBE0()
{
  return MEMORY[0x24BE574C0]();
}

uint64_t sub_23FB2DBEC()
{
  return MEMORY[0x24BE574C8]();
}

uint64_t sub_23FB2DBF8()
{
  return MEMORY[0x24BE574D0]();
}

uint64_t sub_23FB2DC04()
{
  return MEMORY[0x24BE574D8]();
}

uint64_t sub_23FB2DC10()
{
  return MEMORY[0x24BE574E8]();
}

uint64_t _s30IntelligenceFlowPlannerSupport9ToolQueryV6OutputV2eeoiySbAE_AEtFZ_0()
{
  return MEMORY[0x24BE57560]();
}

uint64_t sub_23FB2DC28()
{
  return MEMORY[0x24BE57570]();
}

uint64_t sub_23FB2DC34()
{
  return MEMORY[0x24BE575A0]();
}

uint64_t sub_23FB2DC40()
{
  return MEMORY[0x24BE575A8]();
}

uint64_t sub_23FB2DC4C()
{
  return MEMORY[0x24BE575B0]();
}

uint64_t sub_23FB2DC58()
{
  return MEMORY[0x24BE575B8]();
}

uint64_t sub_23FB2DC64()
{
  return MEMORY[0x24BE575F0]();
}

uint64_t sub_23FB2DC70()
{
  return MEMORY[0x24BE57600]();
}

uint64_t sub_23FB2DC7C()
{
  return MEMORY[0x24BE57608]();
}

uint64_t sub_23FB2DC88()
{
  return MEMORY[0x24BE57648]();
}

uint64_t sub_23FB2DC94()
{
  return MEMORY[0x24BE57650]();
}

uint64_t sub_23FB2DCA0()
{
  return MEMORY[0x24BE57658]();
}

uint64_t sub_23FB2DCAC()
{
  return MEMORY[0x24BE57668]();
}

uint64_t sub_23FB2DCB8()
{
  return MEMORY[0x24BE57670]();
}

uint64_t sub_23FB2DCC4()
{
  return MEMORY[0x24BE57680]();
}

uint64_t sub_23FB2DCD0()
{
  return MEMORY[0x24BE57690]();
}

uint64_t sub_23FB2DCDC()
{
  return MEMORY[0x24BE57698]();
}

uint64_t sub_23FB2DCE8()
{
  return MEMORY[0x24BE576A0]();
}

uint64_t sub_23FB2DCF4()
{
  return MEMORY[0x24BE576A8]();
}

uint64_t sub_23FB2DD00()
{
  return MEMORY[0x24BE576B0]();
}

uint64_t sub_23FB2DD0C()
{
  return MEMORY[0x24BE576B8]();
}

uint64_t sub_23FB2DD18()
{
  return MEMORY[0x24BE576C0]();
}

uint64_t sub_23FB2DD24()
{
  return MEMORY[0x24BE576C8]();
}

uint64_t sub_23FB2DD30()
{
  return MEMORY[0x24BE576D8]();
}

uint64_t sub_23FB2DD3C()
{
  return MEMORY[0x24BE576E0]();
}

uint64_t sub_23FB2DD48()
{
  return MEMORY[0x24BE576E8]();
}

uint64_t sub_23FB2DD54()
{
  return MEMORY[0x24BE576F0]();
}

uint64_t sub_23FB2DD60()
{
  return MEMORY[0x24BE576F8]();
}

uint64_t sub_23FB2DD6C()
{
  return MEMORY[0x24BE57708]();
}

uint64_t sub_23FB2DD78()
{
  return MEMORY[0x24BE57710]();
}

uint64_t sub_23FB2DD84()
{
  return MEMORY[0x24BE57718]();
}

uint64_t sub_23FB2DD90()
{
  return MEMORY[0x24BE57720]();
}

uint64_t sub_23FB2DD9C()
{
  return MEMORY[0x24BE57748]();
}

uint64_t sub_23FB2DDA8()
{
  return MEMORY[0x24BE57760]();
}

uint64_t sub_23FB2DDB4()
{
  return MEMORY[0x24BE57768]();
}

uint64_t sub_23FB2DDC0()
{
  return MEMORY[0x24BE57770]();
}

uint64_t sub_23FB2DDCC()
{
  return MEMORY[0x24BE57778]();
}

uint64_t sub_23FB2DDD8()
{
  return MEMORY[0x24BE57790]();
}

uint64_t sub_23FB2DDE4()
{
  return MEMORY[0x24BE57798]();
}

uint64_t sub_23FB2DDF0()
{
  return MEMORY[0x24BE577A0]();
}

uint64_t sub_23FB2DDFC()
{
  return MEMORY[0x24BE577A8]();
}

uint64_t sub_23FB2DE08()
{
  return MEMORY[0x24BE577B0]();
}

uint64_t sub_23FB2DE14()
{
  return MEMORY[0x24BE577D8]();
}

uint64_t sub_23FB2DE20()
{
  return MEMORY[0x24BE577E0]();
}

uint64_t sub_23FB2DE2C()
{
  return MEMORY[0x24BE577E8]();
}

uint64_t sub_23FB2DE38()
{
  return MEMORY[0x24BE577F0]();
}

uint64_t sub_23FB2DE44()
{
  return MEMORY[0x24BE57840]();
}

uint64_t sub_23FB2DE50()
{
  return MEMORY[0x24BE57870]();
}

uint64_t sub_23FB2DE5C()
{
  return MEMORY[0x24BE57878]();
}

uint64_t sub_23FB2DE68()
{
  return MEMORY[0x24BE57898]();
}

uint64_t sub_23FB2DE74()
{
  return MEMORY[0x24BE578A0]();
}

uint64_t sub_23FB2DE80()
{
  return MEMORY[0x24BE578A8]();
}

uint64_t sub_23FB2DE8C()
{
  return MEMORY[0x24BE578B8]();
}

uint64_t sub_23FB2DE98()
{
  return MEMORY[0x24BE578F0]();
}

uint64_t sub_23FB2DEA4()
{
  return MEMORY[0x24BE57900]();
}

uint64_t sub_23FB2DEB0()
{
  return MEMORY[0x24BE57908]();
}

uint64_t sub_23FB2DEBC()
{
  return MEMORY[0x24BE57910]();
}

uint64_t sub_23FB2DEC8()
{
  return MEMORY[0x24BE57918]();
}

uint64_t sub_23FB2DED4()
{
  return MEMORY[0x24BE57920]();
}

uint64_t sub_23FB2DEE0()
{
  return MEMORY[0x24BE57928]();
}

uint64_t sub_23FB2DEEC()
{
  return MEMORY[0x24BE57930]();
}

uint64_t sub_23FB2DEF8()
{
  return MEMORY[0x24BE57938]();
}

uint64_t sub_23FB2DF04()
{
  return MEMORY[0x24BE57940]();
}

uint64_t sub_23FB2DF10()
{
  return MEMORY[0x24BE57948]();
}

uint64_t sub_23FB2DF1C()
{
  return MEMORY[0x24BE57950]();
}

uint64_t sub_23FB2DF28()
{
  return MEMORY[0x24BE57958]();
}

uint64_t sub_23FB2DF34()
{
  return MEMORY[0x24BE57960]();
}

uint64_t sub_23FB2DF40()
{
  return MEMORY[0x24BE57968]();
}

uint64_t sub_23FB2DF4C()
{
  return MEMORY[0x24BE57970]();
}

uint64_t sub_23FB2DF58()
{
  return MEMORY[0x24BE57978]();
}

uint64_t sub_23FB2DF64()
{
  return MEMORY[0x24BE57980]();
}

uint64_t sub_23FB2DF70()
{
  return MEMORY[0x24BE57990]();
}

uint64_t sub_23FB2DF7C()
{
  return MEMORY[0x24BE57998]();
}

uint64_t sub_23FB2DF88()
{
  return MEMORY[0x24BE579A8]();
}

uint64_t sub_23FB2DF94()
{
  return MEMORY[0x24BE579B0]();
}

uint64_t sub_23FB2DFA0()
{
  return MEMORY[0x24BE579B8]();
}

uint64_t sub_23FB2DFAC()
{
  return MEMORY[0x24BE579C0]();
}

uint64_t sub_23FB2DFB8()
{
  return MEMORY[0x24BE579C8]();
}

uint64_t sub_23FB2DFC4()
{
  return MEMORY[0x24BE57A00]();
}

uint64_t sub_23FB2DFD0()
{
  return MEMORY[0x24BE57A10]();
}

uint64_t sub_23FB2DFDC()
{
  return MEMORY[0x24BE57A18]();
}

uint64_t sub_23FB2DFE8()
{
  return MEMORY[0x24BE57A20]();
}

uint64_t sub_23FB2DFF4()
{
  return MEMORY[0x24BE57A28]();
}

uint64_t sub_23FB2E000()
{
  return MEMORY[0x24BE57A38]();
}

uint64_t sub_23FB2E00C()
{
  return MEMORY[0x24BE57A40]();
}

uint64_t sub_23FB2E018()
{
  return MEMORY[0x24BE57A48]();
}

uint64_t sub_23FB2E024()
{
  return MEMORY[0x24BE57A50]();
}

uint64_t sub_23FB2E030()
{
  return MEMORY[0x24BE57A58]();
}

uint64_t sub_23FB2E03C()
{
  return MEMORY[0x24BE57A60]();
}

uint64_t sub_23FB2E048()
{
  return MEMORY[0x24BE57A68]();
}

uint64_t sub_23FB2E054()
{
  return MEMORY[0x24BE57A70]();
}

uint64_t sub_23FB2E060()
{
  return MEMORY[0x24BE57A78]();
}

uint64_t sub_23FB2E06C()
{
  return MEMORY[0x24BE57A80]();
}

uint64_t sub_23FB2E078()
{
  return MEMORY[0x24BE57A90]();
}

uint64_t sub_23FB2E084()
{
  return MEMORY[0x24BE57A98]();
}

uint64_t sub_23FB2E090()
{
  return MEMORY[0x24BE57AA0]();
}

uint64_t sub_23FB2E09C()
{
  return MEMORY[0x24BE57AA8]();
}

uint64_t sub_23FB2E0A8()
{
  return MEMORY[0x24BE57AB0]();
}

uint64_t sub_23FB2E0B4()
{
  return MEMORY[0x24BE57AB8]();
}

uint64_t sub_23FB2E0C0()
{
  return MEMORY[0x24BE57AC8]();
}

uint64_t sub_23FB2E0CC()
{
  return MEMORY[0x24BE57AD0]();
}

uint64_t sub_23FB2E0D8()
{
  return MEMORY[0x24BE57AD8]();
}

uint64_t sub_23FB2E0E4()
{
  return MEMORY[0x24BE57AE0]();
}

uint64_t sub_23FB2E0F0()
{
  return MEMORY[0x24BE57AE8]();
}

uint64_t sub_23FB2E0FC()
{
  return MEMORY[0x24BE57AF0]();
}

uint64_t sub_23FB2E108()
{
  return MEMORY[0x24BE57B08]();
}

uint64_t sub_23FB2E114()
{
  return MEMORY[0x24BE57B18]();
}

uint64_t sub_23FB2E120()
{
  return MEMORY[0x24BE57B20]();
}

uint64_t sub_23FB2E12C()
{
  return MEMORY[0x24BE57B30]();
}

uint64_t sub_23FB2E138()
{
  return MEMORY[0x24BE57B38]();
}

uint64_t sub_23FB2E144()
{
  return MEMORY[0x24BE57B40]();
}

uint64_t sub_23FB2E150()
{
  return MEMORY[0x24BE57B48]();
}

uint64_t sub_23FB2E15C()
{
  return MEMORY[0x24BE57B50]();
}

uint64_t sub_23FB2E168()
{
  return MEMORY[0x24BE57B70]();
}

uint64_t sub_23FB2E174()
{
  return MEMORY[0x24BE57B78]();
}

uint64_t sub_23FB2E180()
{
  return MEMORY[0x24BE57B80]();
}

uint64_t sub_23FB2E18C()
{
  return MEMORY[0x24BE57B90]();
}

uint64_t sub_23FB2E198()
{
  return MEMORY[0x24BE57B98]();
}

uint64_t sub_23FB2E1A4()
{
  return MEMORY[0x24BE57BB0]();
}

uint64_t sub_23FB2E1B0()
{
  return MEMORY[0x24BE57BB8]();
}

uint64_t sub_23FB2E1BC()
{
  return MEMORY[0x24BE57BC0]();
}

uint64_t sub_23FB2E1C8()
{
  return MEMORY[0x24BE57BD0]();
}

uint64_t sub_23FB2E1D4()
{
  return MEMORY[0x24BE57C08]();
}

uint64_t sub_23FB2E1E0()
{
  return MEMORY[0x24BE57C28]();
}

uint64_t sub_23FB2E1EC()
{
  return MEMORY[0x24BE57C30]();
}

uint64_t sub_23FB2E1F8()
{
  return MEMORY[0x24BE57C38]();
}

uint64_t sub_23FB2E204()
{
  return MEMORY[0x24BE57C40]();
}

uint64_t sub_23FB2E210()
{
  return MEMORY[0x24BE57C58]();
}

uint64_t sub_23FB2E21C()
{
  return MEMORY[0x24BE57C70]();
}

uint64_t sub_23FB2E228()
{
  return MEMORY[0x24BE57C78]();
}

uint64_t sub_23FB2E234()
{
  return MEMORY[0x24BE57C80]();
}

uint64_t sub_23FB2E240()
{
  return MEMORY[0x24BE57C88]();
}

uint64_t sub_23FB2E24C()
{
  return MEMORY[0x24BE57C90]();
}

uint64_t sub_23FB2E258()
{
  return MEMORY[0x24BE57C98]();
}

uint64_t sub_23FB2E264()
{
  return MEMORY[0x24BE57CA0]();
}

uint64_t sub_23FB2E270()
{
  return MEMORY[0x24BE57CA8]();
}

uint64_t sub_23FB2E27C()
{
  return MEMORY[0x24BE57CB0]();
}

uint64_t sub_23FB2E288()
{
  return MEMORY[0x24BE57CB8]();
}

uint64_t sub_23FB2E294()
{
  return MEMORY[0x24BE57CD0]();
}

uint64_t sub_23FB2E2A0()
{
  return MEMORY[0x24BE57CF8]();
}

uint64_t sub_23FB2E2AC()
{
  return MEMORY[0x24BE57D18]();
}

uint64_t sub_23FB2E2B8()
{
  return MEMORY[0x24BE57D20]();
}

uint64_t sub_23FB2E2C4()
{
  return MEMORY[0x24BE57D28]();
}

uint64_t sub_23FB2E2D0()
{
  return MEMORY[0x24BE57D30]();
}

uint64_t sub_23FB2E2DC()
{
  return MEMORY[0x24BE57D40]();
}

uint64_t sub_23FB2E2E8()
{
  return MEMORY[0x24BE57D68]();
}

uint64_t sub_23FB2E2F4()
{
  return MEMORY[0x24BE57D70]();
}

uint64_t sub_23FB2E300()
{
  return MEMORY[0x24BE57D80]();
}

uint64_t sub_23FB2E30C()
{
  return MEMORY[0x24BE57DD8]();
}

uint64_t sub_23FB2E318()
{
  return MEMORY[0x24BE57DE0]();
}

uint64_t sub_23FB2E324()
{
  return MEMORY[0x24BE57DE8]();
}

uint64_t sub_23FB2E330()
{
  return MEMORY[0x24BE57DF0]();
}

uint64_t sub_23FB2E33C()
{
  return MEMORY[0x24BE57DF8]();
}

uint64_t sub_23FB2E348()
{
  return MEMORY[0x24BE57E08]();
}

uint64_t sub_23FB2E354()
{
  return MEMORY[0x24BE57E10]();
}

uint64_t sub_23FB2E360()
{
  return MEMORY[0x24BE57E40]();
}

uint64_t sub_23FB2E36C()
{
  return MEMORY[0x24BE57E50]();
}

uint64_t sub_23FB2E378()
{
  return MEMORY[0x24BE57E98]();
}

uint64_t sub_23FB2E384()
{
  return MEMORY[0x24BE57EC0]();
}

uint64_t sub_23FB2E390()
{
  return MEMORY[0x24BE57ED8]();
}

uint64_t sub_23FB2E39C()
{
  return MEMORY[0x24BE57EF0]();
}

uint64_t sub_23FB2E3A8()
{
  return MEMORY[0x24BE57F10]();
}

uint64_t sub_23FB2E3B4()
{
  return MEMORY[0x24BE57F28]();
}

uint64_t sub_23FB2E3C0()
{
  return MEMORY[0x24BE57F38]();
}

uint64_t sub_23FB2E3CC()
{
  return MEMORY[0x24BE57F40]();
}

uint64_t sub_23FB2E3D8()
{
  return MEMORY[0x24BE57F60]();
}

uint64_t sub_23FB2E3E4()
{
  return MEMORY[0x24BE57F68]();
}

uint64_t sub_23FB2E3F0()
{
  return MEMORY[0x24BE797C0]();
}

uint64_t sub_23FB2E3FC()
{
  return MEMORY[0x24BE79848]();
}

uint64_t sub_23FB2E408()
{
  return MEMORY[0x24BE79850]();
}

uint64_t sub_23FB2E414()
{
  return MEMORY[0x24BE79860]();
}

uint64_t sub_23FB2E420()
{
  return MEMORY[0x24BE586C8]();
}

uint64_t sub_23FB2E42C()
{
  return MEMORY[0x24BE586F8]();
}

uint64_t sub_23FB2E438()
{
  return MEMORY[0x24BE58708]();
}

uint64_t sub_23FB2E444()
{
  return MEMORY[0x24BE58718]();
}

uint64_t sub_23FB2E450()
{
  return MEMORY[0x24BE58720]();
}

uint64_t sub_23FB2E45C()
{
  return MEMORY[0x24BE58728]();
}

uint64_t sub_23FB2E468()
{
  return MEMORY[0x24BE58730]();
}

uint64_t sub_23FB2E474()
{
  return MEMORY[0x24BE58748]();
}

uint64_t sub_23FB2E480()
{
  return MEMORY[0x24BE58770]();
}

uint64_t sub_23FB2E48C()
{
  return MEMORY[0x24BE58788]();
}

uint64_t sub_23FB2E498()
{
  return MEMORY[0x24BE58798]();
}

uint64_t sub_23FB2E4A4()
{
  return MEMORY[0x24BE587A0]();
}

uint64_t sub_23FB2E4B0()
{
  return MEMORY[0x24BE587B8]();
}

uint64_t sub_23FB2E4BC()
{
  return MEMORY[0x24BE587C8]();
}

uint64_t sub_23FB2E4C8()
{
  return MEMORY[0x24BE587D8]();
}

uint64_t sub_23FB2E4D4()
{
  return MEMORY[0x24BE587E0]();
}

uint64_t sub_23FB2E4E0()
{
  return MEMORY[0x24BE587E8]();
}

uint64_t sub_23FB2E4EC()
{
  return MEMORY[0x24BE587F8]();
}

uint64_t sub_23FB2E4F8()
{
  return MEMORY[0x24BE58808]();
}

uint64_t sub_23FB2E504()
{
  return MEMORY[0x24BE58810]();
}

uint64_t sub_23FB2E510()
{
  return MEMORY[0x24BE58818]();
}

uint64_t sub_23FB2E51C()
{
  return MEMORY[0x24BE597A0]();
}

uint64_t sub_23FB2E528()
{
  return MEMORY[0x24BE597B0]();
}

uint64_t sub_23FB2E534()
{
  return MEMORY[0x24BE597B8]();
}

uint64_t sub_23FB2E540()
{
  return MEMORY[0x24BE597C0]();
}

uint64_t sub_23FB2E54C()
{
  return MEMORY[0x24BE59830]();
}

uint64_t sub_23FB2E558()
{
  return MEMORY[0x24BE598B0]();
}

uint64_t sub_23FB2E564()
{
  return MEMORY[0x24BE598B8]();
}

uint64_t sub_23FB2E570()
{
  return MEMORY[0x24BE598C0]();
}

uint64_t sub_23FB2E57C()
{
  return MEMORY[0x24BE598C8]();
}

uint64_t sub_23FB2E588()
{
  return MEMORY[0x24BE598D8]();
}

uint64_t sub_23FB2E594()
{
  return MEMORY[0x24BE598E0]();
}

uint64_t sub_23FB2E5A0()
{
  return MEMORY[0x24BE598E8]();
}

uint64_t sub_23FB2E5AC()
{
  return MEMORY[0x24BE598F0]();
}

uint64_t sub_23FB2E5B8()
{
  return MEMORY[0x24BE59910]();
}

uint64_t sub_23FB2E5C4()
{
  return MEMORY[0x24BE59928]();
}

uint64_t sub_23FB2E5D0()
{
  return MEMORY[0x24BE59938]();
}

uint64_t sub_23FB2E5DC()
{
  return MEMORY[0x24BE59940]();
}

uint64_t sub_23FB2E5E8()
{
  return MEMORY[0x24BE59948]();
}

uint64_t sub_23FB2E5F4()
{
  return MEMORY[0x24BE59958]();
}

uint64_t sub_23FB2E600()
{
  return MEMORY[0x24BE59960]();
}

uint64_t sub_23FB2E60C()
{
  return MEMORY[0x24BE59968]();
}

uint64_t sub_23FB2E618()
{
  return MEMORY[0x24BE59978]();
}

uint64_t sub_23FB2E624()
{
  return MEMORY[0x24BE59988]();
}

uint64_t sub_23FB2E630()
{
  return MEMORY[0x24BE59990]();
}

uint64_t sub_23FB2E63C()
{
  return MEMORY[0x24BE59998]();
}

uint64_t sub_23FB2E648()
{
  return MEMORY[0x24BE599A8]();
}

uint64_t sub_23FB2E654()
{
  return MEMORY[0x24BE599B0]();
}

uint64_t sub_23FB2E660()
{
  return MEMORY[0x24BE599B8]();
}

uint64_t sub_23FB2E66C()
{
  return MEMORY[0x24BE599C0]();
}

uint64_t sub_23FB2E678()
{
  return MEMORY[0x24BE599C8]();
}

uint64_t sub_23FB2E684()
{
  return MEMORY[0x24BE599D0]();
}

uint64_t sub_23FB2E690()
{
  return MEMORY[0x24BE599D8]();
}

uint64_t sub_23FB2E69C()
{
  return MEMORY[0x24BE599F8]();
}

uint64_t sub_23FB2E6A8()
{
  return MEMORY[0x24BE59A18]();
}

uint64_t sub_23FB2E6B4()
{
  return MEMORY[0x24BE59A28]();
}

uint64_t sub_23FB2E6C0()
{
  return MEMORY[0x24BE59A30]();
}

uint64_t sub_23FB2E6CC()
{
  return MEMORY[0x24BE59A38]();
}

uint64_t sub_23FB2E6D8()
{
  return MEMORY[0x24BE59A48]();
}

uint64_t sub_23FB2E6E4()
{
  return MEMORY[0x24BE59A58]();
}

uint64_t sub_23FB2E6F0()
{
  return MEMORY[0x24BE59A60]();
}

uint64_t sub_23FB2E6FC()
{
  return MEMORY[0x24BE59A68]();
}

uint64_t sub_23FB2E708()
{
  return MEMORY[0x24BE59A70]();
}

uint64_t sub_23FB2E714()
{
  return MEMORY[0x24BE59A88]();
}

uint64_t sub_23FB2E720()
{
  return MEMORY[0x24BE59C10]();
}

uint64_t sub_23FB2E72C()
{
  return MEMORY[0x24BE59C38]();
}

uint64_t sub_23FB2E738()
{
  return MEMORY[0x24BE59C80]();
}

uint64_t sub_23FB2E744()
{
  return MEMORY[0x24BE5B1B8]();
}

uint64_t sub_23FB2E750()
{
  return MEMORY[0x24BE5B1C8]();
}

uint64_t sub_23FB2E75C()
{
  return MEMORY[0x24BEE7718]();
}

uint64_t sub_23FB2E768()
{
  return MEMORY[0x24BEE7738]();
}

uint64_t sub_23FB2E774()
{
  return MEMORY[0x24BEE7758]();
}

uint64_t sub_23FB2E780()
{
  return MEMORY[0x24BEE7790]();
}

uint64_t sub_23FB2E78C()
{
  return MEMORY[0x24BEE77C0]();
}

uint64_t sub_23FB2E798()
{
  return MEMORY[0x24BEE77F0]();
}

uint64_t sub_23FB2E7A4()
{
  return MEMORY[0x24BEE7818]();
}

uint64_t sub_23FB2E7B0()
{
  return MEMORY[0x24BEE7848]();
}

uint64_t sub_23FB2E7BC()
{
  return MEMORY[0x24BEE7868]();
}

uint64_t sub_23FB2E7C8()
{
  return MEMORY[0x24BEE7870]();
}

uint64_t sub_23FB2E7D4()
{
  return MEMORY[0x24BEE78A0]();
}

uint64_t sub_23FB2E7E0()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_23FB2E7EC()
{
  return MEMORY[0x24BEE78C8]();
}

uint64_t sub_23FB2E7F8()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_23FB2E804()
{
  return MEMORY[0x24BEB8E28]();
}

uint64_t sub_23FB2E810()
{
  return MEMORY[0x24BEB8E58]();
}

uint64_t sub_23FB2E81C()
{
  return MEMORY[0x24BEB8ED8]();
}

uint64_t sub_23FB2E828()
{
  return MEMORY[0x24BEB8F28]();
}

uint64_t sub_23FB2E834()
{
  return MEMORY[0x24BEB8F30]();
}

uint64_t sub_23FB2E840()
{
  return MEMORY[0x24BEB8F40]();
}

uint64_t sub_23FB2E84C()
{
  return MEMORY[0x24BEB8F48]();
}

uint64_t sub_23FB2E858()
{
  return MEMORY[0x24BEB8F58]();
}

uint64_t sub_23FB2E864()
{
  return MEMORY[0x24BEB8F60]();
}

uint64_t sub_23FB2E870()
{
  return MEMORY[0x24BEB8F80]();
}

uint64_t sub_23FB2E87C()
{
  return MEMORY[0x24BEB8F88]();
}

uint64_t sub_23FB2E888()
{
  return MEMORY[0x24BEB8F98]();
}

uint64_t sub_23FB2E894()
{
  return MEMORY[0x24BEB8FA0]();
}

uint64_t sub_23FB2E8A0()
{
  return MEMORY[0x24BEB8FB0]();
}

uint64_t sub_23FB2E8AC()
{
  return MEMORY[0x24BEB8FB8]();
}

uint64_t sub_23FB2E8B8()
{
  return MEMORY[0x24BEB8FC8]();
}

uint64_t sub_23FB2E8C4()
{
  return MEMORY[0x24BEB8FD0]();
}

uint64_t sub_23FB2E8D0()
{
  return MEMORY[0x24BEB8FE0]();
}

uint64_t sub_23FB2E8DC()
{
  return MEMORY[0x24BEB9028]();
}

uint64_t sub_23FB2E8E8()
{
  return MEMORY[0x24BEB9030]();
}

uint64_t sub_23FB2E8F4()
{
  return MEMORY[0x24BEB91D0]();
}

uint64_t sub_23FB2E900()
{
  return MEMORY[0x24BEB91D8]();
}

uint64_t sub_23FB2E90C()
{
  return MEMORY[0x24BEB91E0]();
}

uint64_t sub_23FB2E918()
{
  return MEMORY[0x24BEB91E8]();
}

uint64_t sub_23FB2E924()
{
  return MEMORY[0x24BEB91F0]();
}

uint64_t sub_23FB2E930()
{
  return MEMORY[0x24BEB9200]();
}

uint64_t sub_23FB2E93C()
{
  return MEMORY[0x24BEB9260]();
}

uint64_t sub_23FB2E948()
{
  return MEMORY[0x24BEB9268]();
}

uint64_t sub_23FB2E954()
{
  return MEMORY[0x24BEB9278]();
}

uint64_t sub_23FB2E960()
{
  return MEMORY[0x24BEB9280]();
}

uint64_t sub_23FB2E96C()
{
  return MEMORY[0x24BEB9290]();
}

uint64_t sub_23FB2E978()
{
  return MEMORY[0x24BEB92A0]();
}

uint64_t sub_23FB2E984()
{
  return MEMORY[0x24BEB92B0]();
}

uint64_t sub_23FB2E990()
{
  return MEMORY[0x24BEB92C0]();
}

uint64_t sub_23FB2E99C()
{
  return MEMORY[0x24BEB92D0]();
}

uint64_t sub_23FB2E9A8()
{
  return MEMORY[0x24BEB92E0]();
}

uint64_t sub_23FB2E9B4()
{
  return MEMORY[0x24BEB92F0]();
}

uint64_t sub_23FB2E9C0()
{
  return MEMORY[0x24BEB9300]();
}

uint64_t sub_23FB2E9CC()
{
  return MEMORY[0x24BEB9310]();
}

uint64_t sub_23FB2E9D8()
{
  return MEMORY[0x24BEB93D8]();
}

uint64_t sub_23FB2E9E4()
{
  return MEMORY[0x24BEB9468]();
}

uint64_t sub_23FB2E9F0()
{
  return MEMORY[0x24BEB9470]();
}

uint64_t sub_23FB2E9FC()
{
  return MEMORY[0x24BEB9478]();
}

uint64_t sub_23FB2EA08()
{
  return MEMORY[0x24BEB9490]();
}

uint64_t sub_23FB2EA14()
{
  return MEMORY[0x24BEB9498]();
}

uint64_t sub_23FB2EA20()
{
  return MEMORY[0x24BEB94A0]();
}

uint64_t sub_23FB2EA2C()
{
  return MEMORY[0x24BEB94A8]();
}

uint64_t sub_23FB2EA38()
{
  return MEMORY[0x24BEB94B0]();
}

uint64_t sub_23FB2EA44()
{
  return MEMORY[0x24BEB94B8]();
}

uint64_t sub_23FB2EA50()
{
  return MEMORY[0x24BEB94C8]();
}

uint64_t sub_23FB2EA5C()
{
  return MEMORY[0x24BEB94D0]();
}

uint64_t sub_23FB2EA68()
{
  return MEMORY[0x24BEB94E0]();
}

uint64_t sub_23FB2EA74()
{
  return MEMORY[0x24BEB94E8]();
}

uint64_t sub_23FB2EA80()
{
  return MEMORY[0x24BEB94F8]();
}

uint64_t sub_23FB2EA8C()
{
  return MEMORY[0x24BEB9500]();
}

uint64_t sub_23FB2EA98()
{
  return MEMORY[0x24BEB9550]();
}

uint64_t sub_23FB2EAA4()
{
  return MEMORY[0x24BEB9558]();
}

uint64_t sub_23FB2EAB0()
{
  return MEMORY[0x24BEB9560]();
}

uint64_t sub_23FB2EABC()
{
  return MEMORY[0x24BEB9568]();
}

uint64_t sub_23FB2EAC8()
{
  return MEMORY[0x24BEB9570]();
}

uint64_t sub_23FB2EAD4()
{
  return MEMORY[0x24BEB9578]();
}

uint64_t sub_23FB2EAE0()
{
  return MEMORY[0x24BEB9580]();
}

uint64_t sub_23FB2EAEC()
{
  return MEMORY[0x24BEB9588]();
}

uint64_t sub_23FB2EAF8()
{
  return MEMORY[0x24BEB9590]();
}

uint64_t sub_23FB2EB04()
{
  return MEMORY[0x24BEB9598]();
}

uint64_t sub_23FB2EB10()
{
  return MEMORY[0x24BEB95A8]();
}

uint64_t sub_23FB2EB1C()
{
  return MEMORY[0x24BEB95B0]();
}

uint64_t sub_23FB2EB28()
{
  return MEMORY[0x24BEB95D8]();
}

uint64_t sub_23FB2EB34()
{
  return MEMORY[0x24BEB95F8]();
}

uint64_t sub_23FB2EB40()
{
  return MEMORY[0x24BEB9618]();
}

uint64_t sub_23FB2EB4C()
{
  return MEMORY[0x24BEB9648]();
}

uint64_t sub_23FB2EB58()
{
  return MEMORY[0x24BEB9660]();
}

uint64_t sub_23FB2EB64()
{
  return MEMORY[0x24BEB9668]();
}

uint64_t sub_23FB2EB70()
{
  return MEMORY[0x24BEB9678]();
}

uint64_t sub_23FB2EB7C()
{
  return MEMORY[0x24BEB9680]();
}

uint64_t sub_23FB2EB88()
{
  return MEMORY[0x24BEB9690]();
}

uint64_t sub_23FB2EB94()
{
  return MEMORY[0x24BEB9698]();
}

uint64_t sub_23FB2EBA0()
{
  return MEMORY[0x24BEB96B0]();
}

uint64_t sub_23FB2EBAC()
{
  return MEMORY[0x24BEB96D0]();
}

uint64_t sub_23FB2EBB8()
{
  return MEMORY[0x24BEB96D8]();
}

uint64_t sub_23FB2EBC4()
{
  return MEMORY[0x24BEB96E0]();
}

uint64_t sub_23FB2EBD0()
{
  return MEMORY[0x24BEB96F8]();
}

uint64_t sub_23FB2EBDC()
{
  return MEMORY[0x24BEB9700]();
}

uint64_t sub_23FB2EBE8()
{
  return MEMORY[0x24BEB9708]();
}

uint64_t sub_23FB2EBF4()
{
  return MEMORY[0x24BEB9710]();
}

uint64_t sub_23FB2EC00()
{
  return MEMORY[0x24BEB9728]();
}

uint64_t sub_23FB2EC0C()
{
  return MEMORY[0x24BEB9738]();
}

uint64_t sub_23FB2EC18()
{
  return MEMORY[0x24BEB9750]();
}

uint64_t sub_23FB2EC24()
{
  return MEMORY[0x24BEB9760]();
}

uint64_t sub_23FB2EC30()
{
  return MEMORY[0x24BEB97A0]();
}

uint64_t sub_23FB2EC3C()
{
  return MEMORY[0x24BEB97A8]();
}

uint64_t sub_23FB2EC48()
{
  return MEMORY[0x24BEB97B0]();
}

uint64_t sub_23FB2EC54()
{
  return MEMORY[0x24BEB97C0]();
}

uint64_t sub_23FB2EC60()
{
  return MEMORY[0x24BEB97D0]();
}

uint64_t sub_23FB2EC6C()
{
  return MEMORY[0x24BEB97D8]();
}

uint64_t sub_23FB2EC78()
{
  return MEMORY[0x24BEB97F0]();
}

uint64_t sub_23FB2EC84()
{
  return MEMORY[0x24BEB9850]();
}

uint64_t sub_23FB2EC90()
{
  return MEMORY[0x24BEB9858]();
}

uint64_t sub_23FB2EC9C()
{
  return MEMORY[0x24BEB9868]();
}

uint64_t sub_23FB2ECA8()
{
  return MEMORY[0x24BEB9888]();
}

uint64_t sub_23FB2ECB4()
{
  return MEMORY[0x24BEB9890]();
}

uint64_t sub_23FB2ECC0()
{
  return MEMORY[0x24BEB9898]();
}

uint64_t sub_23FB2ECCC()
{
  return MEMORY[0x24BEB98B0]();
}

uint64_t sub_23FB2ECD8()
{
  return MEMORY[0x24BEB98B8]();
}

uint64_t sub_23FB2ECE4()
{
  return MEMORY[0x24BEB9970]();
}

uint64_t sub_23FB2ECF0()
{
  return MEMORY[0x24BEB99A0]();
}

uint64_t sub_23FB2ECFC()
{
  return MEMORY[0x24BEB99A8]();
}

uint64_t sub_23FB2ED08()
{
  return MEMORY[0x24BEB99C0]();
}

uint64_t sub_23FB2ED14()
{
  return MEMORY[0x24BEB99D0]();
}

uint64_t sub_23FB2ED20()
{
  return MEMORY[0x24BEB99F0]();
}

uint64_t sub_23FB2ED2C()
{
  return MEMORY[0x24BEB99F8]();
}

uint64_t sub_23FB2ED38()
{
  return MEMORY[0x24BEB9A18]();
}

uint64_t sub_23FB2ED44()
{
  return MEMORY[0x24BEB9AA8]();
}

uint64_t sub_23FB2ED50()
{
  return MEMORY[0x24BEB9AB0]();
}

uint64_t sub_23FB2ED5C()
{
  return MEMORY[0x24BEB9AB8]();
}

uint64_t sub_23FB2ED68()
{
  return MEMORY[0x24BEB9B08]();
}

uint64_t sub_23FB2ED74()
{
  return MEMORY[0x24BEB9B58]();
}

uint64_t sub_23FB2ED80()
{
  return MEMORY[0x24BEB9B60]();
}

uint64_t sub_23FB2ED8C()
{
  return MEMORY[0x24BEB9B70]();
}

uint64_t sub_23FB2ED98()
{
  return MEMORY[0x24BEB9C30]();
}

uint64_t sub_23FB2EDA4()
{
  return MEMORY[0x24BEB9CD8]();
}

uint64_t sub_23FB2EDB0()
{
  return MEMORY[0x24BEB9CE8]();
}

uint64_t sub_23FB2EDBC()
{
  return MEMORY[0x24BEB9D08]();
}

uint64_t sub_23FB2EDC8()
{
  return MEMORY[0x24BEB9D10]();
}

uint64_t sub_23FB2EDD4()
{
  return MEMORY[0x24BEB9D20]();
}

uint64_t sub_23FB2EDE0()
{
  return MEMORY[0x24BE53FD8]();
}

uint64_t sub_23FB2EDEC()
{
  return MEMORY[0x24BE53FE0]();
}

uint64_t sub_23FB2EDF8()
{
  return MEMORY[0x24BEB9E18]();
}

uint64_t sub_23FB2EE04()
{
  return MEMORY[0x24BEBA270]();
}

uint64_t sub_23FB2EE10()
{
  return MEMORY[0x24BEBA288]();
}

uint64_t sub_23FB2EE1C()
{
  return MEMORY[0x24BEBA2A0]();
}

uint64_t sub_23FB2EE28()
{
  return MEMORY[0x24BEBA2B0]();
}

uint64_t sub_23FB2EE34()
{
  return MEMORY[0x24BEBA2B8]();
}

uint64_t sub_23FB2EE40()
{
  return MEMORY[0x24BEBA2D0]();
}

uint64_t sub_23FB2EE4C()
{
  return MEMORY[0x24BEBA2E0]();
}

uint64_t sub_23FB2EE58()
{
  return MEMORY[0x24BEBA2E8]();
}

uint64_t sub_23FB2EE64()
{
  return MEMORY[0x24BEBA2F0]();
}

uint64_t sub_23FB2EE70()
{
  return MEMORY[0x24BEBA350]();
}

uint64_t sub_23FB2EE7C()
{
  return MEMORY[0x24BEBA368]();
}

uint64_t sub_23FB2EE88()
{
  return MEMORY[0x24BEBA4B0]();
}

uint64_t sub_23FB2EE94()
{
  return MEMORY[0x24BEBA518]();
}

uint64_t sub_23FB2EEA0()
{
  return MEMORY[0x24BEBA520]();
}

uint64_t sub_23FB2EEAC()
{
  return MEMORY[0x24BEBA528]();
}

uint64_t sub_23FB2EEB8()
{
  return MEMORY[0x24BEBA538]();
}

uint64_t sub_23FB2EEC4()
{
  return MEMORY[0x24BEBA540]();
}

uint64_t sub_23FB2EED0()
{
  return MEMORY[0x24BEBA548]();
}

uint64_t sub_23FB2EEDC()
{
  return MEMORY[0x24BEBA550]();
}

uint64_t sub_23FB2EEE8()
{
  return MEMORY[0x24BEBA558]();
}

uint64_t sub_23FB2EEF4()
{
  return MEMORY[0x24BEBA560]();
}

uint64_t sub_23FB2EF00()
{
  return MEMORY[0x24BEBA568]();
}

uint64_t sub_23FB2EF0C()
{
  return MEMORY[0x24BEBA5B0]();
}

uint64_t sub_23FB2EF18()
{
  return MEMORY[0x24BEBA5B8]();
}

uint64_t sub_23FB2EF24()
{
  return MEMORY[0x24BEBA5C0]();
}

uint64_t sub_23FB2EF30()
{
  return MEMORY[0x24BEBA5C8]();
}

uint64_t sub_23FB2EF3C()
{
  return MEMORY[0x24BEBA5D0]();
}

uint64_t sub_23FB2EF48()
{
  return MEMORY[0x24BEBA5D8]();
}

uint64_t sub_23FB2EF54()
{
  return MEMORY[0x24BEBA5E0]();
}

uint64_t sub_23FB2EF60()
{
  return MEMORY[0x24BEBA660]();
}

uint64_t sub_23FB2EF6C()
{
  return MEMORY[0x24BEBA670]();
}

uint64_t sub_23FB2EF78()
{
  return MEMORY[0x24BEBA6A8]();
}

uint64_t sub_23FB2EF84()
{
  return MEMORY[0x24BEBA6B8]();
}

uint64_t sub_23FB2EF90()
{
  return MEMORY[0x24BEBA6C0]();
}

uint64_t sub_23FB2EF9C()
{
  return MEMORY[0x24BEBA6D0]();
}

uint64_t sub_23FB2EFA8()
{
  return MEMORY[0x24BDC62A8]();
}

uint64_t sub_23FB2EFB4()
{
  return MEMORY[0x24BDC62B0]();
}

uint64_t sub_23FB2EFC0()
{
  return MEMORY[0x24BDC62C8]();
}

uint64_t sub_23FB2EFCC()
{
  return MEMORY[0x24BDC62E0]();
}

uint64_t sub_23FB2EFD8()
{
  return MEMORY[0x24BDC62F0]();
}

uint64_t sub_23FB2EFE4()
{
  return MEMORY[0x24BDC6AD0]();
}

uint64_t sub_23FB2EFF0()
{
  return MEMORY[0x24BDC6AD8]();
}

uint64_t sub_23FB2EFFC()
{
  return MEMORY[0x24BDC6AF0]();
}

uint64_t sub_23FB2F008()
{
  return MEMORY[0x24BDC6AF8]();
}

uint64_t sub_23FB2F014()
{
  return MEMORY[0x24BDC6B58]();
}

uint64_t sub_23FB2F020()
{
  return MEMORY[0x24BDC6B90]();
}

uint64_t sub_23FB2F02C()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_23FB2F038()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_23FB2F044()
{
  return MEMORY[0x24BEE0270]();
}

uint64_t sub_23FB2F050()
{
  return MEMORY[0x24BEE02B0]();
}

uint64_t sub_23FB2F05C()
{
  return MEMORY[0x24BEE0450]();
}

uint64_t sub_23FB2F068()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_23FB2F074()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_23FB2F080()
{
  return MEMORY[0x24BEE0680]();
}

uint64_t sub_23FB2F08C()
{
  return MEMORY[0x24BEE06A0]();
}

uint64_t sub_23FB2F098()
{
  return MEMORY[0x24BEE06A8]();
}

uint64_t sub_23FB2F0A4()
{
  return MEMORY[0x24BEE06B0]();
}

uint64_t sub_23FB2F0B0()
{
  return MEMORY[0x24BEE06C8]();
}

uint64_t sub_23FB2F0BC()
{
  return MEMORY[0x24BEE06E8]();
}

uint64_t sub_23FB2F0C8()
{
  return MEMORY[0x24BEE06F0]();
}

uint64_t sub_23FB2F0D4()
{
  return MEMORY[0x24BEE06F8]();
}

uint64_t sub_23FB2F0E0()
{
  return MEMORY[0x24BEE75C8]();
}

uint64_t sub_23FB2F0EC()
{
  return MEMORY[0x24BEE0760]();
}

uint64_t sub_23FB2F0F8()
{
  return MEMORY[0x24BEE0780]();
}

uint64_t sub_23FB2F104()
{
  return MEMORY[0x24BEE07B0]();
}

uint64_t sub_23FB2F110()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_23FB2F11C()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_23FB2F128()
{
  return MEMORY[0x24BDCF870]();
}

uint64_t sub_23FB2F134()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_23FB2F140()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_23FB2F14C()
{
  return MEMORY[0x24BDCFA38]();
}

uint64_t sub_23FB2F158()
{
  return MEMORY[0x24BDCFA48]();
}

uint64_t sub_23FB2F164()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t sub_23FB2F170()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t sub_23FB2F17C()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_23FB2F188()
{
  return MEMORY[0x24BEE0A08]();
}

uint64_t sub_23FB2F194()
{
  return MEMORY[0x24BEE0A10]();
}

uint64_t sub_23FB2F1A0()
{
  return MEMORY[0x24BEE0A50]();
}

uint64_t sub_23FB2F1AC()
{
  return MEMORY[0x24BEE0A58]();
}

uint64_t sub_23FB2F1B8()
{
  return MEMORY[0x24BEE0A78]();
}

uint64_t sub_23FB2F1C4()
{
  return MEMORY[0x24BEE0A80]();
}

uint64_t sub_23FB2F1D0()
{
  return MEMORY[0x24BEE0A88]();
}

uint64_t sub_23FB2F1DC()
{
  return MEMORY[0x24BEE0AD0]();
}

uint64_t sub_23FB2F1E8()
{
  return MEMORY[0x24BEE0AD8]();
}

uint64_t sub_23FB2F1F4()
{
  return MEMORY[0x24BEE0B18]();
}

uint64_t sub_23FB2F200()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_23FB2F20C()
{
  return MEMORY[0x24BEE0B30]();
}

uint64_t sub_23FB2F218()
{
  return MEMORY[0x24BEE0B68]();
}

uint64_t sub_23FB2F224()
{
  return MEMORY[0x24BEE0B78]();
}

uint64_t sub_23FB2F230()
{
  return MEMORY[0x24BEE0B80]();
}

uint64_t sub_23FB2F23C()
{
  return MEMORY[0x24BEE0BB0]();
}

uint64_t sub_23FB2F248()
{
  return MEMORY[0x24BEE0BB8]();
}

uint64_t sub_23FB2F254()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_23FB2F260()
{
  return MEMORY[0x24BEE0BC8]();
}

uint64_t sub_23FB2F26C()
{
  return MEMORY[0x24BEE0BE0]();
}

uint64_t sub_23FB2F278()
{
  return MEMORY[0x24BEE0C00]();
}

uint64_t sub_23FB2F284()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_23FB2F290()
{
  return MEMORY[0x24BEE0C18]();
}

uint64_t sub_23FB2F29C()
{
  return MEMORY[0x24BEE0C30]();
}

uint64_t sub_23FB2F2A8()
{
  return MEMORY[0x24BEE0C38]();
}

uint64_t sub_23FB2F2B4()
{
  return MEMORY[0x24BEE0C40]();
}

uint64_t sub_23FB2F2C0()
{
  return MEMORY[0x24BEE0CA0]();
}

uint64_t sub_23FB2F2CC()
{
  return MEMORY[0x24BEE0CE8]();
}

uint64_t sub_23FB2F2D8()
{
  return MEMORY[0x24BEE0DC8]();
}

uint64_t sub_23FB2F2E4()
{
  return MEMORY[0x24BEE0DD0]();
}

uint64_t sub_23FB2F2F0()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_23FB2F2FC()
{
  return MEMORY[0x24BDCFB60]();
}

uint64_t sub_23FB2F308()
{
  return MEMORY[0x24BEE0DE8]();
}

uint64_t sub_23FB2F314()
{
  return MEMORY[0x24BEE0DF8]();
}

uint64_t sub_23FB2F320()
{
  return MEMORY[0x24BEE0E40]();
}

uint64_t sub_23FB2F32C()
{
  return MEMORY[0x24BEE0E90]();
}

uint64_t sub_23FB2F338()
{
  return MEMORY[0x24BEE0EB0]();
}

uint64_t sub_23FB2F344()
{
  return MEMORY[0x24BEE0EF0]();
}

uint64_t sub_23FB2F350()
{
  return MEMORY[0x24BEE0F08]();
}

uint64_t sub_23FB2F35C()
{
  return MEMORY[0x24BEE0F30]();
}

uint64_t sub_23FB2F368()
{
  return MEMORY[0x24BEE0F40]();
}

uint64_t sub_23FB2F374()
{
  return MEMORY[0x24BEE1000]();
}

uint64_t sub_23FB2F380()
{
  return MEMORY[0x24BEE1060]();
}

uint64_t sub_23FB2F38C()
{
  return MEMORY[0x24BEE1080]();
}

uint64_t sub_23FB2F398()
{
  return MEMORY[0x24BEE10E0]();
}

uint64_t sub_23FB2F3A4()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_23FB2F3B0()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_23FB2F3BC()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_23FB2F3C8()
{
  return MEMORY[0x24BEE1118]();
}

uint64_t sub_23FB2F3D4()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_23FB2F3E0()
{
  return MEMORY[0x24BEBFEB8]();
}

uint64_t sub_23FB2F3EC()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_23FB2F3F8()
{
  return MEMORY[0x24BEE1138]();
}

uint64_t sub_23FB2F404()
{
  return MEMORY[0x24BEE1140]();
}

uint64_t sub_23FB2F410()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_23FB2F41C()
{
  return MEMORY[0x24BEE1168]();
}

uint64_t sub_23FB2F428()
{
  return MEMORY[0x24BEE1180]();
}

uint64_t sub_23FB2F434()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_23FB2F440()
{
  return MEMORY[0x24BEE11A0]();
}

uint64_t sub_23FB2F44C()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_23FB2F458()
{
  return MEMORY[0x24BEE11F8]();
}

uint64_t sub_23FB2F464()
{
  return MEMORY[0x24BEE1208]();
}

uint64_t sub_23FB2F470()
{
  return MEMORY[0x24BEE1220]();
}

uint64_t sub_23FB2F47C()
{
  return MEMORY[0x24BEE1230]();
}

uint64_t sub_23FB2F488()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t sub_23FB2F494()
{
  return MEMORY[0x24BEE1288]();
}

uint64_t sub_23FB2F4A0()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_23FB2F4AC()
{
  return MEMORY[0x24BEE6820]();
}

uint64_t sub_23FB2F4B8()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_23FB2F4C4()
{
  return MEMORY[0x24BEE6830]();
}

uint64_t sub_23FB2F4D0()
{
  return MEMORY[0x24BEE6938]();
}

uint64_t sub_23FB2F4DC()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_23FB2F4E8()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_23FB2F4F4()
{
  return MEMORY[0x24BEE6AC0]();
}

uint64_t sub_23FB2F500()
{
  return MEMORY[0x24BEE6B98]();
}

uint64_t sub_23FB2F50C()
{
  return MEMORY[0x24BEE6BB8]();
}

uint64_t sub_23FB2F518()
{
  return MEMORY[0x24BEE1370]();
}

uint64_t sub_23FB2F524()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_23FB2F530()
{
  return MEMORY[0x24BEE16F8]();
}

uint64_t sub_23FB2F53C()
{
  return MEMORY[0x24BEE18A0]();
}

uint64_t sub_23FB2F548()
{
  return MEMORY[0x24BE53FE8]();
}

uint64_t sub_23FB2F554()
{
  return MEMORY[0x24BEE18D0]();
}

uint64_t sub_23FB2F560()
{
  return MEMORY[0x24BEE18F8]();
}

uint64_t sub_23FB2F56C()
{
  return MEMORY[0x24BEE1910]();
}

uint64_t sub_23FB2F578()
{
  return MEMORY[0x24BEE1918]();
}

uint64_t sub_23FB2F584()
{
  return MEMORY[0x24BEE1938]();
}

uint64_t sub_23FB2F590()
{
  return MEMORY[0x24BEE1978]();
}

uint64_t sub_23FB2F59C()
{
  return MEMORY[0x24BEE1980]();
}

uint64_t sub_23FB2F5A8()
{
  return MEMORY[0x24BEE19D0]();
}

uint64_t sub_23FB2F5B4()
{
  return MEMORY[0x24BEE19E8]();
}

uint64_t sub_23FB2F5C0()
{
  return MEMORY[0x24BEE1A28]();
}

uint64_t sub_23FB2F5CC()
{
  return MEMORY[0x24BEE5B30]();
}

uint64_t sub_23FB2F5D8()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_23FB2F5E4()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_23FB2F5F0()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_23FB2F5FC()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_23FB2F608()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_23FB2F614()
{
  return MEMORY[0x24BEE7940]();
}

uint64_t sub_23FB2F620()
{
  return MEMORY[0x24BEE7948]();
}

uint64_t sub_23FB2F62C()
{
  return MEMORY[0x24BDD01F8]();
}

uint64_t sub_23FB2F638()
{
  return MEMORY[0x24BEE7968]();
}

uint64_t sub_23FB2F644()
{
  return MEMORY[0x24BEE1C58]();
}

uint64_t sub_23FB2F650()
{
  return MEMORY[0x24BEE1C60]();
}

uint64_t sub_23FB2F65C()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_23FB2F668()
{
  return MEMORY[0x24BEE1E58]();
}

uint64_t sub_23FB2F674()
{
  return MEMORY[0x24BEE1E70]();
}

uint64_t sub_23FB2F680()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_23FB2F68C()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_23FB2F698()
{
  return MEMORY[0x24BDD04B8]();
}

uint64_t sub_23FB2F6A4()
{
  return MEMORY[0x24BDD04F0]();
}

uint64_t sub_23FB2F6B0()
{
  return MEMORY[0x24BDD0548]();
}

uint64_t sub_23FB2F6BC()
{
  return MEMORY[0x24BDD0568]();
}

uint64_t sub_23FB2F6C8()
{
  return MEMORY[0x24BDD0600]();
}

uint64_t sub_23FB2F6D4()
{
  return MEMORY[0x24BDD0608]();
}

uint64_t sub_23FB2F6E0()
{
  return MEMORY[0x24BDD0638]();
}

uint64_t sub_23FB2F6EC()
{
  return MEMORY[0x24BEE5E68]();
}

uint64_t sub_23FB2F6F8()
{
  return MEMORY[0x24BEE2090]();
}

uint64_t sub_23FB2F704()
{
  return MEMORY[0x24BEE2200]();
}

uint64_t sub_23FB2F710()
{
  return MEMORY[0x24BEE2210]();
}

uint64_t sub_23FB2F71C()
{
  return MEMORY[0x24BEE2270]();
}

uint64_t sub_23FB2F728()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_23FB2F734()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_23FB2F740()
{
  return MEMORY[0x24BEE22D8]();
}

uint64_t sub_23FB2F74C()
{
  return MEMORY[0x24BEE22E0]();
}

uint64_t sub_23FB2F758()
{
  return MEMORY[0x24BEE2378]();
}

uint64_t sub_23FB2F764()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_23FB2F770()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_23FB2F77C()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_23FB2F788()
{
  return MEMORY[0x24BEE24F0]();
}

uint64_t sub_23FB2F794()
{
  return MEMORY[0x24BEE2500]();
}

uint64_t sub_23FB2F7A0()
{
  return MEMORY[0x24BEE2508]();
}

uint64_t sub_23FB2F7AC()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_23FB2F7B8()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_23FB2F7C4()
{
  return MEMORY[0x24BEE2588]();
}

uint64_t sub_23FB2F7D0()
{
  return MEMORY[0x24BEE25B8]();
}

uint64_t sub_23FB2F7DC()
{
  return MEMORY[0x24BEE2648]();
}

uint64_t sub_23FB2F7E8()
{
  return MEMORY[0x24BEE2650]();
}

uint64_t sub_23FB2F7F4()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_23FB2F800()
{
  return MEMORY[0x24BEE2660]();
}

uint64_t sub_23FB2F80C()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_23FB2F818()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_23FB2F824()
{
  return MEMORY[0x24BEE2788]();
}

uint64_t sub_23FB2F830()
{
  return MEMORY[0x24BEE2798]();
}

uint64_t sub_23FB2F83C()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_23FB2F848()
{
  return MEMORY[0x24BEE2840]();
}

uint64_t sub_23FB2F854()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_23FB2F860()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_23FB2F86C()
{
  return MEMORY[0x24BEE2950]();
}

uint64_t sub_23FB2F878()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_23FB2F884()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_23FB2F890()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_23FB2F89C()
{
  return MEMORY[0x24BEE29C0]();
}

uint64_t sub_23FB2F8A8()
{
  return MEMORY[0x24BEE2A00]();
}

uint64_t sub_23FB2F8B4()
{
  return MEMORY[0x24BEE2A08]();
}

uint64_t sub_23FB2F8C0()
{
  return MEMORY[0x24BEE6DC8]();
}

uint64_t sub_23FB2F8CC()
{
  return MEMORY[0x24BEE6E08]();
}

uint64_t sub_23FB2F8D8()
{
  return MEMORY[0x24BEE6E10]();
}

uint64_t sub_23FB2F8E4()
{
  return MEMORY[0x24BEE2AE0]();
}

uint64_t sub_23FB2F8F0()
{
  return MEMORY[0x24BEE2B20]();
}

uint64_t sub_23FB2F8FC()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_23FB2F908()
{
  return MEMORY[0x24BEE2C38]();
}

uint64_t sub_23FB2F914()
{
  return MEMORY[0x24BEE2E58]();
}

uint64_t sub_23FB2F920()
{
  return MEMORY[0x24BEE2E68]();
}

uint64_t sub_23FB2F92C()
{
  return MEMORY[0x24BEE2E70]();
}

uint64_t sub_23FB2F938()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_23FB2F944()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_23FB2F950()
{
  return MEMORY[0x24BEE2FD8]();
}

uint64_t sub_23FB2F95C()
{
  return MEMORY[0x24BEE3028]();
}

uint64_t sub_23FB2F968()
{
  return MEMORY[0x24BEE3038]();
}

uint64_t sub_23FB2F974()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_23FB2F980()
{
  return MEMORY[0x24BEE3070]();
}

uint64_t sub_23FB2F98C()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_23FB2F998()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_23FB2F9A4()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_23FB2F9B0()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_23FB2F9BC()
{
  return MEMORY[0x24BEE3160]();
}

uint64_t sub_23FB2F9C8()
{
  return MEMORY[0x24BEE3178]();
}

uint64_t sub_23FB2F9D4()
{
  return MEMORY[0x24BEE3190]();
}

uint64_t sub_23FB2F9E0()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_23FB2F9EC()
{
  return MEMORY[0x24BEE6FA8]();
}

uint64_t sub_23FB2F9F8()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_23FB2FA04()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_23FB2FA10()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_23FB2FA1C()
{
  return MEMORY[0x24BEE32E0]();
}

uint64_t sub_23FB2FA28()
{
  return MEMORY[0x24BEE32F8]();
}

uint64_t sub_23FB2FA34()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_23FB2FA40()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_23FB2FA4C()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_23FB2FA58()
{
  return MEMORY[0x24BEE3360]();
}

uint64_t sub_23FB2FA64()
{
  return MEMORY[0x24BEE3368]();
}

uint64_t sub_23FB2FA70()
{
  return MEMORY[0x24BEE3370]();
}

uint64_t sub_23FB2FA7C()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_23FB2FA88()
{
  return MEMORY[0x24BEE33C0]();
}

uint64_t sub_23FB2FA94()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_23FB2FAA0()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_23FB2FAAC()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_23FB2FAB8()
{
  return MEMORY[0x24BEE3430]();
}

uint64_t sub_23FB2FAC4()
{
  return MEMORY[0x24BEE3448]();
}

uint64_t sub_23FB2FAD0()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_23FB2FADC()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_23FB2FAE8()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_23FB2FAF4()
{
  return MEMORY[0x24BEE34B0]();
}

uint64_t sub_23FB2FB00()
{
  return MEMORY[0x24BEE34B8]();
}

uint64_t sub_23FB2FB0C()
{
  return MEMORY[0x24BEE34C0]();
}

uint64_t sub_23FB2FB18()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_23FB2FB24()
{
  return MEMORY[0x24BEE3510]();
}

uint64_t sub_23FB2FB30()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_23FB2FB3C()
{
  return MEMORY[0x24BEE3550]();
}

uint64_t sub_23FB2FB48()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_23FB2FB54()
{
  return MEMORY[0x24BEE3598]();
}

uint64_t sub_23FB2FB60()
{
  return MEMORY[0x24BEE3880]();
}

uint64_t sub_23FB2FB6C()
{
  return MEMORY[0x24BEE3A28]();
}

uint64_t sub_23FB2FB78()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_23FB2FB84()
{
  return MEMORY[0x24BEE3A88]();
}

uint64_t sub_23FB2FB90()
{
  return MEMORY[0x24BEE3AF0]();
}

uint64_t sub_23FB2FB9C()
{
  return MEMORY[0x24BEE3B20]();
}

uint64_t sub_23FB2FBA8()
{
  return MEMORY[0x24BEE3B98]();
}

uint64_t sub_23FB2FBB4()
{
  return MEMORY[0x24BEE3D50]();
}

uint64_t sub_23FB2FBC0()
{
  return MEMORY[0x24BEE70E0]();
}

uint64_t sub_23FB2FBCC()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_23FB2FBD8()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_23FB2FBE4()
{
  return MEMORY[0x24BEE7110]();
}

uint64_t sub_23FB2FBF0()
{
  return MEMORY[0x24BEE7118]();
}

uint64_t sub_23FB2FBFC()
{
  return MEMORY[0x24BDD06E0]();
}

uint64_t sub_23FB2FC08()
{
  return MEMORY[0x24BDD06F0]();
}

uint64_t sub_23FB2FC14()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_23FB2FC20()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_23FB2FC2C()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_23FB2FC38()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_23FB2FC44()
{
  return MEMORY[0x24BEE42C8]();
}

uint64_t sub_23FB2FC50()
{
  return MEMORY[0x24BEE42D8]();
}

uint64_t sub_23FB2FC5C()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_23FB2FC68()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_23FB2FC74()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_23FB2FC80()
{
  return MEMORY[0x24BEE4318]();
}

uint64_t sub_23FB2FC8C()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_23FB2FC98()
{
  return MEMORY[0x24BEE4408]();
}

uint64_t sub_23FB2FCA4()
{
  return MEMORY[0x24BEE45F8]();
}

uint64_t sub_23FB2FCB0()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_23FB2FCBC()
{
  return MEMORY[0x24BEE4628]();
}

uint64_t sub_23FB2FCC8()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_23FB2FCD4()
{
  return MEMORY[0x24BEE4778]();
}

uint64_t sub_23FB2FCE0()
{
  return MEMORY[0x24BEE47C0]();
}

uint64_t sub_23FB2FCEC()
{
  return MEMORY[0x24BEE47D0]();
}

uint64_t sub_23FB2FCF8()
{
  return MEMORY[0x24BEE47E0]();
}

uint64_t sub_23FB2FD04()
{
  return MEMORY[0x24BEE4860]();
}

uint64_t sub_23FB2FD10()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_23FB2FD1C()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t sub_23FB2FD28()
{
  return MEMORY[0x24BEE4A18]();
}

uint64_t sub_23FB2FD34()
{
  return MEMORY[0x24BEE7160]();
}

uint64_t sub_23FB2FD40()
{
  return MEMORY[0x24BEE7168]();
}

uint64_t sub_23FB2FD4C()
{
  return MEMORY[0x24BEE4A98]();
}

uint64_t _objc_autoreleasePoolPop()
{
  return MEMORY[0x24BEDCE10]();
}

uint64_t _objc_autoreleasePoolPush()
{
  return MEMORY[0x24BEDCE18]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACC10](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return MEMORY[0x24BEE4B48]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

__uint64_t clock_gettime_nsec_np(clockid_t __clock_id)
{
  return MEMORY[0x24BDAD9C0](*(_QWORD *)&__clock_id);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

uint64_t mach_absolute_time(void)
{
  return MEMORY[0x24BDAEB30]();
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocEmptyBox()
{
  return MEMORY[0x24BEE4B60]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_deallocBox()
{
  return MEMORY[0x24BEE4BF8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_deallocUninitializedObject()
{
  return MEMORY[0x24BEE4C20]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x24BEE71E0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x24BEE71E8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x24BEE71F0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x24BEE4C40]();
}

uint64_t swift_dynamicCastClassUnconditional()
{
  return MEMORY[0x24BEE4C48]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x24BEE4DE0]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x24BEE4DE8]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x24BEE4E00]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return MEMORY[0x24BEE4E38]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x24BEE4E40]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x24BEE4E60]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x24BEE4E90]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x24BEE4ED0]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x24BEE4F48]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x24BEE4F68]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x24BEE4FB0]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

int sysctlbyname(const char *a1, void *a2, size_t *a3, void *a4, size_t a5)
{
  return MEMORY[0x24BDB0100](a1, a2, a3, a4, a5);
}

