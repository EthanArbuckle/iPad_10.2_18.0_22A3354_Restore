uint64_t sub_23F879F34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB04F0);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB04F0);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F190;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "notSet";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "prescribedPlanGenerator";
  *(_QWORD *)(v11 + 8) = 23;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "dummyPlanner";
  *((_QWORD *)v13 + 1) = 12;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "planOverride";
  *((_QWORD *)v15 + 1) = 12;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "fullPlanner";
  *((_QWORD *)v17 + 1) = 11;
  v17[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoPlanSource._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0AE8, (uint64_t)qword_256EB04F0, a1);
}

uint64_t sub_23F87A14C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0508);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0508);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB89950;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "QueryOperator_UNKNOWN";
  *(_QWORD *)(v7 + 8) = 21;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "QueryOperator_EQUALTO";
  *(_QWORD *)(v11 + 8) = 21;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "QueryOperator_NOTEQUALTO";
  *((_QWORD *)v13 + 1) = 24;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "QueryOperator_GREATERTHAN_OP";
  *((_QWORD *)v15 + 1) = 28;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "QueryOperator_GREATERTHANOREQUALTO";
  *((_QWORD *)v17 + 1) = 34;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "QueryOperator_LESSTHAN_OP";
  *((_QWORD *)v19 + 1) = 25;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "QueryOperator_LESSTHANOREQUALTO";
  *((_QWORD *)v21 + 1) = 31;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 7;
  *(_QWORD *)v23 = "QueryOperator_CONTAINS";
  *((_QWORD *)v23 + 1) = 22;
  v23[16] = 2;
  v10();
  v24 = (_QWORD *)(v6 + 8 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 8;
  *(_QWORD *)v25 = "QueryOperator_HASPREFIX";
  *((_QWORD *)v25 + 1) = 23;
  v25[16] = 2;
  v10();
  v26 = (_QWORD *)(v6 + 9 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 9;
  *(_QWORD *)v27 = "QueryOperator_HASSUFFIX";
  *((_QWORD *)v27 + 1) = 23;
  v27[16] = 2;
  v10();
  v28 = (_QWORD *)(v6 + 10 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 10;
  *(_QWORD *)v29 = "QueryOperator_ISBETWEEN";
  *((_QWORD *)v29 + 1) = 23;
  v29[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoQueryOperator._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0AF0, (uint64_t)qword_256EB0508, a1);
}

uint64_t sub_23F87A4AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0520);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0520);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "Completion";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "Disambiguation";
  *((_QWORD *)v11 + 1) = 14;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "Confirmation";
  *((_QWORD *)v13 + 1) = 12;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoResponseType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0AF8, (uint64_t)qword_256EB0520, a1);
}

uint64_t sub_23F87A65C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0538);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0538);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "NONE";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "SUPPRESS_PRINT";
  *((_QWORD *)v11 + 1) = 14;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoResponseDialogPresentationHint._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0B00, (uint64_t)qword_256EB0538, a1);
}

uint64_t sub_23F87A7D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0550);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0550);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "ASTUpdateKind_APPEND";
  *(_QWORD *)(v7 + 8) = 20;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "ASTUpdateKind_REPLACE";
  *((_QWORD *)v11 + 1) = 21;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoASTUpdateKind._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0B08, (uint64_t)qword_256EB0550, a1);
}

uint64_t sub_23F87A954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0568);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0568);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "plus";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "minus";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "not";
  *((_QWORD *)v13 + 1) = 3;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoPrefixExpression_PrefixOp._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0B10, (uint64_t)qword_256EB0568, a1);
}

uint64_t sub_23F87AB04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);
  unint64_t v9;
  _QWORD *v10;
  char *v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  _QWORD *v38;
  char *v39;
  _QWORD *v40;
  char *v41;
  _QWORD *v42;
  char *v43;
  uint64_t v45;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0580);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0580);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_23FB89960;
  v5 = v45 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v45 + v4) = 0;
  *(_QWORD *)v5 = "assign";
  *(_QWORD *)(v5 + 8) = 6;
  *(_BYTE *)(v5 + 16) = 2;
  v6 = *MEMORY[0x24BE5C318];
  v7 = sub_23FB2D9DC();
  v8 = *(void (**)(void))(*(_QWORD *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  v9 = v45 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v45 + v4 + v3) = 1;
  *(_QWORD *)v9 = "add";
  *(_QWORD *)(v9 + 8) = 3;
  *(_BYTE *)(v9 + 16) = 2;
  v8();
  v10 = (_QWORD *)(v45 + v4 + 2 * v3);
  v11 = (char *)v10 + *(int *)(v1 + 48);
  *v10 = 2;
  *(_QWORD *)v11 = "addAssign";
  *((_QWORD *)v11 + 1) = 9;
  v11[16] = 2;
  v8();
  v12 = (_QWORD *)(v45 + v4 + 3 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "subtract";
  *((_QWORD *)v13 + 1) = 8;
  v13[16] = 2;
  v8();
  v14 = (_QWORD *)(v45 + v4 + 4 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "subtractAssign";
  *((_QWORD *)v15 + 1) = 14;
  v15[16] = 2;
  v8();
  v16 = (_QWORD *)(v45 + v4 + 5 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "divide";
  *((_QWORD *)v17 + 1) = 6;
  v17[16] = 2;
  v8();
  v18 = (_QWORD *)(v45 + v4 + 6 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "divideAssign";
  *((_QWORD *)v19 + 1) = 12;
  v19[16] = 2;
  v8();
  v20 = (_QWORD *)(v45 + v4 + 7 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "multiply";
  *((_QWORD *)v21 + 1) = 8;
  v21[16] = 2;
  v8();
  v22 = (_QWORD *)(v45 + v4 + 8 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "multiplyAssign";
  *((_QWORD *)v23 + 1) = 14;
  v23[16] = 2;
  v8();
  v24 = (_QWORD *)(v45 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 9;
  *(_QWORD *)v25 = "exponent";
  *((_QWORD *)v25 + 1) = 8;
  v25[16] = 2;
  v8();
  v26 = (_QWORD *)(v45 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 10;
  *(_QWORD *)v27 = "equal";
  *((_QWORD *)v27 + 1) = 5;
  v27[16] = 2;
  v8();
  v28 = (_QWORD *)(v45 + v4 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 11;
  *(_QWORD *)v29 = "notEqual";
  *((_QWORD *)v29 + 1) = 8;
  v29[16] = 2;
  v8();
  v30 = (_QWORD *)(v45 + v4 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 12;
  *(_QWORD *)v31 = "in";
  *((_QWORD *)v31 + 1) = 2;
  v31[16] = 2;
  v8();
  v32 = (_QWORD *)(v45 + v4 + 13 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 13;
  *(_QWORD *)v33 = "greaterThanEqual";
  *((_QWORD *)v33 + 1) = 16;
  v33[16] = 2;
  v8();
  v34 = (_QWORD *)(v45 + v4 + 14 * v3);
  v35 = (char *)v34 + *(int *)(v1 + 48);
  *v34 = 14;
  *(_QWORD *)v35 = "greaterThan";
  *((_QWORD *)v35 + 1) = 11;
  v35[16] = 2;
  v8();
  v36 = (_QWORD *)(v45 + v4 + 15 * v3);
  v37 = (char *)v36 + *(int *)(v1 + 48);
  *v36 = 15;
  *(_QWORD *)v37 = "lessThanEqual";
  *((_QWORD *)v37 + 1) = 13;
  v37[16] = 2;
  v8();
  v38 = (_QWORD *)(v45 + v4 + 16 * v3);
  v39 = (char *)v38 + *(int *)(v1 + 48);
  *v38 = 16;
  *(_QWORD *)v39 = "lessThan";
  *((_QWORD *)v39 + 1) = 8;
  v39[16] = 2;
  v8();
  v40 = (_QWORD *)(v45 + v4 + 17 * v3);
  v41 = (char *)v40 + *(int *)(v1 + 48);
  *v40 = 17;
  *(_QWORD *)v41 = "and";
  *((_QWORD *)v41 + 1) = 3;
  v41[16] = 2;
  v8();
  v42 = (_QWORD *)(v45 + v4 + 18 * v3);
  v43 = (char *)v42 + *(int *)(v1 + 48);
  *v42 = 18;
  *(_QWORD *)v43 = "or";
  *((_QWORD *)v43 + 1) = 2;
  v43[16] = 2;
  v8();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoInfixExpression_InfixOp._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0B18, (uint64_t)qword_256EB0580, a1);
}

uint64_t sub_23F87AFF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);
  unint64_t v9;
  _QWORD *v10;
  char *v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  _QWORD *v38;
  char *v39;
  _QWORD *v40;
  char *v41;
  _QWORD *v42;
  char *v43;
  uint64_t v45;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0598);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0598);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_23FB89960;
  v5 = v45 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v45 + v4) = 0;
  *(_QWORD *)v5 = "ASTInfixOp_ASSIGN";
  *(_QWORD *)(v5 + 8) = 17;
  *(_BYTE *)(v5 + 16) = 2;
  v6 = *MEMORY[0x24BE5C318];
  v7 = sub_23FB2D9DC();
  v8 = *(void (**)(void))(*(_QWORD *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  v9 = v45 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v45 + v4 + v3) = 1;
  *(_QWORD *)v9 = "ASTInfixOp_ADD";
  *(_QWORD *)(v9 + 8) = 14;
  *(_BYTE *)(v9 + 16) = 2;
  v8();
  v10 = (_QWORD *)(v45 + v4 + 2 * v3);
  v11 = (char *)v10 + *(int *)(v1 + 48);
  *v10 = 2;
  *(_QWORD *)v11 = "ASTInfixOp_ADDASSIGN";
  *((_QWORD *)v11 + 1) = 20;
  v11[16] = 2;
  v8();
  v12 = (_QWORD *)(v45 + v4 + 3 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "ASTInfixOp_SUBTRACT";
  *((_QWORD *)v13 + 1) = 19;
  v13[16] = 2;
  v8();
  v14 = (_QWORD *)(v45 + v4 + 4 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "ASTInfixOp_SUBTRACTASSIGN";
  *((_QWORD *)v15 + 1) = 25;
  v15[16] = 2;
  v8();
  v16 = (_QWORD *)(v45 + v4 + 5 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "ASTInfixOp_DIVIDE";
  *((_QWORD *)v17 + 1) = 17;
  v17[16] = 2;
  v8();
  v18 = (_QWORD *)(v45 + v4 + 6 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "ASTInfixOp_DIVIDEASSIGN";
  *((_QWORD *)v19 + 1) = 23;
  v19[16] = 2;
  v8();
  v20 = (_QWORD *)(v45 + v4 + 7 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "ASTInfixOp_MULTIPLY";
  *((_QWORD *)v21 + 1) = 19;
  v21[16] = 2;
  v8();
  v22 = (_QWORD *)(v45 + v4 + 8 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "ASTInfixOp_MULTIPLYASSIGN";
  *((_QWORD *)v23 + 1) = 25;
  v23[16] = 2;
  v8();
  v24 = (_QWORD *)(v45 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 9;
  *(_QWORD *)v25 = "ASTInfixOp_EXPONENT";
  *((_QWORD *)v25 + 1) = 19;
  v25[16] = 2;
  v8();
  v26 = (_QWORD *)(v45 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 10;
  *(_QWORD *)v27 = "ASTInfixOp_EQUAL";
  *((_QWORD *)v27 + 1) = 16;
  v27[16] = 2;
  v8();
  v28 = (_QWORD *)(v45 + v4 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 11;
  *(_QWORD *)v29 = "ASTInfixOp_NOTEQUAL";
  *((_QWORD *)v29 + 1) = 19;
  v29[16] = 2;
  v8();
  v30 = (_QWORD *)(v45 + v4 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 12;
  *(_QWORD *)v31 = "ASTInfixOp_IN";
  *((_QWORD *)v31 + 1) = 13;
  v31[16] = 2;
  v8();
  v32 = (_QWORD *)(v45 + v4 + 13 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 13;
  *(_QWORD *)v33 = "ASTInfixOp_GREATERTHANEQUAL";
  *((_QWORD *)v33 + 1) = 27;
  v33[16] = 2;
  v8();
  v34 = (_QWORD *)(v45 + v4 + 14 * v3);
  v35 = (char *)v34 + *(int *)(v1 + 48);
  *v34 = 14;
  *(_QWORD *)v35 = "ASTInfixOp_GREATERTHAN";
  *((_QWORD *)v35 + 1) = 22;
  v35[16] = 2;
  v8();
  v36 = (_QWORD *)(v45 + v4 + 15 * v3);
  v37 = (char *)v36 + *(int *)(v1 + 48);
  *v36 = 15;
  *(_QWORD *)v37 = "ASTInfixOp_LESSTHANEQUAL";
  *((_QWORD *)v37 + 1) = 24;
  v37[16] = 2;
  v8();
  v38 = (_QWORD *)(v45 + v4 + 16 * v3);
  v39 = (char *)v38 + *(int *)(v1 + 48);
  *v38 = 16;
  *(_QWORD *)v39 = "ASTInfixOp_LESSTHAN";
  *((_QWORD *)v39 + 1) = 19;
  v39[16] = 2;
  v8();
  v40 = (_QWORD *)(v45 + v4 + 17 * v3);
  v41 = (char *)v40 + *(int *)(v1 + 48);
  *v40 = 17;
  *(_QWORD *)v41 = "ASTInfixOp_AND";
  *((_QWORD *)v41 + 1) = 14;
  v41[16] = 2;
  v8();
  v42 = (_QWORD *)(v45 + v4 + 18 * v3);
  v43 = (char *)v42 + *(int *)(v1 + 48);
  *v42 = 18;
  *(_QWORD *)v43 = "ASTInfixOp_OR";
  *((_QWORD *)v43 + 1) = 13;
  v43[16] = 2;
  v8();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoASTInfixOp._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0B20, (uint64_t)qword_256EB0598, a1);
}

uint64_t sub_23F87B4F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB05B0);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB05B0);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "ASTPrefixOp_PLUS";
  *(_QWORD *)(v7 + 8) = 16;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "ASTPrefixOp_MINUS";
  *((_QWORD *)v11 + 1) = 17;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "ASTPrefixOp_NOT";
  *((_QWORD *)v13 + 1) = 15;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoASTPrefixOp._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0B28, (uint64_t)qword_256EB05B0, a1);
}

uint64_t sub_23F87B6A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB05C8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB05C8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "append";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "replace";
  *((_QWORD *)v11 + 1) = 7;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoUpdateParameterExpression_UpdateKind._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0B30, (uint64_t)qword_256EB05C8, a1);
}

uint64_t sub_23F87B81C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB05E0);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB05E0);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "undo";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "redo";
  *((_QWORD *)v11 + 1) = 4;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoUndoOperation._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0B38, (uint64_t)qword_256EB05E0, a1);
}

unint64_t static TranscriptProtoEvent.protoMessageName.getter()
{
  return sub_23F6D3738(16);
}

uint64_t sub_23F87B9B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);
  unint64_t v9;
  _QWORD *v10;
  char *v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  uint64_t v33;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB05F8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB05F8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_23FB89970;
  v5 = v33 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v33 + v4) = 11;
  *(_QWORD *)v5 = "rawId";
  *(_QWORD *)(v5 + 8) = 5;
  *(_BYTE *)(v5 + 16) = 2;
  v6 = *MEMORY[0x24BE5C318];
  v7 = sub_23FB2D9DC();
  v8 = *(void (**)(void))(*(_QWORD *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  v9 = v33 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v33 + v4 + v3) = 1;
  *(_QWORD *)v9 = "rawSessionId";
  *(_QWORD *)(v9 + 8) = 12;
  *(_BYTE *)(v9 + 16) = 2;
  v8();
  v10 = (_QWORD *)(v33 + v4 + 2 * v3);
  v11 = (char *)v10 + *(int *)(v1 + 48);
  *v10 = 12;
  *(_QWORD *)v11 = "rawQueryEventId";
  *((_QWORD *)v11 + 1) = 15;
  v11[16] = 2;
  v8();
  v12 = (_QWORD *)(v33 + v4 + 3 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "rawPayload";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v8();
  v14 = (_QWORD *)(v33 + v4 + 4 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "clientRequestId";
  *((_QWORD *)v15 + 1) = 15;
  v15[16] = 2;
  v8();
  v16 = (_QWORD *)(v33 + v4 + 5 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "clientSessionId";
  *((_QWORD *)v17 + 1) = 15;
  v17[16] = 2;
  v8();
  v18 = (_QWORD *)(v33 + v4 + 6 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 9;
  *(_QWORD *)v19 = "clientApplicationId";
  *((_QWORD *)v19 + 1) = 19;
  v19[16] = 2;
  v8();
  v20 = (_QWORD *)(v33 + v4 + 7 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 10;
  *(_QWORD *)v21 = "clientGroupId";
  *((_QWORD *)v21 + 1) = 13;
  v21[16] = 2;
  v8();
  v22 = (_QWORD *)(v33 + v4 + 8 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 13;
  *(_QWORD *)v23 = "timepoint";
  *((_QWORD *)v23 + 1) = 9;
  v23[16] = 2;
  v8();
  v24 = (_QWORD *)(v33 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 5;
  *(_QWORD *)v25 = "rawTimestamp";
  *((_QWORD *)v25 + 1) = 12;
  v25[16] = 2;
  v8();
  v26 = (_QWORD *)(v33 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 6;
  *(_QWORD *)v27 = "sender";
  *((_QWORD *)v27 + 1) = 6;
  v27[16] = 2;
  v8();
  v28 = (_QWORD *)(v33 + v4 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 7;
  *(_QWORD *)v29 = "postingSpan";
  *((_QWORD *)v29 + 1) = 11;
  v29[16] = 2;
  v8();
  v30 = (_QWORD *)(v33 + v4 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 8;
  *(_QWORD *)v31 = "rawInitiatedSpans";
  *((_QWORD *)v31 + 1) = 17;
  v31[16] = 2;
  v8();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoEvent._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0B40, (uint64_t)qword_256EB05F8, a1);
}

void TranscriptProtoEvent.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
        case 3:
        case 4:
        case 9:
        case 11:
          sub_23F6D395C();
          break;
        case 2:
          sub_23F6D3598();
          sub_23F87BE84();
          break;
        case 5:
          sub_23F6D3598();
          sub_23F87BF18();
          break;
        case 6:
          sub_23F6D3598();
          sub_23F87BFAC();
          break;
        case 7:
          sub_23F6D3598();
          sub_23F87C040();
          break;
        case 8:
          sub_23F6D3598();
          sub_23F87C0D4();
          break;
        case 10:
          sub_23F6D3598();
          sub_23F87C150();
          break;
        case 12:
          sub_23F6D37D4();
          break;
        case 13:
          sub_23F6D3598();
          sub_23F87C1B0();
          break;
        default:
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

uint64_t sub_23F87BE84()
{
  type metadata accessor for TranscriptProtoEvent(0);
  type metadata accessor for TranscriptProtoPayload(0);
  sub_23F6D3458(&qword_256EB26F0, type metadata accessor for TranscriptProtoPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPayload);
  return sub_23FB2D8B0();
}

uint64_t sub_23F87BF18()
{
  type metadata accessor for TranscriptProtoEvent(0);
  sub_23FB2D6D0();
  sub_23F6D3458(&qword_256EB46C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B980]);
  return sub_23FB2D8B0();
}

uint64_t sub_23F87BFAC()
{
  type metadata accessor for TranscriptProtoEvent(0);
  type metadata accessor for TranscriptProtoParticipantID(0);
  sub_23F6D3458(&qword_256EB2CF8, type metadata accessor for TranscriptProtoParticipantID, (uint64_t)&protocol conformance descriptor for TranscriptProtoParticipantID);
  return sub_23FB2D8B0();
}

uint64_t sub_23F87C040()
{
  type metadata accessor for TranscriptProtoEvent(0);
  type metadata accessor for TranscriptProtoSpanID(0);
  sub_23F6D3458(&qword_256EB2D10, type metadata accessor for TranscriptProtoSpanID, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpanID);
  return sub_23FB2D8B0();
}

uint64_t sub_23F87C0D4()
{
  sub_23FB2D6DC();
  sub_23FB2D6F4();
  return sub_23FB2D7A8();
}

uint64_t sub_23F87C150()
{
  type metadata accessor for TranscriptProtoEvent(0);
  return sub_23FB2D874();
}

uint64_t sub_23F87C1B0()
{
  type metadata accessor for TranscriptProtoEvent(0);
  type metadata accessor for TranscriptProtoTimepoint(0);
  sub_23F6D3458(&qword_256EB2718, type metadata accessor for TranscriptProtoTimepoint, (uint64_t)&protocol conformance descriptor for TranscriptProtoTimepoint);
  return sub_23FB2D8B0();
}

void TranscriptProtoEvent.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_23F6D3DC4();
  sub_23F924398();
  sub_23F6D36FC();
  if (!v2 || (sub_23F6D376C(), !v0))
  {
    sub_23F6D3664();
    sub_23F87C430(v3);
    if (!v0)
    {
      sub_23F6D36FC();
      if (v4)
        sub_23F6D376C();
      sub_23F6D36FC();
      if (v5)
        sub_23F6D376C();
      sub_23F6D3664();
      sub_23F87C5A0(v6, v7, v8, v9);
      sub_23F6D3664();
      sub_23F87C714(v10);
      sub_23F6D3664();
      sub_23F87C884(v11);
      if (*(_QWORD *)(*(_QWORD *)(v1 + 80) + 16))
      {
        sub_23F923AE8();
        sub_23FB2D6F4();
        sub_23FB2D928();
      }
      sub_23F6D36FC();
      if (v12)
        sub_23F6D376C();
      sub_23F6D3664();
      sub_23F87C9F4(v13);
      sub_23F6D36FC();
      if (v14)
        sub_23F6D376C();
      sub_23F6D3664();
      sub_23F87CA68(v15);
      sub_23F6D3664();
      sub_23F87CAA0(v16);
      type metadata accessor for TranscriptProtoEvent(0);
      sub_23F6D37BC();
    }
  }
  sub_23F6D3710();
}

void sub_23F87C430(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA8718);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoPayload(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoEvent(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 44), (uint64_t)v4, &qword_256EA8718);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA8718);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoPayload);
    sub_23F6D3458(&qword_256EB26F0, type metadata accessor for TranscriptProtoPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPayload);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoPayload);
  }
}

void sub_23F87C5A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v13[2];

  v13[1] = a4;
  v5 = sub_23F6916B8(&qword_256EA86E0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23FB2D6D0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoEvent(0);
  sub_23F7A1EDC(a1 + *(int *)(v12 + 56), (uint64_t)v7, &qword_256EA86E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v7, &qword_256EA86E0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    sub_23F6D3458(&qword_256EB46C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B980]);
    sub_23FB2D9D0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

void sub_23F87C714(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA8700);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoParticipantID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoEvent(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 60), (uint64_t)v4, &qword_256EA8700);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA8700);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoParticipantID);
    sub_23F6D3458(&qword_256EB2CF8, type metadata accessor for TranscriptProtoParticipantID, (uint64_t)&protocol conformance descriptor for TranscriptProtoParticipantID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoParticipantID);
  }
}

void sub_23F87C884(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA86F8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSpanID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoEvent(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 64), (uint64_t)v4, &qword_256EA86F8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA86F8);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSpanID);
    sub_23F6D3458(&qword_256EB2D10, type metadata accessor for TranscriptProtoSpanID, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpanID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoSpanID);
  }
}

uint64_t sub_23F87C9F4(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for TranscriptProtoEvent(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 48) + 8))
    return sub_23FB2D9A0();
  return result;
}

uint64_t sub_23F87CA68(uint64_t result)
{
  if (*(_QWORD *)(result + 96))
    return sub_23FB2D9A0();
  return result;
}

void sub_23F87CAA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA8708);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoTimepoint(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoEvent(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 52), (uint64_t)v4, &qword_256EA8708);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA8708);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoTimepoint);
    sub_23F6D3458(&qword_256EB2718, type metadata accessor for TranscriptProtoTimepoint, (uint64_t)&protocol conformance descriptor for TranscriptProtoTimepoint);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoTimepoint);
  }
}

void static TranscriptProtoEvent.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  char *v74;
  BOOL v75;
  char v76;
  BOOL v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  char v82;
  _QWORD *v83;
  uint64_t v84;
  _QWORD *v85;
  int *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  char v97;
  char v98;
  _QWORD *v99;
  _QWORD *v100;
  char v102;
  char v104;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v114;
  int *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  char v137;
  int *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  void (*v148)(uint64_t);
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void (*v152)(uint64_t, uint64_t);
  uint64_t v153;
  int *v154;
  uint64_t *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  char v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  BOOL v170;
  uint64_t v171;
  char v172;
  int *v173;
  uint64_t *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t *v183;
  uint64_t v184;
  _QWORD *v185;
  char v186;
  int *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  void (*v191)(uint64_t);
  uint64_t v192;
  uint64_t v193;
  _QWORD *v194;
  char v195;
  uint64_t v196;
  _QWORD *v197;
  char v198;
  uint64_t v199;
  int *v200;
  _QWORD *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  _QWORD *v206;
  _QWORD *v207;
  uint64_t v208;
  uint64_t v209;
  _QWORD *v210;
  _QWORD *v211;
  uint64_t v212;
  uint64_t *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  _QWORD *v235;

  sub_23F6B50E8();
  v4 = v3;
  v6 = v5;
  v7 = sub_23F6B53A4();
  v205 = *(_QWORD *)(v7 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F693E0C();
  v204 = v9;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B6580();
  v203 = v11;
  v12 = sub_23F6D398C();
  v209 = type metadata accessor for TranscriptProtoSpanID(v12);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B51A4();
  sub_23F6B5314(v14);
  v208 = sub_23F6916B8(&qword_256EB1BB8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B51A4();
  sub_23F6B5314(v16);
  sub_23F6916B8(&qword_256EA86F8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F693E0C();
  v207 = v18;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F6D3D14();
  v212 = v20;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v21);
  v215 = (uint64_t)&v199 - v22;
  v23 = sub_23F6D398C();
  v228 = type metadata accessor for TranscriptProtoParticipantID(v23);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6B51A4();
  sub_23F6B5314(v25);
  v216 = sub_23F6916B8(&qword_256EB1BC0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F6B658C(v27, v199);
  sub_23F6916B8(&qword_256EA8700);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F693E0C();
  v211 = v29;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F6D3D14();
  v218 = v31;
  sub_23F6B5664();
  v33 = MEMORY[0x24BDAC7A8](v32);
  sub_23F9248E8(v33, v34, v35, v36, v37, v38, v39, v40, v199);
  v224 = sub_23FB2D6D0();
  v217 = *(_QWORD *)(v224 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F6B51A4();
  sub_23F6B5314(v42);
  v223 = sub_23F6916B8(&qword_256EB1BC8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v43);
  sub_23F6B5810(v44, v199);
  sub_23F6916B8(&qword_256EA86E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v45);
  v222 = (char *)&v199 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v47);
  v226 = (char *)&v199 - v48;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v49);
  v232 = (uint64_t)&v199 - v50;
  v51 = sub_23F6D398C();
  v230 = type metadata accessor for TranscriptProtoTimepoint(v51);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v52);
  sub_23F6B5848(v53, v199);
  v229 = sub_23F6916B8(&qword_256EB1BD0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v54);
  sub_23F6B537C(v55, v199);
  sub_23F6916B8(&qword_256EA8708);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v56);
  v225 = (char *)&v199 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v58);
  v233 = (uint64_t)&v199 - v59;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v60);
  v234 = (uint64_t)&v199 - v61;
  v62 = sub_23F6D398C();
  v63 = type metadata accessor for TranscriptProtoPayload(v62);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v64);
  sub_23F6B53AC();
  v65 = sub_23F6916B8(&qword_256EB1BD8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v66);
  sub_23F6B6B5C();
  sub_23F6916B8(&qword_256EA8718);
  sub_23F6D3588();
  v68 = MEMORY[0x24BDAC7A8](v67);
  v70 = (char *)&v199 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v68);
  sub_23F9231E0();
  MEMORY[0x24BDAC7A8](v71);
  v72 = v4;
  v74 = (char *)&v199 - v73;
  v75 = *v6 == *v4 && v6[1] == v4[1];
  v235 = v4;
  if (v75 || (v76 = sub_23F6B5280(), v72 = v235, (v76 & 1) != 0))
  {
    v77 = v6[2] == v72[2] && v6[3] == v72[3];
    if (v77 || (v78 = sub_23F6B5280(), v72 = v235, (v78 & 1) != 0))
    {
      v79 = v6[12];
      v80 = v72[12];
      if (v79)
      {
        if (!v80)
          goto LABEL_30;
        if (v6[11] != v72[11] || v79 != v80)
        {
          v82 = sub_23F6B5280();
          v72 = v235;
          if ((v82 & 1) == 0)
            goto LABEL_30;
        }
      }
      else if (v80)
      {
        goto LABEL_30;
      }
      v202 = v7;
      v83 = v72;
      v84 = type metadata accessor for TranscriptProtoEvent(0);
      v85 = v6;
      v86 = (int *)v84;
      v87 = *(int *)(v84 + 44);
      v201 = v85;
      sub_23F923300((uint64_t)v85 + v87, (uint64_t)v74);
      v200 = v86;
      sub_23F923300((uint64_t)v83 + v86[11], v2);
      v88 = v0 + *(int *)(v65 + 48);
      v89 = sub_23F8790C8();
      sub_23F923300(v89, v90);
      sub_23F923300(v2, v88);
      sub_23F6B5164(v0, 1, v63);
      if (v75)
      {
        sub_23F6D3748(v2);
        sub_23F6D3748((uint64_t)v74);
        v92 = sub_23F6B5164(v88, 1, v63);
        if (v75)
        {
          sub_23F9239A0(v92, &qword_256EA8718);
          goto LABEL_32;
        }
      }
      else
      {
        sub_23F923E34(v0, v91, &qword_256EA8718);
        sub_23F6B5164(v88, 1, v63);
        if (!v93)
        {
          sub_23F923774(v88, v1);
          static TranscriptProtoPayload.== infix(_:_:)();
          v98 = v97;
          sub_23F77DB60(v1);
          sub_23F6B62DC(v2);
          sub_23F6B62DC((uint64_t)v74);
          sub_23F77DB60((uint64_t)v70);
          sub_23F6B62DC(v0);
          if ((v98 & 1) == 0)
            goto LABEL_30;
LABEL_32:
          v99 = v201;
          v100 = v235;
          if (v201[4] != v235[4] || v201[5] != v235[5])
          {
            sub_23F6B5280();
            sub_23F924AE8();
            if ((v102 & 1) == 0)
              goto LABEL_30;
          }
          if (v99[6] != v100[6] || v99[7] != v100[7])
          {
            sub_23F6B5280();
            sub_23F924AE8();
            if ((v104 & 1) == 0)
              goto LABEL_30;
          }
          if (v99[8] != v100[8] || v99[9] != v100[9])
          {
            sub_23F6B5280();
            sub_23F924AE8();
            if ((v106 & 1) == 0)
              goto LABEL_30;
          }
          sub_23F924258();
          if (v110)
          {
            if (!v107)
              goto LABEL_30;
            sub_23F6D3998(v108);
            if (!v75 || v111 != v112)
            {
              sub_23F6B5280();
              sub_23F924AE8();
              if ((v114 & 1) == 0)
                goto LABEL_30;
            }
          }
          else if (v107)
          {
            goto LABEL_30;
          }
          v115 = v200;
          v116 = v234;
          v117 = v109;
          sub_23F7A1EDC((uint64_t)v99 + v200[13], v234, &qword_256EA8708);
          v118 = v233;
          sub_23F923268(v117 + v115[13], v233);
          sub_23F924AD0();
          v119 = v231;
          v121 = v231 + v120;
          sub_23F923268(v116, v231);
          sub_23F923268(v118, v121);
          v122 = sub_23F77DCB8();
          v123 = v230;
          sub_23F6B5164(v122, v124, v230);
          if (v75)
          {
            sub_23F6D3748(v118);
            sub_23F6D3748(v116);
            v126 = sub_23F6B5164(v121, 1, v123);
            v127 = v227;
            v128 = v228;
            v129 = v232;
            v130 = (uint64_t)v226;
            if (v75)
            {
              sub_23F77DD64(v126, &qword_256EA8708);
              goto LABEL_66;
            }
          }
          else
          {
            v131 = (uint64_t)v225;
            sub_23F923760(v119, v125, &qword_256EA8708);
            sub_23F6B5164(v121, 1, v123);
            v127 = v227;
            v133 = v228;
            v129 = v232;
            v130 = (uint64_t)v226;
            if (!v132)
            {
              v135 = v221;
              sub_23F7F6534(v121, v221);
              static TranscriptProtoTimepoint.== infix(_:_:)();
              v137 = v136;
              sub_23F6D38A0(v135);
              sub_23F6B6EF8(v233);
              sub_23F6B6EF8(v234);
              sub_23F6D38A0(v131);
              sub_23F6B6EF8(v119);
              v128 = v133;
              if ((v137 & 1) == 0)
                goto LABEL_30;
LABEL_66:
              v138 = v200;
              sub_23F923268((uint64_t)v99 + v200[14], v129);
              sub_23F923268((uint64_t)v235 + v138[14], v130);
              v139 = v127 + *(int *)(v223 + 48);
              sub_23F923268(v129, v127);
              sub_23F923268(v130, v139);
              v140 = v224;
              sub_23F6B5164(v127, 1, v224);
              if (v75)
              {
                sub_23F6D3748(v130);
                sub_23F6D3748(v129);
                v142 = sub_23F6B5164(v139, 1, v140);
                if (v75)
                {
                  sub_23F77E3DC(v142, &qword_256EA86E0);
                  goto LABEL_76;
                }
              }
              else
              {
                v143 = v222;
                sub_23F923E34(v127, v141, &qword_256EA86E0);
                sub_23F6B5164(v139, 1, v140);
                if (!v144)
                {
                  v145 = v217;
                  v146 = v214;
                  v147 = sub_23F7D2958();
                  v148(v147);
                  sub_23F6D3458(&qword_256EB1BE0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B9A0]);
                  LODWORD(v234) = sub_23F9232F0();
                  v149 = v128;
                  v150 = v127;
                  v151 = v140;
                  v152 = *(void (**)(uint64_t, uint64_t))(v145 + 8);
                  v152(v146, v151);
                  sub_23F6D3748(v130);
                  sub_23F6D3748(v232);
                  v152((uint64_t)v222, v151);
                  v153 = v150;
                  v128 = v149;
                  sub_23F6D3748(v153);
                  if ((v234 & 1) == 0)
                    goto LABEL_30;
LABEL_76:
                  v154 = v200;
                  v155 = &qword_256EA8700;
                  v156 = v219;
                  sub_23F923268((uint64_t)v99 + v200[15], v219);
                  v157 = sub_23F923B30(v154[15]);
                  v158 = v218;
                  sub_23F923268(v157, v218);
                  v159 = v220;
                  v160 = v220 + *(int *)(v216 + 48);
                  sub_23F923268(v156, v220);
                  sub_23F923268(v158, v160);
                  v161 = sub_23F6B6F68();
                  sub_23F6B5164(v161, v162, v128);
                  if (v75)
                  {
                    sub_23F6D3748(v158);
                    sub_23F6D3748(v156);
                    sub_23F6B5164(v160, 1, v128);
                    v164 = v215;
                    if (v75)
                    {
                      sub_23F6B4F84(v220, &qword_256EA8700);
LABEL_91:
                      v173 = v200;
                      v174 = &qword_256EA86F8;
                      sub_23F923268((uint64_t)v99 + v200[16], v164);
                      v175 = sub_23F923B30(v173[16]);
                      v176 = v212;
                      sub_23F923268(v175, v212);
                      v177 = (uint64_t)v213 + *(int *)(v208 + 48);
                      sub_23F923268(v164, (uint64_t)v213);
                      sub_23F924948(v176);
                      v178 = sub_23F6B6F68();
                      v179 = v209;
                      sub_23F6B5164(v178, v180, v209);
                      if (v75)
                      {
                        sub_23F6D3748(v176);
                        v182 = sub_23F77E680();
                        v174 = v213;
                        sub_23F6B4F84(v182, v183);
                        v184 = sub_23F6B5164(v177, 1, v179);
                        if (v75)
                        {
                          sub_23F77DC10(v184, &qword_256EA86F8);
LABEL_96:
                          v185 = v235;
                          sub_23F69E12C();
                          if ((v186 & 1) != 0)
                          {
                            v187 = v200;
                            v188 = (uint64_t)v99 + v200[17];
                            v189 = v205;
                            v190 = v203;
                            sub_23F713F84(v203, v188);
                            sub_23F713F84(v204, (uint64_t)v185 + v187[17]);
                            sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
                            sub_23F72E3F8();
                            sub_23F6B6060();
                            v191 = *(void (**)(uint64_t))(v189 + 8);
                            v192 = sub_23F6B6098();
                            v191(v192);
                            sub_23F9243AC(v190);
                          }
                          goto LABEL_30;
                        }
                      }
                      else
                      {
                        v193 = v179;
                        v194 = v207;
                        sub_23F924698((uint64_t)&qword_256EA86F8, v181, &qword_256EA86F8);
                        sub_23F6B5164(v177, 1, v193);
                        if (!v195)
                        {
                          v197 = v206;
                          sub_23F7E76D0(v177, (uint64_t)v206, type metadata accessor for TranscriptProtoSpanID);
                          if (*v194 == *v197)
                          {
                            sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
                            v198 = sub_23F6B6060();
                            sub_23F6D38A0((uint64_t)v197);
                            sub_23F6B6EF8(v212);
                            sub_23F6B6EF8(v215);
                            sub_23F6D38A0((uint64_t)v194);
                            sub_23F6B6EF8((uint64_t)v213);
                            if ((v198 & 1) == 0)
                              goto LABEL_30;
                            goto LABEL_96;
                          }
                          sub_23F6D3928((uint64_t)v197);
                          v155 = &qword_256EA86F8;
                          sub_23F6D3748(v212);
                          sub_23F6D3748(v215);
                          sub_23F6D3928((uint64_t)v194);
                          v96 = (uint64_t)v213;
                          goto LABEL_107;
                        }
                        sub_23F6B64F4(v212);
                        sub_23F6B64F4(v215);
                        sub_23F924AF4(v196, type metadata accessor for TranscriptProtoSpanID);
                      }
                      v95 = &qword_256EB1BB8;
                      v96 = (uint64_t)v174;
LABEL_29:
                      sub_23F6B4F84(v96, v95);
                      goto LABEL_30;
                    }
                  }
                  else
                  {
                    v165 = v211;
                    sub_23F923640(v159, v163, &qword_256EA8700);
                    sub_23F6B5164(v160, 1, v128);
                    if (!v166)
                    {
                      v168 = v160;
                      v169 = v210;
                      sub_23F7E76D0(v168, (uint64_t)v210, type metadata accessor for TranscriptProtoParticipantID);
                      v170 = *v165 == *v169 && v165[1] == v169[1];
                      if (!v170 && (sub_23F6B5280() & 1) == 0)
                      {
                        sub_23F6D3928((uint64_t)v210);
                        sub_23F6D3748(v218);
                        sub_23F6D3748(v219);
                        sub_23F6D3928((uint64_t)v165);
                        v96 = v159;
LABEL_107:
                        v95 = v155;
                        goto LABEL_29;
                      }
                      v171 = (uint64_t)v210;
                      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
                      v172 = sub_23F6B6060();
                      sub_23F6D38A0(v171);
                      sub_23F6B6EF8(v218);
                      sub_23F6B6EF8(v219);
                      sub_23F6D38A0((uint64_t)v165);
                      v164 = v215;
                      sub_23F6B4F84(v159, &qword_256EA8700);
                      if ((v172 & 1) == 0)
                        goto LABEL_30;
                      goto LABEL_91;
                    }
                    sub_23F6B64F4(v218);
                    sub_23F6B64F4(v219);
                    sub_23F72E404(v167, type metadata accessor for TranscriptProtoParticipantID);
                  }
                  v95 = &qword_256EB1BC0;
                  v96 = v220;
                  goto LABEL_29;
                }
                sub_23F6B64F4(v130);
                sub_23F6B64F4(v129);
                (*(void (**)(char *, uint64_t))(v217 + 8))(v143, v140);
              }
              v95 = &qword_256EB1BC8;
              v96 = v127;
              goto LABEL_29;
            }
            sub_23F6B64F4(v233);
            sub_23F6B64F4(v234);
            sub_23F77DB94(v134, type metadata accessor for TranscriptProtoTimepoint);
          }
          v95 = &qword_256EB1BD0;
          v96 = v119;
          goto LABEL_29;
        }
        sub_23F6B64F4(v2);
        sub_23F6B64F4((uint64_t)v74);
        sub_23F78F204(v94, type metadata accessor for TranscriptProtoPayload);
      }
      v95 = &qword_256EB1BD8;
      v96 = v0;
      goto LABEL_29;
    }
  }
LABEL_30:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoEvent.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoEvent, &qword_256EB1BE8, (uint64_t)&protocol conformance descriptor for TranscriptProtoEvent);
}

unint64_t sub_23F87DAAC()
{
  static TranscriptProtoEvent.protoMessageName.getter();
  return 0xD000000000000010;
}

uint64_t (*sub_23F87DAD0())()
{
  return nullsub_1;
}

void sub_23F87DAE4()
{
  TranscriptProtoEvent.decodeMessage<A>(decoder:)();
}

void sub_23F87DAF8()
{
  TranscriptProtoEvent.traverse<A>(visitor:)();
}

uint64_t sub_23F87DB0C()
{
  sub_23F6D3458(&qword_256EB42B8, type metadata accessor for TranscriptProtoEvent, (uint64_t)&protocol conformance descriptor for TranscriptProtoEvent);
  return sub_23FB2D784();
}

uint64_t sub_23F87DB60()
{
  sub_23F6D3458(&qword_256EA71F0, type metadata accessor for TranscriptProtoEvent, (uint64_t)&protocol conformance descriptor for TranscriptProtoEvent);
  return sub_23FB2D8F8();
}

uint64_t sub_23F87DBA4()
{
  sub_23F6D3458(&qword_256EA71F0, type metadata accessor for TranscriptProtoEvent, (uint64_t)&protocol conformance descriptor for TranscriptProtoEvent);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoPayload.protoMessageName.getter()
{
  return sub_23F6D3738(18);
}

uint64_t sub_23F87DC10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);
  unint64_t v9;
  _QWORD *v10;
  char *v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  _QWORD *v38;
  char *v39;
  _QWORD *v40;
  char *v41;
  _QWORD *v42;
  char *v43;
  _QWORD *v44;
  char *v45;
  _QWORD *v46;
  char *v47;
  _QWORD *v48;
  char *v49;
  _QWORD *v50;
  char *v51;
  _QWORD *v52;
  char *v53;
  _QWORD *v54;
  char *v55;
  _QWORD *v56;
  char *v57;
  _QWORD *v58;
  char *v59;
  _QWORD *v60;
  char *v61;
  _QWORD *v62;
  char *v63;
  _QWORD *v64;
  char *v65;
  _QWORD *v66;
  char *v67;
  _QWORD *v68;
  char *v69;
  _QWORD *v70;
  char *v71;
  _QWORD *v72;
  char *v73;
  _QWORD *v74;
  char *v75;
  _QWORD *v76;
  char *v77;
  _QWORD *v78;
  char *v79;
  _QWORD *v80;
  char *v81;
  _QWORD *v82;
  char *v83;
  _QWORD *v84;
  char *v85;
  _QWORD *v86;
  char *v87;
  _QWORD *v88;
  char *v89;
  _QWORD *v90;
  char *v91;
  _QWORD *v92;
  char *v93;
  _QWORD *v94;
  char *v95;
  _QWORD *v96;
  char *v97;
  uint64_t v99;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0610);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0610);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v99 = swift_allocObject();
  *(_OWORD *)(v99 + 16) = xmmword_23FB89980;
  v5 = v99 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v99 + v4) = 46;
  *(_QWORD *)v5 = "sessionStart";
  *(_QWORD *)(v5 + 8) = 12;
  *(_BYTE *)(v5 + 16) = 2;
  v6 = *MEMORY[0x24BE5C318];
  v7 = sub_23FB2D9DC();
  v8 = *(void (**)(void))(*(_QWORD *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  v9 = v99 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v99 + v4 + v3) = 1;
  *(_QWORD *)v9 = "textQuery";
  *(_QWORD *)(v9 + 8) = 9;
  *(_BYTE *)(v9 + 16) = 2;
  v8();
  v10 = (_QWORD *)(v99 + v4 + 2 * v3);
  v11 = (char *)v10 + *(int *)(v1 + 48);
  *v10 = 2;
  *(_QWORD *)v11 = "speechQuery";
  *((_QWORD *)v11 + 1) = 11;
  v11[16] = 2;
  v8();
  v12 = (_QWORD *)(v99 + v4 + 3 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 41;
  *(_QWORD *)v13 = "request";
  *((_QWORD *)v13 + 1) = 7;
  v13[16] = 2;
  v8();
  v14 = (_QWORD *)(v99 + v4 + 4 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "planCreated";
  *((_QWORD *)v15 + 1) = 11;
  v15[16] = 2;
  v8();
  v16 = (_QWORD *)(v99 + v4 + 5 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "actionCreated";
  *((_QWORD *)v17 + 1) = 13;
  v17[16] = 2;
  v8();
  v18 = (_QWORD *)(v99 + v4 + 6 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "clientActionCreated";
  *((_QWORD *)v19 + 1) = 19;
  v19[16] = 2;
  v8();
  v20 = (_QWORD *)(v99 + v4 + 7 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "queriesCreated";
  *((_QWORD *)v21 + 1) = 14;
  v21[16] = 2;
  v8();
  v22 = (_QWORD *)(v99 + v4 + 8 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 7;
  *(_QWORD *)v23 = "variablesSet";
  *((_QWORD *)v23 + 1) = 12;
  v23[16] = 2;
  v8();
  v24 = (_QWORD *)(v99 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 9;
  *(_QWORD *)v25 = "executorFinished";
  *((_QWORD *)v25 + 1) = 16;
  v25[16] = 2;
  v8();
  v26 = (_QWORD *)(v99 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 10;
  *(_QWORD *)v27 = "clientIdentifier";
  *((_QWORD *)v27 + 1) = 16;
  v27[16] = 2;
  v8();
  v28 = (_QWORD *)(v99 + v4 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 11;
  *(_QWORD *)v29 = "criticalError";
  *((_QWORD *)v29 + 1) = 13;
  v29[16] = 2;
  v8();
  v30 = (_QWORD *)(v99 + v4 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 47;
  *(_QWORD *)v31 = "recoverableError";
  *((_QWORD *)v31 + 1) = 16;
  v31[16] = 2;
  v8();
  v32 = (_QWORD *)(v99 + v4 + 13 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 12;
  *(_QWORD *)v33 = "clientCustom";
  *((_QWORD *)v33 + 1) = 12;
  v33[16] = 2;
  v8();
  v34 = (_QWORD *)(v99 + v4 + 14 * v3);
  v35 = (char *)v34 + *(int *)(v1 + 48);
  *v34 = 14;
  *(_QWORD *)v35 = "endOfPlan";
  *((_QWORD *)v35 + 1) = 9;
  v35[16] = 2;
  v8();
  v36 = (_QWORD *)(v99 + v4 + 15 * v3);
  v37 = (char *)v36 + *(int *)(v1 + 48);
  *v36 = 15;
  *(_QWORD *)v37 = "terminate";
  *((_QWORD *)v37 + 1) = 9;
  v37[16] = 2;
  v8();
  v38 = (_QWORD *)(v99 + v4 + 16 * v3);
  v39 = (char *)v38 + *(int *)(v1 + 48);
  *v38 = 17;
  *(_QWORD *)v39 = "systemPromptResolved";
  *((_QWORD *)v39 + 1) = 20;
  v39[16] = 2;
  v8();
  v40 = (_QWORD *)(v99 + v4 + 17 * v3);
  v41 = (char *)v40 + *(int *)(v1 + 48);
  *v40 = 18;
  *(_QWORD *)v41 = "actionExecuted";
  *((_QWORD *)v41 + 1) = 14;
  v41[16] = 2;
  v8();
  v42 = (_QWORD *)(v99 + v4 + 18 * v3);
  v43 = (char *)v42 + *(int *)(v1 + 48);
  *v42 = 19;
  *(_QWORD *)v43 = "queriesExecuted";
  *((_QWORD *)v43 + 1) = 15;
  v43[16] = 2;
  v8();
  v44 = (_QWORD *)(v99 + v4 + 19 * v3);
  v45 = (char *)v44 + *(int *)(v1 + 48);
  *v44 = 20;
  *(_QWORD *)v45 = "actionResponseGenerated";
  *((_QWORD *)v45 + 1) = 23;
  v45[16] = 2;
  v8();
  v46 = (_QWORD *)(v99 + v4 + 20 * v3);
  v47 = (char *)v46 + *(int *)(v1 + 48);
  *v46 = 21;
  *(_QWORD *)v47 = "actionResolverRequestCreated";
  *((_QWORD *)v47 + 1) = 28;
  v47[16] = 2;
  v8();
  v48 = (_QWORD *)(v99 + v4 + 21 * v3);
  v49 = (char *)v48 + *(int *)(v1 + 48);
  *v48 = 22;
  *(_QWORD *)v49 = "clientInitiatedClientAction";
  *((_QWORD *)v49 + 1) = 27;
  v49[16] = 2;
  v8();
  v50 = (_QWORD *)(v99 + v4 + 22 * v3);
  v51 = (char *)v50 + *(int *)(v1 + 48);
  *v50 = 23;
  *(_QWORD *)v51 = "contextPrewarmRequest";
  *((_QWORD *)v51 + 1) = 21;
  v51[16] = 2;
  v8();
  v52 = (_QWORD *)(v99 + v4 + 23 * v3);
  v53 = (char *)v52 + *(int *)(v1 + 48);
  *v52 = 24;
  *(_QWORD *)v53 = "contextPrewarmCompleted";
  *((_QWORD *)v53 + 1) = 23;
  v53[16] = 2;
  v8();
  v54 = (_QWORD *)(v99 + v4 + 24 * v3);
  v55 = (char *)v54 + *(int *)(v1 + 48);
  *v54 = 25;
  *(_QWORD *)v55 = "safetyModeRelease";
  *((_QWORD *)v55 + 1) = 17;
  v55[16] = 2;
  v8();
  v56 = (_QWORD *)(v99 + v4 + 25 * v3);
  v57 = (char *)v56 + *(int *)(v1 + 48);
  *v56 = 26;
  *(_QWORD *)v57 = "safetyModeException";
  *((_QWORD *)v57 + 1) = 19;
  v57[16] = 2;
  v8();
  v58 = (_QWORD *)(v99 + v4 + 26 * v3);
  v59 = (char *)v58 + *(int *)(v1 + 48);
  *v58 = 27;
  *(_QWORD *)v59 = "responseGenerationRequest";
  *((_QWORD *)v59 + 1) = 25;
  v59[16] = 2;
  v8();
  v60 = (_QWORD *)(v99 + v4 + 27 * v3);
  v61 = (char *)v60 + *(int *)(v1 + 48);
  *v60 = 28;
  *(_QWORD *)v61 = "entitySpanMatched";
  *((_QWORD *)v61 + 1) = 17;
  v61[16] = 2;
  v8();
  v62 = (_QWORD *)(v99 + v4 + 28 * v3);
  v63 = (char *)v62 + *(int *)(v1 + 48);
  *v62 = 29;
  *(_QWORD *)v63 = "ContextRetrieved";
  *((_QWORD *)v63 + 1) = 16;
  v63[16] = 2;
  v8();
  v64 = (_QWORD *)(v99 + v4 + 29 * v3);
  v65 = (char *)v64 + *(int *)(v1 + 48);
  *v64 = 30;
  *(_QWORD *)v65 = "actionCanceled";
  *((_QWORD *)v65 + 1) = 14;
  v65[16] = 2;
  v8();
  v66 = (_QWORD *)(v99 + v4 + 30 * v3);
  v67 = (char *)v66 + *(int *)(v1 + 48);
  *v66 = 31;
  *(_QWORD *)v67 = "toolsRetrieved";
  *((_QWORD *)v67 + 1) = 14;
  v67[16] = 2;
  v8();
  v68 = (_QWORD *)(v99 + v4 + 31 * v3);
  v69 = (char *)v68 + *(int *)(v1 + 48);
  *v68 = 32;
  *(_QWORD *)v69 = "systemResponseGenerated";
  *((_QWORD *)v69 + 1) = 23;
  v69[16] = 2;
  v8();
  v70 = (_QWORD *)(v99 + v4 + 32 * v3);
  v71 = (char *)v70 + *(int *)(v1 + 48);
  *v70 = 33;
  *(_QWORD *)v71 = "statementEvaluated";
  *((_QWORD *)v71 + 1) = 18;
  v71[16] = 2;
  v8();
  v72 = (_QWORD *)(v99 + v4 + 33 * v3);
  v73 = (char *)v72 + *(int *)(v1 + 48);
  *v72 = 34;
  *(_QWORD *)v73 = "externalAgentTextQuery";
  *((_QWORD *)v73 + 1) = 22;
  v73[16] = 2;
  v8();
  v74 = (_QWORD *)(v99 + v4 + 34 * v3);
  v75 = (char *)v74 + *(int *)(v1 + 48);
  *v74 = 35;
  *(_QWORD *)v75 = "externalAgentSpeechQuery";
  *((_QWORD *)v75 + 1) = 24;
  v75[16] = 2;
  v8();
  v76 = (_QWORD *)(v99 + v4 + 35 * v3);
  v77 = (char *)v76 + *(int *)(v1 + 48);
  *v76 = 42;
  *(_QWORD *)v77 = "externalAgentRequest";
  *((_QWORD *)v77 + 1) = 20;
  v77[16] = 2;
  v8();
  v78 = (_QWORD *)(v99 + v4 + 36 * v3);
  v79 = (char *)v78 + *(int *)(v1 + 48);
  *v78 = 36;
  *(_QWORD *)v79 = "externalAgentOutcome";
  *((_QWORD *)v79 + 1) = 20;
  v79[16] = 2;
  v8();
  v80 = (_QWORD *)(v99 + v4 + 37 * v3);
  v81 = (char *)v80 + *(int *)(v1 + 48);
  *v80 = 37;
  *(_QWORD *)v81 = "externalAgentRequestRewriteMetadata";
  *((_QWORD *)v81 + 1) = 35;
  v81[16] = 2;
  v8();
  v82 = (_QWORD *)(v99 + v4 + 38 * v3);
  v83 = (char *)v82 + *(int *)(v1 + 48);
  *v82 = 38;
  *(_QWORD *)v83 = "ToolResolution";
  *((_QWORD *)v83 + 1) = 14;
  v83[16] = 2;
  v8();
  v84 = (_QWORD *)(v99 + v4 + 39 * v3);
  v85 = (char *)v84 + *(int *)(v1 + 48);
  *v84 = 39;
  *(_QWORD *)v85 = "undoRedoRequest";
  *((_QWORD *)v85 + 1) = 15;
  v85[16] = 2;
  v8();
  v86 = (_QWORD *)(v99 + v4 + 40 * v3);
  v87 = (char *)v86 + *(int *)(v1 + 48);
  *v86 = 40;
  *(_QWORD *)v87 = "clientUndoRedoRequest";
  *((_QWORD *)v87 + 1) = 21;
  v87[16] = 2;
  v8();
  v88 = (_QWORD *)(v99 + v4 + 41 * v3);
  v89 = (char *)v88 + *(int *)(v1 + 48);
  *v88 = 43;
  *(_QWORD *)v89 = "typeConversionRequest";
  *((_QWORD *)v89 + 1) = 21;
  v89[16] = 2;
  v8();
  v90 = (_QWORD *)(v99 + v4 + 42 * v3);
  v91 = (char *)v90 + *(int *)(v1 + 48);
  *v90 = 44;
  *(_QWORD *)v91 = "typeConversionResult";
  *((_QWORD *)v91 + 1) = 20;
  v91[16] = 2;
  v8();
  v92 = (_QWORD *)(v99 + v4 + 43 * v3);
  v93 = (char *)v92 + *(int *)(v1 + 48);
  *v92 = 45;
  *(_QWORD *)v93 = "queryDecorationResult";
  *((_QWORD *)v93 + 1) = 21;
  v93[16] = 2;
  v8();
  v94 = (_QWORD *)(v99 + v4 + 44 * v3);
  v95 = (char *)v94 + *(int *)(v1 + 48);
  *v94 = 48;
  *(_QWORD *)v95 = "continuePlanning";
  *((_QWORD *)v95 + 1) = 16;
  v95[16] = 2;
  v8();
  v96 = (_QWORD *)(v99 + v4 + 45 * v3);
  v97 = (char *)v96 + *(int *)(v1 + 48);
  *v96 = 49;
  *(_QWORD *)v97 = "queryDecorationPrePlannerResult";
  *((_QWORD *)v97 + 1) = 31;
  v97[16] = 2;
  v8();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoPayload._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0B48, (uint64_t)qword_256EB0610, a1);
}

void TranscriptProtoPayload.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;

  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          v3 = sub_23F923100();
          sub_23F87E9FC(v3, v4, v5, v6);
          break;
        case 2:
          v7 = sub_23F923100();
          sub_23F87EDE8(v7, v8, v9, v10);
          break;
        case 3:
          v11 = sub_23F923100();
          sub_23F87F1D4(v11, v12, v13, v14);
          break;
        case 4:
          v15 = sub_23F923100();
          sub_23F87F5C0(v15, v16, v17, v18);
          break;
        case 5:
          v19 = sub_23F923100();
          sub_23F87F9AC(v19, v20, v21, v22);
          break;
        case 6:
          v23 = sub_23F923100();
          sub_23F87FD98(v23, v24, v25, v26);
          break;
        case 7:
          v27 = sub_23F923100();
          sub_23F880184(v27, v28, v29, v30);
          break;
        case 9:
        case 14:
        case 15:
          sub_23F6D3598();
          sub_23F880D48();
          break;
        case 10:
          sub_23F6D3598();
          sub_23F8E33C0();
          break;
        case 11:
          v31 = sub_23F923100();
          sub_23F880570(v31, v32, v33, v34);
          break;
        case 12:
          v35 = sub_23F923100();
          sub_23F88095C(v35, v36, v37, v38);
          break;
        case 17:
          v39 = sub_23F923100();
          sub_23F880F10(v39, v40, v41, v42);
          break;
        case 18:
          v43 = sub_23F923100();
          sub_23F8812FC(v43, v44, v45, v46);
          break;
        case 19:
          v47 = sub_23F923100();
          sub_23F8816E8(v47, v48, v49, v50);
          break;
        case 20:
          v51 = sub_23F923100();
          sub_23F881AD4(v51, v52, v53, v54);
          break;
        case 21:
          v55 = sub_23F923100();
          sub_23F881EC0(v55, v56, v57, v58);
          break;
        case 22:
          v59 = sub_23F923100();
          sub_23F8822AC(v59, v60, v61, v62);
          break;
        case 23:
          v63 = sub_23F923100();
          sub_23F882698(v63, v64, v65, v66);
          break;
        case 24:
          v67 = sub_23F923100();
          sub_23F882A84(v67, v68, v69, v70);
          break;
        case 25:
          v71 = sub_23F923100();
          sub_23F882E70(v71, v72, v73, v74);
          break;
        case 26:
          v75 = sub_23F923100();
          sub_23F88325C(v75, v76, v77, v78);
          break;
        case 27:
          v79 = sub_23F923100();
          sub_23F883648(v79, v80, v81, v82);
          break;
        case 28:
          v83 = sub_23F923100();
          sub_23F883A34(v83, v84, v85, v86);
          break;
        case 29:
          v87 = sub_23F923100();
          sub_23F883E20(v87, v88, v89, v90);
          break;
        case 30:
          v91 = sub_23F923100();
          sub_23F88420C(v91, v92, v93, v94);
          break;
        case 31:
          v95 = sub_23F923100();
          sub_23F8845F8(v95, v96, v97, v98);
          break;
        case 32:
          v99 = sub_23F923100();
          sub_23F8849E4(v99, v100, v101, v102);
          break;
        case 33:
          v103 = sub_23F923100();
          sub_23F884DD0(v103, v104, v105, v106);
          break;
        case 34:
          v107 = sub_23F923100();
          sub_23F8851BC(v107, v108, v109, v110);
          break;
        case 35:
          v111 = sub_23F923100();
          sub_23F8855A8(v111, v112, v113, v114);
          break;
        case 36:
          v115 = sub_23F923100();
          sub_23F885994(v115, v116, v117, v118);
          break;
        case 37:
          v119 = sub_23F923100();
          sub_23F885D80(v119, v120, v121, v122);
          break;
        case 38:
          v123 = sub_23F923100();
          sub_23F88616C(v123, v124, v125, v126);
          break;
        case 39:
          v127 = sub_23F923100();
          sub_23F886558(v127, v128, v129, v130);
          break;
        case 40:
          v131 = sub_23F923100();
          sub_23F886944(v131, v132, v133, v134);
          break;
        case 41:
          v135 = sub_23F923100();
          sub_23F886D30(v135, v136, v137, v138);
          break;
        case 42:
          v139 = sub_23F923100();
          sub_23F88711C(v139, v140, v141, v142);
          break;
        case 43:
          v143 = sub_23F923100();
          sub_23F887508(v143, v144, v145, v146);
          break;
        case 44:
          v147 = sub_23F923100();
          sub_23F8878F4(v147, v148, v149, v150);
          break;
        case 45:
          v151 = sub_23F923100();
          sub_23F887CE0(v151, v152, v153, v154);
          break;
        case 46:
          v155 = sub_23F923100();
          sub_23F8880CC(v155, v156, v157, v158);
          break;
        case 47:
          v159 = sub_23F923100();
          sub_23F8884B4(v159, v160, v161, v162);
          break;
        case 48:
          v163 = sub_23F923100();
          sub_23F8888A0(v163, v164, v165, v166);
          break;
        case 49:
          v167 = sub_23F923100();
          sub_23F888C8C(v167, v168, v169, v170);
          break;
        default:
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D377C();
}

void sub_23F87E9FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoTextQuery(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB46C8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB46C8);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoTextQuery);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoTextQuery);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3B18, type metadata accessor for TranscriptProtoTextQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoTextQuery);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB46C8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB46C8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB46C8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoTextQuery);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB46C8);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoTextQuery);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F87EDE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoSpeechQuery(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB46D0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB46D0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoSpeechQuery);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoSpeechQuery);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3B48, type metadata accessor for TranscriptProtoSpeechQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechQuery);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB46D0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB46D0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB46D0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoSpeechQuery);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB46D0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoSpeechQuery);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F87F1D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoPlan(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB46D8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB46D8);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoPlan);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoPlan);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2D28, type metadata accessor for TranscriptProtoPlan, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlan);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB46D8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB46D8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB46D8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoPlan);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB46D8);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoPlan);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F87F5C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoAction(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EA7E80);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EA7E80);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoAction);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoAction);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EA7F08, type metadata accessor for TranscriptProtoAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoAction);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EA7E80);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EA7E80);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EA7E80);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoAction);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EA7E80);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoAction);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F87F9AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoClientAction(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB46E0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB46E0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoClientAction);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoClientAction);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2A18, type metadata accessor for TranscriptProtoClientAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientAction);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB46E0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB46E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB46E0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoClientAction);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB46E0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoClientAction);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F87FD98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t Step;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  Step = type metadata accessor for TranscriptProtoQueryStep(0);
  v6 = MEMORY[0x24BDAC7A8](Step);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB46E8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, Step);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB46E8);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoQueryStep);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoQueryStep);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, Step);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2E38, type metadata accessor for TranscriptProtoQueryStep, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStep);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB46E8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB46E8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, Step) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB46E8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoQueryStep);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB46E8);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoQueryStep);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F880184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoVariableStep(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB46F0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB46F0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoVariableStep);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoVariableStep);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB31E8, type metadata accessor for TranscriptProtoVariableStep, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableStep);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB46F0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB46F0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB46F0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoVariableStep);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB46F0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoVariableStep);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F880570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoSessionError(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB46F8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 10)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB46F8);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoSessionError);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoSessionError);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2AB8, type metadata accessor for TranscriptProtoSessionError, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionError);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB46F8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB46F8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB46F8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoSessionError);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB46F8);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoSessionError);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F88095C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoClientCustom(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4700);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 12)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4700);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoClientCustom);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoClientCustom);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2A58, type metadata accessor for TranscriptProtoClientCustom, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientCustom);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4700);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4700);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4700);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoClientCustom);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4700);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoClientCustom);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F880D48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _DWORD v25[4];
  uint64_t (*v26)(_QWORD);
  uint64_t *v27;
  uint64_t v28;

  sub_23F6B5220();
  v25[3] = v3;
  v26 = v5;
  v27 = v4;
  v28 = v6;
  sub_23F713FB4(v7, v6, v8, v9, v4);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B52B0();
  sub_23F6916B8(&qword_256EB4328);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v25 - v13;
  v15 = sub_23F9239D4();
  v16 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  sub_23F878A38((uint64_t)v14);
  sub_23F6D3458(&qword_256EB42F0, v16, MEMORY[0x24BE5B938]);
  sub_23FB2D7F0();
  if (v1
    || (sub_23F7A1EDC((uint64_t)v14, v0, &qword_256EB4328),
        v17 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v0, 1, v15), sub_23F6D3930(v0), v17 == 1))
  {
    sub_23F6B4F84((uint64_t)v14, &qword_256EB4328);
  }
  else
  {
    sub_23F7A1EDC(v28, v2, v27);
    v18 = v26(0);
    v19 = sub_23F923D00();
    v21 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v19, v20, v18);
    sub_23F924604();
    if (v21 != 1)
      sub_23FB2D7C0();
    sub_23F6B4F84((uint64_t)v14, &qword_256EB4328);
    sub_23F6B4F84(v28, v27);
    sub_23F6B6190();
    swift_storeEnumTagMultiPayload();
    v22 = sub_23F9244B4();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v22, v23, v24, v18);
  }
  sub_23F6B5100();
}

void sub_23F880F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB46B0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 13)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB46B0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoSystemPromptResolution);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoSystemPromptResolution);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3078, type metadata accessor for TranscriptProtoSystemPromptResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolution);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB46B0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB46B0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB46B0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoSystemPromptResolution);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB46B0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoSystemPromptResolution);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8812FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoActionStepResult(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4708);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 14)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4708);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoActionStepResult);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoActionStepResult);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2998, type metadata accessor for TranscriptProtoActionStepResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionStepResult);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4708);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4708);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4708);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoActionStepResult);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4708);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoActionStepResult);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8816E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t StepResults;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  StepResults = type metadata accessor for TranscriptProtoQueryStepResults(0);
  v6 = MEMORY[0x24BDAC7A8](StepResults);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4710);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, StepResults);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 15)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4710);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoQueryStepResults);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoQueryStepResults);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, StepResults);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2E60, type metadata accessor for TranscriptProtoQueryStepResults, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStepResults);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4710);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4710);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, StepResults) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4710);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoQueryStepResults);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4710);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoQueryStepResults);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F881AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoActionResponse(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4718);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 16)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4718);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoActionResponse);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoActionResponse);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB30A8, type metadata accessor for TranscriptProtoActionResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResponse);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4718);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4718);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4718);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoActionResponse);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4718);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoActionResponse);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F881EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoActionResolverRequest(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4720);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 17)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4720);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoActionResolverRequest);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoActionResolverRequest);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB30C0, type metadata accessor for TranscriptProtoActionResolverRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResolverRequest);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4720);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4720);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4720);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoActionResolverRequest);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4720);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoActionResolverRequest);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8822AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoClientInitiatedClientAction(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4728);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 18)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4728);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoClientInitiatedClientAction);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoClientInitiatedClientAction);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3160, type metadata accessor for TranscriptProtoClientInitiatedClientAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientInitiatedClientAction);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4728);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4728);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4728);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoClientInitiatedClientAction);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4728);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoClientInitiatedClientAction);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F882698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoContextPrewarmRequest(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4730);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 19)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4730);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoContextPrewarmRequest);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoContextPrewarmRequest);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2938, type metadata accessor for TranscriptProtoContextPrewarmRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextPrewarmRequest);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4730);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4730);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4730);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoContextPrewarmRequest);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4730);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoContextPrewarmRequest);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F882A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoContextPrewarmCompleted(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4738);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 20)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4738);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoContextPrewarmCompleted);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoContextPrewarmCompleted);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2950, type metadata accessor for TranscriptProtoContextPrewarmCompleted, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextPrewarmCompleted);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4738);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4738);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4738);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoContextPrewarmCompleted);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4738);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoContextPrewarmCompleted);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F882E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoSafetyModeRelease(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4740);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 21)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4740);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoSafetyModeRelease);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoSafetyModeRelease);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3110, type metadata accessor for TranscriptProtoSafetyModeRelease, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeRelease);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4740);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4740);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4740);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoSafetyModeRelease);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4740);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoSafetyModeRelease);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F88325C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoSafetyModeException(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4748);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 22)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4748);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoSafetyModeException);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoSafetyModeException);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3128, type metadata accessor for TranscriptProtoSafetyModeException, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeException);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4748);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4748);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4748);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoSafetyModeException);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4748);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoSafetyModeException);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F883648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoResponseGenerationRequest(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4750);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 23)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4750);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoResponseGenerationRequest);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoResponseGenerationRequest);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB29D8, type metadata accessor for TranscriptProtoResponseGenerationRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseGenerationRequest);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4750);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4750);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4750);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoResponseGenerationRequest);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4750);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoResponseGenerationRequest);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F883A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t matched;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  matched = type metadata accessor for TranscriptProtoEntitySpanMatchResult(0);
  v6 = MEMORY[0x24BDAC7A8](matched);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4758);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, matched);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 24)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4758);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoEntitySpanMatchResult);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoEntitySpanMatchResult);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, matched);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3908, type metadata accessor for TranscriptProtoEntitySpanMatchResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoEntitySpanMatchResult);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4758);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4758);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, matched) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4758);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoEntitySpanMatchResult);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4758);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoEntitySpanMatchResult);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F883E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoContextRetrieved(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4760);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 25)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4760);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoContextRetrieved);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoContextRetrieved);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB30D8, type metadata accessor for TranscriptProtoContextRetrieved, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextRetrieved);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4760);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4760);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4760);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoContextRetrieved);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4760);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoContextRetrieved);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F88420C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoActionCancellation(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4768);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 26)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4768);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoActionCancellation);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoActionCancellation);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB28C8, type metadata accessor for TranscriptProtoActionCancellation, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionCancellation);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4768);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4768);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4768);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoActionCancellation);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4768);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoActionCancellation);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8845F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoToolRetrievalResponse(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4770);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 27)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4770);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoToolRetrievalResponse);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoToolRetrievalResponse);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3920, type metadata accessor for TranscriptProtoToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolRetrievalResponse);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4770);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4770);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4770);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoToolRetrievalResponse);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4770);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoToolRetrievalResponse);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8849E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoSystemResponse(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4778);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 28)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4778);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoSystemResponse);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoSystemResponse);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3938, type metadata accessor for TranscriptProtoSystemResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemResponse);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4778);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4778);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4778);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoSystemResponse);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4778);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoSystemResponse);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F884DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoStatementResult(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4780);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 29)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4780);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoStatementResult);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoStatementResult);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB1D78, type metadata accessor for TranscriptProtoStatementResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResult);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4780);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4780);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4780);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoStatementResult);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4780);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoStatementResult);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8851BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4788);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 30)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4788);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoExternalAgentTextQuery);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoExternalAgentTextQuery);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3B30, type metadata accessor for TranscriptProtoExternalAgentTextQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentTextQuery);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4788);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4788);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4788);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoExternalAgentTextQuery);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4788);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoExternalAgentTextQuery);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8855A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4790);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 31)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4790);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoExternalAgentSpeechQuery);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoExternalAgentSpeechQuery);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3B60, type metadata accessor for TranscriptProtoExternalAgentSpeechQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentSpeechQuery);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4790);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4790);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4790);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoExternalAgentSpeechQuery);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4790);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoExternalAgentSpeechQuery);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F885994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4798);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 33)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4798);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoExternalAgentOutcome);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoExternalAgentOutcome);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2980, type metadata accessor for TranscriptProtoExternalAgentOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentOutcome);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4798);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4798);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4798);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoExternalAgentOutcome);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4798);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoExternalAgentOutcome);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F885D80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB1C30);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 34)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB1C30);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB27E8, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB1C30);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB1C30);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB1C30);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB1C30);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F88616C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoToolResolution(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB47A0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 35)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB47A0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoToolResolution);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoToolResolution);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB39C8, type metadata accessor for TranscriptProtoToolResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolResolution);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB47A0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB47A0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB47A0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoToolResolution);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB47A0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoToolResolution);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F886558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoUndoRedoRequest(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB47A8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 36)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB47A8);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoUndoRedoRequest);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoUndoRedoRequest);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB39E0, type metadata accessor for TranscriptProtoUndoRedoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoRedoRequest);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB47A8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB47A8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB47A8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoUndoRedoRequest);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB47A8);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoUndoRedoRequest);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F886944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB47B0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 37)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB47B0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoClientUndoRedoRequest);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoClientUndoRedoRequest);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB39F8, type metadata accessor for TranscriptProtoClientUndoRedoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientUndoRedoRequest);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB47B0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB47B0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB47B0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoClientUndoRedoRequest);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB47B0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoClientUndoRedoRequest);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F886D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoRequest(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB47B8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB47B8);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoRequest);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoRequest);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2748, type metadata accessor for TranscriptProtoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequest);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB47B8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB47B8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB47B8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoRequest);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB47B8);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoRequest);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F88711C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoExternalAgentRequest(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB47C0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 32)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB47C0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoExternalAgentRequest);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoExternalAgentRequest);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB27D0, type metadata accessor for TranscriptProtoExternalAgentRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequest);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB47C0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB47C0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB47C0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoExternalAgentRequest);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB47C0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoExternalAgentRequest);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F887508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoTypeConversionRequest(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB47C8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 38)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB47C8);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoTypeConversionRequest);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoTypeConversionRequest);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3A10, type metadata accessor for TranscriptProtoTypeConversionRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoTypeConversionRequest);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB47C8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB47C8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB47C8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoTypeConversionRequest);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB47C8);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoTypeConversionRequest);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8878F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoTypeConversionResult(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB47D0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 39)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB47D0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoTypeConversionResult);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoTypeConversionResult);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3A28, type metadata accessor for TranscriptProtoTypeConversionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoTypeConversionResult);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB47D0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB47D0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB47D0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoTypeConversionResult);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB47D0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoTypeConversionResult);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F887CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t DecorationResult;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  DecorationResult = type metadata accessor for TranscriptProtoQueryDecorationResult(0);
  v6 = MEMORY[0x24BDAC7A8](DecorationResult);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB47D8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, DecorationResult);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 40)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB47D8);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoQueryDecorationResult);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoQueryDecorationResult);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, DecorationResult);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3A40, type metadata accessor for TranscriptProtoQueryDecorationResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationResult);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB47D8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB47D8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, DecorationResult) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB47D8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoQueryDecorationResult);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB47D8);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoQueryDecorationResult);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8880CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoSessionStart(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB47E0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
    else
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB47E0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoSessionStart);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoSessionStart);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2730, type metadata accessor for TranscriptProtoSessionStart, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionStart);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB47E0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB47E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB47E0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoSessionStart);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB47E0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoSessionStart);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8884B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoRecoverableError(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB47E8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 11)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB47E8);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoRecoverableError);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoRecoverableError);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2D40, type metadata accessor for TranscriptProtoRecoverableError, (uint64_t)&protocol conformance descriptor for TranscriptProtoRecoverableError);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB47E8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB47E8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB47E8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoRecoverableError);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB47E8);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoRecoverableError);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8888A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoContinuePlanning(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB47F0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 41)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB47F0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoContinuePlanning);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoContinuePlanning);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3B78, type metadata accessor for TranscriptProtoContinuePlanning, (uint64_t)&protocol conformance descriptor for TranscriptProtoContinuePlanning);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB47F0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB47F0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB47F0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoContinuePlanning);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB47F0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoContinuePlanning);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F888C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t DecorationPrePlannerResult;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  DecorationPrePlannerResult = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
  v6 = MEMORY[0x24BDAC7A8](DecorationPrePlannerResult);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB47F8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, DecorationPrePlannerResult);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EAB758);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EAB758);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 42)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB47F8);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, DecorationPrePlannerResult);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3A58, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResult);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB47F8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB47F8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, DecorationPrePlannerResult) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB47F8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB47F8);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EAB758);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void TranscriptProtoPayload.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_23F6D3EA4();
  sub_23F6B5D98();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B59F8();
  sub_23F923368(v10, v10);
  type metadata accessor for TranscriptProtoPayloadEnum(0);
  sub_23F923310(v10);
  if (v12)
  {
    type metadata accessor for TranscriptProtoPayload(0);
    sub_23F9231A8();
    sub_23F77E0B0();
    sub_23F6D3750();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_23F88910C + 4 * byte_23FB74C0A[EnumCaseMultiPayload]))(EnumCaseMultiPayload, v14, v15, v16, v17, v18, v19, v20, a9, a10);
  }
}

void sub_23F889364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_23F6D3D7C();
  sub_23F889EB8(v1, v2, v3, v4);
  if (!v0)
    JUMPOUT(0x23F88933CLL);
  JUMPOUT(0x23F889358);
}

void sub_23F889370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_23F6D3D7C();
  sub_23F88A498(v1, v2, v3, v4);
  if (!v0)
    JUMPOUT(0x23F88933CLL);
  JUMPOUT(0x23F889358);
}

void sub_23F88937C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_23F6D3D7C();
  sub_23F88A628(v0, v1, v2, v3);
  JUMPOUT(0x23F889384);
}

void sub_23F889390(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoTextQuery(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoTextQuery);
      sub_23F6D3458(&qword_256EB3B18, type metadata accessor for TranscriptProtoTextQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoTextQuery);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoTextQuery);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F889528(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSpeechQuery(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSpeechQuery);
      sub_23F6D3458(&qword_256EB3B48, type metadata accessor for TranscriptProtoSpeechQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechQuery);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoSpeechQuery);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F8896C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoPlan(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoPlan);
      sub_23F6D3458(&qword_256EB2D28, type metadata accessor for TranscriptProtoPlan, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlan);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoPlan);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F889858(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoAction(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoAction);
      sub_23F6D3458(&qword_256EA7F08, type metadata accessor for TranscriptProtoAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoAction);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoAction);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F8899F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoClientAction(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoClientAction);
      sub_23F6D3458(&qword_256EB2A18, type metadata accessor for TranscriptProtoClientAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientAction);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoClientAction);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F889B88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t Step;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  Step = type metadata accessor for TranscriptProtoQueryStep(0);
  MEMORY[0x24BDAC7A8](Step);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoQueryStep);
      sub_23F6D3458(&qword_256EB2E38, type metadata accessor for TranscriptProtoQueryStep, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStep);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoQueryStep);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F889D20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoVariableStep(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoVariableStep);
      sub_23F6D3458(&qword_256EB31E8, type metadata accessor for TranscriptProtoVariableStep, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableStep);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoVariableStep);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F889EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = sub_23FB2D6AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v11, &qword_256EAB758);
  v12 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EAB758);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoPayloadEnum);
    if (EnumCaseMultiPayload == 43)
    {
      MEMORY[0x242672324]();
      sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_23FB2D94C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return;
    }
  }
  __break(1u);
}

void sub_23F88A048(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v5 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      sub_23FB2D9A0();
      swift_bridgeObjectRelease();
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88A168(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSessionError(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 10)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSessionError);
      sub_23F6D3458(&qword_256EB2AB8, type metadata accessor for TranscriptProtoSessionError, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionError);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoSessionError);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88A300(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoClientCustom(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 12)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoClientCustom);
      sub_23F6D3458(&qword_256EB2A58, type metadata accessor for TranscriptProtoClientCustom, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientCustom);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoClientCustom);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88A498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = sub_23FB2D6AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v11, &qword_256EAB758);
  v12 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EAB758);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoPayloadEnum);
    if (EnumCaseMultiPayload == 44)
    {
      MEMORY[0x242672324]();
      sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_23FB2D94C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return;
    }
  }
  __break(1u);
}

void sub_23F88A628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = sub_23FB2D6AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v11, &qword_256EAB758);
  v12 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EAB758);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoPayloadEnum);
    if (EnumCaseMultiPayload == 45)
    {
      MEMORY[0x242672324]();
      sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_23FB2D94C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return;
    }
  }
  __break(1u);
}

void sub_23F88A7B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 13)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSystemPromptResolution);
      sub_23F6D3458(&qword_256EB3078, type metadata accessor for TranscriptProtoSystemPromptResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolution);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoSystemPromptResolution);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88A950(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoActionStepResult(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 14)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoActionStepResult);
      sub_23F6D3458(&qword_256EB2998, type metadata accessor for TranscriptProtoActionStepResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionStepResult);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoActionStepResult);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88AAE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t StepResults;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  StepResults = type metadata accessor for TranscriptProtoQueryStepResults(0);
  MEMORY[0x24BDAC7A8](StepResults);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 15)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoQueryStepResults);
      sub_23F6D3458(&qword_256EB2E60, type metadata accessor for TranscriptProtoQueryStepResults, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStepResults);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoQueryStepResults);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88AC80(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoActionResponse(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 16)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoActionResponse);
      sub_23F6D3458(&qword_256EB30A8, type metadata accessor for TranscriptProtoActionResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResponse);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoActionResponse);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88AE18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoActionResolverRequest(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 17)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoActionResolverRequest);
      sub_23F6D3458(&qword_256EB30C0, type metadata accessor for TranscriptProtoActionResolverRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResolverRequest);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoActionResolverRequest);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88AFB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoClientInitiatedClientAction(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 18)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoClientInitiatedClientAction);
      sub_23F6D3458(&qword_256EB3160, type metadata accessor for TranscriptProtoClientInitiatedClientAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientInitiatedClientAction);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoClientInitiatedClientAction);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88B148(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoContextPrewarmRequest(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 19)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoContextPrewarmRequest);
      sub_23F6D3458(&qword_256EB2938, type metadata accessor for TranscriptProtoContextPrewarmRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextPrewarmRequest);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoContextPrewarmRequest);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88B2E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoContextPrewarmCompleted(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 20)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoContextPrewarmCompleted);
      sub_23F6D3458(&qword_256EB2950, type metadata accessor for TranscriptProtoContextPrewarmCompleted, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextPrewarmCompleted);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoContextPrewarmCompleted);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88B478(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSafetyModeRelease(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 21)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSafetyModeRelease);
      sub_23F6D3458(&qword_256EB3110, type metadata accessor for TranscriptProtoSafetyModeRelease, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeRelease);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoSafetyModeRelease);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88B610(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSafetyModeException(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 22)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSafetyModeException);
      sub_23F6D3458(&qword_256EB3128, type metadata accessor for TranscriptProtoSafetyModeException, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeException);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoSafetyModeException);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88B7A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoResponseGenerationRequest(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 23)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoResponseGenerationRequest);
      sub_23F6D3458(&qword_256EB29D8, type metadata accessor for TranscriptProtoResponseGenerationRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseGenerationRequest);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoResponseGenerationRequest);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88B940(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t matched;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  matched = type metadata accessor for TranscriptProtoEntitySpanMatchResult(0);
  MEMORY[0x24BDAC7A8](matched);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 24)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoEntitySpanMatchResult);
      sub_23F6D3458(&qword_256EB3908, type metadata accessor for TranscriptProtoEntitySpanMatchResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoEntitySpanMatchResult);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoEntitySpanMatchResult);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88BAD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoContextRetrieved(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 25)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoContextRetrieved);
      sub_23F6D3458(&qword_256EB30D8, type metadata accessor for TranscriptProtoContextRetrieved, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextRetrieved);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoContextRetrieved);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88BC70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoActionCancellation(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 26)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoActionCancellation);
      sub_23F6D3458(&qword_256EB28C8, type metadata accessor for TranscriptProtoActionCancellation, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionCancellation);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoActionCancellation);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88BE08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoToolRetrievalResponse(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 27)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoToolRetrievalResponse);
      sub_23F6D3458(&qword_256EB3920, type metadata accessor for TranscriptProtoToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolRetrievalResponse);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoToolRetrievalResponse);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88BFA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSystemResponse(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 28)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSystemResponse);
      sub_23F6D3458(&qword_256EB3938, type metadata accessor for TranscriptProtoSystemResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemResponse);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoSystemResponse);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88C138(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementResult(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 29)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementResult);
      sub_23F6D3458(&qword_256EB1D78, type metadata accessor for TranscriptProtoStatementResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResult);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementResult);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88C2D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 30)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoExternalAgentTextQuery);
      sub_23F6D3458(&qword_256EB3B30, type metadata accessor for TranscriptProtoExternalAgentTextQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentTextQuery);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoExternalAgentTextQuery);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88C468(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 31)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoExternalAgentSpeechQuery);
      sub_23F6D3458(&qword_256EB3B60, type metadata accessor for TranscriptProtoExternalAgentSpeechQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentSpeechQuery);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoExternalAgentSpeechQuery);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88C600(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 33)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoExternalAgentOutcome);
      sub_23F6D3458(&qword_256EB2980, type metadata accessor for TranscriptProtoExternalAgentOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentOutcome);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoExternalAgentOutcome);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88C798(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 34)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
      sub_23F6D3458(&qword_256EB27E8, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequestRewriteMetadata);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88C930(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoToolResolution(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 35)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoToolResolution);
      sub_23F6D3458(&qword_256EB39C8, type metadata accessor for TranscriptProtoToolResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolResolution);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoToolResolution);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88CAC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoUndoRedoRequest(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 36)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoUndoRedoRequest);
      sub_23F6D3458(&qword_256EB39E0, type metadata accessor for TranscriptProtoUndoRedoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoRedoRequest);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoUndoRedoRequest);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88CC60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 37)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoClientUndoRedoRequest);
      sub_23F6D3458(&qword_256EB39F8, type metadata accessor for TranscriptProtoClientUndoRedoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientUndoRedoRequest);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoClientUndoRedoRequest);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88CDF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoRequest(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoRequest);
      sub_23F6D3458(&qword_256EB2748, type metadata accessor for TranscriptProtoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequest);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoRequest);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88CF90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoExternalAgentRequest(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 32)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoExternalAgentRequest);
      sub_23F6D3458(&qword_256EB27D0, type metadata accessor for TranscriptProtoExternalAgentRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequest);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoExternalAgentRequest);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88D128(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoTypeConversionRequest(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 38)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoTypeConversionRequest);
      sub_23F6D3458(&qword_256EB3A10, type metadata accessor for TranscriptProtoTypeConversionRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoTypeConversionRequest);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoTypeConversionRequest);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88D2C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoTypeConversionResult(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 39)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoTypeConversionResult);
      sub_23F6D3458(&qword_256EB3A28, type metadata accessor for TranscriptProtoTypeConversionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoTypeConversionResult);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoTypeConversionResult);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88D458(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t DecorationResult;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationResult = type metadata accessor for TranscriptProtoQueryDecorationResult(0);
  MEMORY[0x24BDAC7A8](DecorationResult);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 40)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationResult);
      sub_23F6D3458(&qword_256EB3A40, type metadata accessor for TranscriptProtoQueryDecorationResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationResult);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationResult);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88D5F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSessionStart(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSessionStart);
      sub_23F6D3458(&qword_256EB2730, type metadata accessor for TranscriptProtoSessionStart, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionStart);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoSessionStart);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88D784(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoRecoverableError(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 11)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoRecoverableError);
      sub_23F6D3458(&qword_256EB2D40, type metadata accessor for TranscriptProtoRecoverableError, (uint64_t)&protocol conformance descriptor for TranscriptProtoRecoverableError);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoRecoverableError);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88D91C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoContinuePlanning(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 41)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoContinuePlanning);
      sub_23F6D3458(&qword_256EB3B78, type metadata accessor for TranscriptProtoContinuePlanning, (uint64_t)&protocol conformance descriptor for TranscriptProtoContinuePlanning);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoContinuePlanning);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void sub_23F88DAB4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t DecorationPrePlannerResult;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB758);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationPrePlannerResult = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
  MEMORY[0x24BDAC7A8](DecorationPrePlannerResult);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB758);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB758);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 42)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult);
      sub_23F6D3458(&qword_256EB3A58, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResult);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
}

void static TranscriptProtoPayload.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F6B50E8();
  v5 = v4;
  v39 = sub_23F6B53A4();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v39);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = sub_23F6D38F8(v9, v10, v11, v12, v13, v14, v15, v16, v40);
  type metadata accessor for TranscriptProtoPayloadEnum(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B59E0();
  v19 = sub_23F6916B8(&qword_256EB1BF0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6D3A70();
  v24 = MEMORY[0x24BDAC7A8](v23);
  sub_23F923124(v24, v25, v26, v27, v28, v29, v30, v31, v41);
  sub_23F923164(v5, v0);
  v32 = v1 + *(int *)(v19 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v32);
  v33 = sub_23F9230E4(v1);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v35 = sub_23F9230E4(v32);
    if (v36)
    {
      sub_23F6D378C(v35, &qword_256EAB758);
LABEL_11:
      v38 = type metadata accessor for TranscriptProtoPayload(0);
      sub_23F6D3794(v38);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v33, v34, &qword_256EAB758);
  sub_23F9230E4(v32);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v37, type metadata accessor for TranscriptProtoPayloadEnum);
LABEL_9:
    sub_23F6D378C(v35, &qword_256EB1BF0);
    goto LABEL_12;
  }
  sub_23F923270();
  sub_23F6D3D70();
  static TranscriptProtoPayloadEnum.== infix(_:_:)();
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoPayload.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoPayload, &qword_256EB1BF8, (uint64_t)&protocol conformance descriptor for TranscriptProtoPayload);
}

unint64_t sub_23F88DE80()
{
  static TranscriptProtoPayload.protoMessageName.getter();
  return 0xD000000000000012;
}

void sub_23F88DEA4()
{
  TranscriptProtoPayload.decodeMessage<A>(decoder:)();
}

void sub_23F88DEB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  TranscriptProtoPayload.traverse<A>(visitor:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_23F88DECC()
{
  sub_23F6D3458(&qword_256EB42B0, type metadata accessor for TranscriptProtoPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPayload);
  return sub_23FB2D784();
}

uint64_t sub_23F88DF20()
{
  sub_23F6D3458(&qword_256EB26F0, type metadata accessor for TranscriptProtoPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPayload);
  return sub_23FB2D8F8();
}

uint64_t sub_23F88DF64()
{
  sub_23F6D3458(&qword_256EB26F0, type metadata accessor for TranscriptProtoPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPayload);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoTranscript.protoMessageName.getter()
{
  return sub_23F6D3738(21);
}

uint64_t sub_23F88DFD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0628);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0628);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "sessionId";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "clientSessionId";
  *((_QWORD *)v11 + 1) = 15;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "events";
  *((_QWORD *)v13 + 1) = 6;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoTranscript._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0B50, (uint64_t)qword_256EB0628, a1);
}

void TranscriptProtoTranscript.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6D3DC4();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 3:
          sub_23F8B4908();
          break;
        case 2:
          sub_23F6D37D4();
          break;
        case 1:
          sub_23F923334();
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D3710();
}

void TranscriptProtoTranscript.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F6D3DC4();
  sub_23F6D36FC();
  if (!v1 || (sub_23F923258(), !v0))
  {
    v2 = sub_23F924648();
    sub_23F90E71C(v2);
    if (!v0)
    {
      sub_23F924550();
      if (v3)
      {
        type metadata accessor for TranscriptProtoEvent(0);
        sub_23F6D3458(&qword_256EA71F0, type metadata accessor for TranscriptProtoEvent, (uint64_t)&protocol conformance descriptor for TranscriptProtoEvent);
        sub_23F923350();
      }
      type metadata accessor for TranscriptProtoTranscript(0);
      sub_23F9231A8();
    }
  }
  sub_23F6D3710();
}

#error "23F88E370: call analysis failed (funcsize=59)"

uint64_t TranscriptProtoTranscript.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoTranscript, &qword_256EB1C00, (uint64_t)&protocol conformance descriptor for TranscriptProtoTranscript);
}

unint64_t sub_23F88E3F4()
{
  static TranscriptProtoTranscript.protoMessageName.getter();
  return 0xD000000000000015;
}

void sub_23F88E418()
{
  TranscriptProtoTranscript.decodeMessage<A>(decoder:)();
}

void sub_23F88E42C()
{
  TranscriptProtoTranscript.traverse<A>(visitor:)();
}

uint64_t sub_23F88E440()
{
  sub_23F6D3458(&qword_256EB42A8, type metadata accessor for TranscriptProtoTranscript, (uint64_t)&protocol conformance descriptor for TranscriptProtoTranscript);
  return sub_23FB2D784();
}

uint64_t sub_23F88E494()
{
  sub_23F6D3458(&qword_256EA29A0, type metadata accessor for TranscriptProtoTranscript, (uint64_t)&protocol conformance descriptor for TranscriptProtoTranscript);
  return sub_23FB2D8F8();
}

uint64_t sub_23F88E4D8()
{
  sub_23F6D3458(&qword_256EA29A0, type metadata accessor for TranscriptProtoTranscript, (uint64_t)&protocol conformance descriptor for TranscriptProtoTranscript);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoTimepoint.protoMessageName.getter()
{
  return sub_23F6D3738(20);
}

uint64_t sub_23F88E544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0640);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0640);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1C0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "rawDate";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "suspendingClockInstantNs";
  *(_QWORD *)(v11 + 8) = 24;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "continuousClockInstantNs";
  *((_QWORD *)v13 + 1) = 24;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "rawBootSessionUUID";
  *((_QWORD *)v15 + 1) = 18;
  v15[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoTimepoint._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0B58, (uint64_t)qword_256EB0640, a1);
}

void TranscriptProtoTimepoint.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;

  sub_23F6B5220();
  sub_23F6D356C();
  if (!v12)
  {
    while ((v13 & 1) == 0)
    {
      sub_23F6D3E98();
      if (!(!v24 & v23))
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_23F88E778 + 4 * byte_23FB74C38[v22]))(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10, a11, a12);
        return;
      }
      sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoTimepoint.traverse<A>(visitor:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_23F92367C();
  sub_23F88E878(v2, v3, v4, v5);
  if (!v0)
  {
    if (*v1)
      sub_23F924528();
    if (v1[1])
      sub_23F924528();
    sub_23F6D36FC();
    if (v6)
      sub_23F6D376C();
    type metadata accessor for TranscriptProtoTimepoint(0);
    sub_23F6D37BC();
  }
  sub_23F6D3674();
}

void sub_23F88E878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v13[2];

  v13[1] = a4;
  v5 = sub_23F6916B8(&qword_256EA86E0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23FB2D6D0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoTimepoint(0);
  sub_23F7A1EDC(a1 + *(int *)(v12 + 28), (uint64_t)v7, &qword_256EA86E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v7, &qword_256EA86E0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    sub_23F6D3458(&qword_256EB46C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B980]);
    sub_23FB2D9D0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

void static TranscriptProtoTimepoint.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  void (*v39)(uint64_t);
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  v8 = sub_23F6B53A4();
  v50 = *(_QWORD *)(v8 - 8);
  v51 = v8;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v49 = (uint64_t)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  v12 = MEMORY[0x24BDAC7A8](v11);
  sub_23F923890(v12, v13, v14, v15, v16, v17, v18, v19, v46);
  v20 = sub_23FB2D6D0();
  v55 = *(_QWORD *)(v20 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B5C10(v22, v46);
  v23 = sub_23F6916B8(&qword_256EB1BC8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6B53AC();
  sub_23F72E4BC();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F6B65E0();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F6D3A70();
  MEMORY[0x24BDAC7A8](v27);
  v28 = sub_23F6B62E4();
  v29 = type metadata accessor for TranscriptProtoTimepoint(v28);
  v30 = *(int *)(v29 + 28);
  v53 = v7;
  sub_23F923300((uint64_t)v7 + v30, v0);
  v47 = v29;
  v31 = *(int *)(v29 + 28);
  v54 = v5;
  sub_23F923300((uint64_t)v5 + v31, v1);
  v32 = v2 + *(int *)(v23 + 48);
  sub_23F923300(v0, v2);
  sub_23F923300(v1, v32);
  sub_23F6B5164(v2, 1, v20);
  if (!v35)
  {
    sub_23F923760(v2, v33, &qword_256EA86E0);
    sub_23F6B5164(v32, 1, v20);
    if (!v35)
    {
      v36 = v55;
      v37 = v52;
      sub_23F6D3ECC(v52, v32, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 32));
      sub_23F6D3458(&qword_256EB1BE0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B9A0]);
      sub_23F78F5B0();
      v38 = sub_23F6B5624();
      v39 = *(void (**)(uint64_t))(v36 + 8);
      sub_23F9244DC(v37);
      sub_23F6B62DC(v1);
      sub_23F6B62DC(v0);
      v40 = sub_23F7F64A8();
      v39(v40);
      sub_23F6B62DC(v2);
      if ((v38 & 1) == 0)
        goto LABEL_19;
      goto LABEL_11;
    }
    sub_23F6B64F4(v1);
    sub_23F6B64F4(v0);
    v34 = sub_23F7B0990(v3, *(uint64_t (**)(uint64_t, uint64_t))(v55 + 8));
LABEL_9:
    sub_23F6B6034(v34, &qword_256EB1BC8);
    goto LABEL_19;
  }
  sub_23F6B62DC(v1);
  sub_23F6B62DC(v0);
  v34 = sub_23F6B5164(v32, 1, v20);
  if (!v35)
    goto LABEL_9;
  sub_23F6B6034(v34, &qword_256EA86E0);
LABEL_11:
  v42 = v53;
  v41 = v54;
  if (*v53 == *v54 && v53[1] == v54[1])
  {
    v43 = v53[2] == v54[2] && v53[3] == v54[3];
    if (v43 || (sub_23F6B5280() & 1) != 0)
    {
      v44 = v47;
      v45 = v48;
      sub_23F6D3818(v48, (uint64_t)v42 + *(int *)(v47 + 32));
      sub_23F6D3818(v49, (uint64_t)v41 + *(int *)(v44 + 32));
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F923230();
      sub_23F9232DC();
      sub_23F6D3874(v45);
    }
  }
LABEL_19:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoTimepoint.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoTimepoint, &qword_256EB1C08, (uint64_t)&protocol conformance descriptor for TranscriptProtoTimepoint);
}

unint64_t sub_23F88ED20()
{
  static TranscriptProtoTimepoint.protoMessageName.getter();
  return 0xD000000000000014;
}

#error "23F88ED4C: call analysis failed (funcsize=5)"

void sub_23F88ED58()
{
  TranscriptProtoTimepoint.traverse<A>(visitor:)();
}

uint64_t sub_23F88ED6C()
{
  sub_23F6D3458(&qword_256EB42A0, type metadata accessor for TranscriptProtoTimepoint, (uint64_t)&protocol conformance descriptor for TranscriptProtoTimepoint);
  return sub_23FB2D784();
}

uint64_t sub_23F88EDC0()
{
  sub_23F6D3458(&qword_256EB2718, type metadata accessor for TranscriptProtoTimepoint, (uint64_t)&protocol conformance descriptor for TranscriptProtoTimepoint);
  return sub_23FB2D8F8();
}

uint64_t sub_23F88EE04()
{
  sub_23F6D3458(&qword_256EB2718, type metadata accessor for TranscriptProtoTimepoint, (uint64_t)&protocol conformance descriptor for TranscriptProtoTimepoint);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoSessionStart.protoMessageName.getter()
{
  return sub_23F6D3738(23);
}

uint64_t sub_23F88EE70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0658);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0658);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 2;
  *(_QWORD *)v7 = "initialLocaleSettings";
  *(_QWORD *)(v7 + 8) = 21;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 3;
  *(_QWORD *)v11 = "originatingDevice";
  *((_QWORD *)v11 + 1) = 17;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 4;
  *(_QWORD *)v13 = "originatingDeviceWasLocal";
  *((_QWORD *)v13 + 1) = 25;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoSessionStart._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0B60, (uint64_t)qword_256EB0658, a1);
}

void TranscriptProtoSessionStart.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 4:
          sub_23F6D3F00();
          break;
        case 3:
          sub_23F6D38E0();
          sub_23F923998();
          break;
        case 2:
          sub_23F92360C();
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoSessionStart.traverse<A>(visitor:)()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_23F92367C();
  sub_23F88F14C(v2);
  if (!v0)
  {
    sub_23F6D3664();
    sub_23F88F2BC(v3);
    if (*v1 == 1)
      sub_23F6D369C();
    type metadata accessor for TranscriptProtoSessionStart(0);
    sub_23F6D37BC();
  }
  sub_23F6D3674();
}

void sub_23F88F14C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA86D0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoLocaleSettings(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoSessionStart(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA86D0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA86D0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoLocaleSettings);
    sub_23F6D3458(&qword_256EB3970, type metadata accessor for TranscriptProtoLocaleSettings, (uint64_t)&protocol conformance descriptor for TranscriptProtoLocaleSettings);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoLocaleSettings);
  }
}

void sub_23F88F2BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA86C0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoDeviceDetails(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoSessionStart(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_256EA86C0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA86C0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoDeviceDetails);
    sub_23F6D3458(&qword_256EB39A0, type metadata accessor for TranscriptProtoDeviceDetails, (uint64_t)&protocol conformance descriptor for TranscriptProtoDeviceDetails);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoDeviceDetails);
  }
}

void static TranscriptProtoSessionStart.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int8 *v49;
  uint64_t v50;
  unsigned __int8 *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned __int8 *v78;
  unsigned __int8 *v79;

  sub_23F6B50E8();
  v79 = v5;
  v7 = v6;
  v8 = sub_23F6B53A4();
  v69 = *(_QWORD *)(v8 - 8);
  v70 = v8;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v68 = (uint64_t)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v11);
  v67 = (uint64_t)&v66 - v12;
  v13 = sub_23F6D398C();
  v76 = type metadata accessor for TranscriptProtoDeviceDetails(v13);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B5598(v15, v66);
  v73 = sub_23F6916B8(&qword_256EB1C10);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B5BD8(v17, v66);
  sub_23F6916B8(&qword_256EA86C0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  v72 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v20);
  v74 = (uint64_t)&v66 - v21;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v22);
  v75 = (uint64_t)&v66 - v23;
  v24 = sub_23F6D398C();
  v25 = type metadata accessor for TranscriptProtoLocaleSettings(v24);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F6B59E0();
  v27 = sub_23F6916B8(&qword_256EB1C18);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F6B52B0();
  sub_23F6B5D90();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F6D3F60();
  MEMORY[0x24BDAC7A8](v31);
  v32 = sub_23F923B4C();
  v33 = type metadata accessor for TranscriptProtoSessionStart(v32);
  v34 = *(int *)(v33 + 20);
  v78 = v7;
  sub_23F923B18((uint64_t)&v7[v34], v2);
  v35 = v33;
  sub_23F923B18((uint64_t)&v79[*(int *)(v33 + 20)], v0);
  v36 = v1 + *(int *)(v27 + 48);
  v37 = sub_23F72E2E0();
  sub_23F923B18(v37, v38);
  sub_23F923B18(v0, v36);
  sub_23F6B5164(v1, 1, v25);
  if (v41)
  {
    sub_23F6D387C(v0);
    sub_23F6D387C(v2);
    v40 = sub_23F6B5164(v36, 1, v25);
    if (v41)
    {
      sub_23F923588(v40, &qword_256EA86D0);
      goto LABEL_11;
    }
LABEL_9:
    v43 = &qword_256EB1C18;
    v44 = v1;
LABEL_20:
    sub_23F6B4F84(v44, v43);
    goto LABEL_21;
  }
  sub_23F923370(v1, v39, &qword_256EA86D0);
  sub_23F6B5164(v36, 1, v25);
  if (v41)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v2);
    sub_23F6D3C24(v42, type metadata accessor for TranscriptProtoLocaleSettings);
    goto LABEL_9;
  }
  sub_23F92380C(v36, v3);
  sub_23F6D3D70();
  static TranscriptProtoLocaleSettings.== infix(_:_:)();
  v46 = v45;
  sub_23F77DAB0(v3);
  sub_23F6D387C(v0);
  sub_23F6D387C(v2);
  sub_23F77DAB0(v4);
  sub_23F6D387C(v1);
  if ((v46 & 1) == 0)
    goto LABEL_21;
LABEL_11:
  v47 = v33;
  v48 = *(int *)(v33 + 24);
  v49 = v78;
  v50 = v75;
  sub_23F92344C((uint64_t)&v78[v48], v75);
  v51 = v79;
  v52 = v74;
  sub_23F92344C((uint64_t)&v79[*(int *)(v35 + 24)], v74);
  v53 = v77;
  v54 = v77 + *(int *)(v73 + 48);
  sub_23F92344C(v50, v77);
  sub_23F92344C(v52, v54);
  v55 = v76;
  sub_23F6B5164(v53, 1, v76);
  if (!v41)
  {
    v58 = (uint64_t)v72;
    sub_23F923BFC(v53, v56, &qword_256EA86C0);
    sub_23F6B5164(v54, 1, v55);
    if (!v59)
    {
      v61 = v71;
      sub_23F923774(v54, v71);
      sub_23F72E3F8();
      static TranscriptProtoDeviceDetails.== infix(_:_:)();
      v63 = v62;
      sub_23F77DB60(v61);
      sub_23F6B62DC(v52);
      sub_23F6B62DC(v50);
      sub_23F77DB60(v58);
      sub_23F6B62DC(v53);
      if ((v63 & 1) == 0)
        goto LABEL_21;
      goto LABEL_23;
    }
    sub_23F6D3748(v52);
    sub_23F6D3748(v50);
    sub_23F7E7834(v60, type metadata accessor for TranscriptProtoDeviceDetails);
    goto LABEL_19;
  }
  sub_23F6D3C1C(v52);
  sub_23F6D3C1C(v50);
  v57 = sub_23F6B5164(v54, 1, v55);
  if (!v41)
  {
LABEL_19:
    v43 = &qword_256EB1C10;
    v44 = v53;
    goto LABEL_20;
  }
  sub_23F9239A0(v57, &qword_256EA86C0);
LABEL_23:
  if (*v49 == *v51)
  {
    v64 = v67;
    sub_23F713F84(v67, (uint64_t)&v49[*(int *)(v47 + 28)]);
    v65 = v68;
    sub_23F713F84(v68, (uint64_t)&v51[*(int *)(v47 + 28)]);
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F6B6060();
    sub_23F9243AC(v65);
    sub_23F9243AC(v64);
  }
LABEL_21:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoSessionStart.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoSessionStart, &qword_256EB1C20, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionStart);
}

unint64_t sub_23F88F930()
{
  static TranscriptProtoSessionStart.protoMessageName.getter();
  return 0xD000000000000017;
}

void sub_23F88F954()
{
  TranscriptProtoSessionStart.decodeMessage<A>(decoder:)();
}

void sub_23F88F968()
{
  TranscriptProtoSessionStart.traverse<A>(visitor:)();
}

uint64_t sub_23F88F97C()
{
  sub_23F6D3458(&qword_256EB4298, type metadata accessor for TranscriptProtoSessionStart, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionStart);
  return sub_23FB2D784();
}

uint64_t sub_23F88F9D0()
{
  sub_23F6D3458(&qword_256EB2730, type metadata accessor for TranscriptProtoSessionStart, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionStart);
  return sub_23FB2D8F8();
}

uint64_t sub_23F88FA14()
{
  sub_23F6D3458(&qword_256EB2730, type metadata accessor for TranscriptProtoSessionStart, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionStart);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoRequest.protoMessageName.getter()
{
  return sub_23F6D3738(18);
}

uint64_t sub_23F88FA80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0670);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0670);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F190;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "content";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "safetyMode";
  *(_QWORD *)(v11 + 8) = 10;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "prescribedPlan";
  *((_QWORD *)v13 + 1) = 14;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "rawRewriteMetadataEventId";
  *((_QWORD *)v15 + 1) = 25;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "rewriteMetadataInlined";
  *((_QWORD *)v17 + 1) = 22;
  v17[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0B68, (uint64_t)qword_256EB0670, a1);
}

void TranscriptProtoRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;

  sub_23F6B5220();
  sub_23F6D356C();
  if (!v12)
  {
    while ((v13 & 1) == 0)
    {
      sub_23F923FB0();
      if (!(!v24 & v23))
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_23F88FCF8 + 4 * byte_23FB74C3C[v22]))(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10, a11, a12);
        return;
      }
      sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void sub_23F88FD7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  sub_23F6B5220();
  sub_23F923498(v0, v1, v2, v3, v4);
  sub_23F6D3A84();
  sub_23F6D3724();
  sub_23F6D3644();
  sub_23F6B5100();
}

void sub_23F88FDAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  sub_23F6B5220();
  sub_23F923498(v0, v1, v2, v3, v4);
  sub_23F6D3A84();
  sub_23F6D3724();
  sub_23F6D3644();
  sub_23F6B5100();
}

void TranscriptProtoRequest.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_23F92367C();
  sub_23F88FEA0(v4);
  if (!v0)
  {
    if (*v2 == 1)
      sub_23F6D369C();
    sub_23F6D3664();
    sub_23F890010(v5);
    sub_23F924184((uint64_t)v2, v3, v1, v6, type metadata accessor for TranscriptProtoRequest);
    sub_23F6D3664();
    sub_23F890180(v7);
    type metadata accessor for TranscriptProtoRequest(0);
    sub_23F6D37BC();
  }
  sub_23F6D3674();
}

void sub_23F88FEA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA86A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoRequestContent(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoRequest(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA86A0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA86A0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoRequestContent);
    sub_23F6D3458(&qword_256EB2760, type metadata accessor for TranscriptProtoRequestContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContent);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoRequestContent);
  }
}

void sub_23F890010(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA8698);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoRequest(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_256EA8698);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA8698);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoRequestPrescribedPlan);
    sub_23F6D3458(&qword_256EB2800, type metadata accessor for TranscriptProtoRequestPrescribedPlan, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlan);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoRequestPrescribedPlan);
  }
}

void sub_23F890180(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB1C30);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoRequest(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 32), (uint64_t)v4, &qword_256EB1C30);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB1C30);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    sub_23F6D3458(&qword_256EB27E8, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  }
}

void static TranscriptProtoRequest.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  char v51;
  char v52;
  unsigned __int8 *v53;
  unsigned __int8 *v54;
  int *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  BOOL v91;
  char v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int *v113;
  unsigned __int8 *v114;
  unsigned __int8 *v115;

  sub_23F6B50E8();
  v115 = v5;
  v7 = v6;
  v8 = sub_23F6B53A4();
  v98 = *(_QWORD *)(v8 - 8);
  v99 = v8;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v97 = (uint64_t)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v11);
  v96 = (uint64_t)&v95 - v12;
  v105 = sub_23F9246AC();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F70D7DC(v14, v95);
  v101 = sub_23F6916B8(&qword_256EB1C28);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B5404(v16, v95);
  sub_23F6916B8(&qword_256EB1C30);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  v100 = (char *)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v19);
  v103 = (char *)&v95 - v20;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v21);
  v104 = (char *)&v95 - v22;
  v23 = sub_23F6D398C();
  v111 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(v23);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6B51A4();
  v102 = v25;
  v108 = sub_23F6916B8(&qword_256EB1C38);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F6B5420(v27, v95);
  sub_23F6916B8(&qword_256EA8698);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v28);
  v107 = (char *)&v95 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v30);
  v109 = (uint64_t)&v95 - v31;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v32);
  v110 = (uint64_t)&v95 - v33;
  v34 = sub_23F924B30();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F6B59E0();
  v36 = sub_23F6916B8(&qword_256EB1C40);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F693EB0();
  sub_23F6B6088();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F6D3BD8();
  MEMORY[0x24BDAC7A8](v40);
  v41 = sub_23F923B4C();
  v42 = type metadata accessor for TranscriptProtoRequest(v41);
  v43 = *(int *)(v42 + 20);
  v114 = v7;
  sub_23F92344C((uint64_t)&v7[v43], v2);
  v113 = (int *)v42;
  v44 = v115;
  sub_23F92344C((uint64_t)&v115[*(int *)(v42 + 20)], v0);
  v45 = v1 + *(int *)(v36 + 48);
  sub_23F92344C(v2, v1);
  sub_23F92344C(v0, v45);
  sub_23F6B5164(v1, 1, v34);
  if (v47)
  {
    sub_23F6D3C1C(v0);
    sub_23F6D3C1C(v2);
    sub_23F6B5164(v45, 1, v34);
    if (v47)
    {
      sub_23F6B4F84(v1, &qword_256EA86A0);
      goto LABEL_12;
    }
LABEL_9:
    v49 = &qword_256EB1C40;
    v50 = v1;
    goto LABEL_10;
  }
  sub_23F923370(v1, v46, &qword_256EA86A0);
  sub_23F6B5164(v45, 1, v34);
  if (v47)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v2);
    sub_23F6D3C24(v48, type metadata accessor for TranscriptProtoRequestContent);
    goto LABEL_9;
  }
  sub_23F7F6534(v45, v3);
  sub_23F6D3D70();
  static TranscriptProtoRequestContent.== infix(_:_:)();
  v52 = v51;
  sub_23F6D38A0(v3);
  sub_23F6D3930(v0);
  sub_23F6D3930(v2);
  sub_23F6D38A0(v4);
  sub_23F6D3930(v1);
  if ((v52 & 1) == 0)
    goto LABEL_13;
LABEL_12:
  v53 = v114;
  if (*v114 != *v44)
    goto LABEL_13;
  v54 = v44;
  v55 = v113;
  v56 = v110;
  sub_23F92332C((uint64_t)&v114[v113[6]], v110);
  v57 = v109;
  sub_23F92332C((uint64_t)&v44[v55[6]], v109);
  v58 = v112;
  v59 = v112 + *(int *)(v108 + 48);
  sub_23F92332C(v56, v112);
  sub_23F92332C(v57, v59);
  v60 = v111;
  sub_23F6B5164(v58, 1, v111);
  if (!v47)
  {
    v63 = (uint64_t)v107;
    sub_23F923A50(v58, v61, &qword_256EA8698);
    sub_23F6B5164(v59, 1, v60);
    if (!v64)
    {
      v66 = v102;
      sub_23F9239CC(v59, v102);
      sub_23F72E2E0();
      static TranscriptProtoRequestPrescribedPlan.== infix(_:_:)();
      v68 = v67;
      sub_23F6D3DAC(v66);
      sub_23F6D3C1C(v57);
      sub_23F6D3C1C(v56);
      sub_23F6D3DAC(v63);
      sub_23F6D3C1C(v58);
      if ((v68 & 1) == 0)
        goto LABEL_13;
      goto LABEL_24;
    }
    sub_23F6D3748(v57);
    sub_23F6D3748(v56);
    sub_23F6D3D20(v65, type metadata accessor for TranscriptProtoRequestPrescribedPlan);
LABEL_22:
    v49 = &qword_256EB1C38;
    v50 = v58;
    goto LABEL_10;
  }
  sub_23F6B6EF8(v57);
  sub_23F6B6EF8(v56);
  v62 = sub_23F6B5164(v59, 1, v60);
  if (!v47)
    goto LABEL_22;
  sub_23F77E660(v62, &qword_256EA8698);
LABEL_24:
  sub_23F924248();
  if (!v71)
  {
    v72 = v105;
    v73 = v106;
    v75 = (uint64_t)v103;
    v74 = (uint64_t)v104;
    if (v69)
      goto LABEL_13;
    goto LABEL_33;
  }
  v72 = v105;
  v73 = v106;
  v75 = (uint64_t)v103;
  v74 = (uint64_t)v104;
  if (v69)
  {
    sub_23F6D3998(v70);
    v78 = v47 && v76 == v77;
    if (v78 || (sub_23F6B5280() & 1) != 0)
    {
LABEL_33:
      sub_23F923268((uint64_t)&v53[v55[8]], v74);
      sub_23F923268((uint64_t)&v54[v55[8]], v75);
      v79 = v73 + *(int *)(v101 + 48);
      sub_23F923268(v74, v73);
      sub_23F923268(v75, v79);
      v80 = sub_23F923D00();
      sub_23F6B5164(v80, v81, v72);
      if (v47)
      {
        sub_23F6D3748(v75);
        sub_23F6D3748(v74);
        v83 = sub_23F6B5164(v79, 1, v72);
        if (v47)
        {
          sub_23F923588(v83, &qword_256EB1C30);
LABEL_38:
          v84 = (uint64_t)&v53[v55[9]];
          v85 = v96;
          sub_23F6D3818(v96, v84);
          sub_23F6D3818(v97, (uint64_t)&v54[v55[9]]);
          sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          sub_23F923230();
          sub_23F9232DC();
          sub_23F6D3874(v85);
          goto LABEL_13;
        }
      }
      else
      {
        v86 = (uint64_t)v100;
        sub_23F923A50(v73, v82, &qword_256EB1C30);
        sub_23F6B5164(v79, 1, v72);
        if (!v87)
        {
          v89 = v79;
          v90 = v95;
          sub_23F7E76D0(v89, v95, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
          v91 = *(_QWORD *)v86 == *(_QWORD *)v90 && *(_QWORD *)(v86 + 8) == *(_QWORD *)(v90 + 8);
          if (v91 || (sub_23F6B5280() & 1) != 0)
          {
            sub_23F6957CC(*(_QWORD **)(v86 + 16), *(_QWORD **)(v90 + 16));
            if ((v92 & 1) != 0)
            {
              v93 = v90;
              sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
              sub_23F6B5994();
              v94 = sub_23F923CF8();
              sub_23F6D38A0(v93);
              sub_23F6B6EF8(v75);
              sub_23F6B6EF8(v74);
              sub_23F6D38A0(v86);
              sub_23F6B6EF8(v73);
              if ((v94 & 1) == 0)
                goto LABEL_13;
              goto LABEL_38;
            }
          }
          sub_23F6D3928(v90);
          sub_23F6D3748(v75);
          sub_23F6D3748(v74);
          sub_23F6D3928(v86);
          v50 = sub_23F6B6AB8();
          goto LABEL_10;
        }
        sub_23F6B64F4(v75);
        sub_23F6B64F4(v74);
        sub_23F6D3D20(v88, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
      }
      v49 = &qword_256EB1C28;
      v50 = v73;
LABEL_10:
      sub_23F6B4F84(v50, v49);
    }
  }
LABEL_13:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoRequest.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoRequest, &qword_256EB1C48, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequest);
}

unint64_t sub_23F890AB0()
{
  static TranscriptProtoRequest.protoMessageName.getter();
  return 0xD000000000000012;
}

#error "23F890ADC: call analysis failed (funcsize=5)"

void sub_23F890AE8()
{
  TranscriptProtoRequest.traverse<A>(visitor:)();
}

uint64_t sub_23F890AFC()
{
  sub_23F6D3458(&qword_256EB4290, type metadata accessor for TranscriptProtoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequest);
  return sub_23FB2D784();
}

uint64_t sub_23F890B50()
{
  sub_23F6D3458(&qword_256EB2748, type metadata accessor for TranscriptProtoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequest);
  return sub_23FB2D8F8();
}

uint64_t sub_23F890B94()
{
  sub_23F6D3458(&qword_256EB2748, type metadata accessor for TranscriptProtoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequest);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoRequestContent.protoMessageName.getter()
{
  return sub_23F6D3738(25);
}

uint64_t sub_23F890C00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0688);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0688);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1C0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "text";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "speech";
  *(_QWORD *)(v11 + 8) = 6;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "promptResolution";
  *((_QWORD *)v13 + 1) = 16;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "stop";
  *((_QWORD *)v15 + 1) = 4;
  v15[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoRequestContent._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0B70, (uint64_t)qword_256EB0688, a1);
}

#error "23F890E00: call analysis failed (funcsize=9)"

void sub_23F890E0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB1C50);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4508);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB1C50);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB1C50);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoRequestContentEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoRequestContentEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoRequestContentEnum);
    }
    else
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4508);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoRequestContentTextContent);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoRequestContentTextContent);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2790, type metadata accessor for TranscriptProtoRequestContentTextContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentTextContent);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4508);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4508);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4508);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoRequestContentTextContent);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4508);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB1C50);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoRequestContentTextContent);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8911F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoRequestContentSpeechContent(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB1C50);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4510);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB1C50);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB1C50);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoRequestContentEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoRequestContentEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4510);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoRequestContentSpeechContent);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoRequestContentSpeechContent);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoRequestContentEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB27A8, type metadata accessor for TranscriptProtoRequestContentSpeechContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentSpeechContent);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4510);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4510);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4510);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoRequestContentSpeechContent);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4510);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB1C50);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoRequestContentSpeechContent);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8915E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB1C50);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB46B0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB1C50);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB1C50);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoRequestContentEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoRequestContentEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB46B0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoSystemPromptResolution);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoSystemPromptResolution);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoRequestContentEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3078, type metadata accessor for TranscriptProtoSystemPromptResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolution);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB46B0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB46B0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB46B0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoSystemPromptResolution);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB46B0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB1C50);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoSystemPromptResolution);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8919CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoRequestContentStopContent(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB1C50);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB46B8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB1C50);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB1C50);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoRequestContentEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoRequestContentEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB46B8);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoRequestContentStopContent);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoRequestContentStopContent);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoRequestContentEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2778, type metadata accessor for TranscriptProtoRequestContentStopContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentStopContent);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB46B8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB46B8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB46B8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoRequestContentStopContent);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB46B8);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB1C50);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoRequestContentStopContent);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

#error "23F891DEC: call analysis failed (funcsize=31)"

void sub_23F891E7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB1C50);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB1C50);
  v8 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB1C50);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoRequestContentTextContent);
      sub_23F6D3458(&qword_256EB2790, type metadata accessor for TranscriptProtoRequestContentTextContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentTextContent);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoRequestContentTextContent);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoRequestContentEnum);
  }
  __break(1u);
}

void sub_23F892010(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB1C50);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoRequestContentSpeechContent(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB1C50);
  v8 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB1C50);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoRequestContentSpeechContent);
      sub_23F6D3458(&qword_256EB27A8, type metadata accessor for TranscriptProtoRequestContentSpeechContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentSpeechContent);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoRequestContentSpeechContent);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoRequestContentEnum);
  }
  __break(1u);
}

void sub_23F8921A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB1C50);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB1C50);
  v8 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB1C50);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSystemPromptResolution);
      sub_23F6D3458(&qword_256EB3078, type metadata accessor for TranscriptProtoSystemPromptResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolution);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoSystemPromptResolution);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoRequestContentEnum);
  }
  __break(1u);
}

void sub_23F892340(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB1C50);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoRequestContentStopContent(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB1C50);
  v8 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB1C50);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoRequestContentStopContent);
      sub_23F6D3458(&qword_256EB2778, type metadata accessor for TranscriptProtoRequestContentStopContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentStopContent);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoRequestContentStopContent);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoRequestContentEnum);
  }
  __break(1u);
}

void static TranscriptProtoRequestContent.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F6B50E8();
  v5 = v4;
  v39 = sub_23F6B53A4();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v39);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = sub_23F6D38F8(v9, v10, v11, v12, v13, v14, v15, v16, v40);
  type metadata accessor for TranscriptProtoRequestContentEnum(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B59E0();
  v19 = sub_23F6916B8(&qword_256EB1C58);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6D3A70();
  v24 = MEMORY[0x24BDAC7A8](v23);
  sub_23F923124(v24, v25, v26, v27, v28, v29, v30, v31, v41);
  sub_23F923164(v5, v0);
  v32 = v1 + *(int *)(v19 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v32);
  v33 = sub_23F9230E4(v1);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v35 = sub_23F9230E4(v32);
    if (v36)
    {
      sub_23F6D378C(v35, &qword_256EB1C50);
LABEL_11:
      v38 = type metadata accessor for TranscriptProtoRequestContent(0);
      sub_23F6D3794(v38);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v33, v34, &qword_256EB1C50);
  sub_23F9230E4(v32);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v37, type metadata accessor for TranscriptProtoRequestContentEnum);
LABEL_9:
    sub_23F6D378C(v35, &qword_256EB1C58);
    goto LABEL_12;
  }
  sub_23F923270();
  sub_23F6D3D70();
  static TranscriptProtoRequestContentEnum.== infix(_:_:)();
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoRequestContent.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoRequestContent, &qword_256EB1C60, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContent);
}

unint64_t sub_23F89270C()
{
  static TranscriptProtoRequestContent.protoMessageName.getter();
  return 0xD000000000000019;
}

uint64_t sub_23F892730()
{
  return TranscriptProtoRequestContent.decodeMessage<A>(decoder:)();
}

uint64_t sub_23F892744()
{
  return TranscriptProtoRequestContent.traverse<A>(visitor:)();
}

uint64_t sub_23F892758()
{
  sub_23F6D3458(&qword_256EB4288, type metadata accessor for TranscriptProtoRequestContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContent);
  return sub_23FB2D784();
}

uint64_t sub_23F8927AC()
{
  sub_23F6D3458(&qword_256EB2760, type metadata accessor for TranscriptProtoRequestContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContent);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8927F0()
{
  sub_23F6D3458(&qword_256EB2760, type metadata accessor for TranscriptProtoRequestContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContent);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoRequestContentStopContent.protoMessageName.getter()
{
  return sub_23F6D3738(36);
}

uint64_t sub_23F89285C(uint64_t a1)
{
  return sub_23F9187D8(a1, qword_256EB06A0);
}

uint64_t static TranscriptProtoRequestContentStopContent._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0B78, (uint64_t)qword_256EB06A0, a1);
}

uint64_t TranscriptProtoRequestContentStopContent.decodeMessage<A>(decoder:)()
{
  return sub_23F918844();
}

uint64_t TranscriptProtoRequestContentStopContent.traverse<A>(visitor:)()
{
  return sub_23FB2D700();
}

uint64_t TranscriptProtoRequestContentStopContent.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoRequestContentStopContent, &qword_256EB1C68, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentStopContent);
}

unint64_t sub_23F8928D0()
{
  static TranscriptProtoRequestContentStopContent.protoMessageName.getter();
  return 0xD000000000000024;
}

uint64_t (*sub_23F8928F4())()
{
  return nullsub_1;
}

uint64_t sub_23F892904()
{
  return TranscriptProtoRequestContentStopContent.decodeMessage<A>(decoder:)();
}

uint64_t sub_23F892918()
{
  return TranscriptProtoRequestContentStopContent.traverse<A>(visitor:)();
}

uint64_t sub_23F89292C()
{
  sub_23F6D3458(&qword_256EB4280, type metadata accessor for TranscriptProtoRequestContentStopContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentStopContent);
  return sub_23FB2D784();
}

uint64_t sub_23F892980()
{
  sub_23F6D3458(&qword_256EB2778, type metadata accessor for TranscriptProtoRequestContentStopContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentStopContent);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8929C4()
{
  sub_23F6D3458(&qword_256EB2778, type metadata accessor for TranscriptProtoRequestContentStopContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentStopContent);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoRequestContentTextContent.protoMessageName.getter()
{
  return sub_23F6D3738(36);
}

uint64_t sub_23F892A30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB06B8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB06B8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "text";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "statementId";
  *((_QWORD *)v11 + 1) = 11;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoRequestContentTextContent._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0B80, (uint64_t)qword_256EB06B8, a1);
}

void TranscriptProtoRequestContentTextContent.decodeMessage<A>(decoder:)()
{
  sub_23F90C870();
}

void TranscriptProtoRequestContentTextContent.traverse<A>(visitor:)()
{
  sub_23F90C908();
}

void sub_23F892BF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void static TranscriptProtoRequestContentTextContent.== infix(_:_:)()
{
  sub_23F893448();
}

uint64_t TranscriptProtoRequestContentTextContent.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoRequestContentTextContent, &qword_256EB1C70, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentTextContent);
}

unint64_t sub_23F892D90()
{
  static TranscriptProtoRequestContentTextContent.protoMessageName.getter();
  return 0xD000000000000024;
}

void sub_23F892DB4()
{
  TranscriptProtoRequestContentTextContent.decodeMessage<A>(decoder:)();
}

void sub_23F892DC8()
{
  TranscriptProtoRequestContentTextContent.traverse<A>(visitor:)();
}

uint64_t sub_23F892DDC()
{
  sub_23F6D3458(&qword_256EB4278, type metadata accessor for TranscriptProtoRequestContentTextContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentTextContent);
  return sub_23FB2D784();
}

uint64_t sub_23F892E30()
{
  sub_23F6D3458(&qword_256EB2790, type metadata accessor for TranscriptProtoRequestContentTextContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentTextContent);
  return sub_23FB2D8F8();
}

uint64_t sub_23F892E74()
{
  sub_23F6D3458(&qword_256EB2790, type metadata accessor for TranscriptProtoRequestContentTextContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentTextContent);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoRequestContentSpeechContent.protoMessageName.getter()
{
  return sub_23F6D3738(38);
}

uint64_t sub_23F892EE0()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoRequestContentSpeechContent._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0B88, (uint64_t)&unk_256EB06D0, a1);
}

void TranscriptProtoRequestContentSpeechContent.decodeMessage<A>(decoder:)()
{
  sub_23F913C48();
}

void TranscriptProtoRequestContentSpeechContent.traverse<A>(visitor:)()
{
  sub_23F8B4D24();
}

void static TranscriptProtoRequestContentSpeechContent.== infix(_:_:)()
{
  sub_23F89AB14();
}

uint64_t TranscriptProtoRequestContentSpeechContent.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoRequestContentSpeechContent, &qword_256EB1C80, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentSpeechContent);
}

unint64_t sub_23F892FB4()
{
  static TranscriptProtoRequestContentSpeechContent.protoMessageName.getter();
  return 0xD000000000000026;
}

void sub_23F892FD8()
{
  TranscriptProtoRequestContentSpeechContent.decodeMessage<A>(decoder:)();
}

void sub_23F892FEC()
{
  TranscriptProtoRequestContentSpeechContent.traverse<A>(visitor:)();
}

uint64_t sub_23F893000()
{
  sub_23F6D3458(&qword_256EB4270, type metadata accessor for TranscriptProtoRequestContentSpeechContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentSpeechContent);
  return sub_23FB2D784();
}

uint64_t sub_23F893054()
{
  sub_23F6D3458(&qword_256EB27A8, type metadata accessor for TranscriptProtoRequestContentSpeechContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentSpeechContent);
  return sub_23FB2D8F8();
}

uint64_t sub_23F893098()
{
  sub_23F6D3458(&qword_256EB27A8, type metadata accessor for TranscriptProtoRequestContentSpeechContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentSpeechContent);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoSpeechRequestCandidate.protoMessageName.getter()
{
  return sub_23F6D3738(33);
}

uint64_t sub_23F893104()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB06E8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB06E8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "recognition";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "statementId";
  *((_QWORD *)v11 + 1) = 11;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoSpeechRequestCandidate._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0B90, (uint64_t)qword_256EB06E8, a1);
}

void TranscriptProtoSpeechRequestCandidate.decodeMessage<A>(decoder:)()
{
  sub_23F90C870();
}

void TranscriptProtoSpeechRequestCandidate.traverse<A>(visitor:)()
{
  sub_23F90C908();
}

void sub_23F8932CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoSpeechRequestCandidate(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void static TranscriptProtoSpeechRequestCandidate.== infix(_:_:)()
{
  sub_23F893448();
}

void sub_23F893448()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t);

  sub_23F6B50E8();
  v40 = v6;
  v39 = *(_QWORD *)(sub_23F6D35C0() - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  v38 = (uint64_t)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v9);
  v37 = (uint64_t)v36 - v10;
  sub_23F923344();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B5420(v12, v36[0]);
  v13 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6D3BD8();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v36 - v18;
  sub_23F6B6754();
  v22 = v22 && v20 == v21;
  if (!v22)
  {
    v5 = 0;
    if ((sub_23F6B5280() & 1) == 0)
      goto LABEL_17;
  }
  v23 = sub_23F924508();
  v24 = v40(v23);
  v25 = sub_23F923B3C(v24);
  sub_23F923368(v25, (uint64_t)v19);
  sub_23F923368(v1 + *(int *)(v5 + 20), v0);
  v26 = v3 + *(int *)(v13 + 48);
  sub_23F923368((uint64_t)v19, v3);
  sub_23F923368(v0, v26);
  v27 = sub_23F9230E4(v3);
  if (v22)
  {
    sub_23F6D387C(v0);
    sub_23F6D387C((uint64_t)v19);
    v29 = sub_23F9230E4(v26);
    if (v22)
    {
      sub_23F6D378C(v29, &qword_256EA25E0);
LABEL_16:
      v32 = v2 + *(int *)(v5 + 24);
      v33 = v37;
      sub_23F923484(v37, v32);
      v34 = v1 + *(int *)(v5 + 24);
      v35 = v38;
      sub_23F923484(v38, v34);
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6B5624();
      sub_23F6D39FC(v35);
      sub_23F6D39FC(v33);
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  sub_23F9232A4(v27, v28, &qword_256EA25E0);
  sub_23F9230E4(v26);
  if (v30)
  {
    sub_23F6D3748(v0);
    sub_23F6D3748((uint64_t)v19);
    sub_23F6D3C24(v31, type metadata accessor for TranscriptProtoStatementID);
LABEL_14:
    sub_23F6D378C(v29, &qword_256EA25E8);
    goto LABEL_17;
  }
  sub_23F923C04(v26);
  sub_23F9238E8();
  sub_23F923838();
  sub_23F6D387C(v0);
  sub_23F6D387C((uint64_t)v19);
  sub_23F77E330(v4);
  sub_23F6D387C(v3);
  if ((v26 & 1) != 0)
    goto LABEL_16;
LABEL_17:
  sub_23F923FC4();
  sub_23F693DDC();
}

uint64_t TranscriptProtoSpeechRequestCandidate.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoSpeechRequestCandidate, &qword_256EB1C88, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechRequestCandidate);
}

unint64_t sub_23F89371C()
{
  static TranscriptProtoSpeechRequestCandidate.protoMessageName.getter();
  return 0xD000000000000021;
}

void sub_23F893740()
{
  TranscriptProtoSpeechRequestCandidate.decodeMessage<A>(decoder:)();
}

void sub_23F893754()
{
  TranscriptProtoSpeechRequestCandidate.traverse<A>(visitor:)();
}

uint64_t sub_23F893768()
{
  sub_23F6D3458(&qword_256EB4268, type metadata accessor for TranscriptProtoSpeechRequestCandidate, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechRequestCandidate);
  return sub_23FB2D784();
}

uint64_t sub_23F8937BC()
{
  sub_23F6D3458(&qword_256EB1C78, type metadata accessor for TranscriptProtoSpeechRequestCandidate, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechRequestCandidate);
  return sub_23FB2D8F8();
}

uint64_t sub_23F893800()
{
  sub_23F6D3458(&qword_256EB1C78, type metadata accessor for TranscriptProtoSpeechRequestCandidate, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechRequestCandidate);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoExternalAgentRequest.protoMessageName.getter()
{
  return sub_23F6D3738(31);
}

uint64_t sub_23F89386C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0700);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0700);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "content";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "rawRewriteMetadataEventId";
  *((_QWORD *)v11 + 1) = 25;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "rewriteMetadataInlined";
  *((_QWORD *)v13 + 1) = 22;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoExternalAgentRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0B98, (uint64_t)qword_256EB0700, a1);
}

void TranscriptProtoExternalAgentRequest.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 3:
          sub_23F6D3598();
          sub_23F923998();
          break;
        case 2:
          sub_23F6D3598();
          sub_23F893AC0();
          break;
        case 1:
          sub_23F923568();
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

uint64_t sub_23F893AC0()
{
  type metadata accessor for TranscriptProtoExternalAgentRequest(0);
  return sub_23FB2D874();
}

void TranscriptProtoExternalAgentRequest.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F923460();
  sub_23F9234C0();
  if (!v0)
  {
    sub_23F9231F0();
    sub_23F893BC8(v1);
    sub_23F9231F0();
    sub_23F893C3C(v2);
    type metadata accessor for TranscriptProtoExternalAgentRequest(0);
    sub_23F6D37BC();
  }
  sub_23F6D3674();
}

uint64_t sub_23F893BC8(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for TranscriptProtoExternalAgentRequest(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 20) + 8))
    return sub_23FB2D9A0();
  return result;
}

void sub_23F893C3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB1C30);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoExternalAgentRequest(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_256EB1C30);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB1C30);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    sub_23F6D3458(&qword_256EB27E8, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  }
}

void static TranscriptProtoExternalAgentRequest.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  char v41;
  char v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  char v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;

  sub_23F6B50E8();
  v6 = v5;
  v8 = v7;
  v9 = sub_23F6B53A4();
  v73 = *(_QWORD *)(v9 - 8);
  v74 = v9;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v72 = (uint64_t)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v12);
  v71 = (uint64_t)&v70 - v13;
  v81 = sub_23F9246AC();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B57A0(v15, v70);
  v76 = sub_23F6916B8(&qword_256EB1C28);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B5420(v17, v70);
  sub_23F6916B8(&qword_256EB1C30);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  v75 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v20);
  v79 = (char *)&v70 - v21;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v22);
  v80 = (char *)&v70 - v23;
  v24 = sub_23F924B30();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F693EB0();
  v26 = sub_23F6916B8(&qword_256EB1C40);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F6B59F8();
  sub_23F6B5D90();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F9231E0();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F6B62F8();
  v78 = v8;
  sub_23F923B18(v8, v2);
  v31 = v6;
  sub_23F923B18(v6, v4);
  v32 = v0 + *(int *)(v26 + 48);
  v33 = sub_23F6B69B8();
  sub_23F923B18(v33, v34);
  sub_23F923B18(v4, v32);
  sub_23F6B5164(v0, 1, v24);
  if (!v37)
  {
    sub_23F923640(v0, v35, &qword_256EA86A0);
    sub_23F6B5164(v32, 1, v24);
    if (!v37)
    {
      sub_23F923774(v32, v1);
      sub_23F6B6F88();
      static TranscriptProtoRequestContent.== infix(_:_:)();
      v42 = v41;
      sub_23F77DB60(v1);
      sub_23F6B62DC(v4);
      sub_23F6B62DC(v2);
      sub_23F77DB60(v3);
      sub_23F6B62DC(v0);
      if ((v42 & 1) == 0)
        goto LABEL_11;
      goto LABEL_13;
    }
    sub_23F6B64F4(v4);
    sub_23F6B64F4(v2);
    sub_23F72E404(v38, type metadata accessor for TranscriptProtoRequestContent);
LABEL_9:
    v39 = &qword_256EB1C40;
    v40 = v0;
    goto LABEL_10;
  }
  sub_23F6B62DC(v4);
  sub_23F6B62DC(v2);
  v36 = sub_23F6B5164(v32, 1, v24);
  if (!v37)
    goto LABEL_9;
  sub_23F77DC10(v36, &qword_256EA86A0);
LABEL_13:
  v43 = (int *)type metadata accessor for TranscriptProtoExternalAgentRequest(0);
  v44 = v43[5];
  v45 = v78;
  v46 = v31;
  v47 = *(_QWORD *)(v31 + v44 + 8);
  if (!*(_QWORD *)(v78 + v44 + 8))
  {
    v49 = (uint64_t)v80;
    v48 = v81;
    v50 = (uint64_t)v79;
    if (v47)
      goto LABEL_11;
    goto LABEL_22;
  }
  v49 = (uint64_t)v80;
  v48 = v81;
  v50 = (uint64_t)v79;
  if (v47)
  {
    sub_23F6D3998(v78 + v44);
    v53 = v37 && v51 == v52;
    if (v53 || (sub_23F6B5280() & 1) != 0)
    {
LABEL_22:
      sub_23F92344C(v45 + v43[6], v49);
      sub_23F92344C(v31 + v43[6], v50);
      v54 = v77;
      v55 = v77 + *(int *)(v76 + 48);
      sub_23F92344C(v49, v77);
      sub_23F7A1EDC(v50, v55, &qword_256EB1C30);
      sub_23F6B5164(v54, 1, v48);
      if (v37)
      {
        sub_23F6B6EF8(v50);
        sub_23F6B6EF8(v49);
        v57 = sub_23F6B5164(v55, 1, v48);
        if (v37)
        {
          sub_23F923588(v57, &qword_256EB1C30);
LABEL_27:
          v58 = v71;
          sub_23F6D3818(v71, v45 + v43[7]);
          v59 = v46 + v43[7];
          v60 = v72;
          sub_23F6D3818(v72, v59);
          sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          sub_23F923230();
          sub_23F6D3DA4(v60);
          sub_23F6D3DA4(v58);
          goto LABEL_11;
        }
      }
      else
      {
        v61 = (uint64_t)v75;
        sub_23F923A50(v54, v56, &qword_256EB1C30);
        sub_23F6B5164(v55, 1, v48);
        if (!v62)
        {
          v64 = v55;
          v65 = v70;
          sub_23F7E76D0(v64, v70, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
          v66 = *(_QWORD *)v61 == *(_QWORD *)v65 && *(_QWORD *)(v61 + 8) == *(_QWORD *)(v65 + 8);
          if (v66 || (sub_23F6B5280() & 1) != 0)
          {
            sub_23F6957CC(*(_QWORD **)(v61 + 16), *(_QWORD **)(v65 + 16));
            if ((v67 & 1) != 0)
            {
              v68 = v65;
              sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
              sub_23F924900();
              v69 = sub_23F923CF8();
              sub_23F6D3DAC(v68);
              sub_23F6D3C1C(v50);
              sub_23F6D3C1C(v49);
              sub_23F6D3DAC(v61);
              sub_23F6D3C1C(v54);
              if ((v69 & 1) == 0)
                goto LABEL_11;
              goto LABEL_27;
            }
          }
          sub_23F6D38A0(v65);
          sub_23F6B6EF8(v50);
          sub_23F6B6EF8(v49);
          sub_23F6D38A0(v61);
          v40 = sub_23F78F478();
          goto LABEL_10;
        }
        sub_23F6D3748(v50);
        sub_23F6D3748(v49);
        sub_23F6D3D20(v63, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
      }
      v39 = &qword_256EB1C28;
      v40 = v54;
LABEL_10:
      sub_23F6B4F84(v40, v39);
    }
  }
LABEL_11:
  sub_23F6B5694();
  sub_23F693DDC();
}

uint64_t TranscriptProtoExternalAgentRequest.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoExternalAgentRequest, &qword_256EB1C90, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequest);
}

unint64_t sub_23F89437C()
{
  static TranscriptProtoExternalAgentRequest.protoMessageName.getter();
  return 0xD00000000000001FLL;
}

void sub_23F8943A0()
{
  TranscriptProtoExternalAgentRequest.decodeMessage<A>(decoder:)();
}

void sub_23F8943B4()
{
  TranscriptProtoExternalAgentRequest.traverse<A>(visitor:)();
}

uint64_t sub_23F8943C8()
{
  sub_23F6D3458(&qword_256EB4260, type metadata accessor for TranscriptProtoExternalAgentRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequest);
  return sub_23FB2D784();
}

uint64_t sub_23F89441C()
{
  sub_23F6D3458(&qword_256EB27D0, type metadata accessor for TranscriptProtoExternalAgentRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequest);
  return sub_23FB2D8F8();
}

uint64_t sub_23F894460()
{
  sub_23F6D3458(&qword_256EB27D0, type metadata accessor for TranscriptProtoExternalAgentRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequest);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoExternalAgentRequestRewriteMetadata.protoMessageName.getter()
{
  return sub_23F6D3738(46);
}

uint64_t sub_23F8944CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0718);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0718);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "originalRequest";
  *(_QWORD *)(v7 + 8) = 15;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "rewrites";
  *((_QWORD *)v11 + 1) = 8;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoExternalAgentRequestRewriteMetadata._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0BA0, (uint64_t)qword_256EB0718, a1);
}

void TranscriptProtoExternalAgentRequestRewriteMetadata.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F8A3A44(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C0E8]);
}

void TranscriptProtoExternalAgentRequestRewriteMetadata.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6D36FC();
  if (!v2 || (sub_23F923258(), !v1))
  {
    if (!*(_QWORD *)(*(_QWORD *)(v0 + 16) + 16) || (sub_23F923FF4(), !v1))
    {
      type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
      sub_23F9231A8();
    }
  }
  sub_23F6D3674();
}

void static TranscriptProtoExternalAgentRequestRewriteMetadata.== infix(_:_:)()
{
  sub_23F8D477C();
}

uint64_t TranscriptProtoExternalAgentRequestRewriteMetadata.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata, &qword_256EB1C98, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequestRewriteMetadata);
}

unint64_t sub_23F894718()
{
  static TranscriptProtoExternalAgentRequestRewriteMetadata.protoMessageName.getter();
  return 0xD00000000000002ELL;
}

void sub_23F89473C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  TranscriptProtoExternalAgentRequestRewriteMetadata.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_23F894750()
{
  TranscriptProtoExternalAgentRequestRewriteMetadata.traverse<A>(visitor:)();
}

uint64_t sub_23F894764()
{
  sub_23F6D3458(&qword_256EB4258, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  return sub_23FB2D784();
}

uint64_t sub_23F8947B8()
{
  sub_23F6D3458(&qword_256EB27E8, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8947FC()
{
  sub_23F6D3458(&qword_256EB27E8, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoRequestPrescribedPlan.protoMessageName.getter()
{
  return sub_23F6D3738(32);
}

uint64_t sub_23F894868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0730);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0730);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1E0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "searchTool";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "lowConfidenceKnowledgeTool";
  *(_QWORD *)(v11 + 8) = 26;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 6;
  *(_QWORD *)v13 = "textTool";
  *((_QWORD *)v13 + 1) = 8;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 7;
  *(_QWORD *)v15 = "convertTool";
  *((_QWORD *)v15 + 1) = 11;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 8;
  *(_QWORD *)v17 = "displayTool";
  *((_QWORD *)v17 + 1) = 11;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 9;
  *(_QWORD *)v19 = "knowledgeTool";
  *((_QWORD *)v19 + 1) = 13;
  v19[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoRequestPrescribedPlan._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0BA8, (uint64_t)qword_256EB0730, a1);
}

void TranscriptProtoRequestPrescribedPlan.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          v3 = sub_23F923100();
          sub_23F894B60(v3, v4, v5, v6);
          break;
        case 2:
          v7 = sub_23F923100();
          sub_23F894F48(v7, v8, v9, v10);
          break;
        case 6:
          v11 = sub_23F923100();
          sub_23F895334(v11, v12, v13, v14);
          break;
        case 7:
          v15 = sub_23F923100();
          sub_23F895720(v15, v16, v17, v18);
          break;
        case 8:
          v19 = sub_23F923100();
          sub_23F895B0C(v19, v20, v21, v22);
          break;
        case 9:
          v23 = sub_23F923100();
          sub_23F895EF8(v23, v24, v25, v26);
          break;
        default:
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D377C();
}

void sub_23F894B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA85F0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4680);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA85F0);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA85F0);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    }
    else
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4680);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2818, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanSearchTool);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4680);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4680);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4680);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4680);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA85F0);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F894F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA85F0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4688);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA85F0);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA85F0);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4688);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2830, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4688);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4688);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4688);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4688);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA85F0);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F895334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA85F0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4690);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA85F0);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA85F0);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4690);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2848, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanTextTool);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4690);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4690);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4690);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4690);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA85F0);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F895720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA85F0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4698);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA85F0);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA85F0);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4698);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2860, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanConvertTool);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4698);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4698);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4698);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4698);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA85F0);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F895B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA85F0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB46A0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA85F0);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA85F0);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB46A0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2878, type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanDisplayTool);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB46A0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB46A0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB46A0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB46A0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA85F0);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F895EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA85F0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB46A8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA85F0);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA85F0);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB46A8);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2890, type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB46A8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB46A8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB46A8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB46A8);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA85F0);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

#error "23F896318: call analysis failed (funcsize=36)"

void sub_23F8963D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA85F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA85F0);
  v8 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA85F0);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool);
      sub_23F6D3458(&qword_256EB2818, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanSearchTool);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
  }
  __break(1u);
}

void sub_23F896568(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA85F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA85F0);
  v8 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA85F0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
      sub_23F6D3458(&qword_256EB2830, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
  }
  __break(1u);
}

void sub_23F896700(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA85F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA85F0);
  v8 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA85F0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool);
      sub_23F6D3458(&qword_256EB2848, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanTextTool);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
  }
  __break(1u);
}

void sub_23F896898(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA85F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA85F0);
  v8 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA85F0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool);
      sub_23F6D3458(&qword_256EB2860, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanConvertTool);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
  }
  __break(1u);
}

void sub_23F896A30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA85F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA85F0);
  v8 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA85F0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool);
      sub_23F6D3458(&qword_256EB2878, type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanDisplayTool);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
  }
  __break(1u);
}

void sub_23F896BC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA85F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA85F0);
  v8 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA85F0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
      sub_23F6D3458(&qword_256EB2890, type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
  }
  __break(1u);
}

void static TranscriptProtoRequestPrescribedPlan.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F6B50E8();
  v5 = v4;
  v39 = sub_23F6B53A4();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v39);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = sub_23F6D38F8(v9, v10, v11, v12, v13, v14, v15, v16, v40);
  type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B59E0();
  v19 = sub_23F6916B8(&qword_256EB1CA0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6D3A70();
  v24 = MEMORY[0x24BDAC7A8](v23);
  sub_23F923124(v24, v25, v26, v27, v28, v29, v30, v31, v41);
  sub_23F923164(v5, v0);
  v32 = v1 + *(int *)(v19 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v32);
  v33 = sub_23F9230E4(v1);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v35 = sub_23F9230E4(v32);
    if (v36)
    {
      sub_23F6D378C(v35, &qword_256EA85F0);
LABEL_11:
      v38 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
      sub_23F6D3794(v38);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v33, v34, &qword_256EA85F0);
  sub_23F9230E4(v32);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v37, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
LABEL_9:
    sub_23F6D378C(v35, &qword_256EB1CA0);
    goto LABEL_12;
  }
  sub_23F923270();
  sub_23F6D3D70();
  static TranscriptProtoRequestPrescribedPlanEnum.== infix(_:_:)();
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoRequestPrescribedPlan.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoRequestPrescribedPlan, &qword_256EB1CA8, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlan);
}

unint64_t sub_23F896F94()
{
  static TranscriptProtoRequestPrescribedPlan.protoMessageName.getter();
  return 0xD000000000000020;
}

void sub_23F896FB8()
{
  TranscriptProtoRequestPrescribedPlan.decodeMessage<A>(decoder:)();
}

uint64_t sub_23F896FCC()
{
  return TranscriptProtoRequestPrescribedPlan.traverse<A>(visitor:)();
}

uint64_t sub_23F896FE0()
{
  sub_23F6D3458(&qword_256EB4250, type metadata accessor for TranscriptProtoRequestPrescribedPlan, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlan);
  return sub_23FB2D784();
}

uint64_t sub_23F897034()
{
  sub_23F6D3458(&qword_256EB2800, type metadata accessor for TranscriptProtoRequestPrescribedPlan, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlan);
  return sub_23FB2D8F8();
}

uint64_t sub_23F897078()
{
  sub_23F6D3458(&qword_256EB2800, type metadata accessor for TranscriptProtoRequestPrescribedPlan, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlan);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoRequestPrescribedPlanSearchTool.protoMessageName.getter()
{
  return sub_23F6D3738(42);
}

uint64_t sub_23F8970E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0748);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0748);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "query";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "isLowConfidenceKnowledge";
  *((_QWORD *)v11 + 1) = 24;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoRequestPrescribedPlanSearchTool._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0BB0, (uint64_t)qword_256EB0748, a1);
}

void TranscriptProtoRequestPrescribedPlanSearchTool.decodeMessage<A>(decoder:)()
{
  sub_23F898140();
}

void TranscriptProtoRequestPrescribedPlanSearchTool.traverse<A>(visitor:)()
{
  sub_23F8981BC();
}

void static TranscriptProtoRequestPrescribedPlanSearchTool.== infix(_:_:)()
{
  sub_23F897790();
}

uint64_t TranscriptProtoRequestPrescribedPlanSearchTool.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool, &qword_256EB1CB0, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanSearchTool);
}

unint64_t sub_23F8972AC()
{
  static TranscriptProtoRequestPrescribedPlanSearchTool.protoMessageName.getter();
  return 0xD00000000000002ALL;
}

void sub_23F8972D0()
{
  TranscriptProtoRequestPrescribedPlanTextTool.decodeMessage<A>(decoder:)();
}

void sub_23F8972E4()
{
  TranscriptProtoRequestPrescribedPlanSearchTool.traverse<A>(visitor:)();
}

uint64_t sub_23F8972F8()
{
  sub_23F6D3458(&qword_256EB4248, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanSearchTool);
  return sub_23FB2D784();
}

uint64_t sub_23F89734C()
{
  sub_23F6D3458(&qword_256EB2818, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanSearchTool);
  return sub_23FB2D8F8();
}

uint64_t sub_23F897390()
{
  sub_23F6D3458(&qword_256EB2818, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanSearchTool);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool.protoMessageName.getter()
{
  return sub_23F6D3738(58);
}

uint64_t sub_23F8973FC()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0BB8, (uint64_t)&unk_256EB0760, a1);
}

void TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F9062A8(a1, a2);
}

void TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool.traverse<A>(visitor:)()
{
  sub_23F906318();
}

void static TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool.== infix(_:_:)()
{
  sub_23F8AB6CC();
}

uint64_t TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool, &qword_256EB1CB8, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
}

unint64_t sub_23F897498()
{
  static TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool.protoMessageName.getter();
  return 0xD00000000000003ALL;
}

void sub_23F8974BC(uint64_t a1, uint64_t a2)
{
  TranscriptProtoSonicText.decodeMessage<A>(decoder:)(a1, a2);
}

void sub_23F8974D0()
{
  TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool.traverse<A>(visitor:)();
}

uint64_t sub_23F8974E4()
{
  sub_23F6D3458(&qword_256EB4240, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
  return sub_23FB2D784();
}

uint64_t sub_23F897538()
{
  sub_23F6D3458(&qword_256EB2830, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
  return sub_23FB2D8F8();
}

uint64_t sub_23F89757C()
{
  sub_23F6D3458(&qword_256EB2830, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoRequestPrescribedPlanTextTool.protoMessageName.getter()
{
  return sub_23F6D3738(40);
}

uint64_t sub_23F8975E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0778);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0778);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "query";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "isExplicit";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoRequestPrescribedPlanTextTool._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0BC0, (uint64_t)qword_256EB0778, a1);
}

void TranscriptProtoRequestPrescribedPlanTextTool.decodeMessage<A>(decoder:)()
{
  sub_23F898140();
}

void TranscriptProtoRequestPrescribedPlanTextTool.traverse<A>(visitor:)()
{
  sub_23F8981BC();
}

void static TranscriptProtoRequestPrescribedPlanTextTool.== infix(_:_:)()
{
  sub_23F897790();
}

void sub_23F897790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F923590();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6D3834();
  v7 = v7 && v5 == v6;
  if (v7 || (sub_23F6B5280() & 1) != 0)
  {
    sub_23F923CD8();
    if (v7)
    {
      v8 = sub_23F923C1C();
      sub_23F923308(v1, v2 + *(int *)(v8 + 24));
      sub_23F6D36AC(*(int *)(v8 + 24));
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6D3600();
      sub_23F6D3820(v0);
      sub_23F6D3820(v1);
    }
  }
  sub_23F924700();
  sub_23F6B69E0();
}

uint64_t TranscriptProtoRequestPrescribedPlanTextTool.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool, &qword_256EB1CC0, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanTextTool);
}

unint64_t sub_23F89787C()
{
  static TranscriptProtoRequestPrescribedPlanTextTool.protoMessageName.getter();
  return 0xD000000000000028;
}

void sub_23F8978A0()
{
  TranscriptProtoRequestPrescribedPlanTextTool.traverse<A>(visitor:)();
}

uint64_t sub_23F8978B4()
{
  sub_23F6D3458(&qword_256EB4238, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanTextTool);
  return sub_23FB2D784();
}

uint64_t sub_23F897908()
{
  sub_23F6D3458(&qword_256EB2848, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanTextTool);
  return sub_23FB2D8F8();
}

uint64_t sub_23F89794C()
{
  sub_23F6D3458(&qword_256EB2848, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanTextTool);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoRequestPrescribedPlanConvertTool.protoMessageName.getter()
{
  return sub_23F6D3738(43);
}

uint64_t sub_23F8979B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0790);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0790);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "query";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "isExplicit";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoRequestPrescribedPlanConvertTool._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0BC8, (uint64_t)qword_256EB0790, a1);
}

void TranscriptProtoRequestPrescribedPlanConvertTool.decodeMessage<A>(decoder:)()
{
  sub_23F898140();
}

void TranscriptProtoRequestPrescribedPlanConvertTool.traverse<A>(visitor:)()
{
  sub_23F8981BC();
}

void static TranscriptProtoRequestPrescribedPlanConvertTool.== infix(_:_:)()
{
  sub_23F897790();
}

uint64_t TranscriptProtoRequestPrescribedPlanConvertTool.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool, &qword_256EB1CC8, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanConvertTool);
}

unint64_t sub_23F897B80()
{
  static TranscriptProtoRequestPrescribedPlanConvertTool.protoMessageName.getter();
  return 0xD00000000000002BLL;
}

void sub_23F897BA4()
{
  TranscriptProtoRequestPrescribedPlanConvertTool.traverse<A>(visitor:)();
}

uint64_t sub_23F897BB8()
{
  sub_23F6D3458(&qword_256EB4230, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanConvertTool);
  return sub_23FB2D784();
}

uint64_t sub_23F897C0C()
{
  sub_23F6D3458(&qword_256EB2860, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanConvertTool);
  return sub_23FB2D8F8();
}

uint64_t sub_23F897C50()
{
  sub_23F6D3458(&qword_256EB2860, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanConvertTool);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoRequestPrescribedPlanDisplayTool.protoMessageName.getter()
{
  return sub_23F6D3738(43);
}

uint64_t sub_23F897CBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB07A8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB07A8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "query";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "isExplicit";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoRequestPrescribedPlanDisplayTool._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0BD0, (uint64_t)qword_256EB07A8, a1);
}

void TranscriptProtoRequestPrescribedPlanDisplayTool.decodeMessage<A>(decoder:)()
{
  sub_23F898140();
}

void TranscriptProtoRequestPrescribedPlanDisplayTool.traverse<A>(visitor:)()
{
  sub_23F8981BC();
}

void static TranscriptProtoRequestPrescribedPlanDisplayTool.== infix(_:_:)()
{
  sub_23F897790();
}

uint64_t TranscriptProtoRequestPrescribedPlanDisplayTool.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool, &qword_256EB1CD0, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanDisplayTool);
}

unint64_t sub_23F897E84()
{
  static TranscriptProtoRequestPrescribedPlanDisplayTool.protoMessageName.getter();
  return 0xD00000000000002BLL;
}

void sub_23F897EA8()
{
  TranscriptProtoRequestPrescribedPlanDisplayTool.traverse<A>(visitor:)();
}

uint64_t sub_23F897EBC()
{
  sub_23F6D3458(&qword_256EB4228, type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanDisplayTool);
  return sub_23FB2D784();
}

uint64_t sub_23F897F10()
{
  sub_23F6D3458(&qword_256EB2878, type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanDisplayTool);
  return sub_23FB2D8F8();
}

uint64_t sub_23F897F54()
{
  sub_23F6D3458(&qword_256EB2878, type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanDisplayTool);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoRequestPrescribedPlanKnowledgeTool.protoMessageName.getter()
{
  return sub_23F6D3738(45);
}

uint64_t sub_23F897FC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB07C0);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB07C0);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "query";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "isExplicit";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoRequestPrescribedPlanKnowledgeTool._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0BD8, (uint64_t)qword_256EB07C0, a1);
}

void TranscriptProtoRequestPrescribedPlanKnowledgeTool.decodeMessage<A>(decoder:)()
{
  sub_23F898140();
}

void sub_23F898140()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_23F6D3F00();
      }
      else if (v1 == 1)
      {
        sub_23F923334();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D377C();
}

void TranscriptProtoRequestPrescribedPlanKnowledgeTool.traverse<A>(visitor:)()
{
  sub_23F8981BC();
}

void sub_23F8981BC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6D3EA4();
  sub_23F6D36FC();
  if (!v1 || (sub_23F923258(), !v0))
  {
    sub_23F9246F4();
    if (!v2 || (sub_23F923850(), !v0))
    {
      sub_23F923AF0();
      sub_23F9231A8();
    }
  }
  sub_23F6D3750();
}

void static TranscriptProtoRequestPrescribedPlanKnowledgeTool.== infix(_:_:)()
{
  sub_23F897790();
}

uint64_t TranscriptProtoRequestPrescribedPlanKnowledgeTool.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool, &qword_256EB1CD8, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
}

unint64_t sub_23F898278()
{
  static TranscriptProtoRequestPrescribedPlanKnowledgeTool.protoMessageName.getter();
  return 0xD00000000000002DLL;
}

void sub_23F89829C()
{
  TranscriptProtoRequestPrescribedPlanKnowledgeTool.traverse<A>(visitor:)();
}

uint64_t sub_23F8982B0()
{
  sub_23F6D3458(&qword_256EB4220, type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
  return sub_23FB2D784();
}

uint64_t sub_23F898304()
{
  sub_23F6D3458(&qword_256EB2890, type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
  return sub_23FB2D8F8();
}

uint64_t sub_23F898348()
{
  sub_23F6D3458(&qword_256EB2890, type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoAction.protoMessageName.getter()
{
  return sub_23F6D3738(17);
}

uint64_t sub_23F8983B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB07D8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB07D8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1B0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 10;
  *(_QWORD *)v7 = "statementId";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "toolId";
  *(_QWORD *)(v11 + 8) = 6;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "bundleId";
  *((_QWORD *)v13 + 1) = 8;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "deviceId";
  *((_QWORD *)v15 + 1) = 8;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 6;
  *(_QWORD *)v17 = "isConfirmed";
  *((_QWORD *)v17 + 1) = 11;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 7;
  *(_QWORD *)v19 = "parameterValues";
  *((_QWORD *)v19 + 1) = 15;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 8;
  *(_QWORD *)v21 = "planEventId";
  *((_QWORD *)v21 + 1) = 11;
  v21[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoAction._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0BE0, (uint64_t)qword_256EB07D8, a1);
}

void TranscriptProtoAction.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 2:
          sub_23F923334();
          break;
        case 3:
          v3 = sub_23F9233D4();
          sub_23F90A258(v3, v4, v5, v6, v7);
          break;
        case 4:
          sub_23F6D3598();
          sub_23F898710();
          break;
        case 6:
          sub_23F6D3F00();
          break;
        case 7:
          sub_23F6D3598();
          sub_23F898770();
          break;
        case 8:
          sub_23F924454();
          break;
        case 10:
          sub_23F9233D4();
          sub_23F92455C();
          break;
        default:
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

uint64_t sub_23F898710()
{
  type metadata accessor for TranscriptProtoAction(0);
  return sub_23FB2D874();
}

uint64_t sub_23F898770()
{
  sub_23FB2D6DC();
  type metadata accessor for TranscriptProtoActionParameterValue(0);
  sub_23F6D3458(&qword_256EB1CE0, type metadata accessor for TranscriptProtoActionParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterValue);
  sub_23F6D3458(&qword_256EB1CE8, type metadata accessor for TranscriptProtoActionParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterValue);
  return sub_23FB2D79C();
}

void sub_23F89883C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  sub_23F6B5220();
  sub_23F923498(v0, v1, v2, v3, v4);
  sub_23F6D3A84();
  sub_23F6D3724();
  sub_23F6D3644();
  sub_23F6B5100();
}

void TranscriptProtoAction.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_QWORD);
  uint64_t v17;

  sub_23F923528();
  sub_23F6D36FC();
  if (!v2 || (sub_23F6D376C(), !v1))
  {
    sub_23F6D3664();
    sub_23F90A65C(v3, v4, v5, v6, v7);
    if (!v1)
    {
      sub_23F6D3664();
      sub_23F8989F4(v8);
      if (*(_BYTE *)(v0 + 16) == 1)
        sub_23F6D369C();
      if (*(_QWORD *)(*(_QWORD *)(v0 + 24) + 16))
      {
        sub_23F923AE8();
        v9 = sub_23F924924();
        type metadata accessor for TranscriptProtoActionParameterValue(v9);
        sub_23F923750(&qword_256EB1CE0, v10, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterValue);
        sub_23F923750(&qword_256EB1CE8, v11, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterValue);
        sub_23F923A9C();
      }
      sub_23F6D3664();
      sub_23F9095A0(v12, v13, v14, v15, v16);
      sub_23F6D3664();
      sub_23F898A68(v17);
      type metadata accessor for TranscriptProtoAction(0);
      sub_23F6D37BC();
    }
  }
  sub_23F6D3B40();
}

uint64_t sub_23F8989F4(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for TranscriptProtoAction(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 36) + 8))
    return sub_23FB2D9A0();
  return result;
}

void sub_23F898A68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoAction(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 28), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void static TranscriptProtoAction.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  sub_23F6B50E8();
  v6 = v5;
  v8 = v7;
  v9 = sub_23F6B53A4();
  v58 = *(_QWORD *)(v9 - 8);
  v59 = v9;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v57 = (uint64_t)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v12);
  v56 = (uint64_t)&v56 - v13;
  v14 = sub_23F923344();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B5268();
  v16 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B53AC();
  sub_23F6B6088();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B65E0();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F9232B0();
  MEMORY[0x24BDAC7A8](v20);
  v21 = sub_23F9242AC();
  v22 = type metadata accessor for TranscriptProtoAction(v21);
  v23 = *(int *)(v22 + 28);
  v60 = v8;
  v24 = v8 + v23;
  v25 = v22;
  sub_23F92344C(v24, v1);
  v26 = *(int *)(v25 + 28);
  v61 = v6;
  sub_23F92344C(v6 + v26, v0);
  v27 = v2 + *(int *)(v16 + 48);
  sub_23F92344C(v1, v2);
  sub_23F92344C(v0, v27);
  sub_23F6B5164(v2, 1, v14);
  if (v30)
  {
    sub_23F6D3C1C(v0);
    sub_23F6D3C1C(v1);
    v29 = sub_23F6B5164(v27, 1, v14);
    if (v30)
    {
      sub_23F6B6034(v29, &qword_256EA25E0);
      goto LABEL_11;
    }
LABEL_9:
    sub_23F6B6034(v29, &qword_256EA25E8);
    goto LABEL_45;
  }
  sub_23F923760(v2, v28, &qword_256EA25E0);
  sub_23F6B5164(v27, 1, v14);
  if (v30)
  {
    sub_23F6B6EF8(v0);
    sub_23F6B6EF8(v1);
    sub_23F77DB94(v31, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_9;
  }
  sub_23F923774(v27, v3);
  sub_23F924C40();
  v27 = v32;
  sub_23F77DB60(v3);
  sub_23F6D387C(v0);
  sub_23F6D387C(v1);
  sub_23F77DB60(v4);
  sub_23F6D387C(v2);
  if ((v27 & 1) == 0)
    goto LABEL_45;
LABEL_11:
  sub_23F923B60();
  if (v30)
    v35 = v33 == v34;
  else
    v35 = 0;
  if (v35 || (sub_23F6B5280() & 1) != 0)
  {
    sub_23F92434C();
    if (v38)
    {
      if (!v36)
        goto LABEL_45;
      sub_23F6D3998(v37);
      v41 = v30 && v39 == v40;
      if (!v41 && (sub_23F6B5280() & 1) == 0)
        goto LABEL_45;
    }
    else if (v36)
    {
      goto LABEL_45;
    }
    sub_23F92434C();
    if (v44)
    {
      if (!v42)
        goto LABEL_45;
      sub_23F6D3998(v43);
      v47 = v30 && v45 == v46;
      if (!v47 && (sub_23F6B5280() & 1) == 0)
        goto LABEL_45;
    }
    else if (v42)
    {
      goto LABEL_45;
    }
    if (*(unsigned __int8 *)(v27 + 16) != *(unsigned __int8 *)(v1 + 16))
      goto LABEL_45;
    sub_23F69D5E4();
    if ((v48 & 1) == 0)
      goto LABEL_45;
    sub_23F92434C();
    if (v51)
    {
      if (!v49)
        goto LABEL_45;
      sub_23F6D3998(v50);
      v54 = v30 && v52 == v53;
      if (!v54 && (sub_23F6B5280() & 1) == 0)
        goto LABEL_45;
    }
    else if (v49)
    {
      goto LABEL_45;
    }
    v55 = v56;
    sub_23F6D3818(v56, v27 + *(int *)(v25 + 44));
    sub_23F6D3818(v57, v1 + *(int *)(v25 + 44));
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F9232F0();
    sub_23F9232DC();
    sub_23F6D3874(v55);
  }
LABEL_45:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoAction.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoAction, &qword_256EB1CF0, (uint64_t)&protocol conformance descriptor for TranscriptProtoAction);
}

unint64_t sub_23F898F6C()
{
  static TranscriptProtoAction.protoMessageName.getter();
  return 0xD000000000000011;
}

void sub_23F898F90()
{
  TranscriptProtoAction.decodeMessage<A>(decoder:)();
}

void sub_23F898FA4()
{
  TranscriptProtoAction.traverse<A>(visitor:)();
}

uint64_t sub_23F898FB8()
{
  sub_23F6D3458(&qword_256EB4218, type metadata accessor for TranscriptProtoAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoAction);
  return sub_23FB2D784();
}

uint64_t sub_23F89900C()
{
  sub_23F6D3458(&qword_256EA7F08, type metadata accessor for TranscriptProtoAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoAction);
  return sub_23FB2D8F8();
}

uint64_t sub_23F899050()
{
  sub_23F6D3458(&qword_256EA7F08, type metadata accessor for TranscriptProtoAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoAction);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoActionParameterValue.protoMessageName.getter()
{
  return sub_23F6D3738(31);
}

uint64_t sub_23F8990BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB07F0);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB07F0);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "value";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "promptSelection";
  *((_QWORD *)v11 + 1) = 15;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoActionParameterValue._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0BE8, (uint64_t)qword_256EB07F0, a1);
}

void TranscriptProtoActionParameterValue.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_23F6D3598();
        sub_23F923404();
      }
      else if (v1 == 1)
      {
        sub_23F923568();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoActionParameterValue.traverse<A>(visitor:)()
{
  sub_23F899E10();
}

void sub_23F8992E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v8[2];

  v2 = sub_23F6916B8(&qword_256EA84D8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoToolParameterValue(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA84D8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA84D8);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoToolParameterValue);
    sub_23F6D3458(&qword_256EB38F0, type metadata accessor for TranscriptProtoToolParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolParameterValue);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoToolParameterValue);
  }
}

void sub_23F89944C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA8598);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoPromptSelection(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoActionParameterValue(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA8598);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA8598);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoPromptSelection);
    sub_23F6D3458(&qword_256EB28E0, type metadata accessor for TranscriptProtoPromptSelection, (uint64_t)&protocol conformance descriptor for TranscriptProtoPromptSelection);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoPromptSelection);
  }
}

void static TranscriptProtoActionParameterValue.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61[2];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  v8 = sub_23F6B53A4();
  v64 = *(_QWORD *)(v8 - 8);
  v65 = v8;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v63 = (uint64_t)v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v11);
  v62 = (uint64_t)v61 - v12;
  v70 = sub_23F924B3C();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B582C(v14, v61[0]);
  v67 = sub_23F6916B8(&qword_256EB1CF8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B5BD8(v16, v61[0]);
  sub_23F6916B8(&qword_256EA8598);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  v66 = (char *)v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v19);
  v68 = (uint64_t)v61 - v20;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v21);
  v69 = (uint64_t)v61 - v22;
  v23 = sub_23F6D398C();
  v24 = type metadata accessor for TranscriptProtoToolParameterValue(v23);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F6B59F8();
  v26 = sub_23F6916B8(&qword_256EB1D00);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F6B52B0();
  sub_23F878A54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F876AD4();
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)v61 - v31;
  v72 = v7;
  sub_23F9234DC(v7, (uint64_t)v61 - v31);
  v73 = v5;
  sub_23F9234DC(v5, v2);
  v33 = v1 + *(int *)(v26 + 48);
  sub_23F9234DC((uint64_t)v32, v1);
  sub_23F9234DC(v2, v33);
  sub_23F6B5164(v1, 1, v24);
  if (v36)
  {
    sub_23F6D3748(v2);
    sub_23F6D3748((uint64_t)v32);
    v35 = sub_23F6B5164(v33, 1, v24);
    if (v36)
    {
      sub_23F923588(v35, &qword_256EA84D8);
      goto LABEL_11;
    }
LABEL_9:
    v38 = &qword_256EB1D00;
    v39 = v1;
LABEL_20:
    sub_23F6B4F84(v39, v38);
    goto LABEL_21;
  }
  sub_23F923640(v1, v34, &qword_256EA84D8);
  sub_23F6B5164(v33, 1, v24);
  if (v36)
  {
    sub_23F6B64F4(v2);
    sub_23F6B64F4((uint64_t)v32);
    sub_23F72E404(v37, type metadata accessor for TranscriptProtoToolParameterValue);
    goto LABEL_9;
  }
  sub_23F92380C(v33, v0);
  sub_23F6B6F9C();
  static TranscriptProtoToolParameterValue.== infix(_:_:)();
  v41 = v40;
  sub_23F77DAB0(v0);
  sub_23F6D3748(v2);
  sub_23F6D3748((uint64_t)v32);
  sub_23F77DAB0(v3);
  sub_23F6D3748(v1);
  if ((v41 & 1) == 0)
    goto LABEL_21;
LABEL_11:
  v42 = type metadata accessor for TranscriptProtoActionParameterValue(0);
  v43 = sub_23F923D28(v42);
  v44 = v69;
  sub_23F92332C(v43, v69);
  v45 = v73;
  v46 = v68;
  sub_23F92332C(v73 + *(int *)(v1 + 20), v68);
  v47 = v71;
  v48 = v71 + *(int *)(v67 + 48);
  sub_23F92332C(v44, v71);
  sub_23F92332C(v46, v48);
  v49 = v70;
  sub_23F6B5164(v47, 1, v70);
  if (v36)
  {
    sub_23F6B6EF8(v46);
    sub_23F6B6EF8(v44);
    v51 = sub_23F6B5164(v48, 1, v49);
    if (v36)
    {
      sub_23F6D378C(v51, &qword_256EA8598);
LABEL_23:
      v58 = v62;
      sub_23F6D3818(v62, v7 + *(int *)(v1 + 24));
      v59 = v45 + *(int *)(v1 + 24);
      v60 = v63;
      sub_23F6D3818(v63, v59);
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6D37C8();
      sub_23F6D3874(v60);
      sub_23F6D3874(v58);
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  v52 = (uint64_t)v66;
  sub_23F923640(v47, v50, &qword_256EA8598);
  sub_23F6B5164(v48, 1, v49);
  if (v53)
  {
    sub_23F6D3748(v46);
    sub_23F6D3748(v44);
    sub_23F72E404(v54, type metadata accessor for TranscriptProtoPromptSelection);
LABEL_19:
    v38 = &qword_256EB1CF8;
    v39 = v47;
    goto LABEL_20;
  }
  v55 = v61[1];
  sub_23F9238DC(v48);
  sub_23F6B6F88();
  static TranscriptProtoPromptSelection.== infix(_:_:)();
  v57 = v56;
  sub_23F6D3DAC(v55);
  sub_23F6B62DC(v46);
  sub_23F6B62DC(v44);
  sub_23F6D3DAC(v52);
  sub_23F6B62DC(v47);
  if ((v57 & 1) != 0)
    goto LABEL_23;
LABEL_21:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoActionParameterValue.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoActionParameterValue, &qword_256EB1CE8, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterValue);
}

unint64_t sub_23F899AAC()
{
  static TranscriptProtoActionParameterValue.protoMessageName.getter();
  return 0xD00000000000001FLL;
}

void sub_23F899AD0()
{
  TranscriptProtoActionParameterValue.decodeMessage<A>(decoder:)();
}

void sub_23F899AE4()
{
  TranscriptProtoActionParameterValue.traverse<A>(visitor:)();
}

uint64_t sub_23F899AF8()
{
  sub_23F6D3458(&qword_256EB4210, type metadata accessor for TranscriptProtoActionParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterValue);
  return sub_23FB2D784();
}

uint64_t sub_23F899B4C()
{
  sub_23F6D3458(&qword_256EB1CE0, type metadata accessor for TranscriptProtoActionParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterValue);
  return sub_23FB2D8F8();
}

uint64_t sub_23F899B90()
{
  sub_23F6D3458(&qword_256EB1CE0, type metadata accessor for TranscriptProtoActionParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterValue);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoActionCancellation.protoMessageName.getter()
{
  return sub_23F6D3738(29);
}

uint64_t sub_23F899BFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0808);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0808);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 4;
  *(_QWORD *)v7 = "cancelledActionStatementId";
  *(_QWORD *)(v7 + 8) = 26;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 5;
  *(_QWORD *)v11 = "statementId";
  *((_QWORD *)v11 + 1) = 11;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoActionCancellation._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0BF0, (uint64_t)qword_256EB0808, a1);
}

void TranscriptProtoActionCancellation.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6D3DC4();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 5)
      {
        sub_23F92320C();
      }
      else if (v1 == 4)
      {
        sub_23F923648();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D3710();
}

void TranscriptProtoActionCancellation.traverse<A>(visitor:)()
{
  sub_23F899E10();
}

void sub_23F899E10()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);

  sub_23F6D3DC4();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10(v0, v8, v6, v4);
  if (!v1)
  {
    v3(v0, v9, v7, v5);
    sub_23F923C1C();
    sub_23F72E2E0();
    sub_23F6D3A68();
  }
  sub_23F6D3710();
}

void sub_23F899EA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v8[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void sub_23F89A008(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoActionCancellation(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void static TranscriptProtoActionCancellation.== infix(_:_:)()
{
  sub_23F8F2C50();
}

uint64_t TranscriptProtoActionCancellation.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoActionCancellation, &qword_256EB1D08, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionCancellation);
}

unint64_t sub_23F89A1A4()
{
  static TranscriptProtoActionCancellation.protoMessageName.getter();
  return 0xD00000000000001DLL;
}

void sub_23F89A1C8()
{
  TranscriptProtoActionCancellation.decodeMessage<A>(decoder:)();
}

void sub_23F89A1DC()
{
  TranscriptProtoActionCancellation.traverse<A>(visitor:)();
}

uint64_t sub_23F89A1F0()
{
  sub_23F6D3458(&qword_256EB4208, type metadata accessor for TranscriptProtoActionCancellation, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionCancellation);
  return sub_23FB2D784();
}

uint64_t sub_23F89A244()
{
  sub_23F6D3458(&qword_256EB28C8, type metadata accessor for TranscriptProtoActionCancellation, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionCancellation);
  return sub_23FB2D8F8();
}

uint64_t sub_23F89A288()
{
  sub_23F6D3458(&qword_256EB28C8, type metadata accessor for TranscriptProtoActionCancellation, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionCancellation);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoPromptSelection.protoMessageName.getter()
{
  return sub_23F6D3738(26);
}

uint64_t sub_23F89A2F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0820);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0820);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "confirmed";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "selectedInDisambiguation";
  *((_QWORD *)v11 + 1) = 24;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "denied";
  *((_QWORD *)v13 + 1) = 6;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoPromptSelection._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0BF8, (uint64_t)qword_256EB0820, a1);
}

void TranscriptProtoPromptSelection.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_23F6D39E0(a1, a2);
  while (1)
  {
    v3 = sub_23FB2D7B4();
    if (v2 || (v4 & 1) != 0)
      break;
    if (v3 == 3)
    {
      sub_23F923F98();
LABEL_9:
      sub_23F89A500();
      goto LABEL_11;
    }
    if (v3 != 2)
    {
      if (v3 != 1)
        goto LABEL_11;
      sub_23F924988();
      goto LABEL_9;
    }
    sub_23F924774();
LABEL_11:
    sub_23F6B6098();
  }
  sub_23F6D3C2C();
}

void sub_23F89A500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F6B5220();
  v8 = v3;
  sub_23F924378();
  sub_23F6916B8(&qword_256EB4328);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B5F6C();
  v6 = sub_23F9239D4();
  sub_23F878A38(v2);
  sub_23F924730(&qword_256EB42F0, v7, MEMORY[0x24BE5B938]);
  sub_23FB2D7F0();
  if (v0 || (sub_23F924190(v2), sub_23F9236F4(), v6 == 1))
  {
    sub_23F6B4F84(v2, &qword_256EB4328);
  }
  else
  {
    if ((*(_BYTE *)(v1 + 9) & 1) == 0)
    {
      sub_23F72E430();
      sub_23FB2D7C0();
    }
    sub_23F6B4F84(v2, &qword_256EB4328);
    *(_QWORD *)v1 = v8;
    *(_WORD *)(v1 + 8) = 1;
  }
  sub_23F6B6CA0();
  sub_23F6B5100();
}

void TranscriptProtoPromptSelection.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  sub_23F924878();
  if ((v2 & 1) != 0)
    goto LABEL_8;
  if ((*(_BYTE *)(v0 + 8) & 1) != 0)
  {
    if (*(_QWORD *)v0)
    {
      sub_23F9247B8();
      sub_23F8A0214();
    }
    else
    {
      sub_23F9244C4();
    }
  }
  else
  {
    v3 = sub_23F92479C();
    sub_23F8A02C8(v3);
  }
  if (!v1)
  {
LABEL_8:
    type metadata accessor for TranscriptProtoPromptSelection(0);
    sub_23F6D3A68();
  }
  sub_23F6D377C();
}

void static TranscriptProtoPromptSelection.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F6D36BC();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F9248D0();
  if ((v4 & 1) != 0)
  {
    if ((v3 & 1) != 0)
    {
LABEL_3:
      v5 = type metadata accessor for TranscriptProtoPromptSelection(0);
      sub_23F6D3614(*(int *)(v5 + 20));
      sub_23F6D36AC(*(int *)(v5 + 20));
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6D3600();
      sub_23F6D36D0();
      sub_23F6D3820(v0);
    }
  }
  else
  {
    if ((v3 & 1) != 0)
      goto LABEL_5;
    sub_23F9248B8();
    if ((v9 & 1) != 0)
    {
      if (v8)
      {
        if ((v7 & 1) != 0 && v6)
          goto LABEL_3;
      }
      else if ((v7 & 1) != 0 && !v6)
      {
        goto LABEL_3;
      }
    }
    else if ((v7 & 1) == 0 && v8 == v6)
    {
      goto LABEL_3;
    }
  }
LABEL_5:
  sub_23F6D3B34();
  sub_23F6B69E0();
}

uint64_t TranscriptProtoPromptSelection.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoPromptSelection, &qword_256EB1D10, (uint64_t)&protocol conformance descriptor for TranscriptProtoPromptSelection);
}

unint64_t sub_23F89A798()
{
  static TranscriptProtoPromptSelection.protoMessageName.getter();
  return 0xD00000000000001ALL;
}

void sub_23F89A7BC(uint64_t a1, uint64_t a2)
{
  TranscriptProtoPromptSelection.decodeMessage<A>(decoder:)(a1, a2);
}

void sub_23F89A7D0()
{
  TranscriptProtoPromptSelection.traverse<A>(visitor:)();
}

uint64_t sub_23F89A7E4()
{
  sub_23F6D3458(&qword_256EB4200, type metadata accessor for TranscriptProtoPromptSelection, (uint64_t)&protocol conformance descriptor for TranscriptProtoPromptSelection);
  return sub_23FB2D784();
}

uint64_t sub_23F89A838()
{
  sub_23F6D3458(&qword_256EB28E0, type metadata accessor for TranscriptProtoPromptSelection, (uint64_t)&protocol conformance descriptor for TranscriptProtoPromptSelection);
  return sub_23FB2D8F8();
}

uint64_t sub_23F89A87C()
{
  sub_23F6D3458(&qword_256EB28E0, type metadata accessor for TranscriptProtoPromptSelection, (uint64_t)&protocol conformance descriptor for TranscriptProtoPromptSelection);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoActionConfirmation.protoMessageName.getter()
{
  return sub_23F6D3738(29);
}

uint64_t sub_23F89A8E8()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoActionConfirmation._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0C00, (uint64_t)&unk_256EB0838, a1);
}

void TranscriptProtoActionConfirmation.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_23F6D39E0(a1, a2);
  while (1)
  {
    v3 = sub_23FB2D7B4();
    if (v2 || (v4 & 1) != 0)
      break;
    if (v3 == 3)
    {
      sub_23F6D3598();
      sub_23F89A964();
    }
    sub_23F6B6098();
  }
  sub_23F6D3C2C();
}

uint64_t sub_23F89A964()
{
  sub_23FB2D6DC();
  type metadata accessor for TranscriptProtoParameterValue(0);
  sub_23F6D3458(&qword_256EB1D18, type metadata accessor for TranscriptProtoParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterValue);
  sub_23F6D3458(&qword_256EB1D20, type metadata accessor for TranscriptProtoParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterValue);
  return sub_23FB2D79C();
}

void TranscriptProtoActionConfirmation.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F923528();
  sub_23F923A58();
  if (!v1
    || (sub_23F923AE8(),
        v2 = sub_23F924924(),
        type metadata accessor for TranscriptProtoParameterValue(v2),
        sub_23F923750(&qword_256EB1D18, v3, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterValue),
        sub_23F924678(&qword_256EB1D20, v4, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterValue),
        sub_23F923A80(),
        !v0))
  {
    type metadata accessor for TranscriptProtoActionConfirmation(0);
    sub_23F6D3A68();
  }
  sub_23F6D3B40();
}

void static TranscriptProtoActionConfirmation.== infix(_:_:)()
{
  sub_23F89AB14();
}

void sub_23F89AB14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F6D3A90();
  v4 = v3;
  sub_23F6D35C0();
  sub_23F923590();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23F923E98();
  if ((v4(v7) & 1) != 0)
  {
    v8 = sub_23F923C1C();
    sub_23F923308(v1, v2 + *(int *)(v8 + 20));
    sub_23F6D36AC(*(int *)(v8 + 20));
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F6D3600();
    sub_23F6D3BD0(v0);
    sub_23F6D3BD0(v1);
  }
  sub_23F923E3C();
  sub_23F6B69E0();
}

uint64_t TranscriptProtoActionConfirmation.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoActionConfirmation, &qword_256EB1D28, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionConfirmation);
}

unint64_t sub_23F89ABF0()
{
  static TranscriptProtoActionConfirmation.protoMessageName.getter();
  return 0xD00000000000001DLL;
}

void sub_23F89AC14(uint64_t a1, uint64_t a2)
{
  TranscriptProtoActionConfirmation.decodeMessage<A>(decoder:)(a1, a2);
}

void sub_23F89AC28()
{
  TranscriptProtoActionConfirmation.traverse<A>(visitor:)();
}

uint64_t sub_23F89AC3C()
{
  sub_23F6D3458(&qword_256EB41F8, type metadata accessor for TranscriptProtoActionConfirmation, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionConfirmation);
  return sub_23FB2D784();
}

uint64_t sub_23F89AC90()
{
  sub_23F6D3458(&qword_256EB28F8, type metadata accessor for TranscriptProtoActionConfirmation, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionConfirmation);
  return sub_23FB2D8F8();
}

uint64_t sub_23F89ACD4()
{
  sub_23F6D3458(&qword_256EB28F8, type metadata accessor for TranscriptProtoActionConfirmation, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionConfirmation);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoParameterValue.protoMessageName.getter()
{
  return sub_23F6D3738(25);
}

uint64_t sub_23F89AD40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0850);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0850);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "value";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "promptSelection";
  *((_QWORD *)v11 + 1) = 15;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoParameterValue._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0C08, (uint64_t)qword_256EB0850, a1);
}

void TranscriptProtoParameterValue.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_23F6D3598();
        sub_23F923404();
      }
      else if (v1 == 1)
      {
        sub_23F6CEB4C();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoParameterValue.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F923460();
  sub_23F923AD4();
  if (!v0)
  {
    sub_23F9231F0();
    sub_23F89AFE8(v1);
    type metadata accessor for TranscriptProtoParameterValue(0);
    sub_23F6D37BC();
  }
  sub_23F6D3674();
}

void sub_23F89AFE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA8598);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoPromptSelection(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoParameterValue(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA8598);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA8598);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoPromptSelection);
    sub_23F6D3458(&qword_256EB28E0, type metadata accessor for TranscriptProtoPromptSelection, (uint64_t)&protocol conformance descriptor for TranscriptProtoPromptSelection);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoPromptSelection);
  }
}

void static TranscriptProtoParameterValue.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t *v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  sub_23F6B50E8();
  v6 = v5;
  v8 = v7;
  v9 = sub_23F6B53A4();
  v64 = *(_QWORD *)(v9 - 8);
  v65 = v9;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v63 = (uint64_t)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v12);
  v62 = (uint64_t)&v61 - v13;
  v70 = sub_23F924B3C();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B5544(v15, v61);
  v67 = sub_23F6916B8(&qword_256EB1CF8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B5C10(v17, v61);
  sub_23F6916B8(&qword_256EA8598);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  v66 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v20);
  v68 = (uint64_t)&v61 - v21;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v22);
  v69 = (uint64_t)&v61 - v23;
  v24 = sub_23F6D3D08();
  v74 = *(_QWORD *)(v24 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F6B5298();
  v26 = sub_23F6916B8(&qword_256EA2618);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA2610);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F6B6B3C();
  v72 = v8;
  sub_23F923848(v8, v4);
  v73 = v6;
  sub_23F923848(v6, v2);
  v31 = v1 + *(int *)(v26 + 48);
  sub_23F923848(v4, v1);
  v32 = sub_23F6B6F88();
  sub_23F923848(v32, v33);
  v34 = sub_23F6B5164(v1, 1, v24);
  if (v37)
  {
    sub_23F6B64F4(v2);
    sub_23F6B64F4(v4);
    v36 = sub_23F6B5164(v31, 1, v24);
    if (v37)
    {
      sub_23F6D378C(v36, &qword_256EA2610);
      goto LABEL_11;
    }
LABEL_9:
    v38 = &qword_256EA2618;
    v39 = v1;
LABEL_20:
    sub_23F6B4F84(v39, v38);
    goto LABEL_21;
  }
  sub_23F9232A4(v34, v35, &qword_256EA2610);
  sub_23F6B5164(v31, 1, v24);
  if (v37)
  {
    sub_23F6B64F4(v2);
    sub_23F6B64F4(v4);
    sub_23F92377C();
    goto LABEL_9;
  }
  sub_23F6D3ECC(v0, v31, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v74 + 32));
  sub_23F6D3458(&qword_256EA2620, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95B0], MEMORY[0x24BEB95C8]);
  v40 = sub_23F6B5624();
  sub_23F877930(v0);
  sub_23F6B64F4(v2);
  sub_23F6B64F4(v4);
  sub_23F877930(v3);
  sub_23F6B64F4(v1);
  if ((v40 & 1) == 0)
    goto LABEL_21;
LABEL_11:
  v41 = type metadata accessor for TranscriptProtoParameterValue(0);
  v42 = v72;
  v43 = v69;
  sub_23F923300(v72 + *(int *)(v41 + 20), v69);
  v44 = v73;
  v45 = v68;
  sub_23F923300(v73 + *(int *)(v41 + 20), v68);
  sub_23F924AD0();
  v46 = v71;
  v48 = v71 + v47;
  sub_23F923300(v43, v71);
  sub_23F923300(v45, v48);
  v49 = sub_23F923D00();
  v50 = v70;
  sub_23F6B5164(v49, v51, v70);
  if (v37)
  {
    sub_23F6B62DC(v45);
    sub_23F6B62DC(v43);
    v53 = sub_23F6B5164(v48, 1, v50);
    if (v37)
    {
      sub_23F923588(v53, &qword_256EA8598);
LABEL_23:
      v60 = v62;
      sub_23F6D3818(v62, v42 + *(int *)(v41 + 24));
      sub_23F6D3818(v63, v44 + *(int *)(v41 + 24));
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F923230();
      sub_23F9232DC();
      sub_23F6D3874(v60);
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  v54 = (uint64_t)v66;
  sub_23F923640(v46, v52, &qword_256EA8598);
  sub_23F6B5164(v48, 1, v50);
  if (v55)
  {
    sub_23F6B64F4(v45);
    sub_23F6B64F4(v43);
    sub_23F72E404(v56, type metadata accessor for TranscriptProtoPromptSelection);
LABEL_19:
    v38 = &qword_256EB1CF8;
    v39 = v46;
    goto LABEL_20;
  }
  v57 = v61;
  sub_23F92380C(v48, v61);
  static TranscriptProtoPromptSelection.== infix(_:_:)();
  v59 = v58;
  sub_23F77DAB0(v57);
  sub_23F6D3930(v45);
  sub_23F6D3930(v43);
  sub_23F77DAB0(v54);
  sub_23F6D3930(v46);
  if ((v59 & 1) != 0)
    goto LABEL_23;
LABEL_21:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoParameterValue.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoParameterValue, &qword_256EB1D20, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterValue);
}

unint64_t sub_23F89B648()
{
  static TranscriptProtoParameterValue.protoMessageName.getter();
  return 0xD000000000000019;
}

void sub_23F89B66C()
{
  TranscriptProtoParameterValue.decodeMessage<A>(decoder:)();
}

void sub_23F89B680()
{
  TranscriptProtoParameterValue.traverse<A>(visitor:)();
}

uint64_t sub_23F89B694()
{
  sub_23F6D3458(&qword_256EB41F0, type metadata accessor for TranscriptProtoParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterValue);
  return sub_23FB2D784();
}

uint64_t sub_23F89B6E8()
{
  sub_23F6D3458(&qword_256EB1D18, type metadata accessor for TranscriptProtoParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterValue);
  return sub_23FB2D8F8();
}

uint64_t sub_23F89B72C()
{
  sub_23F6D3458(&qword_256EB1D18, type metadata accessor for TranscriptProtoParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterValue);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoToolDisambiguation.protoMessageName.getter()
{
  return sub_23F6D3738(29);
}

uint64_t sub_23F89B798()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0868);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0868);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "assistantSchemaKind";
  *(_QWORD *)(v7 + 8) = 19;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "tools";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoToolDisambiguation._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0C10, (uint64_t)qword_256EB0868, a1);
}

void TranscriptProtoToolDisambiguation.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6D3DC4();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_23F924200();
      }
      else if (v1 == 1)
      {
        sub_23F6D37D4();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D3710();
}

void TranscriptProtoToolDisambiguation.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6D3DC4();
  v1 = sub_23F923F20();
  sub_23F6C74C4(v1);
  if (!v0)
  {
    sub_23F92468C();
    if (v2)
    {
      sub_23FB2EBC4();
      sub_23F6D3458(&qword_256EA3258, (uint64_t (*)(uint64_t))MEMORY[0x24BEB96E0], MEMORY[0x24BEB96C8]);
      sub_23F6D36E4();
    }
    type metadata accessor for TranscriptProtoToolDisambiguation(0);
    sub_23F6D37BC();
  }
  sub_23F6D3710();
}

void static TranscriptProtoToolDisambiguation.== infix(_:_:)()
{
  sub_23F8A2DB0();
}

uint64_t TranscriptProtoToolDisambiguation.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoToolDisambiguation, &qword_256EB1D30, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolDisambiguation);
}

unint64_t sub_23F89BA68()
{
  static TranscriptProtoToolDisambiguation.protoMessageName.getter();
  return 0xD00000000000001DLL;
}

void sub_23F89BA8C()
{
  TranscriptProtoToolDisambiguation.decodeMessage<A>(decoder:)();
}

void sub_23F89BAA0()
{
  TranscriptProtoToolDisambiguation.traverse<A>(visitor:)();
}

uint64_t sub_23F89BAB4()
{
  sub_23F6D3458(&qword_256EB41E8, type metadata accessor for TranscriptProtoToolDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolDisambiguation);
  return sub_23FB2D784();
}

uint64_t sub_23F89BB08()
{
  sub_23F6D3458(&qword_256EB2920, type metadata accessor for TranscriptProtoToolDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolDisambiguation);
  return sub_23FB2D8F8();
}

uint64_t sub_23F89BB4C()
{
  sub_23F6D3458(&qword_256EB2920, type metadata accessor for TranscriptProtoToolDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolDisambiguation);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoContextPrewarmRequest.protoMessageName.getter()
{
  return sub_23F6D3738(32);
}

uint64_t sub_23F89BBB8(uint64_t a1)
{
  return sub_23F9187D8(a1, qword_256EB0880);
}

uint64_t static TranscriptProtoContextPrewarmRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0C18, (uint64_t)qword_256EB0880, a1);
}

uint64_t TranscriptProtoContextPrewarmRequest.decodeMessage<A>(decoder:)()
{
  return sub_23F918844();
}

void _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0V2eeoiySbAC_ACtFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  sub_23F6D3A90();
  v3 = v2;
  v5 = v4;
  v6 = sub_23F6B53A4();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10];
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B6618();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B5F6C();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v10(v1, v5, v6);
  v10(v0, v3, v6);
  sub_23F6D3458((unint64_t *)&qword_256EA2598, v7, MEMORY[0x24BE5BF20]);
  sub_23F6B5624();
  sub_23F877930(v0);
  sub_23F877930(v1);
  sub_23F6B69E0();
}

uint64_t TranscriptProtoContextPrewarmRequest.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoContextPrewarmRequest, &qword_256EB1D38, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextPrewarmRequest);
}

unint64_t sub_23F89BCE4()
{
  static TranscriptProtoContextPrewarmRequest.protoMessageName.getter();
  return 0xD000000000000020;
}

uint64_t sub_23F89BD08()
{
  sub_23F6D3458(&qword_256EB41E0, type metadata accessor for TranscriptProtoContextPrewarmRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextPrewarmRequest);
  return sub_23FB2D784();
}

uint64_t sub_23F89BD5C()
{
  sub_23F6D3458(&qword_256EB2938, type metadata accessor for TranscriptProtoContextPrewarmRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextPrewarmRequest);
  return sub_23FB2D8F8();
}

uint64_t sub_23F89BDA0()
{
  sub_23F6D3458(&qword_256EB2938, type metadata accessor for TranscriptProtoContextPrewarmRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextPrewarmRequest);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoContextPrewarmCompleted.protoMessageName.getter()
{
  return sub_23F6D3738(34);
}

uint64_t sub_23F89BE08(uint64_t a1)
{
  return sub_23F9187D8(a1, qword_256EB0898);
}

uint64_t static TranscriptProtoContextPrewarmCompleted._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0C20, (uint64_t)qword_256EB0898, a1);
}

uint64_t TranscriptProtoContextPrewarmCompleted.decodeMessage<A>(decoder:)()
{
  return sub_23F918844();
}

uint64_t TranscriptProtoContextPrewarmCompleted.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoContextPrewarmCompleted, &qword_256EB1D40, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextPrewarmCompleted);
}

unint64_t sub_23F89BE68()
{
  static TranscriptProtoContextPrewarmCompleted.protoMessageName.getter();
  return 0xD000000000000022;
}

uint64_t sub_23F89BE8C()
{
  sub_23F6D3458(&qword_256EB41D8, type metadata accessor for TranscriptProtoContextPrewarmCompleted, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextPrewarmCompleted);
  return sub_23FB2D784();
}

uint64_t sub_23F89BEE0()
{
  sub_23F6D3458(&qword_256EB2950, type metadata accessor for TranscriptProtoContextPrewarmCompleted, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextPrewarmCompleted);
  return sub_23FB2D8F8();
}

uint64_t sub_23F89BF24()
{
  sub_23F6D3458(&qword_256EB2950, type metadata accessor for TranscriptProtoContextPrewarmCompleted, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextPrewarmCompleted);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoActionResult.protoMessageName.getter()
{
  return sub_23F6D3738(23);
}

uint64_t sub_23F89BF8C(uint64_t a1)
{
  return sub_23F9187D8(a1, qword_256EB08B0);
}

uint64_t static TranscriptProtoActionResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0C28, (uint64_t)qword_256EB08B0, a1);
}

uint64_t TranscriptProtoActionResult.decodeMessage<A>(decoder:)()
{
  return sub_23F918844();
}

uint64_t TranscriptProtoActionResult.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoActionResult, &qword_256EB1D48, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResult);
}

unint64_t sub_23F89BFEC()
{
  static TranscriptProtoActionResult.protoMessageName.getter();
  return 0xD000000000000017;
}

uint64_t sub_23F89C010()
{
  sub_23F6D3458(&qword_256EB41D0, type metadata accessor for TranscriptProtoActionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResult);
  return sub_23FB2D784();
}

uint64_t sub_23F89C064()
{
  sub_23F6D3458(&qword_256EB2968, type metadata accessor for TranscriptProtoActionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResult);
  return sub_23FB2D8F8();
}

uint64_t sub_23F89C0A8()
{
  sub_23F6D3458(&qword_256EB2968, type metadata accessor for TranscriptProtoActionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResult);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoExternalAgentOutcome.protoMessageName.getter()
{
  return sub_23F6D3738(31);
}

uint64_t sub_23F89C110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB08C8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB08C8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 2;
  *(_QWORD *)v7 = "responseText";
  *(_QWORD *)(v7 + 8) = 12;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 3;
  *(_QWORD *)v11 = "statementId";
  *((_QWORD *)v11 + 1) = 11;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 4;
  *(_QWORD *)v13 = "statementOutcome";
  *((_QWORD *)v13 + 1) = 16;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoExternalAgentOutcome._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0C30, (uint64_t)qword_256EB08C8, a1);
}

void TranscriptProtoExternalAgentOutcome.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 4:
          sub_23F6D38E0();
          sub_23F923998();
          break;
        case 3:
          sub_23F92360C();
          break;
        case 2:
          sub_23F9249E0();
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoExternalAgentOutcome.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (!*(_QWORD *)(sub_23F9245D4() + 16) || (sub_23F923FF4(), !v0))
  {
    v1 = sub_23F6D3D7C();
    sub_23F89C3D8(v1);
    if (!v0)
    {
      v2 = sub_23F6D3D7C();
      sub_23F89C548(v2);
      type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
      sub_23F9231A8();
    }
  }
  sub_23F6D3674();
}

void sub_23F89C3D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void sub_23F89C548(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA7E70);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_256EA7E70);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA7E70);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementOutcome);
    sub_23F6D3458(&qword_256EA7F00, type metadata accessor for TranscriptProtoStatementOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementOutcome);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementOutcome);
  }
}

void static TranscriptProtoExternalAgentOutcome.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD **v6;
  _QWORD **v7;
  _QWORD **v8;
  _QWORD **v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  _QWORD **v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  _QWORD **v56;
  uint64_t v57;
  _QWORD **v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD **v78;
  uint64_t v79;
  int *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  sub_23F6B50E8();
  v7 = v6;
  v9 = v8;
  v10 = sub_23F6B53A4();
  v85 = *(_QWORD *)(v10 - 8);
  v86 = v10;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  v83 = (uint64_t)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v22 = sub_23F923890(v14, v15, v16, v17, v18, v19, v20, v21, v76);
  v89 = type metadata accessor for TranscriptProtoStatementOutcome(v22);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F6B5810(v24, v76);
  v88 = sub_23F6916B8(&qword_256EA7E68);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F70D7A4(v26, v76);
  sub_23F6916B8(&qword_256EA7E70);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v27);
  v87 = (char *)&v76 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F6D3F60();
  MEMORY[0x24BDAC7A8](v30);
  v32 = (int *)((char *)&v76 - v31);
  v91 = sub_23F9234D4();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F6B573C();
  v34 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F6B59E0();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F6B6618();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F6D3BD8();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F6B62F8();
  sub_23F6957CC(*v9, *v7);
  if ((v39 & 1) == 0)
    goto LABEL_22;
  v80 = v32;
  v81 = v2;
  v77 = v5;
  v79 = v0;
  type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
  sub_23F924BA4();
  v78 = v9;
  sub_23F923268((uint64_t)v9 + v40, v3);
  v41 = v7;
  sub_23F923268((uint64_t)v7 + v32[5], v1);
  v42 = v4 + *(int *)(v34 + 48);
  v43 = sub_23F6B6224();
  sub_23F923268(v43, v44);
  sub_23F923268(v1, v42);
  v45 = v91;
  sub_23F6B5164(v4, 1, v91);
  if (v49)
  {
    sub_23F6D3748(v1);
    sub_23F6D3748(v3);
    v47 = sub_23F6B5164(v42, 1, v45);
    if (v49)
    {
      sub_23F77E3DC(v47, &qword_256EA25E0);
      goto LABEL_12;
    }
LABEL_10:
    v51 = &qword_256EA25E8;
    v52 = v4;
LABEL_21:
    sub_23F6B4F84(v52, v51);
    goto LABEL_22;
  }
  v48 = v81;
  sub_23F923E34(v4, v46, &qword_256EA25E0);
  sub_23F6B5164(v42, 1, v45);
  if (v49)
  {
    sub_23F6B64F4(v1);
    sub_23F6B64F4(v3);
    sub_23F78F204(v50, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_10;
  }
  v53 = v77;
  sub_23F7E76D0(v42, v77, type metadata accessor for TranscriptProtoStatementID);
  static TranscriptProtoStatementID.== infix(_:_:)();
  v55 = v54;
  sub_23F923B20(v53);
  sub_23F6B62DC(v1);
  sub_23F6B62DC(v3);
  sub_23F923B20(v48);
  sub_23F6B62DC(v4);
  if ((v55 & 1) == 0)
    goto LABEL_22;
LABEL_12:
  v56 = v78;
  v57 = (uint64_t)v80;
  sub_23F92332C((uint64_t)v78 + v32[6], (uint64_t)v80);
  v58 = v41;
  v59 = v79;
  sub_23F92332C((uint64_t)v41 + v32[6], v79);
  sub_23F924ADC();
  v60 = v90;
  v62 = v90 + v61;
  sub_23F92332C(v57, v90);
  v63 = sub_23F6B69B8();
  sub_23F92332C(v63, v64);
  v65 = v89;
  sub_23F6B5164(v60, 1, v89);
  if (v49)
  {
    sub_23F6B6EF8(v59);
    sub_23F6B6EF8(v57);
    v67 = sub_23F6B5164(v62, 1, v65);
    if (v49)
    {
      sub_23F77E660(v67, &qword_256EA7E70);
LABEL_24:
      v74 = v84;
      sub_23F6D3818(v84, (uint64_t)v56 + v32[7]);
      v75 = v83;
      sub_23F6D3818(v83, (uint64_t)v58 + v32[7]);
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6D37C8();
      sub_23F6D3874(v75);
      sub_23F6D3874(v74);
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  v68 = (uint64_t)v87;
  sub_23F923CD0(v60, v66, &qword_256EA7E70);
  sub_23F6B5164(v62, 1, v65);
  if (v69)
  {
    sub_23F6D3748(v59);
    sub_23F6D3748(v57);
    sub_23F713FFC(v70, type metadata accessor for TranscriptProtoStatementOutcome);
LABEL_20:
    v51 = &qword_256EA7E68;
    v52 = v60;
    goto LABEL_21;
  }
  v71 = v82;
  sub_23F9239CC(v62, v82);
  sub_23F6B6098();
  static TranscriptProtoStatementOutcome.== infix(_:_:)();
  v73 = v72;
  sub_23F6D3DAC(v71);
  sub_23F6D3C1C(v59);
  sub_23F6D3C1C(v57);
  sub_23F6D3DAC(v68);
  sub_23F6D3C1C(v60);
  if ((v73 & 1) != 0)
    goto LABEL_24;
LABEL_22:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoExternalAgentOutcome.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoExternalAgentOutcome, &qword_256EB1D50, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentOutcome);
}

unint64_t sub_23F89CBB4()
{
  static TranscriptProtoExternalAgentOutcome.protoMessageName.getter();
  return 0xD00000000000001FLL;
}

void sub_23F89CBD8()
{
  TranscriptProtoExternalAgentOutcome.decodeMessage<A>(decoder:)();
}

void sub_23F89CBEC()
{
  TranscriptProtoExternalAgentOutcome.traverse<A>(visitor:)();
}

uint64_t sub_23F89CC00()
{
  sub_23F6D3458(&qword_256EB41C8, type metadata accessor for TranscriptProtoExternalAgentOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentOutcome);
  return sub_23FB2D784();
}

uint64_t sub_23F89CC54()
{
  sub_23F6D3458(&qword_256EB2980, type metadata accessor for TranscriptProtoExternalAgentOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentOutcome);
  return sub_23FB2D8F8();
}

uint64_t sub_23F89CC98()
{
  sub_23F6D3458(&qword_256EB2980, type metadata accessor for TranscriptProtoExternalAgentOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentOutcome);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoActionStepResult.protoMessageName.getter()
{
  return sub_23F6D3738(27);
}

uint64_t sub_23F89CD04(uint64_t a1)
{
  return sub_23F9187D8(a1, qword_256EB08E0);
}

uint64_t static TranscriptProtoActionStepResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0C38, (uint64_t)qword_256EB08E0, a1);
}

uint64_t TranscriptProtoActionStepResult.decodeMessage<A>(decoder:)()
{
  return sub_23F918844();
}

uint64_t TranscriptProtoActionStepResult.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoActionStepResult, &qword_256EB1D58, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionStepResult);
}

unint64_t sub_23F89CD64()
{
  static TranscriptProtoActionStepResult.protoMessageName.getter();
  return 0xD00000000000001BLL;
}

uint64_t sub_23F89CD88()
{
  sub_23F6D3458(&qword_256EB41C0, type metadata accessor for TranscriptProtoActionStepResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionStepResult);
  return sub_23FB2D784();
}

uint64_t sub_23F89CDDC()
{
  sub_23F6D3458(&qword_256EB2998, type metadata accessor for TranscriptProtoActionStepResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionStepResult);
  return sub_23FB2D8F8();
}

uint64_t sub_23F89CE20()
{
  sub_23F6D3458(&qword_256EB2998, type metadata accessor for TranscriptProtoActionStepResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionStepResult);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoStatementResultPayload.protoMessageName.getter()
{
  return sub_23F6D3738(33);
}

uint64_t sub_23F89CE88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB08F8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB08F8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "outcome";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "response";
  *((_QWORD *)v11 + 1) = 8;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoStatementResultPayload._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0C40, (uint64_t)qword_256EB08F8, a1);
}

void TranscriptProtoStatementResultPayload.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_23F6D3598();
        sub_23F923404();
      }
      else if (v1 == 1)
      {
        sub_23F923568();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoStatementResultPayload.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F923460();
  sub_23F9234C0();
  if (!v0)
  {
    sub_23F9231F0();
    sub_23F89D20C(v1);
    type metadata accessor for TranscriptProtoStatementResultPayload(0);
    sub_23F6D37BC();
  }
  sub_23F6D3674();
}

void sub_23F89D114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(uint64_t);
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t (*v19)(_QWORD);

  sub_23F6B5220();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  sub_23F713FB4(v10, v11, v12, v13, v8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B5208();
  v15 = v7(0);
  MEMORY[0x24BDAC7A8](v15);
  v16 = sub_23F924B70();
  sub_23F7A1EDC(v16, v0, v9);
  sub_23F6B5164(v0, 1, v15);
  if (v17)
  {
    sub_23F923DA8(v0);
  }
  else
  {
    sub_23F7E76D0(v0, v1, v7);
    sub_23F6D3458(v5, v7, v3);
    sub_23F924004();
    v18 = sub_23F8783E8();
    sub_23F6D3508(v18, v19);
  }
  sub_23F77DB18();
  sub_23F6B5100();
}

void sub_23F89D20C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA7E60);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoResponseManifest(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA7E60);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA7E60);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoResponseManifest);
    sub_23F6D3458(&qword_256EA7EF0, type metadata accessor for TranscriptProtoResponseManifest, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseManifest);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoResponseManifest);
  }
}

void static TranscriptProtoStatementResultPayload.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69[2];
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  v8 = sub_23F6B53A4();
  v72 = *(_QWORD *)(v8 - 8);
  v73 = v8;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v71 = (uint64_t)v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v11);
  v70 = (uint64_t)v69 - v12;
  v13 = sub_23F6D398C();
  v78 = type metadata accessor for TranscriptProtoResponseManifest(v13);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B582C(v15, v69[0]);
  v75 = sub_23F6916B8(&qword_256EA7E58);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B5BD8(v17, v69[0]);
  sub_23F6916B8(&qword_256EA7E60);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  v74 = (char *)v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v20);
  v76 = (uint64_t)v69 - v21;
  sub_23F6B5664();
  v23 = MEMORY[0x24BDAC7A8](v22);
  v31 = sub_23F9234E4(v23, v24, v25, v26, v27, v28, v29, v30, v69[0]);
  v32 = type metadata accessor for TranscriptProtoStatementOutcome(v31);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F6B59F8();
  v34 = sub_23F6916B8(&qword_256EA7E68);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F6B52B0();
  sub_23F878A54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F876AD4();
  MEMORY[0x24BDAC7A8](v38);
  v40 = (char *)v69 - v39;
  v80 = v7;
  sub_23F9234DC(v7, (uint64_t)v69 - v39);
  v81 = v5;
  sub_23F9234DC(v5, v2);
  v41 = v1 + *(int *)(v34 + 48);
  sub_23F9234DC((uint64_t)v40, v1);
  sub_23F9234DC(v2, v41);
  sub_23F6B5164(v1, 1, v32);
  if (v44)
  {
    sub_23F6D3748(v2);
    sub_23F6D3748((uint64_t)v40);
    v43 = sub_23F6B5164(v41, 1, v32);
    if (v44)
    {
      sub_23F923588(v43, &qword_256EA7E70);
      goto LABEL_11;
    }
LABEL_9:
    v46 = &qword_256EA7E68;
    v47 = v1;
LABEL_20:
    sub_23F6B4F84(v47, v46);
    goto LABEL_21;
  }
  sub_23F923640(v1, v42, &qword_256EA7E70);
  sub_23F6B5164(v41, 1, v32);
  if (v44)
  {
    sub_23F6B64F4(v2);
    sub_23F6B64F4((uint64_t)v40);
    sub_23F72E404(v45, type metadata accessor for TranscriptProtoStatementOutcome);
    goto LABEL_9;
  }
  sub_23F92380C(v41, v0);
  sub_23F6B6F9C();
  static TranscriptProtoStatementOutcome.== infix(_:_:)();
  v49 = v48;
  sub_23F77DAB0(v0);
  sub_23F6D3748(v2);
  sub_23F6D3748((uint64_t)v40);
  sub_23F77DAB0(v3);
  sub_23F6D3748(v1);
  if ((v49 & 1) == 0)
    goto LABEL_21;
LABEL_11:
  v50 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
  v51 = sub_23F923D28(v50);
  v52 = v77;
  sub_23F92332C(v51, v77);
  v53 = v81;
  v54 = v76;
  sub_23F92332C(v81 + *(int *)(v1 + 20), v76);
  v55 = v79;
  v56 = v79 + *(int *)(v75 + 48);
  sub_23F92332C(v52, v79);
  sub_23F92332C(v54, v56);
  v57 = v78;
  sub_23F6B5164(v55, 1, v78);
  if (v44)
  {
    sub_23F6B6EF8(v54);
    sub_23F6B6EF8(v52);
    v59 = sub_23F6B5164(v56, 1, v57);
    if (v44)
    {
      sub_23F6D378C(v59, &qword_256EA7E60);
LABEL_23:
      v66 = v70;
      sub_23F6D3818(v70, v7 + *(int *)(v1 + 24));
      v67 = v53 + *(int *)(v1 + 24);
      v68 = v71;
      sub_23F6D3818(v71, v67);
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6D37C8();
      sub_23F6D3874(v68);
      sub_23F6D3874(v66);
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  v60 = (uint64_t)v74;
  sub_23F923640(v55, v58, &qword_256EA7E60);
  sub_23F6B5164(v56, 1, v57);
  if (v61)
  {
    sub_23F6D3748(v54);
    sub_23F6D3748(v52);
    sub_23F72E404(v62, type metadata accessor for TranscriptProtoResponseManifest);
LABEL_19:
    v46 = &qword_256EA7E58;
    v47 = v55;
    goto LABEL_20;
  }
  v63 = v69[1];
  sub_23F9238DC(v56);
  sub_23F6B6F88();
  static TranscriptProtoResponseManifest.== infix(_:_:)();
  v65 = v64;
  sub_23F6D3DAC(v63);
  sub_23F6B62DC(v54);
  sub_23F6B62DC(v52);
  sub_23F6D3DAC(v60);
  sub_23F6B62DC(v55);
  if ((v65 & 1) != 0)
    goto LABEL_23;
LABEL_21:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoStatementResultPayload.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoStatementResultPayload, &qword_256EB1D60, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResultPayload);
}

unint64_t sub_23F89D864()
{
  static TranscriptProtoStatementResultPayload.protoMessageName.getter();
  return 0xD000000000000021;
}

void sub_23F89D888()
{
  TranscriptProtoStatementResultPayload.decodeMessage<A>(decoder:)();
}

void sub_23F89D89C()
{
  TranscriptProtoStatementResultPayload.traverse<A>(visitor:)();
}

uint64_t sub_23F89D8B0()
{
  sub_23F6D3458(&qword_256EB41B8, type metadata accessor for TranscriptProtoStatementResultPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResultPayload);
  return sub_23FB2D784();
}

uint64_t sub_23F89D904()
{
  sub_23F6D3458(&qword_256EB29B0, type metadata accessor for TranscriptProtoStatementResultPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResultPayload);
  return sub_23FB2D8F8();
}

uint64_t sub_23F89D948()
{
  sub_23F6D3458(&qword_256EB29B0, type metadata accessor for TranscriptProtoStatementResultPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResultPayload);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoStatementResult.protoMessageName.getter()
{
  return sub_23F6D3738(26);
}

uint64_t sub_23F89D9B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0910);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0910);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1E0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "actionEventId";
  *(_QWORD *)(v7 + 8) = 13;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "toolId";
  *(_QWORD *)(v11 + 8) = 6;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "payload";
  *((_QWORD *)v13 + 1) = 7;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "resultStatementId";
  *((_QWORD *)v15 + 1) = 17;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "originProgramStatementId";
  *((_QWORD *)v17 + 1) = 24;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "originTaskStatementId";
  *((_QWORD *)v19 + 1) = 21;
  v19[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoStatementResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0C48, (uint64_t)qword_256EB0910, a1);
}

void TranscriptProtoStatementResult.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;

  sub_23F6B5220();
  sub_23F6D356C();
  if (!v13)
  {
    while ((v14 & 1) == 0)
    {
      sub_23F9249AC();
      if (!(!v25 & v24))
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_23F89DC6C + 4 * byte_23FB74C5D[v23]))(v15, v16, v17, v18, v19, v20, v21, v22, a9, v12 + 16, a11, a12);
        return;
      }
      sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void sub_23F89DCE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  sub_23F6B5220();
  sub_23F923498(v0, v1, v2, v3, v4);
  sub_23F6D3A84();
  sub_23F6D3724();
  sub_23F6D3644();
  sub_23F6B5100();
}

void TranscriptProtoStatementResult.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F923460();
  sub_23F6C7C54(v0);
  if (!v1)
  {
    sub_23F9231F0();
    sub_23F6C7C88(v2);
    sub_23F9231F0();
    sub_23F89DDFC(v3);
    sub_23F9231F0();
    sub_23F89DF6C(v4);
    sub_23F9231F0();
    sub_23F89E0DC(v5);
    sub_23F924044();
    type metadata accessor for TranscriptProtoStatementResult(0);
    sub_23F6D37BC();
  }
  sub_23F6D3674();
}

void sub_23F89DDFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA8638);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementResult(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_256EA8638);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA8638);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementResultPayload);
    sub_23F6D3458(&qword_256EB29B0, type metadata accessor for TranscriptProtoStatementResultPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResultPayload);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementResultPayload);
  }
}

void sub_23F89DF6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementResult(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 28), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void sub_23F89E0DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementResult(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 32), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void static TranscriptProtoStatementResult.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  int *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int *v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  int *v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;

  sub_23F6B50E8();
  v6 = v5;
  v8 = v7;
  v9 = sub_23F6B53A4();
  v128 = *(_QWORD *)(v9 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v127 = (uint64_t)&v124 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B6580();
  v126 = v13;
  v143 = sub_23F923344();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B5544(v15, v124);
  v142 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  v130 = (uint64_t)&v124 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v18);
  v134 = (uint64_t)&v124 - v19;
  sub_23F6B5664();
  v21 = MEMORY[0x24BDAC7A8](v20);
  sub_23F924B48(v21, v22, v23, v24, v25, v26, v27, v28, v124);
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v29);
  v129 = (char *)&v124 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v31);
  v135 = (char *)&v124 - v32;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v33);
  v136 = (char *)&v124 - v34;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v35);
  v131 = (char *)&v124 - v36;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v37);
  v138 = (uint64_t)&v124 - v38;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F6D3D14();
  v133 = v40;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v41);
  v137 = (char *)&v124 - v42;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v43);
  v139 = (uint64_t)&v124 - v44;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v45);
  v140 = (uint64_t)&v124 - v46;
  v47 = sub_23F6D398C();
  v48 = type metadata accessor for TranscriptProtoStatementResultPayload(v47);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v49);
  sub_23F6B5268();
  v50 = sub_23F6916B8(&qword_256EB1D68);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v51);
  sub_23F6B6B5C();
  sub_23F6916B8(&qword_256EA8638);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v52);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v53);
  sub_23F876D18();
  MEMORY[0x24BDAC7A8](v54);
  sub_23F878DA4();
  v55 = v8[1];
  v144 = v6;
  v56 = v6[1];
  if (!v55)
  {
    v125 = v9;
    v57 = v8;
    if (v56)
      goto LABEL_50;
LABEL_10:
    v59 = v57[3];
    v60 = v144[3];
    if (v59)
    {
      if (!v60)
        goto LABEL_50;
      v61 = v57[2] == v144[2] && v59 == v60;
      if (!v61 && (sub_23F6B5280() & 1) == 0)
        goto LABEL_50;
    }
    else if (v60)
    {
      goto LABEL_50;
    }
    v62 = (int *)type metadata accessor for TranscriptProtoStatementResult(0);
    sub_23F923268((uint64_t)v57 + v62[6], v1);
    v63 = sub_23F923B30(v62[6]);
    sub_23F923268(v63, v2);
    v64 = v0 + *(int *)(v50 + 48);
    sub_23F923268(v1, v0);
    sub_23F923268(v2, v64);
    sub_23F6B5164(v0, 1, v48);
    if (v58)
    {
      sub_23F6D3748(v2);
      sub_23F6D3748(v1);
      v66 = sub_23F6B5164(v64, 1, v48);
      if (v58)
      {
        sub_23F9239A0(v66, &qword_256EA8638);
        goto LABEL_30;
      }
    }
    else
    {
      sub_23F923640(v0, v65, &qword_256EA8638);
      sub_23F6B5164(v64, 1, v48);
      if (!v67)
      {
        v71 = sub_23F6D3F0C();
        sub_23F7F6534(v71, v72);
        static TranscriptProtoStatementResultPayload.== infix(_:_:)();
        v74 = v73;
        sub_23F6D38A0(v4);
        sub_23F923DA8(v2);
        sub_23F923DA8(v1);
        sub_23F6D38A0(v3);
        sub_23F923DA8(v0);
        if ((v74 & 1) == 0)
          goto LABEL_50;
LABEL_30:
        v75 = v140;
        sub_23F923268((uint64_t)v57 + v62[7], v140);
        v76 = sub_23F923B30(v62[7]);
        v77 = v139;
        sub_23F923268(v76, v139);
        v78 = (uint64_t)v141;
        v79 = v142;
        v80 = (uint64_t)v141 + *(int *)(v142 + 48);
        sub_23F923268(v75, (uint64_t)v141);
        sub_23F923268(v77, v80);
        v81 = sub_23F6D3CB4();
        v82 = v143;
        sub_23F6B5164(v81, v83, v143);
        if (v58)
        {
          sub_23F6D3748(v77);
          sub_23F6D3748(v75);
          v85 = sub_23F6B5164(v80, 1, v82);
          if (v58)
          {
            sub_23F6D378C(v85, &qword_256EA25E0);
            goto LABEL_40;
          }
        }
        else
        {
          v86 = (uint64_t)v137;
          sub_23F923640(v78, v84, &qword_256EA25E0);
          sub_23F6B5164(v80, 1, v82);
          if (!v87)
          {
            v89 = v79;
            v90 = v77;
            v91 = v62;
            v92 = v132;
            sub_23F7E76D0(v80, v132, type metadata accessor for TranscriptProtoStatementID);
            static TranscriptProtoStatementID.== infix(_:_:)();
            HIDWORD(v124) = v93;
            v94 = v92;
            v62 = v91;
            sub_23F6D3DAC(v94);
            v95 = v90;
            v79 = v89;
            sub_23F6D3C1C(v95);
            sub_23F6D3C1C(v75);
            sub_23F6D3DAC(v86);
            sub_23F6D3C1C(v78);
            if ((v124 & 0x100000000) == 0)
              goto LABEL_50;
LABEL_40:
            v96 = v133;
            sub_23F923268((uint64_t)v57 + v62[8], v133);
            v141 = v62;
            v97 = sub_23F923B30(v62[8]);
            v98 = v138;
            sub_23F923268(v97, v138);
            v99 = v134;
            v100 = v134 + *(int *)(v79 + 48);
            sub_23F923268(v96, v134);
            sub_23F923268(v98, v100);
            sub_23F6B5164(v99, 1, v82);
            if (v58)
            {
              sub_23F6D3748(v98);
              sub_23F6D3748(v96);
              v102 = sub_23F6B5164(v100, 1, v82);
              v104 = (uint64_t)v135;
              v103 = (uint64_t)v136;
              if (v58)
              {
                sub_23F923588(v102, &qword_256EA25E0);
LABEL_52:
                v111 = (uint64_t)v141;
                sub_23F923268((uint64_t)v57 + v141[9], v103);
                sub_23F923268((uint64_t)v144 + *(int *)(v111 + 36), v104);
                v0 = v130;
                v112 = v130 + *(int *)(v79 + 48);
                sub_23F923268(v103, v130);
                sub_23F923268(v104, v112);
                sub_23F6B5164(v0, 1, v82);
                if (v58)
                {
                  sub_23F6D3748(v104);
                  sub_23F6D3748(v103);
                  v114 = sub_23F6B5164(v112, 1, v82);
                  if (v58)
                  {
                    sub_23F9239A0(v114, &qword_256EA25E0);
                    goto LABEL_62;
                  }
                }
                else
                {
                  v115 = (uint64_t)v129;
                  sub_23F923E34(v0, v113, &qword_256EA25E0);
                  sub_23F6B5164(v112, 1, v82);
                  if (!v116)
                  {
                    v118 = v132;
                    sub_23F7F6534(v112, v132);
                    sub_23F924930();
                    v120 = v119;
                    sub_23F6D38A0(v118);
                    sub_23F6B6EF8(v104);
                    sub_23F6B6EF8(v103);
                    sub_23F6D38A0(v115);
                    sub_23F6B6EF8(v0);
                    if ((v120 & 1) == 0)
                      goto LABEL_50;
LABEL_62:
                    v121 = (uint64_t)v141;
                    v122 = v126;
                    sub_23F6D3818(v126, (uint64_t)v57 + v141[10]);
                    v123 = v127;
                    sub_23F6D3818(v127, (uint64_t)v144 + *(int *)(v121 + 40));
                    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
                    sub_23F923230();
                    sub_23F6D3DA4(v123);
                    sub_23F6D3DA4(v122);
                    goto LABEL_50;
                  }
                  sub_23F6B64F4(v104);
                  sub_23F6B64F4(v103);
                  sub_23F78F204(v117, type metadata accessor for TranscriptProtoStatementID);
                }
                v69 = &qword_256EA25E8;
                goto LABEL_28;
              }
            }
            else
            {
              v105 = (uint64_t)v131;
              sub_23F923760(v99, v101, &qword_256EA25E0);
              sub_23F6B5164(v100, 1, v82);
              v104 = (uint64_t)v135;
              v103 = (uint64_t)v136;
              if (!v106)
              {
                v108 = v96;
                v109 = v132;
                sub_23F7E76D0(v100, v132, type metadata accessor for TranscriptProtoStatementID);
                sub_23F923C58();
                LODWORD(v140) = v110;
                sub_23F6D3928(v109);
                sub_23F6B6EF8(v138);
                sub_23F6B6EF8(v108);
                sub_23F6D3928(v105);
                sub_23F6B6EF8(v99);
                if ((v140 & 1) == 0)
                  goto LABEL_50;
                goto LABEL_52;
              }
              sub_23F6B64F4(v138);
              sub_23F6B64F4(v96);
              sub_23F77DB94(v107, type metadata accessor for TranscriptProtoStatementID);
            }
            v69 = &qword_256EA25E8;
            v70 = v99;
            goto LABEL_49;
          }
          sub_23F6D3748(v77);
          sub_23F6D3748(v75);
          sub_23F72E404(v88, type metadata accessor for TranscriptProtoStatementID);
        }
        v69 = &qword_256EA25E8;
        v70 = v78;
        goto LABEL_49;
      }
      sub_23F6B64F4(v2);
      sub_23F6B64F4(v1);
      sub_23F72E404(v68, type metadata accessor for TranscriptProtoStatementResultPayload);
    }
    v69 = &qword_256EB1D68;
LABEL_28:
    v70 = v0;
LABEL_49:
    sub_23F6B4F84(v70, v69);
    goto LABEL_50;
  }
  if (v56)
  {
    v125 = v9;
    v57 = v8;
    v58 = *v8 == *v144 && v55 == v56;
    if (v58 || (sub_23F6B5280() & 1) != 0)
      goto LABEL_10;
  }
LABEL_50:
  sub_23F6B5694();
  sub_23F693DDC();
}

uint64_t TranscriptProtoStatementResult.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoStatementResult, &qword_256EB1D70, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResult);
}

unint64_t sub_23F89EB7C()
{
  static TranscriptProtoStatementResult.protoMessageName.getter();
  return 0xD00000000000001ALL;
}

#error "23F89EBA8: call analysis failed (funcsize=5)"

void sub_23F89EBB4()
{
  TranscriptProtoStatementResult.traverse<A>(visitor:)();
}

uint64_t sub_23F89EBC8()
{
  sub_23F6D3458(&qword_256EB41B0, type metadata accessor for TranscriptProtoStatementResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResult);
  return sub_23FB2D784();
}

uint64_t sub_23F89EC1C()
{
  sub_23F6D3458(&qword_256EB1D78, type metadata accessor for TranscriptProtoStatementResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResult);
  return sub_23FB2D8F8();
}

uint64_t sub_23F89EC60()
{
  sub_23F6D3458(&qword_256EB1D78, type metadata accessor for TranscriptProtoStatementResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResult);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoResponseGenerationRequest.protoMessageName.getter()
{
  return sub_23F6D3738(36);
}

uint64_t sub_23F89ECCC()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoResponseGenerationRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0C50, (uint64_t)&unk_256EB0928, a1);
}

void TranscriptProtoResponseGenerationRequest.decodeMessage<A>(decoder:)()
{
  sub_23F8D38D4();
}

void TranscriptProtoResponseGenerationRequest.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F6D3DC4();
  sub_23F9233B4();
  if (!v1
    || (type metadata accessor for TranscriptProtoStatementResult(0),
        sub_23F6D3458(&qword_256EB1D78, type metadata accessor for TranscriptProtoStatementResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResult), sub_23F923350(), !v0))
  {
    type metadata accessor for TranscriptProtoResponseGenerationRequest(0);
    sub_23F9231A8();
  }
  sub_23F6D3710();
}

void static TranscriptProtoResponseGenerationRequest.== infix(_:_:)()
{
  sub_23F89AB14();
}

uint64_t TranscriptProtoResponseGenerationRequest.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoResponseGenerationRequest, &qword_256EB1D80, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseGenerationRequest);
}

unint64_t sub_23F89EDE8()
{
  static TranscriptProtoResponseGenerationRequest.protoMessageName.getter();
  return 0xD000000000000024;
}

void sub_23F89EE0C()
{
  TranscriptProtoResponseGenerationRequest.decodeMessage<A>(decoder:)();
}

void sub_23F89EE20()
{
  TranscriptProtoResponseGenerationRequest.traverse<A>(visitor:)();
}

uint64_t sub_23F89EE34()
{
  sub_23F6D3458(&qword_256EB41A8, type metadata accessor for TranscriptProtoResponseGenerationRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseGenerationRequest);
  return sub_23FB2D784();
}

uint64_t sub_23F89EE88()
{
  sub_23F6D3458(&qword_256EB29D8, type metadata accessor for TranscriptProtoResponseGenerationRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseGenerationRequest);
  return sub_23FB2D8F8();
}

uint64_t sub_23F89EECC()
{
  sub_23F6D3458(&qword_256EB29D8, type metadata accessor for TranscriptProtoResponseGenerationRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseGenerationRequest);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoCandidate.protoMessageName.getter()
{
  return sub_23F6D3738(20);
}

uint64_t sub_23F89EF38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0940);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0940);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1C0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "value";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "source";
  *(_QWORD *)(v11 + 8) = 6;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "promptStatus";
  *((_QWORD *)v13 + 1) = 12;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "statementId";
  *((_QWORD *)v15 + 1) = 11;
  v15[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoCandidate._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0C58, (uint64_t)qword_256EB0940, a1);
}

void TranscriptProtoCandidate.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;

  sub_23F6B5220();
  sub_23F6D356C();
  if (!v12)
  {
    while ((v13 & 1) == 0)
    {
      sub_23F6D3E98();
      if (!(!v24 & v23))
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_23F89F178 + 4 * byte_23FB74C63[v22]))(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10, a11, a12);
        return;
      }
      sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

uint64_t sub_23F89F1F0()
{
  sub_23F9189B0();
  return sub_23FB2D7FC();
}

void TranscriptProtoCandidate.traverse<A>(visitor:)()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F924514();
  sub_23F924384();
  sub_23F924958();
  sub_23F8A2454();
  if (!v0)
  {
    if (*v1)
    {
      sub_23F9189B0();
      sub_23F923FE8();
    }
    sub_23F6D3664();
    sub_23F89F31C(v2);
    sub_23F6D3664();
    sub_23F89F48C(v3);
    type metadata accessor for TranscriptProtoCandidate(0);
    sub_23F6D37BC();
  }
  sub_23F6D3C00();
}

void sub_23F89F31C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA8588);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoCandidate(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_256EA8588);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA8588);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoCandidatePromptStatus);
    sub_23F6D3458(&qword_256EB2A00, type metadata accessor for TranscriptProtoCandidatePromptStatus, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidatePromptStatus);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoCandidatePromptStatus);
  }
}

void sub_23F89F48C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoCandidate(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 28), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void static TranscriptProtoCandidate.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t *v51;
  uint64_t v52;
  char v53;
  void (*v54)(uint64_t);
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 *v57;
  unsigned __int8 *v58;
  int *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int *v110;
  uint64_t v111;
  unsigned __int8 *v112;
  unsigned __int8 *v113;

  sub_23F6B50E8();
  v112 = v6;
  v113 = v7;
  v8 = sub_23F6B53A4();
  v96 = *(_QWORD *)(v8 - 8);
  v97 = v8;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v95 = (uint64_t)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v11);
  v94 = (uint64_t)&v93 - v12;
  v100 = sub_23F923344();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F70D7DC(v14, v93);
  v99 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B5544(v16, v93);
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  v103 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v19);
  v104 = (char *)&v93 - v20;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v21);
  v105 = (char *)&v93 - v22;
  v23 = sub_23F6D398C();
  v108 = type metadata accessor for TranscriptProtoCandidatePromptStatus(v23);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6B658C(v25, v93);
  v106 = sub_23F6916B8(&qword_256EB1D90);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F6B537C(v27, v93);
  sub_23F6916B8(&qword_256EA8588);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v28);
  v102 = (char *)&v93 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v30);
  v111 = (uint64_t)&v93 - v31;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v32);
  v107 = (uint64_t)&v93 - v33;
  v34 = sub_23F6D3D08();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F6B59E0();
  v36 = sub_23F6916B8(&qword_256EA2618);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F6B5298();
  sub_23F878A54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F6B6618();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F72E2B0();
  MEMORY[0x24BDAC7A8](v40);
  v41 = sub_23F923B4C();
  v42 = type metadata accessor for TranscriptProtoCandidate(v41);
  v43 = sub_23F92489C(*(int *)(v42 + 20));
  sub_23F9234DC(v43, v2);
  v110 = (int *)v42;
  v44 = sub_23F923B30(*(int *)(v42 + 20));
  sub_23F9234DC(v44, v5);
  v45 = v0 + *(int *)(v36 + 48);
  sub_23F9234DC(v2, v0);
  v46 = sub_23F8783E8();
  sub_23F9234DC(v46, v47);
  sub_23F6B5164(v0, 1, v34);
  if (v50)
  {
    sub_23F6B62DC(v5);
    sub_23F6B62DC(v2);
    v49 = sub_23F6B5164(v45, 1, v34);
    if (v50)
    {
      sub_23F77E660(v49, &qword_256EA2610);
      goto LABEL_12;
    }
LABEL_9:
    v51 = &qword_256EA2618;
    v52 = v0;
LABEL_10:
    sub_23F6B4F84(v52, v51);
    goto LABEL_34;
  }
  sub_23F923CD0(v0, v48, &qword_256EA2610);
  sub_23F6B5164(v45, 1, v34);
  if (v50)
  {
    sub_23F6B6EF8(v5);
    sub_23F6B6EF8(v2);
    sub_23F7B0990(v1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    goto LABEL_9;
  }
  sub_23F6D3ECC(v3, v45, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
  sub_23F6D3458(&qword_256EA2620, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95B0], MEMORY[0x24BEB95C8]);
  v53 = sub_23F6B5624();
  v54 = *(void (**)(uint64_t))(v4 + 8);
  v55 = sub_23F6B6F9C();
  v54(v55);
  sub_23F6D3930(v5);
  sub_23F6D3930(v2);
  v56 = sub_23F77E680();
  v54(v56);
  sub_23F6D3930(v0);
  if ((v53 & 1) == 0)
    goto LABEL_34;
LABEL_12:
  v58 = v112;
  v57 = v113;
  if (*v112 != *v113)
    goto LABEL_34;
  v59 = v110;
  v60 = v107;
  sub_23F923268((uint64_t)&v112[v110[6]], v107);
  v61 = v111;
  sub_23F923268((uint64_t)&v57[v59[6]], v111);
  v62 = v109;
  v63 = v109 + *(int *)(v106 + 48);
  sub_23F923268(v60, v109);
  sub_23F923268(v61, v63);
  v64 = sub_23F6D3CB4();
  v65 = v108;
  sub_23F6B5164(v64, v66, v108);
  if (v50)
  {
    sub_23F6D3748(v61);
    sub_23F6D3748(v60);
    v68 = sub_23F6B5164(v63, 1, v65);
    v69 = (uint64_t)v103;
    v70 = (uint64_t)v104;
    v71 = (uint64_t)v105;
    if (v50)
    {
      sub_23F6D378C(v68, &qword_256EA8588);
      goto LABEL_23;
    }
    goto LABEL_21;
  }
  v72 = (uint64_t)v102;
  sub_23F923E34(v62, v67, &qword_256EA8588);
  sub_23F6B5164(v63, 1, v65);
  v70 = (uint64_t)v104;
  v71 = (uint64_t)v105;
  if (v73)
  {
    sub_23F6B64F4(v111);
    sub_23F6B64F4(v60);
    sub_23F78F204(v75, type metadata accessor for TranscriptProtoCandidatePromptStatus);
LABEL_21:
    v51 = &qword_256EB1D90;
    v52 = v62;
    goto LABEL_10;
  }
  v76 = v98;
  sub_23F9246E8(v63, v74, type metadata accessor for TranscriptProtoCandidatePromptStatus);
  static TranscriptProtoCandidatePromptStatus.== infix(_:_:)();
  LODWORD(v108) = v77;
  sub_23F6D3928(v76);
  sub_23F6D3C1C(v111);
  sub_23F6D3C1C(v60);
  sub_23F6D3928(v72);
  sub_23F6D3C1C(v62);
  v69 = (uint64_t)v103;
  if ((v108 & 1) == 0)
    goto LABEL_34;
LABEL_23:
  sub_23F923268((uint64_t)&v58[v59[7]], v71);
  sub_23F923268((uint64_t)&v57[v59[7]], v70);
  v78 = v101;
  v79 = v101 + *(int *)(v99 + 48);
  sub_23F923268(v71, v101);
  sub_23F923268(v70, v79);
  v80 = sub_23F923D00();
  v81 = v100;
  sub_23F6B5164(v80, v82, v100);
  if (v50)
  {
    sub_23F6D3748(v70);
    sub_23F6D3748(v71);
    v84 = sub_23F6B5164(v79, 1, v81);
    if (v50)
    {
      sub_23F923588(v84, &qword_256EA25E0);
LABEL_33:
      v90 = v94;
      sub_23F713F84(v94, (uint64_t)&v58[v59[8]]);
      v91 = (uint64_t)&v57[v59[8]];
      v92 = v95;
      sub_23F713F84(v95, v91);
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6B6060();
      sub_23F9243AC(v92);
      sub_23F9243AC(v90);
      goto LABEL_34;
    }
    goto LABEL_31;
  }
  sub_23F923A50(v78, v83, &qword_256EA25E0);
  sub_23F6B5164(v79, 1, v81);
  if (v85)
  {
    sub_23F6B64F4(v70);
    sub_23F6B64F4(v71);
    sub_23F6D3D20(v86, type metadata accessor for TranscriptProtoStatementID);
LABEL_31:
    v51 = &qword_256EA25E8;
    v52 = v78;
    goto LABEL_10;
  }
  v87 = v93;
  sub_23F7F6534(v79, v93);
  static TranscriptProtoStatementID.== infix(_:_:)();
  v89 = v88;
  sub_23F6D38A0(v87);
  sub_23F6D3C1C(v70);
  sub_23F6D3C1C(v71);
  sub_23F6D38A0(v69);
  sub_23F6D3C1C(v78);
  if ((v89 & 1) != 0)
    goto LABEL_33;
LABEL_34:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoCandidate.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoCandidate, &qword_256EB1D98, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidate);
}

unint64_t sub_23F89FD18()
{
  static TranscriptProtoCandidate.protoMessageName.getter();
  return 0xD000000000000014;
}

#error "23F89FD44: call analysis failed (funcsize=5)"

void sub_23F89FD50()
{
  TranscriptProtoCandidate.traverse<A>(visitor:)();
}

uint64_t sub_23F89FD64()
{
  sub_23F6D3458(&qword_256EB41A0, type metadata accessor for TranscriptProtoCandidate, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidate);
  return sub_23FB2D784();
}

uint64_t sub_23F89FDB8()
{
  sub_23F6D3458(&qword_256EB1FC0, type metadata accessor for TranscriptProtoCandidate, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidate);
  return sub_23FB2D8F8();
}

uint64_t sub_23F89FDFC()
{
  sub_23F6D3458(&qword_256EB1FC0, type metadata accessor for TranscriptProtoCandidate, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidate);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoCandidatePromptStatus.protoMessageName.getter()
{
  return sub_23F6D3738(32);
}

uint64_t sub_23F89FE68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0958);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0958);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "notPrompted";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "confirmed";
  *((_QWORD *)v11 + 1) = 9;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "picked";
  *((_QWORD *)v13 + 1) = 6;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoCandidatePromptStatus._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0C60, (uint64_t)qword_256EB0958, a1);
}

void TranscriptProtoCandidatePromptStatus.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_23F6D39E0(a1, a2);
  while (1)
  {
    v3 = sub_23FB2D7B4();
    if (v2 || (v4 & 1) != 0)
      break;
    if (v3 == 3)
    {
      sub_23F924774();
    }
    else
    {
      if (v3 == 2)
      {
        sub_23F923F98();
      }
      else
      {
        if (v3 != 1)
          goto LABEL_11;
        sub_23F924988();
      }
      sub_23F89A500();
    }
LABEL_11:
    sub_23F6B6098();
  }
  sub_23F6D3C2C();
}

uint64_t sub_23F8A0074()
{
  return sub_23FB2D844();
}

void TranscriptProtoCandidatePromptStatus.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  sub_23F924878();
  if ((v2 & 1) != 0)
    goto LABEL_8;
  if ((*(_BYTE *)(v0 + 8) & 1) != 0)
  {
    if (*(_QWORD *)v0)
    {
      sub_23F92479C();
      sub_23F8A0214();
    }
    else
    {
      sub_23F9244C4();
    }
  }
  else
  {
    v3 = sub_23F9247B8();
    sub_23F8A02C8(v3);
  }
  if (!v1)
  {
LABEL_8:
    type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
    sub_23F6D3A68();
  }
  sub_23F6D377C();
}

void sub_23F8A017C()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F6D3DC4();
  sub_23F923734();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F6B53AC();
  if ((*(_BYTE *)(v0 + 9) & 1) == 0 && (*(_BYTE *)(v0 + 8) & 1) != 0 && !*(_QWORD *)v0)
    sub_23F923D0C();
  __break(1u);
}

void sub_23F8A0214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6B5220();
  v1 = v0;
  sub_23F9239D4();
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F6B53AC();
  if ((*(_BYTE *)(v1 + 9) & 1) == 0 && (*(_BYTE *)(v1 + 8) & 1) != 0 && *(_QWORD *)v1)
    sub_23F923D0C();
  __break(1u);
}

void sub_23F8A02C8(uint64_t a1)
{
  if ((*(_BYTE *)(a1 + 9) & 1) != 0 || (*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_23FB2D97C();
    sub_23F6D3ABC();
  }
}

void static TranscriptProtoCandidatePromptStatus.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F6D36BC();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F9248D0();
  if ((v4 & 1) != 0)
  {
    if ((v3 & 1) != 0)
    {
LABEL_3:
      v5 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
      sub_23F6D3614(*(int *)(v5 + 20));
      sub_23F6D36AC(*(int *)(v5 + 20));
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6D3600();
      sub_23F6D36D0();
      sub_23F6D3820(v0);
    }
  }
  else
  {
    if ((v3 & 1) != 0)
      goto LABEL_5;
    sub_23F9248B8();
    if ((v9 & 1) != 0)
    {
      if (v8)
      {
        if ((v7 & 1) != 0 && v6)
          goto LABEL_3;
      }
      else if ((v7 & 1) != 0 && !v6)
      {
        goto LABEL_3;
      }
    }
    else if ((v7 & 1) == 0 && v8 == v6)
    {
      goto LABEL_3;
    }
  }
LABEL_5:
  sub_23F6D3B34();
  sub_23F6B69E0();
}

uint64_t TranscriptProtoCandidatePromptStatus.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoCandidatePromptStatus, &qword_256EB1DA0, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidatePromptStatus);
}

unint64_t sub_23F8A03F8()
{
  static TranscriptProtoCandidatePromptStatus.protoMessageName.getter();
  return 0xD000000000000020;
}

void sub_23F8A041C(uint64_t a1, uint64_t a2)
{
  TranscriptProtoCandidatePromptStatus.decodeMessage<A>(decoder:)(a1, a2);
}

void sub_23F8A0430()
{
  TranscriptProtoCandidatePromptStatus.traverse<A>(visitor:)();
}

uint64_t sub_23F8A0444()
{
  sub_23F6D3458(&qword_256EB4198, type metadata accessor for TranscriptProtoCandidatePromptStatus, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidatePromptStatus);
  return sub_23FB2D784();
}

uint64_t sub_23F8A0498()
{
  sub_23F6D3458(&qword_256EB2A00, type metadata accessor for TranscriptProtoCandidatePromptStatus, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidatePromptStatus);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8A04DC()
{
  sub_23F6D3458(&qword_256EB2A00, type metadata accessor for TranscriptProtoCandidatePromptStatus, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidatePromptStatus);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoClientAction.protoMessageName.getter()
{
  return sub_23F6D3738(23);
}

uint64_t sub_23F8A0548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0970);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0970);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1E0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 2;
  *(_QWORD *)v7 = "toolId";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 3;
  *(_QWORD *)v11 = "parameters";
  *(_QWORD *)(v11 + 8) = 10;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 4;
  *(_QWORD *)v13 = "clientQueryId";
  *((_QWORD *)v13 + 1) = 13;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 5;
  *(_QWORD *)v15 = "planEventId";
  *((_QWORD *)v15 + 1) = 11;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 6;
  *(_QWORD *)v17 = "shimParameterResolution";
  *((_QWORD *)v17 + 1) = 23;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 7;
  *(_QWORD *)v19 = "statementId";
  *((_QWORD *)v19 + 1) = 11;
  v19[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoClientAction._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0C68, (uint64_t)qword_256EB0970, a1);
}

void TranscriptProtoClientAction.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 2:
          sub_23F923334();
          break;
        case 3:
          sub_23F924738();
          break;
        case 4:
        case 5:
          sub_23F6D37D4();
          break;
        case 6:
          sub_23F6D3598();
          sub_23F8A0860();
          break;
        case 7:
          sub_23F6D3598();
          sub_23F8A092C();
          break;
        default:
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

uint64_t sub_23F8A0860()
{
  sub_23FB2D6DC();
  type metadata accessor for TranscriptProtoShimParameterResolution(0);
  sub_23F6D3458(&qword_256EB1DB0, type metadata accessor for TranscriptProtoShimParameterResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoShimParameterResolution);
  sub_23F6D3458(&qword_256EB1DB8, type metadata accessor for TranscriptProtoShimParameterResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoShimParameterResolution);
  return sub_23FB2D79C();
}

void sub_23F8A092C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  sub_23F6B5220();
  sub_23F923498(v0, v1, v2, v3, v4);
  sub_23F6D3A84();
  sub_23F6D3724();
  sub_23F6D3644();
  sub_23F6B5100();
}

void TranscriptProtoClientAction.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F923528();
  sub_23F6D36FC();
  if (!v2 || (sub_23FB2D9A0(), !v1))
  {
    sub_23F924890();
    if (!v3
      || (sub_23F923AE8(),
          sub_23F6B632C(),
          v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BEB95B0],
          sub_23F6D3458(&qword_256EA3248, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95B0], MEMORY[0x24BEB95A0]),
          sub_23F6D3458(&qword_256EB1DA8, v4, MEMORY[0x24BEB95C0]),
          sub_23F923DB0(),
          !v1))
    {
      v5 = sub_23F923F48();
      sub_23F6C7CB4(v5);
      if (!v1)
      {
        v6 = sub_23F923F48();
        sub_23F6C7CE0(v6);
        if (*(_QWORD *)(*(_QWORD *)(v0 + 24) + 16))
        {
          sub_23F923AE8();
          v7 = sub_23F924924();
          type metadata accessor for TranscriptProtoShimParameterResolution(v7);
          sub_23F92491C(&qword_256EB1DB0, v8, (uint64_t)&protocol conformance descriptor for TranscriptProtoShimParameterResolution);
          sub_23F92491C(&qword_256EB1DB8, v9, (uint64_t)&protocol conformance descriptor for TranscriptProtoShimParameterResolution);
          sub_23F923DB0();
        }
        sub_23F923F48();
        sub_23F8A0B2C();
        type metadata accessor for TranscriptProtoClientAction(0);
        sub_23F9233EC();
      }
    }
  }
  sub_23F6D3B40();
}

void sub_23F8A0B2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);

  sub_23F6B5220();
  v3 = v2;
  sub_23F72E4BC();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_23F70D7F8();
  type metadata accessor for TranscriptProtoStatementID(v5);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B53AC();
  v7 = v3(0);
  sub_23F923FD0(*(int *)(v7 + 36));
  v8 = sub_23F923310(v1);
  if (v9)
  {
    sub_23F77DD64(v8, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0(v1, v0, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23F6B69B8();
    sub_23F92410C();
    v10 = sub_23F72E2E0();
    sub_23F6D3508(v10, v11);
  }
  sub_23F77DB18();
  sub_23F6B5100();
}

void static TranscriptProtoClientAction.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  sub_23F6B50E8();
  v6 = sub_23F6D35C0();
  v55 = *(_QWORD *)(v6 - 8);
  v56 = v6;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  v54 = (uint64_t)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v9);
  v53 = (uint64_t)&v51 - v10;
  sub_23F923344();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B59E0();
  v12 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6D3F60();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v51 - v17;
  sub_23F6B6754();
  v21 = v21 && v19 == v20;
  if (v21 || (sub_23F6B5280() & 1) != 0)
  {
    sub_23F924824();
    sub_23F69CA44();
    if ((v22 & 1) != 0)
    {
      sub_23F924A74();
      if (v24)
      {
        if (!v23)
          goto LABEL_37;
        sub_23F924238();
        v27 = v21 && v25 == v26;
        if (!v27 && (sub_23F6B5280() & 1) == 0)
          goto LABEL_37;
      }
      else if (v23)
      {
        goto LABEL_37;
      }
      v28 = *(_QWORD *)(v2 + 56);
      v29 = *(_QWORD *)(v1 + 56);
      if (v28)
      {
        if (!v29)
          goto LABEL_37;
        v30 = *(_QWORD *)(v2 + 48) == *(_QWORD *)(v1 + 48) && v28 == v29;
        if (!v30 && (sub_23F6B5280() & 1) == 0)
          goto LABEL_37;
      }
      else if (v29)
      {
        goto LABEL_37;
      }
      sub_23F69CC68();
      if ((v31 & 1) == 0)
        goto LABEL_37;
      v32 = type metadata accessor for TranscriptProtoClientAction(0);
      sub_23F923760(v2 + *(int *)(v32 + 36), v33, &qword_256EA25E0);
      v52 = v32;
      sub_23F92332C(v1 + *(int *)(v32 + 36), v0);
      v34 = sub_23F924A38();
      sub_23F92332C(v34, v35);
      v36 = sub_23F6B6190();
      sub_23F92332C(v36, v37);
      v38 = sub_23F9230E4(v3);
      if (v21)
      {
        sub_23F6B6EF8(v0);
        sub_23F6B6EF8((uint64_t)v18);
        v40 = sub_23F9230E4(v12);
        if (v21)
        {
          sub_23F6D378C(v40, &qword_256EA25E0);
          goto LABEL_36;
        }
      }
      else
      {
        sub_23F9232A4(v38, v39, &qword_256EA25E0);
        sub_23F9230E4(v12);
        if (!v41)
        {
          v43 = sub_23F77E668();
          sub_23F9239CC(v43, v44);
          sub_23F9238E8();
          v46 = v45;
          sub_23F6D3DAC(v4);
          sub_23F6D38A8(v0);
          sub_23F6D38A8((uint64_t)v18);
          sub_23F6D3DAC(v5);
          sub_23F6D38A8(v3);
          if ((v46 & 1) == 0)
            goto LABEL_37;
LABEL_36:
          v47 = v52;
          v48 = v53;
          sub_23F923484(v53, v2 + *(int *)(v52 + 40));
          v49 = v1 + *(int *)(v47 + 40);
          v50 = v54;
          sub_23F923484(v54, v49);
          sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          sub_23F6B5624();
          sub_23F6D39FC(v50);
          sub_23F6D39FC(v48);
          goto LABEL_37;
        }
        sub_23F6B64F4(v0);
        sub_23F6B64F4((uint64_t)v18);
        sub_23F6D3C24(v42, type metadata accessor for TranscriptProtoStatementID);
      }
      sub_23F6D378C(v40, &qword_256EA25E8);
    }
  }
LABEL_37:
  sub_23F693DDC();
}

uint64_t TranscriptProtoClientAction.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoClientAction, &qword_256EB1DC0, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientAction);
}

unint64_t sub_23F8A0F78()
{
  static TranscriptProtoClientAction.protoMessageName.getter();
  return 0xD000000000000017;
}

void sub_23F8A0F9C()
{
  TranscriptProtoClientAction.decodeMessage<A>(decoder:)();
}

void sub_23F8A0FB0()
{
  TranscriptProtoClientAction.traverse<A>(visitor:)();
}

uint64_t sub_23F8A0FC4()
{
  sub_23F6D3458(&qword_256EB4190, type metadata accessor for TranscriptProtoClientAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientAction);
  return sub_23FB2D784();
}

uint64_t sub_23F8A1018()
{
  sub_23F6D3458(&qword_256EB2A18, type metadata accessor for TranscriptProtoClientAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientAction);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8A105C()
{
  sub_23F6D3458(&qword_256EB2A18, type metadata accessor for TranscriptProtoClientAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientAction);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoShimParameterResolution.protoMessageName.getter()
{
  return sub_23F6D3738(34);
}

uint64_t sub_23F8A10C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0988);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0988);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "resolved";
  *(_QWORD *)(v7 + 8) = 8;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "unresolved";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoShimParameterResolution._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0C70, (uint64_t)qword_256EB0988, a1);
}

void TranscriptProtoShimParameterResolution.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F6D39E0(a1, a2);
  while (1)
  {
    v3 = sub_23FB2D7B4();
    if (v2 || (v4 & 1) != 0)
      break;
    if (v3 == 2)
    {
      v9 = sub_23F923100();
      sub_23F8A1678(v9, v10, v11, v12);
    }
    else if (v3 == 1)
    {
      v5 = sub_23F923100();
      sub_23F8A1290(v5, v6, v7, v8);
    }
    sub_23F6B6098();
  }
  sub_23F6D3C2C();
}

void sub_23F8A1290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v37 = a2;
  v39 = a4;
  v38 = a3;
  v5 = sub_23FB2EB1C();
  v35 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v34 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v31 - v8;
  v10 = sub_23F6916B8(&qword_256EA2688);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoShimParameterResolutionEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v31 - v17;
  v19 = sub_23F6916B8(&qword_256EA2610);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  v32 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA2688);
  v33 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v33 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA2688);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
    }
    else
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EA2610);
      v26 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
      v26(v9, v16, v5);
      v26(v24, v9, v5);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
  }
  v27 = v36;
  sub_23F6D3458(&qword_256EA3248, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95B0], MEMORY[0x24BEB95A0]);
  sub_23FB2D8B0();
  if (v27)
  {
    v28 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v28, &qword_256EA2610);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EA2610);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EA2610);
    v28 = (uint64_t)v22;
    goto LABEL_10;
  }
  v29 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
  v29(v34, v22, v5);
  if (v33 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EA2610);
  v30 = v32;
  sub_23F6B4F84(v32, &qword_256EA2688);
  v29((char *)v30, v34, v5);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v30, 0, 1, v25);
}

void sub_23F8A1678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA2688);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoShimParameterResolutionEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4678);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA2688);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA2688);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4678);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoUnresolvedParameterValue);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoUnresolvedParameterValue);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2A40, type metadata accessor for TranscriptProtoUnresolvedParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnresolvedParameterValue);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4678);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4678);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4678);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoUnresolvedParameterValue);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4678);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA2688);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoUnresolvedParameterValue);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

#error "23F8A1A98: call analysis failed (funcsize=36)"

void sub_23F8A1AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v13[2];

  v13[1] = a4;
  v5 = sub_23F6916B8(&qword_256EA2688);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23FB2EB1C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v7, &qword_256EA2688);
  v12 = type metadata accessor for TranscriptProtoShimParameterResolutionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v12) == 1)
  {
    sub_23F6B4F84((uint64_t)v7, &qword_256EA2688);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      sub_23F6D3458(&qword_256EA3248, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95B0], MEMORY[0x24BEB95A0]);
      sub_23FB2D9D0();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      return;
    }
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
  }
  __break(1u);
}

void sub_23F8A1C98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA2688);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA2688);
  v8 = type metadata accessor for TranscriptProtoShimParameterResolutionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA2688);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoUnresolvedParameterValue);
      sub_23F6D3458(&qword_256EB2A40, type metadata accessor for TranscriptProtoUnresolvedParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnresolvedParameterValue);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoUnresolvedParameterValue);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
  }
  __break(1u);
}

void static TranscriptProtoShimParameterResolution.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F6B50E8();
  v5 = v4;
  v39 = sub_23F6B53A4();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v39);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = sub_23F6D38F8(v9, v10, v11, v12, v13, v14, v15, v16, v40);
  type metadata accessor for TranscriptProtoShimParameterResolutionEnum(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B59E0();
  v19 = sub_23F6916B8(&qword_256EA2690);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6D3A70();
  v24 = MEMORY[0x24BDAC7A8](v23);
  sub_23F923124(v24, v25, v26, v27, v28, v29, v30, v31, v41);
  sub_23F923164(v5, v0);
  v32 = v1 + *(int *)(v19 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v32);
  v33 = sub_23F9230E4(v1);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v35 = sub_23F9230E4(v32);
    if (v36)
    {
      sub_23F6D378C(v35, &qword_256EA2688);
LABEL_11:
      v38 = type metadata accessor for TranscriptProtoShimParameterResolution(0);
      sub_23F6D3794(v38);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v33, v34, &qword_256EA2688);
  sub_23F9230E4(v32);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v37, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
LABEL_9:
    sub_23F6D378C(v35, &qword_256EA2690);
    goto LABEL_12;
  }
  sub_23F923270();
  sub_23F6D3D70();
  static TranscriptProtoShimParameterResolutionEnum.== infix(_:_:)();
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoShimParameterResolution.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoShimParameterResolution, &qword_256EB1DB8, (uint64_t)&protocol conformance descriptor for TranscriptProtoShimParameterResolution);
}

unint64_t sub_23F8A2064()
{
  static TranscriptProtoShimParameterResolution.protoMessageName.getter();
  return 0xD000000000000022;
}

void sub_23F8A2088(uint64_t a1, uint64_t a2)
{
  TranscriptProtoShimParameterResolution.decodeMessage<A>(decoder:)(a1, a2);
}

uint64_t sub_23F8A209C()
{
  return TranscriptProtoShimParameterResolution.traverse<A>(visitor:)();
}

uint64_t sub_23F8A20B0()
{
  sub_23F6D3458(&qword_256EB4188, type metadata accessor for TranscriptProtoShimParameterResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoShimParameterResolution);
  return sub_23FB2D784();
}

uint64_t sub_23F8A2104()
{
  sub_23F6D3458(&qword_256EB1DB0, type metadata accessor for TranscriptProtoShimParameterResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoShimParameterResolution);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8A2148()
{
  sub_23F6D3458(&qword_256EB1DB0, type metadata accessor for TranscriptProtoShimParameterResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoShimParameterResolution);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoUnresolvedParameterValue.protoMessageName.getter()
{
  return sub_23F6D3738(35);
}

uint64_t sub_23F8A21B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB09A0);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB09A0);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "raw";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "candidates";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoUnresolvedParameterValue._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0C78, (uint64_t)qword_256EB09A0, a1);
}

void TranscriptProtoUnresolvedParameterValue.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6D3DC4();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_23F923970();
      }
      else if (v1 == 1)
      {
        sub_23F923B94();
        sub_23F88FD7C();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D3710();
}

void TranscriptProtoUnresolvedParameterValue.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F6D3DC4();
  sub_23F924398();
  sub_23F923DFC();
  sub_23F8A2454();
  if (!v0)
  {
    sub_23F92468C();
    if (v1)
    {
      sub_23F6B632C();
      sub_23F6D3458(&qword_256EA3248, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95B0], MEMORY[0x24BEB95A0]);
      sub_23F6D36E4();
    }
    type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
    sub_23F6D37BC();
  }
  sub_23F6D3710();
}

void sub_23F8A2454()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  sub_23F6B5220();
  sub_23F924588(v1, v2, v3, v4, v5, v6);
  sub_23F72E4BC();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_23F923A64();
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F924168();
  sub_23F923FD0(*(int *)(v10 + 20));
  v11 = sub_23F6B5164(v0, 1, v8);
  if (v12)
  {
    sub_23F77DD64(v11, &qword_256EA2610);
  }
  else
  {
    sub_23F924574();
    sub_23F6D3458(&qword_256EA3248, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95B0], MEMORY[0x24BEB95A0]);
    sub_23F924004();
    sub_23F9245A4();
  }
  sub_23F77DB18();
  sub_23F6B5100();
}

void static TranscriptProtoUnresolvedParameterValue.== infix(_:_:)()
{
  sub_23F8D6CBC();
}

uint64_t TranscriptProtoUnresolvedParameterValue.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoUnresolvedParameterValue, &qword_256EB1DC8, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnresolvedParameterValue);
}

unint64_t sub_23F8A254C()
{
  static TranscriptProtoUnresolvedParameterValue.protoMessageName.getter();
  return 0xD000000000000023;
}

void sub_23F8A2570()
{
  TranscriptProtoUnresolvedParameterValue.decodeMessage<A>(decoder:)();
}

void sub_23F8A2584()
{
  TranscriptProtoUnresolvedParameterValue.traverse<A>(visitor:)();
}

uint64_t sub_23F8A2598()
{
  sub_23F6D3458(&qword_256EB4180, type metadata accessor for TranscriptProtoUnresolvedParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnresolvedParameterValue);
  return sub_23FB2D784();
}

uint64_t sub_23F8A25EC()
{
  sub_23F6D3458(&qword_256EB2A40, type metadata accessor for TranscriptProtoUnresolvedParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnresolvedParameterValue);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8A2630()
{
  sub_23F6D3458(&qword_256EB2A40, type metadata accessor for TranscriptProtoUnresolvedParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnresolvedParameterValue);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoClientCustom.protoMessageName.getter()
{
  return sub_23F6D3738(23);
}

uint64_t sub_23F8A269C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB09B8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB09B8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "tag";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "value";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "debugDescription";
  *((_QWORD *)v13 + 1) = 16;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoClientCustom._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0C80, (uint64_t)qword_256EB09B8, a1);
}

void TranscriptProtoClientCustom.decodeMessage<A>(decoder:)()
{
  sub_23F90C108();
}

void TranscriptProtoClientCustom.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F6D3DC4();
  sub_23F924A4C();
  if ((sub_23F924BF0() & 1) != 0 || (sub_23F6B6224(), sub_23F9239EC(), !v0))
  {
    if ((sub_23F924BF0() & 1) != 0 || (sub_23F6B6224(), sub_23F9239EC(), !v0))
    {
      sub_23F6D36FC();
      if (!v1 || (sub_23F923258(), !v0))
      {
        type metadata accessor for TranscriptProtoClientCustom(0);
        sub_23F9231A8();
      }
    }
  }
  sub_23F6D3710();
}

void static TranscriptProtoClientCustom.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F6D36BC();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F923860();
}

void sub_23F8A2954(char a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  BOOL v4;
  uint64_t v5;

  if ((a1 & 1) != 0 && (MEMORY[0x242671028](v3[2], v3[3], v2[2], v2[3]) & 1) != 0)
  {
    v4 = v3[4] == v2[4] && v3[5] == v2[5];
    if (v4 || (sub_23F6B5280() & 1) != 0)
    {
      v5 = type metadata accessor for TranscriptProtoClientCustom(0);
      sub_23F6D3614(*(int *)(v5 + 28));
      sub_23F6D36AC(*(int *)(v5 + 28));
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6D3600();
      sub_23F6D36D0();
      sub_23F6D3820(v1);
    }
  }
  sub_23F6D3B34();
  sub_23F6B69E0();
}

uint64_t TranscriptProtoClientCustom.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoClientCustom, &qword_256EB1DD0, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientCustom);
}

unint64_t sub_23F8A2A04()
{
  static TranscriptProtoClientCustom.protoMessageName.getter();
  return 0xD000000000000017;
}

void sub_23F8A2A28()
{
  TranscriptProtoClientCustom.decodeMessage<A>(decoder:)();
}

void sub_23F8A2A3C()
{
  TranscriptProtoClientCustom.traverse<A>(visitor:)();
}

uint64_t sub_23F8A2A50()
{
  sub_23F6D3458(&qword_256EB4178, type metadata accessor for TranscriptProtoClientCustom, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientCustom);
  return sub_23FB2D784();
}

uint64_t sub_23F8A2AA4()
{
  sub_23F6D3458(&qword_256EB2A58, type metadata accessor for TranscriptProtoClientCustom, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientCustom);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8A2AE8()
{
  sub_23F6D3458(&qword_256EB2A58, type metadata accessor for TranscriptProtoClientCustom, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientCustom);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoDecompositionResult.protoMessageName.getter()
{
  return sub_23F6D3738(30);
}

uint64_t sub_23F8A2B54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB09D0);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB09D0);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "prompt";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "queries";
  *((_QWORD *)v11 + 1) = 7;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoDecompositionResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0C88, (uint64_t)qword_256EB09D0, a1);
}

void TranscriptProtoDecompositionResult.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_23F9249E0();
      }
      else if (v1 == 1)
      {
        sub_23F6D37D4();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D377C();
}

void TranscriptProtoDecompositionResult.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F923EF8();
  sub_23F6C74C4(v2);
  if (!v0)
  {
    if (*(_QWORD *)(*(_QWORD *)v1 + 16))
      sub_23FB2D988();
    type metadata accessor for TranscriptProtoDecompositionResult(0);
    sub_23F6D37BC();
  }
  sub_23F6D3674();
}

void static TranscriptProtoDecompositionResult.== infix(_:_:)()
{
  sub_23F8A2DB0();
}

void sub_23F8A2DB0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t (*v4)(_QWORD, _QWORD);
  uint64_t (*v5)(_QWORD, _QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  sub_23F6B50E8();
  v5 = v4;
  sub_23F6D35C0();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F6D3DD8();
  v8 = v3[2];
  v9 = v2[2];
  if (!v8)
  {
    if (v9)
      goto LABEL_12;
    goto LABEL_10;
  }
  if (v9)
  {
    v10 = v3[1] == v2[1] && v8 == v9;
    if (v10 || (sub_23F6B5280() & 1) != 0)
    {
LABEL_10:
      if ((v5(*v3, *v2) & 1) != 0)
      {
        v11 = sub_23F923C1C();
        sub_23F923308(v1, (uint64_t)v3 + *(int *)(v11 + 24));
        sub_23F6D36AC(*(int *)(v11 + 24));
        sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        sub_23F6D3600();
        sub_23F6D3820(v0);
        sub_23F6D3820(v1);
      }
    }
  }
LABEL_12:
  sub_23F693DDC();
}

uint64_t TranscriptProtoDecompositionResult.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoDecompositionResult, &qword_256EB1DD8, (uint64_t)&protocol conformance descriptor for TranscriptProtoDecompositionResult);
}

unint64_t sub_23F8A2ED4()
{
  static TranscriptProtoDecompositionResult.protoMessageName.getter();
  return 0xD00000000000001ELL;
}

void sub_23F8A2EF8()
{
  TranscriptProtoDecompositionResult.decodeMessage<A>(decoder:)();
}

void sub_23F8A2F0C()
{
  TranscriptProtoDecompositionResult.traverse<A>(visitor:)();
}

uint64_t sub_23F8A2F20()
{
  sub_23F6D3458(&qword_256EB4170, type metadata accessor for TranscriptProtoDecompositionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoDecompositionResult);
  return sub_23FB2D784();
}

uint64_t sub_23F8A2F74()
{
  sub_23F6D3458(&qword_256EB2A70, type metadata accessor for TranscriptProtoDecompositionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoDecompositionResult);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8A2FB8()
{
  sub_23F6D3458(&qword_256EB2A70, type metadata accessor for TranscriptProtoDecompositionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoDecompositionResult);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoActionParameterContext.protoMessageName.getter()
{
  return sub_23F6D3738(33);
}

uint64_t sub_23F8A3024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB09E8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB09E8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 4;
  *(_QWORD *)v7 = "statementId";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "toolId";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "parameterId";
  *((_QWORD *)v13 + 1) = 11;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoActionParameterContext._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0C90, (uint64_t)qword_256EB09E8, a1);
}

void TranscriptProtoActionParameterContext.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 4)
      {
        sub_23F9235E8();
      }
      else if (v1 == 3 || v1 == 2)
      {
        sub_23F6D395C();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoActionParameterContext.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F6D36FC();
  if (!v1 || (sub_23F923258(), !v0))
  {
    sub_23F6D36FC();
    if (!v2 || (sub_23F923258(), !v0))
    {
      v3 = sub_23F6D3D7C();
      sub_23F8A32FC(v3);
      if (!v0)
      {
        type metadata accessor for TranscriptProtoActionParameterContext(0);
        sub_23F9231A8();
      }
    }
  }
  sub_23F6D3674();
}

void sub_23F8A32FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoActionParameterContext(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void static TranscriptProtoActionParameterContext.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  sub_23F6B50E8();
  v6 = v5;
  v8 = v7;
  v9 = sub_23F6B53A4();
  v40 = *(_QWORD *)(v9 - 8);
  v41 = v9;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v39 = (uint64_t)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v12);
  v38 = (uint64_t)&v38 - v13;
  v14 = sub_23F923344();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B5268();
  v16 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B53AC();
  sub_23F6B6088();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B65E0();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F6D3BD8();
  MEMORY[0x24BDAC7A8](v20);
  v21 = sub_23F9238C8();
  v22 = type metadata accessor for TranscriptProtoActionParameterContext(v21);
  v23 = *(int *)(v22 + 24);
  v42 = v8;
  v24 = v8 + v23;
  v25 = v22;
  sub_23F92344C(v24, v0);
  v26 = *(int *)(v25 + 24);
  v43 = v6;
  sub_23F92344C(v6 + v26, v1);
  v27 = v2 + *(int *)(v16 + 48);
  sub_23F92344C(v0, v2);
  sub_23F92344C(v1, v27);
  sub_23F6B5164(v2, 1, v14);
  if (!v30)
  {
    sub_23F923760(v2, v28, &qword_256EA25E0);
    sub_23F6B5164(v27, 1, v14);
    if (!v30)
    {
      sub_23F923774(v27, v3);
      sub_23F924C40();
      v27 = v32;
      sub_23F77DB60(v3);
      sub_23F6D387C(v1);
      sub_23F6D387C(v0);
      sub_23F77DB60(v4);
      sub_23F6D387C(v2);
      if ((v27 & 1) == 0)
        goto LABEL_22;
      goto LABEL_11;
    }
    sub_23F6D3748(v1);
    sub_23F6D3748(v0);
    sub_23F77DB94(v31, type metadata accessor for TranscriptProtoStatementID);
LABEL_9:
    sub_23F6B6034(v29, &qword_256EA25E8);
    goto LABEL_22;
  }
  sub_23F6D3C1C(v1);
  sub_23F6D3C1C(v0);
  v29 = sub_23F6B5164(v27, 1, v14);
  if (!v30)
    goto LABEL_9;
  sub_23F6B6034(v29, &qword_256EA25E0);
LABEL_11:
  sub_23F923B60();
  if (v30)
    v35 = v33 == v34;
  else
    v35 = 0;
  if (v35 || (sub_23F6B5280() & 1) != 0)
  {
    v36 = *(_QWORD *)(v1 + 16) == *(_QWORD *)(v27 + 16) && *(_QWORD *)(v1 + 24) == *(_QWORD *)(v27 + 24);
    if (v36 || (sub_23F6B5280() & 1) != 0)
    {
      v37 = v38;
      sub_23F6D3818(v38, v1 + *(int *)(v25 + 28));
      sub_23F6D3818(v39, v27 + *(int *)(v25 + 28));
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9232F0();
      sub_23F9232DC();
      sub_23F6D3874(v37);
    }
  }
LABEL_22:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoActionParameterContext.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoActionParameterContext, &qword_256EB1DE0, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterContext);
}

unint64_t sub_23F8A376C()
{
  static TranscriptProtoActionParameterContext.protoMessageName.getter();
  return 0xD000000000000021;
}

void sub_23F8A3790()
{
  TranscriptProtoActionParameterContext.decodeMessage<A>(decoder:)();
}

void sub_23F8A37A4()
{
  TranscriptProtoActionParameterContext.traverse<A>(visitor:)();
}

uint64_t sub_23F8A37B8()
{
  sub_23F6D3458(&qword_256EB4168, type metadata accessor for TranscriptProtoActionParameterContext, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterContext);
  return sub_23FB2D784();
}

uint64_t sub_23F8A380C()
{
  sub_23F6D3458(&qword_256EB2A88, type metadata accessor for TranscriptProtoActionParameterContext, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterContext);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8A3850()
{
  sub_23F6D3458(&qword_256EB2A88, type metadata accessor for TranscriptProtoActionParameterContext, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterContext);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoIntelligenceFlowError.protoMessageName.getter()
{
  return sub_23F6D3738(32);
}

uint64_t sub_23F8A38BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0A00);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0A00);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "domain";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "code";
  *((_QWORD *)v11 + 1) = 4;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoIntelligenceFlowError._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0C98, (uint64_t)qword_256EB0A00, a1);
}

void TranscriptProtoIntelligenceFlowError.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F8A3A44(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C0D8]);
}

void sub_23F8A3A44(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  char v10;

  v9 = sub_23F923114();
  if (!v5)
  {
    while ((v10 & 1) == 0)
    {
      if (v9 == 2)
      {
        a4(v4 + 16, a2, a3);
      }
      else if (v9 == 1)
      {
        sub_23F924610();
      }
      v9 = sub_23F924AB8();
    }
  }
  sub_23F6D3674();
}

void TranscriptProtoIntelligenceFlowError.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6D36FC();
  if (!v2 || (sub_23F923258(), !v1))
  {
    if (!*(_QWORD *)(v0 + 16) || (sub_23F92453C(), !v1))
    {
      sub_23F9247E8();
      sub_23F9231A8();
    }
  }
  sub_23F6D3674();
}

void static TranscriptProtoIntelligenceFlowError.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F6D36BC();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6D3834();
  v7 = v7 && v5 == v6;
  if ((v7 || (sub_23F6B5280() & 1) != 0) && *(_QWORD *)(v2 + 16) == *(_QWORD *)(v1 + 16))
  {
    v8 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
    sub_23F6D3614(*(int *)(v8 + 24));
    sub_23F6D36AC(*(int *)(v8 + 24));
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F6D3600();
    sub_23F6D36D0();
    sub_23F6D3820(v0);
  }
  sub_23F6D3B34();
  sub_23F6B69E0();
}

uint64_t TranscriptProtoIntelligenceFlowError.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoIntelligenceFlowError, &qword_256EB1DE8, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
}

unint64_t sub_23F8A3C20()
{
  static TranscriptProtoIntelligenceFlowError.protoMessageName.getter();
  return 0xD000000000000020;
}

void sub_23F8A3C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  TranscriptProtoIntelligenceFlowError.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_23F8A3C58()
{
  TranscriptProtoIntelligenceFlowError.traverse<A>(visitor:)();
}

uint64_t sub_23F8A3C6C()
{
  sub_23F6D3458(&qword_256EB4160, type metadata accessor for TranscriptProtoIntelligenceFlowError, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
  return sub_23FB2D784();
}

uint64_t sub_23F8A3CC0()
{
  sub_23F6D3458(&qword_256EB2AA0, type metadata accessor for TranscriptProtoIntelligenceFlowError, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8A3D04()
{
  sub_23F6D3458(&qword_256EB2AA0, type metadata accessor for TranscriptProtoIntelligenceFlowError, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoSessionError.protoMessageName.getter()
{
  return sub_23F6D3738(23);
}

uint64_t sub_23F8A3D70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0A18);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0A18);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1C0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "other";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "sessionCoordinatorError";
  *(_QWORD *)(v11 + 8) = 23;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "plannerError";
  *((_QWORD *)v13 + 1) = 12;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "executorError";
  *((_QWORD *)v15 + 1) = 13;
  v15[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoSessionError._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0CA0, (uint64_t)qword_256EB0A18, a1);
}

#error "23F8A3F70: call analysis failed (funcsize=9)"

void sub_23F8A3F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;

  sub_23F6B5220();
  sub_23F923114();
  if (!v12)
  {
    while ((v13 & 1) == 0)
    {
      sub_23F6D3E98();
      if (!(!v24 & v23))
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_23F8A3FE0 + 4 * byte_23FB74C6D[v22]))(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10, a11, a12);
        return;
      }
      sub_23F6D3D70();
      sub_23FB2D7B4();
    }
  }
  sub_23F6B5100();
}

void sub_23F8A402C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA8668);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4658);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA8668);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA8668);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoSessionErrorEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoSessionErrorEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoSessionErrorEnum);
    }
    else
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4658);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoIntelligenceFlowError);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoIntelligenceFlowError);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2AA0, type metadata accessor for TranscriptProtoIntelligenceFlowError, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4658);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4658);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4658);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoIntelligenceFlowError);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4658);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA8668);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoIntelligenceFlowError);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8A4414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoSessionCoordinatorError(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA8668);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4660);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA8668);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA8668);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoSessionErrorEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoSessionErrorEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4660);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoSessionCoordinatorError);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoSessionCoordinatorError);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoSessionErrorEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2AD0, type metadata accessor for TranscriptProtoSessionCoordinatorError, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionCoordinatorError);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4660);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4660);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4660);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoSessionCoordinatorError);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4660);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA8668);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoSessionCoordinatorError);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8A4800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoPlannerError(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA8668);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4668);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA8668);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA8668);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoSessionErrorEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoSessionErrorEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4668);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoPlannerError);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoPlannerError);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoSessionErrorEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2B00, type metadata accessor for TranscriptProtoPlannerError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlannerError);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4668);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4668);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4668);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoPlannerError);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4668);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA8668);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoPlannerError);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8A4BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoExecutorError(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA8668);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4670);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA8668);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA8668);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoSessionErrorEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoSessionErrorEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4670);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoExecutorError);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoExecutorError);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoSessionErrorEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2AE8, type metadata accessor for TranscriptProtoExecutorError, (uint64_t)&protocol conformance descriptor for TranscriptProtoExecutorError);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4670);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4670);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4670);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoExecutorError);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4670);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA8668);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoExecutorError);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

#error "23F8A500C: call analysis failed (funcsize=31)"

void sub_23F8A509C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA8668);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA8668);
  v8 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA8668);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoIntelligenceFlowError);
      sub_23F6D3458(&qword_256EB2AA0, type metadata accessor for TranscriptProtoIntelligenceFlowError, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoIntelligenceFlowError);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoSessionErrorEnum);
  }
  __break(1u);
}

void sub_23F8A5230(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA8668);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSessionCoordinatorError(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA8668);
  v8 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA8668);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSessionCoordinatorError);
      sub_23F6D3458(&qword_256EB2AD0, type metadata accessor for TranscriptProtoSessionCoordinatorError, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionCoordinatorError);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoSessionCoordinatorError);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoSessionErrorEnum);
  }
  __break(1u);
}

void sub_23F8A53C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA8668);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoPlannerError(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA8668);
  v8 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA8668);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoPlannerError);
      sub_23F6D3458(&qword_256EB2B00, type metadata accessor for TranscriptProtoPlannerError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlannerError);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoPlannerError);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoSessionErrorEnum);
  }
  __break(1u);
}

void sub_23F8A5560(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA8668);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoExecutorError(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA8668);
  v8 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA8668);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoExecutorError);
      sub_23F6D3458(&qword_256EB2AE8, type metadata accessor for TranscriptProtoExecutorError, (uint64_t)&protocol conformance descriptor for TranscriptProtoExecutorError);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoExecutorError);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoSessionErrorEnum);
  }
  __break(1u);
}

void static TranscriptProtoSessionError.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F6B50E8();
  v5 = v4;
  v39 = sub_23F6B53A4();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v39);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = sub_23F6D38F8(v9, v10, v11, v12, v13, v14, v15, v16, v40);
  type metadata accessor for TranscriptProtoSessionErrorEnum(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B59E0();
  v19 = sub_23F6916B8(&qword_256EB1DF0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6D3A70();
  v24 = MEMORY[0x24BDAC7A8](v23);
  sub_23F923124(v24, v25, v26, v27, v28, v29, v30, v31, v41);
  sub_23F923164(v5, v0);
  v32 = v1 + *(int *)(v19 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v32);
  v33 = sub_23F9230E4(v1);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v35 = sub_23F9230E4(v32);
    if (v36)
    {
      sub_23F6D378C(v35, &qword_256EA8668);
LABEL_11:
      v38 = type metadata accessor for TranscriptProtoSessionError(0);
      sub_23F6D3794(v38);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v33, v34, &qword_256EA8668);
  sub_23F9230E4(v32);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v37, type metadata accessor for TranscriptProtoSessionErrorEnum);
LABEL_9:
    sub_23F6D378C(v35, &qword_256EB1DF0);
    goto LABEL_12;
  }
  sub_23F923270();
  sub_23F6D3D70();
  static TranscriptProtoSessionErrorEnum.== infix(_:_:)();
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoSessionError.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoSessionError, &qword_256EB1DF8, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionError);
}

unint64_t sub_23F8A592C()
{
  static TranscriptProtoSessionError.protoMessageName.getter();
  return 0xD000000000000017;
}

uint64_t sub_23F8A5950()
{
  return TranscriptProtoSessionError.decodeMessage<A>(decoder:)();
}

uint64_t sub_23F8A5964()
{
  return TranscriptProtoSessionError.traverse<A>(visitor:)();
}

uint64_t sub_23F8A5978()
{
  sub_23F6D3458(&qword_256EB4158, type metadata accessor for TranscriptProtoSessionError, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionError);
  return sub_23FB2D784();
}

uint64_t sub_23F8A59CC()
{
  sub_23F6D3458(&qword_256EB2AB8, type metadata accessor for TranscriptProtoSessionError, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionError);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8A5A10()
{
  sub_23F6D3458(&qword_256EB2AB8, type metadata accessor for TranscriptProtoSessionError, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionError);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoSessionCoordinatorError.protoMessageName.getter()
{
  return sub_23F6D3738(34);
}

uint64_t sub_23F8A5A7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0A30);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0A30);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "other";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "failedToWriteTranscript";
  *((_QWORD *)v11 + 1) = 23;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "failedToConvertClientEvent";
  *((_QWORD *)v13 + 1) = 26;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoSessionCoordinatorError._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0CA8, (uint64_t)qword_256EB0A30, a1);
}

void TranscriptProtoSessionCoordinatorError.decodeMessage<A>(decoder:)()
{
  sub_23F8BEBD0();
}

void sub_23F8A5C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA84A8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4658);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA84A8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA84A8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
    }
    else
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4658);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoIntelligenceFlowError);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoIntelligenceFlowError);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2AA0, type metadata accessor for TranscriptProtoIntelligenceFlowError, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4658);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4658);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4658);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoIntelligenceFlowError);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4658);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA84A8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoIntelligenceFlowError);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8A6034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA84A8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4658);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA84A8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA84A8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4658);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoIntelligenceFlowError);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoIntelligenceFlowError);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2AA0, type metadata accessor for TranscriptProtoIntelligenceFlowError, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4658);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4658);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4658);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoIntelligenceFlowError);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4658);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA84A8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoIntelligenceFlowError);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8A6420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA84A8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4658);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA84A8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA84A8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4658);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoIntelligenceFlowError);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoIntelligenceFlowError);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2AA0, type metadata accessor for TranscriptProtoIntelligenceFlowError, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4658);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4658);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4658);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoIntelligenceFlowError);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4658);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA84A8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoIntelligenceFlowError);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

#error "23F8A6840: call analysis failed (funcsize=40)"

void sub_23F8A68B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA84A8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA84A8);
  v8 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA84A8);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoIntelligenceFlowError);
      sub_23F6D3458(&qword_256EB2AA0, type metadata accessor for TranscriptProtoIntelligenceFlowError, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoIntelligenceFlowError);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
  }
  __break(1u);
}

void sub_23F8A6A48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA84A8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA84A8);
  v8 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA84A8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoIntelligenceFlowError);
      sub_23F6D3458(&qword_256EB2AA0, type metadata accessor for TranscriptProtoIntelligenceFlowError, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoIntelligenceFlowError);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
  }
  __break(1u);
}

void sub_23F8A6BE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA84A8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA84A8);
  v8 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA84A8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoIntelligenceFlowError);
      sub_23F6D3458(&qword_256EB2AA0, type metadata accessor for TranscriptProtoIntelligenceFlowError, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoIntelligenceFlowError);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
  }
  __break(1u);
}

void static TranscriptProtoSessionCoordinatorError.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F6B50E8();
  v5 = v4;
  v39 = sub_23F6B53A4();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v39);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = sub_23F6D38F8(v9, v10, v11, v12, v13, v14, v15, v16, v40);
  type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B59E0();
  v19 = sub_23F6916B8(&qword_256EB1E00);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6D3A70();
  v24 = MEMORY[0x24BDAC7A8](v23);
  sub_23F923124(v24, v25, v26, v27, v28, v29, v30, v31, v41);
  sub_23F923164(v5, v0);
  v32 = v1 + *(int *)(v19 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v32);
  v33 = sub_23F9230E4(v1);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v35 = sub_23F9230E4(v32);
    if (v36)
    {
      sub_23F6D378C(v35, &qword_256EA84A8);
LABEL_11:
      v38 = type metadata accessor for TranscriptProtoSessionCoordinatorError(0);
      sub_23F6D3794(v38);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v33, v34, &qword_256EA84A8);
  sub_23F9230E4(v32);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v37, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
LABEL_9:
    sub_23F6D378C(v35, &qword_256EB1E00);
    goto LABEL_12;
  }
  sub_23F923270();
  sub_23F6D3D70();
  static TranscriptProtoSessionCoordinatorErrorEnum.== infix(_:_:)();
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoSessionCoordinatorError.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoSessionCoordinatorError, &qword_256EB1E08, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionCoordinatorError);
}

unint64_t sub_23F8A6FAC()
{
  static TranscriptProtoSessionCoordinatorError.protoMessageName.getter();
  return 0xD000000000000022;
}

void sub_23F8A6FD0()
{
  TranscriptProtoSessionCoordinatorError.decodeMessage<A>(decoder:)();
}

uint64_t sub_23F8A6FE4()
{
  return TranscriptProtoSessionCoordinatorError.traverse<A>(visitor:)();
}

uint64_t sub_23F8A6FF8()
{
  sub_23F6D3458(&qword_256EB4150, type metadata accessor for TranscriptProtoSessionCoordinatorError, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionCoordinatorError);
  return sub_23FB2D784();
}

uint64_t sub_23F8A704C()
{
  sub_23F6D3458(&qword_256EB2AD0, type metadata accessor for TranscriptProtoSessionCoordinatorError, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionCoordinatorError);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8A7090()
{
  sub_23F6D3458(&qword_256EB2AD0, type metadata accessor for TranscriptProtoSessionCoordinatorError, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionCoordinatorError);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoExecutorError.protoMessageName.getter()
{
  return sub_23F6D3738(24);
}

uint64_t sub_23F8A70FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0A48);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0A48);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "other";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "failedToExecute";
  *((_QWORD *)v11 + 1) = 15;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoExecutorError._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0CB0, (uint64_t)qword_256EB0A48, a1);
}

void TranscriptProtoExecutorError.decodeMessage<A>(decoder:)()
{
  sub_23F8A7A2C();
}

void sub_23F8A7294(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a2;
  v3 = sub_23F6916B8(&qword_256EB1E10);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F6916B8(&qword_256EB4328);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - v10;
  v12 = sub_23FB2D6AC();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v11, 1, 1, v12);
  sub_23F6D3458(&qword_256EB42F0, v13, MEMORY[0x24BE5B938]);
  sub_23FB2D7F0();
  if (v2
    || (sub_23F7A1EDC((uint64_t)v11, (uint64_t)v9, &qword_256EB4328),
        v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v12), sub_23F6B4F84((uint64_t)v9, &qword_256EB4328), v14 == 1))
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
  }
  else
  {
    sub_23F7A1EDC(v20, (uint64_t)v5, &qword_256EB1E10);
    v15 = type metadata accessor for TranscriptProtoExecutorErrorEnum(0);
    v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v5, 1, v15);
    sub_23F6B4F84((uint64_t)v5, &qword_256EB1E10);
    if (v16 != 1)
      sub_23FB2D7C0();
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
    v17 = v20;
    sub_23F6B4F84(v20, &qword_256EB1E10);
    v18 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 1, 1, v18);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 0, 1, v15);
  }
}

void TranscriptProtoExecutorError.traverse<A>(visitor:)()
{
  sub_23F8A8024();
}

#error "23F8A76A0: call analysis failed (funcsize=124)"

uint64_t TranscriptProtoExecutorError.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoExecutorError, &qword_256EB1E20, (uint64_t)&protocol conformance descriptor for TranscriptProtoExecutorError);
}

unint64_t sub_23F8A7744()
{
  static TranscriptProtoExecutorError.protoMessageName.getter();
  return 0xD000000000000018;
}

void sub_23F8A7768()
{
  TranscriptProtoExecutorError.decodeMessage<A>(decoder:)();
}

void sub_23F8A777C()
{
  TranscriptProtoExecutorError.traverse<A>(visitor:)();
}

uint64_t sub_23F8A7790()
{
  sub_23F6D3458(&qword_256EB4148, type metadata accessor for TranscriptProtoExecutorError, (uint64_t)&protocol conformance descriptor for TranscriptProtoExecutorError);
  return sub_23FB2D784();
}

uint64_t sub_23F8A77E4()
{
  sub_23F6D3458(&qword_256EB2AE8, type metadata accessor for TranscriptProtoExecutorError, (uint64_t)&protocol conformance descriptor for TranscriptProtoExecutorError);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8A7828()
{
  sub_23F6D3458(&qword_256EB2AE8, type metadata accessor for TranscriptProtoExecutorError, (uint64_t)&protocol conformance descriptor for TranscriptProtoExecutorError);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoPlannerError.protoMessageName.getter()
{
  return sub_23F6D3738(23);
}

uint64_t sub_23F8A7894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0A60);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0A60);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "other";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "failedToPlan";
  *((_QWORD *)v11 + 1) = 12;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoPlannerError._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0CB8, (uint64_t)qword_256EB0A60, a1);
}

void TranscriptProtoPlannerError.decodeMessage<A>(decoder:)()
{
  sub_23F8A7A2C();
}

void sub_23F8A7A2C()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  sub_23F6D3EA4();
  v2 = v1;
  sub_23F923474(v3, v4);
  while (1)
  {
    v5 = sub_23FB2D7B4();
    if (v0 || (v6 & 1) != 0)
      break;
    if (v5 == 2)
    {
      v7 = sub_23F924C2C();
      v2(v7);
    }
    else if (v5 == 1)
    {
      sub_23F923D14();
      sub_23F8A7AAC();
    }
    sub_23F7A1280();
  }
  sub_23F6D3750();
}

void sub_23F8A7AAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  uint64_t (*v5)(_QWORD);
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(_QWORD);
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(_QWORD);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(_QWORD);
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  sub_23F6B5220();
  v5 = v4;
  v7 = v6;
  v55 = v0;
  v56 = v8;
  v57 = v9;
  v11 = v10;
  v12 = sub_23F9247E8();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  v51 = (uint64_t)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F878DA4();
  sub_23F6916B8(v7);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = v5;
  v19 = v5(0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B6B3C();
  sub_23F6916B8(&qword_256EB4658);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v22);
  v52 = (uint64_t)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v48 - v25;
  sub_23F7D2ED8((uint64_t)&v48 - v25, 1);
  v49 = v11;
  v54 = v7;
  sub_23F7A1EDC(v11, (uint64_t)v18, v7);
  v48 = v19;
  v50 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v18, 1, v19);
  if (v50 == 1)
  {
    sub_23F6B4F84((uint64_t)v18, v54);
  }
  else
  {
    sub_23F923444((uint64_t)v18, v3);
    v27 = sub_23F6D3F0C();
    sub_23F923444(v27, v28);
    v29 = sub_23F77DCB8();
    v32 = sub_23F6B5164(v29, v30, v12);
    if (v31)
    {
      v33 = sub_23F924C14();
      sub_23F6D3508(v33, v34);
    }
    else
    {
      sub_23F6B6034(v32, &qword_256EB4658);
      sub_23F923444(v2, v1);
      sub_23F923444(v1, (uint64_t)v26);
      sub_23F7D2ED8((uint64_t)v26, 0);
    }
  }
  sub_23F924830();
  sub_23F6D3458(&qword_256EB2AA0, type metadata accessor for TranscriptProtoIntelligenceFlowError, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
  sub_23F924868();
  if (v0)
  {
    v35 = &qword_256EB4658;
    v36 = (uint64_t)v26;
LABEL_12:
    sub_23F6B4F84(v36, v35);
    goto LABEL_13;
  }
  v37 = v52;
  sub_23F7A1EDC((uint64_t)v26, v52, &qword_256EB4658);
  sub_23F6B5164(v37, 1, v12);
  if (v31)
  {
    sub_23F924BE4();
    v36 = sub_23F6B6AB8();
    goto LABEL_12;
  }
  sub_23F7E76D0(v37, v51, type metadata accessor for TranscriptProtoIntelligenceFlowError);
  if (v50 != 1)
    v38 = sub_23F9245F0();
  sub_23F6B6034(v38, &qword_256EB4658);
  sub_23F6B4F84(v49, v54);
  v39 = sub_23F77E680();
  sub_23F7E76D0(v39, v40, v41);
  v42 = sub_23F9244B4();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v42, v43, v44, v12);
  v45 = sub_23F9244B4();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v45, v46, v47, v48);
LABEL_13:
  sub_23F77DB18();
  sub_23F6B5100();
}

void sub_23F8A7DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a2;
  v3 = sub_23F6916B8(&qword_256EB1E28);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F6916B8(&qword_256EB4328);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - v10;
  v12 = sub_23FB2D6AC();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v11, 1, 1, v12);
  sub_23F6D3458(&qword_256EB42F0, v13, MEMORY[0x24BE5B938]);
  sub_23FB2D7F0();
  if (v2
    || (sub_23F7A1EDC((uint64_t)v11, (uint64_t)v9, &qword_256EB4328),
        v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v12), sub_23F6B4F84((uint64_t)v9, &qword_256EB4328), v14 == 1))
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
  }
  else
  {
    sub_23F7A1EDC(v20, (uint64_t)v5, &qword_256EB1E28);
    v15 = type metadata accessor for TranscriptProtoPlannerErrorEnum(0);
    v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v5, 1, v15);
    sub_23F6B4F84((uint64_t)v5, &qword_256EB1E28);
    if (v16 != 1)
      sub_23FB2D7C0();
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
    v17 = v20;
    sub_23F6B4F84(v20, &qword_256EB1E28);
    v18 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 1, 1, v18);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 0, 1, v15);
  }
}

void TranscriptProtoPlannerError.traverse<A>(visitor:)()
{
  sub_23F8A8024();
}

void sub_23F8A8024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t (*v10)(_QWORD);

  sub_23F6B5220();
  v10 = v3;
  v5 = v4;
  sub_23F6916B8(v4);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B573C();
  sub_23F7A1EDC(v0, v2, v5);
  v7 = sub_23F924500();
  sub_23F6B5164(v2, 1, v7);
  if (v9)
    goto LABEL_3;
  v8 = sub_23F9247E8();
  sub_23F6B5164(v2, 1, v8);
  if (v9)
  {
    sub_23F9243B4();
    sub_23F8A8200();
  }
  sub_23F9243B4();
  sub_23F8A8114();
  sub_23F77DB80(v2);
  if (!v1)
  {
LABEL_3:
    v10(0);
    sub_23F72E2E0();
    sub_23F6D3A68();
  }
  sub_23F77DB18();
  sub_23F6B5100();
}

void sub_23F8A8114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  sub_23F6B5220();
  sub_23F713FB4(v2, v3, v4, v5, v6);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_23F70D7F8();
  type metadata accessor for TranscriptProtoIntelligenceFlowError(v8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F923D3C();
  sub_23F923C1C();
  v10 = sub_23F77DCB8();
  sub_23F6B5164(v10, v11, v12);
  if (v13)
  {
    sub_23F924C08();
  }
  else
  {
    sub_23F923310(v1);
    if (!v13)
    {
      sub_23F923444(v1, v0);
      sub_23F924730(&qword_256EB2AA0, v14, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
      sub_23F924B84();
      sub_23F92410C();
      sub_23F6D3508(v0, type metadata accessor for TranscriptProtoIntelligenceFlowError);
      sub_23F8778A8();
      sub_23F6B5100();
      return;
    }
    sub_23F77DB68(v1);
  }
  __break(1u);
}

void sub_23F8A8200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  sub_23F6B5220();
  sub_23F9239D4();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F924130();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F923D84(v3, v8);
  v4 = sub_23F924500();
  sub_23F6B5164(v0, 1, v4);
  if (v5)
  {
    sub_23F923DA8(v0);
  }
  else
  {
    v6 = sub_23F9247E8();
    v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v0, 1, v6);
    sub_23F77DB80(v0);
    if (v7 == 1)
      sub_23F923D0C();
  }
  __break(1u);
}

#error "23F8A8488: call analysis failed (funcsize=124)"

uint64_t TranscriptProtoPlannerError.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoPlannerError, &qword_256EB1E38, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlannerError);
}

unint64_t sub_23F8A852C()
{
  static TranscriptProtoPlannerError.protoMessageName.getter();
  return 0xD000000000000017;
}

void sub_23F8A8550()
{
  TranscriptProtoPlannerError.decodeMessage<A>(decoder:)();
}

void sub_23F8A8564()
{
  TranscriptProtoPlannerError.traverse<A>(visitor:)();
}

uint64_t sub_23F8A8578()
{
  sub_23F6D3458(&qword_256EB4140, type metadata accessor for TranscriptProtoPlannerError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlannerError);
  return sub_23FB2D784();
}

uint64_t sub_23F8A85CC()
{
  sub_23F6D3458(&qword_256EB2B00, type metadata accessor for TranscriptProtoPlannerError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlannerError);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8A8610()
{
  sub_23F6D3458(&qword_256EB2B00, type metadata accessor for TranscriptProtoPlannerError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlannerError);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoActionOutcome.protoMessageName.getter()
{
  return sub_23F6D3738(24);
}

uint64_t sub_23F8A867C(uint64_t a1)
{
  return sub_23F9187D8(a1, qword_256EB0A78);
}

uint64_t static TranscriptProtoActionOutcome._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0CC0, (uint64_t)qword_256EB0A78, a1);
}

uint64_t TranscriptProtoActionOutcome.decodeMessage<A>(decoder:)()
{
  return sub_23F918844();
}

uint64_t TranscriptProtoActionOutcome.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoActionOutcome, &qword_256EB1E40, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionOutcome);
}

unint64_t sub_23F8A86DC()
{
  static TranscriptProtoActionOutcome.protoMessageName.getter();
  return 0xD000000000000018;
}

uint64_t sub_23F8A8700()
{
  sub_23F6D3458(&qword_256EB4138, type metadata accessor for TranscriptProtoActionOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionOutcome);
  return sub_23FB2D784();
}

uint64_t sub_23F8A8754()
{
  sub_23F6D3458(&qword_256EB2B18, type metadata accessor for TranscriptProtoActionOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionOutcome);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8A8798()
{
  sub_23F6D3458(&qword_256EB2B18, type metadata accessor for TranscriptProtoActionOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionOutcome);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoActionRequirement.protoMessageName.getter()
{
  return sub_23F6D3738(28);
}

uint64_t sub_23F8A8800()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0A90);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0A90);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1C0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "unsupported";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 3;
  *(_QWORD *)v11 = "appRequirement";
  *(_QWORD *)(v11 + 8) = 14;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 4;
  *(_QWORD *)v13 = "permissionRequirement";
  *((_QWORD *)v13 + 1) = 21;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 5;
  *(_QWORD *)v15 = "systemRequirement";
  *((_QWORD *)v15 + 1) = 17;
  v15[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoActionRequirement._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0CC8, (uint64_t)qword_256EB0A90, a1);
}

void TranscriptProtoActionRequirement.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;

  sub_23F6D3EA4();
  sub_23F6D356C();
  if (!v10)
  {
    while ((v11 & 1) == 0)
    {
      sub_23F923FB0();
      if (!(!v22 & v21))
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_23F8A8A34 + 4 * byte_23FB74C75[v20]))(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10);
        return;
      }
      sub_23F6D35E8();
    }
  }
  sub_23F6D3750();
}

void sub_23F8A8A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoAppRequirement(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA7FE0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4640);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA7FE0);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA7FE0);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoActionRequirementEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoActionRequirementEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoActionRequirementEnum);
    }
    else
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4640);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoAppRequirement);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoAppRequirement);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2BA8, type metadata accessor for TranscriptProtoAppRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoAppRequirement);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4640);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4640);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4640);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoAppRequirement);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4640);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA7FE0);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoAppRequirement);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8A8E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA7FE0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4648);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA7FE0);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA7FE0);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoActionRequirementEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoActionRequirementEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4648);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoPermissionRequirement);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoPermissionRequirement);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoActionRequirementEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2BC0, type metadata accessor for TranscriptProtoPermissionRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoPermissionRequirement);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4648);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4648);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4648);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoPermissionRequirement);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4648);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA7FE0);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoPermissionRequirement);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8A9250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA7FE0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4650);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA7FE0);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA7FE0);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoActionRequirementEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoActionRequirementEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4650);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoSystemRequirementMessage);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoSystemRequirementMessage);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoActionRequirementEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2B48, type metadata accessor for TranscriptProtoSystemRequirementMessage, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementMessage);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4650);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4650);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4650);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoSystemRequirementMessage);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4650);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA7FE0);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoSystemRequirementMessage);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

#error "23F8A9670: call analysis failed (funcsize=31)"

void sub_23F8A971C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA7FE0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoAppRequirement(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA7FE0);
  v8 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA7FE0);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoAppRequirement);
      sub_23F6D3458(&qword_256EB2BA8, type metadata accessor for TranscriptProtoAppRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoAppRequirement);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoAppRequirement);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoActionRequirementEnum);
  }
  __break(1u);
}

void sub_23F8A98B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA7FE0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA7FE0);
  v8 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA7FE0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoPermissionRequirement);
      sub_23F6D3458(&qword_256EB2BC0, type metadata accessor for TranscriptProtoPermissionRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoPermissionRequirement);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoPermissionRequirement);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoActionRequirementEnum);
  }
  __break(1u);
}

void sub_23F8A9A48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA7FE0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA7FE0);
  v8 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA7FE0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSystemRequirementMessage);
      sub_23F6D3458(&qword_256EB2B48, type metadata accessor for TranscriptProtoSystemRequirementMessage, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementMessage);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoSystemRequirementMessage);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoActionRequirementEnum);
  }
  __break(1u);
}

void static TranscriptProtoActionRequirement.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F6B50E8();
  v5 = v4;
  v39 = sub_23F6B53A4();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v39);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = sub_23F6D38F8(v9, v10, v11, v12, v13, v14, v15, v16, v40);
  type metadata accessor for TranscriptProtoActionRequirementEnum(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B59E0();
  v19 = sub_23F6916B8(&qword_256EB1E48);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6D3A70();
  v24 = MEMORY[0x24BDAC7A8](v23);
  sub_23F923124(v24, v25, v26, v27, v28, v29, v30, v31, v41);
  sub_23F923164(v5, v0);
  v32 = v1 + *(int *)(v19 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v32);
  v33 = sub_23F9230E4(v1);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v35 = sub_23F9230E4(v32);
    if (v36)
    {
      sub_23F6D378C(v35, &qword_256EA7FE0);
LABEL_11:
      v38 = type metadata accessor for TranscriptProtoActionRequirement(0);
      sub_23F6D3794(v38);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v33, v34, &qword_256EA7FE0);
  sub_23F9230E4(v32);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v37, type metadata accessor for TranscriptProtoActionRequirementEnum);
LABEL_9:
    sub_23F6D378C(v35, &qword_256EB1E48);
    goto LABEL_12;
  }
  sub_23F923270();
  sub_23F6D3D70();
  static TranscriptProtoActionRequirementEnum.== infix(_:_:)();
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoActionRequirement.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoActionRequirement, &qword_256EB1E50, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionRequirement);
}

unint64_t sub_23F8A9E14()
{
  static TranscriptProtoActionRequirement.protoMessageName.getter();
  return 0xD00000000000001CLL;
}

void sub_23F8A9E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  TranscriptProtoActionRequirement.decodeMessage<A>(decoder:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_23F8A9E4C()
{
  return TranscriptProtoActionRequirement.traverse<A>(visitor:)();
}

uint64_t sub_23F8A9E60()
{
  sub_23F6D3458(&qword_256EB4130, type metadata accessor for TranscriptProtoActionRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionRequirement);
  return sub_23FB2D784();
}

uint64_t sub_23F8A9EB4()
{
  sub_23F6D3458(&qword_256EB2B30, type metadata accessor for TranscriptProtoActionRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionRequirement);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8A9EF8()
{
  sub_23F6D3458(&qword_256EB2B30, type metadata accessor for TranscriptProtoActionRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionRequirement);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoSystemRequirementMessage.protoMessageName.getter()
{
  return sub_23F6D3738(35);
}

uint64_t sub_23F8A9F64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0AA8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0AA8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1B0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "deviceUnlockRequired";
  *(_QWORD *)(v7 + 8) = 20;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "appLaunchRequired";
  *(_QWORD *)(v11 + 8) = 17;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "carPlayIncompatible";
  *((_QWORD *)v13 + 1) = 19;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "carBluetoothIncompatible";
  *((_QWORD *)v15 + 1) = 24;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "protectedAppApprovalRequired";
  *((_QWORD *)v17 + 1) = 28;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "authenticationRequired";
  *((_QWORD *)v19 + 1) = 22;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "userAuthenticationRequired";
  *((_QWORD *)v21 + 1) = 26;
  v21[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoSystemRequirementMessage._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0CD0, (uint64_t)qword_256EB0AA8, a1);
}

void TranscriptProtoSystemRequirementMessage.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;

  sub_23F6D3EA4();
  sub_23F6D356C();
  if (!v10)
  {
    while ((v11 & 1) == 0)
    {
      sub_23F924C4C();
      if (!(!v22 & v21))
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_23F8AA238 + 4 * byte_23FB74C7E[v20]))(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10);
        return;
      }
      sub_23F6D35E8();
    }
  }
  sub_23F6D3750();
}

void sub_23F8AA280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_23F923100();
  sub_23F8AA678(v1, v2, v3, v4);
  if (v0)
    JUMPOUT(0x23F8AA1FCLL);
  JUMPOUT(0x23F8AA274);
}

void sub_23F8AA290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA7FD8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4630);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA7FD8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA7FD8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
    }
    else
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4630);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2B60, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementProtectedAppRequest);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4630);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4630);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4630);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4630);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA7FD8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8AA678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA7FD8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4638);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA7FD8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA7FD8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4638);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2B78, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementAuthenticationRequest);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4638);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4638);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4638);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4638);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA7FD8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

#error "23F8AAA98: call analysis failed (funcsize=35)"

void sub_23F8AABAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  sub_23F6B5220();
  v7 = v1;
  sub_23F9239D4();
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F92414C();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F923D60(v4, v7);
  v5 = sub_23F924A10();
  sub_23F6B5164(v0, 1, v5);
  if (v6)
  {
    sub_23F924604();
  }
  else
  {
    sub_23F924A80();
    sub_23F924858();
    if ((_DWORD)v5 == 3)
      sub_23F923D0C();
  }
  __break(1u);
}

void sub_23F8AAC80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = sub_23FB2D6AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F6916B8(&qword_256EA7FD8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v11, &qword_256EA7FD8);
  v12 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EA7FD8);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
    if (EnumCaseMultiPayload == 4)
    {
      MEMORY[0x242672324]();
      sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_23FB2D94C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return;
    }
  }
  __break(1u);
}

void sub_23F8AAE10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = sub_23FB2D6AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F6916B8(&qword_256EA7FD8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v11, &qword_256EA7FD8);
  v12 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EA7FD8);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
    if (EnumCaseMultiPayload == 5)
    {
      MEMORY[0x242672324]();
      sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_23FB2D94C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return;
    }
  }
  __break(1u);
}

void sub_23F8AAFA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA7FD8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA7FD8);
  v8 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA7FD8);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest);
      sub_23F6D3458(&qword_256EB2B60, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementProtectedAppRequest);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
  }
  __break(1u);
}

void sub_23F8AB134(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA7FD8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA7FD8);
  v8 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA7FD8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest);
      sub_23F6D3458(&qword_256EB2B78, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementAuthenticationRequest);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
  }
  __break(1u);
}

void static TranscriptProtoSystemRequirementMessage.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F6B50E8();
  v5 = v4;
  v39 = sub_23F6B53A4();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v39);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = sub_23F6D38F8(v9, v10, v11, v12, v13, v14, v15, v16, v40);
  type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B59E0();
  v19 = sub_23F6916B8(&qword_256EB1E58);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6D3A70();
  v24 = MEMORY[0x24BDAC7A8](v23);
  sub_23F923124(v24, v25, v26, v27, v28, v29, v30, v31, v41);
  sub_23F923164(v5, v0);
  v32 = v1 + *(int *)(v19 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v32);
  v33 = sub_23F9230E4(v1);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v35 = sub_23F9230E4(v32);
    if (v36)
    {
      sub_23F6D378C(v35, &qword_256EA7FD8);
LABEL_11:
      v38 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
      sub_23F6D3794(v38);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v33, v34, &qword_256EA7FD8);
  sub_23F9230E4(v32);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v37, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
LABEL_9:
    sub_23F6D378C(v35, &qword_256EB1E58);
    goto LABEL_12;
  }
  sub_23F923270();
  sub_23F6D3D70();
  static TranscriptProtoSystemRequirementMessageEnum.== infix(_:_:)();
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoSystemRequirementMessage.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoSystemRequirementMessage, &qword_256EB1E60, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementMessage);
}

unint64_t sub_23F8AB500()
{
  static TranscriptProtoSystemRequirementMessage.protoMessageName.getter();
  return 0xD000000000000023;
}

void sub_23F8AB524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  TranscriptProtoSystemRequirementMessage.decodeMessage<A>(decoder:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_23F8AB538()
{
  return TranscriptProtoSystemRequirementMessage.traverse<A>(visitor:)();
}

uint64_t sub_23F8AB54C()
{
  sub_23F6D3458(&qword_256EB4128, type metadata accessor for TranscriptProtoSystemRequirementMessage, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementMessage);
  return sub_23FB2D784();
}

uint64_t sub_23F8AB5A0()
{
  sub_23F6D3458(&qword_256EB2B48, type metadata accessor for TranscriptProtoSystemRequirementMessage, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementMessage);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8AB5E4()
{
  sub_23F6D3458(&qword_256EB2B48, type metadata accessor for TranscriptProtoSystemRequirementMessage, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementMessage);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoSystemRequirementProtectedAppRequest.protoMessageName.getter()
{
  return sub_23F6D3738(47);
}

uint64_t sub_23F8AB650()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoSystemRequirementProtectedAppRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0CD8, (uint64_t)&unk_256EB0AC0, a1);
}

void TranscriptProtoSystemRequirementProtectedAppRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F9062A8(a1, a2);
}

void TranscriptProtoSystemRequirementProtectedAppRequest.traverse<A>(visitor:)()
{
  sub_23F906318();
}

void static TranscriptProtoSystemRequirementProtectedAppRequest.== infix(_:_:)()
{
  sub_23F8AB6CC();
}

void sub_23F8AB6CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F923590();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6D3834();
  v7 = v7 && v5 == v6;
  if (v7 || (sub_23F6B5280() & 1) != 0)
  {
    v8 = sub_23F923C1C();
    sub_23F923308(v1, v2 + *(int *)(v8 + 20));
    sub_23F6D36AC(*(int *)(v8 + 20));
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F6D3600();
    sub_23F6D3820(v0);
    sub_23F6D3820(v1);
  }
  sub_23F924700();
  sub_23F6B69E0();
}

uint64_t TranscriptProtoSystemRequirementProtectedAppRequest.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest, &qword_256EB1E68, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementProtectedAppRequest);
}

unint64_t sub_23F8AB7A8()
{
  static TranscriptProtoSystemRequirementProtectedAppRequest.protoMessageName.getter();
  return 0xD00000000000002FLL;
}

void sub_23F8AB7CC(uint64_t a1, uint64_t a2)
{
  TranscriptProtoSonicText.decodeMessage<A>(decoder:)(a1, a2);
}

void sub_23F8AB7E0()
{
  TranscriptProtoSystemRequirementProtectedAppRequest.traverse<A>(visitor:)();
}

uint64_t sub_23F8AB7F4()
{
  sub_23F6D3458(&qword_256EB4120, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementProtectedAppRequest);
  return sub_23FB2D784();
}

uint64_t sub_23F8AB848()
{
  sub_23F6D3458(&qword_256EB2B60, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementProtectedAppRequest);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8AB88C()
{
  sub_23F6D3458(&qword_256EB2B60, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementProtectedAppRequest);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoSystemRequirementAuthenticationRequest.protoMessageName.getter()
{
  return sub_23F6D3738(49);
}

uint64_t sub_23F8AB8F8()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoSystemRequirementAuthenticationRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0CE0, (uint64_t)&unk_256EB0AD8, a1);
}

void TranscriptProtoSystemRequirementAuthenticationRequest.decodeMessage<A>(decoder:)()
{
  sub_23F913C48();
}

void TranscriptProtoSystemRequirementAuthenticationRequest.traverse<A>(visitor:)()
{
  uint64_t v0;

  sub_23F923668();
  sub_23F92351C();
  if (!v0)
  {
    type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
    sub_23F923428();
  }
  sub_23F6D3674();
}

void static TranscriptProtoSystemRequirementAuthenticationRequest.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F6B50E8();
  v5 = v4;
  v39 = sub_23F6B53A4();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v39);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = sub_23F6D38F8(v9, v10, v11, v12, v13, v14, v15, v16, v40);
  type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B59E0();
  v19 = sub_23F6916B8(&qword_256EB1E70);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6D3A70();
  v24 = MEMORY[0x24BDAC7A8](v23);
  sub_23F923124(v24, v25, v26, v27, v28, v29, v30, v31, v41);
  sub_23F923164(v5, v0);
  v32 = v1 + *(int *)(v19 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v32);
  v33 = sub_23F9230E4(v1);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v35 = sub_23F9230E4(v32);
    if (v36)
    {
      sub_23F6D378C(v35, &qword_256EA7FD0);
LABEL_11:
      v38 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
      sub_23F6D3794(v38);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v33, v34, &qword_256EA7FD0);
  sub_23F9230E4(v32);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v37, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel);
LABEL_9:
    sub_23F6D378C(v35, &qword_256EB1E70);
    goto LABEL_12;
  }
  sub_23F923270();
  sub_23F6D3D70();
  static TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel.== infix(_:_:)();
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoSystemRequirementAuthenticationRequest.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest, &qword_256EB1E78, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementAuthenticationRequest);
}

unint64_t sub_23F8ABC00()
{
  static TranscriptProtoSystemRequirementAuthenticationRequest.protoMessageName.getter();
  return 0xD000000000000031;
}

void sub_23F8ABC24()
{
  TranscriptProtoSystemRequirementAuthenticationRequest.decodeMessage<A>(decoder:)();
}

void sub_23F8ABC38()
{
  TranscriptProtoSystemRequirementAuthenticationRequest.traverse<A>(visitor:)();
}

uint64_t sub_23F8ABC4C()
{
  sub_23F6D3458(&qword_256EB4118, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementAuthenticationRequest);
  return sub_23FB2D784();
}

uint64_t sub_23F8ABCA0()
{
  sub_23F6D3458(&qword_256EB2B78, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementAuthenticationRequest);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8ABCE4()
{
  sub_23F6D3458(&qword_256EB2B78, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementAuthenticationRequest);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel.protoMessageName.getter()
{
  return sub_23F6D3738(68);
}

uint64_t sub_23F8ABD50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0AF0);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0AF0);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "alternativeAuthenticationPermitted";
  *(_QWORD *)(v7 + 8) = 34;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "originDeviceAuthenticationRequired";
  *((_QWORD *)v11 + 1) = 34;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0CE8, (uint64_t)qword_256EB0AF0, a1);
}

#error "23F8ABEFC: call analysis failed (funcsize=21)"

void sub_23F8ABF14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;

  sub_23F6B5220();
  a20 = v23;
  a21 = v24;
  sub_23F923C34(v25, v26, v27, v28, v29);
  sub_23F6916B8(&qword_256EB4328);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)&a9 - v32;
  v34 = sub_23F9239D4();
  sub_23F878A38((uint64_t)v33);
  sub_23F924730(&qword_256EB42F0, v35, MEMORY[0x24BE5B938]);
  v36 = sub_23F923A34();
  if (v21 || (sub_23F924190((uint64_t)v33), sub_23F9236F4(), v34 == 1))
  {
    sub_23F77DD24(v36, &qword_256EB4328);
  }
  else
  {
    if (*v22 != 2)
      v36 = sub_23F924114();
    sub_23F77DD24(v36, &qword_256EB4328);
    *v22 = a11;
  }
  sub_23F6B6CA0();
  sub_23F6B5100();
}

void TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel.traverse<A>(visitor:)()
{
  _BYTE *v0;
  uint64_t v1;
  unsigned __int8 *v2;
  char v3;

  sub_23F923768();
  if (*v0 == 2)
    goto LABEL_6;
  v2 = (unsigned __int8 *)sub_23F92371C();
  if ((v3 & 1) != 0)
    sub_23F8AC16C(v2);
  else
    sub_23F8AC078(v2);
  if (!v1)
  {
LABEL_6:
    type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
    sub_23F6D3A68();
  }
  sub_23F6D377C();
}

uint64_t sub_23F8AC078(unsigned __int8 *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t v9;

  v2 = sub_23FB2D6AC();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  if (v7 != 2 && (v7 & 1) == 0)
  {
    MEMORY[0x242672324](result);
    sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_23FB2D94C();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23F8AC16C(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = sub_23FB2D6AC();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*a1 & 1) != 0)
  {
    MEMORY[0x242672324](result);
    sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_23FB2D94C();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void static TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F6D36BC();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F923EB0();
  if (v4 == 2)
  {
    if (v3 == 2)
    {
LABEL_3:
      v5 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
      sub_23F6D3614(*(int *)(v5 + 20));
      sub_23F6D36AC(*(int *)(v5 + 20));
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6D3600();
      sub_23F6D3A04();
      sub_23F6D3BD0(v0);
    }
  }
  else
  {
    v6 = (v3 ^ v4) & 1;
    if (v3 != 2 && v6 == 0)
      goto LABEL_3;
  }
  sub_23F923E3C();
  sub_23F6B69E0();
}

uint64_t TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel, &qword_256EB1E80, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel);
}

unint64_t sub_23F8AC330()
{
  static TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel.protoMessageName.getter();
  return 0xD000000000000044;
}

uint64_t sub_23F8AC354()
{
  return TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel.decodeMessage<A>(decoder:)();
}

void sub_23F8AC368()
{
  TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel.traverse<A>(visitor:)();
}

uint64_t sub_23F8AC37C()
{
  sub_23F6D3458(&qword_256EB4110, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel);
  return sub_23FB2D784();
}

uint64_t sub_23F8AC3D0()
{
  sub_23F6D3458(&qword_256EB2B90, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8AC414()
{
  sub_23F6D3458(&qword_256EB2B90, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoAppRequirement.protoMessageName.getter()
{
  return sub_23F6D3738(25);
}

uint64_t sub_23F8AC480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0B08);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0B08);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "signInRequired";
  *(_QWORD *)(v7 + 8) = 14;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "accountSetupRequired";
  *((_QWORD *)v11 + 1) = 20;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "userConfirmationRequired";
  *((_QWORD *)v13 + 1) = 24;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoAppRequirement._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0CF0, (uint64_t)qword_256EB0B08, a1);
}

#error "23F8AC670: call analysis failed (funcsize=25)"

void sub_23F8AC688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;

  sub_23F6B5220();
  a20 = v23;
  a21 = v24;
  sub_23F923C34(v25, v26, v27, v28, v29);
  sub_23F6916B8(&qword_256EB4328);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)&a9 - v32;
  v34 = sub_23F9239D4();
  sub_23F878A38((uint64_t)v33);
  sub_23F924730(&qword_256EB42F0, v35, MEMORY[0x24BE5B938]);
  v36 = sub_23F923A34();
  if (v21 || (sub_23F924190((uint64_t)v33), sub_23F9236F4(), v34 == 1))
  {
    sub_23F77DD24(v36, &qword_256EB4328);
  }
  else
  {
    if (*v22 != 3)
      v36 = sub_23F924114();
    sub_23F77DD24(v36, &qword_256EB4328);
    *v22 = a11;
  }
  sub_23F6B6CA0();
  sub_23F6B5100();
}

void TranscriptProtoAppRequirement.traverse<A>(visitor:)()
{
  sub_23F923768();
  __asm { BR              X10 }
}

void sub_23F8AC7B0()
{
  sub_23F92371C();
  sub_23F8ACF8C();
}

void sub_23F8AC7B8()
{
  uint64_t v0;

  if (!v0)
  {
    type metadata accessor for TranscriptProtoAppRequirement(0);
    sub_23F6D3A68();
  }
  sub_23F6D377C();
}

void static TranscriptProtoAppRequirement.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F6D36BC();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F923EB0();
  if (v4 == 3)
  {
    if (v3 == 3)
    {
LABEL_3:
      v5 = type metadata accessor for TranscriptProtoAppRequirement(0);
      sub_23F6D3614(*(int *)(v5 + 20));
      sub_23F6D36AC(*(int *)(v5 + 20));
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6D3600();
      sub_23F6D3A04();
      sub_23F6D3BD0(v0);
    }
  }
  else if (v3 != 3 && v4 == v3)
  {
    goto LABEL_3;
  }
  sub_23F923E3C();
  sub_23F6B69E0();
}

uint64_t TranscriptProtoAppRequirement.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoAppRequirement, &qword_256EB1E88, (uint64_t)&protocol conformance descriptor for TranscriptProtoAppRequirement);
}

unint64_t sub_23F8AC8DC()
{
  static TranscriptProtoAppRequirement.protoMessageName.getter();
  return 0xD000000000000019;
}

uint64_t sub_23F8AC900()
{
  return TranscriptProtoAppRequirement.decodeMessage<A>(decoder:)();
}

void sub_23F8AC914()
{
  TranscriptProtoAppRequirement.traverse<A>(visitor:)();
}

uint64_t sub_23F8AC928()
{
  sub_23F6D3458(&qword_256EB4108, type metadata accessor for TranscriptProtoAppRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoAppRequirement);
  return sub_23FB2D784();
}

uint64_t sub_23F8AC97C()
{
  sub_23F6D3458(&qword_256EB2BA8, type metadata accessor for TranscriptProtoAppRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoAppRequirement);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8AC9C0()
{
  sub_23F6D3458(&qword_256EB2BA8, type metadata accessor for TranscriptProtoAppRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoAppRequirement);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoPermissionRequirement.protoMessageName.getter()
{
  return sub_23F6D3738(32);
}

uint64_t sub_23F8ACA2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0B20);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0B20);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB89940;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "siriPermissionRequired";
  *(_QWORD *)(v7 + 8) = 22;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "shortcutsPermissionRequired";
  *(_QWORD *)(v11 + 8) = 27;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "preciseLocationPermissionRequired";
  *((_QWORD *)v13 + 1) = 33;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "locationPermissionRequired";
  *((_QWORD *)v15 + 1) = 26;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "wifiPermissionRequired";
  *((_QWORD *)v17 + 1) = 22;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "bluetoothPermissionRequired";
  *((_QWORD *)v19 + 1) = 27;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "photosPermissionRequired";
  *((_QWORD *)v21 + 1) = 24;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "contactsPermissionRequired";
  *((_QWORD *)v23 + 1) = 26;
  v23[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoPermissionRequirement._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0CF8, (uint64_t)qword_256EB0B20, a1);
}

#error "23F8ACD88: call analysis failed (funcsize=43)"

void sub_23F8ACD9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;

  sub_23F6B5220();
  a20 = v23;
  a21 = v24;
  sub_23F923C34(v25, v26, v27, v28, v29);
  sub_23F6916B8(&qword_256EB4328);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)&a9 - v32;
  v34 = sub_23F9239D4();
  sub_23F878A38((uint64_t)v33);
  sub_23F924730(&qword_256EB42F0, v35, MEMORY[0x24BE5B938]);
  v36 = sub_23F923A34();
  if (v21 || (sub_23F924190((uint64_t)v33), sub_23F9236F4(), v34 == 1))
  {
    sub_23F77DD24(v36, &qword_256EB4328);
  }
  else
  {
    if (*v22 != 8)
      v36 = sub_23F924114();
    sub_23F77DD24(v36, &qword_256EB4328);
    *v22 = a11;
  }
  sub_23F6B6CA0();
  sub_23F6B5100();
}

void TranscriptProtoPermissionRequirement.traverse<A>(visitor:)()
{
  sub_23F924BB0();
  __asm { BR              X10 }
}

void sub_23F8ACEBC()
{
  sub_23F6D3664();
  sub_23F8ACF8C();
}

void sub_23F8ACECC()
{
  uint64_t v0;

  if (!v0)
  {
    type metadata accessor for TranscriptProtoPermissionRequirement(0);
    sub_23F6D37BC();
  }
  sub_23F6D377C();
}

void sub_23F8ACF8C()
{
  uint64_t v0;
  int v1;

  sub_23F6D3DC4();
  sub_23F923734();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F923C98();
  if (!v1)
    sub_23F923D0C();
  __break(1u);
}

void sub_23F8AD010()
{
  uint64_t v0;
  int v1;

  sub_23F6D3DC4();
  sub_23F923734();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F923C98();
  if (v1 == 1)
    sub_23F923D0C();
  __break(1u);
}

void sub_23F8AD098()
{
  uint64_t v0;
  int v1;

  sub_23F6D3DC4();
  sub_23F923734();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F923C98();
  if (v1 == 2)
    sub_23F923D0C();
  __break(1u);
}

uint64_t sub_23F8AD120(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = sub_23FB2D6AC();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 3)
  {
    MEMORY[0x242672324](result);
    sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_23FB2D94C();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23F8AD20C(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = sub_23FB2D6AC();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 4)
  {
    MEMORY[0x242672324](result);
    sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_23FB2D94C();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23F8AD2F8(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = sub_23FB2D6AC();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 5)
  {
    MEMORY[0x242672324](result);
    sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_23FB2D94C();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23F8AD3E4(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = sub_23FB2D6AC();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 6)
  {
    MEMORY[0x242672324](result);
    sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_23FB2D94C();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23F8AD4D0(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = sub_23FB2D6AC();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 7)
  {
    MEMORY[0x242672324](result);
    sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_23FB2D94C();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void static TranscriptProtoPermissionRequirement.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F6D36BC();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F923EB0();
  if (v4 == 8)
  {
    if (v3 == 8)
    {
LABEL_3:
      v5 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
      sub_23F6D3614(*(int *)(v5 + 20));
      sub_23F6D36AC(*(int *)(v5 + 20));
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6D3600();
      sub_23F6D3A04();
      sub_23F6D3BD0(v0);
    }
  }
  else if (v3 != 8 && v4 == v3)
  {
    goto LABEL_3;
  }
  sub_23F923E3C();
  sub_23F6B69E0();
}

uint64_t TranscriptProtoPermissionRequirement.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoPermissionRequirement, &qword_256EB1E90, (uint64_t)&protocol conformance descriptor for TranscriptProtoPermissionRequirement);
}

unint64_t sub_23F8AD690()
{
  static TranscriptProtoPermissionRequirement.protoMessageName.getter();
  return 0xD000000000000020;
}

uint64_t sub_23F8AD6B4()
{
  return TranscriptProtoPermissionRequirement.decodeMessage<A>(decoder:)();
}

void sub_23F8AD6C8()
{
  TranscriptProtoPermissionRequirement.traverse<A>(visitor:)();
}

uint64_t sub_23F8AD6DC()
{
  sub_23F6D3458(&qword_256EB4100, type metadata accessor for TranscriptProtoPermissionRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoPermissionRequirement);
  return sub_23FB2D784();
}

uint64_t sub_23F8AD730()
{
  sub_23F6D3458(&qword_256EB2BC0, type metadata accessor for TranscriptProtoPermissionRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoPermissionRequirement);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8AD774()
{
  sub_23F6D3458(&qword_256EB2BC0, type metadata accessor for TranscriptProtoPermissionRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoPermissionRequirement);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoActionFailure.protoMessageName.getter()
{
  return sub_23F6D3738(24);
}

uint64_t sub_23F8AD7E0()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoActionFailure._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0D00, (uint64_t)&unk_256EB0B38, a1);
}

void TranscriptProtoActionFailure.decodeMessage<A>(decoder:)()
{
  sub_23F913C48();
}

void TranscriptProtoActionFailure.traverse<A>(visitor:)()
{
  uint64_t v0;

  sub_23F923668();
  sub_23F92351C();
  if (!v0)
  {
    type metadata accessor for TranscriptProtoActionFailure(0);
    sub_23F923428();
  }
  sub_23F6D3674();
}

void static TranscriptProtoActionFailure.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F6B50E8();
  v5 = v4;
  v39 = sub_23F6B53A4();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v39);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = sub_23F6D38F8(v9, v10, v11, v12, v13, v14, v15, v16, v40);
  type metadata accessor for TranscriptProtoActionFailureFailure(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B59E0();
  v19 = sub_23F6916B8(&qword_256EB1E98);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6D3A70();
  v24 = MEMORY[0x24BDAC7A8](v23);
  sub_23F923124(v24, v25, v26, v27, v28, v29, v30, v31, v41);
  sub_23F923164(v5, v0);
  v32 = v1 + *(int *)(v19 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v32);
  v33 = sub_23F9230E4(v1);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v35 = sub_23F9230E4(v32);
    if (v36)
    {
      sub_23F6D378C(v35, &qword_256EA7FF0);
LABEL_11:
      v38 = type metadata accessor for TranscriptProtoActionFailure(0);
      sub_23F6D3794(v38);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v33, v34, &qword_256EA7FF0);
  sub_23F9230E4(v32);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v37, type metadata accessor for TranscriptProtoActionFailureFailure);
LABEL_9:
    sub_23F6D378C(v35, &qword_256EB1E98);
    goto LABEL_12;
  }
  sub_23F923270();
  sub_23F6D3D70();
  static TranscriptProtoActionFailureFailure.== infix(_:_:)();
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoActionFailure.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoActionFailure, &qword_256EB1EA0, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailure);
}

unint64_t sub_23F8ADAE8()
{
  static TranscriptProtoActionFailure.protoMessageName.getter();
  return 0xD000000000000018;
}

void sub_23F8ADB0C()
{
  TranscriptProtoActionFailure.decodeMessage<A>(decoder:)();
}

void sub_23F8ADB20()
{
  TranscriptProtoActionFailure.traverse<A>(visitor:)();
}

uint64_t sub_23F8ADB34()
{
  sub_23F6D3458(&qword_256EB40F8, type metadata accessor for TranscriptProtoActionFailure, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailure);
  return sub_23FB2D784();
}

uint64_t sub_23F8ADB88()
{
  sub_23F6D3458(&qword_256EB2BD8, type metadata accessor for TranscriptProtoActionFailure, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailure);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8ADBCC()
{
  sub_23F6D3458(&qword_256EB2BD8, type metadata accessor for TranscriptProtoActionFailure, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailure);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoActionFailureFailure.protoMessageName.getter()
{
  return sub_23F6D3738(31);
}

uint64_t sub_23F8ADC38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);
  unint64_t v9;
  _QWORD *v10;
  char *v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  _QWORD *v38;
  char *v39;
  uint64_t v41;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0B50);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0B50);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_23FB89990;
  v5 = v41 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v41 + v4) = 1;
  *(_QWORD *)v5 = "preflightCheckFailure";
  *(_QWORD *)(v5 + 8) = 21;
  *(_BYTE *)(v5 + 16) = 2;
  v6 = *MEMORY[0x24BE5C318];
  v7 = sub_23FB2D9DC();
  v8 = *(void (**)(void))(*(_QWORD *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  v9 = v41 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v41 + v4 + v3) = 2;
  *(_QWORD *)v9 = "preciseLocationDisabled";
  *(_QWORD *)(v9 + 8) = 23;
  *(_BYTE *)(v9 + 16) = 2;
  v8();
  v10 = (_QWORD *)(v41 + v4 + 2 * v3);
  v11 = (char *)v10 + *(int *)(v1 + 48);
  *v10 = 3;
  *(_QWORD *)v11 = "locationDisabled";
  *((_QWORD *)v11 + 1) = 16;
  v11[16] = 2;
  v8();
  v12 = (_QWORD *)(v41 + v4 + 3 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 4;
  *(_QWORD *)v13 = "wifiDisabled";
  *((_QWORD *)v13 + 1) = 12;
  v13[16] = 2;
  v8();
  v14 = (_QWORD *)(v41 + v4 + 4 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 5;
  *(_QWORD *)v15 = "bluetoothDisabled";
  *((_QWORD *)v15 + 1) = 17;
  v15[16] = 2;
  v8();
  v16 = (_QWORD *)(v41 + v4 + 5 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 6;
  *(_QWORD *)v17 = "networkFailure";
  *((_QWORD *)v17 + 1) = 14;
  v17[16] = 2;
  v8();
  v18 = (_QWORD *)(v41 + v4 + 6 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 7;
  *(_QWORD *)v19 = "partialFailure";
  *((_QWORD *)v19 + 1) = 14;
  v19[16] = 2;
  v8();
  v20 = (_QWORD *)(v41 + v4 + 7 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 8;
  *(_QWORD *)v21 = "unsupportedOnDevice";
  *((_QWORD *)v21 + 1) = 19;
  v21[16] = 2;
  v8();
  v22 = (_QWORD *)(v41 + v4 + 8 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 9;
  *(_QWORD *)v23 = "featureCurrentlyRestricted";
  *((_QWORD *)v23 + 1) = 26;
  v23[16] = 2;
  v8();
  v24 = (_QWORD *)(v41 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 10;
  *(_QWORD *)v25 = "entityNotFound";
  *((_QWORD *)v25 + 1) = 14;
  v25[16] = 2;
  v8();
  v26 = (_QWORD *)(v41 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 11;
  *(_QWORD *)v27 = "actionNotAllowed";
  *((_QWORD *)v27 + 1) = 16;
  v27[16] = 2;
  v8();
  v28 = (_QWORD *)(v41 + v4 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 12;
  *(_QWORD *)v29 = "unableToUndo";
  *((_QWORD *)v29 + 1) = 12;
  v29[16] = 2;
  v8();
  v30 = (_QWORD *)(v41 + v4 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 13;
  *(_QWORD *)v31 = "actionCanceled";
  *((_QWORD *)v31 + 1) = 14;
  v31[16] = 2;
  v8();
  v32 = (_QWORD *)(v41 + v4 + 13 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 14;
  *(_QWORD *)v33 = "valueDisambiguationRejected";
  *((_QWORD *)v33 + 1) = 27;
  v33[16] = 2;
  v8();
  v34 = (_QWORD *)(v41 + v4 + 14 * v3);
  v35 = (char *)v34 + *(int *)(v1 + 48);
  *v34 = 15;
  *(_QWORD *)v35 = "noMatchingTool";
  *((_QWORD *)v35 + 1) = 14;
  v35[16] = 2;
  v8();
  v36 = (_QWORD *)(v41 + v4 + 15 * v3);
  v37 = (char *)v36 + *(int *)(v1 + 48);
  *v36 = 16;
  *(_QWORD *)v37 = "developerDefinedError";
  *((_QWORD *)v37 + 1) = 21;
  v37[16] = 2;
  v8();
  v38 = (_QWORD *)(v41 + v4 + 16 * v3);
  v39 = (char *)v38 + *(int *)(v1 + 48);
  *v38 = 17;
  *(_QWORD *)v39 = "unableToCancel";
  *((_QWORD *)v39 + 1) = 14;
  v39[16] = 2;
  v8();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoActionFailureFailure._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0D08, (uint64_t)qword_256EB0B50, a1);
}

void TranscriptProtoActionFailureFailure.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          v3 = sub_23F6D3598();
          sub_23F8AE21C(v3, v4);
          break;
        case 2:
          v5 = sub_23F6D3598();
          sub_23F8AE46C(v5, v6);
          break;
        case 3:
          v7 = sub_23F6D3598();
          sub_23F8AE6BC(v7, v8);
          break;
        case 4:
          v9 = sub_23F6D3598();
          sub_23F8AE90C(v9, v10);
          break;
        case 5:
          v11 = sub_23F6D3598();
          sub_23F8AEB5C(v11, v12);
          break;
        case 6:
          v13 = sub_23F6D3598();
          sub_23F8AEDAC(v13, v14);
          break;
        case 7:
          v15 = sub_23F6D3598();
          sub_23F8AEFFC(v15, v16);
          break;
        case 8:
          v17 = sub_23F6D3598();
          sub_23F8AF24C(v17, v18);
          break;
        case 9:
          v19 = sub_23F6D3598();
          sub_23F8AF49C(v19, v20);
          break;
        case 10:
          v21 = sub_23F6D3598();
          sub_23F8AF6EC(v21, v22);
          break;
        case 11:
          v23 = sub_23F6D3598();
          sub_23F8AF93C(v23, v24);
          break;
        case 12:
          v25 = sub_23F6D3598();
          sub_23F8AFB8C(v25, v26);
          break;
        case 13:
          v27 = sub_23F6D3598();
          sub_23F8AFDDC(v27, v28);
          break;
        case 14:
          v29 = sub_23F6D3598();
          sub_23F8B002C(v29, v30);
          break;
        case 15:
          v31 = sub_23F6D3598();
          sub_23F8B027C(v31, v32);
          break;
        case 16:
          v33 = sub_23F923100();
          sub_23F8B04CC(v33, v34, v35, v36);
          break;
        case 17:
          v37 = sub_23F6D3598();
          sub_23F8B08B4(v37, v38);
          break;
        default:
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D377C();
}

void sub_23F8AE21C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a2;
  v3 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F6916B8(&qword_256EB4328);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - v10;
  v12 = sub_23FB2D6AC();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v11, 1, 1, v12);
  sub_23F6D3458(&qword_256EB42F0, v13, MEMORY[0x24BE5B938]);
  sub_23FB2D7F0();
  if (v2
    || (sub_23F7A1EDC((uint64_t)v11, (uint64_t)v9, &qword_256EB4328),
        v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v12), sub_23F6B4F84((uint64_t)v9, &qword_256EB4328), v14 == 1))
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
  }
  else
  {
    sub_23F7A1EDC(v20, (uint64_t)v5, &qword_256EA7FE8);
    v15 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
    v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v5, 1, v15);
    sub_23F6B4F84((uint64_t)v5, &qword_256EA7FE8);
    if (v16 != 1)
      sub_23FB2D7C0();
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
    v17 = v20;
    sub_23F6B4F84(v20, &qword_256EA7FE8);
    v18 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 1, 16, v18);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 0, 1, v15);
  }
}

void sub_23F8AE46C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a2;
  v3 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F6916B8(&qword_256EB4328);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - v10;
  v12 = sub_23FB2D6AC();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v11, 1, 1, v12);
  sub_23F6D3458(&qword_256EB42F0, v13, MEMORY[0x24BE5B938]);
  sub_23FB2D7F0();
  if (v2
    || (sub_23F7A1EDC((uint64_t)v11, (uint64_t)v9, &qword_256EB4328),
        v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v12), sub_23F6B4F84((uint64_t)v9, &qword_256EB4328), v14 == 1))
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
  }
  else
  {
    sub_23F7A1EDC(v20, (uint64_t)v5, &qword_256EA7FE8);
    v15 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
    v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v5, 1, v15);
    sub_23F6B4F84((uint64_t)v5, &qword_256EA7FE8);
    if (v16 != 1)
      sub_23FB2D7C0();
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
    v17 = v20;
    sub_23F6B4F84(v20, &qword_256EA7FE8);
    v18 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 2, 16, v18);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 0, 1, v15);
  }
}

void sub_23F8AE6BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a2;
  v3 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F6916B8(&qword_256EB4328);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - v10;
  v12 = sub_23FB2D6AC();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v11, 1, 1, v12);
  sub_23F6D3458(&qword_256EB42F0, v13, MEMORY[0x24BE5B938]);
  sub_23FB2D7F0();
  if (v2
    || (sub_23F7A1EDC((uint64_t)v11, (uint64_t)v9, &qword_256EB4328),
        v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v12), sub_23F6B4F84((uint64_t)v9, &qword_256EB4328), v14 == 1))
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
  }
  else
  {
    sub_23F7A1EDC(v20, (uint64_t)v5, &qword_256EA7FE8);
    v15 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
    v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v5, 1, v15);
    sub_23F6B4F84((uint64_t)v5, &qword_256EA7FE8);
    if (v16 != 1)
      sub_23FB2D7C0();
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
    v17 = v20;
    sub_23F6B4F84(v20, &qword_256EA7FE8);
    v18 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 3, 16, v18);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 0, 1, v15);
  }
}

void sub_23F8AE90C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a2;
  v3 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F6916B8(&qword_256EB4328);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - v10;
  v12 = sub_23FB2D6AC();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v11, 1, 1, v12);
  sub_23F6D3458(&qword_256EB42F0, v13, MEMORY[0x24BE5B938]);
  sub_23FB2D7F0();
  if (v2
    || (sub_23F7A1EDC((uint64_t)v11, (uint64_t)v9, &qword_256EB4328),
        v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v12), sub_23F6B4F84((uint64_t)v9, &qword_256EB4328), v14 == 1))
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
  }
  else
  {
    sub_23F7A1EDC(v20, (uint64_t)v5, &qword_256EA7FE8);
    v15 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
    v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v5, 1, v15);
    sub_23F6B4F84((uint64_t)v5, &qword_256EA7FE8);
    if (v16 != 1)
      sub_23FB2D7C0();
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
    v17 = v20;
    sub_23F6B4F84(v20, &qword_256EA7FE8);
    v18 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 4, 16, v18);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 0, 1, v15);
  }
}

void sub_23F8AEB5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a2;
  v3 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F6916B8(&qword_256EB4328);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - v10;
  v12 = sub_23FB2D6AC();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v11, 1, 1, v12);
  sub_23F6D3458(&qword_256EB42F0, v13, MEMORY[0x24BE5B938]);
  sub_23FB2D7F0();
  if (v2
    || (sub_23F7A1EDC((uint64_t)v11, (uint64_t)v9, &qword_256EB4328),
        v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v12), sub_23F6B4F84((uint64_t)v9, &qword_256EB4328), v14 == 1))
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
  }
  else
  {
    sub_23F7A1EDC(v20, (uint64_t)v5, &qword_256EA7FE8);
    v15 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
    v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v5, 1, v15);
    sub_23F6B4F84((uint64_t)v5, &qword_256EA7FE8);
    if (v16 != 1)
      sub_23FB2D7C0();
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
    v17 = v20;
    sub_23F6B4F84(v20, &qword_256EA7FE8);
    v18 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 5, 16, v18);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 0, 1, v15);
  }
}

void sub_23F8AEDAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a2;
  v3 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F6916B8(&qword_256EB4328);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - v10;
  v12 = sub_23FB2D6AC();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v11, 1, 1, v12);
  sub_23F6D3458(&qword_256EB42F0, v13, MEMORY[0x24BE5B938]);
  sub_23FB2D7F0();
  if (v2
    || (sub_23F7A1EDC((uint64_t)v11, (uint64_t)v9, &qword_256EB4328),
        v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v12), sub_23F6B4F84((uint64_t)v9, &qword_256EB4328), v14 == 1))
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
  }
  else
  {
    sub_23F7A1EDC(v20, (uint64_t)v5, &qword_256EA7FE8);
    v15 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
    v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v5, 1, v15);
    sub_23F6B4F84((uint64_t)v5, &qword_256EA7FE8);
    if (v16 != 1)
      sub_23FB2D7C0();
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
    v17 = v20;
    sub_23F6B4F84(v20, &qword_256EA7FE8);
    v18 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 6, 16, v18);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 0, 1, v15);
  }
}

void sub_23F8AEFFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a2;
  v3 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F6916B8(&qword_256EB4328);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - v10;
  v12 = sub_23FB2D6AC();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v11, 1, 1, v12);
  sub_23F6D3458(&qword_256EB42F0, v13, MEMORY[0x24BE5B938]);
  sub_23FB2D7F0();
  if (v2
    || (sub_23F7A1EDC((uint64_t)v11, (uint64_t)v9, &qword_256EB4328),
        v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v12), sub_23F6B4F84((uint64_t)v9, &qword_256EB4328), v14 == 1))
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
  }
  else
  {
    sub_23F7A1EDC(v20, (uint64_t)v5, &qword_256EA7FE8);
    v15 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
    v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v5, 1, v15);
    sub_23F6B4F84((uint64_t)v5, &qword_256EA7FE8);
    if (v16 != 1)
      sub_23FB2D7C0();
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
    v17 = v20;
    sub_23F6B4F84(v20, &qword_256EA7FE8);
    v18 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 7, 16, v18);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 0, 1, v15);
  }
}

void sub_23F8AF24C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a2;
  v3 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F6916B8(&qword_256EB4328);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - v10;
  v12 = sub_23FB2D6AC();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v11, 1, 1, v12);
  sub_23F6D3458(&qword_256EB42F0, v13, MEMORY[0x24BE5B938]);
  sub_23FB2D7F0();
  if (v2
    || (sub_23F7A1EDC((uint64_t)v11, (uint64_t)v9, &qword_256EB4328),
        v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v12), sub_23F6B4F84((uint64_t)v9, &qword_256EB4328), v14 == 1))
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
  }
  else
  {
    sub_23F7A1EDC(v20, (uint64_t)v5, &qword_256EA7FE8);
    v15 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
    v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v5, 1, v15);
    sub_23F6B4F84((uint64_t)v5, &qword_256EA7FE8);
    if (v16 != 1)
      sub_23FB2D7C0();
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
    v17 = v20;
    sub_23F6B4F84(v20, &qword_256EA7FE8);
    v18 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 8, 16, v18);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 0, 1, v15);
  }
}

void sub_23F8AF49C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a2;
  v3 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F6916B8(&qword_256EB4328);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - v10;
  v12 = sub_23FB2D6AC();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v11, 1, 1, v12);
  sub_23F6D3458(&qword_256EB42F0, v13, MEMORY[0x24BE5B938]);
  sub_23FB2D7F0();
  if (v2
    || (sub_23F7A1EDC((uint64_t)v11, (uint64_t)v9, &qword_256EB4328),
        v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v12), sub_23F6B4F84((uint64_t)v9, &qword_256EB4328), v14 == 1))
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
  }
  else
  {
    sub_23F7A1EDC(v20, (uint64_t)v5, &qword_256EA7FE8);
    v15 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
    v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v5, 1, v15);
    sub_23F6B4F84((uint64_t)v5, &qword_256EA7FE8);
    if (v16 != 1)
      sub_23FB2D7C0();
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
    v17 = v20;
    sub_23F6B4F84(v20, &qword_256EA7FE8);
    v18 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 9, 16, v18);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 0, 1, v15);
  }
}

void sub_23F8AF6EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a2;
  v3 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F6916B8(&qword_256EB4328);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - v10;
  v12 = sub_23FB2D6AC();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v11, 1, 1, v12);
  sub_23F6D3458(&qword_256EB42F0, v13, MEMORY[0x24BE5B938]);
  sub_23FB2D7F0();
  if (v2
    || (sub_23F7A1EDC((uint64_t)v11, (uint64_t)v9, &qword_256EB4328),
        v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v12), sub_23F6B4F84((uint64_t)v9, &qword_256EB4328), v14 == 1))
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
  }
  else
  {
    sub_23F7A1EDC(v20, (uint64_t)v5, &qword_256EA7FE8);
    v15 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
    v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v5, 1, v15);
    sub_23F6B4F84((uint64_t)v5, &qword_256EA7FE8);
    if (v16 != 1)
      sub_23FB2D7C0();
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
    v17 = v20;
    sub_23F6B4F84(v20, &qword_256EA7FE8);
    v18 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 10, 16, v18);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 0, 1, v15);
  }
}

void sub_23F8AF93C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a2;
  v3 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F6916B8(&qword_256EB4328);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - v10;
  v12 = sub_23FB2D6AC();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v11, 1, 1, v12);
  sub_23F6D3458(&qword_256EB42F0, v13, MEMORY[0x24BE5B938]);
  sub_23FB2D7F0();
  if (v2
    || (sub_23F7A1EDC((uint64_t)v11, (uint64_t)v9, &qword_256EB4328),
        v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v12), sub_23F6B4F84((uint64_t)v9, &qword_256EB4328), v14 == 1))
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
  }
  else
  {
    sub_23F7A1EDC(v20, (uint64_t)v5, &qword_256EA7FE8);
    v15 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
    v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v5, 1, v15);
    sub_23F6B4F84((uint64_t)v5, &qword_256EA7FE8);
    if (v16 != 1)
      sub_23FB2D7C0();
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
    v17 = v20;
    sub_23F6B4F84(v20, &qword_256EA7FE8);
    v18 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 11, 16, v18);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 0, 1, v15);
  }
}

void sub_23F8AFB8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a2;
  v3 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F6916B8(&qword_256EB4328);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - v10;
  v12 = sub_23FB2D6AC();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v11, 1, 1, v12);
  sub_23F6D3458(&qword_256EB42F0, v13, MEMORY[0x24BE5B938]);
  sub_23FB2D7F0();
  if (v2
    || (sub_23F7A1EDC((uint64_t)v11, (uint64_t)v9, &qword_256EB4328),
        v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v12), sub_23F6B4F84((uint64_t)v9, &qword_256EB4328), v14 == 1))
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
  }
  else
  {
    sub_23F7A1EDC(v20, (uint64_t)v5, &qword_256EA7FE8);
    v15 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
    v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v5, 1, v15);
    sub_23F6B4F84((uint64_t)v5, &qword_256EA7FE8);
    if (v16 != 1)
      sub_23FB2D7C0();
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
    v17 = v20;
    sub_23F6B4F84(v20, &qword_256EA7FE8);
    v18 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 12, 16, v18);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 0, 1, v15);
  }
}

void sub_23F8AFDDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a2;
  v3 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F6916B8(&qword_256EB4328);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - v10;
  v12 = sub_23FB2D6AC();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v11, 1, 1, v12);
  sub_23F6D3458(&qword_256EB42F0, v13, MEMORY[0x24BE5B938]);
  sub_23FB2D7F0();
  if (v2
    || (sub_23F7A1EDC((uint64_t)v11, (uint64_t)v9, &qword_256EB4328),
        v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v12), sub_23F6B4F84((uint64_t)v9, &qword_256EB4328), v14 == 1))
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
  }
  else
  {
    sub_23F7A1EDC(v20, (uint64_t)v5, &qword_256EA7FE8);
    v15 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
    v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v5, 1, v15);
    sub_23F6B4F84((uint64_t)v5, &qword_256EA7FE8);
    if (v16 != 1)
      sub_23FB2D7C0();
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
    v17 = v20;
    sub_23F6B4F84(v20, &qword_256EA7FE8);
    v18 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 13, 16, v18);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 0, 1, v15);
  }
}

void sub_23F8B002C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a2;
  v3 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F6916B8(&qword_256EB4328);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - v10;
  v12 = sub_23FB2D6AC();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v11, 1, 1, v12);
  sub_23F6D3458(&qword_256EB42F0, v13, MEMORY[0x24BE5B938]);
  sub_23FB2D7F0();
  if (v2
    || (sub_23F7A1EDC((uint64_t)v11, (uint64_t)v9, &qword_256EB4328),
        v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v12), sub_23F6B4F84((uint64_t)v9, &qword_256EB4328), v14 == 1))
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
  }
  else
  {
    sub_23F7A1EDC(v20, (uint64_t)v5, &qword_256EA7FE8);
    v15 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
    v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v5, 1, v15);
    sub_23F6B4F84((uint64_t)v5, &qword_256EA7FE8);
    if (v16 != 1)
      sub_23FB2D7C0();
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
    v17 = v20;
    sub_23F6B4F84(v20, &qword_256EA7FE8);
    v18 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 14, 16, v18);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 0, 1, v15);
  }
}

void sub_23F8B027C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a2;
  v3 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F6916B8(&qword_256EB4328);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - v10;
  v12 = sub_23FB2D6AC();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v11, 1, 1, v12);
  sub_23F6D3458(&qword_256EB42F0, v13, MEMORY[0x24BE5B938]);
  sub_23FB2D7F0();
  if (v2
    || (sub_23F7A1EDC((uint64_t)v11, (uint64_t)v9, &qword_256EB4328),
        v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v12), sub_23F6B4F84((uint64_t)v9, &qword_256EB4328), v14 == 1))
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
  }
  else
  {
    sub_23F7A1EDC(v20, (uint64_t)v5, &qword_256EA7FE8);
    v15 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
    v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v5, 1, v15);
    sub_23F6B4F84((uint64_t)v5, &qword_256EA7FE8);
    if (v16 != 1)
      sub_23FB2D7C0();
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
    v17 = v20;
    sub_23F6B4F84(v20, &qword_256EA7FE8);
    v18 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 15, 16, v18);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 0, 1, v15);
  }
}

void sub_23F8B04CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a2;
  v37 = a4;
  v36 = a3;
  v5 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v33 = (uint64_t)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v29 - v8;
  v10 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v29 - v17;
  v19 = sub_23F6916B8(&qword_256EB4628);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v29 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v29 - v23, 1, 1, v5);
  v31 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA7FE8);
  v30 = v13;
  v32 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA7FE8);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 16, v5))
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    }
    else
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4628);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
  }
  v25 = v34;
  sub_23F6D3458(&qword_256EB2C08, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailureDeveloperDefinedError);
  sub_23FB2D8B0();
  if (v25)
  {
    v26 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v26, &qword_256EB4628);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4628);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4628);
    v26 = (uint64_t)v22;
    goto LABEL_10;
  }
  v27 = v33;
  sub_23F7E76D0((uint64_t)v22, v33, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
  if (v32 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4628);
  v28 = v31;
  sub_23F6B4F84(v31, &qword_256EA7FE8);
  sub_23F7E76D0(v27, v28, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v28, 0, 16, v5);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v28, 0, 1, v30);
}

void sub_23F8B08B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a2;
  v3 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F6916B8(&qword_256EB4328);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - v10;
  v12 = sub_23FB2D6AC();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v11, 1, 1, v12);
  sub_23F6D3458(&qword_256EB42F0, v13, MEMORY[0x24BE5B938]);
  sub_23FB2D7F0();
  if (v2
    || (sub_23F7A1EDC((uint64_t)v11, (uint64_t)v9, &qword_256EB4328),
        v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v12), sub_23F6B4F84((uint64_t)v9, &qword_256EB4328), v14 == 1))
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
  }
  else
  {
    sub_23F7A1EDC(v20, (uint64_t)v5, &qword_256EA7FE8);
    v15 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
    v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v5, 1, v15);
    sub_23F6B4F84((uint64_t)v5, &qword_256EA7FE8);
    if (v16 != 1)
      sub_23FB2D7C0();
    sub_23F6B4F84((uint64_t)v11, &qword_256EB4328);
    v17 = v20;
    sub_23F6B4F84(v20, &qword_256EA7FE8);
    v18 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 16, 16, v18);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v17, 0, 1, v15);
  }
}

#error "23F8B0B38: call analysis failed (funcsize=42)"

void sub_23F8B0C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_23FB2D6AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v11, &qword_256EA7FE8);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EA7FE8);
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 16, v13);
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (v14 == 1)
    {
      MEMORY[0x242672324]();
      sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_23FB2D94C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return;
    }
  }
  __break(1u);
}

void sub_23F8B0E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_23FB2D6AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v11, &qword_256EA7FE8);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EA7FE8);
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 16, v13);
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (v14 == 2)
    {
      MEMORY[0x242672324]();
      sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_23FB2D94C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return;
    }
  }
  __break(1u);
}

void sub_23F8B0FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_23FB2D6AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v11, &qword_256EA7FE8);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EA7FE8);
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 16, v13);
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (v14 == 3)
    {
      MEMORY[0x242672324]();
      sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_23FB2D94C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return;
    }
  }
  __break(1u);
}

void sub_23F8B1160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_23FB2D6AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v11, &qword_256EA7FE8);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EA7FE8);
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 16, v13);
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (v14 == 4)
    {
      MEMORY[0x242672324]();
      sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_23FB2D94C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return;
    }
  }
  __break(1u);
}

void sub_23F8B12F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_23FB2D6AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v11, &qword_256EA7FE8);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EA7FE8);
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 16, v13);
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (v14 == 5)
    {
      MEMORY[0x242672324]();
      sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_23FB2D94C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return;
    }
  }
  __break(1u);
}

void sub_23F8B1490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_23FB2D6AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v11, &qword_256EA7FE8);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EA7FE8);
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 16, v13);
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (v14 == 6)
    {
      MEMORY[0x242672324]();
      sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_23FB2D94C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return;
    }
  }
  __break(1u);
}

void sub_23F8B1628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_23FB2D6AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v11, &qword_256EA7FE8);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EA7FE8);
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 16, v13);
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (v14 == 7)
    {
      MEMORY[0x242672324]();
      sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_23FB2D94C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return;
    }
  }
  __break(1u);
}

void sub_23F8B17C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_23FB2D6AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v11, &qword_256EA7FE8);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EA7FE8);
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 16, v13);
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (v14 == 8)
    {
      MEMORY[0x242672324]();
      sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_23FB2D94C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return;
    }
  }
  __break(1u);
}

void sub_23F8B1958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_23FB2D6AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v11, &qword_256EA7FE8);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EA7FE8);
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 16, v13);
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (v14 == 9)
    {
      MEMORY[0x242672324]();
      sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_23FB2D94C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return;
    }
  }
  __break(1u);
}

void sub_23F8B1AF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_23FB2D6AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v11, &qword_256EA7FE8);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EA7FE8);
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 16, v13);
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (v14 == 10)
    {
      MEMORY[0x242672324]();
      sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_23FB2D94C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return;
    }
  }
  __break(1u);
}

void sub_23F8B1C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_23FB2D6AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v11, &qword_256EA7FE8);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EA7FE8);
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 16, v13);
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (v14 == 11)
    {
      MEMORY[0x242672324]();
      sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_23FB2D94C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return;
    }
  }
  __break(1u);
}

void sub_23F8B1E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_23FB2D6AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v11, &qword_256EA7FE8);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EA7FE8);
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 16, v13);
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (v14 == 12)
    {
      MEMORY[0x242672324]();
      sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_23FB2D94C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return;
    }
  }
  __break(1u);
}

void sub_23F8B1FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_23FB2D6AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v11, &qword_256EA7FE8);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EA7FE8);
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 16, v13);
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (v14 == 13)
    {
      MEMORY[0x242672324]();
      sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_23FB2D94C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return;
    }
  }
  __break(1u);
}

void sub_23F8B2150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_23FB2D6AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v11, &qword_256EA7FE8);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EA7FE8);
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 16, v13);
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (v14 == 14)
    {
      MEMORY[0x242672324]();
      sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_23FB2D94C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return;
    }
  }
  __break(1u);
}

void sub_23F8B22E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_23FB2D6AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v11, &qword_256EA7FE8);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EA7FE8);
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 16, v13);
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (v14 == 15)
    {
      MEMORY[0x242672324]();
      sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_23FB2D94C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return;
    }
  }
  __break(1u);
}

void sub_23F8B2480(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA7FE8);
  v8 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA7FE8);
  }
  else
  {
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 16, v5))
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
      sub_23F6D3458(&qword_256EB2C08, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailureDeveloperDefinedError);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
  }
  __break(1u);
}

void sub_23F8B2614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_23FB2D6AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F6916B8(&qword_256EA7FE8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v11, &qword_256EA7FE8);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EA7FE8);
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 16, v13);
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (v14 == 16)
    {
      MEMORY[0x242672324]();
      sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_23FB2D94C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return;
    }
  }
  __break(1u);
}

void static TranscriptProtoActionFailureFailure.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  sub_23F6B50E8();
  v5 = v4;
  v47 = sub_23F6B53A4();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v47);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = sub_23F6D38F8(v9, v10, v11, v12, v13, v14, v15, v16, v48);
  type metadata accessor for TranscriptProtoActionFailureFailureEnum(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B59E0();
  v19 = sub_23F6916B8(&qword_256EB1EA8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6D3A70();
  v24 = MEMORY[0x24BDAC7A8](v23);
  sub_23F923124(v24, v25, v26, v27, v28, v29, v30, v31, v49);
  sub_23F923164(v5, v0);
  v32 = v1 + *(int *)(v19 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v32);
  v33 = sub_23F9230E4(v1);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v35 = sub_23F9230E4(v32);
    if (v36)
    {
      sub_23F6D378C(v35, &qword_256EA7FE8);
LABEL_11:
      v46 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
      sub_23F6D3794(v46);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v33, v34, &qword_256EA7FE8);
  sub_23F9230E4(v32);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v37, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
LABEL_9:
    sub_23F6D378C(v35, &qword_256EB1EA8);
    goto LABEL_12;
  }
  sub_23F923270();
  v38 = sub_23F6D3D70();
  static TranscriptProtoActionFailureFailureEnum.== infix(_:_:)(v38, v39, v40, v41, v42, v43, v44, v45, v50, v51);
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoActionFailureFailure.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoActionFailureFailure, &qword_256EB1EB0, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailureFailure);
}

unint64_t sub_23F8B29E0()
{
  static TranscriptProtoActionFailureFailure.protoMessageName.getter();
  return 0xD00000000000001FLL;
}

void sub_23F8B2A04()
{
  TranscriptProtoActionFailureFailure.decodeMessage<A>(decoder:)();
}

uint64_t sub_23F8B2A18()
{
  return TranscriptProtoActionFailureFailure.traverse<A>(visitor:)();
}

uint64_t sub_23F8B2A2C()
{
  sub_23F6D3458(&qword_256EB40F0, type metadata accessor for TranscriptProtoActionFailureFailure, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailureFailure);
  return sub_23FB2D784();
}

uint64_t sub_23F8B2A80()
{
  sub_23F6D3458(&qword_256EB2BF0, type metadata accessor for TranscriptProtoActionFailureFailure, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailureFailure);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8B2AC4()
{
  sub_23F6D3458(&qword_256EB2BF0, type metadata accessor for TranscriptProtoActionFailureFailure, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailureFailure);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoActionFailureDeveloperDefinedError.protoMessageName.getter()
{
  return sub_23F6D3738(45);
}

uint64_t sub_23F8B2B30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0B68);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0B68);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "localizedString";
  *(_QWORD *)(v7 + 8) = 15;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "domain";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "code";
  *((_QWORD *)v13 + 1) = 4;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoActionFailureDeveloperDefinedError._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0D10, (uint64_t)qword_256EB0B68, a1);
}

void TranscriptProtoActionFailureDeveloperDefinedError.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 3)
      {
        sub_23F924BCC();
      }
      else if (v1 == 2 || v1 == 1)
      {
        sub_23F6D395C();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D3674();
}

void TranscriptProtoActionFailureDeveloperDefinedError.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F6D36FC();
  if (!v2 || (sub_23F923258(), !v1))
  {
    sub_23F6D36FC();
    if (!v3 || (sub_23F923258(), !v1))
    {
      if (!*(_QWORD *)(v0 + 32) || (sub_23F92453C(), !v1))
      {
        type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
        sub_23F9231A8();
      }
    }
  }
  sub_23F6D3674();
}

void static TranscriptProtoActionFailureDeveloperDefinedError.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F6D36BC();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6D3834();
  v7 = v7 && v5 == v6;
  if (v7 || (sub_23F6B5280() & 1) != 0)
  {
    sub_23F923C24();
    v10 = v7 && v8 == v9;
    if ((v10 || (sub_23F6B5280() & 1) != 0) && *(_QWORD *)(v2 + 32) == *(_QWORD *)(v1 + 32))
    {
      v11 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
      sub_23F6D3614(*(int *)(v11 + 28));
      sub_23F6D36AC(*(int *)(v11 + 28));
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6D3600();
      sub_23F6D36D0();
      sub_23F6D3820(v0);
    }
  }
  sub_23F6D3B34();
  sub_23F6B69E0();
}

uint64_t TranscriptProtoActionFailureDeveloperDefinedError.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError, &qword_256EB1EB8, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailureDeveloperDefinedError);
}

unint64_t sub_23F8B2EE8()
{
  static TranscriptProtoActionFailureDeveloperDefinedError.protoMessageName.getter();
  return 0xD00000000000002DLL;
}

void sub_23F8B2F0C()
{
  TranscriptProtoActionFailureDeveloperDefinedError.decodeMessage<A>(decoder:)();
}

void sub_23F8B2F20()
{
  TranscriptProtoActionFailureDeveloperDefinedError.traverse<A>(visitor:)();
}

uint64_t sub_23F8B2F34()
{
  sub_23F6D3458(&qword_256EB40E8, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailureDeveloperDefinedError);
  return sub_23FB2D784();
}

uint64_t sub_23F8B2F88()
{
  sub_23F6D3458(&qword_256EB2C08, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailureDeveloperDefinedError);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8B2FCC()
{
  sub_23F6D3458(&qword_256EB2C08, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailureDeveloperDefinedError);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoActionSuccess.protoMessageName.getter()
{
  return sub_23F6D3738(24);
}

uint64_t sub_23F8B3038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0B80);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0B80);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1C0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "returnValue";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "appLaunched";
  *(_QWORD *)(v11 + 8) = 11;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "undoContext";
  *((_QWORD *)v13 + 1) = 11;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "didShowInAppResult";
  *((_QWORD *)v15 + 1) = 18;
  v15[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoActionSuccess._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0D18, (uint64_t)qword_256EB0B80, a1);
}

void TranscriptProtoActionSuccess.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;

  sub_23F6B5220();
  sub_23F6D356C();
  if (!v12)
  {
    while ((v13 & 1) == 0)
    {
      sub_23F6D3E98();
      if (!(!v24 & v23))
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_23F8B3274 + 4 * byte_23FB74CC3[v22]))(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10, a11, a12);
        return;
      }
      sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoActionSuccess.traverse<A>(visitor:)()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;

  sub_23F924384();
  sub_23F924958();
  sub_23F8B4180();
  if (!v0)
  {
    if (*v1 == 1)
      sub_23F6D369C();
    sub_23F6D3664();
    sub_23F8B3390(v2);
    if (v1[1] == 1)
      sub_23F6D369C();
    type metadata accessor for TranscriptProtoActionSuccess(0);
    sub_23F6D37BC();
  }
  sub_23F6D3674();
}

void sub_23F8B3390(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA7FC8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoUndoContext(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoActionSuccess(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 28), (uint64_t)v4, &qword_256EA7FC8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA7FC8);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoUndoContext);
    sub_23F6D3458(&qword_256EB2C38, type metadata accessor for TranscriptProtoUndoContext, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoContext);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoUndoContext);
  }
}

void static TranscriptProtoActionSuccess.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t *v39;
  char v40;
  unsigned __int8 *v41;
  unsigned __int8 *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned __int8 *v70;
  unsigned __int8 *v71;

  sub_23F6B50E8();
  v70 = v6;
  v71 = v7;
  v8 = sub_23F6B53A4();
  v60 = *(_QWORD *)(v8 - 8);
  v61 = v8;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v59 = (uint64_t)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v11);
  v58 = (uint64_t)&v58 - v12;
  v13 = sub_23F6D398C();
  v68 = type metadata accessor for TranscriptProtoUndoContext(v13);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B5810(v15, v58);
  v64 = sub_23F6916B8(&qword_256EB1EC0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B5BD8(v17, v58);
  sub_23F6916B8(&qword_256EA7FC8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  v63 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v20);
  v66 = (uint64_t)&v58 - v21;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v22);
  v67 = (uint64_t)&v58 - v23;
  v24 = sub_23F6D3D08();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F6B52B0();
  v26 = sub_23F6916B8(&qword_256EA2618);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA2610);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F6B65E0();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F876AD4();
  MEMORY[0x24BDAC7A8](v30);
  v31 = sub_23F6B6308();
  v32 = type metadata accessor for TranscriptProtoActionSuccess(v31);
  sub_23F92332C((uint64_t)&v70[*(int *)(v32 + 24)], v3);
  v65 = v32;
  sub_23F92332C((uint64_t)&v71[*(int *)(v32 + 24)], v2);
  v33 = v1 + *(int *)(v26 + 48);
  sub_23F92332C(v3, v1);
  v34 = sub_23F72E430();
  sub_23F92332C(v34, v35);
  sub_23F6B5164(v1, 1, v24);
  if (v38)
  {
    sub_23F6B6EF8(v2);
    sub_23F6B6EF8(v3);
    v37 = sub_23F6B5164(v33, 1, v24);
    if (v38)
    {
      sub_23F6D378C(v37, &qword_256EA2610);
      goto LABEL_12;
    }
LABEL_9:
    v39 = &qword_256EA2618;
LABEL_10:
    sub_23F6D378C(v37, v39);
    goto LABEL_13;
  }
  sub_23F923760(v1, v36, &qword_256EA2610);
  sub_23F6B5164(v33, 1, v24);
  if (v38)
  {
    sub_23F6B64F4(v2);
    sub_23F6B64F4(v3);
    v37 = sub_23F7B0990(v5, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    goto LABEL_9;
  }
  sub_23F6D3ECC(v0, v33, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
  sub_23F6D3458(&qword_256EA2620, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95B0], MEMORY[0x24BEB95C8]);
  v40 = sub_23F6B5624();
  sub_23F6D3820(v0);
  sub_23F6B62DC(v2);
  sub_23F6B62DC(v3);
  sub_23F6D3820(v5);
  sub_23F6B62DC(v1);
  if ((v40 & 1) == 0)
    goto LABEL_13;
LABEL_12:
  v42 = v70;
  v41 = v71;
  if (*v70 != *v71)
    goto LABEL_13;
  v43 = v65;
  v44 = v67;
  sub_23F92332C((uint64_t)&v70[*(int *)(v65 + 28)], v67);
  v45 = v66;
  sub_23F92332C((uint64_t)&v41[*(int *)(v43 + 28)], v66);
  sub_23F924AD0();
  v46 = v69;
  v48 = v69 + v47;
  sub_23F92332C(v44, v69);
  sub_23F92332C(v45, v48);
  v49 = v68;
  sub_23F6B5164(v46, 1, v68);
  if (!v38)
  {
    v51 = (uint64_t)v63;
    sub_23F923A50(v46, v50, &qword_256EA7FC8);
    sub_23F6B5164(v48, 1, v49);
    if (!v52)
    {
      v54 = v62;
      sub_23F9238DC(v48);
      sub_23F72E430();
      static TranscriptProtoUndoContext.== infix(_:_:)();
      v56 = v55;
      sub_23F6D3DAC(v54);
      sub_23F6B62DC(v45);
      sub_23F6B62DC(v44);
      sub_23F6D3DAC(v51);
      sub_23F6B62DC(v46);
      if ((v56 & 1) == 0)
        goto LABEL_13;
      goto LABEL_24;
    }
    sub_23F6B64F4(v45);
    sub_23F6B64F4(v44);
    sub_23F6D3D20(v53, type metadata accessor for TranscriptProtoUndoContext);
    goto LABEL_22;
  }
  sub_23F6B6EF8(v45);
  sub_23F6B6EF8(v44);
  v37 = sub_23F6B5164(v48, 1, v49);
  if (!v38)
  {
LABEL_22:
    v39 = &qword_256EB1EC0;
    goto LABEL_10;
  }
  sub_23F6D378C(v37, &qword_256EA7FC8);
LABEL_24:
  if (v42[1] == v41[1])
  {
    v57 = v58;
    sub_23F9249C8(v58, (uint64_t)&v42[*(int *)(v43 + 32)]);
    sub_23F9249C8(v59, (uint64_t)&v41[*(int *)(v43 + 32)]);
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F923230();
    sub_23F9232DC();
    sub_23F6D3874(v57);
  }
LABEL_13:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoActionSuccess.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoActionSuccess, &qword_256EB1EC8, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionSuccess);
}

unint64_t sub_23F8B3A0C()
{
  static TranscriptProtoActionSuccess.protoMessageName.getter();
  return 0xD000000000000018;
}

#error "23F8B3A38: call analysis failed (funcsize=5)"

void sub_23F8B3A44()
{
  TranscriptProtoActionSuccess.traverse<A>(visitor:)();
}

uint64_t sub_23F8B3A58()
{
  sub_23F6D3458(&qword_256EB40E0, type metadata accessor for TranscriptProtoActionSuccess, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionSuccess);
  return sub_23FB2D784();
}

uint64_t sub_23F8B3AAC()
{
  sub_23F6D3458(&qword_256EB2C20, type metadata accessor for TranscriptProtoActionSuccess, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionSuccess);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8B3AF0()
{
  sub_23F6D3458(&qword_256EB2C20, type metadata accessor for TranscriptProtoActionSuccess, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionSuccess);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoUndoContext.protoMessageName.getter()
{
  return sub_23F6D3738(22);
}

uint64_t sub_23F8B3B5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0B98);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0B98);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "token";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "bundleIdentifier";
  *((_QWORD *)v11 + 1) = 16;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "actionDescription";
  *((_QWORD *)v13 + 1) = 17;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoUndoContext._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0D20, (uint64_t)qword_256EB0B98, a1);
}

void TranscriptProtoUndoContext.decodeMessage<A>(decoder:)()
{
  sub_23F924568();
}

void TranscriptProtoUndoContext.traverse<A>(visitor:)()
{
  sub_23F90C1CC();
}

void static TranscriptProtoUndoContext.== infix(_:_:)()
{
  sub_23F8BC804();
}

uint64_t TranscriptProtoUndoContext.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoUndoContext, &qword_256EB1ED0, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoContext);
}

unint64_t sub_23F8B3D64()
{
  static TranscriptProtoUndoContext.protoMessageName.getter();
  return 0xD000000000000016;
}

void sub_23F8B3D88()
{
  TranscriptProtoUndoContext.decodeMessage<A>(decoder:)();
}

void sub_23F8B3D9C()
{
  TranscriptProtoUndoContext.traverse<A>(visitor:)();
}

uint64_t sub_23F8B3DB0()
{
  sub_23F6D3458(&qword_256EB40D8, type metadata accessor for TranscriptProtoUndoContext, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoContext);
  return sub_23FB2D784();
}

uint64_t sub_23F8B3E04()
{
  sub_23F6D3458(&qword_256EB2C38, type metadata accessor for TranscriptProtoUndoContext, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoContext);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8B3E48()
{
  sub_23F6D3458(&qword_256EB2C38, type metadata accessor for TranscriptProtoUndoContext, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoContext);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoParameterConfirmation.protoMessageName.getter()
{
  return sub_23F6D3738(32);
}

uint64_t sub_23F8B3EB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0BB0);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0BB0);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "parameterId";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 5;
  *(_QWORD *)v11 = "parameterIndex";
  *((_QWORD *)v11 + 1) = 14;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "item";
  *((_QWORD *)v13 + 1) = 4;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoParameterConfirmation._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0D28, (uint64_t)qword_256EB0BB0, a1);
}

void TranscriptProtoParameterConfirmation.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 5:
          sub_23F9240FC();
          break;
        case 2:
          sub_23F9235E8();
          break;
        case 1:
          sub_23F923334();
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoParameterConfirmation.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6D36FC();
  if (!v1 || (sub_23F923258(), !v0))
  {
    sub_23F9240E0();
    if (!v0)
    {
      v2 = sub_23F6D3D7C();
      sub_23F8D3E4C(v2);
      type metadata accessor for TranscriptProtoParameterConfirmation(0);
      sub_23F9231A8();
    }
  }
  sub_23F6D3674();
}

void sub_23F8B4180()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  sub_23F6B5220();
  sub_23F924588(v1, v2, v3, v4, v5, v6);
  sub_23F72E4BC();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_23F923A64();
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F924168();
  sub_23F923FD0(*(int *)(v10 + 24));
  v11 = sub_23F6B5164(v0, 1, v8);
  if (v12)
  {
    sub_23F77DD64(v11, &qword_256EA2610);
  }
  else
  {
    sub_23F924574();
    sub_23F6D3458(&qword_256EA3248, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95B0], MEMORY[0x24BEB95A0]);
    sub_23F924004();
    sub_23F9245A4();
  }
  sub_23F77DB18();
  sub_23F6B5100();
}

void static TranscriptProtoParameterConfirmation.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE v37[4];
  int v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  v8 = sub_23F6B53A4();
  v43 = *(_QWORD *)(v8 - 8);
  v44 = v8;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v42 = &v37[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v11);
  v41 = &v37[-v12];
  v13 = sub_23F6D3D08();
  v45 = *(_QWORD *)(v13 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B59E0();
  v15 = sub_23F6916B8(&qword_256EA2618);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B53AC();
  sub_23F6916B8(&qword_256EA2610);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6D3BD8();
  MEMORY[0x24BDAC7A8](v19);
  v21 = &v37[-v20];
  sub_23F924268();
  v24 = v24 && v22 == v23;
  if (!v24 && (sub_23F6B5280() & 1) == 0)
    goto LABEL_23;
  v25 = *(_BYTE *)(v5 + 24);
  if ((*(_BYTE *)(v7 + 24) & 1) != 0)
  {
    if (!*(_BYTE *)(v5 + 24))
      goto LABEL_23;
  }
  else
  {
    if (*(_QWORD *)(v7 + 16) != *(_QWORD *)(v5 + 16))
      v25 = 1;
    if ((v25 & 1) != 0)
      goto LABEL_23;
  }
  v39 = v2;
  v26 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
  v27 = sub_23F924A2C(v26);
  sub_23F923164(v27, (uint64_t)v21);
  v40 = v26;
  sub_23F923164(v5 + *(int *)(v26 + 24), v0);
  v28 = v1 + *(int *)(v15 + 48);
  sub_23F923164((uint64_t)v21, v1);
  sub_23F923164(v0, v28);
  sub_23F6B5164(v1, 1, v13);
  if (v24)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4((uint64_t)v21);
    v30 = sub_23F6B5164(v28, 1, v13);
    if (v24)
    {
      sub_23F6B6034(v30, &qword_256EA2610);
LABEL_22:
      v34 = v40;
      v35 = v7 + *(int *)(v40 + 28);
      v36 = v41;
      sub_23F6D3818((uint64_t)v41, v35);
      sub_23F6D3818((uint64_t)v42, v5 + *(int *)(v34 + 28));
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F923230();
      sub_23F9232DC();
      sub_23F6D3874((uint64_t)v36);
      goto LABEL_23;
    }
    goto LABEL_20;
  }
  sub_23F923370(v1, v29, &qword_256EA2610);
  sub_23F6B5164(v28, 1, v13);
  if (v31)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4((uint64_t)v21);
    v30 = sub_23F92377C();
LABEL_20:
    sub_23F6B6034(v30, &qword_256EA2618);
    goto LABEL_23;
  }
  v32 = sub_23F924A18();
  sub_23F6D3ECC(v32, v28, v33);
  sub_23F6D3458(&qword_256EA2620, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95B0], MEMORY[0x24BEB95C8]);
  v38 = sub_23F6B5624();
  sub_23F6D39FC(v26);
  sub_23F6D3C1C(v0);
  sub_23F6D3C1C((uint64_t)v21);
  sub_23F6D39FC(v3);
  sub_23F6D3C1C(v1);
  if ((v38 & 1) != 0)
    goto LABEL_22;
LABEL_23:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoParameterConfirmation.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoParameterConfirmation, &qword_256EB1ED8, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterConfirmation);
}

unint64_t sub_23F8B4574()
{
  static TranscriptProtoParameterConfirmation.protoMessageName.getter();
  return 0xD000000000000020;
}

void sub_23F8B4598()
{
  TranscriptProtoParameterConfirmation.decodeMessage<A>(decoder:)();
}

void sub_23F8B45AC()
{
  TranscriptProtoParameterConfirmation.traverse<A>(visitor:)();
}

uint64_t sub_23F8B45C0()
{
  sub_23F6D3458(&qword_256EB40D0, type metadata accessor for TranscriptProtoParameterConfirmation, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterConfirmation);
  return sub_23FB2D784();
}

uint64_t sub_23F8B4614()
{
  sub_23F6D3458(&qword_256EB2C50, type metadata accessor for TranscriptProtoParameterConfirmation, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterConfirmation);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8B4658()
{
  sub_23F6D3458(&qword_256EB2C50, type metadata accessor for TranscriptProtoParameterConfirmation, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterConfirmation);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoParameterDisambiguation.protoMessageName.getter()
{
  return sub_23F6D3738(34);
}

uint64_t sub_23F8B46C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0BC8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0BC8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "parameterId";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 5;
  *(_QWORD *)v11 = "parameterIndex";
  *((_QWORD *)v11 + 1) = 14;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "items";
  *((_QWORD *)v13 + 1) = 5;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoParameterDisambiguation._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0D30, (uint64_t)qword_256EB0BC8, a1);
}

void TranscriptProtoParameterDisambiguation.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6D3DC4();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 5:
          sub_23F9240FC();
          break;
        case 2:
          sub_23F8B4908();
          break;
        case 1:
          sub_23F923334();
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D3710();
}

void sub_23F8B4908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  sub_23F6B5220();
  sub_23F92432C();
  sub_23F923990(v0, v1, v2, v3, v4);
  sub_23F6D3724();
  sub_23F923E60();
  sub_23F6B5100();
}

void TranscriptProtoParameterDisambiguation.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F6D3DC4();
  sub_23F6D36FC();
  if (!v1 || (sub_23F923258(), !v0))
  {
    sub_23F924550();
    if (!v2
      || (sub_23F6B632C(),
          sub_23F6D3458(&qword_256EA3248, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95B0], MEMORY[0x24BEB95A0]),
          sub_23F923350(),
          !v0))
    {
      sub_23F9231FC();
      sub_23F8B4A04(v3);
      if (!v0)
      {
        type metadata accessor for TranscriptProtoParameterDisambiguation(0);
        sub_23F9231A8();
      }
    }
  }
  sub_23F6D3710();
}

uint64_t sub_23F8B4A04(uint64_t result)
{
  if ((*(_BYTE *)(result + 32) & 1) == 0)
    return sub_23FB2D97C();
  return result;
}

void static TranscriptProtoParameterDisambiguation.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  char v9;
  uint64_t v10;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F6D36BC();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6D3834();
  v7 = v7 && v5 == v6;
  if (!v7 && (sub_23F6B5280() & 1) == 0)
    goto LABEL_14;
  v8 = *(_BYTE *)(v1 + 32);
  if ((*(_BYTE *)(v2 + 32) & 1) != 0)
  {
    if (!*(_BYTE *)(v1 + 32))
      goto LABEL_14;
    goto LABEL_12;
  }
  if (*(_QWORD *)(v2 + 24) != *(_QWORD *)(v1 + 24))
    v8 = 1;
  if ((v8 & 1) == 0)
  {
LABEL_12:
    sub_23F924824();
    sub_23F6963CC();
    if ((v9 & 1) != 0)
    {
      v10 = type metadata accessor for TranscriptProtoParameterDisambiguation(0);
      sub_23F6D3614(*(int *)(v10 + 28));
      sub_23F6D36AC(*(int *)(v10 + 28));
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6D3600();
      sub_23F6D36D0();
      sub_23F6D3820(v0);
    }
  }
LABEL_14:
  sub_23F6D3B34();
  sub_23F6B69E0();
}

uint64_t TranscriptProtoParameterDisambiguation.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoParameterDisambiguation, &qword_256EB1EE0, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterDisambiguation);
}

unint64_t sub_23F8B4B34()
{
  static TranscriptProtoParameterDisambiguation.protoMessageName.getter();
  return 0xD000000000000022;
}

void sub_23F8B4B58()
{
  TranscriptProtoParameterDisambiguation.decodeMessage<A>(decoder:)();
}

void sub_23F8B4B6C()
{
  TranscriptProtoParameterDisambiguation.traverse<A>(visitor:)();
}

uint64_t sub_23F8B4B80()
{
  sub_23F6D3458(&qword_256EB40C8, type metadata accessor for TranscriptProtoParameterDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterDisambiguation);
  return sub_23FB2D784();
}

uint64_t sub_23F8B4BD4()
{
  sub_23F6D3458(&qword_256EB2C68, type metadata accessor for TranscriptProtoParameterDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterDisambiguation);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8B4C18()
{
  sub_23F6D3458(&qword_256EB2C68, type metadata accessor for TranscriptProtoParameterDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterDisambiguation);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoValueDisambiguation.protoMessageName.getter()
{
  return sub_23F6D3738(30);
}

uint64_t sub_23F8B4C84()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoValueDisambiguation._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0D38, (uint64_t)&unk_256EB0BE0, a1);
}

void TranscriptProtoValueDisambiguation.decodeMessage<A>(decoder:)()
{
  sub_23F913C48();
}

void TranscriptProtoValueDisambiguation.traverse<A>(visitor:)()
{
  sub_23F8B4D24();
}

void sub_23F8B4D24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  unint64_t *v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  unint64_t *v7;
  uint64_t (*v8)(uint64_t);
  uint64_t (*v9)(_QWORD);

  sub_23F923528();
  sub_23F924A60();
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    goto LABEL_3;
  v6 = v4;
  v7 = v3;
  v8 = v2;
  v9 = v5;
  v2(0);
  sub_23F6D3458(v7, v8, v6);
  sub_23FB2D9C4();
  v5 = v9;
  if (!v0)
  {
LABEL_3:
    v5(0);
    sub_23F9231A8();
  }
  sub_23F6D3B40();
}

void static TranscriptProtoValueDisambiguation.== infix(_:_:)()
{
  sub_23F89AB14();
}

uint64_t TranscriptProtoValueDisambiguation.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoValueDisambiguation, &qword_256EB1EE8, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueDisambiguation);
}

unint64_t sub_23F8B4E14()
{
  static TranscriptProtoValueDisambiguation.protoMessageName.getter();
  return 0xD00000000000001ELL;
}

void sub_23F8B4E38()
{
  TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant.decodeMessage<A>(decoder:)();
}

void sub_23F8B4E4C()
{
  TranscriptProtoValueDisambiguation.traverse<A>(visitor:)();
}

uint64_t sub_23F8B4E60()
{
  sub_23F6D3458(&qword_256EB40C0, type metadata accessor for TranscriptProtoValueDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueDisambiguation);
  return sub_23FB2D784();
}

uint64_t sub_23F8B4EB4()
{
  sub_23F6D3458(&qword_256EB2C80, type metadata accessor for TranscriptProtoValueDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueDisambiguation);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8B4EF8()
{
  sub_23F6D3458(&qword_256EB2C80, type metadata accessor for TranscriptProtoValueDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueDisambiguation);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoStatementOutcome.protoMessageName.getter()
{
  return sub_23F6D3738(27);
}

uint64_t sub_23F8B4F64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0BF8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0BF8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB89950;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "success";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "actionConfirmation";
  *(_QWORD *)(v11 + 8) = 18;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "parameterNeedsValue";
  *((_QWORD *)v13 + 1) = 19;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "parameterConfirmation";
  *((_QWORD *)v15 + 1) = 21;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "parameterDisambiguation";
  *((_QWORD *)v17 + 1) = 23;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "parameterNotAllowed";
  *((_QWORD *)v19 + 1) = 19;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "parameterCandidatesNotFound";
  *((_QWORD *)v21 + 1) = 27;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "actionRequirement";
  *((_QWORD *)v23 + 1) = 17;
  v23[16] = 2;
  v10();
  v24 = (_QWORD *)(v6 + 8 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 9;
  *(_QWORD *)v25 = "toolDisambiguation";
  *((_QWORD *)v25 + 1) = 18;
  v25[16] = 2;
  v10();
  v26 = (_QWORD *)(v6 + 9 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 10;
  *(_QWORD *)v27 = "failure";
  *((_QWORD *)v27 + 1) = 7;
  v27[16] = 2;
  v10();
  v28 = (_QWORD *)(v6 + 10 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 11;
  *(_QWORD *)v29 = "valueDisambiguation";
  *((_QWORD *)v29 + 1) = 19;
  v29[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoStatementOutcome._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0D40, (uint64_t)qword_256EB0BF8, a1);
}

void TranscriptProtoStatementOutcome.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          v3 = sub_23F923100();
          sub_23F8B53C4(v3, v4, v5, v6);
          break;
        case 2:
          v7 = sub_23F923100();
          sub_23F8B57AC(v7, v8, v9, v10);
          break;
        case 3:
          v11 = sub_23F923100();
          sub_23F8B5B98(v11, v12, v13, v14);
          break;
        case 4:
          v15 = sub_23F923100();
          sub_23F8B5F84(v15, v16, v17, v18);
          break;
        case 5:
          v19 = sub_23F923100();
          sub_23F8B6370(v19, v20, v21, v22);
          break;
        case 6:
          v23 = sub_23F923100();
          sub_23F8B675C(v23, v24, v25, v26);
          break;
        case 7:
          v27 = sub_23F923100();
          sub_23F8B6B48(v27, v28, v29, v30);
          break;
        case 8:
          v31 = sub_23F923100();
          sub_23F8B6F34(v31, v32, v33, v34);
          break;
        case 9:
          v35 = sub_23F923100();
          sub_23F8B7320(v35, v36, v37, v38);
          break;
        case 10:
          v39 = sub_23F923100();
          sub_23F8B770C(v39, v40, v41, v42);
          break;
        case 11:
          v43 = sub_23F923100();
          sub_23F8B7AF8(v43, v44, v45, v46);
          break;
        default:
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D377C();
}

void sub_23F8B53C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoActionSuccess(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA7FF8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB45D0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA7FF8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA7FF8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    }
    else
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB45D0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoActionSuccess);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoActionSuccess);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2C20, type metadata accessor for TranscriptProtoActionSuccess, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionSuccess);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB45D0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB45D0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB45D0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoActionSuccess);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB45D0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA7FF8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoActionSuccess);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8B57AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoActionConfirmation(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA7FF8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB45D8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA7FF8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA7FF8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB45D8);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoActionConfirmation);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoActionConfirmation);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB28F8, type metadata accessor for TranscriptProtoActionConfirmation, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionConfirmation);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB45D8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB45D8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB45D8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoActionConfirmation);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB45D8);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA7FF8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoActionConfirmation);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8B5B98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA7FF8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB45E0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA7FF8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA7FF8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB45E0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoParameterNeedsValue);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoParameterNeedsValue);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2CA8, type metadata accessor for TranscriptProtoParameterNeedsValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterNeedsValue);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB45E0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB45E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB45E0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoParameterNeedsValue);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB45E0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA7FF8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoParameterNeedsValue);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8B5F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA7FF8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB45E8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA7FF8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA7FF8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB45E8);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoParameterConfirmation);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoParameterConfirmation);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2C50, type metadata accessor for TranscriptProtoParameterConfirmation, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterConfirmation);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB45E8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB45E8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB45E8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoParameterConfirmation);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB45E8);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA7FF8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoParameterConfirmation);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8B6370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoParameterDisambiguation(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA7FF8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB45F0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA7FF8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA7FF8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB45F0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoParameterDisambiguation);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoParameterDisambiguation);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2C68, type metadata accessor for TranscriptProtoParameterDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterDisambiguation);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB45F0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB45F0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB45F0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoParameterDisambiguation);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB45F0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA7FF8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoParameterDisambiguation);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8B675C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA7FF8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB45F8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA7FF8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA7FF8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB45F8);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoParameterNotAllowed);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoParameterNotAllowed);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2CC0, type metadata accessor for TranscriptProtoParameterNotAllowed, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterNotAllowed);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB45F8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB45F8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB45F8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoParameterNotAllowed);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB45F8);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA7FF8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoParameterNotAllowed);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8B6B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA7FF8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4600);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA7FF8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA7FF8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4600);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoParameterCandidatesNotFound);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoParameterCandidatesNotFound);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2CE0, type metadata accessor for TranscriptProtoParameterCandidatesNotFound, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterCandidatesNotFound);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4600);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4600);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4600);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoParameterCandidatesNotFound);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4600);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA7FF8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoParameterCandidatesNotFound);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8B6F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoActionRequirement(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA7FF8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4608);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA7FF8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA7FF8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4608);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoActionRequirement);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoActionRequirement);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2B30, type metadata accessor for TranscriptProtoActionRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionRequirement);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4608);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4608);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4608);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoActionRequirement);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4608);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA7FF8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoActionRequirement);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8B7320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoToolDisambiguation(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA7FF8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4610);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA7FF8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA7FF8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4610);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoToolDisambiguation);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoToolDisambiguation);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2920, type metadata accessor for TranscriptProtoToolDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolDisambiguation);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4610);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4610);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4610);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoToolDisambiguation);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4610);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA7FF8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoToolDisambiguation);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8B770C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoActionFailure(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA7FF8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4618);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA7FF8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA7FF8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4618);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoActionFailure);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoActionFailure);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2BD8, type metadata accessor for TranscriptProtoActionFailure, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailure);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4618);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4618);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4618);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoActionFailure);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4618);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA7FF8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoActionFailure);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8B7AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA7FF8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4620);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA7FF8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA7FF8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 10)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4620);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoValueDisambiguation);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoValueDisambiguation);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2C80, type metadata accessor for TranscriptProtoValueDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueDisambiguation);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4620);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4620);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4620);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoValueDisambiguation);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4620);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA7FF8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoValueDisambiguation);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

#error "23F8B7F18: call analysis failed (funcsize=31)"

void sub_23F8B801C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA7FF8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoActionSuccess(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA7FF8);
  v8 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA7FF8);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoActionSuccess);
      sub_23F6D3458(&qword_256EB2C20, type metadata accessor for TranscriptProtoActionSuccess, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionSuccess);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoActionSuccess);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  }
  __break(1u);
}

void sub_23F8B81B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA7FF8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoActionConfirmation(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA7FF8);
  v8 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA7FF8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoActionConfirmation);
      sub_23F6D3458(&qword_256EB28F8, type metadata accessor for TranscriptProtoActionConfirmation, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionConfirmation);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoActionConfirmation);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  }
  __break(1u);
}

void sub_23F8B8348(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA7FF8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA7FF8);
  v8 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA7FF8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoParameterNeedsValue);
      sub_23F6D3458(&qword_256EB2CA8, type metadata accessor for TranscriptProtoParameterNeedsValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterNeedsValue);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoParameterNeedsValue);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  }
  __break(1u);
}

void sub_23F8B84E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA7FF8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA7FF8);
  v8 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA7FF8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoParameterConfirmation);
      sub_23F6D3458(&qword_256EB2C50, type metadata accessor for TranscriptProtoParameterConfirmation, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterConfirmation);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoParameterConfirmation);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  }
  __break(1u);
}

void sub_23F8B8678(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA7FF8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoParameterDisambiguation(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA7FF8);
  v8 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA7FF8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoParameterDisambiguation);
      sub_23F6D3458(&qword_256EB2C68, type metadata accessor for TranscriptProtoParameterDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterDisambiguation);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoParameterDisambiguation);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  }
  __break(1u);
}

void sub_23F8B8810(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA7FF8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA7FF8);
  v8 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA7FF8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoParameterNotAllowed);
      sub_23F6D3458(&qword_256EB2CC0, type metadata accessor for TranscriptProtoParameterNotAllowed, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterNotAllowed);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoParameterNotAllowed);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  }
  __break(1u);
}

void sub_23F8B89A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA7FF8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA7FF8);
  v8 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA7FF8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoParameterCandidatesNotFound);
      sub_23F6D3458(&qword_256EB2CE0, type metadata accessor for TranscriptProtoParameterCandidatesNotFound, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterCandidatesNotFound);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoParameterCandidatesNotFound);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  }
  __break(1u);
}

void sub_23F8B8B40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA7FF8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoActionRequirement(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA7FF8);
  v8 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA7FF8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoActionRequirement);
      sub_23F6D3458(&qword_256EB2B30, type metadata accessor for TranscriptProtoActionRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionRequirement);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoActionRequirement);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  }
  __break(1u);
}

void sub_23F8B8CD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA7FF8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoToolDisambiguation(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA7FF8);
  v8 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA7FF8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoToolDisambiguation);
      sub_23F6D3458(&qword_256EB2920, type metadata accessor for TranscriptProtoToolDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolDisambiguation);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoToolDisambiguation);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  }
  __break(1u);
}

void sub_23F8B8E70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA7FF8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoActionFailure(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA7FF8);
  v8 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA7FF8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoActionFailure);
      sub_23F6D3458(&qword_256EB2BD8, type metadata accessor for TranscriptProtoActionFailure, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailure);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoActionFailure);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  }
  __break(1u);
}

void sub_23F8B9008(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA7FF8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA7FF8);
  v8 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA7FF8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 10)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoValueDisambiguation);
      sub_23F6D3458(&qword_256EB2C80, type metadata accessor for TranscriptProtoValueDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueDisambiguation);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoValueDisambiguation);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  }
  __break(1u);
}

void static TranscriptProtoStatementOutcome.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F6B50E8();
  v5 = v4;
  v39 = sub_23F6B53A4();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v39);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = sub_23F6D38F8(v9, v10, v11, v12, v13, v14, v15, v16, v40);
  type metadata accessor for TranscriptProtoStatementOutcomeEnum(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B59E0();
  v19 = sub_23F6916B8(&qword_256EB1EF0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6D3A70();
  v24 = MEMORY[0x24BDAC7A8](v23);
  sub_23F923124(v24, v25, v26, v27, v28, v29, v30, v31, v41);
  sub_23F923164(v5, v0);
  v32 = v1 + *(int *)(v19 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v32);
  v33 = sub_23F9230E4(v1);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v35 = sub_23F9230E4(v32);
    if (v36)
    {
      sub_23F6D378C(v35, &qword_256EA7FF8);
LABEL_11:
      v38 = type metadata accessor for TranscriptProtoStatementOutcome(0);
      sub_23F6D3794(v38);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v33, v34, &qword_256EA7FF8);
  sub_23F9230E4(v32);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v37, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
LABEL_9:
    sub_23F6D378C(v35, &qword_256EB1EF0);
    goto LABEL_12;
  }
  sub_23F923270();
  sub_23F6D3D70();
  static TranscriptProtoStatementOutcomeEnum.== infix(_:_:)();
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoStatementOutcome.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoStatementOutcome, &qword_256EB1EF8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementOutcome);
}

unint64_t sub_23F8B93D4()
{
  static TranscriptProtoStatementOutcome.protoMessageName.getter();
  return 0xD00000000000001BLL;
}

void sub_23F8B93F8()
{
  TranscriptProtoStatementOutcome.decodeMessage<A>(decoder:)();
}

uint64_t sub_23F8B940C()
{
  return TranscriptProtoStatementOutcome.traverse<A>(visitor:)();
}

uint64_t sub_23F8B9420()
{
  sub_23F6D3458(&qword_256EB40B8, type metadata accessor for TranscriptProtoStatementOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementOutcome);
  return sub_23FB2D784();
}

uint64_t sub_23F8B9474()
{
  sub_23F6D3458(&qword_256EA7F00, type metadata accessor for TranscriptProtoStatementOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementOutcome);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8B94B8()
{
  sub_23F6D3458(&qword_256EA7F00, type metadata accessor for TranscriptProtoStatementOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementOutcome);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoParameterNeedsValue.protoMessageName.getter()
{
  return sub_23F6D3738(30);
}

uint64_t sub_23F8B9524()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoParameterNeedsValue._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0D48, (uint64_t)&unk_256EB0C10, a1);
}

void TranscriptProtoParameterNeedsValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F9062A8(a1, a2);
}

void TranscriptProtoParameterNeedsValue.traverse<A>(visitor:)()
{
  sub_23F906318();
}

void static TranscriptProtoParameterNeedsValue.== infix(_:_:)()
{
  sub_23F8AB6CC();
}

uint64_t TranscriptProtoParameterNeedsValue.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoParameterNeedsValue, &qword_256EB1F00, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterNeedsValue);
}

unint64_t sub_23F8B95C0()
{
  static TranscriptProtoParameterNeedsValue.protoMessageName.getter();
  return 0xD00000000000001ELL;
}

void sub_23F8B95E4()
{
  TranscriptProtoParameterNeedsValue.traverse<A>(visitor:)();
}

uint64_t sub_23F8B95F8()
{
  sub_23F6D3458(&qword_256EB40B0, type metadata accessor for TranscriptProtoParameterNeedsValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterNeedsValue);
  return sub_23FB2D784();
}

uint64_t sub_23F8B964C()
{
  sub_23F6D3458(&qword_256EB2CA8, type metadata accessor for TranscriptProtoParameterNeedsValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterNeedsValue);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8B9690()
{
  sub_23F6D3458(&qword_256EB2CA8, type metadata accessor for TranscriptProtoParameterNeedsValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterNeedsValue);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoParameterNotAllowed.protoMessageName.getter()
{
  return sub_23F6D3738(30);
}

uint64_t sub_23F8B96FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0C28);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0C28);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "parameterId";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "value";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "reason";
  *((_QWORD *)v13 + 1) = 6;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoParameterNotAllowed._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0D50, (uint64_t)qword_256EB0C28, a1);
}

void TranscriptProtoParameterNotAllowed.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 3:
          sub_23F6D3598();
          sub_23F90F2F4();
          break;
        case 2:
          sub_23F923E10();
          break;
        case 1:
          sub_23F923334();
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoParameterNotAllowed.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F924514();
  sub_23F6D36FC();
  if (!v2 || (sub_23F923258(), !v1))
  {
    sub_23F9240E0();
    if (!v1)
    {
      if (*(_BYTE *)(v0 + 16))
      {
        sub_23F9189EC();
        sub_23F923630();
      }
      type metadata accessor for TranscriptProtoParameterNotAllowed(0);
      sub_23F9231A8();
    }
  }
  sub_23F6D3C00();
}

void static TranscriptProtoParameterNotAllowed.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F6B50E8();
  v4 = v3;
  v6 = v5;
  v39 = *(_QWORD *)(sub_23F6B53A4() - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  v38 = (uint64_t)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v9);
  v37 = (uint64_t)&v35 - v10;
  v11 = sub_23F6D3D08();
  v41 = *(_QWORD *)(v11 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F70D7A4(v13, v35);
  v14 = sub_23F6916B8(&qword_256EA2618);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B53AC();
  sub_23F6916B8(&qword_256EA2610);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6D3A70();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v35 - v19;
  sub_23F924268();
  v23 = v23 && v21 == v22;
  if (!v23 && (sub_23F6B5280() & 1) == 0)
    goto LABEL_18;
  v24 = sub_23F924508();
  v25 = type metadata accessor for TranscriptProtoParameterNotAllowed(v24);
  v26 = sub_23F924A2C(v25);
  sub_23F923368(v26, (uint64_t)v20);
  sub_23F923368(v4 + *(int *)(v25 + 24), v0);
  v27 = v1 + *(int *)(v14 + 48);
  sub_23F923368((uint64_t)v20, v1);
  sub_23F923368(v0, v27);
  sub_23F6B5164(v1, 1, v11);
  if (!v23)
  {
    sub_23F923370(v1, v28, &qword_256EA2610);
    sub_23F6B5164(v27, 1, v11);
    if (!v30)
    {
      v31 = v40;
      sub_23F6D3ECC(v40, v27, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 32));
      sub_23F6D3458(&qword_256EA2620, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95B0], MEMORY[0x24BEB95C8]);
      v36 = sub_23F6B5624();
      sub_23F6D39FC(v31);
      sub_23F6D387C(v0);
      sub_23F6D387C((uint64_t)v20);
      sub_23F6D39FC(v2);
      sub_23F6D387C(v1);
      if ((v36 & 1) == 0)
        goto LABEL_18;
      goto LABEL_16;
    }
    sub_23F6B64F4(v0);
    sub_23F6B64F4((uint64_t)v20);
    v29 = sub_23F92377C();
LABEL_14:
    sub_23F6B6034(v29, &qword_256EA2618);
    goto LABEL_18;
  }
  sub_23F6D387C(v0);
  sub_23F6D387C((uint64_t)v20);
  v29 = sub_23F6B5164(v27, 1, v11);
  if (!v23)
    goto LABEL_14;
  sub_23F6B6034(v29, &qword_256EA2610);
LABEL_16:
  if (*(unsigned __int8 *)(v6 + 16) == *(unsigned __int8 *)(v4 + 16))
  {
    v32 = v6 + *(int *)(v25 + 28);
    v33 = v37;
    sub_23F923484(v37, v32);
    v34 = v38;
    sub_23F923484(v38, v4 + *(int *)(v25 + 28));
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F6B5624();
    sub_23F6D39FC(v34);
    sub_23F6D39FC(v33);
  }
LABEL_18:
  sub_23F923FC4();
  sub_23F693DDC();
}

uint64_t TranscriptProtoParameterNotAllowed.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoParameterNotAllowed, &qword_256EB1F10, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterNotAllowed);
}

unint64_t sub_23F8B9D38()
{
  static TranscriptProtoParameterNotAllowed.protoMessageName.getter();
  return 0xD00000000000001ELL;
}

void sub_23F8B9D5C()
{
  TranscriptProtoParameterNotAllowed.decodeMessage<A>(decoder:)();
}

void sub_23F8B9D70()
{
  TranscriptProtoParameterNotAllowed.traverse<A>(visitor:)();
}

uint64_t sub_23F8B9D84()
{
  sub_23F6D3458(&qword_256EB40A8, type metadata accessor for TranscriptProtoParameterNotAllowed, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterNotAllowed);
  return sub_23FB2D784();
}

uint64_t sub_23F8B9DD8()
{
  sub_23F6D3458(&qword_256EB2CC0, type metadata accessor for TranscriptProtoParameterNotAllowed, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterNotAllowed);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8B9E1C()
{
  sub_23F6D3458(&qword_256EB2CC0, type metadata accessor for TranscriptProtoParameterNotAllowed, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterNotAllowed);
  return sub_23FB2D904();
}

uint64_t sub_23F8B9E70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0C40);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0C40);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "unknown";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "missingRequiredPhoneNumber";
  *((_QWORD *)v11 + 1) = 26;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "missingRequiredEmailAddress";
  *((_QWORD *)v13 + 1) = 27;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoParameterNotAllowed.Reason._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0D58, (uint64_t)qword_256EB0C40, a1);
}

unint64_t static TranscriptProtoParameterCandidatesNotFound.protoMessageName.getter()
{
  return sub_23F6D3738(38);
}

uint64_t sub_23F8BA038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0C58);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0C58);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "parameterId";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "value";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoParameterCandidatesNotFound._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0D60, (uint64_t)qword_256EB0C58, a1);
}

void TranscriptProtoParameterCandidatesNotFound.decodeMessage<A>(decoder:)()
{
  sub_23F90C870();
}

void TranscriptProtoParameterCandidatesNotFound.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0;
  sub_23F6D36FC();
  if (!v2 || (sub_23F923258(), (v1 = v0) == 0))
  {
    sub_23F8A2454();
    if (!v1)
    {
      type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
      sub_23F9231A8();
    }
  }
  sub_23F6D3674();
}

void static TranscriptProtoParameterCandidatesNotFound.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_23F6B50E8();
  v4 = v3;
  v6 = v5;
  v39 = *(_QWORD *)(sub_23F6B53A4() - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  v38 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v9);
  v37 = (uint64_t)&v34 - v10;
  v11 = sub_23F6D3D08();
  v40 = *(_QWORD *)(v11 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5420(v13, v34);
  v14 = sub_23F6916B8(&qword_256EA2618);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B53AC();
  sub_23F6916B8(&qword_256EA2610);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6D3A70();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v34 - v19;
  sub_23F924268();
  v23 = v23 && v21 == v22;
  if (!v23 && (sub_23F6B5280() & 1) == 0)
    goto LABEL_17;
  v24 = sub_23F924508();
  v25 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(v24);
  sub_23F923368(v6 + *(int *)(v25 + 20), (uint64_t)v20);
  sub_23F923368(v4 + *(int *)(v25 + 20), v0);
  v26 = v1 + *(int *)(v14 + 48);
  sub_23F923368((uint64_t)v20, v1);
  sub_23F923368(v0, v26);
  sub_23F6B5164(v1, 1, v11);
  if (v23)
  {
    sub_23F6D387C(v0);
    sub_23F6D387C((uint64_t)v20);
    v28 = sub_23F6B5164(v26, 1, v11);
    if (v23)
    {
      sub_23F6B6034(v28, &qword_256EA2610);
LABEL_16:
      v31 = v6 + *(int *)(v25 + 24);
      v32 = v37;
      sub_23F923484(v37, v31);
      v33 = v38;
      sub_23F923484(v38, v4 + *(int *)(v25 + 24));
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6B5624();
      sub_23F6D39FC(v33);
      sub_23F6D39FC(v32);
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  sub_23F923370(v1, v27, &qword_256EA2610);
  sub_23F6B5164(v26, 1, v11);
  if (v29)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4((uint64_t)v20);
    v28 = sub_23F92377C();
LABEL_14:
    sub_23F6B6034(v28, &qword_256EA2618);
    goto LABEL_17;
  }
  v30 = v36;
  sub_23F6D3ECC(v36, v26, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 32));
  sub_23F6D3458(&qword_256EA2620, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95B0], MEMORY[0x24BEB95C8]);
  v35 = sub_23F6B5624();
  sub_23F6D39FC(v30);
  sub_23F6D387C(v0);
  sub_23F6D387C((uint64_t)v20);
  sub_23F6D39FC(v2);
  sub_23F6D387C(v1);
  if ((v35 & 1) != 0)
    goto LABEL_16;
LABEL_17:
  sub_23F923FC4();
  sub_23F693DDC();
}

uint64_t TranscriptProtoParameterCandidatesNotFound.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoParameterCandidatesNotFound, &qword_256EB1F18, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterCandidatesNotFound);
}

unint64_t sub_23F8BA5AC()
{
  static TranscriptProtoParameterCandidatesNotFound.protoMessageName.getter();
  return 0xD000000000000026;
}

void sub_23F8BA5D0()
{
  TranscriptProtoParameterCandidatesNotFound.decodeMessage<A>(decoder:)();
}

void sub_23F8BA5E4()
{
  TranscriptProtoParameterCandidatesNotFound.traverse<A>(visitor:)();
}

uint64_t sub_23F8BA5F8()
{
  sub_23F6D3458(&qword_256EB40A0, type metadata accessor for TranscriptProtoParameterCandidatesNotFound, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterCandidatesNotFound);
  return sub_23FB2D784();
}

uint64_t sub_23F8BA64C()
{
  sub_23F6D3458(&qword_256EB2CE0, type metadata accessor for TranscriptProtoParameterCandidatesNotFound, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterCandidatesNotFound);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8BA690()
{
  sub_23F6D3458(&qword_256EB2CE0, type metadata accessor for TranscriptProtoParameterCandidatesNotFound, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterCandidatesNotFound);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoParticipantID.protoMessageName.getter()
{
  return sub_23F6D3738(24);
}

uint64_t sub_23F8BA6FC()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoParticipantID._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0D68, (uint64_t)&unk_256EB0C70, a1);
}

void TranscriptProtoParticipantID.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F9062A8(a1, a2);
}

void TranscriptProtoParticipantID.traverse<A>(visitor:)()
{
  sub_23F906318();
}

void static TranscriptProtoParticipantID.== infix(_:_:)()
{
  sub_23F8AB6CC();
}

uint64_t TranscriptProtoParticipantID.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoParticipantID, &qword_256EB1F20, (uint64_t)&protocol conformance descriptor for TranscriptProtoParticipantID);
}

unint64_t sub_23F8BA798()
{
  static TranscriptProtoParticipantID.protoMessageName.getter();
  return 0xD000000000000018;
}

void sub_23F8BA7BC()
{
  TranscriptProtoParticipantID.traverse<A>(visitor:)();
}

uint64_t sub_23F8BA7D0()
{
  sub_23F6D3458(&qword_256EB4098, type metadata accessor for TranscriptProtoParticipantID, (uint64_t)&protocol conformance descriptor for TranscriptProtoParticipantID);
  return sub_23FB2D784();
}

uint64_t sub_23F8BA824()
{
  sub_23F6D3458(&qword_256EB2CF8, type metadata accessor for TranscriptProtoParticipantID, (uint64_t)&protocol conformance descriptor for TranscriptProtoParticipantID);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8BA868()
{
  sub_23F6D3458(&qword_256EB2CF8, type metadata accessor for TranscriptProtoParticipantID, (uint64_t)&protocol conformance descriptor for TranscriptProtoParticipantID);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoSpanID.protoMessageName.getter()
{
  return sub_23F6D3738(17);
}

uint64_t sub_23F8BA8D4()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoSpanID._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0D70, (uint64_t)&unk_256EB0C88, a1);
}

void TranscriptProtoSpanID.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F9062A8(a1, a2);
}

void TranscriptProtoSpanID.traverse<A>(visitor:)()
{
  uint64_t v0;

  if (!sub_23F9245D4() || (sub_23F6D35F4(), sub_23FB2D9B8(), !v0))
  {
    type metadata accessor for TranscriptProtoSpanID(0);
    sub_23F9231A8();
  }
  sub_23F6D3674();
}

void static TranscriptProtoSpanID.== infix(_:_:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F6D36BC();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6D3DD8();
  if (*v2 == *v1)
  {
    v5 = type metadata accessor for TranscriptProtoSpanID(0);
    sub_23F6D3614(*(int *)(v5 + 20));
    sub_23F6D36AC(*(int *)(v5 + 20));
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F6D3600();
    sub_23F6D3A04();
    sub_23F6D3BD0(v0);
  }
  sub_23F923E3C();
  sub_23F6B69E0();
}

uint64_t TranscriptProtoSpanID.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoSpanID, &qword_256EB1F28, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpanID);
}

unint64_t sub_23F8BAA50()
{
  static TranscriptProtoSpanID.protoMessageName.getter();
  return 0xD000000000000011;
}

void sub_23F8BAA74(uint64_t a1, uint64_t a2)
{
  TranscriptProtoSpanID.decodeMessage<A>(decoder:)(a1, a2);
}

void sub_23F8BAA88()
{
  TranscriptProtoSpanID.traverse<A>(visitor:)();
}

uint64_t sub_23F8BAA9C()
{
  sub_23F6D3458(&qword_256EB4090, type metadata accessor for TranscriptProtoSpanID, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpanID);
  return sub_23FB2D784();
}

uint64_t sub_23F8BAAF0()
{
  sub_23F6D3458(&qword_256EB2D10, type metadata accessor for TranscriptProtoSpanID, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpanID);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8BAB34()
{
  sub_23F6D3458(&qword_256EB2D10, type metadata accessor for TranscriptProtoSpanID, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpanID);
  return sub_23FB2D904();
}

uint64_t static TranscriptProtoPlan.protoMessageName.getter()
{
  return 0x697263736E617254;
}

uint64_t sub_23F8BABAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0CA0);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0CA0);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F190;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 3;
  *(_QWORD *)v7 = "prompt";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 4;
  *(_QWORD *)v11 = "promptResponse";
  *(_QWORD *)(v11 + 8) = 14;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 9;
  *(_QWORD *)v13 = "statements";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 10;
  *(_QWORD *)v15 = "overrideId";
  *((_QWORD *)v15 + 1) = 10;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 11;
  *(_QWORD *)v17 = "planSource";
  *((_QWORD *)v17 + 1) = 10;
  v17[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoPlan._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0D78, (uint64_t)qword_256EB0CA0, a1);
}

void TranscriptProtoPlan.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6D3EA4();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 3:
        case 4:
          sub_23F6D395C();
          break;
        case 9:
          sub_23F6D3598();
          sub_23F8BAE58();
          break;
        case 10:
          sub_23F6D37D4();
          break;
        case 11:
          sub_23F6D3598();
          sub_23F8BAED8();
          break;
        default:
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D3750();
}

uint64_t sub_23F8BAE58()
{
  type metadata accessor for TranscriptProtoProgramStatement(0);
  sub_23F6D3458(&qword_256EB1F30, type metadata accessor for TranscriptProtoProgramStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoProgramStatement);
  return sub_23FB2D8A4();
}

uint64_t sub_23F8BAED8()
{
  sub_23F922EF0();
  return sub_23FB2D7F0();
}

void TranscriptProtoPlan.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6D3EA4();
  sub_23F6D36FC();
  if (!v2 || (sub_23F6D376C(), !v1))
  {
    sub_23F6D36FC();
    if (!v3 || (sub_23F6D376C(), !v1))
    {
      if (!*(_QWORD *)(*(_QWORD *)(v0 + 32) + 16)
        || (type metadata accessor for TranscriptProtoProgramStatement(0),
            sub_23F6D3458(&qword_256EB1F30, type metadata accessor for TranscriptProtoProgramStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoProgramStatement), sub_23F6D36E4(), !v1))
      {
        sub_23F6D3664();
        sub_23F8BB04C(v4);
        if (!v1)
        {
          sub_23F6D3664();
          sub_23F8BB084(v5);
          type metadata accessor for TranscriptProtoPlan(0);
          sub_23F9233EC();
        }
      }
    }
  }
  sub_23F6D3750();
}

uint64_t sub_23F8BB04C(uint64_t result)
{
  if (*(_QWORD *)(result + 48))
    return sub_23FB2D9A0();
  return result;
}

uint64_t sub_23F8BB084(uint64_t result)
{
  if (*(_BYTE *)(result + 56) != 5)
  {
    sub_23F922EF0();
    return sub_23FB2D94C();
  }
  return result;
}

#error "23F8BB16C: call analysis failed (funcsize=75)"

uint64_t TranscriptProtoPlan.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoPlan, &qword_256EB1F38, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlan);
}

uint64_t sub_23F8BB24C()
{
  return 0x697263736E617254;
}

void sub_23F8BB278()
{
  TranscriptProtoPlan.decodeMessage<A>(decoder:)();
}

void sub_23F8BB28C()
{
  TranscriptProtoPlan.traverse<A>(visitor:)();
}

uint64_t sub_23F8BB2A0()
{
  sub_23F6D3458(&qword_256EB4088, type metadata accessor for TranscriptProtoPlan, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlan);
  return sub_23FB2D784();
}

uint64_t sub_23F8BB2F4()
{
  sub_23F6D3458(&qword_256EB2D28, type metadata accessor for TranscriptProtoPlan, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlan);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8BB338()
{
  sub_23F6D3458(&qword_256EB2D28, type metadata accessor for TranscriptProtoPlan, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlan);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoRecoverableError.protoMessageName.getter()
{
  return sub_23F6D3738(27);
}

uint64_t sub_23F8BB3A4()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoRecoverableError._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0D80, (uint64_t)&unk_256EB0CB8, a1);
}

void TranscriptProtoRecoverableError.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F8BBD08(a1, a2);
}

void sub_23F8BB3F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a2;
  v37 = a4;
  v36 = a3;
  v5 = type metadata accessor for TranscriptProtoPlanGenerationError(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v33 = (uint64_t)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v29 - v8;
  v10 = sub_23F6916B8(&qword_256EA8688);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v29 - v17;
  v19 = sub_23F6916B8(&qword_256EB45C0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v29 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v29 - v23, 1, 1, v5);
  v31 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA8688);
  v30 = v13;
  v32 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA8688);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoRecoverableErrorEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoRecoverableErrorEnum);
    sub_23F6B4F84((uint64_t)v24, &qword_256EB45C0);
    sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoPlanGenerationError);
    sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoPlanGenerationError);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
  }
  v25 = v34;
  sub_23F6D3458(&qword_256EB2D58, type metadata accessor for TranscriptProtoPlanGenerationError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationError);
  sub_23FB2D8B0();
  if (v25)
  {
    v26 = (uint64_t)v24;
LABEL_8:
    sub_23F6B4F84(v26, &qword_256EB45C0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB45C0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB45C0);
    v26 = (uint64_t)v22;
    goto LABEL_8;
  }
  v27 = v33;
  sub_23F7E76D0((uint64_t)v22, v33, type metadata accessor for TranscriptProtoPlanGenerationError);
  if (v32 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB45C0);
  v28 = v31;
  sub_23F6B4F84(v31, &qword_256EA8688);
  sub_23F7E76D0(v27, v28, type metadata accessor for TranscriptProtoPlanGenerationError);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v28, 0, 1, v30);
}

void TranscriptProtoRecoverableError.traverse<A>(visitor:)()
{
  sub_23F8CCE14();
}

void sub_23F8BB7C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA8688);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoPlanGenerationError(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA8688);
  v8 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA8688);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoPlanGenerationError);
    sub_23F6D3458(&qword_256EB2D58, type metadata accessor for TranscriptProtoPlanGenerationError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationError);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoPlanGenerationError);
  }
}

#error "23F8BBAC0: call analysis failed (funcsize=124)"

uint64_t TranscriptProtoRecoverableError.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoRecoverableError, &qword_256EB1F48, (uint64_t)&protocol conformance descriptor for TranscriptProtoRecoverableError);
}

unint64_t sub_23F8BBB64()
{
  static TranscriptProtoRecoverableError.protoMessageName.getter();
  return 0xD00000000000001BLL;
}

void sub_23F8BBB88(uint64_t a1, uint64_t a2)
{
  TranscriptProtoRecoverableError.decodeMessage<A>(decoder:)(a1, a2);
}

void sub_23F8BBB9C()
{
  TranscriptProtoRecoverableError.traverse<A>(visitor:)();
}

uint64_t sub_23F8BBBB0()
{
  sub_23F6D3458(&qword_256EB4080, type metadata accessor for TranscriptProtoRecoverableError, (uint64_t)&protocol conformance descriptor for TranscriptProtoRecoverableError);
  return sub_23FB2D784();
}

uint64_t sub_23F8BBC04()
{
  sub_23F6D3458(&qword_256EB2D40, type metadata accessor for TranscriptProtoRecoverableError, (uint64_t)&protocol conformance descriptor for TranscriptProtoRecoverableError);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8BBC48()
{
  sub_23F6D3458(&qword_256EB2D40, type metadata accessor for TranscriptProtoRecoverableError, (uint64_t)&protocol conformance descriptor for TranscriptProtoRecoverableError);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoPlanGenerationError.protoMessageName.getter()
{
  return sub_23F6D3738(30);
}

uint64_t sub_23F8BBCB4()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoPlanGenerationError._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0D88, (uint64_t)&unk_256EB0CD0, a1);
}

void TranscriptProtoPlanGenerationError.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F8BBD08(a1, a2);
}

void sub_23F8BBD08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F923474(a1, a2);
  while (1)
  {
    v3 = sub_23FB2D7B4();
    if (v2 || (v4 & 1) != 0)
      break;
    if (v3 == 1)
    {
      v5 = sub_23F6B6AB8();
      sub_23F924A8C(v5, v6);
    }
    sub_23F72E3F8();
  }
  sub_23F6D377C();
}

void sub_23F8BBD60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a2;
  v37 = a4;
  v36 = a3;
  v5 = type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v33 = (uint64_t)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v29 - v8;
  v10 = sub_23F6916B8(&qword_256EA8678);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v29 - v17;
  v19 = sub_23F6916B8(&qword_256EB45B8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v29 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v29 - v23, 1, 1, v5);
  v31 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA8678);
  v30 = v13;
  v32 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA8678);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPlanGenerationErrorEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPlanGenerationErrorEnum);
    sub_23F6B4F84((uint64_t)v24, &qword_256EB45B8);
    sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
    sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
  }
  v25 = v34;
  sub_23F6D3458(&qword_256EB2D70, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationModelOutputError);
  sub_23FB2D8B0();
  if (v25)
  {
    v26 = (uint64_t)v24;
LABEL_8:
    sub_23F6B4F84(v26, &qword_256EB45B8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB45B8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB45B8);
    v26 = (uint64_t)v22;
    goto LABEL_8;
  }
  v27 = v33;
  sub_23F7E76D0((uint64_t)v22, v33, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
  if (v32 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB45B8);
  v28 = v31;
  sub_23F6B4F84(v31, &qword_256EA8678);
  sub_23F7E76D0(v27, v28, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v28, 0, 1, v30);
}

void TranscriptProtoPlanGenerationError.traverse<A>(visitor:)()
{
  sub_23F8CCE14();
}

void sub_23F8BC12C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA8678);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA8678);
  v8 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA8678);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
    sub_23F6D3458(&qword_256EB2D70, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationModelOutputError);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
  }
}

#error "23F8BC428: call analysis failed (funcsize=124)"

uint64_t TranscriptProtoPlanGenerationError.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoPlanGenerationError, &qword_256EB1F58, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationError);
}

unint64_t sub_23F8BC4CC()
{
  static TranscriptProtoPlanGenerationError.protoMessageName.getter();
  return 0xD00000000000001ELL;
}

void sub_23F8BC4F0(uint64_t a1, uint64_t a2)
{
  TranscriptProtoPlanGenerationError.decodeMessage<A>(decoder:)(a1, a2);
}

void sub_23F8BC504()
{
  TranscriptProtoPlanGenerationError.traverse<A>(visitor:)();
}

uint64_t sub_23F8BC518()
{
  sub_23F6D3458(&qword_256EB4078, type metadata accessor for TranscriptProtoPlanGenerationError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationError);
  return sub_23FB2D784();
}

uint64_t sub_23F8BC56C()
{
  sub_23F6D3458(&qword_256EB2D58, type metadata accessor for TranscriptProtoPlanGenerationError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationError);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8BC5B0()
{
  sub_23F6D3458(&qword_256EB2D58, type metadata accessor for TranscriptProtoPlanGenerationError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationError);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoPlanGenerationModelOutputError.protoMessageName.getter()
{
  return sub_23F6D3738(41);
}

uint64_t sub_23F8BC61C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0CE8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0CE8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "rawModelOutput";
  *(_QWORD *)(v7 + 8) = 14;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "prompt";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "errorDescription";
  *((_QWORD *)v13 + 1) = 16;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoPlanGenerationModelOutputError._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0D90, (uint64_t)qword_256EB0CE8, a1);
}

void TranscriptProtoPlanGenerationModelOutputError.decodeMessage<A>(decoder:)()
{
  sub_23F924568();
}

void TranscriptProtoPlanGenerationModelOutputError.traverse<A>(visitor:)()
{
  sub_23F90C1CC();
}

void static TranscriptProtoPlanGenerationModelOutputError.== infix(_:_:)()
{
  sub_23F8BC804();
}

void sub_23F8BC804()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  BOOL v12;
  uint64_t v13;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F923590();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6D3834();
  v8 = v8 && v6 == v7;
  if (v8 || (sub_23F6B5280() & 1) != 0)
  {
    sub_23F923C24();
    v11 = v8 && v9 == v10;
    if (v11 || (sub_23F6B5280() & 1) != 0)
    {
      v12 = *(_QWORD *)(v3 + 32) == *(_QWORD *)(v2 + 32) && *(_QWORD *)(v3 + 40) == *(_QWORD *)(v2 + 40);
      if (v12 || (sub_23F6B5280() & 1) != 0)
      {
        v13 = sub_23F923C1C();
        sub_23F923308(v1, v3 + *(int *)(v13 + 28));
        sub_23F6D36AC(*(int *)(v13 + 28));
        sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        sub_23F6D3600();
        sub_23F6D3820(v0);
        sub_23F6D3820(v1);
      }
    }
  }
  sub_23F924700();
  sub_23F6B69E0();
}

uint64_t TranscriptProtoPlanGenerationModelOutputError.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError, &qword_256EB1F60, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationModelOutputError);
}

unint64_t sub_23F8BC918()
{
  static TranscriptProtoPlanGenerationModelOutputError.protoMessageName.getter();
  return 0xD000000000000029;
}

void sub_23F8BC93C()
{
  TranscriptProtoPlanGenerationModelOutputError.traverse<A>(visitor:)();
}

uint64_t sub_23F8BC950()
{
  sub_23F6D3458(&qword_256EB4070, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationModelOutputError);
  return sub_23FB2D784();
}

uint64_t sub_23F8BC9A4()
{
  sub_23F6D3458(&qword_256EB2D70, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationModelOutputError);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8BC9E8()
{
  sub_23F6D3458(&qword_256EB2D70, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationModelOutputError);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoQuery.protoMessageName.getter()
{
  return sub_23F6D3738(16);
}

uint64_t sub_23F8BCA54(uint64_t a1)
{
  return sub_23F9187D8(a1, qword_256EB0D00);
}

uint64_t static TranscriptProtoQuery._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0D98, (uint64_t)qword_256EB0D00, a1);
}

uint64_t TranscriptProtoQuery.decodeMessage<A>(decoder:)()
{
  return sub_23F918844();
}

uint64_t TranscriptProtoQuery.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoQuery, &qword_256EB1F68, (uint64_t)&protocol conformance descriptor for TranscriptProtoQuery);
}

unint64_t sub_23F8BCAB4()
{
  static TranscriptProtoQuery.protoMessageName.getter();
  return 0xD000000000000010;
}

uint64_t sub_23F8BCAD8()
{
  sub_23F6D3458(&qword_256EB4068, type metadata accessor for TranscriptProtoQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoQuery);
  return sub_23FB2D784();
}

uint64_t sub_23F8BCB2C()
{
  sub_23F6D3458(&qword_256EB2D88, type metadata accessor for TranscriptProtoQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoQuery);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8BCB70()
{
  sub_23F6D3458(&qword_256EB2D88, type metadata accessor for TranscriptProtoQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoQuery);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoQueryData.protoMessageName.getter()
{
  return sub_23F6D3738(20);
}

uint64_t sub_23F8BCBD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0D18);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0D18);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1C0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "identifierQuery";
  *(_QWORD *)(v7 + 8) = 15;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "stringQuery";
  *(_QWORD *)(v11 + 8) = 11;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "propertyQuery";
  *((_QWORD *)v13 + 1) = 13;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "systemQuery";
  *((_QWORD *)v15 + 1) = 11;
  v15[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoQueryData._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0DA0, (uint64_t)qword_256EB0D18, a1);
}

#error "23F8BCDD4: call analysis failed (funcsize=9)"

void sub_23F8BCDE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t DataEnum;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoIdentifierQuery(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA85B0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  v14 = MEMORY[0x24BDAC7A8](DataEnum);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB45A0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA85B0);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, DataEnum);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA85B0);
    v25 = DataEnum;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoQueryDataEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoQueryDataEnum);
    v25 = DataEnum;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoQueryDataEnum);
    }
    else
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB45A0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoIdentifierQuery);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoIdentifierQuery);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2E00, type metadata accessor for TranscriptProtoIdentifierQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoIdentifierQuery);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB45A0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB45A0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB45A0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoIdentifierQuery);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB45A0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA85B0);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoIdentifierQuery);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8BD1C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t DataEnum;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoStringQuery(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA85B0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  v14 = MEMORY[0x24BDAC7A8](DataEnum);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB45A8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA85B0);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, DataEnum);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA85B0);
    v25 = DataEnum;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoQueryDataEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoQueryDataEnum);
    v25 = DataEnum;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB45A8);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoStringQuery);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoStringQuery);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoQueryDataEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2DB8, type metadata accessor for TranscriptProtoStringQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoStringQuery);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB45A8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB45A8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB45A8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoStringQuery);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB45A8);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA85B0);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoStringQuery);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8BD5B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t DataEnum;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoPropertyQuery(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA85B0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  v14 = MEMORY[0x24BDAC7A8](DataEnum);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB45B0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA85B0);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, DataEnum);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA85B0);
    v25 = DataEnum;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoQueryDataEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoQueryDataEnum);
    v25 = DataEnum;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB45B0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoPropertyQuery);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoPropertyQuery);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoQueryDataEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2DD0, type metadata accessor for TranscriptProtoPropertyQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoPropertyQuery);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB45B0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB45B0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB45B0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoPropertyQuery);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB45B0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA85B0);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoPropertyQuery);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8BD9A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t DataEnum;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoStringQuery(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA85B0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  v14 = MEMORY[0x24BDAC7A8](DataEnum);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB45A8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA85B0);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, DataEnum);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA85B0);
    v25 = DataEnum;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoQueryDataEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoQueryDataEnum);
    v25 = DataEnum;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB45A8);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoStringQuery);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoStringQuery);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoQueryDataEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2DB8, type metadata accessor for TranscriptProtoStringQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoStringQuery);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB45A8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB45A8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB45A8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoStringQuery);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB45A8);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA85B0);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoStringQuery);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

#error "23F8BDDC0: call analysis failed (funcsize=31)"

void sub_23F8BDE50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t DataEnum;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA85B0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoIdentifierQuery(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA85B0);
  DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, DataEnum) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA85B0);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoIdentifierQuery);
      sub_23F6D3458(&qword_256EB2E00, type metadata accessor for TranscriptProtoIdentifierQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoIdentifierQuery);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoIdentifierQuery);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoQueryDataEnum);
  }
  __break(1u);
}

void sub_23F8BDFE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t DataEnum;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA85B0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStringQuery(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA85B0);
  DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, DataEnum) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA85B0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStringQuery);
      sub_23F6D3458(&qword_256EB2DB8, type metadata accessor for TranscriptProtoStringQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoStringQuery);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStringQuery);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoQueryDataEnum);
  }
  __break(1u);
}

void sub_23F8BE17C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t DataEnum;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA85B0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoPropertyQuery(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA85B0);
  DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, DataEnum) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA85B0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoPropertyQuery);
      sub_23F6D3458(&qword_256EB2DD0, type metadata accessor for TranscriptProtoPropertyQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoPropertyQuery);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoPropertyQuery);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoQueryDataEnum);
  }
  __break(1u);
}

void sub_23F8BE314(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t DataEnum;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA85B0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStringQuery(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA85B0);
  DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, DataEnum) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA85B0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStringQuery);
      sub_23F6D3458(&qword_256EB2DB8, type metadata accessor for TranscriptProtoStringQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoStringQuery);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStringQuery);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoQueryDataEnum);
  }
  __break(1u);
}

void static TranscriptProtoQueryData.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t Data;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F6B50E8();
  v5 = v4;
  v39 = sub_23F6B53A4();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v39);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = sub_23F6D38F8(v9, v10, v11, v12, v13, v14, v15, v16, v40);
  type metadata accessor for TranscriptProtoQueryDataEnum(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B59E0();
  v19 = sub_23F6916B8(&qword_256EB1F70);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6D3A70();
  v24 = MEMORY[0x24BDAC7A8](v23);
  sub_23F923124(v24, v25, v26, v27, v28, v29, v30, v31, v41);
  sub_23F923164(v5, v0);
  v32 = v1 + *(int *)(v19 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v32);
  v33 = sub_23F9230E4(v1);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v35 = sub_23F9230E4(v32);
    if (v36)
    {
      sub_23F6D378C(v35, &qword_256EA85B0);
LABEL_11:
      Data = type metadata accessor for TranscriptProtoQueryData(0);
      sub_23F6D3794(Data);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v33, v34, &qword_256EA85B0);
  sub_23F9230E4(v32);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v37, type metadata accessor for TranscriptProtoQueryDataEnum);
LABEL_9:
    sub_23F6D378C(v35, &qword_256EB1F70);
    goto LABEL_12;
  }
  sub_23F923270();
  sub_23F6D3D70();
  static TranscriptProtoQueryDataEnum.== infix(_:_:)();
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoQueryData.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoQueryData, &qword_256EB1F78, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryData);
}

unint64_t sub_23F8BE6E0()
{
  static TranscriptProtoQueryData.protoMessageName.getter();
  return 0xD000000000000014;
}

uint64_t sub_23F8BE704()
{
  return TranscriptProtoQueryData.decodeMessage<A>(decoder:)();
}

uint64_t sub_23F8BE718()
{
  return TranscriptProtoQueryData.traverse<A>(visitor:)();
}

uint64_t sub_23F8BE72C()
{
  sub_23F6D3458(&qword_256EB4060, type metadata accessor for TranscriptProtoQueryData, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryData);
  return sub_23FB2D784();
}

uint64_t sub_23F8BE780()
{
  sub_23F6D3458(&qword_256EB2DA0, type metadata accessor for TranscriptProtoQueryData, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryData);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8BE7C4()
{
  sub_23F6D3458(&qword_256EB2DA0, type metadata accessor for TranscriptProtoQueryData, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryData);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoStringQuery.protoMessageName.getter()
{
  return sub_23F6D3738(22);
}

uint64_t sub_23F8BE830()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoStringQuery._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0DA8, (uint64_t)&unk_256EB0D30, a1);
}

void TranscriptProtoStringQuery.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F9062A8(a1, a2);
}

void TranscriptProtoStringQuery.traverse<A>(visitor:)()
{
  sub_23F906318();
}

void static TranscriptProtoStringQuery.== infix(_:_:)()
{
  sub_23F8AB6CC();
}

uint64_t TranscriptProtoStringQuery.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoStringQuery, &qword_256EB1F80, (uint64_t)&protocol conformance descriptor for TranscriptProtoStringQuery);
}

unint64_t sub_23F8BE8CC()
{
  static TranscriptProtoStringQuery.protoMessageName.getter();
  return 0xD000000000000016;
}

void sub_23F8BE8F0()
{
  TranscriptProtoStringQuery.traverse<A>(visitor:)();
}

uint64_t sub_23F8BE904()
{
  sub_23F6D3458(&qword_256EB4058, type metadata accessor for TranscriptProtoStringQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoStringQuery);
  return sub_23FB2D784();
}

uint64_t sub_23F8BE958()
{
  sub_23F6D3458(&qword_256EB2DB8, type metadata accessor for TranscriptProtoStringQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoStringQuery);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8BE99C()
{
  sub_23F6D3458(&qword_256EB2DB8, type metadata accessor for TranscriptProtoStringQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoStringQuery);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoPropertyQuery.protoMessageName.getter()
{
  return sub_23F6D3738(24);
}

uint64_t sub_23F8BEA08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0D48);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0D48);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "compare";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "and";
  *((_QWORD *)v11 + 1) = 3;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "or";
  *((_QWORD *)v13 + 1) = 2;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoPropertyQuery._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0DB0, (uint64_t)qword_256EB0D48, a1);
}

void TranscriptProtoPropertyQuery.decodeMessage<A>(decoder:)()
{
  sub_23F8BEBD0();
}

void sub_23F8BEBD0()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  void (*v3)(uint64_t);
  void (*v4)(uint64_t);
  void (*v5)(uint64_t);
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_23F6D3EA4();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  sub_23F923474(v7, v8);
  while (1)
  {
    v9 = sub_23FB2D7B4();
    if (v0 || (v10 & 1) != 0)
      break;
    switch(v9)
    {
      case 3:
        v12 = sub_23F923D14();
        v2(v12);
        break;
      case 2:
        v13 = sub_23F923D14();
        v4(v13);
        break;
      case 1:
        v11 = sub_23F923D14();
        v6(v11);
        break;
    }
    sub_23F7A1280();
  }
  sub_23F6D3750();
}

void sub_23F8BEC60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t Predicate;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Enum;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
  v6 = MEMORY[0x24BDAC7A8](Predicate);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA85A0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
  v14 = MEMORY[0x24BDAC7A8](Enum);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4590);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, Predicate);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA85A0);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, Enum);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA85A0);
    v25 = Enum;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPropertyQueryEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPropertyQueryEnum);
    v25 = Enum;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPropertyQueryEnum);
    }
    else
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4590);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoQueryPredicate);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoQueryPredicate);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, Predicate);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB1F98, type metadata accessor for TranscriptProtoQueryPredicate, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicate);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4590);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4590);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, Predicate) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4590);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoQueryPredicate);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4590);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA85A0);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoQueryPredicate);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8BF048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t PredicateList;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Enum;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  PredicateList = type metadata accessor for TranscriptProtoQueryPredicateList(0);
  v6 = MEMORY[0x24BDAC7A8](PredicateList);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA85A0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
  v14 = MEMORY[0x24BDAC7A8](Enum);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4598);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, PredicateList);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA85A0);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, Enum);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA85A0);
    v25 = Enum;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPropertyQueryEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPropertyQueryEnum);
    v25 = Enum;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4598);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoQueryPredicateList);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoQueryPredicateList);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, PredicateList);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPropertyQueryEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2DE8, type metadata accessor for TranscriptProtoQueryPredicateList, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicateList);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4598);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4598);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, PredicateList) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4598);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoQueryPredicateList);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4598);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA85A0);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoQueryPredicateList);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8BF434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t PredicateList;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Enum;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  PredicateList = type metadata accessor for TranscriptProtoQueryPredicateList(0);
  v6 = MEMORY[0x24BDAC7A8](PredicateList);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA85A0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
  v14 = MEMORY[0x24BDAC7A8](Enum);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4598);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, PredicateList);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA85A0);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, Enum);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA85A0);
    v25 = Enum;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoPropertyQueryEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoPropertyQueryEnum);
    v25 = Enum;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4598);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoQueryPredicateList);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoQueryPredicateList);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, PredicateList);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoPropertyQueryEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2DE8, type metadata accessor for TranscriptProtoQueryPredicateList, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicateList);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4598);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4598);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, PredicateList) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4598);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoQueryPredicateList);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4598);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA85A0);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoQueryPredicateList);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

#error "23F8BF854: call analysis failed (funcsize=40)"

void sub_23F8BF8C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t Predicate;
  uint64_t v6;
  char *v7;
  uint64_t Enum;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA85A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
  MEMORY[0x24BDAC7A8](Predicate);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA85A0);
  Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, Enum) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA85A0);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoQueryPredicate);
      sub_23F6D3458(&qword_256EB1F98, type metadata accessor for TranscriptProtoQueryPredicate, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicate);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoQueryPredicate);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPropertyQueryEnum);
  }
  __break(1u);
}

void sub_23F8BFA5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t PredicateList;
  uint64_t v6;
  char *v7;
  uint64_t Enum;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA85A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  PredicateList = type metadata accessor for TranscriptProtoQueryPredicateList(0);
  MEMORY[0x24BDAC7A8](PredicateList);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA85A0);
  Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, Enum) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA85A0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoQueryPredicateList);
      sub_23F6D3458(&qword_256EB2DE8, type metadata accessor for TranscriptProtoQueryPredicateList, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicateList);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoQueryPredicateList);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPropertyQueryEnum);
  }
  __break(1u);
}

void sub_23F8BFBF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t PredicateList;
  uint64_t v6;
  char *v7;
  uint64_t Enum;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA85A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  PredicateList = type metadata accessor for TranscriptProtoQueryPredicateList(0);
  MEMORY[0x24BDAC7A8](PredicateList);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA85A0);
  Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, Enum) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA85A0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoQueryPredicateList);
      sub_23F6D3458(&qword_256EB2DE8, type metadata accessor for TranscriptProtoQueryPredicateList, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicateList);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoQueryPredicateList);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoPropertyQueryEnum);
  }
  __break(1u);
}

void static TranscriptProtoPropertyQuery.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F6B50E8();
  v5 = v4;
  v39 = sub_23F6B53A4();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v39);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = sub_23F6D38F8(v9, v10, v11, v12, v13, v14, v15, v16, v40);
  type metadata accessor for TranscriptProtoPropertyQueryEnum(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B59E0();
  v19 = sub_23F6916B8(&qword_256EB1F88);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6D3A70();
  v24 = MEMORY[0x24BDAC7A8](v23);
  sub_23F923124(v24, v25, v26, v27, v28, v29, v30, v31, v41);
  sub_23F923164(v5, v0);
  v32 = v1 + *(int *)(v19 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v32);
  v33 = sub_23F9230E4(v1);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v35 = sub_23F9230E4(v32);
    if (v36)
    {
      sub_23F6D378C(v35, &qword_256EA85A0);
LABEL_11:
      v38 = type metadata accessor for TranscriptProtoPropertyQuery(0);
      sub_23F6D3794(v38);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v33, v34, &qword_256EA85A0);
  sub_23F9230E4(v32);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v37, type metadata accessor for TranscriptProtoPropertyQueryEnum);
LABEL_9:
    sub_23F6D378C(v35, &qword_256EB1F88);
    goto LABEL_12;
  }
  sub_23F923270();
  sub_23F6D3D70();
  static TranscriptProtoPropertyQueryEnum.== infix(_:_:)();
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoPropertyQuery.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoPropertyQuery, &qword_256EB1F90, (uint64_t)&protocol conformance descriptor for TranscriptProtoPropertyQuery);
}

unint64_t sub_23F8BFFC0()
{
  static TranscriptProtoPropertyQuery.protoMessageName.getter();
  return 0xD000000000000018;
}

void sub_23F8BFFE4()
{
  TranscriptProtoPropertyQuery.decodeMessage<A>(decoder:)();
}

uint64_t sub_23F8BFFF8()
{
  return TranscriptProtoPropertyQuery.traverse<A>(visitor:)();
}

uint64_t sub_23F8C000C()
{
  sub_23F6D3458(&qword_256EB4050, type metadata accessor for TranscriptProtoPropertyQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoPropertyQuery);
  return sub_23FB2D784();
}

uint64_t sub_23F8C0060()
{
  sub_23F6D3458(&qword_256EB2DD0, type metadata accessor for TranscriptProtoPropertyQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoPropertyQuery);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8C00A4()
{
  sub_23F6D3458(&qword_256EB2DD0, type metadata accessor for TranscriptProtoPropertyQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoPropertyQuery);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoQueryPredicateList.protoMessageName.getter()
{
  return sub_23F6D3738(29);
}

uint64_t sub_23F8C0110()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoQueryPredicateList._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0DB8, (uint64_t)&unk_256EB0D60, a1);
}

void TranscriptProtoQueryPredicateList.decodeMessage<A>(decoder:)()
{
  sub_23F913C48();
}

void TranscriptProtoQueryPredicateList.traverse<A>(visitor:)()
{
  sub_23F8B4D24();
}

void static TranscriptProtoQueryPredicateList.== infix(_:_:)()
{
  sub_23F89AB14();
}

uint64_t TranscriptProtoQueryPredicateList.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoQueryPredicateList, &qword_256EB1FA0, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicateList);
}

unint64_t sub_23F8C01E4()
{
  static TranscriptProtoQueryPredicateList.protoMessageName.getter();
  return 0xD00000000000001DLL;
}

void sub_23F8C0208()
{
  TranscriptProtoQueryPredicateList.decodeMessage<A>(decoder:)();
}

void sub_23F8C021C()
{
  TranscriptProtoQueryPredicateList.traverse<A>(visitor:)();
}

uint64_t sub_23F8C0230()
{
  sub_23F6D3458(&qword_256EB4048, type metadata accessor for TranscriptProtoQueryPredicateList, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicateList);
  return sub_23FB2D784();
}

uint64_t sub_23F8C0284()
{
  sub_23F6D3458(&qword_256EB2DE8, type metadata accessor for TranscriptProtoQueryPredicateList, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicateList);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8C02C8()
{
  sub_23F6D3458(&qword_256EB2DE8, type metadata accessor for TranscriptProtoQueryPredicateList, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicateList);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoIdentifierQuery.protoMessageName.getter()
{
  return sub_23F6D3738(26);
}

uint64_t sub_23F8C0334()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoIdentifierQuery._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0DC0, (uint64_t)&unk_256EB0D78, a1);
}

void TranscriptProtoIdentifierQuery.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F9062A8(a1, a2);
}

void TranscriptProtoIdentifierQuery.traverse<A>(visitor:)()
{
  sub_23F913080();
}

void static TranscriptProtoIdentifierQuery.== infix(_:_:)()
{
  sub_23F89AB14();
}

uint64_t TranscriptProtoIdentifierQuery.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoIdentifierQuery, &qword_256EB1FA8, (uint64_t)&protocol conformance descriptor for TranscriptProtoIdentifierQuery);
}

unint64_t sub_23F8C03D8()
{
  static TranscriptProtoIdentifierQuery.protoMessageName.getter();
  return 0xD00000000000001ALL;
}

void sub_23F8C03FC(uint64_t a1, uint64_t a2)
{
  TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant.decodeMessage<A>(decoder:)(a1, a2);
}

void sub_23F8C0410()
{
  TranscriptProtoIdentifierQuery.traverse<A>(visitor:)();
}

uint64_t sub_23F8C0424()
{
  sub_23F6D3458(&qword_256EB4040, type metadata accessor for TranscriptProtoIdentifierQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoIdentifierQuery);
  return sub_23FB2D784();
}

uint64_t sub_23F8C0478()
{
  sub_23F6D3458(&qword_256EB2E00, type metadata accessor for TranscriptProtoIdentifierQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoIdentifierQuery);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8C04BC()
{
  sub_23F6D3458(&qword_256EB2E00, type metadata accessor for TranscriptProtoIdentifierQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoIdentifierQuery);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoQueryPredicate.protoMessageName.getter()
{
  return sub_23F6D3738(25);
}

uint64_t sub_23F8C0528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0D90);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0D90);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "parameterId";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "op";
  *((_QWORD *)v11 + 1) = 2;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "value";
  *((_QWORD *)v13 + 1) = 5;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoQueryPredicate._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0DC8, (uint64_t)qword_256EB0D90, a1);
}

void TranscriptProtoQueryPredicate.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 3:
          sub_23F6D3598();
          sub_23F9235BC();
          break;
        case 2:
          sub_23F90F2F4();
          break;
        case 1:
          sub_23F923334();
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoQueryPredicate.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F924514();
  sub_23F6D36FC();
  if (!v2 || (sub_23F923258(), !v1))
  {
    if (!*(_BYTE *)(v0 + 16) || (sub_23F918A28(), sub_23F923630(), !v1))
    {
      sub_23F6D3D7C();
      sub_23F8B4180();
      if (!v1)
      {
        type metadata accessor for TranscriptProtoQueryPredicate(0);
        sub_23F9231A8();
      }
    }
  }
  sub_23F6D3C00();
}

void static TranscriptProtoQueryPredicate.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t Predicate;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE v38[4];
  int v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  v8 = sub_23F6B53A4();
  v44 = *(_QWORD *)(v8 - 8);
  v45 = v8;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v43 = &v38[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v11);
  v42 = &v38[-v12];
  v13 = sub_23F6D3D08();
  v46 = *(_QWORD *)(v13 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B59E0();
  v15 = sub_23F6916B8(&qword_256EA2618);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B53AC();
  sub_23F6916B8(&qword_256EA2610);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6D3A70();
  MEMORY[0x24BDAC7A8](v19);
  v21 = &v38[-v20];
  sub_23F924268();
  v24 = v24 && v22 == v23;
  if (!v24 && (sub_23F6B5280() & 1) == 0 || *(unsigned __int8 *)(v7 + 16) != *(unsigned __int8 *)(v5 + 16))
    goto LABEL_18;
  v40 = v2;
  Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
  v26 = sub_23F924A2C(Predicate);
  sub_23F923164(v26, (uint64_t)v21);
  v41 = Predicate;
  sub_23F923164(v5 + *(int *)(Predicate + 24), v0);
  v27 = v1 + *(int *)(v15 + 48);
  sub_23F923164((uint64_t)v21, v1);
  v28 = sub_23F78F478();
  sub_23F923164(v28, v29);
  sub_23F6B5164(v1, 1, v13);
  if (v24)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4((uint64_t)v21);
    v31 = sub_23F6B5164(v27, 1, v13);
    if (v24)
    {
      sub_23F6B6034(v31, &qword_256EA2610);
LABEL_17:
      v35 = v41;
      v36 = v7 + *(int *)(v41 + 28);
      v37 = v42;
      sub_23F6D3818((uint64_t)v42, v36);
      sub_23F6D3818((uint64_t)v43, v5 + *(int *)(v35 + 28));
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F923230();
      sub_23F9232DC();
      sub_23F6D3874((uint64_t)v37);
      goto LABEL_18;
    }
    goto LABEL_15;
  }
  sub_23F923370(v1, v30, &qword_256EA2610);
  sub_23F6B5164(v27, 1, v13);
  if (v32)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4((uint64_t)v21);
    v31 = sub_23F92377C();
LABEL_15:
    sub_23F6B6034(v31, &qword_256EA2618);
    goto LABEL_18;
  }
  v33 = sub_23F924A18();
  sub_23F6D3ECC(v33, v27, v34);
  sub_23F6D3458(&qword_256EA2620, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95B0], MEMORY[0x24BEB95C8]);
  v39 = sub_23F6B5624();
  sub_23F6D39FC(Predicate);
  sub_23F6B6EF8(v0);
  sub_23F6B6EF8((uint64_t)v21);
  sub_23F6D39FC(v3);
  sub_23F6B6EF8(v1);
  if ((v39 & 1) != 0)
    goto LABEL_17;
LABEL_18:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoQueryPredicate.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoQueryPredicate, &qword_256EB1FB8, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicate);
}

unint64_t sub_23F8C0B54()
{
  static TranscriptProtoQueryPredicate.protoMessageName.getter();
  return 0xD000000000000019;
}

void sub_23F8C0B78()
{
  TranscriptProtoQueryPredicate.decodeMessage<A>(decoder:)();
}

void sub_23F8C0B8C()
{
  TranscriptProtoQueryPredicate.traverse<A>(visitor:)();
}

uint64_t sub_23F8C0BA0()
{
  sub_23F6D3458(&qword_256EB4038, type metadata accessor for TranscriptProtoQueryPredicate, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicate);
  return sub_23FB2D784();
}

uint64_t sub_23F8C0BF4()
{
  sub_23F6D3458(&qword_256EB1F98, type metadata accessor for TranscriptProtoQueryPredicate, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicate);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8C0C38()
{
  sub_23F6D3458(&qword_256EB1F98, type metadata accessor for TranscriptProtoQueryPredicate, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicate);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoQueryResults.protoMessageName.getter()
{
  return sub_23F6D3738(23);
}

uint64_t sub_23F8C0CA4()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoQueryResults._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0DD0, (uint64_t)&unk_256EB0DA8, a1);
}

void TranscriptProtoQueryResults.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6D3EA4();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 3)
        sub_23F923970();
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D3750();
}

void TranscriptProtoQueryResults.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F6D3DC4();
  sub_23F9233B4();
  if (!v1
    || (type metadata accessor for TranscriptProtoCandidate(0),
        sub_23F6D3458(&qword_256EB1FC0, type metadata accessor for TranscriptProtoCandidate, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidate), sub_23F923350(), !v0))
  {
    type metadata accessor for TranscriptProtoQueryResults(0);
    sub_23F9231A8();
  }
  sub_23F6D3710();
}

void static TranscriptProtoQueryResults.== infix(_:_:)()
{
  sub_23F89AB14();
}

uint64_t TranscriptProtoQueryResults.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoQueryResults, &qword_256EB1FC8, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryResults);
}

unint64_t sub_23F8C0DEC()
{
  static TranscriptProtoQueryResults.protoMessageName.getter();
  return 0xD000000000000017;
}

void sub_23F8C0E10()
{
  TranscriptProtoQueryResults.decodeMessage<A>(decoder:)();
}

void sub_23F8C0E24()
{
  TranscriptProtoQueryResults.traverse<A>(visitor:)();
}

uint64_t sub_23F8C0E38()
{
  sub_23F6D3458(&qword_256EB4030, type metadata accessor for TranscriptProtoQueryResults, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryResults);
  return sub_23FB2D784();
}

uint64_t sub_23F8C0E8C()
{
  sub_23F6D3458(&qword_256EB1FF8, type metadata accessor for TranscriptProtoQueryResults, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryResults);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8C0ED0()
{
  sub_23F6D3458(&qword_256EB1FF8, type metadata accessor for TranscriptProtoQueryResults, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryResults);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoQueryStep.protoMessageName.getter()
{
  return sub_23F6D3738(20);
}

uint64_t sub_23F8C0F3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0DC0);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0DC0);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 2;
  *(_QWORD *)v7 = "statementId";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 3;
  *(_QWORD *)v11 = "queries";
  *((_QWORD *)v11 + 1) = 7;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoQueryStep._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0DD8, (uint64_t)qword_256EB0DC0, a1);
}

void TranscriptProtoQueryStep.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 3)
      {
        sub_23F6D3598();
        sub_23F924200();
      }
      else if (v1 == 2)
      {
        sub_23F923814();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoQueryStep.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6D3DC4();
  v2 = sub_23F924010();
  sub_23F8C11D8(v2);
  if (!v0)
  {
    if (*(_QWORD *)(*(_QWORD *)v1 + 16))
    {
      type metadata accessor for TranscriptProtoParameterQuery(0);
      sub_23F6D3458(&qword_256EB1FD0, type metadata accessor for TranscriptProtoParameterQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterQuery);
      sub_23F924360();
    }
    type metadata accessor for TranscriptProtoQueryStep(0);
    sub_23F923C10();
  }
  sub_23F6D3710();
}

void sub_23F8C11D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Step;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  Step = type metadata accessor for TranscriptProtoQueryStep(0);
  sub_23F7A1EDC(a1 + *(int *)(Step + 20), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void static TranscriptProtoQueryStep.== infix(_:_:)()
{
  sub_23F8F3650();
}

uint64_t TranscriptProtoQueryStep.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoQueryStep, &qword_256EB1FD8, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStep);
}

unint64_t sub_23F8C137C()
{
  static TranscriptProtoQueryStep.protoMessageName.getter();
  return 0xD000000000000014;
}

void sub_23F8C13A0()
{
  TranscriptProtoQueryStep.decodeMessage<A>(decoder:)();
}

void sub_23F8C13B4()
{
  TranscriptProtoQueryStep.traverse<A>(visitor:)();
}

uint64_t sub_23F8C13C8()
{
  sub_23F6D3458(&qword_256EB4028, type metadata accessor for TranscriptProtoQueryStep, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStep);
  return sub_23FB2D784();
}

uint64_t sub_23F8C141C()
{
  sub_23F6D3458(&qword_256EB2E38, type metadata accessor for TranscriptProtoQueryStep, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStep);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8C1460()
{
  sub_23F6D3458(&qword_256EB2E38, type metadata accessor for TranscriptProtoQueryStep, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStep);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoParameterQuery.protoMessageName.getter()
{
  return sub_23F6D3738(25);
}

uint64_t sub_23F8C14CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0DD8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0DD8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1C0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "context";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "data";
  *(_QWORD *)(v11 + 8) = 4;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "dependencies";
  *((_QWORD *)v13 + 1) = 12;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "deviceId";
  *((_QWORD *)v15 + 1) = 8;
  v15[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoParameterQuery._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0DE0, (uint64_t)qword_256EB0DD8, a1);
}

void TranscriptProtoParameterQuery.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;

  sub_23F6B5220();
  sub_23F6D356C();
  if (!v12)
  {
    while ((v13 & 1) == 0)
    {
      sub_23F6D3E98();
      if (!(!v24 & v23))
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_23F8C1708 + 4 * byte_23FB74CEA[v22]))(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10, a11, a12);
        return;
      }
      sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

uint64_t sub_23F8C1774()
{
  uint64_t (*v0)(uint64_t);

  sub_23FB2D6E8();
  sub_23FB2EB1C();
  v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BEB95B0];
  sub_23F6D3458(&qword_256EA3248, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95B0], MEMORY[0x24BEB95A0]);
  sub_23F6D3458(&qword_256EB1DA8, v0, MEMORY[0x24BEB95C0]);
  return sub_23FB2D79C();
}

void TranscriptProtoParameterQuery.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F923528();
  v3 = v2;
  v5 = v4;
  v6 = sub_23F923DFC();
  sub_23F8C1954(v6);
  if (!v1)
  {
    sub_23F6D3664();
    sub_23F8C1AC4(v7);
    sub_23F92468C();
    if (v9)
    {
      sub_23FB2D6E8();
      sub_23F6B632C();
      sub_23F923750(&qword_256EA3248, v10, MEMORY[0x24BEB95A0]);
      sub_23F923750(&qword_256EB1DA8, v11, MEMORY[0x24BEB95C0]);
      sub_23F923A9C();
    }
    sub_23F924184(v0, v5, v3, v8, type metadata accessor for TranscriptProtoParameterQuery);
    type metadata accessor for TranscriptProtoParameterQuery(0);
    sub_23F6D37BC();
  }
  sub_23F6D3B40();
}

void sub_23F8C1954(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA85D0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoActionParameterContext(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoParameterQuery(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA85D0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA85D0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoActionParameterContext);
    sub_23F6D3458(&qword_256EB2A88, type metadata accessor for TranscriptProtoActionParameterContext, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterContext);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoActionParameterContext);
  }
}

void sub_23F8C1AC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t Data;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA85C0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  Data = type metadata accessor for TranscriptProtoQueryData(0);
  MEMORY[0x24BDAC7A8](Data);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoParameterQuery(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_256EA85C0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, Data) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA85C0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoQueryData);
    sub_23F6D3458(&qword_256EB2DA0, type metadata accessor for TranscriptProtoQueryData, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryData);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoQueryData);
  }
}

void static TranscriptProtoParameterQuery.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t Data;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  sub_23F6B50E8();
  v6 = v5;
  v8 = v7;
  v9 = sub_23F6B53A4();
  v74 = *(_QWORD *)(v9 - 8);
  v75 = v9;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v73 = (uint64_t)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v12);
  v72 = (uint64_t)&v71 - v13;
  v14 = sub_23F6D398C();
  Data = type metadata accessor for TranscriptProtoQueryData(v14);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B5598(v16, v71);
  v78 = sub_23F6916B8(&qword_256EB1FE0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B5BD8(v18, v71);
  sub_23F6916B8(&qword_256EA85C0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v19);
  v77 = (char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v21);
  v79 = (uint64_t)&v71 - v22;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v23);
  v80 = (uint64_t)&v71 - v24;
  v25 = sub_23F6D398C();
  v26 = type metadata accessor for TranscriptProtoActionParameterContext(v25);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F6B59E0();
  v28 = sub_23F6916B8(&qword_256EB1FE8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F6B52B0();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F6D3F60();
  MEMORY[0x24BDAC7A8](v32);
  v33 = sub_23F923B4C();
  v34 = type metadata accessor for TranscriptProtoParameterQuery(v33);
  v35 = *(int *)(v34 + 20);
  v83 = v8;
  v36 = v8 + v35;
  v37 = (int *)v34;
  sub_23F923164(v36, v2);
  v38 = v37[5];
  v84 = v6;
  sub_23F923164(v6 + v38, v0);
  v39 = v1 + *(int *)(v28 + 48);
  sub_23F923164(v2, v1);
  sub_23F923164(v0, v39);
  sub_23F6B5164(v1, 1, v26);
  if (v42)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v2);
    v41 = sub_23F6B5164(v39, 1, v26);
    if (v42)
    {
      sub_23F923588(v41, &qword_256EA85D0);
      goto LABEL_11;
    }
LABEL_9:
    v44 = &qword_256EB1FE8;
    v45 = v1;
LABEL_20:
    sub_23F6B4F84(v45, v44);
    goto LABEL_21;
  }
  sub_23F923370(v1, v40, &qword_256EA85D0);
  sub_23F6B5164(v39, 1, v26);
  if (v42)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v2);
    sub_23F6D3C24(v43, type metadata accessor for TranscriptProtoActionParameterContext);
    goto LABEL_9;
  }
  sub_23F923444(v39, v3);
  sub_23F6D3D70();
  static TranscriptProtoActionParameterContext.== infix(_:_:)();
  sub_23F923248();
  sub_23F6D3930(v0);
  sub_23F6D3930(v2);
  sub_23F6D3928(v4);
  sub_23F6D3930(v1);
  if ((v26 & 1) == 0)
    goto LABEL_21;
LABEL_11:
  v46 = v83;
  v47 = v80;
  sub_23F923268(v83 + v37[6], v80);
  v48 = v84;
  v49 = v79;
  sub_23F923268(v84 + v37[6], v79);
  v50 = v82;
  v51 = v82 + *(int *)(v78 + 48);
  sub_23F923268(v47, v82);
  sub_23F923268(v49, v51);
  v52 = sub_23F6D3CB4();
  v53 = Data;
  sub_23F6B5164(v52, v54, Data);
  if (!v42)
  {
    v57 = (uint64_t)v77;
    sub_23F923A50(v50, v55, &qword_256EA85C0);
    sub_23F6B5164(v51, 1, v53);
    if (!v58)
    {
      v60 = v76;
      sub_23F7F6534(v51, v76);
      sub_23F72E2E0();
      static TranscriptProtoQueryData.== infix(_:_:)();
      v62 = v61;
      sub_23F6D38A0(v60);
      sub_23F6D3C1C(v49);
      sub_23F6D3C1C(v47);
      sub_23F6D38A0(v57);
      sub_23F6D3C1C(v50);
      if ((v62 & 1) == 0)
        goto LABEL_21;
      goto LABEL_23;
    }
    sub_23F6B64F4(v49);
    sub_23F6B64F4(v47);
    sub_23F6D3D20(v59, type metadata accessor for TranscriptProtoQueryData);
    goto LABEL_19;
  }
  sub_23F6D3748(v49);
  sub_23F6D3748(v47);
  v56 = sub_23F6B5164(v51, 1, v53);
  if (!v42)
  {
LABEL_19:
    v44 = &qword_256EB1FE0;
    v45 = v50;
    goto LABEL_20;
  }
  sub_23F6D378C(v56, &qword_256EA85C0);
LABEL_23:
  sub_23F69C368();
  if ((v63 & 1) != 0)
  {
    sub_23F924248();
    if (v66)
    {
      if (v64)
      {
        sub_23F6D3998(v65);
        v69 = v42 && v67 == v68;
        if (v69 || (sub_23F6B5280() & 1) != 0)
          goto LABEL_33;
      }
    }
    else if (!v64)
    {
LABEL_33:
      v70 = v72;
      sub_23F6D3818(v72, v46 + v37[8]);
      sub_23F6D3818(v73, v48 + v37[8]);
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F923230();
      sub_23F9232DC();
      sub_23F6D3874(v70);
    }
  }
LABEL_21:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoParameterQuery.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoParameterQuery, &qword_256EB1FF0, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterQuery);
}

unint64_t sub_23F8C2138()
{
  static TranscriptProtoParameterQuery.protoMessageName.getter();
  return 0xD000000000000019;
}

#error "23F8C2164: call analysis failed (funcsize=5)"

void sub_23F8C2170()
{
  TranscriptProtoParameterQuery.traverse<A>(visitor:)();
}

uint64_t sub_23F8C2184()
{
  sub_23F6D3458(&qword_256EB4020, type metadata accessor for TranscriptProtoParameterQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterQuery);
  return sub_23FB2D784();
}

uint64_t sub_23F8C21D8()
{
  sub_23F6D3458(&qword_256EB1FD0, type metadata accessor for TranscriptProtoParameterQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterQuery);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8C221C()
{
  sub_23F6D3458(&qword_256EB1FD0, type metadata accessor for TranscriptProtoParameterQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterQuery);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoQueryStepResults.protoMessageName.getter()
{
  return sub_23F6D3738(27);
}

uint64_t sub_23F8C2288()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0DF0);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0DF0);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "queryResults";
  *(_QWORD *)(v7 + 8) = 12;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "originStatementId";
  *((_QWORD *)v11 + 1) = 17;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "rawQueryEventId";
  *((_QWORD *)v13 + 1) = 15;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoQueryStepResults._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0DE8, (uint64_t)qword_256EB0DF0, a1);
}

void TranscriptProtoQueryStepResults.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 3:
          sub_23F6D395C();
          break;
        case 2:
          sub_23F6D3598();
          sub_23F923FE0();
          break;
        case 1:
          sub_23F9238F4();
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoQueryStepResults.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F6D3DC4();
  sub_23F9233B4();
  if (!v1
    || (type metadata accessor for TranscriptProtoQueryResults(0),
        sub_23F6D3458(&qword_256EB1FF8, type metadata accessor for TranscriptProtoQueryResults, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryResults), sub_23F923350(), !v0))
  {
    sub_23F9231FC();
    sub_23F8C2598(v2);
    if (!v0)
    {
      sub_23F6D36FC();
      if (v3)
        sub_23F923258();
      type metadata accessor for TranscriptProtoQueryStepResults(0);
      sub_23F9231A8();
    }
  }
  sub_23F6D3710();
}

void sub_23F8C2598(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t StepResults;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  StepResults = type metadata accessor for TranscriptProtoQueryStepResults(0);
  sub_23F7A1EDC(a1 + *(int *)(StepResults + 24), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void static TranscriptProtoQueryStepResults.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t StepResults;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F6B50E8();
  v6 = v5;
  v8 = v7;
  v9 = sub_23F6B53A4();
  v38 = *(_QWORD *)(v9 - 8);
  v39 = v9;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v37 = (uint64_t)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v34 - v13;
  v41 = sub_23F9234D4();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B573C();
  v40 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B6618();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6D3BD8();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F923EC8();
  sub_23F69704C();
  if ((v20 & 1) == 0)
    goto LABEL_11;
  v35 = v14;
  v36 = v2;
  v34 = v4;
  StepResults = type metadata accessor for TranscriptProtoQueryStepResults(0);
  sub_23F923164(v8 + *(int *)(StepResults + 24), v0);
  sub_23F923164(v6 + *(int *)(StepResults + 24), v1);
  v22 = v3 + *(int *)(v40 + 48);
  sub_23F923164(v0, v3);
  sub_23F923164(v1, v22);
  v23 = sub_23F6D3CB4();
  v24 = v41;
  sub_23F6B5164(v23, v25, v41);
  v27 = v6;
  if (!v30)
  {
    v29 = v36;
    sub_23F923DD0(v3, v26, &qword_256EA25E0);
    sub_23F6B5164(v22, 1, v24);
    if (!v30)
    {
      sub_23F923C04(v22);
      sub_23F923B28();
      sub_23F923838();
      sub_23F6D387C(v1);
      sub_23F6D387C(v0);
      sub_23F77E330(v29);
      sub_23F6D387C(v3);
      if ((v0 & 1) == 0)
        goto LABEL_11;
      goto LABEL_13;
    }
    sub_23F6D3C1C(v1);
    sub_23F6D3C1C(v0);
    sub_23F714040(v31, type metadata accessor for TranscriptProtoStatementID);
LABEL_10:
    sub_23F6D378C(v28, &qword_256EA25E8);
    goto LABEL_11;
  }
  sub_23F6D38A8(v1);
  sub_23F6D38A8(v0);
  v28 = sub_23F6B5164(v22, 1, v24);
  if (!v30)
    goto LABEL_10;
  sub_23F6D378C(v28, &qword_256EA25E0);
LABEL_13:
  v32 = *(_QWORD *)(v8 + 8) == *(_QWORD *)(v27 + 8) && *(_QWORD *)(v8 + 16) == *(_QWORD *)(v27 + 16);
  if (v32 || (sub_23F6B5280() & 1) != 0)
  {
    v33 = (uint64_t)v35;
    sub_23F6D3818((uint64_t)v35, v8 + *(int *)(StepResults + 28));
    sub_23F6D3818(v37, v27 + *(int *)(StepResults + 28));
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F923230();
    sub_23F9232DC();
    sub_23F6D3874(v33);
  }
LABEL_11:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoQueryStepResults.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoQueryStepResults, &qword_256EB2000, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStepResults);
}

unint64_t sub_23F8C2A1C()
{
  static TranscriptProtoQueryStepResults.protoMessageName.getter();
  return 0xD00000000000001BLL;
}

void sub_23F8C2A40()
{
  TranscriptProtoQueryStepResults.decodeMessage<A>(decoder:)();
}

void sub_23F8C2A54()
{
  TranscriptProtoQueryStepResults.traverse<A>(visitor:)();
}

uint64_t sub_23F8C2A68()
{
  sub_23F6D3458(&qword_256EB4018, type metadata accessor for TranscriptProtoQueryStepResults, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStepResults);
  return sub_23FB2D784();
}

uint64_t sub_23F8C2ABC()
{
  sub_23F6D3458(&qword_256EB2E60, type metadata accessor for TranscriptProtoQueryStepResults, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStepResults);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8C2B00()
{
  sub_23F6D3458(&qword_256EB2E60, type metadata accessor for TranscriptProtoQueryStepResults, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStepResults);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoResponseDialog.protoMessageName.getter()
{
  return sub_23F6D3738(25);
}

uint64_t sub_23F8C2B6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0E08);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0E08);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1C0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "fullPrint";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "fullSpeak";
  *(_QWORD *)(v11 + 8) = 9;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "supportingPrint";
  *((_QWORD *)v13 + 1) = 15;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "supportingSpeak";
  *((_QWORD *)v15 + 1) = 15;
  v15[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoResponseDialog._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0DF0, (uint64_t)qword_256EB0E08, a1);
}

void TranscriptProtoResponseDialog.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;

  sub_23F6D3DC4();
  sub_23F6D356C();
  if (!v10)
  {
    while ((v11 & 1) == 0)
    {
      sub_23F6D3E98();
      if (!(!v22 & v21))
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_23F8C2D98 + 4 * byte_23FB74CEE[v20]))(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10);
        return;
      }
      sub_23F6D35E8();
    }
  }
  sub_23F6D3710();
}

void TranscriptProtoResponseDialog.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6D36FC();
  if (!v1 || (sub_23F923258(), !v0))
  {
    sub_23F9240A8();
    if (!v0)
    {
      sub_23F9240C4();
      v2 = sub_23F6D3D7C();
      sub_23F6C7CE0(v2);
      type metadata accessor for TranscriptProtoResponseDialog(0);
      sub_23F9231A8();
    }
  }
  sub_23F6D3674();
}

void static TranscriptProtoResponseDialog.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F6D36BC();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6D3834();
  v7 = v7 && v5 == v6;
  if (!v7 && (sub_23F6B5280() & 1) == 0)
    goto LABEL_33;
  sub_23F924BD8();
  if (!v9)
  {
    if (v8)
      goto LABEL_33;
LABEL_15:
    sub_23F924A74();
    if (v14)
    {
      if (!v13)
        goto LABEL_33;
      sub_23F924238();
      v17 = v7 && v15 == v16;
      if (!v17 && (sub_23F6B5280() & 1) == 0)
        goto LABEL_33;
    }
    else if (v13)
    {
      goto LABEL_33;
    }
    v18 = *(_QWORD *)(v2 + 56);
    v19 = *(_QWORD *)(v1 + 56);
    if (v18)
    {
      if (!v19)
        goto LABEL_33;
      v20 = *(_QWORD *)(v2 + 48) == *(_QWORD *)(v1 + 48) && v18 == v19;
      if (!v20 && (sub_23F6B5280() & 1) == 0)
        goto LABEL_33;
    }
    else if (v19)
    {
      goto LABEL_33;
    }
    v21 = type metadata accessor for TranscriptProtoResponseDialog(0);
    sub_23F6D3614(*(int *)(v21 + 32));
    sub_23F6D36AC(*(int *)(v21 + 32));
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F6D3600();
    sub_23F6D36D0();
    sub_23F6D3820(v0);
    goto LABEL_33;
  }
  if (v8)
  {
    sub_23F924208();
    v12 = v7 && v10 == v11;
    if (v12 || (sub_23F6B5280() & 1) != 0)
      goto LABEL_15;
  }
LABEL_33:
  sub_23F6D3B34();
  sub_23F6B69E0();
}

uint64_t TranscriptProtoResponseDialog.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoResponseDialog, &qword_256EB2008, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseDialog);
}

unint64_t sub_23F8C2FC4()
{
  static TranscriptProtoResponseDialog.protoMessageName.getter();
  return 0xD000000000000019;
}

void sub_23F8C2FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  TranscriptProtoResponseDialog.decodeMessage<A>(decoder:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F8C2FFC()
{
  TranscriptProtoResponseDialog.traverse<A>(visitor:)();
}

uint64_t sub_23F8C3010()
{
  sub_23F6D3458(&qword_256EB4010, type metadata accessor for TranscriptProtoResponseDialog, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseDialog);
  return sub_23FB2D784();
}

uint64_t sub_23F8C3064()
{
  sub_23F6D3458(&qword_256EB2E78, type metadata accessor for TranscriptProtoResponseDialog, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseDialog);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8C30A8()
{
  sub_23F6D3458(&qword_256EB2E78, type metadata accessor for TranscriptProtoResponseDialog, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseDialog);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoResponseOutput.protoMessageName.getter()
{
  return sub_23F6D3738(25);
}

uint64_t sub_23F8C3114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0E20);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0E20);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F190;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "visualOutput";
  *(_QWORD *)(v7 + 8) = 12;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "printedDialogOutput";
  *(_QWORD *)(v11 + 8) = 19;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "spokenDialogOutput";
  *((_QWORD *)v13 + 1) = 18;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "responseType";
  *((_QWORD *)v15 + 1) = 12;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "resultStatementIds";
  *((_QWORD *)v17 + 1) = 18;
  v17[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoResponseOutput._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0DF8, (uint64_t)qword_256EB0E20, a1);
}

void TranscriptProtoResponseOutput.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;

  sub_23F6B5220();
  sub_23F6D356C();
  if (!v12)
  {
    while ((v13 & 1) == 0)
    {
      sub_23F923FB0();
      if (!(!v24 & v23))
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_23F8C338C + 4 * byte_23FB74CF2[v22]))(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10, a11, a12);
        return;
      }
      sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoResponseOutput.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F923A58();
  if (!v2
    || (type metadata accessor for TranscriptProtoVisualOutput(0),
        sub_23F6D3458(&qword_256EB2010, type metadata accessor for TranscriptProtoVisualOutput, (uint64_t)&protocol conformance descriptor for TranscriptProtoVisualOutput), sub_23F6D36E4(), !v1))
  {
    sub_23F6D3664();
    sub_23F8C358C(v3);
    if (!v1)
    {
      sub_23F6D3664();
      sub_23F8C36FC(v4);
      if (*(_BYTE *)(v0 + 8))
      {
        sub_23F918A64();
        sub_23F923FE8();
      }
      sub_23F924890();
      if (v5)
      {
        type metadata accessor for TranscriptProtoStatementID(0);
        sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
        sub_23F6D36E4();
      }
      type metadata accessor for TranscriptProtoResponseOutput(0);
      sub_23F6D37BC();
    }
  }
  sub_23F6D3BB8();
}

void sub_23F8C358C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA85E8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoDialogType(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoResponseOutput(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 28), (uint64_t)v4, &qword_256EA85E8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA85E8);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoDialogType);
    sub_23F6D3458(&qword_256EB2F18, type metadata accessor for TranscriptProtoDialogType, (uint64_t)&protocol conformance descriptor for TranscriptProtoDialogType);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoDialogType);
  }
}

void sub_23F8C36FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA85E8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoDialogType(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoResponseOutput(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 32), (uint64_t)v4, &qword_256EA85E8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA85E8);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoDialogType);
    sub_23F6D3458(&qword_256EB2F18, type metadata accessor for TranscriptProtoDialogType, (uint64_t)&protocol conformance descriptor for TranscriptProtoDialogType);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoDialogType);
  }
}

void static TranscriptProtoResponseOutput.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  sub_23F6B50E8();
  v84 = v6;
  v8 = v7;
  v9 = sub_23F6B53A4();
  v79 = *(_QWORD *)(v9 - 8);
  v80 = v9;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v78 = (uint64_t)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v12);
  v77 = (uint64_t)&v71 - v13;
  v14 = sub_23F6D398C();
  v82 = type metadata accessor for TranscriptProtoDialogType(v14);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B5C10(v16, v71);
  v83 = sub_23F6916B8(&qword_256EB2028);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F70D958();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v71 - v19;
  sub_23F6916B8(&qword_256EA85E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F9233F4();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F72E168();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F72E2B0();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F9231E0();
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v71 - v27;
  v29 = v8;
  v30 = v84;
  sub_23F69795C();
  if ((v31 & 1) == 0)
    goto LABEL_22;
  v75 = v1;
  v76 = v3;
  v73 = v2;
  v74 = v5;
  v71 = v0;
  v32 = type metadata accessor for TranscriptProtoResponseOutput(0);
  v33 = v29;
  sub_23F923368(v29 + *(int *)(v32 + 28), (uint64_t)v28);
  sub_23F923368(v30 + *(int *)(v32 + 28), v4);
  v34 = v83;
  v35 = (uint64_t)&v20[*(int *)(v83 + 48)];
  v36 = sub_23F7D2958();
  sub_23F923368(v36, v37);
  sub_23F923368(v4, v35);
  v38 = v82;
  sub_23F6B5164((uint64_t)v20, 1, v82);
  v40 = v20;
  if (v43)
  {
    v72 = v33;
    sub_23F6D3C1C(v4);
    sub_23F6D3C1C((uint64_t)v28);
    sub_23F6B5164(v35, 1, v38);
    if (v43)
    {
      sub_23F6B4F84((uint64_t)v20, &qword_256EA85E8);
      goto LABEL_12;
    }
LABEL_10:
    v45 = (uint64_t)v40;
LABEL_21:
    sub_23F6B4F84(v45, &qword_256EB2028);
    goto LABEL_22;
  }
  v41 = (uint64_t)v20;
  v42 = v76;
  sub_23F923DD0(v41, v39, &qword_256EA85E8);
  sub_23F6B5164(v35, 1, v38);
  if (v43)
  {
    sub_23F6B64F4(v4);
    sub_23F6B64F4((uint64_t)v28);
    sub_23F78F204(v44, type metadata accessor for TranscriptProtoDialogType);
    goto LABEL_10;
  }
  v72 = v33;
  v46 = v81;
  sub_23F923774(v35, v81);
  sub_23F6B5994();
  static TranscriptProtoDialogType.== infix(_:_:)();
  v48 = v47;
  sub_23F77DB60(v46);
  sub_23F6D387C(v4);
  sub_23F6D387C((uint64_t)v28);
  sub_23F77DB60(v42);
  v49 = sub_23F78F5B0();
  v34 = v83;
  sub_23F6B4F84(v49, v50);
  if ((v48 & 1) == 0)
    goto LABEL_22;
LABEL_12:
  v51 = v74;
  sub_23F92344C(v72 + *(int *)(v32 + 32), v74);
  v52 = v32;
  v53 = v73;
  sub_23F92344C(v30 + *(int *)(v32 + 32), v73);
  v54 = *(int *)(v34 + 48);
  v55 = v75;
  v56 = v75 + v54;
  v57 = sub_23F7F64A8();
  sub_23F92344C(v57, v58);
  sub_23F92344C(v53, v56);
  sub_23F6B5164(v55, 1, v38);
  if (!v43)
  {
    v61 = v71;
    sub_23F923BFC(v55, v59, &qword_256EA85E8);
    sub_23F6B5164(v56, 1, v38);
    if (!v62)
    {
      v64 = v53;
      v65 = v81;
      sub_23F923774(v56, v81);
      sub_23F72E3F8();
      static TranscriptProtoDialogType.== infix(_:_:)();
      v67 = v66;
      sub_23F77DB60(v65);
      sub_23F6B62DC(v64);
      sub_23F6B62DC(v51);
      sub_23F77DB60(v61);
      sub_23F6B62DC(v55);
      if ((v67 & 1) == 0)
        goto LABEL_22;
      goto LABEL_24;
    }
    sub_23F6B6EF8(v53);
    sub_23F6B6EF8(v51);
    sub_23F7E7834(v63, type metadata accessor for TranscriptProtoDialogType);
    goto LABEL_20;
  }
  sub_23F6D3C1C(v53);
  sub_23F6D3C1C(v51);
  v60 = sub_23F6B5164(v56, 1, v38);
  if (!v43)
  {
LABEL_20:
    v45 = v55;
    goto LABEL_21;
  }
  sub_23F77DC10(v60, &qword_256EA85E8);
LABEL_24:
  v68 = v72;
  if (*(unsigned __int8 *)(v72 + 8) == *(unsigned __int8 *)(v30 + 8))
  {
    sub_23F697BB8();
    if ((v69 & 1) != 0)
    {
      v70 = v77;
      sub_23F6D3818(v77, v68 + *(int *)(v52 + 36));
      sub_23F6D3818(v78, v30 + *(int *)(v52 + 36));
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F923230();
      sub_23F9232DC();
      sub_23F6D3874(v70);
    }
  }
LABEL_22:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoResponseOutput.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoResponseOutput, &qword_256EB2030, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseOutput);
}

unint64_t sub_23F8C3D88()
{
  static TranscriptProtoResponseOutput.protoMessageName.getter();
  return 0xD000000000000019;
}

#error "23F8C3DB4: call analysis failed (funcsize=5)"

void sub_23F8C3DC0()
{
  TranscriptProtoResponseOutput.traverse<A>(visitor:)();
}

uint64_t sub_23F8C3DD4()
{
  sub_23F6D3458(&qword_256EB4008, type metadata accessor for TranscriptProtoResponseOutput, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseOutput);
  return sub_23FB2D784();
}

uint64_t sub_23F8C3E28()
{
  sub_23F6D3458(&qword_256EB2E90, type metadata accessor for TranscriptProtoResponseOutput, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseOutput);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8C3E6C()
{
  sub_23F6D3458(&qword_256EB2E90, type metadata accessor for TranscriptProtoResponseOutput, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseOutput);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoVisualOutput.protoMessageName.getter()
{
  return sub_23F6D3738(23);
}

uint64_t sub_23F8C3ED8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0E38);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0E38);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1C0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "liveActivity";
  *(_QWORD *)(v7 + 8) = 12;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "inAppResponse";
  *(_QWORD *)(v11 + 8) = 13;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "systemSnippet";
  *((_QWORD *)v13 + 1) = 13;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 5;
  *(_QWORD *)v15 = "pluginSnippet";
  *((_QWORD *)v15 + 1) = 13;
  v15[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoVisualOutput._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0E00, (uint64_t)qword_256EB0E38, a1);
}

void TranscriptProtoVisualOutput.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  char v1;
  char v3;
  char v4;

  sub_23F6D356C();
  if (!v0)
  {
    while ((v1 & 1) == 0)
    {
      sub_23F923FB0();
      if (!(!v4 & v3))
        __asm { BR              X9 }
      sub_23F6D35E8();
    }
  }
  sub_23F6D377C();
}

void sub_23F8C4138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA2660);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4570);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA2660);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA2660);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoVisualOutputType);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoVisualOutputType);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoVisualOutputType);
    }
    else
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4570);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoLiveActivityOutputPayload);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoLiveActivityOutputPayload);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2EB8, type metadata accessor for TranscriptProtoLiveActivityOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoLiveActivityOutputPayload);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4570);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4570);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4570);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoLiveActivityOutputPayload);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4570);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA2660);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoLiveActivityOutputPayload);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8C4520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA2660);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4578);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA2660);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA2660);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoVisualOutputType);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoVisualOutputType);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4578);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoInAppResponseOutputPayload);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoInAppResponseOutputPayload);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoVisualOutputType);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2ED0, type metadata accessor for TranscriptProtoInAppResponseOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoInAppResponseOutputPayload);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4578);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4578);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4578);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoInAppResponseOutputPayload);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4578);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA2660);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoInAppResponseOutputPayload);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8C490C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA2660);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4580);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA2660);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA2660);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoVisualOutputType);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoVisualOutputType);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4580);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoSystemSnippetOutputPayload);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoSystemSnippetOutputPayload);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoVisualOutputType);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2EE8, type metadata accessor for TranscriptProtoSystemSnippetOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemSnippetOutputPayload);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4580);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4580);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4580);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoSystemSnippetOutputPayload);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4580);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA2660);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoSystemSnippetOutputPayload);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8C4CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA2660);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4588);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA2660);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA2660);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoVisualOutputType);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoVisualOutputType);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4588);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoPluginSnippetOutputPayload);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoPluginSnippetOutputPayload);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoVisualOutputType);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2F00, type metadata accessor for TranscriptProtoPluginSnippetOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPluginSnippetOutputPayload);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4588);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4588);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4588);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoPluginSnippetOutputPayload);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4588);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA2660);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoPluginSnippetOutputPayload);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

#error "23F8C5118: call analysis failed (funcsize=31)"

void sub_23F8C51A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA2660);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA2660);
  v8 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA2660);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoLiveActivityOutputPayload);
      sub_23F6D3458(&qword_256EB2EB8, type metadata accessor for TranscriptProtoLiveActivityOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoLiveActivityOutputPayload);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoLiveActivityOutputPayload);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoVisualOutputType);
  }
  __break(1u);
}

void sub_23F8C533C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA2660);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA2660);
  v8 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA2660);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoInAppResponseOutputPayload);
      sub_23F6D3458(&qword_256EB2ED0, type metadata accessor for TranscriptProtoInAppResponseOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoInAppResponseOutputPayload);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoInAppResponseOutputPayload);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoVisualOutputType);
  }
  __break(1u);
}

void sub_23F8C54D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA2660);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA2660);
  v8 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA2660);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSystemSnippetOutputPayload);
      sub_23F6D3458(&qword_256EB2EE8, type metadata accessor for TranscriptProtoSystemSnippetOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemSnippetOutputPayload);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoSystemSnippetOutputPayload);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoVisualOutputType);
  }
  __break(1u);
}

void sub_23F8C566C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA2660);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA2660);
  v8 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA2660);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoPluginSnippetOutputPayload);
      sub_23F6D3458(&qword_256EB2F00, type metadata accessor for TranscriptProtoPluginSnippetOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPluginSnippetOutputPayload);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoPluginSnippetOutputPayload);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoVisualOutputType);
  }
  __break(1u);
}

void static TranscriptProtoVisualOutput.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F6B50E8();
  v5 = v4;
  v39 = sub_23F6B53A4();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v39);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = sub_23F6D38F8(v9, v10, v11, v12, v13, v14, v15, v16, v40);
  type metadata accessor for TranscriptProtoVisualOutputType(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B59E0();
  v19 = sub_23F6916B8(&qword_256EA2668);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6D3A70();
  v24 = MEMORY[0x24BDAC7A8](v23);
  sub_23F923124(v24, v25, v26, v27, v28, v29, v30, v31, v41);
  sub_23F923164(v5, v0);
  v32 = v1 + *(int *)(v19 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v32);
  v33 = sub_23F9230E4(v1);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v35 = sub_23F9230E4(v32);
    if (v36)
    {
      sub_23F6D378C(v35, &qword_256EA2660);
LABEL_11:
      v38 = type metadata accessor for TranscriptProtoVisualOutput(0);
      sub_23F6D3794(v38);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v33, v34, &qword_256EA2660);
  sub_23F9230E4(v32);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v37, type metadata accessor for TranscriptProtoVisualOutputType);
LABEL_9:
    sub_23F6D378C(v35, &qword_256EA2668);
    goto LABEL_12;
  }
  sub_23F923270();
  sub_23F6D3D70();
  static TranscriptProtoVisualOutputType.== infix(_:_:)();
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoVisualOutput.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoVisualOutput, &qword_256EB2038, (uint64_t)&protocol conformance descriptor for TranscriptProtoVisualOutput);
}

unint64_t sub_23F8C5A38()
{
  static TranscriptProtoVisualOutput.protoMessageName.getter();
  return 0xD000000000000017;
}

void sub_23F8C5A5C()
{
  TranscriptProtoVisualOutput.decodeMessage<A>(decoder:)();
}

uint64_t sub_23F8C5A70()
{
  return TranscriptProtoVisualOutput.traverse<A>(visitor:)();
}

uint64_t sub_23F8C5A84()
{
  sub_23F6D3458(&qword_256EB4000, type metadata accessor for TranscriptProtoVisualOutput, (uint64_t)&protocol conformance descriptor for TranscriptProtoVisualOutput);
  return sub_23FB2D784();
}

uint64_t sub_23F8C5AD8()
{
  sub_23F6D3458(&qword_256EB2010, type metadata accessor for TranscriptProtoVisualOutput, (uint64_t)&protocol conformance descriptor for TranscriptProtoVisualOutput);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8C5B1C()
{
  sub_23F6D3458(&qword_256EB2010, type metadata accessor for TranscriptProtoVisualOutput, (uint64_t)&protocol conformance descriptor for TranscriptProtoVisualOutput);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoLiveActivityOutputPayload.protoMessageName.getter()
{
  return sub_23F6D3738(36);
}

uint64_t sub_23F8C5B88()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoLiveActivityOutputPayload._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0E08, (uint64_t)&unk_256EB0E50, a1);
}

void TranscriptProtoLiveActivityOutputPayload.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F9062A8(a1, a2);
}

void TranscriptProtoLiveActivityOutputPayload.traverse<A>(visitor:)()
{
  sub_23F906318();
}

void static TranscriptProtoLiveActivityOutputPayload.== infix(_:_:)()
{
  sub_23F8AB6CC();
}

uint64_t TranscriptProtoLiveActivityOutputPayload.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoLiveActivityOutputPayload, &qword_256EB2040, (uint64_t)&protocol conformance descriptor for TranscriptProtoLiveActivityOutputPayload);
}

unint64_t sub_23F8C5C24()
{
  static TranscriptProtoLiveActivityOutputPayload.protoMessageName.getter();
  return 0xD000000000000024;
}

void sub_23F8C5C48()
{
  TranscriptProtoLiveActivityOutputPayload.traverse<A>(visitor:)();
}

uint64_t sub_23F8C5C5C()
{
  sub_23F6D3458(&qword_256EB3FF8, type metadata accessor for TranscriptProtoLiveActivityOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoLiveActivityOutputPayload);
  return sub_23FB2D784();
}

uint64_t sub_23F8C5CB0()
{
  sub_23F6D3458(&qword_256EB2EB8, type metadata accessor for TranscriptProtoLiveActivityOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoLiveActivityOutputPayload);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8C5CF4()
{
  sub_23F6D3458(&qword_256EB2EB8, type metadata accessor for TranscriptProtoLiveActivityOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoLiveActivityOutputPayload);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoInAppResponseOutputPayload.protoMessageName.getter()
{
  return sub_23F6D3738(37);
}

uint64_t sub_23F8C5D60()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoInAppResponseOutputPayload._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0E10, (uint64_t)&unk_256EB0E68, a1);
}

void TranscriptProtoInAppResponseOutputPayload.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F9062A8(a1, a2);
}

void TranscriptProtoInAppResponseOutputPayload.traverse<A>(visitor:)()
{
  sub_23F906318();
}

void static TranscriptProtoInAppResponseOutputPayload.== infix(_:_:)()
{
  sub_23F8AB6CC();
}

uint64_t TranscriptProtoInAppResponseOutputPayload.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoInAppResponseOutputPayload, &qword_256EB2048, (uint64_t)&protocol conformance descriptor for TranscriptProtoInAppResponseOutputPayload);
}

unint64_t sub_23F8C5DFC()
{
  static TranscriptProtoInAppResponseOutputPayload.protoMessageName.getter();
  return 0xD000000000000025;
}

void sub_23F8C5E20()
{
  TranscriptProtoInAppResponseOutputPayload.traverse<A>(visitor:)();
}

uint64_t sub_23F8C5E34()
{
  sub_23F6D3458(&qword_256EB3FF0, type metadata accessor for TranscriptProtoInAppResponseOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoInAppResponseOutputPayload);
  return sub_23FB2D784();
}

uint64_t sub_23F8C5E88()
{
  sub_23F6D3458(&qword_256EB2ED0, type metadata accessor for TranscriptProtoInAppResponseOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoInAppResponseOutputPayload);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8C5ECC()
{
  sub_23F6D3458(&qword_256EB2ED0, type metadata accessor for TranscriptProtoInAppResponseOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoInAppResponseOutputPayload);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoSystemSnippetOutputPayload.protoMessageName.getter()
{
  return sub_23F6D3738(37);
}

uint64_t sub_23F8C5F38()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoSystemSnippetOutputPayload._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0E18, (uint64_t)&unk_256EB0E80, a1);
}

void TranscriptProtoSystemSnippetOutputPayload.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F9062A8(a1, a2);
}

uint64_t TranscriptProtoSystemSnippetOutputPayload.traverse<A>(visitor:)()
{
  return sub_23F8CE3B0();
}

void static TranscriptProtoSystemSnippetOutputPayload.== infix(_:_:)()
{
  sub_23F8CE464();
}

uint64_t TranscriptProtoSystemSnippetOutputPayload.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoSystemSnippetOutputPayload, &qword_256EB2050, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemSnippetOutputPayload);
}

unint64_t sub_23F8C5FD4()
{
  static TranscriptProtoSystemSnippetOutputPayload.protoMessageName.getter();
  return 0xD000000000000025;
}

void sub_23F8C5FF8(uint64_t a1, uint64_t a2)
{
  TranscriptProtoControlPayload.decodeMessage<A>(decoder:)(a1, a2);
}

uint64_t sub_23F8C600C()
{
  return TranscriptProtoSystemSnippetOutputPayload.traverse<A>(visitor:)();
}

uint64_t sub_23F8C6020()
{
  sub_23F6D3458(&qword_256EB3FE8, type metadata accessor for TranscriptProtoSystemSnippetOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemSnippetOutputPayload);
  return sub_23FB2D784();
}

uint64_t sub_23F8C6074()
{
  sub_23F6D3458(&qword_256EB2EE8, type metadata accessor for TranscriptProtoSystemSnippetOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemSnippetOutputPayload);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8C60B8()
{
  sub_23F6D3458(&qword_256EB2EE8, type metadata accessor for TranscriptProtoSystemSnippetOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemSnippetOutputPayload);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoPluginSnippetOutputPayload.protoMessageName.getter()
{
  return sub_23F6D3738(37);
}

uint64_t sub_23F8C6124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0E98);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0E98);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "pluginModelData";
  *(_QWORD *)(v7 + 8) = 15;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "bundleId";
  *((_QWORD *)v11 + 1) = 8;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoPluginSnippetOutputPayload._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0E20, (uint64_t)qword_256EB0E98, a1);
}

void TranscriptProtoPluginSnippetOutputPayload.decodeMessage<A>(decoder:)()
{
  sub_23F8CDFF0();
}

void TranscriptProtoPluginSnippetOutputPayload.traverse<A>(visitor:)()
{
  sub_23F8CE07C();
}

void static TranscriptProtoPluginSnippetOutputPayload.== infix(_:_:)()
{
  sub_23F8CE118();
}

uint64_t TranscriptProtoPluginSnippetOutputPayload.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload, &qword_256EB2058, (uint64_t)&protocol conformance descriptor for TranscriptProtoPluginSnippetOutputPayload);
}

unint64_t sub_23F8C62F4()
{
  static TranscriptProtoPluginSnippetOutputPayload.protoMessageName.getter();
  return 0xD000000000000025;
}

void sub_23F8C6318()
{
  TranscriptProtoPluginSnippetPayload.decodeMessage<A>(decoder:)();
}

void sub_23F8C632C()
{
  TranscriptProtoPluginSnippetOutputPayload.traverse<A>(visitor:)();
}

uint64_t sub_23F8C6340()
{
  sub_23F6D3458(&qword_256EB3FE0, type metadata accessor for TranscriptProtoPluginSnippetOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPluginSnippetOutputPayload);
  return sub_23FB2D784();
}

uint64_t sub_23F8C6394()
{
  sub_23F6D3458(&qword_256EB2F00, type metadata accessor for TranscriptProtoPluginSnippetOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPluginSnippetOutputPayload);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8C63D8()
{
  sub_23F6D3458(&qword_256EB2F00, type metadata accessor for TranscriptProtoPluginSnippetOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPluginSnippetOutputPayload);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoDialogType.protoMessageName.getter()
{
  return sub_23F6D3738(21);
}

uint64_t sub_23F8C6444()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0EB0);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0EB0);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F190;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "staticText";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "sonicText";
  *(_QWORD *)(v11 + 8) = 9;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "generatedText";
  *((_QWORD *)v13 + 1) = 13;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "unableToGenerate";
  *((_QWORD *)v15 + 1) = 16;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "suppressed";
  *((_QWORD *)v17 + 1) = 10;
  v17[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoDialogType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0E28, (uint64_t)qword_256EB0EB0, a1);
}

void TranscriptProtoDialogType.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  char v1;
  char v3;
  char v4;

  sub_23F6D356C();
  if (!v0)
  {
    while ((v1 & 1) == 0)
    {
      sub_23F923FB0();
      if (!(!v4 & v3))
        __asm { BR              X9 }
      sub_23F6D35E8();
    }
  }
  sub_23F6D377C();
}

void sub_23F8C66F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoStaticText(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2060);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoDialogFormat(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4548);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2060);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2060);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoDialogFormat);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoDialogFormat);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoDialogFormat);
    }
    else
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4548);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoStaticText);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoStaticText);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2F30, type metadata accessor for TranscriptProtoStaticText, (uint64_t)&protocol conformance descriptor for TranscriptProtoStaticText);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4548);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4548);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4548);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoStaticText);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4548);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2060);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoStaticText);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8C6AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoSonicText(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2060);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoDialogFormat(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4550);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2060);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2060);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoDialogFormat);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoDialogFormat);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4550);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoSonicText);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoSonicText);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoDialogFormat);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2F48, type metadata accessor for TranscriptProtoSonicText, (uint64_t)&protocol conformance descriptor for TranscriptProtoSonicText);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4550);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4550);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4550);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoSonicText);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4550);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2060);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoSonicText);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8C6ECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoGeneratedText(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2060);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoDialogFormat(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4558);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2060);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2060);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoDialogFormat);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoDialogFormat);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4558);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoGeneratedText);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoGeneratedText);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoDialogFormat);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2F60, type metadata accessor for TranscriptProtoGeneratedText, (uint64_t)&protocol conformance descriptor for TranscriptProtoGeneratedText);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4558);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4558);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4558);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoGeneratedText);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4558);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2060);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoGeneratedText);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8C72B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoUnableToGenerate(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2060);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoDialogFormat(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4560);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2060);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2060);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoDialogFormat);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoDialogFormat);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4560);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoUnableToGenerate);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoUnableToGenerate);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoDialogFormat);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2F78, type metadata accessor for TranscriptProtoUnableToGenerate, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnableToGenerate);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4560);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4560);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4560);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoUnableToGenerate);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4560);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2060);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoUnableToGenerate);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8C76A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoSuppressed(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2060);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoDialogFormat(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4568);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2060);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2060);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoDialogFormat);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoDialogFormat);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4568);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoSuppressed);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoSuppressed);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoDialogFormat);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2F90, type metadata accessor for TranscriptProtoSuppressed, (uint64_t)&protocol conformance descriptor for TranscriptProtoSuppressed);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4568);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4568);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4568);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoSuppressed);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4568);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2060);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoSuppressed);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

#error "23F8C7AC4: call analysis failed (funcsize=31)"

void sub_23F8C7B60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2060);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStaticText(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2060);
  v8 = type metadata accessor for TranscriptProtoDialogFormat(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2060);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStaticText);
      sub_23F6D3458(&qword_256EB2F30, type metadata accessor for TranscriptProtoStaticText, (uint64_t)&protocol conformance descriptor for TranscriptProtoStaticText);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStaticText);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoDialogFormat);
  }
  __break(1u);
}

void sub_23F8C7CF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2060);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSonicText(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2060);
  v8 = type metadata accessor for TranscriptProtoDialogFormat(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2060);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSonicText);
      sub_23F6D3458(&qword_256EB2F48, type metadata accessor for TranscriptProtoSonicText, (uint64_t)&protocol conformance descriptor for TranscriptProtoSonicText);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoSonicText);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoDialogFormat);
  }
  __break(1u);
}

void sub_23F8C7E8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2060);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoGeneratedText(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2060);
  v8 = type metadata accessor for TranscriptProtoDialogFormat(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2060);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoGeneratedText);
      sub_23F6D3458(&qword_256EB2F60, type metadata accessor for TranscriptProtoGeneratedText, (uint64_t)&protocol conformance descriptor for TranscriptProtoGeneratedText);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoGeneratedText);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoDialogFormat);
  }
  __break(1u);
}

void sub_23F8C8024(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2060);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoUnableToGenerate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2060);
  v8 = type metadata accessor for TranscriptProtoDialogFormat(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2060);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoUnableToGenerate);
      sub_23F6D3458(&qword_256EB2F78, type metadata accessor for TranscriptProtoUnableToGenerate, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnableToGenerate);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoUnableToGenerate);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoDialogFormat);
  }
  __break(1u);
}

void sub_23F8C81BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2060);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSuppressed(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2060);
  v8 = type metadata accessor for TranscriptProtoDialogFormat(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2060);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSuppressed);
      sub_23F6D3458(&qword_256EB2F90, type metadata accessor for TranscriptProtoSuppressed, (uint64_t)&protocol conformance descriptor for TranscriptProtoSuppressed);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoSuppressed);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoDialogFormat);
  }
  __break(1u);
}

void static TranscriptProtoDialogType.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F6B50E8();
  v5 = v4;
  v39 = sub_23F6B53A4();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v39);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = sub_23F6D38F8(v9, v10, v11, v12, v13, v14, v15, v16, v40);
  type metadata accessor for TranscriptProtoDialogFormat(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B59E0();
  v19 = sub_23F6916B8(&qword_256EB2068);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6D3A70();
  v24 = MEMORY[0x24BDAC7A8](v23);
  sub_23F923124(v24, v25, v26, v27, v28, v29, v30, v31, v41);
  sub_23F923164(v5, v0);
  v32 = v1 + *(int *)(v19 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v32);
  v33 = sub_23F9230E4(v1);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v35 = sub_23F9230E4(v32);
    if (v36)
    {
      sub_23F6D378C(v35, &qword_256EB2060);
LABEL_11:
      v38 = type metadata accessor for TranscriptProtoDialogType(0);
      sub_23F6D3794(v38);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v33, v34, &qword_256EB2060);
  sub_23F9230E4(v32);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v37, type metadata accessor for TranscriptProtoDialogFormat);
LABEL_9:
    sub_23F6D378C(v35, &qword_256EB2068);
    goto LABEL_12;
  }
  sub_23F923270();
  sub_23F6D3D70();
  static TranscriptProtoDialogFormat.== infix(_:_:)();
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoDialogType.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoDialogType, &qword_256EB2070, (uint64_t)&protocol conformance descriptor for TranscriptProtoDialogType);
}

unint64_t sub_23F8C8588()
{
  static TranscriptProtoDialogType.protoMessageName.getter();
  return 0xD000000000000015;
}

void sub_23F8C85AC()
{
  TranscriptProtoDialogType.decodeMessage<A>(decoder:)();
}

uint64_t sub_23F8C85C0()
{
  return TranscriptProtoDialogType.traverse<A>(visitor:)();
}

uint64_t sub_23F8C85D4()
{
  sub_23F6D3458(&qword_256EB3FD8, type metadata accessor for TranscriptProtoDialogType, (uint64_t)&protocol conformance descriptor for TranscriptProtoDialogType);
  return sub_23FB2D784();
}

uint64_t sub_23F8C8628()
{
  sub_23F6D3458(&qword_256EB2F18, type metadata accessor for TranscriptProtoDialogType, (uint64_t)&protocol conformance descriptor for TranscriptProtoDialogType);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8C866C()
{
  sub_23F6D3458(&qword_256EB2F18, type metadata accessor for TranscriptProtoDialogType, (uint64_t)&protocol conformance descriptor for TranscriptProtoDialogType);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoStaticText.protoMessageName.getter()
{
  return sub_23F6D3738(21);
}

uint64_t sub_23F8C86D8()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoStaticText._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0E30, (uint64_t)&unk_256EB0EC8, a1);
}

void TranscriptProtoStaticText.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F9062A8(a1, a2);
}

void TranscriptProtoStaticText.traverse<A>(visitor:)()
{
  sub_23F906318();
}

void static TranscriptProtoStaticText.== infix(_:_:)()
{
  sub_23F8AB6CC();
}

uint64_t TranscriptProtoStaticText.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoStaticText, &qword_256EB2078, (uint64_t)&protocol conformance descriptor for TranscriptProtoStaticText);
}

unint64_t sub_23F8C8774()
{
  static TranscriptProtoStaticText.protoMessageName.getter();
  return 0xD000000000000015;
}

void sub_23F8C8798()
{
  TranscriptProtoStaticText.traverse<A>(visitor:)();
}

uint64_t sub_23F8C87AC()
{
  sub_23F6D3458(&qword_256EB3FD0, type metadata accessor for TranscriptProtoStaticText, (uint64_t)&protocol conformance descriptor for TranscriptProtoStaticText);
  return sub_23FB2D784();
}

uint64_t sub_23F8C8800()
{
  sub_23F6D3458(&qword_256EB2F30, type metadata accessor for TranscriptProtoStaticText, (uint64_t)&protocol conformance descriptor for TranscriptProtoStaticText);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8C8844()
{
  sub_23F6D3458(&qword_256EB2F30, type metadata accessor for TranscriptProtoStaticText, (uint64_t)&protocol conformance descriptor for TranscriptProtoStaticText);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoSonicText.protoMessageName.getter()
{
  return sub_23F6D3738(20);
}

uint64_t sub_23F8C88B0()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoSonicText._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0E38, (uint64_t)&unk_256EB0EE0, a1);
}

void TranscriptProtoSonicText.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F9062A8(a1, a2);
}

void TranscriptProtoSonicText.traverse<A>(visitor:)()
{
  sub_23F906318();
}

void static TranscriptProtoSonicText.== infix(_:_:)()
{
  sub_23F8AB6CC();
}

uint64_t TranscriptProtoSonicText.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoSonicText, &qword_256EB2080, (uint64_t)&protocol conformance descriptor for TranscriptProtoSonicText);
}

unint64_t sub_23F8C894C()
{
  static TranscriptProtoSonicText.protoMessageName.getter();
  return 0xD000000000000014;
}

void sub_23F8C8970()
{
  TranscriptProtoSonicText.traverse<A>(visitor:)();
}

uint64_t sub_23F8C8984()
{
  sub_23F6D3458(&qword_256EB3FC8, type metadata accessor for TranscriptProtoSonicText, (uint64_t)&protocol conformance descriptor for TranscriptProtoSonicText);
  return sub_23FB2D784();
}

uint64_t sub_23F8C89D8()
{
  sub_23F6D3458(&qword_256EB2F48, type metadata accessor for TranscriptProtoSonicText, (uint64_t)&protocol conformance descriptor for TranscriptProtoSonicText);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8C8A1C()
{
  sub_23F6D3458(&qword_256EB2F48, type metadata accessor for TranscriptProtoSonicText, (uint64_t)&protocol conformance descriptor for TranscriptProtoSonicText);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoGeneratedText.protoMessageName.getter()
{
  return sub_23F6D3738(24);
}

uint64_t sub_23F8C8A88()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoGeneratedText._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0E40, (uint64_t)&unk_256EB0EF8, a1);
}

void TranscriptProtoGeneratedText.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F9062A8(a1, a2);
}

void TranscriptProtoGeneratedText.traverse<A>(visitor:)()
{
  sub_23F906318();
}

void static TranscriptProtoGeneratedText.== infix(_:_:)()
{
  sub_23F8AB6CC();
}

uint64_t TranscriptProtoGeneratedText.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoGeneratedText, &qword_256EB2088, (uint64_t)&protocol conformance descriptor for TranscriptProtoGeneratedText);
}

unint64_t sub_23F8C8B24()
{
  static TranscriptProtoGeneratedText.protoMessageName.getter();
  return 0xD000000000000018;
}

void sub_23F8C8B48()
{
  TranscriptProtoGeneratedText.traverse<A>(visitor:)();
}

uint64_t sub_23F8C8B5C()
{
  sub_23F6D3458(&qword_256EB3FC0, type metadata accessor for TranscriptProtoGeneratedText, (uint64_t)&protocol conformance descriptor for TranscriptProtoGeneratedText);
  return sub_23FB2D784();
}

uint64_t sub_23F8C8BB0()
{
  sub_23F6D3458(&qword_256EB2F60, type metadata accessor for TranscriptProtoGeneratedText, (uint64_t)&protocol conformance descriptor for TranscriptProtoGeneratedText);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8C8BF4()
{
  sub_23F6D3458(&qword_256EB2F60, type metadata accessor for TranscriptProtoGeneratedText, (uint64_t)&protocol conformance descriptor for TranscriptProtoGeneratedText);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoUnableToGenerate.protoMessageName.getter()
{
  return sub_23F6D3738(27);
}

uint64_t sub_23F8C8C60(uint64_t a1)
{
  return sub_23F9187D8(a1, qword_256EB0F10);
}

uint64_t static TranscriptProtoUnableToGenerate._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0E48, (uint64_t)qword_256EB0F10, a1);
}

uint64_t TranscriptProtoUnableToGenerate.decodeMessage<A>(decoder:)()
{
  return sub_23F918844();
}

uint64_t TranscriptProtoUnableToGenerate.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoUnableToGenerate, &qword_256EB2090, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnableToGenerate);
}

unint64_t sub_23F8C8CC0()
{
  static TranscriptProtoUnableToGenerate.protoMessageName.getter();
  return 0xD00000000000001BLL;
}

uint64_t sub_23F8C8CE4()
{
  sub_23F6D3458(&qword_256EB3FB8, type metadata accessor for TranscriptProtoUnableToGenerate, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnableToGenerate);
  return sub_23FB2D784();
}

uint64_t sub_23F8C8D38()
{
  sub_23F6D3458(&qword_256EB2F78, type metadata accessor for TranscriptProtoUnableToGenerate, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnableToGenerate);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8C8D7C()
{
  sub_23F6D3458(&qword_256EB2F78, type metadata accessor for TranscriptProtoUnableToGenerate, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnableToGenerate);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoSuppressed.protoMessageName.getter()
{
  return sub_23F6D3738(21);
}

uint64_t sub_23F8C8DE4(uint64_t a1)
{
  return sub_23F9187D8(a1, qword_256EB0F28);
}

uint64_t static TranscriptProtoSuppressed._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0E50, (uint64_t)qword_256EB0F28, a1);
}

uint64_t TranscriptProtoSuppressed.decodeMessage<A>(decoder:)()
{
  return sub_23F918844();
}

uint64_t TranscriptProtoSuppressed.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoSuppressed, &qword_256EB2098, (uint64_t)&protocol conformance descriptor for TranscriptProtoSuppressed);
}

unint64_t sub_23F8C8E44()
{
  static TranscriptProtoSuppressed.protoMessageName.getter();
  return 0xD000000000000015;
}

uint64_t sub_23F8C8E68()
{
  sub_23F6D3458(&qword_256EB3FB0, type metadata accessor for TranscriptProtoSuppressed, (uint64_t)&protocol conformance descriptor for TranscriptProtoSuppressed);
  return sub_23FB2D784();
}

uint64_t sub_23F8C8EBC()
{
  sub_23F6D3458(&qword_256EB2F90, type metadata accessor for TranscriptProtoSuppressed, (uint64_t)&protocol conformance descriptor for TranscriptProtoSuppressed);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8C8F00()
{
  sub_23F6D3458(&qword_256EB2F90, type metadata accessor for TranscriptProtoSuppressed, (uint64_t)&protocol conformance descriptor for TranscriptProtoSuppressed);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoResponseManifest.protoMessageName.getter()
{
  return sub_23F6D3738(27);
}

uint64_t sub_23F8C8F68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0F40);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0F40);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1B0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "parameters";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "dialog";
  *(_QWORD *)(v11 + 8) = 6;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "visual";
  *((_QWORD *)v13 + 1) = 6;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "templateId";
  *((_QWORD *)v15 + 1) = 10;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "templateLocation";
  *((_QWORD *)v17 + 1) = 16;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "useTemplateAsFallback";
  *((_QWORD *)v19 + 1) = 21;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "dialogPresentationHint";
  *((_QWORD *)v21 + 1) = 22;
  v21[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoResponseManifest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0E58, (uint64_t)qword_256EB0F40, a1);
}

void TranscriptProtoResponseManifest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;

  sub_23F6B5220();
  sub_23F6D356C();
  if (!v12)
  {
    while ((v13 & 1) == 0)
    {
      sub_23F924C4C();
      if (!(!v24 & v23))
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_23F8C9248 + 4 * byte_23FB74D0A[v22]))(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10, a11, a12);
        return;
      }
      sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

uint64_t sub_23F8C92F4()
{
  type metadata accessor for TranscriptProtoResponseManifest(0);
  return sub_23FB2D7D8();
}

uint64_t sub_23F8C9354()
{
  type metadata accessor for TranscriptProtoResponseManifest(0);
  sub_23F922EB4();
  return sub_23FB2D7F0();
}

void TranscriptProtoResponseManifest.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD);
  uint64_t v15;
  uint64_t v16;

  sub_23F6D3DC4();
  v3 = v2;
  v5 = v4;
  sub_23F923A58();
  if (!v6
    || (type metadata accessor for TranscriptProtoResponseParameter(0),
        sub_23F6D3458(&qword_256EB20A0, type metadata accessor for TranscriptProtoResponseParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseParameter), sub_23F6D36E4(), !v1))
  {
    sub_23F6D3664();
    sub_23F8C9510(v7);
    if (!v1)
    {
      sub_23F6D3664();
      sub_23F8C9680(v8);
      sub_23F924184(v0, v5, v3, v9, type metadata accessor for TranscriptProtoResponseManifest);
      sub_23F6D3664();
      sub_23F90A65C(v10, v11, v12, v13, v14);
      sub_23F6D3664();
      sub_23F8C97F0(v15);
      sub_23F6D3664();
      sub_23F8C9864(v16);
      type metadata accessor for TranscriptProtoResponseManifest(0);
      sub_23F6D37BC();
    }
  }
  sub_23F6D3710();
}

void sub_23F8C9510(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA8000);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoResponseDialog(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoResponseManifest(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA8000);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA8000);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoResponseDialog);
    sub_23F6D3458(&qword_256EB2E78, type metadata accessor for TranscriptProtoResponseDialog, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseDialog);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoResponseDialog);
  }
}

void sub_23F8C9680(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA8008);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoResponseVisual(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoResponseManifest(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_256EA8008);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA8008);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoResponseVisual);
    sub_23F6D3458(&qword_256EB2FC8, type metadata accessor for TranscriptProtoResponseVisual, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseVisual);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoResponseVisual);
  }
}

uint64_t sub_23F8C97F0(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for TranscriptProtoResponseManifest(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 36)) != 2)
    return sub_23FB2D940();
  return result;
}

uint64_t sub_23F8C9864(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for TranscriptProtoResponseManifest(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 40)) != 2)
  {
    sub_23F922EB4();
    return sub_23FB2D94C();
  }
  return result;
}

void static TranscriptProtoResponseManifest.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char v63;
  int *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  char v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  BOOL v96;
  uint64_t v97;
  int v98;
  int v99;
  char v100;
  uint64_t v101;
  int v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  v8 = sub_23F6B53A4();
  v112 = *(_QWORD *)(v8 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v111 = (uint64_t)&v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v11);
  v110 = (uint64_t)&v106 - v12;
  v13 = sub_23F6D398C();
  v117 = type metadata accessor for TranscriptProtoResponseVisual(v13);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B57F4(v15, v106);
  v115 = sub_23F6916B8(&qword_256EB20A8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F70D7A4(v17, v106);
  sub_23F6916B8(&qword_256EA8008);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B6618();
  MEMORY[0x24BDAC7A8](v19);
  v119 = (uint64_t)&v106 - v20;
  sub_23F6B5664();
  v22 = MEMORY[0x24BDAC7A8](v21);
  v30 = sub_23F6D38F8(v22, v23, v24, v25, v26, v27, v28, v29, v106);
  v31 = type metadata accessor for TranscriptProtoResponseDialog(v30);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F6B537C(v33, v106);
  v34 = sub_23F6916B8(&qword_256EB20B0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F6B53AC();
  sub_23F6916B8(&qword_256EA8000);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F72E2B0();
  MEMORY[0x24BDAC7A8](v38);
  v40 = (char *)&v106 - v39;
  sub_23F697298(*v7, *v5, v41, v42, v43, v44, v45, v46, v106, v107, (uint64_t)v108, (uint64_t)v109, v110, v111, v112, v113, v114, v115, v116,
    v117);
  if ((v47 & 1) == 0)
    goto LABEL_35;
  v106 = v8;
  v107 = v0;
  v48 = type metadata accessor for TranscriptProtoResponseManifest(0);
  v49 = *(int *)(v48 + 20);
  v108 = v7;
  sub_23F923164((uint64_t)v7 + v49, (uint64_t)v40);
  v50 = v48;
  v51 = *(int *)(v48 + 20);
  v109 = v5;
  sub_23F923164((uint64_t)v5 + v51, v3);
  v52 = v1 + *(int *)(v34 + 48);
  v53 = sub_23F7A1280();
  sub_23F923164(v53, v54);
  sub_23F923164(v3, v52);
  sub_23F6B5164(v1, 1, v31);
  if (v57)
  {
    sub_23F6B64F4(v3);
    sub_23F6B64F4((uint64_t)v40);
    v56 = sub_23F6B5164(v52, 1, v31);
    if (v57)
    {
      sub_23F6B6034(v56, &qword_256EA8000);
      goto LABEL_12;
    }
LABEL_10:
    v59 = &qword_256EB20B0;
    v60 = v1;
LABEL_34:
    sub_23F6B4F84(v60, v59);
    goto LABEL_35;
  }
  sub_23F923370(v1, v55, &qword_256EA8000);
  sub_23F6B5164(v52, 1, v31);
  if (v57)
  {
    sub_23F6B64F4(v3);
    sub_23F6B64F4((uint64_t)v40);
    sub_23F6D3C24(v58, type metadata accessor for TranscriptProtoResponseDialog);
    goto LABEL_10;
  }
  v61 = v114;
  sub_23F923444(v52, v114);
  static TranscriptProtoResponseDialog.== infix(_:_:)();
  v63 = v62;
  sub_23F6D3928(v61);
  sub_23F6B62DC(v3);
  sub_23F6B62DC((uint64_t)v40);
  sub_23F6D3928(v2);
  sub_23F6B62DC(v1);
  if ((v63 & 1) == 0)
    goto LABEL_35;
LABEL_12:
  v64 = (int *)v48;
  v65 = (uint64_t)v108;
  v66 = v116;
  sub_23F923164((uint64_t)v108 + *(int *)(v48 + 24), v116);
  v67 = (uint64_t)v109;
  v68 = v119;
  sub_23F923164((uint64_t)v109 + *(int *)(v50 + 24), v119);
  v69 = v118;
  v70 = v118 + *(int *)(v115 + 48);
  sub_23F923164(v66, v118);
  v71 = sub_23F6B6AB8();
  sub_23F923164(v71, v72);
  v73 = sub_23F6D3CB4();
  v74 = v117;
  sub_23F6B5164(v73, v75, v117);
  if (v57)
  {
    sub_23F6B64F4(v68);
    sub_23F6B64F4(v66);
    v77 = sub_23F6B5164(v70, 1, v74);
    if (v57)
    {
      sub_23F6D378C(v77, &qword_256EA8008);
      goto LABEL_17;
    }
    goto LABEL_28;
  }
  v84 = v107;
  sub_23F923640(v69, v76, &qword_256EA8008);
  sub_23F6B5164(v70, 1, v74);
  if (v85)
  {
    sub_23F6B64F4(v68);
    sub_23F6B64F4(v66);
    sub_23F72E404(v86, type metadata accessor for TranscriptProtoResponseVisual);
LABEL_28:
    v59 = &qword_256EB20A8;
    v60 = v69;
    goto LABEL_34;
  }
  v87 = v113;
  sub_23F7E76D0(v70, v113, type metadata accessor for TranscriptProtoResponseVisual);
  sub_23F6972C0();
  if ((v88 & 1) == 0 || (sub_23F69751C(), (v89 & 1) == 0))
  {
    sub_23F6D3928(v87);
    sub_23F6D3748(v119);
    sub_23F6D3748(v66);
    sub_23F6D3928(v84);
    v60 = v69;
    v59 = &qword_256EA8008;
    goto LABEL_34;
  }
  sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  sub_23F6B5994();
  v90 = sub_23F923CF8();
  sub_23F6D38A0(v87);
  sub_23F6D3C1C(v119);
  sub_23F6D3C1C(v66);
  sub_23F6D38A0(v84);
  sub_23F6D3C1C(v69);
  if ((v90 & 1) == 0)
    goto LABEL_35;
LABEL_17:
  sub_23F924248();
  if (v80)
  {
    if (!v78)
      goto LABEL_35;
    sub_23F6D3998(v79);
    v83 = v57 && v81 == v82;
    if (!v83 && (sub_23F6B5280() & 1) == 0)
      goto LABEL_35;
  }
  else if (v78)
  {
    goto LABEL_35;
  }
  sub_23F924248();
  if (v93)
  {
    if (!v91)
      goto LABEL_35;
    sub_23F6D3998(v92);
    v96 = v57 && v94 == v95;
    if (!v96 && (sub_23F6B5280() & 1) == 0)
      goto LABEL_35;
  }
  else if (v91)
  {
    goto LABEL_35;
  }
  v97 = v64[9];
  v98 = *(unsigned __int8 *)(v65 + v97);
  v99 = *(unsigned __int8 *)(v67 + v97);
  if (v98 == 2)
  {
    if (v99 != 2)
      goto LABEL_35;
  }
  else
  {
    if (v99 == 2)
      goto LABEL_35;
    sub_23F6D3808();
    if ((v100 & 1) == 0)
      goto LABEL_35;
  }
  v101 = v64[10];
  v102 = *(unsigned __int8 *)(v65 + v101);
  v103 = *(unsigned __int8 *)(v67 + v101);
  if (v102 == 2)
  {
    if (v103 == 2)
    {
LABEL_56:
      v104 = sub_23F924B10();
      sub_23F6D3818(v104, v105);
      sub_23F6D3818(v111, v67 + v64[11]);
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F923230();
      sub_23F9232DC();
      sub_23F6D3874(v69);
    }
  }
  else if (v103 != 2 && ((v103 ^ v102) & 1) == 0)
  {
    goto LABEL_56;
  }
LABEL_35:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoResponseManifest.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoResponseManifest, &qword_256EB20B8, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseManifest);
}

unint64_t sub_23F8C9F1C()
{
  static TranscriptProtoResponseManifest.protoMessageName.getter();
  return 0xD00000000000001BLL;
}

#error "23F8C9F48: call analysis failed (funcsize=5)"

void sub_23F8C9F54()
{
  TranscriptProtoResponseManifest.traverse<A>(visitor:)();
}

uint64_t sub_23F8C9F68()
{
  sub_23F6D3458(&qword_256EB3FA8, type metadata accessor for TranscriptProtoResponseManifest, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseManifest);
  return sub_23FB2D784();
}

uint64_t sub_23F8C9FBC()
{
  sub_23F6D3458(&qword_256EA7EF0, type metadata accessor for TranscriptProtoResponseManifest, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseManifest);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8CA000()
{
  sub_23F6D3458(&qword_256EA7EF0, type metadata accessor for TranscriptProtoResponseManifest, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseManifest);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoResponseParameter.protoMessageName.getter()
{
  return sub_23F6D3738(28);
}

uint64_t sub_23F8CA06C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0F58);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0F58);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1E0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "key";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "value";
  *(_QWORD *)(v11 + 8) = 5;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "type";
  *((_QWORD *)v13 + 1) = 4;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "required";
  *((_QWORD *)v15 + 1) = 8;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "format";
  *((_QWORD *)v17 + 1) = 6;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "profanityFilter";
  *((_QWORD *)v19 + 1) = 15;
  v19[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoResponseParameter._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0E60, (uint64_t)qword_256EB0F58, a1);
}

void TranscriptProtoResponseParameter.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;

  sub_23F6B5220();
  sub_23F6D356C();
  if (!v13)
  {
    while ((v14 & 1) == 0)
    {
      sub_23F9249AC();
      if (!(!v25 & v24))
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_23F8CA30C + 4 * byte_23FB74D11[v23]))(v15, v16, v17, v18, v19, v20, v21, v22, a9, v12 + 72, a11, a12);
        return;
      }
      sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoResponseParameter.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F924384();
  sub_23F6D36FC();
  if (!v1 || (sub_23F6D376C(), !v0))
  {
    sub_23F6D3664();
    sub_23F8CA44C(v2);
    if (!v0)
    {
      sub_23F6D3664();
      sub_23F6C7CB4(v3);
      sub_23F6D3664();
      sub_23F8CA4DC(v4);
      sub_23F6D3664();
      sub_23F8CA510(v5);
      sub_23F6D3664();
      sub_23F8CA548(v6);
      type metadata accessor for TranscriptProtoResponseParameter(0);
      sub_23F6D37BC();
    }
  }
  sub_23F6D3674();
}

uint64_t sub_23F8CA44C(uint64_t result)
{
  unint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(result + 24);
  if (v1 >> 60 != 15)
  {
    v2 = *(_QWORD *)(result + 16);
    sub_23F6D1E20(v2, v1);
    sub_23FB2D958();
    return sub_23F6D1E64(v2, v1);
  }
  return result;
}

uint64_t sub_23F8CA4DC(uint64_t result)
{
  if (*(_BYTE *)(result + 48) != 2)
    return sub_23FB2D940();
  return result;
}

uint64_t sub_23F8CA510(uint64_t result)
{
  if (*(_QWORD *)(result + 64))
    return sub_23FB2D9A0();
  return result;
}

uint64_t sub_23F8CA548(uint64_t result)
{
  if (*(_BYTE *)(result + 72) != 2)
    return sub_23FB2D940();
  return result;
}

void static TranscriptProtoResponseParameter.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  int v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  int v25;
  char v26;
  uint64_t v27;

  sub_23F6B50E8();
  sub_23F6D35C0();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6D3834();
  v7 = v7 && v5 == v6;
  if (!v7 && (sub_23F6B5280() & 1) == 0)
    goto LABEL_11;
  v8 = *(_QWORD *)(v2 + 16);
  v9 = *(_QWORD *)(v2 + 24);
  v10 = *(_QWORD *)(v1 + 24);
  if (v9 >> 60 == 15)
  {
    if (v10 >> 60 == 15)
      goto LABEL_13;
LABEL_10:
    v11 = sub_23F92461C();
    sub_23F6D1E64(v11, v12);
    sub_23F924BFC();
    goto LABEL_11;
  }
  if (v10 >> 60 == 15)
    goto LABEL_10;
  v13 = sub_23F92461C();
  v14 = MEMORY[0x242671028](v13);
  sub_23F924BFC();
  sub_23F6D1E64(v8, v9);
  if ((v14 & 1) == 0)
    goto LABEL_11;
LABEL_13:
  sub_23F924A74();
  if (v16)
  {
    if (!v15)
      goto LABEL_11;
    sub_23F924238();
    v19 = v7 && v17 == v18;
    if (!v19 && (sub_23F6B5280() & 1) == 0)
      goto LABEL_11;
  }
  else if (v15)
  {
    goto LABEL_11;
  }
  v20 = *(unsigned __int8 *)(v1 + 48);
  if (*(_BYTE *)(v2 + 48) == 2)
  {
    if (v20 != 2)
      goto LABEL_11;
  }
  else
  {
    if (v20 == 2)
      goto LABEL_11;
    sub_23F6D3808();
    if ((v21 & 1) == 0)
      goto LABEL_11;
  }
  v22 = *(_QWORD *)(v2 + 64);
  v23 = *(_QWORD *)(v1 + 64);
  if (v22)
  {
    if (!v23)
      goto LABEL_11;
    v24 = *(_QWORD *)(v2 + 56) == *(_QWORD *)(v1 + 56) && v22 == v23;
    if (!v24 && (sub_23F6B5280() & 1) == 0)
      goto LABEL_11;
  }
  else if (v23)
  {
    goto LABEL_11;
  }
  v25 = *(unsigned __int8 *)(v1 + 72);
  if (*(_BYTE *)(v2 + 72) == 2)
  {
    if (v25 == 2)
    {
LABEL_41:
      v27 = type metadata accessor for TranscriptProtoResponseParameter(0);
      sub_23F923308(v0, v2 + *(int *)(v27 + 40));
      sub_23F6D36AC(*(int *)(v27 + 40));
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6D3600();
      sub_23F6D36D0();
      sub_23F6D3820(v0);
    }
  }
  else if (v25 != 2)
  {
    sub_23F6D3808();
    if ((v26 & 1) != 0)
      goto LABEL_41;
  }
LABEL_11:
  sub_23F693DDC();
}

uint64_t TranscriptProtoResponseParameter.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoResponseParameter, &qword_256EB20C0, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseParameter);
}

unint64_t sub_23F8CA78C()
{
  static TranscriptProtoResponseParameter.protoMessageName.getter();
  return 0xD00000000000001CLL;
}

#error "23F8CA7B8: call analysis failed (funcsize=5)"

void sub_23F8CA7C4()
{
  TranscriptProtoResponseParameter.traverse<A>(visitor:)();
}

uint64_t sub_23F8CA7D8()
{
  sub_23F6D3458(&qword_256EB3FA0, type metadata accessor for TranscriptProtoResponseParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseParameter);
  return sub_23FB2D784();
}

uint64_t sub_23F8CA82C()
{
  sub_23F6D3458(&qword_256EB20A0, type metadata accessor for TranscriptProtoResponseParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseParameter);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8CA870()
{
  sub_23F6D3458(&qword_256EB20A0, type metadata accessor for TranscriptProtoResponseParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseParameter);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoResponseVisual.protoMessageName.getter()
{
  return sub_23F6D3738(25);
}

uint64_t sub_23F8CA8DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0F70);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0F70);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 4;
  *(_QWORD *)v7 = "views";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 5;
  *(_QWORD *)v11 = "labels";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoResponseVisual._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0E68, (uint64_t)qword_256EB0F70, a1);
}

void TranscriptProtoResponseVisual.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 5)
      {
        sub_23F6D3598();
        sub_23F924B24();
      }
      else if (v1 == 4)
      {
        sub_23F923BAC();
        sub_23F6C7398();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoResponseVisual.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6D3DC4();
  sub_23F9233B4();
  if (!v2
    || (type metadata accessor for TranscriptProtoUIType(0),
        sub_23F6D3458(&qword_256EB20C8, type metadata accessor for TranscriptProtoUIType, (uint64_t)&protocol conformance descriptor for TranscriptProtoUIType), sub_23F923350(), !v0))
  {
    if (!*(_QWORD *)(*(_QWORD *)(v1 + 8) + 16)
      || (type metadata accessor for TranscriptProtoUILabel(0),
          sub_23F6D3458(&qword_256EB20D0, type metadata accessor for TranscriptProtoUILabel, (uint64_t)&protocol conformance descriptor for TranscriptProtoUILabel), sub_23F923350(), !v0))
    {
      type metadata accessor for TranscriptProtoResponseVisual(0);
      sub_23F9231A8();
    }
  }
  sub_23F6D3710();
}

void static TranscriptProtoResponseVisual.== infix(_:_:)()
{
  sub_23F8D1DF4();
}

uint64_t TranscriptProtoResponseVisual.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoResponseVisual, &qword_256EB20D8, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseVisual);
}

unint64_t sub_23F8CABEC()
{
  static TranscriptProtoResponseVisual.protoMessageName.getter();
  return 0xD000000000000019;
}

void sub_23F8CAC10()
{
  TranscriptProtoResponseVisual.decodeMessage<A>(decoder:)();
}

void sub_23F8CAC24()
{
  TranscriptProtoResponseVisual.traverse<A>(visitor:)();
}

uint64_t sub_23F8CAC38()
{
  sub_23F6D3458(&qword_256EB3F98, type metadata accessor for TranscriptProtoResponseVisual, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseVisual);
  return sub_23FB2D784();
}

uint64_t sub_23F8CAC8C()
{
  sub_23F6D3458(&qword_256EB2FC8, type metadata accessor for TranscriptProtoResponseVisual, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseVisual);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8CACD0()
{
  sub_23F6D3458(&qword_256EB2FC8, type metadata accessor for TranscriptProtoResponseVisual, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseVisual);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoUIType.protoMessageName.getter()
{
  return sub_23F6D3738(17);
}

uint64_t sub_23F8CAD3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0F88);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0F88);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1C0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "archiveView";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "liveActivity";
  *(_QWORD *)(v11 + 8) = 12;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 4;
  *(_QWORD *)v13 = "pluginSnippet";
  *((_QWORD *)v13 + 1) = 13;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 5;
  *(_QWORD *)v15 = "controlSnippet";
  *((_QWORD *)v15 + 1) = 14;
  v15[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoUIType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0E70, (uint64_t)qword_256EB0F88, a1);
}

void TranscriptProtoUIType.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  char v1;
  char v3;
  char v4;

  sub_23F6D356C();
  if (!v0)
  {
    while ((v1 & 1) == 0)
    {
      sub_23F923FB0();
      if (!(!v4 & v3))
        __asm { BR              X9 }
      sub_23F6D35E8();
    }
  }
  sub_23F6D377C();
}

void sub_23F8CAFA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoArchiveViewPayload(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA2650);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoUitype(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4520);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA2650);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA2650);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoUitype);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoUitype);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoUitype);
    }
    else
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4520);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoArchiveViewPayload);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoArchiveViewPayload);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3018, type metadata accessor for TranscriptProtoArchiveViewPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoArchiveViewPayload);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4520);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4520);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4520);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoArchiveViewPayload);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4520);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA2650);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoArchiveViewPayload);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8CB38C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA2650);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoUitype(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4528);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA2650);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA2650);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoUitype);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoUitype);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4528);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoLiveActivityPayload);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoLiveActivityPayload);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoUitype);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3030, type metadata accessor for TranscriptProtoLiveActivityPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoLiveActivityPayload);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4528);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4528);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4528);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoLiveActivityPayload);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4528);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA2650);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoLiveActivityPayload);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8CB778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoPluginSnippetPayload(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA2650);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoUitype(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4530);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA2650);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA2650);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoUitype);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoUitype);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4530);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoPluginSnippetPayload);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoPluginSnippetPayload);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoUitype);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3048, type metadata accessor for TranscriptProtoPluginSnippetPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPluginSnippetPayload);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4530);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4530);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4530);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoPluginSnippetPayload);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4530);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA2650);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoPluginSnippetPayload);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8CBB64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoControlPayload(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA2650);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoUitype(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4538);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA2650);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA2650);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoUitype);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoUitype);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4538);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoControlPayload);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoControlPayload);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoUitype);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3060, type metadata accessor for TranscriptProtoControlPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoControlPayload);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4538);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4538);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4538);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoControlPayload);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4538);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA2650);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoControlPayload);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

#error "23F8CBF84: call analysis failed (funcsize=31)"

void sub_23F8CC014(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA2650);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoArchiveViewPayload(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA2650);
  v8 = type metadata accessor for TranscriptProtoUitype(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA2650);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoArchiveViewPayload);
      sub_23F6D3458(&qword_256EB3018, type metadata accessor for TranscriptProtoArchiveViewPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoArchiveViewPayload);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoArchiveViewPayload);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoUitype);
  }
  __break(1u);
}

void sub_23F8CC1A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA2650);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA2650);
  v8 = type metadata accessor for TranscriptProtoUitype(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA2650);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoLiveActivityPayload);
      sub_23F6D3458(&qword_256EB3030, type metadata accessor for TranscriptProtoLiveActivityPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoLiveActivityPayload);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoLiveActivityPayload);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoUitype);
  }
  __break(1u);
}

void sub_23F8CC340(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA2650);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoPluginSnippetPayload(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA2650);
  v8 = type metadata accessor for TranscriptProtoUitype(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA2650);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoPluginSnippetPayload);
      sub_23F6D3458(&qword_256EB3048, type metadata accessor for TranscriptProtoPluginSnippetPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPluginSnippetPayload);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoPluginSnippetPayload);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoUitype);
  }
  __break(1u);
}

void sub_23F8CC4D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA2650);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoControlPayload(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA2650);
  v8 = type metadata accessor for TranscriptProtoUitype(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA2650);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoControlPayload);
      sub_23F6D3458(&qword_256EB3060, type metadata accessor for TranscriptProtoControlPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoControlPayload);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoControlPayload);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoUitype);
  }
  __break(1u);
}

void static TranscriptProtoUIType.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F6B50E8();
  v5 = v4;
  v39 = sub_23F6B53A4();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v39);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = sub_23F6D38F8(v9, v10, v11, v12, v13, v14, v15, v16, v40);
  type metadata accessor for TranscriptProtoUitype(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B59E0();
  v19 = sub_23F6916B8(&qword_256EA2658);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6D3A70();
  v24 = MEMORY[0x24BDAC7A8](v23);
  sub_23F923124(v24, v25, v26, v27, v28, v29, v30, v31, v41);
  sub_23F923164(v5, v0);
  v32 = v1 + *(int *)(v19 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v32);
  v33 = sub_23F9230E4(v1);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v35 = sub_23F9230E4(v32);
    if (v36)
    {
      sub_23F6D378C(v35, &qword_256EA2650);
LABEL_11:
      v38 = type metadata accessor for TranscriptProtoUIType(0);
      sub_23F6D3794(v38);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v33, v34, &qword_256EA2650);
  sub_23F9230E4(v32);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v37, type metadata accessor for TranscriptProtoUitype);
LABEL_9:
    sub_23F6D378C(v35, &qword_256EA2658);
    goto LABEL_12;
  }
  sub_23F923270();
  sub_23F6D3D70();
  static TranscriptProtoUitype.== infix(_:_:)();
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoUIType.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoUIType, &qword_256EB20E0, (uint64_t)&protocol conformance descriptor for TranscriptProtoUIType);
}

unint64_t sub_23F8CC8A4()
{
  static TranscriptProtoUIType.protoMessageName.getter();
  return 0xD000000000000011;
}

void sub_23F8CC8C8()
{
  TranscriptProtoUIType.decodeMessage<A>(decoder:)();
}

uint64_t sub_23F8CC8DC()
{
  return TranscriptProtoUIType.traverse<A>(visitor:)();
}

uint64_t sub_23F8CC8F0()
{
  sub_23F6D3458(&qword_256EB3F90, type metadata accessor for TranscriptProtoUIType, (uint64_t)&protocol conformance descriptor for TranscriptProtoUIType);
  return sub_23FB2D784();
}

uint64_t sub_23F8CC944()
{
  sub_23F6D3458(&qword_256EB20C8, type metadata accessor for TranscriptProtoUIType, (uint64_t)&protocol conformance descriptor for TranscriptProtoUIType);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8CC988()
{
  sub_23F6D3458(&qword_256EB20C8, type metadata accessor for TranscriptProtoUIType, (uint64_t)&protocol conformance descriptor for TranscriptProtoUIType);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoUILabel.protoMessageName.getter()
{
  return sub_23F6D3738(18);
}

uint64_t sub_23F8CC9F4()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoUILabel._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0E78, (uint64_t)&unk_256EB0FA0, a1);
}

void TranscriptProtoUILabel.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F8BBD08(a1, a2);
}

void sub_23F8CCA48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a2;
  v37 = a4;
  v36 = a3;
  v5 = type metadata accessor for TranscriptProtoUIConfirmationLabel(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v33 = (uint64_t)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v29 - v8;
  v10 = sub_23F6916B8(&qword_256EA2640);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoLabel(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v29 - v17;
  v19 = sub_23F6916B8(&qword_256EB4518);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v29 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v29 - v23, 1, 1, v5);
  v31 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA2640);
  v30 = v13;
  v32 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA2640);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoLabel);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoLabel);
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4518);
    sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoUIConfirmationLabel);
    sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoUIConfirmationLabel);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
  }
  v25 = v34;
  sub_23F6D3458(&qword_256EB3000, type metadata accessor for TranscriptProtoUIConfirmationLabel, (uint64_t)&protocol conformance descriptor for TranscriptProtoUIConfirmationLabel);
  sub_23FB2D8B0();
  if (v25)
  {
    v26 = (uint64_t)v24;
LABEL_8:
    sub_23F6B4F84(v26, &qword_256EB4518);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4518);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4518);
    v26 = (uint64_t)v22;
    goto LABEL_8;
  }
  v27 = v33;
  sub_23F7E76D0((uint64_t)v22, v33, type metadata accessor for TranscriptProtoUIConfirmationLabel);
  if (v32 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4518);
  v28 = v31;
  sub_23F6B4F84(v31, &qword_256EA2640);
  sub_23F7E76D0(v27, v28, type metadata accessor for TranscriptProtoUIConfirmationLabel);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v28, 0, 1, v30);
}

void TranscriptProtoUILabel.traverse<A>(visitor:)()
{
  sub_23F8CCE14();
}

void sub_23F8CCE14()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);

  sub_23F6D3EA4();
  v1 = sub_23F92419C();
  v2(v1);
  if (!v0)
  {
    sub_23F923AF0();
    sub_23F6D3A68();
  }
  sub_23F6D3750();
}

void sub_23F8CCE6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA2640);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoUIConfirmationLabel(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA2640);
  v8 = type metadata accessor for TranscriptProtoLabel(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA2640);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoUIConfirmationLabel);
    sub_23F6D3458(&qword_256EB3000, type metadata accessor for TranscriptProtoUIConfirmationLabel, (uint64_t)&protocol conformance descriptor for TranscriptProtoUIConfirmationLabel);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoUIConfirmationLabel);
  }
}

void static TranscriptProtoUILabel.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F6B50E8();
  v5 = v4;
  v39 = sub_23F6B53A4();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v39);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = sub_23F6D38F8(v9, v10, v11, v12, v13, v14, v15, v16, v40);
  type metadata accessor for TranscriptProtoLabel(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B59E0();
  v19 = sub_23F6916B8(&qword_256EA2648);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6D3A70();
  v24 = MEMORY[0x24BDAC7A8](v23);
  sub_23F923124(v24, v25, v26, v27, v28, v29, v30, v31, v41);
  sub_23F923164(v5, v0);
  v32 = v1 + *(int *)(v19 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v32);
  v33 = sub_23F9230E4(v1);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v35 = sub_23F9230E4(v32);
    if (v36)
    {
      sub_23F6D378C(v35, &qword_256EA2640);
LABEL_11:
      v38 = type metadata accessor for TranscriptProtoUILabel(0);
      sub_23F6D3794(v38);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v33, v34, &qword_256EA2640);
  sub_23F9230E4(v32);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v37, type metadata accessor for TranscriptProtoLabel);
LABEL_9:
    sub_23F6D378C(v35, &qword_256EA2648);
    goto LABEL_12;
  }
  sub_23F923270();
  sub_23F6D3D70();
  static TranscriptProtoLabel.== infix(_:_:)();
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoUILabel.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoUILabel, &qword_256EB20E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoUILabel);
}

unint64_t sub_23F8CD20C()
{
  static TranscriptProtoUILabel.protoMessageName.getter();
  return 0xD000000000000012;
}

void sub_23F8CD230(uint64_t a1, uint64_t a2)
{
  TranscriptProtoUILabel.decodeMessage<A>(decoder:)(a1, a2);
}

void sub_23F8CD244()
{
  TranscriptProtoUILabel.traverse<A>(visitor:)();
}

uint64_t sub_23F8CD258()
{
  sub_23F6D3458(&qword_256EB3F88, type metadata accessor for TranscriptProtoUILabel, (uint64_t)&protocol conformance descriptor for TranscriptProtoUILabel);
  return sub_23FB2D784();
}

uint64_t sub_23F8CD2AC()
{
  sub_23F6D3458(&qword_256EB20D0, type metadata accessor for TranscriptProtoUILabel, (uint64_t)&protocol conformance descriptor for TranscriptProtoUILabel);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8CD2F0()
{
  sub_23F6D3458(&qword_256EB20D0, type metadata accessor for TranscriptProtoUILabel, (uint64_t)&protocol conformance descriptor for TranscriptProtoUILabel);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoUIConfirmationLabel.protoMessageName.getter()
{
  return sub_23F6D3738(30);
}

uint64_t sub_23F8CD35C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0FB8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0FB8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "affirmative";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "negative";
  *((_QWORD *)v11 + 1) = 8;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoUIConfirmationLabel._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0E80, (uint64_t)qword_256EB0FB8, a1);
}

void TranscriptProtoUIConfirmationLabel.decodeMessage<A>(decoder:)()
{
  sub_23F8CDFF0();
}

void TranscriptProtoUIConfirmationLabel.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6D36FC();
  if (!v1 || (sub_23F923258(), !v0))
  {
    sub_23F6D36FC();
    if (!v2 || (sub_23F923258(), !v0))
    {
      type metadata accessor for TranscriptProtoUIConfirmationLabel(0);
      sub_23F9231A8();
    }
  }
  sub_23F6D3674();
}

void static TranscriptProtoUIConfirmationLabel.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F6D36BC();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F6D3834();
  v5 = v5 && v3 == v4;
  if (v5 || (sub_23F6B5280() & 1) != 0)
  {
    sub_23F923C24();
    v8 = v5 && v6 == v7;
    if (v8 || (sub_23F6B5280() & 1) != 0)
    {
      v9 = type metadata accessor for TranscriptProtoUIConfirmationLabel(0);
      sub_23F6D3614(*(int *)(v9 + 24));
      sub_23F6D36AC(*(int *)(v9 + 24));
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6D3600();
      sub_23F6D36D0();
      sub_23F6D3820(v0);
    }
  }
  sub_23F6D3B34();
  sub_23F6B69E0();
}

uint64_t TranscriptProtoUIConfirmationLabel.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoUIConfirmationLabel, &qword_256EB20F0, (uint64_t)&protocol conformance descriptor for TranscriptProtoUIConfirmationLabel);
}

unint64_t sub_23F8CD650()
{
  static TranscriptProtoUIConfirmationLabel.protoMessageName.getter();
  return 0xD00000000000001ELL;
}

void sub_23F8CD674()
{
  TranscriptProtoUIConfirmationLabel.decodeMessage<A>(decoder:)();
}

void sub_23F8CD688()
{
  TranscriptProtoUIConfirmationLabel.traverse<A>(visitor:)();
}

uint64_t sub_23F8CD69C()
{
  sub_23F6D3458(&qword_256EB3F80, type metadata accessor for TranscriptProtoUIConfirmationLabel, (uint64_t)&protocol conformance descriptor for TranscriptProtoUIConfirmationLabel);
  return sub_23FB2D784();
}

uint64_t sub_23F8CD6F0()
{
  sub_23F6D3458(&qword_256EB3000, type metadata accessor for TranscriptProtoUIConfirmationLabel, (uint64_t)&protocol conformance descriptor for TranscriptProtoUIConfirmationLabel);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8CD734()
{
  sub_23F6D3458(&qword_256EB3000, type metadata accessor for TranscriptProtoUIConfirmationLabel, (uint64_t)&protocol conformance descriptor for TranscriptProtoUIConfirmationLabel);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoArchiveViewPayload.protoMessageName.getter()
{
  return sub_23F6D3738(29);
}

uint64_t sub_23F8CD7A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB0FD0);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB0FD0);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "viewData";
  *(_QWORD *)(v7 + 8) = 8;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "containerBundleId";
  *((_QWORD *)v11 + 1) = 17;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "targetBundleId";
  *((_QWORD *)v13 + 1) = 14;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoArchiveViewPayload._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0E88, (uint64_t)qword_256EB0FD0, a1);
}

void TranscriptProtoArchiveViewPayload.decodeMessage<A>(decoder:)()
{
  sub_23F90C108();
}

void TranscriptProtoArchiveViewPayload.traverse<A>(visitor:)()
{
  __asm { BR              X10 }
}

void sub_23F8CD9B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if ((a2 & 0xFF000000000000) == 0 || (sub_23F9239EC(), !v2))
  {
    sub_23F9240A8();
    if (!v2)
    {
      sub_23F9240C4();
      type metadata accessor for TranscriptProtoArchiveViewPayload(0);
      sub_23F9231A8();
    }
  }
  sub_23F6D3674();
}

void static TranscriptProtoArchiveViewPayload.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F6D36BC();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F923860();
}

void sub_23F8CDA68(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if ((a1 & 1) == 0)
    goto LABEL_20;
  sub_23F924BD8();
  if (!v3)
  {
    if (v2)
      goto LABEL_20;
LABEL_11:
    sub_23F924A74();
    if (v8)
    {
      if (!v7)
        goto LABEL_20;
      sub_23F924238();
      v11 = v6 && v9 == v10;
      if (!v11 && (sub_23F6B5280() & 1) == 0)
        goto LABEL_20;
    }
    else if (v7)
    {
      goto LABEL_20;
    }
    v12 = type metadata accessor for TranscriptProtoArchiveViewPayload(0);
    sub_23F6D3614(*(int *)(v12 + 28));
    sub_23F6D36AC(*(int *)(v12 + 28));
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F6D3600();
    sub_23F6D36D0();
    sub_23F6D3820(v1);
    goto LABEL_20;
  }
  if (v2)
  {
    sub_23F924208();
    v6 = v6 && v4 == v5;
    if (v6 || (sub_23F6B5280() & 1) != 0)
      goto LABEL_11;
  }
LABEL_20:
  sub_23F6D3B34();
  sub_23F6B69E0();
}

uint64_t TranscriptProtoArchiveViewPayload.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoArchiveViewPayload, &qword_256EB20F8, (uint64_t)&protocol conformance descriptor for TranscriptProtoArchiveViewPayload);
}

unint64_t sub_23F8CDB40()
{
  static TranscriptProtoArchiveViewPayload.protoMessageName.getter();
  return 0xD00000000000001DLL;
}

void sub_23F8CDB64()
{
  TranscriptProtoArchiveViewPayload.decodeMessage<A>(decoder:)();
}

void sub_23F8CDB78()
{
  TranscriptProtoArchiveViewPayload.traverse<A>(visitor:)();
}

uint64_t sub_23F8CDB8C()
{
  sub_23F6D3458(&qword_256EB3F78, type metadata accessor for TranscriptProtoArchiveViewPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoArchiveViewPayload);
  return sub_23FB2D784();
}

uint64_t sub_23F8CDBE0()
{
  sub_23F6D3458(&qword_256EB3018, type metadata accessor for TranscriptProtoArchiveViewPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoArchiveViewPayload);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8CDC24()
{
  sub_23F6D3458(&qword_256EB3018, type metadata accessor for TranscriptProtoArchiveViewPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoArchiveViewPayload);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoLiveActivityPayload.protoMessageName.getter()
{
  return sub_23F6D3738(30);
}

uint64_t sub_23F8CDC90()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoLiveActivityPayload._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0E90, (uint64_t)&unk_256EB0FE8, a1);
}

void TranscriptProtoLiveActivityPayload.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F9062A8(a1, a2);
}

void TranscriptProtoLiveActivityPayload.traverse<A>(visitor:)()
{
  sub_23F906318();
}

void static TranscriptProtoLiveActivityPayload.== infix(_:_:)()
{
  sub_23F8AB6CC();
}

uint64_t TranscriptProtoLiveActivityPayload.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoLiveActivityPayload, &qword_256EB2100, (uint64_t)&protocol conformance descriptor for TranscriptProtoLiveActivityPayload);
}

unint64_t sub_23F8CDD2C()
{
  static TranscriptProtoLiveActivityPayload.protoMessageName.getter();
  return 0xD00000000000001ELL;
}

void sub_23F8CDD50()
{
  TranscriptProtoLiveActivityPayload.traverse<A>(visitor:)();
}

uint64_t sub_23F8CDD64()
{
  sub_23F6D3458(&qword_256EB3F70, type metadata accessor for TranscriptProtoLiveActivityPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoLiveActivityPayload);
  return sub_23FB2D784();
}

uint64_t sub_23F8CDDB8()
{
  sub_23F6D3458(&qword_256EB3030, type metadata accessor for TranscriptProtoLiveActivityPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoLiveActivityPayload);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8CDDFC()
{
  sub_23F6D3458(&qword_256EB3030, type metadata accessor for TranscriptProtoLiveActivityPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoLiveActivityPayload);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoPluginSnippetPayload.protoMessageName.getter()
{
  return sub_23F6D3738(31);
}

uint64_t sub_23F8CDE68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1000);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1000);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "pluginModelData";
  *(_QWORD *)(v7 + 8) = 15;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "bundleId";
  *((_QWORD *)v11 + 1) = 8;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoPluginSnippetPayload._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0E98, (uint64_t)qword_256EB1000, a1);
}

void TranscriptProtoPluginSnippetPayload.decodeMessage<A>(decoder:)()
{
  sub_23F8CDFF0();
}

void sub_23F8CDFF0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = sub_23F923114();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_23F924610();
      }
      else if (v1 == 1)
      {
        sub_23F92407C();
      }
      v1 = sub_23F924AB8();
    }
  }
  sub_23F6D3674();
}

void TranscriptProtoPluginSnippetPayload.traverse<A>(visitor:)()
{
  sub_23F8CE07C();
}

void sub_23F8CE07C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6B5220();
  sub_23F923E48();
  if ((sub_23F879A40(*(_QWORD *)v0, *(_QWORD *)(v0 + 8)) & 1) != 0 || (sub_23F9239EC(), !v1))
  {
    sub_23F6D36FC();
    if (!v2 || (sub_23F923258(), !v1))
    {
      sub_23F923AF0();
      sub_23F9231A8();
    }
  }
  sub_23F6B5100();
}

void static TranscriptProtoPluginSnippetPayload.== infix(_:_:)()
{
  sub_23F8CE118();
}

void sub_23F8CE118()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F923590();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F923860();
}

void sub_23F8CE158(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  if ((a1 & 1) != 0)
  {
    sub_23F923C24();
    v6 = v6 && v4 == v5;
    if (v6 || (sub_23F6B5280() & 1) != 0)
    {
      v7 = sub_23F923C1C();
      sub_23F923308(v2, v3 + *(int *)(v7 + 24));
      sub_23F6D36AC(*(int *)(v7 + 24));
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6D3600();
      sub_23F6D3820(v1);
      sub_23F6D3820(v2);
    }
  }
  sub_23F924700();
  sub_23F6B69E0();
}

uint64_t TranscriptProtoPluginSnippetPayload.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoPluginSnippetPayload, &qword_256EB2108, (uint64_t)&protocol conformance descriptor for TranscriptProtoPluginSnippetPayload);
}

unint64_t sub_23F8CE204()
{
  static TranscriptProtoPluginSnippetPayload.protoMessageName.getter();
  return 0xD00000000000001FLL;
}

void sub_23F8CE228()
{
  TranscriptProtoPluginSnippetPayload.traverse<A>(visitor:)();
}

uint64_t sub_23F8CE23C()
{
  sub_23F6D3458(&qword_256EB3F68, type metadata accessor for TranscriptProtoPluginSnippetPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPluginSnippetPayload);
  return sub_23FB2D784();
}

uint64_t sub_23F8CE290()
{
  sub_23F6D3458(&qword_256EB3048, type metadata accessor for TranscriptProtoPluginSnippetPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPluginSnippetPayload);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8CE2D4()
{
  sub_23F6D3458(&qword_256EB3048, type metadata accessor for TranscriptProtoPluginSnippetPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPluginSnippetPayload);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoControlPayload.protoMessageName.getter()
{
  return sub_23F6D3738(25);
}

uint64_t sub_23F8CE340()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoControlPayload._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0EA0, (uint64_t)&unk_256EB1018, a1);
}

void TranscriptProtoControlPayload.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F9062A8(a1, a2);
}

uint64_t TranscriptProtoControlPayload.traverse<A>(visitor:)()
{
  return sub_23F8CE3B0();
}

uint64_t sub_23F8CE3B0()
{
  _QWORD *v0;

  sub_23F6D3EA4();
  return ((uint64_t (*)(_QWORD))((char *)sub_23F8CE3FC + 4 * byte_23FB74D24[v0[1] >> 62]))(*v0);
}

void sub_23F8CE3FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if ((a2 & 0xFF000000000000) == 0 || (sub_23F9239EC(), !v2))
  {
    sub_23F923AF0();
    sub_23F9231A8();
  }
  sub_23F6D3750();
}

void static TranscriptProtoControlPayload.== infix(_:_:)()
{
  sub_23F8CE464();
}

void sub_23F8CE464()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F6D36BC();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F923860();
}

void sub_23F8CE4A4(char a1)
{
  uint64_t v1;
  uint64_t v2;

  if ((a1 & 1) != 0)
  {
    v2 = sub_23F923C1C();
    sub_23F6D3614(*(int *)(v2 + 20));
    sub_23F6D36AC(*(int *)(v2 + 20));
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F6D3600();
    sub_23F6D3A04();
    sub_23F6D3BD0(v1);
  }
  sub_23F923E3C();
  sub_23F6B69E0();
}

uint64_t TranscriptProtoControlPayload.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoControlPayload, &qword_256EB2110, (uint64_t)&protocol conformance descriptor for TranscriptProtoControlPayload);
}

unint64_t sub_23F8CE520()
{
  static TranscriptProtoControlPayload.protoMessageName.getter();
  return 0xD000000000000019;
}

uint64_t sub_23F8CE544()
{
  return TranscriptProtoControlPayload.traverse<A>(visitor:)();
}

uint64_t sub_23F8CE558()
{
  sub_23F6D3458(&qword_256EB3F60, type metadata accessor for TranscriptProtoControlPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoControlPayload);
  return sub_23FB2D784();
}

uint64_t sub_23F8CE5AC()
{
  sub_23F6D3458(&qword_256EB3060, type metadata accessor for TranscriptProtoControlPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoControlPayload);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8CE5F0()
{
  sub_23F6D3458(&qword_256EB3060, type metadata accessor for TranscriptProtoControlPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoControlPayload);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoSystemPromptResolution.protoMessageName.getter()
{
  return sub_23F6D3738(33);
}

uint64_t sub_23F8CE65C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1030);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1030);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F190;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "actionEventId";
  *(_QWORD *)(v7 + 8) = 13;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "userAction";
  *(_QWORD *)(v11 + 8) = 10;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "systemResponseEventId";
  *((_QWORD *)v13 + 1) = 21;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "statementId";
  *((_QWORD *)v15 + 1) = 11;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 6;
  *(_QWORD *)v17 = "input";
  *((_QWORD *)v17 + 1) = 5;
  v17[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoSystemPromptResolution._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0EA8, (uint64_t)qword_256EB1030, a1);
}

void TranscriptProtoSystemPromptResolution.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;

  sub_23F6B5220();
  sub_23F6D356C();
  if (!v12)
  {
    while ((v13 & 1) == 0)
    {
      sub_23F9249AC();
      if (!(!v24 & v23))
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_23F8CE8D0 + 4 * byte_23FB74D28[v22]))(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10, a11, a12);
        return;
      }
      sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoSystemPromptResolution.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = sub_23F923EF8();
  sub_23F6C7C88(v1);
  if (!v0)
  {
    sub_23F6D3664();
    sub_23F8CEA20(v2);
    sub_23F6D36FC();
    if (v3)
      sub_23F6D376C();
    sub_23F6D3664();
    sub_23F8CEB90(v4);
    sub_23F6D3664();
    sub_23F8CED00(v5);
    type metadata accessor for TranscriptProtoSystemPromptResolution(0);
    sub_23F6D37BC();
  }
  sub_23F6D3674();
}

void sub_23F8CEA20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA8658);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_256EA8658);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA8658);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction);
    sub_23F6D3458(&qword_256EB3190, type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionUserAction);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction);
  }
}

void sub_23F8CEB90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 28), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void sub_23F8CED00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA8648);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 32), (uint64_t)v4, &qword_256EA8648);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA8648);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSystemPromptResolutionInput);
    sub_23F6D3458(&qword_256EB3090, type metadata accessor for TranscriptProtoSystemPromptResolutionInput, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionInput);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoSystemPromptResolutionInput);
  }
}

void static TranscriptProtoSystemPromptResolution.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  BOOL v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  char v56;
  char v57;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;

  sub_23F6B50E8();
  v6 = v5;
  v8 = v7;
  v9 = sub_23F6B53A4();
  v98 = *(_QWORD *)(v9 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v97 = (uint64_t)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B6580();
  v96 = v13;
  v14 = sub_23F6D398C();
  v101 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(v14);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B51A4();
  v95 = v16;
  v100 = sub_23F6916B8(&qword_256EB2118);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B582C(v18, v93);
  sub_23F6916B8(&qword_256EA8648);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v19);
  v106 = (char *)&v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v21);
  v104 = (char *)&v93 - v22;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v23);
  v105 = (char *)&v93 - v24;
  v109 = sub_23F923344();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F6B5848(v26, v93);
  v107 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F6B5420(v28, v93);
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v29);
  v103 = (char *)&v93 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v31);
  v111 = (uint64_t)&v93 - v32;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v33);
  v108 = (uint64_t)&v93 - v34;
  v35 = sub_23F6D398C();
  v36 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(v35);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F693EB0();
  v38 = sub_23F6916B8(&qword_256EB2120);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F6B6B5C();
  sub_23F6916B8(&qword_256EA8658);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F72E168();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F6B62F8();
  v112 = v8;
  v113 = v6;
  v43 = v8[3];
  v44 = v6[3];
  if (!v43)
  {
    v94 = v9;
    v45 = v112;
    if (v44)
      goto LABEL_36;
LABEL_10:
    v47 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
    sub_23F923368((uint64_t)v45 + v47[6], v3);
    v48 = sub_23F923B30(v47[6]);
    sub_23F923368(v48, v2);
    v49 = v0 + *(int *)(v38 + 48);
    sub_23F923368(v3, v0);
    sub_23F923368(v2, v49);
    sub_23F6B5164(v0, 1, v36);
    if (v46)
    {
      sub_23F6B62DC(v2);
      sub_23F6B62DC(v3);
      v51 = sub_23F6B5164(v49, 1, v36);
      if (v46)
      {
        sub_23F9239A0(v51, &qword_256EA8658);
        goto LABEL_21;
      }
    }
    else
    {
      sub_23F923370(v0, v50, &qword_256EA8658);
      sub_23F6B5164(v49, 1, v36);
      if (!v52)
      {
        sub_23F923774(v49, v1);
        static TranscriptProtoSystemPromptResolutionUserAction.== infix(_:_:)();
        v57 = v56;
        sub_23F77DB60(v1);
        sub_23F6B62DC(v2);
        sub_23F6B62DC(v3);
        sub_23F77DB60(v4);
        sub_23F6B62DC(v0);
        if ((v57 & 1) == 0)
          goto LABEL_36;
LABEL_21:
        v58 = *v45 == *v113 && v45[1] == v113[1];
        if (!v58 && (sub_23F6B5280() & 1) == 0)
          goto LABEL_36;
        v59 = v108;
        sub_23F923268((uint64_t)v45 + v47[7], v108);
        v60 = sub_23F923B30(v47[7]);
        v61 = v111;
        sub_23F923268(v60, v111);
        sub_23F924AD0();
        v62 = v110;
        v64 = v110 + v63;
        sub_23F923268(v59, v110);
        sub_23F923268(v61, v64);
        v65 = sub_23F923D00();
        v66 = v109;
        sub_23F6B5164(v65, v67, v109);
        if (v46)
        {
          sub_23F6D3748(v61);
          sub_23F6D3748(v59);
          v69 = sub_23F6B5164(v64, 1, v66);
          v71 = (uint64_t)v105;
          v70 = (uint64_t)v106;
          v72 = (uint64_t)v104;
          if (v46)
          {
            sub_23F923588(v69, &qword_256EA25E0);
LABEL_38:
            v79 = sub_23F92489C(v47[8]);
            sub_23F923268(v79, v71);
            sub_23F923268((uint64_t)v113 + v47[8], v72);
            v0 = v102;
            v80 = v102 + *(int *)(v100 + 48);
            sub_23F923268(v71, v102);
            sub_23F923268(v72, v80);
            v81 = sub_23F6B6F68();
            v82 = v101;
            sub_23F6B5164(v81, v83, v101);
            if (v46)
            {
              sub_23F6D3748(v72);
              sub_23F6D3748(v71);
              v85 = sub_23F6B5164(v80, 1, v82);
              if (v46)
              {
                sub_23F9239A0(v85, &qword_256EA8648);
                goto LABEL_48;
              }
            }
            else
            {
              sub_23F923CD0(v0, v84, &qword_256EA8648);
              sub_23F6B5164(v80, 1, v82);
              if (!v86)
              {
                v88 = v95;
                sub_23F7F6534(v80, v95);
                sub_23F6B6098();
                static TranscriptProtoSystemPromptResolutionInput.== infix(_:_:)();
                v90 = v89;
                sub_23F6D38A0(v88);
                sub_23F6B6EF8(v72);
                sub_23F6B6EF8(v71);
                sub_23F6D38A0(v70);
                sub_23F6B6EF8(v0);
                if ((v90 & 1) == 0)
                  goto LABEL_36;
LABEL_48:
                v91 = v96;
                sub_23F923484(v96, (uint64_t)v112 + v47[9]);
                v92 = v97;
                sub_23F923484(v97, (uint64_t)v113 + v47[9]);
                sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
                sub_23F6B5624();
                sub_23F6D39FC(v92);
                sub_23F6D39FC(v91);
                goto LABEL_36;
              }
              sub_23F6B64F4(v72);
              sub_23F6B64F4(v71);
              sub_23F713FFC(v87, type metadata accessor for TranscriptProtoSystemPromptResolutionInput);
            }
            v54 = &qword_256EB2118;
            goto LABEL_19;
          }
        }
        else
        {
          v73 = (uint64_t)v103;
          sub_23F923640(v62, v68, &qword_256EA25E0);
          sub_23F6B5164(v64, 1, v66);
          v71 = (uint64_t)v105;
          v70 = (uint64_t)v106;
          v72 = (uint64_t)v104;
          if (!v74)
          {
            v76 = v99;
            sub_23F7F6534(v64, v99);
            sub_23F923C58();
            v78 = v77;
            sub_23F6D38A0(v76);
            sub_23F6B6EF8(v111);
            sub_23F6B6EF8(v59);
            sub_23F6D38A0(v73);
            sub_23F6B6EF8(v62);
            if ((v78 & 1) == 0)
              goto LABEL_36;
            goto LABEL_38;
          }
          sub_23F6B64F4(v111);
          sub_23F6B64F4(v59);
          sub_23F72E404(v75, type metadata accessor for TranscriptProtoStatementID);
        }
        v54 = &qword_256EA25E8;
        v55 = v62;
        goto LABEL_35;
      }
      sub_23F6B64F4(v2);
      sub_23F6B64F4(v3);
      sub_23F6D3C24(v53, type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction);
    }
    v54 = &qword_256EB2120;
LABEL_19:
    v55 = v0;
LABEL_35:
    sub_23F6B4F84(v55, v54);
    goto LABEL_36;
  }
  if (v44)
  {
    v94 = v9;
    v45 = v112;
    v46 = v112[2] == v113[2] && v43 == v44;
    if (v46 || (sub_23F6B5280() & 1) != 0)
      goto LABEL_10;
  }
LABEL_36:
  sub_23F693DDC();
}

uint64_t TranscriptProtoSystemPromptResolution.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoSystemPromptResolution, &qword_256EB2128, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolution);
}

unint64_t sub_23F8CF5E8()
{
  static TranscriptProtoSystemPromptResolution.protoMessageName.getter();
  return 0xD000000000000021;
}

#error "23F8CF614: call analysis failed (funcsize=5)"

void sub_23F8CF620()
{
  TranscriptProtoSystemPromptResolution.traverse<A>(visitor:)();
}

uint64_t sub_23F8CF634()
{
  sub_23F6D3458(&qword_256EB3F58, type metadata accessor for TranscriptProtoSystemPromptResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolution);
  return sub_23FB2D784();
}

uint64_t sub_23F8CF688()
{
  sub_23F6D3458(&qword_256EB3078, type metadata accessor for TranscriptProtoSystemPromptResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolution);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8CF6CC()
{
  sub_23F6D3458(&qword_256EB3078, type metadata accessor for TranscriptProtoSystemPromptResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolution);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoSystemPromptResolutionInput.protoMessageName.getter()
{
  return sub_23F6D3738(38);
}

uint64_t sub_23F8CF738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1048);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1048);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1C0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "touch";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "headGesture";
  *(_QWORD *)(v11 + 8) = 11;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "text";
  *((_QWORD *)v13 + 1) = 4;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "speech";
  *((_QWORD *)v15 + 1) = 6;
  v15[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoSystemPromptResolutionInput._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0EB0, (uint64_t)qword_256EB1048, a1);
}

void TranscriptProtoSystemPromptResolutionInput.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;

  sub_23F6D3EA4();
  sub_23F6D356C();
  if (!v10)
  {
    while ((v11 & 1) == 0)
    {
      sub_23F6D3E98();
      if (!(!v22 & v21))
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_23F8CF964 + 4 * byte_23FB74D2E[v20]))(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10);
        return;
      }
      sub_23F6D35E8();
    }
  }
  sub_23F6D3750();
}

void sub_23F8CF9A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2130);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4508);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2130);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2130);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
    }
    else
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4508);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoRequestContentTextContent);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoRequestContentTextContent);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2790, type metadata accessor for TranscriptProtoRequestContentTextContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentTextContent);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4508);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4508);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4508);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoRequestContentTextContent);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4508);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2130);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoRequestContentTextContent);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8CFD8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoRequestContentSpeechContent(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2130);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4510);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2130);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2130);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4510);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoRequestContentSpeechContent);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoRequestContentSpeechContent);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB27A8, type metadata accessor for TranscriptProtoRequestContentSpeechContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentSpeechContent);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4510);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4510);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4510);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoRequestContentSpeechContent);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4510);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2130);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoRequestContentSpeechContent);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

#error "23F8D01AC: call analysis failed (funcsize=31)"

void sub_23F8D01FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_23F6D38B0();
  sub_23F8D035C(v1);
  sub_23F6D3D20(v2, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
  if (!v0)
    JUMPOUT(0x23F8D01C0);
  JUMPOUT(0x23F8D01D0);
}

void sub_23F8D026C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  int EnumCaseMultiPayload;
  uint64_t v7;

  sub_23F6B5220();
  sub_23F9239D4();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F924130();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F923D84(v3, v7);
  v4 = sub_23F924500();
  sub_23F6B5164(v0, 1, v4);
  if (v5)
  {
    sub_23F923DA8(v0);
  }
  else
  {
    sub_23F8783E8();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_23F77DB80(v0);
    if (EnumCaseMultiPayload == 2)
      sub_23F923D0C();
  }
  __break(1u);
}

void sub_23F8D035C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2130);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2130);
  v8 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2130);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoRequestContentTextContent);
      sub_23F6D3458(&qword_256EB2790, type metadata accessor for TranscriptProtoRequestContentTextContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentTextContent);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoRequestContentTextContent);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
  }
  __break(1u);
}

void sub_23F8D04F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2130);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoRequestContentSpeechContent(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2130);
  v8 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2130);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoRequestContentSpeechContent);
      sub_23F6D3458(&qword_256EB27A8, type metadata accessor for TranscriptProtoRequestContentSpeechContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentSpeechContent);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoRequestContentSpeechContent);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
  }
  __break(1u);
}

void static TranscriptProtoSystemPromptResolutionInput.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F6B50E8();
  v5 = v4;
  v39 = sub_23F6B53A4();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v39);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = sub_23F6D38F8(v9, v10, v11, v12, v13, v14, v15, v16, v40);
  type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B59E0();
  v19 = sub_23F6916B8(&qword_256EB2138);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6D3A70();
  v24 = MEMORY[0x24BDAC7A8](v23);
  sub_23F923124(v24, v25, v26, v27, v28, v29, v30, v31, v41);
  sub_23F923164(v5, v0);
  v32 = v1 + *(int *)(v19 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v32);
  v33 = sub_23F9230E4(v1);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v35 = sub_23F9230E4(v32);
    if (v36)
    {
      sub_23F6D378C(v35, &qword_256EB2130);
LABEL_11:
      v38 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
      sub_23F6D3794(v38);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v33, v34, &qword_256EB2130);
  sub_23F9230E4(v32);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v37, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
LABEL_9:
    sub_23F6D378C(v35, &qword_256EB2138);
    goto LABEL_12;
  }
  sub_23F923270();
  sub_23F6D3D70();
  static TranscriptProtoSystemPromptResolutionInputEnum.== infix(_:_:)();
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoSystemPromptResolutionInput.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoSystemPromptResolutionInput, &qword_256EB2140, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionInput);
}

unint64_t sub_23F8D08BC()
{
  static TranscriptProtoSystemPromptResolutionInput.protoMessageName.getter();
  return 0xD000000000000026;
}

void sub_23F8D08E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  TranscriptProtoSystemPromptResolutionInput.decodeMessage<A>(decoder:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_23F8D08F4()
{
  return TranscriptProtoSystemPromptResolutionInput.traverse<A>(visitor:)();
}

uint64_t sub_23F8D0908()
{
  sub_23F6D3458(&qword_256EB3F50, type metadata accessor for TranscriptProtoSystemPromptResolutionInput, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionInput);
  return sub_23FB2D784();
}

uint64_t sub_23F8D095C()
{
  sub_23F6D3458(&qword_256EB3090, type metadata accessor for TranscriptProtoSystemPromptResolutionInput, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionInput);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8D09A0()
{
  sub_23F6D3458(&qword_256EB3090, type metadata accessor for TranscriptProtoSystemPromptResolutionInput, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionInput);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoActionResponse.protoMessageName.getter()
{
  return sub_23F6D3738(25);
}

uint64_t sub_23F8D0A0C(uint64_t a1)
{
  return sub_23F9187D8(a1, qword_256EB1060);
}

uint64_t static TranscriptProtoActionResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0EB8, (uint64_t)qword_256EB1060, a1);
}

uint64_t TranscriptProtoActionResponse.decodeMessage<A>(decoder:)()
{
  return sub_23F918844();
}

uint64_t TranscriptProtoActionResponse.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoActionResponse, &qword_256EB2148, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResponse);
}

unint64_t sub_23F8D0A6C()
{
  static TranscriptProtoActionResponse.protoMessageName.getter();
  return 0xD000000000000019;
}

uint64_t sub_23F8D0A90()
{
  sub_23F6D3458(&qword_256EB3F48, type metadata accessor for TranscriptProtoActionResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResponse);
  return sub_23FB2D784();
}

uint64_t sub_23F8D0AE4()
{
  sub_23F6D3458(&qword_256EB30A8, type metadata accessor for TranscriptProtoActionResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResponse);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8D0B28()
{
  sub_23F6D3458(&qword_256EB30A8, type metadata accessor for TranscriptProtoActionResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResponse);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoActionResolverRequest.protoMessageName.getter()
{
  return sub_23F6D3738(32);
}

uint64_t sub_23F8D0B90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1078);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1078);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1B0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 2;
  *(_QWORD *)v7 = "toolId";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 3;
  *(_QWORD *)v11 = "resolvedParameters";
  *(_QWORD *)(v11 + 8) = 18;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 4;
  *(_QWORD *)v13 = "unresolvedParameterSets";
  *((_QWORD *)v13 + 1) = 23;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 5;
  *(_QWORD *)v15 = "isClientAction";
  *((_QWORD *)v15 + 1) = 14;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 6;
  *(_QWORD *)v17 = "isConfirmed";
  *((_QWORD *)v17 + 1) = 11;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 7;
  *(_QWORD *)v19 = "statementId";
  *((_QWORD *)v19 + 1) = 11;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 8;
  *(_QWORD *)v21 = "isAuthenticated";
  *((_QWORD *)v21 + 1) = 15;
  v21[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoActionResolverRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0EC0, (uint64_t)qword_256EB1078, a1);
}

void TranscriptProtoActionResolverRequest.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 2:
          sub_23F923334();
          break;
        case 3:
          sub_23F6D3598();
          sub_23F8A092C();
          break;
        case 4:
          sub_23F6D3598();
          sub_23F8B4908();
          break;
        case 5:
        case 6:
        case 8:
          sub_23F6D3F00();
          break;
        case 7:
          sub_23F6D3598();
          sub_23F8D0F00();
          break;
        default:
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

uint64_t sub_23F8D0F00()
{
  type metadata accessor for TranscriptProtoActionResolverRequest(0);
  type metadata accessor for TranscriptProtoStatementID(0);
  sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  return sub_23FB2D8B0();
}

void TranscriptProtoActionResolverRequest.traverse<A>(visitor:)()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6D3DC4();
  sub_23F6D36FC();
  if (!v2 || (sub_23F6D376C(), !v1))
  {
    sub_23F6D3664();
    sub_23F8D10F8(v3);
    if (!v1)
    {
      sub_23F924890();
      if (v4)
      {
        type metadata accessor for TranscriptProtoParameterSet(0);
        sub_23F6D3458(&qword_256EB2150, type metadata accessor for TranscriptProtoParameterSet, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterSet);
        sub_23F6D36E4();
      }
      if (v0[24] == 1)
        sub_23F6D369C();
      if (v0[25] == 1)
        sub_23F6D369C();
      sub_23F6D3664();
      sub_23F8D1268(v5);
      if (v0[26] == 1)
        sub_23F6D369C();
      type metadata accessor for TranscriptProtoActionResolverRequest(0);
      sub_23F6D37BC();
    }
  }
  sub_23F6D3710();
}

void sub_23F8D10F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EAB750);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoParameterSet(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoActionResolverRequest(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 36), (uint64_t)v4, &qword_256EAB750);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB750);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoParameterSet);
    sub_23F6D3458(&qword_256EB2150, type metadata accessor for TranscriptProtoParameterSet, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterSet);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoParameterSet);
  }
}

void sub_23F8D1268(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoActionResolverRequest(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 40), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void static TranscriptProtoActionResolverRequest.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  sub_23F6B50E8();
  v89 = sub_23F6D35C0();
  v81 = *(_QWORD *)(v89 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  v80 = (uint64_t)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v8);
  v79 = (uint64_t)&v77 - v9;
  v87 = sub_23F923344();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B5598(v11, v77);
  v84 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5BD8(v13, v77);
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  v83 = (uint64_t)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v16);
  v85 = (uint64_t)&v77 - v17;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v18);
  v86 = (uint64_t)&v77 - v19;
  v20 = sub_23F6D398C();
  v21 = type metadata accessor for TranscriptProtoParameterSet(v20);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6B5268();
  v23 = sub_23F6916B8(&qword_256EB2158);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6B59E0();
  sub_23F6916B8(&qword_256EAB750);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F9232B0();
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v77 - v28;
  sub_23F6B6754();
  v32 = v32 && v30 == v31;
  if (!v32 && (sub_23F6B5280() & 1) == 0)
    goto LABEL_16;
  v33 = type metadata accessor for TranscriptProtoActionResolverRequest(0);
  v90 = v1;
  v34 = v33;
  sub_23F9234DC((uint64_t)&v2[*(int *)(v33 + 36)], (uint64_t)v29);
  v78 = v34;
  v35 = *(int *)(v34 + 36);
  v36 = v90;
  sub_23F9234DC(v90 + v35, v0);
  v37 = v4 + *(int *)(v23 + 48);
  v38 = sub_23F78F5B0();
  sub_23F9234DC(v38, v39);
  sub_23F9234DC(v0, v37);
  sub_23F6B5164(v4, 1, v21);
  if (v32)
  {
    sub_23F6D3930(v0);
    sub_23F6D3930((uint64_t)v29);
    v41 = sub_23F6B5164(v37, 1, v21);
    if (v32)
    {
      sub_23F77E3DC(v41, &qword_256EAB750);
      goto LABEL_19;
    }
    goto LABEL_14;
  }
  sub_23F923A50(v4, v40, &qword_256EAB750);
  sub_23F6B5164(v37, 1, v21);
  if (v42)
  {
    sub_23F6D3748(v0);
    sub_23F6D3748((uint64_t)v29);
    sub_23F6D3D20(v43, type metadata accessor for TranscriptProtoParameterSet);
LABEL_14:
    v44 = &qword_256EB2158;
    v45 = v4;
LABEL_15:
    sub_23F6B4F84(v45, v44);
    goto LABEL_16;
  }
  sub_23F7E76D0(v37, (uint64_t)v5, type metadata accessor for TranscriptProtoParameterSet);
  sub_23F696CC0(*v3, *v5, v46, v47, v48, v49, v50, v51, v77, v78, v79, v80, v81, v82, v83, v84, v85, v86, v87, v88);
  if ((v52 & 1) == 0)
  {
    sub_23F6D38A0((uint64_t)v5);
    sub_23F6B6EF8(v0);
    sub_23F6B6EF8((uint64_t)v29);
    sub_23F6D38A0((uint64_t)v3);
    v45 = sub_23F8790C8();
    goto LABEL_15;
  }
  sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  sub_23F924900();
  v53 = sub_23F923CF8();
  sub_23F6D3DAC((uint64_t)v5);
  sub_23F6D3930(v0);
  sub_23F6D3930((uint64_t)v29);
  sub_23F6D3DAC((uint64_t)v3);
  sub_23F6D3930(v4);
  if ((v53 & 1) == 0)
    goto LABEL_16;
LABEL_19:
  sub_23F924824();
  sub_23F696810();
  if ((v54 & 1) == 0 || v2[24] != *(unsigned __int8 *)(v36 + 24) || v2[25] != *(unsigned __int8 *)(v36 + 25))
    goto LABEL_16;
  v55 = v36;
  v56 = v78;
  v57 = v86;
  sub_23F923268((uint64_t)&v2[*(int *)(v78 + 40)], v86);
  v58 = v85;
  sub_23F923268(v55 + *(int *)(v56 + 40), v85);
  v59 = v88;
  v60 = v88 + *(int *)(v84 + 48);
  sub_23F923268(v57, v88);
  sub_23F923268(v58, v60);
  v61 = sub_23F6D3CB4();
  v62 = v87;
  sub_23F6B5164(v61, v63, v87);
  if (!v32)
  {
    v66 = v83;
    sub_23F923A50(v59, v64, &qword_256EA25E0);
    sub_23F6B5164(v60, 1, v62);
    if (!v67)
    {
      v69 = v82;
      sub_23F7F6534(v60, v82);
      sub_23F923C58();
      v71 = v70;
      sub_23F6D38A0(v69);
      sub_23F6B6EF8(v58);
      sub_23F6B6EF8(v57);
      sub_23F6D38A0(v66);
      sub_23F6B6EF8(v59);
      if ((v71 & 1) == 0)
        goto LABEL_16;
      goto LABEL_33;
    }
    sub_23F6B64F4(v58);
    sub_23F6B64F4(v57);
    sub_23F6D3D20(v68, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_31;
  }
  sub_23F6D3748(v58);
  sub_23F6D3748(v57);
  v65 = sub_23F6B5164(v60, 1, v62);
  if (!v32)
  {
LABEL_31:
    v44 = &qword_256EA25E8;
    v45 = v59;
    goto LABEL_15;
  }
  sub_23F6D378C(v65, &qword_256EA25E0);
LABEL_33:
  v72 = v90;
  if (v2[26] == *(unsigned __int8 *)(v90 + 26))
  {
    v73 = (uint64_t)&v2[*(int *)(v56 + 44)];
    v74 = v79;
    sub_23F923484(v79, v73);
    v75 = v72 + *(int *)(v56 + 44);
    v76 = v80;
    sub_23F923484(v80, v75);
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F6B5624();
    sub_23F6D39FC(v76);
    sub_23F6D39FC(v74);
  }
LABEL_16:
  sub_23F693DDC();
}

uint64_t TranscriptProtoActionResolverRequest.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoActionResolverRequest, &qword_256EB2160, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResolverRequest);
}

unint64_t sub_23F8D19A0()
{
  static TranscriptProtoActionResolverRequest.protoMessageName.getter();
  return 0xD000000000000020;
}

void sub_23F8D19C4()
{
  TranscriptProtoActionResolverRequest.decodeMessage<A>(decoder:)();
}

void sub_23F8D19D8()
{
  TranscriptProtoActionResolverRequest.traverse<A>(visitor:)();
}

uint64_t sub_23F8D19EC()
{
  sub_23F6D3458(&qword_256EB3F40, type metadata accessor for TranscriptProtoActionResolverRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResolverRequest);
  return sub_23FB2D784();
}

uint64_t sub_23F8D1A40()
{
  sub_23F6D3458(&qword_256EB30C0, type metadata accessor for TranscriptProtoActionResolverRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResolverRequest);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8D1A84()
{
  sub_23F6D3458(&qword_256EB30C0, type metadata accessor for TranscriptProtoActionResolverRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResolverRequest);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoContextRetrieved.protoMessageName.getter()
{
  return sub_23F6D3738(27);
}

uint64_t sub_23F8D1AF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1090);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1090);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 3;
  *(_QWORD *)v7 = "requiredContext";
  *(_QWORD *)(v7 + 8) = 15;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 4;
  *(_QWORD *)v11 = "utteranceContext";
  *((_QWORD *)v11 + 1) = 16;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoContextRetrieved._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0EC8, (uint64_t)qword_256EB1090, a1);
}

void TranscriptProtoContextRetrieved.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6D3EA4();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 4)
      {
        sub_23F924B24();
      }
      else if (v1 == 3)
      {
        sub_23F923970();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D3750();
}

void sub_23F8D1CE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  sub_23F6B5220();
  sub_23F92432C();
  sub_23F923990(v0, v1, v2, v3, v4);
  sub_23F6D3724();
  sub_23F923E60();
  sub_23F6B5100();
}

void TranscriptProtoContextRetrieved.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6D3DC4();
  sub_23F9233B4();
  if (!v2
    || (sub_23F9247F0(),
        sub_23F6D3458(&qword_256EB2168, type metadata accessor for TranscriptProtoRetrievedContextStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoRetrievedContextStatement), sub_23F923350(), !v0))
  {
    if (!*(_QWORD *)(*(_QWORD *)(v1 + 8) + 16)
      || (sub_23F9247F0(),
          sub_23F6D3458(&qword_256EB2168, type metadata accessor for TranscriptProtoRetrievedContextStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoRetrievedContextStatement), sub_23F923350(), !v0))
    {
      type metadata accessor for TranscriptProtoContextRetrieved(0);
      sub_23F9231A8();
    }
  }
  sub_23F6D3710();
}

void static TranscriptProtoContextRetrieved.== infix(_:_:)()
{
  sub_23F8D1DF4();
}

void sub_23F8D1DF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD, _QWORD);
  uint64_t (*v5)(_QWORD, _QWORD);
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  sub_23F6D35C0();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F923E98();
  if ((v7(v10) & 1) != 0 && (v5(*(_QWORD *)(v3 + 8), *(_QWORD *)(v2 + 8)) & 1) != 0)
  {
    v11 = sub_23F923C1C();
    sub_23F923308(v1, v3 + *(int *)(v11 + 24));
    sub_23F6D36AC(*(int *)(v11 + 24));
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F6D3600();
    sub_23F6D3BD0(v0);
    sub_23F6D3BD0(v1);
  }
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoContextRetrieved.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoContextRetrieved, &qword_256EB2170, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextRetrieved);
}

unint64_t sub_23F8D1EE8()
{
  static TranscriptProtoContextRetrieved.protoMessageName.getter();
  return 0xD00000000000001BLL;
}

void sub_23F8D1F0C()
{
  TranscriptProtoContextRetrieved.decodeMessage<A>(decoder:)();
}

void sub_23F8D1F20()
{
  TranscriptProtoContextRetrieved.traverse<A>(visitor:)();
}

uint64_t sub_23F8D1F34()
{
  sub_23F6D3458(&qword_256EB3F38, type metadata accessor for TranscriptProtoContextRetrieved, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextRetrieved);
  return sub_23FB2D784();
}

uint64_t sub_23F8D1F88()
{
  sub_23F6D3458(&qword_256EB30D8, type metadata accessor for TranscriptProtoContextRetrieved, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextRetrieved);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8D1FCC()
{
  sub_23F6D3458(&qword_256EB30D8, type metadata accessor for TranscriptProtoContextRetrieved, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextRetrieved);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoRetrievedContextStatement.protoMessageName.getter()
{
  return sub_23F6D3738(36);
}

uint64_t sub_23F8D2038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB10A8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB10A8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "statementId";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "retrievedContext";
  *((_QWORD *)v11 + 1) = 16;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoRetrievedContextStatement._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0ED0, (uint64_t)qword_256EB10A8, a1);
}

void TranscriptProtoRetrievedContextStatement.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_23F6D3598();
        sub_23F923404();
      }
      else if (v1 == 1)
      {
        sub_23F923568();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoRetrievedContextStatement.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F923460();
  sub_23F9234C0();
  if (!v0)
  {
    sub_23F9231F0();
    sub_23F8D22C0(v1);
    sub_23F9247F0();
    sub_23F6D37BC();
  }
  sub_23F6D3674();
}

void sub_23F8D22C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA84C8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ContextProtoRetrievedContext(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoRetrievedContextStatement(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA84C8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA84C8);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for ContextProtoRetrievedContext);
    sub_23F6D3458(&qword_256EA2DB0, type metadata accessor for ContextProtoRetrievedContext, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedContext);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for ContextProtoRetrievedContext);
  }
}

void static TranscriptProtoRetrievedContextStatement.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61[2];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  v8 = sub_23F6B53A4();
  v64 = *(_QWORD *)(v8 - 8);
  v65 = v8;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v63 = (uint64_t)v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v11);
  v62 = (uint64_t)v61 - v12;
  v13 = sub_23F6D398C();
  v70 = type metadata accessor for ContextProtoRetrievedContext(v13);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B582C(v15, v61[0]);
  v67 = sub_23F6916B8(&qword_256EB2178);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B5BD8(v17, v61[0]);
  sub_23F6916B8(&qword_256EA84C8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  v66 = (char *)v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v20);
  v68 = (uint64_t)v61 - v21;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v22);
  v69 = (uint64_t)v61 - v23;
  v24 = sub_23F923344();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F6B59F8();
  v26 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F6B52B0();
  sub_23F878A54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F876AD4();
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)v61 - v31;
  v72 = v7;
  sub_23F9234DC(v7, (uint64_t)v61 - v31);
  v73 = v5;
  sub_23F9234DC(v5, v2);
  v33 = v1 + *(int *)(v26 + 48);
  sub_23F9234DC((uint64_t)v32, v1);
  sub_23F9234DC(v2, v33);
  sub_23F6B5164(v1, 1, v24);
  if (v36)
  {
    sub_23F6D3748(v2);
    sub_23F6D3748((uint64_t)v32);
    v35 = sub_23F6B5164(v33, 1, v24);
    if (v36)
    {
      sub_23F923588(v35, &qword_256EA25E0);
      goto LABEL_11;
    }
LABEL_9:
    v38 = &qword_256EA25E8;
    v39 = v1;
LABEL_20:
    sub_23F6B4F84(v39, v38);
    goto LABEL_21;
  }
  sub_23F923640(v1, v34, &qword_256EA25E0);
  sub_23F6B5164(v33, 1, v24);
  if (v36)
  {
    sub_23F6B64F4(v2);
    sub_23F6B64F4((uint64_t)v32);
    sub_23F72E404(v37, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_9;
  }
  sub_23F92380C(v33, v0);
  sub_23F9244E4();
  v41 = v40;
  sub_23F77DAB0(v0);
  sub_23F6D3748(v2);
  sub_23F6D3748((uint64_t)v32);
  sub_23F77DAB0(v3);
  sub_23F6D3748(v1);
  if ((v41 & 1) == 0)
    goto LABEL_21;
LABEL_11:
  v42 = type metadata accessor for TranscriptProtoRetrievedContextStatement(0);
  v43 = sub_23F923D28(v42);
  v44 = v69;
  sub_23F92332C(v43, v69);
  v45 = v73;
  v46 = v68;
  sub_23F92332C(v73 + *(int *)(v1 + 20), v68);
  v47 = v71;
  v48 = v71 + *(int *)(v67 + 48);
  sub_23F92332C(v44, v71);
  sub_23F92332C(v46, v48);
  v49 = v70;
  sub_23F6B5164(v47, 1, v70);
  if (v36)
  {
    sub_23F6B6EF8(v46);
    sub_23F6B6EF8(v44);
    v51 = sub_23F6B5164(v48, 1, v49);
    if (v36)
    {
      sub_23F6D378C(v51, &qword_256EA84C8);
LABEL_23:
      v58 = v62;
      sub_23F6D3818(v62, v7 + *(int *)(v1 + 24));
      v59 = v45 + *(int *)(v1 + 24);
      v60 = v63;
      sub_23F6D3818(v63, v59);
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6D37C8();
      sub_23F6D3874(v60);
      sub_23F6D3874(v58);
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  v52 = (uint64_t)v66;
  sub_23F923640(v47, v50, &qword_256EA84C8);
  sub_23F6B5164(v48, 1, v49);
  if (v53)
  {
    sub_23F6D3748(v46);
    sub_23F6D3748(v44);
    sub_23F72E404(v54, type metadata accessor for ContextProtoRetrievedContext);
LABEL_19:
    v38 = &qword_256EB2178;
    v39 = v47;
    goto LABEL_20;
  }
  v55 = v61[1];
  sub_23F9238DC(v48);
  sub_23F6B6F88();
  static ContextProtoRetrievedContext.== infix(_:_:)();
  v57 = v56;
  sub_23F6D3DAC(v55);
  sub_23F6B62DC(v46);
  sub_23F6B62DC(v44);
  sub_23F6D3DAC(v52);
  sub_23F6B62DC(v47);
  if ((v57 & 1) != 0)
    goto LABEL_23;
LABEL_21:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoRetrievedContextStatement.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoRetrievedContextStatement, &qword_256EB2180, (uint64_t)&protocol conformance descriptor for TranscriptProtoRetrievedContextStatement);
}

unint64_t sub_23F8D2920()
{
  static TranscriptProtoRetrievedContextStatement.protoMessageName.getter();
  return 0xD000000000000024;
}

void sub_23F8D2944()
{
  TranscriptProtoRetrievedContextStatement.decodeMessage<A>(decoder:)();
}

void sub_23F8D2958()
{
  TranscriptProtoRetrievedContextStatement.traverse<A>(visitor:)();
}

uint64_t sub_23F8D296C()
{
  sub_23F6D3458(&qword_256EB3F30, type metadata accessor for TranscriptProtoRetrievedContextStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoRetrievedContextStatement);
  return sub_23FB2D784();
}

uint64_t sub_23F8D29C0()
{
  sub_23F6D3458(&qword_256EB2168, type metadata accessor for TranscriptProtoRetrievedContextStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoRetrievedContextStatement);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8D2A04()
{
  sub_23F6D3458(&qword_256EB2168, type metadata accessor for TranscriptProtoRetrievedContextStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoRetrievedContextStatement);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoDynamicEnumerationEntityStatement.protoMessageName.getter()
{
  return sub_23F6D3738(44);
}

uint64_t sub_23F8D2A70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB10C0);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB10C0);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "statementId";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "dynamicEnumerationEntity";
  *((_QWORD *)v11 + 1) = 24;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoDynamicEnumerationEntityStatement._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0ED8, (uint64_t)qword_256EB10C0, a1);
}

void TranscriptProtoDynamicEnumerationEntityStatement.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_23F6D3598();
        sub_23F923404();
      }
      else if (v1 == 1)
      {
        sub_23F923568();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoDynamicEnumerationEntityStatement.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F923460();
  sub_23F9234C0();
  if (!v0)
  {
    sub_23F9231F0();
    sub_23F8D2CFC(v1);
    type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement(0);
    sub_23F6D37BC();
  }
  sub_23F6D3674();
}

void sub_23F8D2CFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA84B8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA84B8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA84B8);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for ContextProtoDynamicEnumerationEntity);
    sub_23F6D3458(&qword_256EA2DC0, type metadata accessor for ContextProtoDynamicEnumerationEntity, (uint64_t)&protocol conformance descriptor for ContextProtoDynamicEnumerationEntity);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for ContextProtoDynamicEnumerationEntity);
  }
}

void static TranscriptProtoDynamicEnumerationEntityStatement.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61[2];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  v8 = sub_23F6B53A4();
  v64 = *(_QWORD *)(v8 - 8);
  v65 = v8;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v63 = (uint64_t)v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v11);
  v62 = (uint64_t)v61 - v12;
  v13 = sub_23F6D398C();
  v70 = type metadata accessor for ContextProtoDynamicEnumerationEntity(v13);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B582C(v15, v61[0]);
  v67 = sub_23F6916B8(&qword_256EB2188);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B5BD8(v17, v61[0]);
  sub_23F6916B8(&qword_256EA84B8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  v66 = (char *)v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v20);
  v68 = (uint64_t)v61 - v21;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v22);
  v69 = (uint64_t)v61 - v23;
  v24 = sub_23F923344();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F6B59F8();
  v26 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F6B52B0();
  sub_23F878A54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F876AD4();
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)v61 - v31;
  v72 = v7;
  sub_23F9234DC(v7, (uint64_t)v61 - v31);
  v73 = v5;
  sub_23F9234DC(v5, v2);
  v33 = v1 + *(int *)(v26 + 48);
  sub_23F9234DC((uint64_t)v32, v1);
  sub_23F9234DC(v2, v33);
  sub_23F6B5164(v1, 1, v24);
  if (v36)
  {
    sub_23F6D3748(v2);
    sub_23F6D3748((uint64_t)v32);
    v35 = sub_23F6B5164(v33, 1, v24);
    if (v36)
    {
      sub_23F923588(v35, &qword_256EA25E0);
      goto LABEL_11;
    }
LABEL_9:
    v38 = &qword_256EA25E8;
    v39 = v1;
LABEL_20:
    sub_23F6B4F84(v39, v38);
    goto LABEL_21;
  }
  sub_23F923640(v1, v34, &qword_256EA25E0);
  sub_23F6B5164(v33, 1, v24);
  if (v36)
  {
    sub_23F6B64F4(v2);
    sub_23F6B64F4((uint64_t)v32);
    sub_23F72E404(v37, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_9;
  }
  sub_23F92380C(v33, v0);
  sub_23F9244E4();
  v41 = v40;
  sub_23F77DAB0(v0);
  sub_23F6D3748(v2);
  sub_23F6D3748((uint64_t)v32);
  sub_23F77DAB0(v3);
  sub_23F6D3748(v1);
  if ((v41 & 1) == 0)
    goto LABEL_21;
LABEL_11:
  v42 = type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement(0);
  v43 = sub_23F923D28(v42);
  v44 = v69;
  sub_23F92332C(v43, v69);
  v45 = v73;
  v46 = v68;
  sub_23F92332C(v73 + *(int *)(v1 + 20), v68);
  v47 = v71;
  v48 = v71 + *(int *)(v67 + 48);
  sub_23F92332C(v44, v71);
  sub_23F92332C(v46, v48);
  v49 = v70;
  sub_23F6B5164(v47, 1, v70);
  if (v36)
  {
    sub_23F6B6EF8(v46);
    sub_23F6B6EF8(v44);
    v51 = sub_23F6B5164(v48, 1, v49);
    if (v36)
    {
      sub_23F6D378C(v51, &qword_256EA84B8);
LABEL_23:
      v58 = v62;
      sub_23F6D3818(v62, v7 + *(int *)(v1 + 24));
      v59 = v45 + *(int *)(v1 + 24);
      v60 = v63;
      sub_23F6D3818(v63, v59);
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6D37C8();
      sub_23F6D3874(v60);
      sub_23F6D3874(v58);
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  v52 = (uint64_t)v66;
  sub_23F923640(v47, v50, &qword_256EA84B8);
  sub_23F6B5164(v48, 1, v49);
  if (v53)
  {
    sub_23F6D3748(v46);
    sub_23F6D3748(v44);
    sub_23F72E404(v54, type metadata accessor for ContextProtoDynamicEnumerationEntity);
LABEL_19:
    v38 = &qword_256EB2188;
    v39 = v47;
    goto LABEL_20;
  }
  v55 = v61[1];
  sub_23F9238DC(v48);
  sub_23F6B6F88();
  static ContextProtoDynamicEnumerationEntity.== infix(_:_:)();
  v57 = v56;
  sub_23F6D3DAC(v55);
  sub_23F6B62DC(v46);
  sub_23F6B62DC(v44);
  sub_23F6D3DAC(v52);
  sub_23F6B62DC(v47);
  if ((v57 & 1) != 0)
    goto LABEL_23;
LABEL_21:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoDynamicEnumerationEntityStatement.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement, &qword_256EB2190, (uint64_t)&protocol conformance descriptor for TranscriptProtoDynamicEnumerationEntityStatement);
}

unint64_t sub_23F8D335C()
{
  static TranscriptProtoDynamicEnumerationEntityStatement.protoMessageName.getter();
  return 0xD00000000000002CLL;
}

void sub_23F8D3380()
{
  TranscriptProtoDynamicEnumerationEntityStatement.decodeMessage<A>(decoder:)();
}

void sub_23F8D3394()
{
  TranscriptProtoDynamicEnumerationEntityStatement.traverse<A>(visitor:)();
}

uint64_t sub_23F8D33A8()
{
  sub_23F6D3458(&qword_256EB3F28, type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoDynamicEnumerationEntityStatement);
  return sub_23FB2D784();
}

uint64_t sub_23F8D33FC()
{
  sub_23F6D3458(&qword_256EB25E0, type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoDynamicEnumerationEntityStatement);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8D3440()
{
  sub_23F6D3458(&qword_256EB25E0, type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoDynamicEnumerationEntityStatement);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoSafetyModeRelease.protoMessageName.getter()
{
  return sub_23F6D3738(28);
}

uint64_t sub_23F8D34AC(uint64_t a1)
{
  return sub_23F9187D8(a1, qword_256EB10D8);
}

uint64_t static TranscriptProtoSafetyModeRelease._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0EE0, (uint64_t)qword_256EB10D8, a1);
}

uint64_t TranscriptProtoSafetyModeRelease.decodeMessage<A>(decoder:)()
{
  return sub_23F918844();
}

uint64_t TranscriptProtoSafetyModeRelease.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoSafetyModeRelease, &qword_256EB2198, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeRelease);
}

unint64_t sub_23F8D350C()
{
  static TranscriptProtoSafetyModeRelease.protoMessageName.getter();
  return 0xD00000000000001CLL;
}

uint64_t sub_23F8D3530()
{
  sub_23F6D3458(&qword_256EB3F20, type metadata accessor for TranscriptProtoSafetyModeRelease, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeRelease);
  return sub_23FB2D784();
}

uint64_t sub_23F8D3584()
{
  sub_23F6D3458(&qword_256EB3110, type metadata accessor for TranscriptProtoSafetyModeRelease, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeRelease);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8D35C8()
{
  sub_23F6D3458(&qword_256EB3110, type metadata accessor for TranscriptProtoSafetyModeRelease, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeRelease);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoSafetyModeException.protoMessageName.getter()
{
  return sub_23F6D3738(30);
}

uint64_t sub_23F8D3630()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoSafetyModeException._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0EE8, (uint64_t)&unk_256EB10F0, a1);
}

void TranscriptProtoSafetyModeException.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F9062A8(a1, a2);
}

void TranscriptProtoSafetyModeException.traverse<A>(visitor:)()
{
  sub_23F8D36A0();
}

void sub_23F8D36A0()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F6D3EA4();
  v1 = sub_23F92419C();
  sub_23F6C7C54(v1);
  if (!v0)
  {
    sub_23F923AF0();
    sub_23F6D3A68();
  }
  sub_23F6D3750();
}

void static TranscriptProtoSafetyModeException.== infix(_:_:)()
{
  sub_23F8D89B0();
}

uint64_t TranscriptProtoSafetyModeException.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoSafetyModeException, &qword_256EB21A0, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeException);
}

unint64_t sub_23F8D3720()
{
  static TranscriptProtoSafetyModeException.protoMessageName.getter();
  return 0xD00000000000001ELL;
}

void sub_23F8D3744(uint64_t a1, uint64_t a2)
{
  TranscriptProtoASTExprUndoVariant.decodeMessage<A>(decoder:)(a1, a2);
}

void sub_23F8D3758()
{
  TranscriptProtoSafetyModeException.traverse<A>(visitor:)();
}

uint64_t sub_23F8D376C()
{
  sub_23F6D3458(&qword_256EB3F18, type metadata accessor for TranscriptProtoSafetyModeException, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeException);
  return sub_23FB2D784();
}

uint64_t sub_23F8D37C0()
{
  sub_23F6D3458(&qword_256EB3128, type metadata accessor for TranscriptProtoSafetyModeException, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeException);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8D3804()
{
  sub_23F6D3458(&qword_256EB3128, type metadata accessor for TranscriptProtoSafetyModeException, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeException);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoParameterSet.protoMessageName.getter()
{
  return sub_23F6D3738(23);
}

uint64_t sub_23F8D3870()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoParameterSet._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0EF0, (uint64_t)&unk_256EB1108, a1);
}

void TranscriptProtoParameterSet.decodeMessage<A>(decoder:)()
{
  sub_23F8D38D4();
}

void sub_23F8D38D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_23F6D3EA4();
  sub_23F923474(v1, v2);
  while (1)
  {
    v3 = sub_23FB2D7B4();
    if (v0 || (v4 & 1) != 0)
      break;
    if (v3 == 2)
    {
      sub_23F924C2C();
      sub_23F6C7398();
    }
    sub_23F7A1280();
  }
  sub_23F6D3750();
}

void TranscriptProtoParameterSet.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F6D3DC4();
  sub_23F9233B4();
  if (!v1
    || (type metadata accessor for TranscriptProtoParameter(0),
        sub_23F6D3458(&qword_256EB21A8, type metadata accessor for TranscriptProtoParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameter), sub_23F923350(), !v0))
  {
    type metadata accessor for TranscriptProtoParameterSet(0);
    sub_23F9231A8();
  }
  sub_23F6D3710();
}

void static TranscriptProtoParameterSet.== infix(_:_:)()
{
  sub_23F89AB14();
}

uint64_t TranscriptProtoParameterSet.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoParameterSet, &qword_256EB21B0, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterSet);
}

unint64_t sub_23F8D39F8()
{
  static TranscriptProtoParameterSet.protoMessageName.getter();
  return 0xD000000000000017;
}

void sub_23F8D3A1C()
{
  TranscriptProtoParameterSet.decodeMessage<A>(decoder:)();
}

void sub_23F8D3A30()
{
  TranscriptProtoParameterSet.traverse<A>(visitor:)();
}

uint64_t sub_23F8D3A44()
{
  sub_23F6D3458(&qword_256EB3F10, type metadata accessor for TranscriptProtoParameterSet, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterSet);
  return sub_23FB2D784();
}

uint64_t sub_23F8D3A98()
{
  sub_23F6D3458(&qword_256EB2150, type metadata accessor for TranscriptProtoParameterSet, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterSet);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8D3ADC()
{
  sub_23F6D3458(&qword_256EB2150, type metadata accessor for TranscriptProtoParameterSet, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterSet);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoParameter.protoMessageName.getter()
{
  return sub_23F6D3738(20);
}

uint64_t sub_23F8D3B48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1120);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1120);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "key";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "collectionIndex";
  *((_QWORD *)v11 + 1) = 15;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "candidate";
  *((_QWORD *)v13 + 1) = 9;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoParameter._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0EF8, (uint64_t)qword_256EB1120, a1);
}

void TranscriptProtoParameter.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 3:
          sub_23F9235E8();
          break;
        case 2:
          sub_23F9240FC();
          break;
        case 1:
          sub_23F923334();
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoParameter.traverse<A>(visitor:)()
{
  sub_23F8D3DAC();
}

void sub_23F8D3DAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  sub_23F6B5220();
  v7 = v6;
  sub_23F923E48();
  sub_23F6D36FC();
  if (!v8 || (sub_23F923258(), (v0 = v1) == 0))
  {
    v7(v4, v5, v3, v2, 2);
    if (!v0)
    {
      sub_23F923CE8(v4, v5);
      sub_23F923AF0();
      sub_23F9231A8();
    }
  }
  sub_23F6B5100();
}

void sub_23F8D3E4C(uint64_t a1)
{
  if ((*(_BYTE *)(a1 + 24) & 1) == 0)
    sub_23FB2D97C();
  sub_23F6D3ABC();
}

void sub_23F8D3E78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA2628);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoCandidate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoParameter(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_256EA2628);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA2628);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoCandidate);
    sub_23F6D3458(&qword_256EB1FC0, type metadata accessor for TranscriptProtoCandidate, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidate);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoCandidate);
  }
}

void static TranscriptProtoParameter.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  sub_23F6B50E8();
  v5 = sub_23F6D35C0();
  v50 = *(_QWORD *)(v5 - 8);
  v51 = v5;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  v49 = (uint64_t)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = sub_23F6D38F8(v9, v10, v11, v12, v13, v14, v15, v16, v46);
  type metadata accessor for TranscriptProtoCandidate(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B59E0();
  v19 = sub_23F6916B8(&qword_256EA2630);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA2628);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F9232B0();
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v46 - v24;
  sub_23F6B6754();
  v28 = v28 && v26 == v27;
  if (!v28 && (sub_23F6B5280() & 1) == 0)
    goto LABEL_23;
  v29 = *(_BYTE *)(v1 + 24);
  if ((*(_BYTE *)(v2 + 24) & 1) != 0)
  {
    if (!*(_BYTE *)(v1 + 24))
      goto LABEL_23;
  }
  else
  {
    if (*(_QWORD *)(v2 + 16) != *(_QWORD *)(v1 + 16))
      v29 = 1;
    if ((v29 & 1) != 0)
      goto LABEL_23;
  }
  v30 = sub_23F924508();
  v31 = type metadata accessor for TranscriptProtoParameter(v30);
  v32 = sub_23F9247F8(v31);
  sub_23F923268(v32, (uint64_t)v25);
  v47 = v31;
  sub_23F923268(v1 + *(int *)(v31 + 24), v0);
  v33 = v3 + *(int *)(v19 + 48);
  sub_23F923268((uint64_t)v25, v3);
  sub_23F923268(v0, v33);
  v34 = sub_23F9230E4(v3);
  if (v28)
  {
    sub_23F6D3748(v0);
    sub_23F6D3748((uint64_t)v25);
    v36 = sub_23F9230E4(v33);
    if (v28)
    {
      sub_23F6D378C(v36, &qword_256EA2628);
LABEL_22:
      v42 = v47;
      v43 = v48;
      sub_23F6D3818(v48, v2 + *(int *)(v47 + 28));
      v44 = v1 + *(int *)(v42 + 28);
      v45 = v49;
      sub_23F6D3818(v49, v44);
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6D37C8();
      sub_23F6D3DA4(v45);
      sub_23F6D3DA4(v43);
      goto LABEL_23;
    }
    goto LABEL_20;
  }
  sub_23F9232A4(v34, v35, &qword_256EA2628);
  sub_23F9230E4(v33);
  if (v37)
  {
    sub_23F6D3748(v0);
    sub_23F6D3748((uint64_t)v25);
    sub_23F6D3C24(v38, type metadata accessor for TranscriptProtoCandidate);
LABEL_20:
    sub_23F6D378C(v36, &qword_256EA2630);
    goto LABEL_23;
  }
  v39 = v46;
  sub_23F7F6534(v33, v46);
  static TranscriptProtoCandidate.== infix(_:_:)();
  v41 = v40;
  sub_23F6D38A0(v39);
  sub_23F6D38A8(v0);
  sub_23F6D38A8((uint64_t)v25);
  sub_23F6D38A0(v4);
  sub_23F6D38A8(v3);
  if ((v41 & 1) != 0)
    goto LABEL_22;
LABEL_23:
  sub_23F6B5694();
  sub_23F693DDC();
}

uint64_t TranscriptProtoParameter.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoParameter, &qword_256EB21B8, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameter);
}

unint64_t sub_23F8D42E4()
{
  static TranscriptProtoParameter.protoMessageName.getter();
  return 0xD000000000000014;
}

void sub_23F8D4308()
{
  TranscriptProtoParameter.decodeMessage<A>(decoder:)();
}

void sub_23F8D431C()
{
  TranscriptProtoParameter.traverse<A>(visitor:)();
}

uint64_t sub_23F8D4330()
{
  sub_23F6D3458(&qword_256EB3F08, type metadata accessor for TranscriptProtoParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameter);
  return sub_23FB2D784();
}

uint64_t sub_23F8D4384()
{
  sub_23F6D3458(&qword_256EB21A8, type metadata accessor for TranscriptProtoParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameter);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8D43C8()
{
  sub_23F6D3458(&qword_256EB21A8, type metadata accessor for TranscriptProtoParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameter);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoClientInitiatedClientAction.protoMessageName.getter()
{
  return sub_23F6D3738(38);
}

uint64_t sub_23F8D4434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1138);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1138);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "toolId";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "parameters";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoClientInitiatedClientAction._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0F00, (uint64_t)qword_256EB1138, a1);
}

void TranscriptProtoClientInitiatedClientAction.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_23F6D39E0(a1, a2);
  while (1)
  {
    v3 = sub_23FB2D7B4();
    if (v2 || (v4 & 1) != 0)
      break;
    if (v3 == 2)
    {
      sub_23F924738();
    }
    else if (v3 == 1)
    {
      sub_23F923334();
    }
    sub_23F6B6098();
  }
  sub_23F6D3C2C();
}

void sub_23F8D45F4()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F6B5220();
  sub_23F923AE8();
  sub_23F6B632C();
  sub_23F92491C(&qword_256EA3248, v0, MEMORY[0x24BEB95A0]);
  sub_23F92491C(&qword_256EB1DA8, v1, MEMORY[0x24BEB95C0]);
  sub_23FB2D79C();
  sub_23F6B5100();
}

void TranscriptProtoClientInitiatedClientAction.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F923528();
  sub_23F6D36FC();
  if (!v1 || (sub_23F923258(), !v0))
  {
    sub_23F924550();
    if (!v2
      || (sub_23F923AE8(),
          sub_23F6B632C(),
          sub_23F923750(&qword_256EA3248, v3, MEMORY[0x24BEB95A0]),
          sub_23F923750(&qword_256EB1DA8, v4, MEMORY[0x24BEB95C0]),
          sub_23F924910(),
          sub_23F923544(),
          !v0))
    {
      type metadata accessor for TranscriptProtoClientInitiatedClientAction(0);
      sub_23F9231A8();
    }
  }
  sub_23F6D3B40();
}

void static TranscriptProtoClientInitiatedClientAction.== infix(_:_:)()
{
  sub_23F8D477C();
}

void sub_23F8D477C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F6B50E8();
  v4 = v3;
  sub_23F6D35C0();
  sub_23F6B5984();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6D3834();
  v9 = v9 && v7 == v8;
  if (v9 || (sub_23F6B5280() & 1) != 0)
  {
    v10 = sub_23F924824();
    if ((v4(v10) & 1) != 0)
    {
      v11 = sub_23F923C1C();
      sub_23F923308(v1, v2 + *(int *)(v11 + 24));
      sub_23F6D36AC(*(int *)(v11 + 24));
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6D3600();
      sub_23F6D3820(v0);
      sub_23F6D3820(v1);
    }
  }
  sub_23F693DDC();
}

uint64_t TranscriptProtoClientInitiatedClientAction.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoClientInitiatedClientAction, &qword_256EB21C0, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientInitiatedClientAction);
}

unint64_t sub_23F8D4878()
{
  static TranscriptProtoClientInitiatedClientAction.protoMessageName.getter();
  return 0xD000000000000026;
}

void sub_23F8D489C(uint64_t a1, uint64_t a2)
{
  TranscriptProtoClientInitiatedClientAction.decodeMessage<A>(decoder:)(a1, a2);
}

void sub_23F8D48B0()
{
  TranscriptProtoClientInitiatedClientAction.traverse<A>(visitor:)();
}

uint64_t sub_23F8D48C4()
{
  sub_23F6D3458(&qword_256EB3F00, type metadata accessor for TranscriptProtoClientInitiatedClientAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientInitiatedClientAction);
  return sub_23FB2D784();
}

uint64_t sub_23F8D4918()
{
  sub_23F6D3458(&qword_256EB3160, type metadata accessor for TranscriptProtoClientInitiatedClientAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientInitiatedClientAction);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8D495C()
{
  sub_23F6D3458(&qword_256EB3160, type metadata accessor for TranscriptProtoClientInitiatedClientAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientInitiatedClientAction);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoSystemQuery.protoMessageName.getter()
{
  return sub_23F6D3738(22);
}

uint64_t sub_23F8D49C8(uint64_t a1)
{
  return sub_23F9187D8(a1, qword_256EB1150);
}

uint64_t static TranscriptProtoSystemQuery._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0F08, (uint64_t)qword_256EB1150, a1);
}

uint64_t TranscriptProtoSystemQuery.decodeMessage<A>(decoder:)()
{
  return sub_23F918844();
}

uint64_t TranscriptProtoSystemQuery.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoSystemQuery, &qword_256EB21C8, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemQuery);
}

unint64_t sub_23F8D4A28()
{
  static TranscriptProtoSystemQuery.protoMessageName.getter();
  return 0xD000000000000016;
}

uint64_t sub_23F8D4A4C()
{
  sub_23F6D3458(&qword_256EB3EF8, type metadata accessor for TranscriptProtoSystemQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemQuery);
  return sub_23FB2D784();
}

uint64_t sub_23F8D4AA0()
{
  sub_23F6D3458(&qword_256EB3178, type metadata accessor for TranscriptProtoSystemQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemQuery);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8D4AE4()
{
  sub_23F6D3458(&qword_256EB3178, type metadata accessor for TranscriptProtoSystemQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemQuery);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoSystemPromptResolutionUserAction.protoMessageName.getter()
{
  return sub_23F6D3738(43);
}

uint64_t sub_23F8D4B4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1168);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1168);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB89940;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "actionConfirmed";
  *(_QWORD *)(v7 + 8) = 15;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "parameterValueSelected";
  *(_QWORD *)(v11 + 8) = 22;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "parameterConfirmed";
  *((_QWORD *)v13 + 1) = 18;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "parameterItemSelected";
  *((_QWORD *)v15 + 1) = 21;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "deviceUnlocked";
  *((_QWORD *)v17 + 1) = 14;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "disambiguationIndexSelected";
  *((_QWORD *)v19 + 1) = 27;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "requirementAddressed";
  *((_QWORD *)v21 + 1) = 20;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "actionCanceled";
  *((_QWORD *)v23 + 1) = 14;
  v23[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoSystemPromptResolutionUserAction._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0F10, (uint64_t)qword_256EB1168, a1);
}

void TranscriptProtoSystemPromptResolutionUserAction.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F6D3EA4();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          goto LABEL_7;
        case 2:
          sub_23F923100();
          sub_23F907AC8();
          break;
        case 3:
          sub_23F923B74();
LABEL_7:
          sub_23F8D4F00();
          break;
        case 4:
          sub_23F9234FC();
          goto LABEL_11;
        case 5:
          sub_23F9243D4();
          sub_23F880D48();
          break;
        case 6:
          sub_23F9243F4();
LABEL_11:
          sub_23F8D4FEC();
          break;
        case 7:
          v3 = sub_23F923100();
          sub_23F8D50D4(v3, v4, v5, v6);
          break;
        case 8:
          v7 = sub_23F923100();
          sub_23F8D54C0(v7, v8, v9, v10);
          break;
        default:
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D3750();
}

void sub_23F8D4F00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  sub_23F6B5220();
  sub_23F713FB4(v0, v1, v2, v3, v4);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B573C();
  sub_23F9246A0();
  sub_23FB2D7D8();
  sub_23F6B5100();
}

void sub_23F8D4FEC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  sub_23F6B5220();
  v3 = v2;
  v5 = (_QWORD *)v4;
  sub_23F713FB4(v6, v4, v7, v8, v9);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B573C();
  sub_23F924AA4();
  sub_23F9246A0();
  sub_23FB2D844();
  if (!v0 && (v12 & 1) == 0)
  {
    sub_23F9249D0();
    v13 = sub_23F924A10();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v1, 1, v13);
    sub_23F9248A8();
    if (v3 != 1)
      sub_23F924718();
    sub_23F924C58();
    *v5 = v11;
    swift_storeEnumTagMultiPayload();
    sub_23F924034((uint64_t)v5);
  }
  sub_23F6B5100();
}

void sub_23F8D50D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB21D0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB44F8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB21D0);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB21D0);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB44F8);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB31C0, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionRequirementResolution);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB44F8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB44F8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB44F8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB44F8);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB21D0);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8D54C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB21D0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4500);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB21D0);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB21D0);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4500);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB31A8, type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionActionCancellation);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4500);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4500);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4500);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4500);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB21D0);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

#error "23F8D58E0: call analysis failed (funcsize=36)"

void sub_23F8D5A10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_23F6916B8(&qword_256EB21D0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB21D0);
  v5 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB21D0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23FB2D940();
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
  }
  __break(1u);
}

void sub_23F8D5B1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_23F6916B8(&qword_256EB21D0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB21D0);
  v5 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB21D0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_23FB2D97C();
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
  }
  __break(1u);
}

void sub_23F8D5C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = sub_23FB2D6AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F6916B8(&qword_256EB21D0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v11, &qword_256EB21D0);
  v12 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EB21D0);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
    if (EnumCaseMultiPayload == 7)
    {
      MEMORY[0x242672324]();
      sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_23FB2D94C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return;
    }
  }
  __break(1u);
}

void sub_23F8D5DB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_23F6916B8(&qword_256EB21D0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB21D0);
  v5 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB21D0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_23FB2D97C();
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
  }
  __break(1u);
}

void sub_23F8D5EC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB21D0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB21D0);
  v8 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB21D0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution);
      sub_23F6D3458(&qword_256EB31C0, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionRequirementResolution);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
  }
  __break(1u);
}

void sub_23F8D605C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB21D0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB21D0);
  v8 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB21D0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation);
      sub_23F6D3458(&qword_256EB31A8, type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionActionCancellation);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
  }
  __break(1u);
}

void static TranscriptProtoSystemPromptResolutionUserAction.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F6B50E8();
  v5 = v4;
  v39 = sub_23F6B53A4();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v39);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = sub_23F6D38F8(v9, v10, v11, v12, v13, v14, v15, v16, v40);
  type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B59E0();
  v19 = sub_23F6916B8(&qword_256EB21D8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6D3A70();
  v24 = MEMORY[0x24BDAC7A8](v23);
  sub_23F923124(v24, v25, v26, v27, v28, v29, v30, v31, v41);
  sub_23F923164(v5, v0);
  v32 = v1 + *(int *)(v19 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v32);
  v33 = sub_23F9230E4(v1);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v35 = sub_23F9230E4(v32);
    if (v36)
    {
      sub_23F6D378C(v35, &qword_256EB21D0);
LABEL_11:
      v38 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
      sub_23F6D3794(v38);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v33, v34, &qword_256EB21D0);
  sub_23F9230E4(v32);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v37, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
LABEL_9:
    sub_23F6D378C(v35, &qword_256EB21D8);
    goto LABEL_12;
  }
  sub_23F923270();
  sub_23F6D3D70();
  static TranscriptProtoSystemPromptResolutionUserActionEnum.== infix(_:_:)();
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoSystemPromptResolutionUserAction.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction, &qword_256EB21E0, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionUserAction);
}

unint64_t sub_23F8D6428()
{
  static TranscriptProtoSystemPromptResolutionUserAction.protoMessageName.getter();
  return 0xD00000000000002BLL;
}

void sub_23F8D644C()
{
  TranscriptProtoSystemPromptResolutionUserAction.decodeMessage<A>(decoder:)();
}

uint64_t sub_23F8D6460()
{
  return TranscriptProtoSystemPromptResolutionUserAction.traverse<A>(visitor:)();
}

uint64_t sub_23F8D6474()
{
  sub_23F6D3458(&qword_256EB3EF0, type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionUserAction);
  return sub_23FB2D784();
}

uint64_t sub_23F8D64C8()
{
  sub_23F6D3458(&qword_256EB3190, type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionUserAction);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8D650C()
{
  sub_23F6D3458(&qword_256EB3190, type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionUserAction);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoSystemPromptResolutionActionCancellation.protoMessageName.getter()
{
  return sub_23F6D3738(51);
}

uint64_t sub_23F8D6578(uint64_t a1)
{
  return sub_23F9187D8(a1, qword_256EB1180);
}

uint64_t static TranscriptProtoSystemPromptResolutionActionCancellation._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0F18, (uint64_t)qword_256EB1180, a1);
}

uint64_t TranscriptProtoSystemPromptResolutionActionCancellation.decodeMessage<A>(decoder:)()
{
  return sub_23F918844();
}

uint64_t TranscriptProtoSystemPromptResolutionActionCancellation.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation, &qword_256EB21E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionActionCancellation);
}

unint64_t sub_23F8D65D8()
{
  static TranscriptProtoSystemPromptResolutionActionCancellation.protoMessageName.getter();
  return 0xD000000000000033;
}

uint64_t sub_23F8D65FC()
{
  sub_23F6D3458(&qword_256EB3EE8, type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionActionCancellation);
  return sub_23FB2D784();
}

uint64_t sub_23F8D6650()
{
  sub_23F6D3458(&qword_256EB31A8, type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionActionCancellation);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8D6694()
{
  sub_23F6D3458(&qword_256EB31A8, type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionActionCancellation);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoSystemPromptResolutionRequirementResolution.protoMessageName.getter()
{
  return sub_23F6D3738(54);
}

uint64_t sub_23F8D66FC()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoSystemPromptResolutionRequirementResolution._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0F20, (uint64_t)&unk_256EB1198, a1);
}

void TranscriptProtoSystemPromptResolutionRequirementResolution.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_23F6D39E0(a1, a2);
  while (1)
  {
    v3 = sub_23FB2D7B4();
    if (v2 || (v4 & 1) != 0)
      break;
    if (v3 == 1)
      sub_23F6D3F00();
    sub_23F6B6098();
  }
  sub_23F6D3C2C();
}

void TranscriptProtoSystemPromptResolutionRequirementResolution.traverse<A>(visitor:)()
{
  uint64_t v0;
  char v1;

  sub_23F924218();
  if (!v1 || (sub_23F923850(), !v0))
  {
    type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0);
    sub_23F9231A8();
  }
  sub_23F6D3674();
}

void static TranscriptProtoSystemPromptResolutionRequirementResolution.== infix(_:_:)()
{
  uint64_t v0;
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F6D36BC();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6D3DD8();
  if (*v2 == *v1)
  {
    v5 = type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0);
    sub_23F6D3614(*(int *)(v5 + 20));
    sub_23F6D36AC(*(int *)(v5 + 20));
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F6D3600();
    sub_23F6D3A04();
    sub_23F6D3BD0(v0);
  }
  sub_23F923E3C();
  sub_23F6B69E0();
}

uint64_t TranscriptProtoSystemPromptResolutionRequirementResolution.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution, &qword_256EB21F0, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionRequirementResolution);
}

unint64_t sub_23F8D689C()
{
  static TranscriptProtoSystemPromptResolutionRequirementResolution.protoMessageName.getter();
  return 0xD000000000000036;
}

void sub_23F8D68C0(uint64_t a1, uint64_t a2)
{
  TranscriptProtoSystemPromptResolutionRequirementResolution.decodeMessage<A>(decoder:)(a1, a2);
}

void sub_23F8D68D4()
{
  TranscriptProtoSystemPromptResolutionRequirementResolution.traverse<A>(visitor:)();
}

uint64_t sub_23F8D68E8()
{
  sub_23F6D3458(&qword_256EB3EE0, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionRequirementResolution);
  return sub_23FB2D784();
}

uint64_t sub_23F8D693C()
{
  sub_23F6D3458(&qword_256EB31C0, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionRequirementResolution);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8D6980()
{
  sub_23F6D3458(&qword_256EB31C0, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionRequirementResolution);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoVariableSetter.protoMessageName.getter()
{
  return sub_23F6D3738(25);
}

uint64_t sub_23F8D69EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB11B0);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB11B0);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 3;
  *(_QWORD *)v7 = "value";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 4;
  *(_QWORD *)v11 = "dependencies";
  *((_QWORD *)v11 + 1) = 12;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoVariableSetter._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0F28, (uint64_t)qword_256EB11B0, a1);
}

void TranscriptProtoVariableSetter.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6D3DC4();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 4)
      {
        sub_23F92474C();
      }
      else if (v1 == 3)
      {
        sub_23F92320C();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D3710();
}

void TranscriptProtoVariableSetter.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F923528();
  sub_23F924398();
  sub_23F923DFC();
  sub_23F8A2454();
  if (!v0)
  {
    sub_23F92468C();
    if (v1)
    {
      sub_23FB2D6E8();
      sub_23F6B632C();
      sub_23F923750(&qword_256EA3248, v2, MEMORY[0x24BEB95A0]);
      sub_23F923750(&qword_256EB1DA8, v3, MEMORY[0x24BEB95C0]);
      sub_23F923A9C();
    }
    type metadata accessor for TranscriptProtoVariableSetter(0);
    sub_23F6D37BC();
  }
  sub_23F6D3B40();
}

void static TranscriptProtoVariableSetter.== infix(_:_:)()
{
  sub_23F8D6CBC();
}

void sub_23F8D6CBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD, _QWORD);
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(_QWORD, _QWORD);
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;

  sub_23F6B50E8();
  v43 = v4;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v11 = sub_23F6B53A4();
  v40 = *(_QWORD *)(v11 - 8);
  v41 = v11;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v12);
  v39 = (uint64_t)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v14);
  v38 = (uint64_t)&v37 - v15;
  v16 = sub_23F6D3D08();
  v46 = *(_QWORD *)(v16 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B5420(v18, v37);
  v19 = sub_23F6916B8(&qword_256EA2618);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B59E0();
  sub_23F878A54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6D3A70();
  MEMORY[0x24BDAC7A8](v23);
  v24 = sub_23F6B62E4();
  ((void (*)(uint64_t))v6)(v24);
  sub_23F924BA4();
  v44 = v10;
  sub_23F9234DC((uint64_t)v10 + v25, v0);
  v26 = *(int *)(v6 + 20);
  v45 = v8;
  sub_23F9234DC((uint64_t)v8 + v26, v1);
  v27 = v3 + *(int *)(v19 + 48);
  sub_23F9234DC(v0, v3);
  sub_23F9234DC(v1, v27);
  sub_23F6B5164(v3, 1, v16);
  if (!v30)
  {
    sub_23F923A50(v3, v28, &qword_256EA2610);
    sub_23F6B5164(v27, 1, v16);
    if (!v30)
    {
      v31 = v42;
      sub_23F6D3ECC(v42, v27, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 32));
      sub_23F6D3458(&qword_256EA2620, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95B0], MEMORY[0x24BEB95C8]);
      v32 = sub_23F6B5624();
      sub_23F6D39FC(v31);
      sub_23F6D3930(v1);
      sub_23F6D3930(v0);
      sub_23F6D39FC(v2);
      sub_23F6D3930(v3);
      if ((v32 & 1) == 0)
        goto LABEL_13;
      goto LABEL_11;
    }
    sub_23F6B62DC(v1);
    sub_23F6B62DC(v0);
    v29 = sub_23F7B0990(v2, *(uint64_t (**)(uint64_t, uint64_t))(v46 + 8));
LABEL_9:
    sub_23F77E3DC(v29, &qword_256EA2618);
    goto LABEL_13;
  }
  sub_23F6D3930(v1);
  sub_23F6D3930(v0);
  v29 = sub_23F6B5164(v27, 1, v16);
  if (!v30)
    goto LABEL_9;
  sub_23F77E3DC(v29, &qword_256EA2610);
LABEL_11:
  v33 = v44;
  v34 = v45;
  if ((v43(*v44, *v45) & 1) != 0)
  {
    v35 = v38;
    sub_23F6D3818(v38, (uint64_t)v33 + *(int *)(v6 + 24));
    v36 = v39;
    sub_23F6D3818(v39, (uint64_t)v34 + *(int *)(v6 + 24));
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F923230();
    sub_23F6D3DA4(v36);
    sub_23F6D3DA4(v35);
  }
LABEL_13:
  sub_23F6B5694();
  sub_23F693DDC();
}

uint64_t TranscriptProtoVariableSetter.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoVariableSetter, &qword_256EB21F8, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableSetter);
}

unint64_t sub_23F8D6FDC()
{
  static TranscriptProtoVariableSetter.protoMessageName.getter();
  return 0xD000000000000019;
}

void sub_23F8D7000()
{
  TranscriptProtoVariableSetter.decodeMessage<A>(decoder:)();
}

void sub_23F8D7014()
{
  TranscriptProtoVariableSetter.traverse<A>(visitor:)();
}

uint64_t sub_23F8D7028()
{
  sub_23F6D3458(&qword_256EB3ED8, type metadata accessor for TranscriptProtoVariableSetter, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableSetter);
  return sub_23FB2D784();
}

uint64_t sub_23F8D707C()
{
  sub_23F6D3458(&qword_256EB2200, type metadata accessor for TranscriptProtoVariableSetter, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableSetter);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8D70C0()
{
  sub_23F6D3458(&qword_256EB2200, type metadata accessor for TranscriptProtoVariableSetter, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableSetter);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoVariableStep.protoMessageName.getter()
{
  return sub_23F6D3738(23);
}

uint64_t sub_23F8D712C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB11C8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB11C8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 2;
  *(_QWORD *)v7 = "setters";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 3;
  *(_QWORD *)v11 = "statementId";
  *((_QWORD *)v11 + 1) = 11;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoVariableStep._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0F30, (uint64_t)qword_256EB11C8, a1);
}

void TranscriptProtoVariableStep.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 3)
      {
        sub_23F6D3598();
        sub_23F923404();
      }
      else if (v1 == 2)
      {
        sub_23F6C7398();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoVariableStep.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6D3DC4();
  sub_23F9233B4();
  if (!v1
    || (type metadata accessor for TranscriptProtoVariableSetter(0),
        sub_23F6D3458(&qword_256EB2200, type metadata accessor for TranscriptProtoVariableSetter, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableSetter), sub_23F923350(), !v0))
  {
    sub_23F9231FC();
    sub_23F8D73E4(v2);
    if (!v0)
    {
      type metadata accessor for TranscriptProtoVariableStep(0);
      sub_23F9231A8();
    }
  }
  sub_23F6D3710();
}

void sub_23F8D73E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoVariableStep(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void static TranscriptProtoVariableStep.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_23F6B50E8();
  v6 = v5;
  v8 = v7;
  v36 = sub_23F6B53A4();
  v38 = *(_QWORD *)(v36 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v37 = (uint64_t)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v33 - v12;
  v40 = sub_23F9234D4();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B573C();
  v39 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6D3BD8();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F878DA4();
  sub_23F697D2C();
  if ((v19 & 1) == 0)
    goto LABEL_13;
  v34 = v4;
  v35 = v13;
  type metadata accessor for TranscriptProtoVariableStep(0);
  sub_23F924BA4();
  v20 = v8;
  sub_23F923300(v8 + v21, v2);
  sub_23F923300(v6 + *(int *)(v6 + 20), v1);
  v22 = v3 + *(int *)(v39 + 48);
  sub_23F923300(v2, v3);
  sub_23F923300(v1, v22);
  sub_23F6B5164(v3, 1, v40);
  if (v25)
  {
    sub_23F6B62DC(v1);
    sub_23F6B62DC(v2);
    v24 = sub_23F6B5164(v22, 1, v40);
    if (v25)
    {
      sub_23F6D378C(v24, &qword_256EA25E0);
LABEL_12:
      v32 = (uint64_t)v35;
      sub_23F923484((uint64_t)v35, v20 + *(int *)(v6 + 24));
      sub_23F923484(v37, v6 + *(int *)(v6 + 24));
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6B5624();
      sub_23F923790();
      sub_23F877930(v32);
      goto LABEL_13;
    }
    goto LABEL_10;
  }
  sub_23F923DD0(v3, v23, &qword_256EA25E0);
  sub_23F6B5164(v22, 1, v40);
  if (v25)
  {
    sub_23F6D3748(v1);
    sub_23F6D3748(v2);
    sub_23F714040(v26, type metadata accessor for TranscriptProtoStatementID);
LABEL_10:
    sub_23F6D378C(v24, &qword_256EA25E8);
    goto LABEL_13;
  }
  v27 = v22;
  v28 = v2;
  v29 = v34;
  sub_23F92380C(v27, v34);
  sub_23F924684();
  v31 = v30;
  sub_23F77DAB0(v29);
  sub_23F6D38A8(v1);
  sub_23F6D38A8(v28);
  sub_23F77DAB0(v0);
  sub_23F6D38A8(v3);
  if ((v31 & 1) != 0)
    goto LABEL_12;
LABEL_13:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoVariableStep.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoVariableStep, &qword_256EB2208, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableStep);
}

unint64_t sub_23F8D7854()
{
  static TranscriptProtoVariableStep.protoMessageName.getter();
  return 0xD000000000000017;
}

void sub_23F8D7878()
{
  TranscriptProtoVariableStep.decodeMessage<A>(decoder:)();
}

void sub_23F8D788C()
{
  TranscriptProtoVariableStep.traverse<A>(visitor:)();
}

uint64_t sub_23F8D78A0()
{
  sub_23F6D3458(&qword_256EB3ED0, type metadata accessor for TranscriptProtoVariableStep, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableStep);
  return sub_23FB2D784();
}

uint64_t sub_23F8D78F4()
{
  sub_23F6D3458(&qword_256EB31E8, type metadata accessor for TranscriptProtoVariableStep, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableStep);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8D7938()
{
  sub_23F6D3458(&qword_256EB31E8, type metadata accessor for TranscriptProtoVariableStep, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableStep);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTFlatExprCallVariant.protoMessageName.getter()
{
  return sub_23F6D3738(33);
}

uint64_t sub_23F8D79A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB11E0);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB11E0);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "fn";
  *(_QWORD *)(v7 + 8) = 2;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "parameters";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoASTFlatExprCallVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0F38, (uint64_t)qword_256EB11E0, a1);
}

void TranscriptProtoASTFlatExprCallVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F904868(a1, a2);
}

uint64_t sub_23F8D7B28()
{
  sub_23FB2D6DC();
  type metadata accessor for TranscriptProtoASTFlatValue(0);
  sub_23F6D3458(&qword_256EB2210, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
  sub_23F6D3458(&qword_256EB2218, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
  return sub_23FB2D79C();
}

void TranscriptProtoASTFlatExprCallVariant.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F923528();
  sub_23F6D36FC();
  if (!v1 || (sub_23F923258(), !v0))
  {
    sub_23F924550();
    if (!v2
      || (sub_23F923AE8(),
          sub_23F924A08(),
          sub_23F923750(&qword_256EB2210, v3, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue),
          sub_23F923750(&qword_256EB2218, v4, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue),
          sub_23F924910(),
          sub_23F923544(),
          !v0))
    {
      type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0);
      sub_23F9231A8();
    }
  }
  sub_23F6D3B40();
}

void static TranscriptProtoASTFlatExprCallVariant.== infix(_:_:)()
{
  sub_23F8D477C();
}

uint64_t TranscriptProtoASTFlatExprCallVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTFlatExprCallVariant, &qword_256EB2220, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprCallVariant);
}

unint64_t sub_23F8D7CFC()
{
  static TranscriptProtoASTFlatExprCallVariant.protoMessageName.getter();
  return 0xD000000000000021;
}

void sub_23F8D7D20(uint64_t a1, uint64_t a2)
{
  TranscriptProtoASTFlatExprCallVariant.decodeMessage<A>(decoder:)(a1, a2);
}

void sub_23F8D7D34()
{
  TranscriptProtoASTFlatExprCallVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F8D7D48()
{
  sub_23F6D3458(&qword_256EB3EC8, type metadata accessor for TranscriptProtoASTFlatExprCallVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprCallVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F8D7D9C()
{
  sub_23F6D3458(&qword_256EB3200, type metadata accessor for TranscriptProtoASTFlatExprCallVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprCallVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8D7DE0()
{
  sub_23F6D3458(&qword_256EB3200, type metadata accessor for TranscriptProtoASTFlatExprCallVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprCallVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTFlatExprSayVariant.protoMessageName.getter()
{
  return sub_23F6D3738(32);
}

uint64_t sub_23F8D7E4C()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoASTFlatExprSayVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0F40, (uint64_t)&unk_256EB11F8, a1);
}

void TranscriptProtoASTFlatExprSayVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F9062A8(a1, a2);
}

void TranscriptProtoASTFlatExprSayVariant.traverse<A>(visitor:)()
{
  sub_23F913080();
}

void static TranscriptProtoASTFlatExprSayVariant.== infix(_:_:)()
{
  sub_23F89AB14();
}

uint64_t TranscriptProtoASTFlatExprSayVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTFlatExprSayVariant, &qword_256EB2228, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprSayVariant);
}

unint64_t sub_23F8D7EF0()
{
  static TranscriptProtoASTFlatExprSayVariant.protoMessageName.getter();
  return 0xD000000000000020;
}

void sub_23F8D7F14()
{
  TranscriptProtoASTFlatExprSayVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F8D7F28()
{
  sub_23F6D3458(&qword_256EB3EC0, type metadata accessor for TranscriptProtoASTFlatExprSayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprSayVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F8D7F7C()
{
  sub_23F6D3458(&qword_256EB3218, type metadata accessor for TranscriptProtoASTFlatExprSayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprSayVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8D7FC0()
{
  sub_23F6D3458(&qword_256EB3218, type metadata accessor for TranscriptProtoASTFlatExprSayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprSayVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTFlatExprPickVariant.protoMessageName.getter()
{
  return sub_23F6D3738(33);
}

uint64_t sub_23F8D802C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1210);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1210);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "rawEventId";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "pickType";
  *((_QWORD *)v11 + 1) = 8;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoASTFlatExprPickVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0F48, (uint64_t)qword_256EB1210, a1);
}

void TranscriptProtoASTFlatExprPickVariant.decodeMessage<A>(decoder:)()
{
  sub_23F90C870();
}

void TranscriptProtoASTFlatExprPickVariant.traverse<A>(visitor:)()
{
  sub_23F90C908();
}

void sub_23F8D81F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA8510);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTPickType(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA8510);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA8510);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTPickType);
    sub_23F6D3458(&qword_256EB32C0, type metadata accessor for TranscriptProtoASTPickType, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTPickType);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTPickType);
  }
}

void static TranscriptProtoASTFlatExprPickVariant.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  sub_23F6B50E8();
  v45 = *(_QWORD *)(sub_23F6D35C0() - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v42);
  v9 = MEMORY[0x24BDAC7A8](v8);
  sub_23F9242D8(v9, v10, v11, v12, v13, v14, v15, v16, v42);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B5C10(v18, v42);
  v19 = sub_23F6916B8(&qword_256EB2230);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA8510);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6D3BD8();
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v42 - v24;
  sub_23F6B6754();
  v28 = v28 && v26 == v27;
  if (!v28)
  {
    v5 = 0;
    if ((sub_23F6B5280() & 1) == 0)
      goto LABEL_17;
  }
  v29 = sub_23F924AC4();
  v30 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(v29);
  v31 = sub_23F923B3C(v30);
  sub_23F923368(v31, (uint64_t)v25);
  sub_23F923368(v1 + *(int *)(v5 + 20), v0);
  v32 = v3 + *(int *)(v19 + 48);
  sub_23F923368((uint64_t)v25, v3);
  sub_23F923368(v0, v32);
  v33 = sub_23F9230E4(v3);
  if (v28)
  {
    sub_23F6D387C(v0);
    sub_23F6D387C((uint64_t)v25);
    v35 = sub_23F9230E4(v32);
    if (v28)
    {
      sub_23F6D378C(v35, &qword_256EA8510);
LABEL_16:
      v38 = v2 + *(int *)(v5 + 24);
      v39 = v43;
      sub_23F923484(v43, v38);
      v40 = v1 + *(int *)(v5 + 24);
      v41 = v44;
      sub_23F923484(v44, v40);
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6B5624();
      sub_23F6D39FC(v41);
      sub_23F6D39FC(v39);
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  sub_23F9232A4(v33, v34, &qword_256EA8510);
  sub_23F9230E4(v32);
  if (v36)
  {
    sub_23F6D3748(v0);
    sub_23F6D3748((uint64_t)v25);
    sub_23F6D3C24(v37, type metadata accessor for TranscriptProtoASTPickType);
LABEL_14:
    sub_23F6D378C(v35, &qword_256EB2230);
    goto LABEL_17;
  }
  sub_23F923C04(v32);
  sub_23F924C20();
  sub_23F923838();
  sub_23F6D387C(v0);
  sub_23F6D387C((uint64_t)v25);
  sub_23F77E330(v4);
  sub_23F6D387C(v3);
  if ((v32 & 1) != 0)
    goto LABEL_16;
LABEL_17:
  sub_23F923FC4();
  sub_23F693DDC();
}

uint64_t TranscriptProtoASTFlatExprPickVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTFlatExprPickVariant, &qword_256EB2238, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPickVariant);
}

unint64_t sub_23F8D860C()
{
  static TranscriptProtoASTFlatExprPickVariant.protoMessageName.getter();
  return 0xD000000000000021;
}

void sub_23F8D8630()
{
  TranscriptProtoASTFlatExprPickVariant.decodeMessage<A>(decoder:)();
}

void sub_23F8D8644()
{
  TranscriptProtoASTFlatExprPickVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F8D8658()
{
  sub_23F6D3458(&qword_256EB3EB8, type metadata accessor for TranscriptProtoASTFlatExprPickVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPickVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F8D86AC()
{
  sub_23F6D3458(&qword_256EB3230, type metadata accessor for TranscriptProtoASTFlatExprPickVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPickVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8D86F0()
{
  sub_23F6D3458(&qword_256EB3230, type metadata accessor for TranscriptProtoASTFlatExprPickVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPickVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTFlatExprConfirmVariant.protoMessageName.getter()
{
  return sub_23F6D3738(36);
}

uint64_t sub_23F8D875C()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoASTFlatExprConfirmVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0F50, (uint64_t)&unk_256EB1228, a1);
}

void TranscriptProtoASTFlatExprConfirmVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F9062A8(a1, a2);
}

void TranscriptProtoASTFlatExprConfirmVariant.traverse<A>(visitor:)()
{
  sub_23F906318();
}

void static TranscriptProtoASTFlatExprConfirmVariant.== infix(_:_:)()
{
  sub_23F8AB6CC();
}

uint64_t TranscriptProtoASTFlatExprConfirmVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant, &qword_256EB2240, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprConfirmVariant);
}

unint64_t sub_23F8D87F8()
{
  static TranscriptProtoASTFlatExprConfirmVariant.protoMessageName.getter();
  return 0xD000000000000024;
}

void sub_23F8D881C()
{
  TranscriptProtoASTFlatExprConfirmVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F8D8830()
{
  sub_23F6D3458(&qword_256EB3EB0, type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprConfirmVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F8D8884()
{
  sub_23F6D3458(&qword_256EB3248, type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprConfirmVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8D88C8()
{
  sub_23F6D3458(&qword_256EB3248, type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprConfirmVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTFlatExprUndoVariant.protoMessageName.getter()
{
  return sub_23F6D3738(33);
}

uint64_t sub_23F8D8934()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoASTFlatExprUndoVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0F58, (uint64_t)&unk_256EB1240, a1);
}

void TranscriptProtoASTFlatExprUndoVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F9062A8(a1, a2);
}

void TranscriptProtoASTFlatExprUndoVariant.traverse<A>(visitor:)()
{
  sub_23F8D36A0();
}

void static TranscriptProtoASTFlatExprUndoVariant.== infix(_:_:)()
{
  sub_23F8D89B0();
}

void sub_23F8D89B0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F923590();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6D3DD8();
  v6 = v3[1];
  v7 = v2[1];
  if (!v6)
  {
    if (v7)
      goto LABEL_12;
    goto LABEL_11;
  }
  if (v7)
  {
    v8 = *v3 == *v2 && v6 == v7;
    if (v8 || (sub_23F6B5280() & 1) != 0)
    {
LABEL_11:
      v9 = sub_23F923C1C();
      sub_23F923308(v1, (uint64_t)v3 + *(int *)(v9 + 20));
      sub_23F6D36AC(*(int *)(v9 + 20));
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6D3600();
      sub_23F6D3820(v0);
      sub_23F6D3820(v1);
    }
  }
LABEL_12:
  sub_23F924700();
  sub_23F6B69E0();
}

uint64_t TranscriptProtoASTFlatExprUndoVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant, &qword_256EB2248, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUndoVariant);
}

unint64_t sub_23F8D8AB8()
{
  static TranscriptProtoASTFlatExprUndoVariant.protoMessageName.getter();
  return 0xD000000000000021;
}

void sub_23F8D8ADC()
{
  TranscriptProtoASTFlatExprUndoVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F8D8AF0()
{
  sub_23F6D3458(&qword_256EB3EA8, type metadata accessor for TranscriptProtoASTFlatExprUndoVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUndoVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F8D8B44()
{
  sub_23F6D3458(&qword_256EB3260, type metadata accessor for TranscriptProtoASTFlatExprUndoVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUndoVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8D8B88()
{
  sub_23F6D3458(&qword_256EB3260, type metadata accessor for TranscriptProtoASTFlatExprUndoVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUndoVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTFlatExprRejectVariant.protoMessageName.getter()
{
  return sub_23F6D3738(35);
}

uint64_t sub_23F8D8BF4()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoASTFlatExprRejectVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0F60, (uint64_t)&unk_256EB1258, a1);
}

void TranscriptProtoASTFlatExprRejectVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F9062A8(a1, a2);
}

void TranscriptProtoASTFlatExprRejectVariant.traverse<A>(visitor:)()
{
  sub_23F906318();
}

void static TranscriptProtoASTFlatExprRejectVariant.== infix(_:_:)()
{
  sub_23F8AB6CC();
}

uint64_t TranscriptProtoASTFlatExprRejectVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant, &qword_256EB2250, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprRejectVariant);
}

unint64_t sub_23F8D8C90()
{
  static TranscriptProtoASTFlatExprRejectVariant.protoMessageName.getter();
  return 0xD000000000000023;
}

void sub_23F8D8CB4()
{
  TranscriptProtoASTFlatExprRejectVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F8D8CC8()
{
  sub_23F6D3458(&qword_256EB3EA0, type metadata accessor for TranscriptProtoASTFlatExprRejectVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprRejectVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F8D8D1C()
{
  sub_23F6D3458(&qword_256EB3278, type metadata accessor for TranscriptProtoASTFlatExprRejectVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprRejectVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8D8D60()
{
  sub_23F6D3458(&qword_256EB3278, type metadata accessor for TranscriptProtoASTFlatExprRejectVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprRejectVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTFlatExprCancelVariant.protoMessageName.getter()
{
  return sub_23F6D3738(35);
}

uint64_t sub_23F8D8DCC()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoASTFlatExprCancelVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0F68, (uint64_t)&unk_256EB1270, a1);
}

void TranscriptProtoASTFlatExprCancelVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F9062A8(a1, a2);
}

void TranscriptProtoASTFlatExprCancelVariant.traverse<A>(visitor:)()
{
  sub_23F906318();
}

void static TranscriptProtoASTFlatExprCancelVariant.== infix(_:_:)()
{
  sub_23F8AB6CC();
}

uint64_t TranscriptProtoASTFlatExprCancelVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant, &qword_256EB2258, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprCancelVariant);
}

unint64_t sub_23F8D8E68()
{
  static TranscriptProtoASTFlatExprCancelVariant.protoMessageName.getter();
  return 0xD000000000000023;
}

void sub_23F8D8E8C()
{
  TranscriptProtoASTFlatExprCancelVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F8D8EA0()
{
  sub_23F6D3458(&qword_256EB3E98, type metadata accessor for TranscriptProtoASTFlatExprCancelVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprCancelVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F8D8EF4()
{
  sub_23F6D3458(&qword_256EB3290, type metadata accessor for TranscriptProtoASTFlatExprCancelVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprCancelVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8D8F38()
{
  sub_23F6D3458(&qword_256EB3290, type metadata accessor for TranscriptProtoASTFlatExprCancelVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprCancelVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTFlatExprContinuePlanningVariant.protoMessageName.getter()
{
  return sub_23F6D3738(45);
}

uint64_t sub_23F8D8FA4(uint64_t a1)
{
  return sub_23F9187D8(a1, qword_256EB1288);
}

uint64_t static TranscriptProtoASTFlatExprContinuePlanningVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0F70, (uint64_t)qword_256EB1288, a1);
}

uint64_t TranscriptProtoASTFlatExprContinuePlanningVariant.decodeMessage<A>(decoder:)()
{
  return sub_23F918844();
}

uint64_t TranscriptProtoASTFlatExprContinuePlanningVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTFlatExprContinuePlanningVariant, &qword_256EB2260, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprContinuePlanningVariant);
}

unint64_t sub_23F8D9004()
{
  static TranscriptProtoASTFlatExprContinuePlanningVariant.protoMessageName.getter();
  return 0xD00000000000002DLL;
}

uint64_t sub_23F8D9028()
{
  sub_23F6D3458(&qword_256EB3E90, type metadata accessor for TranscriptProtoASTFlatExprContinuePlanningVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprContinuePlanningVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F8D907C()
{
  sub_23F6D3458(&qword_256EB32A8, type metadata accessor for TranscriptProtoASTFlatExprContinuePlanningVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprContinuePlanningVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8D90C0()
{
  sub_23F6D3458(&qword_256EB32A8, type metadata accessor for TranscriptProtoASTFlatExprContinuePlanningVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprContinuePlanningVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTPickType.protoMessageName.getter()
{
  return sub_23F6D3738(22);
}

uint64_t sub_23F8D9128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB12A0);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB12A0);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "index";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 3;
  *(_QWORD *)v11 = "none";
  *((_QWORD *)v11 + 1) = 4;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoASTPickType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0F78, (uint64_t)qword_256EB12A0, a1);
}

void TranscriptProtoASTPickType.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_23F6D39E0(a1, a2);
  while (1)
  {
    v3 = sub_23FB2D7B4();
    if (v2 || (v4 & 1) != 0)
      break;
    if (v3 == 3)
    {
      sub_23F6D3598();
      sub_23F8D9384();
    }
    else if (v3 == 1)
    {
      sub_23F6D3598();
      sub_23F8D92F4();
    }
    sub_23F6B6098();
  }
  sub_23F6D3C2C();
}

uint64_t sub_23F8D92F4()
{
  return sub_23FB2D844();
}

uint64_t sub_23F8D9384()
{
  return sub_23FB2D7D8();
}

void TranscriptProtoASTPickType.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  sub_23F923768();
  if (*(unsigned __int8 *)(v0 + 8) == 255)
    goto LABEL_6;
  v2 = sub_23F92371C();
  if ((v3 & 1) != 0)
    sub_23F8D94BC(v2);
  else
    sub_23F8D9488(v2);
  if (!v1)
  {
LABEL_6:
    type metadata accessor for TranscriptProtoASTPickType(0);
    sub_23F6D3A68();
  }
  sub_23F6D377C();
}

uint64_t sub_23F8D9488(uint64_t result)
{
  if ((*(_BYTE *)(result + 8) & 1) == 0)
    return sub_23FB2D97C();
  __break(1u);
  return result;
}

uint64_t sub_23F8D94BC(uint64_t result)
{
  int v1;

  v1 = *(unsigned __int8 *)(result + 8);
  if (v1 != 255 && (v1 & 1) != 0)
    return sub_23FB2D940();
  __break(1u);
  return result;
}

void static TranscriptProtoASTPickType.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F6D36BC();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6D3DD8();
  v5 = *(unsigned __int8 *)(v2 + 8);
  v6 = *((unsigned __int8 *)v1 + 8);
  if (v5 == 255)
  {
    if (v6 == 255)
    {
LABEL_3:
      v7 = type metadata accessor for TranscriptProtoASTPickType(0);
      sub_23F6D3614(*(int *)(v7 + 20));
      sub_23F6D36AC(*(int *)(v7 + 20));
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6D3600();
      sub_23F6D36D0();
      sub_23F6D3820(v0);
    }
  }
  else
  {
    if (v6 == 255)
      goto LABEL_5;
    v8 = *v1;
    if ((v5 & 1) != 0)
    {
      if ((v6 & 1) != 0 && ((((*(_QWORD *)v2 & 1) == 0) ^ v8) & 1) != 0)
        goto LABEL_3;
    }
    else if ((v6 & 1) == 0 && *(_QWORD *)v2 == v8)
    {
      goto LABEL_3;
    }
  }
LABEL_5:
  sub_23F6D3B34();
  sub_23F6B69E0();
}

uint64_t TranscriptProtoASTPickType.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTPickType, &qword_256EB2268, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTPickType);
}

unint64_t sub_23F8D9610()
{
  static TranscriptProtoASTPickType.protoMessageName.getter();
  return 0xD000000000000016;
}

void sub_23F8D9634(uint64_t a1, uint64_t a2)
{
  TranscriptProtoASTPickType.decodeMessage<A>(decoder:)(a1, a2);
}

void sub_23F8D9648()
{
  TranscriptProtoASTPickType.traverse<A>(visitor:)();
}

uint64_t sub_23F8D965C()
{
  sub_23F6D3458(&qword_256EB3E88, type metadata accessor for TranscriptProtoASTPickType, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTPickType);
  return sub_23FB2D784();
}

uint64_t sub_23F8D96B0()
{
  sub_23F6D3458(&qword_256EB32C0, type metadata accessor for TranscriptProtoASTPickType, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTPickType);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8D96F4()
{
  sub_23F6D3458(&qword_256EB32C0, type metadata accessor for TranscriptProtoASTPickType, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTPickType);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTFlatExprSearchVariant.protoMessageName.getter()
{
  return sub_23F6D3738(35);
}

uint64_t sub_23F8D9760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB12B8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB12B8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "query";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "isLowConfidenceKnowledge";
  *((_QWORD *)v11 + 1) = 24;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "pickOne";
  *((_QWORD *)v13 + 1) = 7;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoASTFlatExprSearchVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0F80, (uint64_t)qword_256EB12B8, a1);
}

void TranscriptProtoASTFlatExprSearchVariant.decodeMessage<A>(decoder:)()
{
  sub_23F905C4C();
}

void TranscriptProtoASTFlatExprSearchVariant.traverse<A>(visitor:)()
{
  sub_23F905CDC();
}

void static TranscriptProtoASTFlatExprSearchVariant.== infix(_:_:)()
{
  sub_23F8F5834();
}

uint64_t TranscriptProtoASTFlatExprSearchVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant, &qword_256EB2270, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprSearchVariant);
}

unint64_t sub_23F8D9960()
{
  static TranscriptProtoASTFlatExprSearchVariant.protoMessageName.getter();
  return 0xD000000000000023;
}

void sub_23F8D9984()
{
  TranscriptProtoSearchExpression.decodeMessage<A>(decoder:)();
}

void sub_23F8D9998()
{
  TranscriptProtoASTFlatExprSearchVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F8D99AC()
{
  sub_23F6D3458(&qword_256EB3E80, type metadata accessor for TranscriptProtoASTFlatExprSearchVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprSearchVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F8D9A00()
{
  sub_23F6D3458(&qword_256EB32D8, type metadata accessor for TranscriptProtoASTFlatExprSearchVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprSearchVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8D9A44()
{
  sub_23F6D3458(&qword_256EB32D8, type metadata accessor for TranscriptProtoASTFlatExprSearchVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprSearchVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTFlatExprUpdateParametersVariant.protoMessageName.getter()
{
  return sub_23F6D3738(45);
}

uint64_t sub_23F8D9AB0()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoASTFlatExprUpdateParametersVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0F88, (uint64_t)&unk_256EB12D0, a1);
}

void TranscriptProtoASTFlatExprUpdateParametersVariant.decodeMessage<A>(decoder:)()
{
  sub_23F913C48();
}

void TranscriptProtoASTFlatExprUpdateParametersVariant.traverse<A>(visitor:)()
{
  sub_23F8B4D24();
}

void static TranscriptProtoASTFlatExprUpdateParametersVariant.== infix(_:_:)()
{
  sub_23F89AB14();
}

uint64_t TranscriptProtoASTFlatExprUpdateParametersVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant, &qword_256EB2280, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUpdateParametersVariant);
}

unint64_t sub_23F8D9B84()
{
  static TranscriptProtoASTFlatExprUpdateParametersVariant.protoMessageName.getter();
  return 0xD00000000000002DLL;
}

void sub_23F8D9BA8()
{
  TranscriptProtoASTFlatExprUpdateParametersVariant.decodeMessage<A>(decoder:)();
}

void sub_23F8D9BBC()
{
  TranscriptProtoASTFlatExprUpdateParametersVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F8D9BD0()
{
  sub_23F6D3458(&qword_256EB3E78, type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUpdateParametersVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F8D9C24()
{
  sub_23F6D3458(&qword_256EB32F0, type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUpdateParametersVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8D9C68()
{
  sub_23F6D3458(&qword_256EB32F0, type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUpdateParametersVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTFlatExprGetMentionedApps.protoMessageName.getter()
{
  return sub_23F6D3738(38);
}

uint64_t sub_23F8D9CD4(uint64_t a1)
{
  return sub_23F9187D8(a1, qword_256EB12E8);
}

uint64_t static TranscriptProtoASTFlatExprGetMentionedApps._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0F90, (uint64_t)qword_256EB12E8, a1);
}

uint64_t TranscriptProtoASTFlatExprGetMentionedApps.decodeMessage<A>(decoder:)()
{
  return sub_23F918844();
}

uint64_t TranscriptProtoASTFlatExprGetMentionedApps.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps, &qword_256EB2288, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprGetMentionedApps);
}

unint64_t sub_23F8D9D34()
{
  static TranscriptProtoASTFlatExprGetMentionedApps.protoMessageName.getter();
  return 0xD000000000000026;
}

uint64_t sub_23F8D9D58()
{
  sub_23F6D3458(&qword_256EB3E70, type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprGetMentionedApps);
  return sub_23FB2D784();
}

uint64_t sub_23F8D9DAC()
{
  sub_23F6D3458(&qword_256EB3308, type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprGetMentionedApps);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8D9DF0()
{
  sub_23F6D3458(&qword_256EB3308, type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprGetMentionedApps);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTFlatExprUpdateVariant.protoMessageName.getter()
{
  return sub_23F6D3738(35);
}

uint64_t sub_23F8D9E58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1300);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1300);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1C0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "lhs";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "path";
  *((_QWORD *)v11 + 1) = 4;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "value";
  *((_QWORD *)v13 + 1) = 5;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)((char *)v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "kind";
  *((_QWORD *)v15 + 1) = 4;
  v15[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoASTFlatExprUpdateVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0F98, (uint64_t)qword_256EB1300, a1);
}

void TranscriptProtoASTFlatExprUpdateVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;

  sub_23F6B5220();
  sub_23F6D356C();
  if (!v12)
  {
    while ((v13 & 1) == 0)
    {
      sub_23F6D3E98();
      if (!(!v24 & v23))
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_23F8DA094 + 4 * byte_23FB74D4D[v22]))(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10, a11, a12);
        return;
      }
      sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void sub_23F8DA100()
{
  void (*v0)(void);

  sub_23F924840();
  v0();
  sub_23F92408C();
  sub_23F6D3674();
}

void TranscriptProtoASTFlatExprUpdateVariant.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_23F923DFC();
  sub_23F8DA238(v2);
  if (!v1)
  {
    sub_23F92468C();
    if (v3)
    {
      sub_23F924A08();
      sub_23F6D3458(&qword_256EB2210, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
      sub_23F6D36E4();
    }
    sub_23F6D3664();
    sub_23F8DA3A8(v4);
    if (*(_BYTE *)(v0 + 8) == 1)
    {
      sub_23F918AA0();
      sub_23F923FE8();
    }
    type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant(0);
    sub_23F6D37BC();
  }
  sub_23F6D3BB8();
}

void sub_23F8DA238(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t updated;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA84E8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant(0);
  sub_23F7A1EDC(a1 + *(int *)(updated + 24), (uint64_t)v4, &qword_256EA84E8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA84E8);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValue);
    sub_23F6D3458(&qword_256EB2210, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValue);
  }
}

void sub_23F8DA3A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t updated;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA84E8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant(0);
  sub_23F7A1EDC(a1 + *(int *)(updated + 28), (uint64_t)v4, &qword_256EA84E8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA84E8);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValue);
    sub_23F6D3458(&qword_256EB2210, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValue);
  }
}

void static TranscriptProtoASTFlatExprUpdateVariant.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *updated;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t (*v48)(_QWORD);
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  v72 = sub_23F6B53A4();
  v75 = *(_QWORD *)(v72 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  v74 = (uint64_t)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  v11 = MEMORY[0x24BDAC7A8](v10);
  sub_23F9242C0(v11, v12, v13, v14, v15, v16, v17, v18, v71);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F6B5BD8(v20, v71);
  v21 = sub_23F6916B8(&qword_256EB2298);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v22);
  v78 = (uint64_t)&v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F878DA4();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v25);
  v76 = (char *)&v71 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v27);
  v79 = (uint64_t)&v71 - v28;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v29);
  v77 = (uint64_t)&v71 - v30;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F876D18();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F72E168();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F6B6B3C();
  updated = (int *)type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant(0);
  v35 = updated[6];
  v81 = v7;
  sub_23F923164(v7 + v35, v3);
  v36 = updated[6];
  v82 = v5;
  sub_23F923164(v5 + v36, v2);
  v37 = v0 + *(int *)(v21 + 48);
  v38 = sub_23F8783E8();
  sub_23F923164(v38, v39);
  sub_23F923164(v2, v37);
  sub_23F9230E4(v0);
  if (v42)
  {
    sub_23F6B64F4(v2);
    sub_23F6B64F4(v3);
    v41 = sub_23F9230E4(v37);
    if (v42)
    {
      sub_23F923588(v41, &qword_256EA84E8);
      goto LABEL_12;
    }
LABEL_9:
    v44 = v0;
LABEL_10:
    sub_23F6B4F84(v44, &qword_256EB2298);
    goto LABEL_25;
  }
  sub_23F923CD0(v0, v40, &qword_256EA84E8);
  sub_23F9230E4(v37);
  if (v42)
  {
    sub_23F6B64F4(v2);
    sub_23F6B64F4(v3);
    sub_23F713FFC(v43, type metadata accessor for TranscriptProtoASTFlatValue);
    goto LABEL_9;
  }
  sub_23F7E76D0(v37, v80, type metadata accessor for TranscriptProtoASTFlatValue);
  sub_23F7D2958();
  static TranscriptProtoASTFlatValue.== infix(_:_:)();
  v46 = v45;
  v47 = sub_23F77E668();
  sub_23F6D3508(v47, v48);
  sub_23F6D387C(v2);
  sub_23F6D387C(v3);
  sub_23F6D3928(v1);
  sub_23F6D387C(v0);
  if ((v46 & 1) == 0)
    goto LABEL_25;
LABEL_12:
  v50 = v81;
  v49 = v82;
  sub_23F696170();
  if ((v51 & 1) == 0)
    goto LABEL_25;
  v52 = v77;
  sub_23F92332C(v50 + updated[7], v77);
  v53 = v79;
  sub_23F92332C(v49 + updated[7], v79);
  v54 = v78;
  v55 = v78 + *(int *)(v21 + 48);
  sub_23F92332C(v52, v78);
  sub_23F92332C(v53, v55);
  sub_23F9230E4(v54);
  if (!v42)
  {
    v58 = (uint64_t)v76;
    sub_23F923640(v54, v56, &qword_256EA84E8);
    sub_23F9230E4(v55);
    if (!v59)
    {
      v61 = v80;
      sub_23F7F6534(v55, v80);
      sub_23F8790C8();
      static TranscriptProtoASTFlatValue.== infix(_:_:)();
      v63 = v62;
      sub_23F6D38A0(v61);
      sub_23F6B6EF8(v79);
      sub_23F6B6EF8(v52);
      sub_23F6D38A0(v58);
      sub_23F6B6EF8(v54);
      if ((v63 & 1) == 0)
        goto LABEL_25;
      goto LABEL_23;
    }
    sub_23F6B64F4(v79);
    sub_23F6B64F4(v52);
    sub_23F72E404(v60, type metadata accessor for TranscriptProtoASTFlatValue);
    goto LABEL_21;
  }
  sub_23F6D3748(v53);
  sub_23F6D3748(v52);
  v57 = sub_23F9230E4(v55);
  if (!v42)
  {
LABEL_21:
    v44 = v54;
    goto LABEL_10;
  }
  sub_23F6D378C(v57, &qword_256EA84E8);
LABEL_23:
  if (*(unsigned __int8 *)(v50 + 8) == *(unsigned __int8 *)(v49 + 8))
  {
    v64 = v50 + updated[8];
    v65 = v75;
    v67 = v72;
    v66 = v73;
    sub_23F878B18(v73, v64);
    v68 = v49 + updated[8];
    v69 = v74;
    sub_23F878B18(v74, v68);
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F9235A4();
    v70 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
    v70(v69, v67);
    v70(v66, v67);
  }
LABEL_25:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoASTFlatExprUpdateVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant, &qword_256EB22A0, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUpdateVariant);
}

unint64_t sub_23F8DA9C0()
{
  static TranscriptProtoASTFlatExprUpdateVariant.protoMessageName.getter();
  return 0xD000000000000023;
}

#error "23F8DA9EC: call analysis failed (funcsize=5)"

void sub_23F8DA9F8()
{
  TranscriptProtoASTFlatExprUpdateVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F8DAA0C()
{
  sub_23F6D3458(&qword_256EB3E68, type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUpdateVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F8DAA60()
{
  sub_23F6D3458(&qword_256EB2278, type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUpdateVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8DAAA4()
{
  sub_23F6D3458(&qword_256EB2278, type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUpdateVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTFlatExprPickOneVariant.protoMessageName.getter()
{
  return sub_23F6D3738(36);
}

uint64_t sub_23F8DAB10()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoASTFlatExprPickOneVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0FA0, (uint64_t)&unk_256EB1318, a1);
}

void TranscriptProtoASTFlatExprPickOneVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F9062A8(a1, a2);
}

void TranscriptProtoASTFlatExprPickOneVariant.traverse<A>(visitor:)()
{
  sub_23F906318();
}

void static TranscriptProtoASTFlatExprPickOneVariant.== infix(_:_:)()
{
  sub_23F8AB6CC();
}

uint64_t TranscriptProtoASTFlatExprPickOneVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant, &qword_256EB22A8, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPickOneVariant);
}

unint64_t sub_23F8DABAC()
{
  static TranscriptProtoASTFlatExprPickOneVariant.protoMessageName.getter();
  return 0xD000000000000024;
}

void sub_23F8DABD0()
{
  TranscriptProtoASTFlatExprPickOneVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F8DABE4()
{
  sub_23F6D3458(&qword_256EB3E60, type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPickOneVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F8DAC38()
{
  sub_23F6D3458(&qword_256EB3330, type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPickOneVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8DAC7C()
{
  sub_23F6D3458(&qword_256EB3330, type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPickOneVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTFlatExprResolveToolVariant.protoMessageName.getter()
{
  return sub_23F6D3738(40);
}

uint64_t sub_23F8DACE8()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoASTFlatExprResolveToolVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0FA8, (uint64_t)&unk_256EB1330, a1);
}

void TranscriptProtoASTFlatExprResolveToolVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F9062A8(a1, a2);
}

void TranscriptProtoASTFlatExprResolveToolVariant.traverse<A>(visitor:)()
{
  sub_23F913080();
}

void static TranscriptProtoASTFlatExprResolveToolVariant.== infix(_:_:)()
{
  sub_23F89AB14();
}

uint64_t TranscriptProtoASTFlatExprResolveToolVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant, &qword_256EB22B0, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprResolveToolVariant);
}

unint64_t sub_23F8DAD8C()
{
  static TranscriptProtoASTFlatExprResolveToolVariant.protoMessageName.getter();
  return 0xD000000000000028;
}

void sub_23F8DADB0()
{
  TranscriptProtoASTFlatExprResolveToolVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F8DADC4()
{
  sub_23F6D3458(&qword_256EB3E58, type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprResolveToolVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F8DAE18()
{
  sub_23F6D3458(&qword_256EB3348, type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprResolveToolVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8DAE5C()
{
  sub_23F6D3458(&qword_256EB3348, type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprResolveToolVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTFlatExprDotVariant.protoMessageName.getter()
{
  return sub_23F6D3738(32);
}

uint64_t sub_23F8DAEC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1348);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1348);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "lhs";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "index";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoASTFlatExprDotVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0FB0, (uint64_t)qword_256EB1348, a1);
}

void TranscriptProtoASTFlatExprDotVariant.decodeMessage<A>(decoder:)()
{
  sub_23F90372C();
}

void TranscriptProtoASTFlatExprDotVariant.traverse<A>(visitor:)()
{
  sub_23F8F224C();
}

void sub_23F8DB08C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA84E8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA84E8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA84E8);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValue);
    sub_23F6D3458(&qword_256EB2210, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValue);
  }
}

void static TranscriptProtoASTFlatExprDotVariant.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  v45 = sub_23F6B53A4();
  v47 = *(_QWORD *)(v45 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  v46 = (uint64_t)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v19 = sub_23F9234E4(v11, v12, v13, v14, v15, v16, v17, v18, v43);
  v20 = type metadata accessor for TranscriptProtoASTFlatValue(v19);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B57F4(v22, v43);
  v23 = sub_23F6916B8(&qword_256EB2298);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6B5208();
  v25 = (uint64_t (*)(uint64_t))&qword_256EA84E8;
  sub_23F72E4BC();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F6B65E0();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F6D3BD8();
  MEMORY[0x24BDAC7A8](v28);
  v29 = sub_23F9238C8();
  v30 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(v29);
  v31 = *(int *)(v30 + 20);
  v48 = v7;
  sub_23F923300(v7 + v31, v0);
  v32 = *(int *)(v30 + 20);
  v49 = v5;
  sub_23F923300(v5 + v32, v1);
  v33 = v2 + *(int *)(v23 + 48);
  sub_23F923300(v0, v2);
  sub_23F923300(v1, v33);
  sub_23F6B5164(v2, 1, v20);
  if (!v36)
  {
    sub_23F923760(v2, v34, &qword_256EA84E8);
    sub_23F6B5164(v33, 1, v20);
    if (!v36)
    {
      v25 = type metadata accessor for TranscriptProtoASTFlatValue;
      v5 = v44;
      sub_23F92380C(v33, v44);
      sub_23F7F64A8();
      static TranscriptProtoASTFlatValue.== infix(_:_:)();
      v39 = v38;
      sub_23F77DAB0(v5);
      sub_23F6D387C(v1);
      sub_23F6D387C(v0);
      sub_23F77DAB0(v3);
      sub_23F6D387C(v2);
      if ((v39 & 1) == 0)
        goto LABEL_18;
      goto LABEL_12;
    }
    sub_23F6D3748(v1);
    sub_23F6D3748(v0);
    sub_23F77DB94(v37, type metadata accessor for TranscriptProtoASTFlatValue);
LABEL_9:
    sub_23F6D378C(v35, &qword_256EB2298);
    goto LABEL_18;
  }
  sub_23F6B62DC(v1);
  sub_23F6B62DC(v0);
  v35 = sub_23F6B5164(v33, 1, v20);
  if (!v36)
    goto LABEL_9;
  sub_23F6D378C(v35, &qword_256EA84E8);
LABEL_12:
  sub_23F923B60();
  if (v36)
    v42 = v40 == v41;
  else
    v42 = 0;
  if (v42 || (sub_23F6B5280() & 1) != 0)
  {
    sub_23F9238A8();
    sub_23F878B18(v46, v5 + *(int *)(v30 + 24));
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F9235A4();
    sub_23F9237A4();
    sub_23F923C50((uint64_t)v25);
  }
LABEL_18:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoASTFlatExprDotVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTFlatExprDotVariant, &qword_256EB22B8, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprDotVariant);
}

unint64_t sub_23F8DB4B8()
{
  static TranscriptProtoASTFlatExprDotVariant.protoMessageName.getter();
  return 0xD000000000000020;
}

void sub_23F8DB4DC()
{
  TranscriptProtoASTFlatExprDotVariant.decodeMessage<A>(decoder:)();
}

void sub_23F8DB4F0()
{
  TranscriptProtoASTFlatExprDotVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F8DB504()
{
  sub_23F6D3458(&qword_256EB3E50, type metadata accessor for TranscriptProtoASTFlatExprDotVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprDotVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F8DB558()
{
  sub_23F6D3458(&qword_256EB3360, type metadata accessor for TranscriptProtoASTFlatExprDotVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprDotVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8DB59C()
{
  sub_23F6D3458(&qword_256EB3360, type metadata accessor for TranscriptProtoASTFlatExprDotVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprDotVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTFlatAssignExpr.protoMessageName.getter()
{
  return sub_23F6D3738(28);
}

uint64_t sub_23F8DB608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1360);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1360);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "name";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "expr";
  *((_QWORD *)v11 + 1) = 4;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoASTFlatAssignExpr._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0FB8, (uint64_t)qword_256EB1360, a1);
}

void TranscriptProtoASTFlatAssignExpr.decodeMessage<A>(decoder:)()
{
  sub_23F90C870();
}

void TranscriptProtoASTFlatAssignExpr.traverse<A>(visitor:)()
{
  sub_23F90C908();
}

void sub_23F8DB7D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB22C8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatExpr(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTFlatAssignExpr(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EB22C8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB22C8);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExpr);
    sub_23F6D3458(&qword_256EB3390, type metadata accessor for TranscriptProtoASTFlatExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExpr);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExpr);
  }
}

void static TranscriptProtoASTFlatAssignExpr.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_23F6B50E8();
  v39 = *(_QWORD *)(sub_23F6D35C0() - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v36[0]);
  MEMORY[0x24BDAC7A8](v8);
  v37 = (uint64_t)v36 - v9;
  v10 = sub_23F6D398C();
  type metadata accessor for TranscriptProtoASTFlatExpr(v10);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B5C10(v12, v36[0]);
  v13 = sub_23F6916B8(&qword_256EB22C0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EB22C8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6D3BD8();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v36 - v18;
  sub_23F6B6754();
  v22 = v22 && v20 == v21;
  if (!v22)
  {
    v5 = 0;
    if ((sub_23F6B5280() & 1) == 0)
      goto LABEL_17;
  }
  v23 = sub_23F924AC4();
  v24 = type metadata accessor for TranscriptProtoASTFlatAssignExpr(v23);
  v25 = sub_23F923B3C(v24);
  sub_23F923368(v25, (uint64_t)v19);
  sub_23F923368(v1 + *(int *)(v5 + 20), v0);
  v26 = v3 + *(int *)(v13 + 48);
  sub_23F923368((uint64_t)v19, v3);
  sub_23F923368(v0, v26);
  v27 = sub_23F9230E4(v3);
  if (v22)
  {
    sub_23F6D387C(v0);
    sub_23F6D387C((uint64_t)v19);
    v29 = sub_23F9230E4(v26);
    if (v22)
    {
      sub_23F6D378C(v29, &qword_256EB22C8);
LABEL_16:
      v32 = v2 + *(int *)(v5 + 24);
      v33 = v37;
      sub_23F923484(v37, v32);
      v34 = v1 + *(int *)(v5 + 24);
      v35 = v38;
      sub_23F923484(v38, v34);
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6B5624();
      sub_23F6D39FC(v35);
      sub_23F6D39FC(v33);
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  sub_23F9232A4(v27, v28, &qword_256EB22C8);
  sub_23F9230E4(v26);
  if (v30)
  {
    sub_23F6D3748(v0);
    sub_23F6D3748((uint64_t)v19);
    sub_23F6D3C24(v31, type metadata accessor for TranscriptProtoASTFlatExpr);
LABEL_14:
    sub_23F6D378C(v29, &qword_256EB22C0);
    goto LABEL_17;
  }
  sub_23F923C04(v26);
  sub_23F6D3D70();
  static TranscriptProtoASTFlatExpr.== infix(_:_:)();
  sub_23F923838();
  sub_23F6D387C(v0);
  sub_23F6D387C((uint64_t)v19);
  sub_23F77E330(v4);
  sub_23F6D387C(v3);
  if ((v26 & 1) != 0)
    goto LABEL_16;
LABEL_17:
  sub_23F923FC4();
  sub_23F693DDC();
}

uint64_t TranscriptProtoASTFlatAssignExpr.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTFlatAssignExpr, &qword_256EB22D0, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatAssignExpr);
}

unint64_t sub_23F8DBC00()
{
  static TranscriptProtoASTFlatAssignExpr.protoMessageName.getter();
  return 0xD00000000000001CLL;
}

void sub_23F8DBC24()
{
  TranscriptProtoASTFlatAssignExpr.decodeMessage<A>(decoder:)();
}

void sub_23F8DBC38()
{
  TranscriptProtoASTFlatAssignExpr.traverse<A>(visitor:)();
}

uint64_t sub_23F8DBC4C()
{
  sub_23F6D3458(&qword_256EB3E48, type metadata accessor for TranscriptProtoASTFlatAssignExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatAssignExpr);
  return sub_23FB2D784();
}

uint64_t sub_23F8DBCA0()
{
  sub_23F6D3458(&qword_256EB3378, type metadata accessor for TranscriptProtoASTFlatAssignExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatAssignExpr);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8DBCE4()
{
  sub_23F6D3458(&qword_256EB3378, type metadata accessor for TranscriptProtoASTFlatAssignExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatAssignExpr);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTFlatExpr.protoMessageName.getter()
{
  return sub_23F6D3738(22);
}

uint64_t sub_23F8DBD50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);
  unint64_t v9;
  _QWORD *v10;
  char *v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  _QWORD *v38;
  char *v39;
  _QWORD *v40;
  char *v41;
  _QWORD *v42;
  char *v43;
  _QWORD *v44;
  char *v45;
  uint64_t v47;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1378);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1378);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_23FB899A0;
  v5 = v47 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v47 + v4) = 1;
  *(_QWORD *)v5 = "value";
  *(_QWORD *)(v5 + 8) = 5;
  *(_BYTE *)(v5 + 16) = 2;
  v6 = *MEMORY[0x24BE5C318];
  v7 = sub_23FB2D9DC();
  v8 = *(void (**)(void))(*(_QWORD *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  v9 = v47 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v47 + v4 + v3) = 2;
  *(_QWORD *)v9 = "prefix";
  *(_QWORD *)(v9 + 8) = 6;
  *(_BYTE *)(v9 + 16) = 2;
  v8();
  v10 = (_QWORD *)(v47 + v4 + 2 * v3);
  v11 = (char *)v10 + *(int *)(v1 + 48);
  *v10 = 3;
  *(_QWORD *)v11 = "infix";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v8();
  v12 = (_QWORD *)(v47 + v4 + 3 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 4;
  *(_QWORD *)v13 = "dot";
  *((_QWORD *)v13 + 1) = 3;
  v13[16] = 2;
  v8();
  v14 = (_QWORD *)(v47 + v4 + 4 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 5;
  *(_QWORD *)v15 = "index";
  *((_QWORD *)v15 + 1) = 5;
  v15[16] = 2;
  v8();
  v16 = (_QWORD *)(v47 + v4 + 5 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 6;
  *(_QWORD *)v17 = "call";
  *((_QWORD *)v17 + 1) = 4;
  v17[16] = 2;
  v8();
  v18 = (_QWORD *)(v47 + v4 + 6 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 8;
  *(_QWORD *)v19 = "endOfPlan";
  *((_QWORD *)v19 + 1) = 9;
  v19[16] = 2;
  v8();
  v20 = (_QWORD *)(v47 + v4 + 7 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 9;
  *(_QWORD *)v21 = "say";
  *((_QWORD *)v21 + 1) = 3;
  v21[16] = 2;
  v8();
  v22 = (_QWORD *)(v47 + v4 + 8 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 10;
  *(_QWORD *)v23 = "pick";
  *((_QWORD *)v23 + 1) = 4;
  v23[16] = 2;
  v8();
  v24 = (_QWORD *)(v47 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 11;
  *(_QWORD *)v25 = "confirm";
  *((_QWORD *)v25 + 1) = 7;
  v25[16] = 2;
  v8();
  v26 = (_QWORD *)(v47 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 12;
  *(_QWORD *)v27 = "search";
  *((_QWORD *)v27 + 1) = 6;
  v27[16] = 2;
  v8();
  v28 = (_QWORD *)(v47 + v4 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 13;
  *(_QWORD *)v29 = "pickOne";
  *((_QWORD *)v29 + 1) = 7;
  v29[16] = 2;
  v8();
  v30 = (_QWORD *)(v47 + v4 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 14;
  *(_QWORD *)v31 = "noMatchingTool";
  *((_QWORD *)v31 + 1) = 14;
  v31[16] = 2;
  v8();
  v32 = (_QWORD *)(v47 + v4 + 13 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 15;
  *(_QWORD *)v33 = "undo";
  *((_QWORD *)v33 + 1) = 4;
  v33[16] = 2;
  v8();
  v34 = (_QWORD *)(v47 + v4 + 14 * v3);
  v35 = (char *)v34 + *(int *)(v1 + 48);
  *v34 = 16;
  *(_QWORD *)v35 = "resolveTool";
  *((_QWORD *)v35 + 1) = 11;
  v35[16] = 2;
  v8();
  v36 = (_QWORD *)(v47 + v4 + 15 * v3);
  v37 = (char *)v36 + *(int *)(v1 + 48);
  *v36 = 17;
  *(_QWORD *)v37 = "reject";
  *((_QWORD *)v37 + 1) = 6;
  v37[16] = 2;
  v8();
  v38 = (_QWORD *)(v47 + v4 + 16 * v3);
  v39 = (char *)v38 + *(int *)(v1 + 48);
  *v38 = 18;
  *(_QWORD *)v39 = "cancel";
  *((_QWORD *)v39 + 1) = 6;
  v39[16] = 2;
  v8();
  v40 = (_QWORD *)(v47 + v4 + 17 * v3);
  v41 = (char *)v40 + *(int *)(v1 + 48);
  *v40 = 19;
  *(_QWORD *)v41 = "continuePlanning";
  *((_QWORD *)v41 + 1) = 16;
  v41[16] = 2;
  v8();
  v42 = (_QWORD *)(v47 + v4 + 18 * v3);
  v43 = (char *)v42 + *(int *)(v1 + 48);
  *v42 = 20;
  *(_QWORD *)v43 = "updateParameters";
  *((_QWORD *)v43 + 1) = 16;
  v43[16] = 2;
  v8();
  v44 = (_QWORD *)(v47 + v4 + 19 * v3);
  v45 = (char *)v44 + *(int *)(v1 + 48);
  *v44 = 21;
  *(_QWORD *)v45 = "getMentionedApps";
  *((_QWORD *)v45 + 1) = 16;
  v45[16] = 2;
  v8();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoASTFlatExpr._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0FC0, (uint64_t)qword_256EB1378, a1);
}

void TranscriptProtoASTFlatExpr.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  sub_23F6D3EA4();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          v3 = sub_23F923100();
          sub_23F8DC404(v3, v4, v5, v6);
          break;
        case 2:
          v7 = sub_23F923100();
          sub_23F8DC7EC(v7, v8, v9, v10);
          break;
        case 3:
          v11 = sub_23F923100();
          sub_23F8DCBD8(v11, v12, v13, v14);
          break;
        case 4:
          v15 = sub_23F923100();
          sub_23F8DCFC4(v15, v16, v17, v18);
          break;
        case 5:
          v19 = sub_23F923100();
          sub_23F8DD3B0(v19, v20, v21, v22);
          break;
        case 6:
          v23 = sub_23F923100();
          sub_23F8DD79C(v23, v24, v25, v26);
          break;
        case 8:
        case 14:
          sub_23F923914();
          sub_23F880D48();
          break;
        case 9:
          v27 = sub_23F923100();
          sub_23F8DDB88(v27, v28, v29, v30);
          break;
        case 10:
          v31 = sub_23F923100();
          sub_23F8DDF74(v31, v32, v33, v34);
          break;
        case 11:
          v35 = sub_23F923100();
          sub_23F8DE360(v35, v36, v37, v38);
          break;
        case 12:
          v39 = sub_23F923100();
          sub_23F8DE74C(v39, v40, v41, v42);
          break;
        case 13:
          v43 = sub_23F923100();
          sub_23F8DEB38(v43, v44, v45, v46);
          break;
        case 15:
          v47 = sub_23F923100();
          sub_23F8DEF24(v47, v48, v49, v50);
          break;
        case 16:
          v51 = sub_23F923100();
          sub_23F8DF310(v51, v52, v53, v54);
          break;
        case 17:
          v55 = sub_23F923100();
          sub_23F8DF6FC(v55, v56, v57, v58);
          break;
        case 18:
          v71 = sub_23F923100();
          sub_23F8DFAE8(v71, v72, v73, v74);
          break;
        case 19:
          v59 = sub_23F923100();
          sub_23F8DFED4(v59, v60, v61, v62);
          break;
        case 20:
          v63 = sub_23F923100();
          sub_23F8E02C0(v63, v64, v65, v66);
          break;
        case 21:
          v67 = sub_23F923100();
          sub_23F8E06AC(v67, v68, v69, v70);
          break;
        default:
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D3750();
}

void sub_23F8DC404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EA84E8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB22D8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB22D8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    }
    else
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EA84E8);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoASTFlatValue);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatValue);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2210, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EA84E8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EA84E8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EA84E8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoASTFlatValue);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EA84E8);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB22D8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoASTFlatValue);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8DC7EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4478);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB22D8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB22D8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4478);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3490, type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPrefixVariant);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4478);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4478);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4478);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4478);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB22D8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8DCBD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4480);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB22D8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB22D8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4480);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoASTFlatExprInfixVariant);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatExprInfixVariant);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3400, type metadata accessor for TranscriptProtoASTFlatExprInfixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprInfixVariant);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4480);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4480);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4480);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoASTFlatExprInfixVariant);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4480);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB22D8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoASTFlatExprInfixVariant);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8DCFC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4488);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB22D8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB22D8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4488);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoASTFlatExprDotVariant);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatExprDotVariant);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3360, type metadata accessor for TranscriptProtoASTFlatExprDotVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprDotVariant);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4488);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4488);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4488);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoASTFlatExprDotVariant);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4488);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB22D8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoASTFlatExprDotVariant);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8DD3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4490);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB22D8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB22D8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4490);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoASTFlatExprIndexVariant);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatExprIndexVariant);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB33E8, type metadata accessor for TranscriptProtoASTFlatExprIndexVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprIndexVariant);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4490);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4490);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4490);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoASTFlatExprIndexVariant);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4490);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB22D8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoASTFlatExprIndexVariant);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8DD79C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4498);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB22D8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB22D8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4498);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoASTFlatExprCallVariant);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatExprCallVariant);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3200, type metadata accessor for TranscriptProtoASTFlatExprCallVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprCallVariant);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4498);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4498);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4498);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoASTFlatExprCallVariant);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4498);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB22D8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoASTFlatExprCallVariant);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8DDB88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB44A0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB22D8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB22D8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB44A0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoASTFlatExprSayVariant);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatExprSayVariant);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3218, type metadata accessor for TranscriptProtoASTFlatExprSayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprSayVariant);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB44A0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB44A0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB44A0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoASTFlatExprSayVariant);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB44A0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB22D8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoASTFlatExprSayVariant);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8DDF74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB44A8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB22D8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB22D8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB44A8);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoASTFlatExprPickVariant);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatExprPickVariant);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3230, type metadata accessor for TranscriptProtoASTFlatExprPickVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPickVariant);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB44A8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB44A8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB44A8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoASTFlatExprPickVariant);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB44A8);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB22D8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoASTFlatExprPickVariant);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8DE360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB44B0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB22D8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB22D8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB44B0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3248, type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprConfirmVariant);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB44B0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB44B0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB44B0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB44B0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB22D8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8DE74C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB44B8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB22D8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB22D8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB44B8);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoASTFlatExprSearchVariant);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatExprSearchVariant);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB32D8, type metadata accessor for TranscriptProtoASTFlatExprSearchVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprSearchVariant);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB44B8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB44B8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB44B8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoASTFlatExprSearchVariant);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB44B8);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB22D8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoASTFlatExprSearchVariant);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8DEB38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB44C0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB22D8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB22D8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 10)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB44C0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3330, type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPickOneVariant);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB44C0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB44C0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB44C0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB44C0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB22D8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8DEF24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB44C8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB22D8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB22D8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 11)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB44C8);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoASTFlatExprUndoVariant);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatExprUndoVariant);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3260, type metadata accessor for TranscriptProtoASTFlatExprUndoVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUndoVariant);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB44C8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB44C8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB44C8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoASTFlatExprUndoVariant);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB44C8);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB22D8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoASTFlatExprUndoVariant);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8DF310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB44D0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB22D8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB22D8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 12)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB44D0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3348, type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprResolveToolVariant);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB44D0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB44D0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB44D0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB44D0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB22D8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8DF6FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB44D8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB22D8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB22D8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 13)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB44D8);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoASTFlatExprRejectVariant);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatExprRejectVariant);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3278, type metadata accessor for TranscriptProtoASTFlatExprRejectVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprRejectVariant);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB44D8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB44D8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB44D8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoASTFlatExprRejectVariant);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB44D8);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB22D8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoASTFlatExprRejectVariant);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8DFAE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB44E0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB22D8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB22D8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 14)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB44E0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoASTFlatExprCancelVariant);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatExprCancelVariant);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3290, type metadata accessor for TranscriptProtoASTFlatExprCancelVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprCancelVariant);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB44E0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB44E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB44E0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoASTFlatExprCancelVariant);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB44E0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB22D8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoASTFlatExprCancelVariant);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8DFED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4380);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB22D8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB22D8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 15)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4380);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3898, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprContinuePlanningVariant);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4380);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4380);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4380);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4380);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB22D8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8E02C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t updated;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  updated = type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0);
  v6 = MEMORY[0x24BDAC7A8](updated);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB44E8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, updated);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB22D8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB22D8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 16)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB44E8);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, updated);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB32F0, type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUpdateParametersVariant);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB44E8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB44E8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, updated) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB44E8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB44E8);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB22D8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8E06AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t MentionedApps;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  MentionedApps = type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps(0);
  v6 = MEMORY[0x24BDAC7A8](MentionedApps);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB44F0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, MentionedApps);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB22D8);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB22D8);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 17)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB44F0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, MentionedApps);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3308, type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprGetMentionedApps);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB44F0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB44F0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, MentionedApps) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB44F0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB44F0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB22D8);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

#error "23F8E0ACC: call analysis failed (funcsize=31)"

void sub_23F8E0B1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_23F6D38B0();
  sub_23F8E0C48(v1);
  sub_23F6D3D20(v2, type metadata accessor for TranscriptProtoAstflatExprEnum);
  if (!v0)
    JUMPOUT(0x23F8E0AE0);
  JUMPOUT(0x23F8E0AF0);
}

void sub_23F8E0B90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F6D38B0();
  sub_23F8E1A94(v2);
  if (v0)
  {
    sub_23F6D3508(v1, type metadata accessor for TranscriptProtoAstflatExprEnum);
    JUMPOUT(0x23F8E0AF0);
  }
  sub_23F6D3508(v1, type metadata accessor for TranscriptProtoAstflatExprEnum);
  JUMPOUT(0x23F8E0AE0);
}

void sub_23F8E0C28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_23F6D38B0();
  sub_23F8E15D4(v1, v2, v3, v4);
  if (!v0)
    JUMPOUT(0x23F8E0AE0);
  JUMPOUT(0x23F8E0AF0);
}

void sub_23F8E0C48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB22D8);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB22D8);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValue);
      sub_23F6D3458(&qword_256EB2210, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValue);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  }
  __break(1u);
}

void sub_23F8E0DDC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB22D8);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB22D8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant);
      sub_23F6D3458(&qword_256EB3490, type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPrefixVariant);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  }
  __break(1u);
}

void sub_23F8E0F74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB22D8);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB22D8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprInfixVariant);
      sub_23F6D3458(&qword_256EB3400, type metadata accessor for TranscriptProtoASTFlatExprInfixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprInfixVariant);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprInfixVariant);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  }
  __break(1u);
}

void sub_23F8E110C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB22D8);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB22D8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprDotVariant);
      sub_23F6D3458(&qword_256EB3360, type metadata accessor for TranscriptProtoASTFlatExprDotVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprDotVariant);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprDotVariant);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  }
  __break(1u);
}

void sub_23F8E12A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB22D8);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB22D8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprIndexVariant);
      sub_23F6D3458(&qword_256EB33E8, type metadata accessor for TranscriptProtoASTFlatExprIndexVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprIndexVariant);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprIndexVariant);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  }
  __break(1u);
}

void sub_23F8E143C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB22D8);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB22D8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprCallVariant);
      sub_23F6D3458(&qword_256EB3200, type metadata accessor for TranscriptProtoASTFlatExprCallVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprCallVariant);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprCallVariant);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  }
  __break(1u);
}

void sub_23F8E15D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = sub_23FB2D6AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v11, &qword_256EB22D8);
  v12 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EB22D8);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoAstflatExprEnum);
    if (EnumCaseMultiPayload == 18)
    {
      MEMORY[0x242672324]();
      sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_23FB2D94C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return;
    }
  }
  __break(1u);
}

void sub_23F8E1764(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB22D8);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB22D8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprSayVariant);
      sub_23F6D3458(&qword_256EB3218, type metadata accessor for TranscriptProtoASTFlatExprSayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprSayVariant);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprSayVariant);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  }
  __break(1u);
}

void sub_23F8E18FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB22D8);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB22D8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprPickVariant);
      sub_23F6D3458(&qword_256EB3230, type metadata accessor for TranscriptProtoASTFlatExprPickVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPickVariant);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprPickVariant);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  }
  __break(1u);
}

void sub_23F8E1A94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB22D8);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB22D8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant);
      sub_23F6D3458(&qword_256EB3248, type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprConfirmVariant);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  }
  __break(1u);
}

void sub_23F8E1C2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB22D8);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB22D8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprSearchVariant);
      sub_23F6D3458(&qword_256EB32D8, type metadata accessor for TranscriptProtoASTFlatExprSearchVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprSearchVariant);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprSearchVariant);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  }
  __break(1u);
}

void sub_23F8E1DC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB22D8);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB22D8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 10)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant);
      sub_23F6D3458(&qword_256EB3330, type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPickOneVariant);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  }
  __break(1u);
}

void sub_23F8E1F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = sub_23FB2D6AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v11, &qword_256EB22D8);
  v12 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EB22D8);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoAstflatExprEnum);
    if (EnumCaseMultiPayload == 19)
    {
      MEMORY[0x242672324]();
      sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_23FB2D94C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return;
    }
  }
  __break(1u);
}

void sub_23F8E20EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB22D8);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB22D8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 11)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprUndoVariant);
      sub_23F6D3458(&qword_256EB3260, type metadata accessor for TranscriptProtoASTFlatExprUndoVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUndoVariant);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprUndoVariant);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  }
  __break(1u);
}

void sub_23F8E2284(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB22D8);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB22D8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 12)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant);
      sub_23F6D3458(&qword_256EB3348, type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprResolveToolVariant);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  }
  __break(1u);
}

void sub_23F8E241C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB22D8);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB22D8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 13)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprRejectVariant);
      sub_23F6D3458(&qword_256EB3278, type metadata accessor for TranscriptProtoASTFlatExprRejectVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprRejectVariant);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprRejectVariant);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  }
  __break(1u);
}

void sub_23F8E25B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB22D8);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB22D8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 14)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprCancelVariant);
      sub_23F6D3458(&qword_256EB3290, type metadata accessor for TranscriptProtoASTFlatExprCancelVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprCancelVariant);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprCancelVariant);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  }
  __break(1u);
}

void sub_23F8E274C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB22D8);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB22D8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 15)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant);
      sub_23F6D3458(&qword_256EB3898, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprContinuePlanningVariant);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  }
  __break(1u);
}

void sub_23F8E28E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t updated;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0);
  MEMORY[0x24BDAC7A8](updated);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB22D8);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB22D8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 16)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant);
      sub_23F6D3458(&qword_256EB32F0, type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUpdateParametersVariant);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  }
  __break(1u);
}

void sub_23F8E2A7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t MentionedApps;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB22D8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MentionedApps = type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps(0);
  MEMORY[0x24BDAC7A8](MentionedApps);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB22D8);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB22D8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 17)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps);
      sub_23F6D3458(&qword_256EB3308, type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprGetMentionedApps);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  }
  __break(1u);
}

void static TranscriptProtoASTFlatExpr.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F6B50E8();
  v5 = v4;
  v39 = sub_23F6B53A4();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v39);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = sub_23F6D38F8(v9, v10, v11, v12, v13, v14, v15, v16, v40);
  type metadata accessor for TranscriptProtoAstflatExprEnum(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B59E0();
  v19 = sub_23F6916B8(&qword_256EB22E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6D3A70();
  v24 = MEMORY[0x24BDAC7A8](v23);
  sub_23F923124(v24, v25, v26, v27, v28, v29, v30, v31, v41);
  sub_23F923164(v5, v0);
  v32 = v1 + *(int *)(v19 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v32);
  v33 = sub_23F9230E4(v1);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v35 = sub_23F9230E4(v32);
    if (v36)
    {
      sub_23F6D378C(v35, &qword_256EB22D8);
LABEL_11:
      v38 = type metadata accessor for TranscriptProtoASTFlatExpr(0);
      sub_23F6D3794(v38);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v33, v34, &qword_256EB22D8);
  sub_23F9230E4(v32);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v37, type metadata accessor for TranscriptProtoAstflatExprEnum);
LABEL_9:
    sub_23F6D378C(v35, &qword_256EB22E0);
    goto LABEL_12;
  }
  sub_23F923270();
  sub_23F6D3D70();
  static TranscriptProtoAstflatExprEnum.== infix(_:_:)();
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoASTFlatExpr.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTFlatExpr, &qword_256EB22E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExpr);
}

unint64_t sub_23F8E2E48()
{
  static TranscriptProtoASTFlatExpr.protoMessageName.getter();
  return 0xD000000000000016;
}

void sub_23F8E2E6C()
{
  TranscriptProtoASTFlatExpr.decodeMessage<A>(decoder:)();
}

uint64_t sub_23F8E2E80()
{
  return TranscriptProtoASTFlatExpr.traverse<A>(visitor:)();
}

uint64_t sub_23F8E2E94()
{
  sub_23F6D3458(&qword_256EB3E40, type metadata accessor for TranscriptProtoASTFlatExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExpr);
  return sub_23FB2D784();
}

uint64_t sub_23F8E2EE8()
{
  sub_23F6D3458(&qword_256EB3390, type metadata accessor for TranscriptProtoASTFlatExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExpr);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8E2F2C()
{
  sub_23F6D3458(&qword_256EB3390, type metadata accessor for TranscriptProtoASTFlatExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExpr);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTFlatValue.protoMessageName.getter()
{
  return sub_23F6D3738(23);
}

uint64_t sub_23F8E2F98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);
  unint64_t v9;
  _QWORD *v10;
  char *v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  uint64_t v29;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1390);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1390);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_23FB89950;
  v5 = v29 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v29 + v4) = 1;
  *(_QWORD *)v5 = "null";
  *(_QWORD *)(v5 + 8) = 4;
  *(_BYTE *)(v5 + 16) = 2;
  v6 = *MEMORY[0x24BE5C318];
  v7 = sub_23FB2D9DC();
  v8 = *(void (**)(void))(*(_QWORD *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  v9 = v29 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v29 + v4 + v3) = 2;
  *(_QWORD *)v9 = "BOOL";
  *(_QWORD *)(v9 + 8) = 4;
  *(_BYTE *)(v9 + 16) = 2;
  v8();
  v10 = (_QWORD *)(v29 + v4 + 2 * v3);
  v11 = (char *)v10 + *(int *)(v1 + 48);
  *v10 = 3;
  *(_QWORD *)v11 = "int";
  *((_QWORD *)v11 + 1) = 3;
  v11[16] = 2;
  v8();
  v12 = (_QWORD *)(v29 + v4 + 3 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 4;
  *(_QWORD *)v13 = "double";
  *((_QWORD *)v13 + 1) = 6;
  v13[16] = 2;
  v8();
  v14 = (_QWORD *)(v29 + v4 + 4 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 5;
  *(_QWORD *)v15 = "string";
  *((_QWORD *)v15 + 1) = 6;
  v15[16] = 2;
  v8();
  v16 = (_QWORD *)(v29 + v4 + 5 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 6;
  *(_QWORD *)v17 = "array";
  *((_QWORD *)v17 + 1) = 5;
  v17[16] = 2;
  v8();
  v18 = (_QWORD *)(v29 + v4 + 6 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 7;
  *(_QWORD *)v19 = "dict";
  *((_QWORD *)v19 + 1) = 4;
  v19[16] = 2;
  v8();
  v20 = (_QWORD *)(v29 + v4 + 7 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 10;
  *(_QWORD *)v21 = "symbol";
  *((_QWORD *)v21 + 1) = 6;
  v21[16] = 2;
  v8();
  v22 = (_QWORD *)(v29 + v4 + 8 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "variable";
  *((_QWORD *)v23 + 1) = 8;
  v23[16] = 2;
  v8();
  v24 = (_QWORD *)(v29 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 9;
  *(_QWORD *)v25 = "identifier";
  *((_QWORD *)v25 + 1) = 10;
  v25[16] = 2;
  v8();
  v26 = (_QWORD *)(v29 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 11;
  *(_QWORD *)v27 = "statement";
  *((_QWORD *)v27 + 1) = 9;
  v27[16] = 2;
  v8();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoASTFlatValue._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0FC8, (uint64_t)qword_256EB1390, a1);
}

void TranscriptProtoASTFlatValue.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_23F6D3EA4();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          sub_23F923914();
          sub_23F880D48();
          break;
        case 2:
          sub_23F923950();
          break;
        case 3:
          sub_23F923930();
          break;
        case 4:
          sub_23F923AB8();
          break;
        case 5:
          sub_23F9234FC();
          goto LABEL_16;
        case 6:
          v3 = sub_23F923100();
          sub_23F8E34D0(v3, v4, v5, v6);
          break;
        case 7:
          v7 = sub_23F923100();
          sub_23F8E38BC(v7, v8, v9, v10);
          break;
        case 8:
          sub_23F9243D4();
          goto LABEL_16;
        case 9:
          sub_23F923914();
          goto LABEL_16;
        case 10:
          sub_23F924414();
LABEL_16:
          sub_23F8E33C0();
          break;
        case 11:
          v11 = sub_23F923100();
          sub_23F8E3CA8(v11, v12, v13, v14);
          break;
        default:
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D3750();
}

void sub_23F8E33C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;

  sub_23F6B5220();
  sub_23F924378();
  sub_23F713FB4(v1, v2, v3, v4, v5);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F693EB0();
  sub_23F9246A0();
  sub_23FB2D874();
  if (v0)
    swift_bridgeObjectRelease();
  sub_23F77DB18();
  sub_23F6B5100();
}

void sub_23F8E34D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA25F0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4468);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA25F0);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA25F0);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoAstflatValueEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoAstflatValueEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4468);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoASTFlatValueArrayVariant);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatValueArrayVariant);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoAstflatValueEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB33B8, type metadata accessor for TranscriptProtoASTFlatValueArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValueArrayVariant);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4468);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4468);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4468);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoASTFlatValueArrayVariant);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4468);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA25F0);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoASTFlatValueArrayVariant);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8E38BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA25F0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4470);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA25F0);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA25F0);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoAstflatValueEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoAstflatValueEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4470);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoASTFlatValueDictVariant);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatValueDictVariant);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoAstflatValueEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB33D0, type metadata accessor for TranscriptProtoASTFlatValueDictVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValueDictVariant);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4470);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4470);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4470);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoASTFlatValueDictVariant);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4470);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA25F0);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoASTFlatValueDictVariant);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8E3CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EA25F0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EA25E0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EA25F0);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EA25F0);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoAstflatValueEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoAstflatValueEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EA25E0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoStatementID);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoStatementID);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoAstflatValueEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EA25E0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EA25E0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoStatementID);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EA25E0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EA25F0);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoStatementID);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

#error "23F8E40C8: call analysis failed (funcsize=34)"

void sub_23F8E421C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = sub_23FB2D6AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F6916B8(&qword_256EA25F0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v11, &qword_256EA25F0);
  v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    sub_23F6B4F84((uint64_t)v11, &qword_256EA25F0);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_23F6D3508((uint64_t)v11, type metadata accessor for TranscriptProtoAstflatValueEnum);
    if (EnumCaseMultiPayload == 10)
    {
      MEMORY[0x242672324]();
      sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_23FB2D94C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return;
    }
  }
  __break(1u);
}

void sub_23F8E43AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t *v12;

  sub_23F6B5220();
  sub_23F713FB4(v1, v2, v3, v4, v5);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F6B5268();
  v7 = sub_23F6D3F0C();
  sub_23F923368(v7, v8);
  v9 = sub_23F923C1C();
  sub_23F6B5164(v0, 1, v9);
  if (v10)
  {
    v11 = sub_23F6D3D70();
    sub_23F6B4F84(v11, v12);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_23FB2D940();
      sub_23F6B5100();
      return;
    }
    sub_23F77DB68(v0);
  }
  __break(1u);
}

void sub_23F8E446C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA25F0);
  v8 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25F0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValueArrayVariant);
      sub_23F6D3458(&qword_256EB33B8, type metadata accessor for TranscriptProtoASTFlatValueArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValueArrayVariant);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValueArrayVariant);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatValueEnum);
  }
  __break(1u);
}

void sub_23F8E4604(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA25F0);
  v8 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25F0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValueDictVariant);
      sub_23F6D3458(&qword_256EB33D0, type metadata accessor for TranscriptProtoASTFlatValueDictVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValueDictVariant);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValueDictVariant);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatValueEnum);
  }
  __break(1u);
}

void sub_23F8E479C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_23F6916B8(&qword_256EA25F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA25F0);
  v5 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25F0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      sub_23FB2D9A0();
      swift_bridgeObjectRelease();
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatValueEnum);
  }
  __break(1u);
}

void sub_23F8E48BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_23F6916B8(&qword_256EA25F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA25F0);
  v5 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25F0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      sub_23FB2D9A0();
      swift_bridgeObjectRelease();
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatValueEnum);
  }
  __break(1u);
}

void sub_23F8E49DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_23F6916B8(&qword_256EA25F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA25F0);
  v5 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25F0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_23FB2D9A0();
      swift_bridgeObjectRelease();
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatValueEnum);
  }
  __break(1u);
}

void sub_23F8E4AFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EA25F0);
  v8 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25F0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
      sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatValueEnum);
  }
  __break(1u);
}

void static TranscriptProtoASTFlatValue.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F6B50E8();
  v5 = v4;
  v39 = sub_23F6B53A4();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v39);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = sub_23F6D38F8(v9, v10, v11, v12, v13, v14, v15, v16, v40);
  type metadata accessor for TranscriptProtoAstflatValueEnum(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B59E0();
  v19 = sub_23F6916B8(&qword_256EA25F8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6D3A70();
  v24 = MEMORY[0x24BDAC7A8](v23);
  sub_23F923124(v24, v25, v26, v27, v28, v29, v30, v31, v41);
  sub_23F923164(v5, v0);
  v32 = v1 + *(int *)(v19 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v32);
  v33 = sub_23F9230E4(v1);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v35 = sub_23F9230E4(v32);
    if (v36)
    {
      sub_23F6D378C(v35, &qword_256EA25F0);
LABEL_11:
      v38 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      sub_23F6D3794(v38);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v33, v34, &qword_256EA25F0);
  sub_23F9230E4(v32);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v37, type metadata accessor for TranscriptProtoAstflatValueEnum);
LABEL_9:
    sub_23F6D378C(v35, &qword_256EA25F8);
    goto LABEL_12;
  }
  sub_23F923270();
  sub_23F6D3D70();
  static TranscriptProtoAstflatValueEnum.== infix(_:_:)();
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoASTFlatValue.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTFlatValue, &qword_256EB2218, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
}

unint64_t sub_23F8E4EC8()
{
  static TranscriptProtoASTFlatValue.protoMessageName.getter();
  return 0xD000000000000017;
}

void sub_23F8E4EEC()
{
  TranscriptProtoASTFlatValue.decodeMessage<A>(decoder:)();
}

uint64_t sub_23F8E4F00()
{
  return TranscriptProtoASTFlatValue.traverse<A>(visitor:)();
}

uint64_t sub_23F8E4F14()
{
  sub_23F6D3458(&qword_256EB3E38, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
  return sub_23FB2D784();
}

uint64_t sub_23F8E4F68()
{
  sub_23F6D3458(&qword_256EB2210, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8E4FAC()
{
  sub_23F6D3458(&qword_256EB2210, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTFlatValueArrayVariant.protoMessageName.getter()
{
  return sub_23F6D3738(35);
}

uint64_t sub_23F8E5018()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoASTFlatValueArrayVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0FD0, (uint64_t)&unk_256EB13A8, a1);
}

void TranscriptProtoASTFlatValueArrayVariant.decodeMessage<A>(decoder:)()
{
  sub_23F913C48();
}

void TranscriptProtoASTFlatValueArrayVariant.traverse<A>(visitor:)()
{
  sub_23F8B4D24();
}

void static TranscriptProtoASTFlatValueArrayVariant.== infix(_:_:)()
{
  sub_23F89AB14();
}

uint64_t TranscriptProtoASTFlatValueArrayVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant, &qword_256EB22F0, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValueArrayVariant);
}

unint64_t sub_23F8E50EC()
{
  static TranscriptProtoASTFlatValueArrayVariant.protoMessageName.getter();
  return 0xD000000000000023;
}

void sub_23F8E5110()
{
  TranscriptProtoASTFlatValueArrayVariant.decodeMessage<A>(decoder:)();
}

void sub_23F8E5124()
{
  TranscriptProtoASTFlatValueArrayVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F8E5138()
{
  sub_23F6D3458(&qword_256EB3E30, type metadata accessor for TranscriptProtoASTFlatValueArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValueArrayVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F8E518C()
{
  sub_23F6D3458(&qword_256EB33B8, type metadata accessor for TranscriptProtoASTFlatValueArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValueArrayVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8E51D0()
{
  sub_23F6D3458(&qword_256EB33B8, type metadata accessor for TranscriptProtoASTFlatValueArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValueArrayVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTFlatValueDictVariant.protoMessageName.getter()
{
  return sub_23F6D3738(34);
}

uint64_t sub_23F8E523C()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoASTFlatValueDictVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0FD8, (uint64_t)&unk_256EB13C0, a1);
}

void TranscriptProtoASTFlatValueDictVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_23F6D39E0(a1, a2);
  while (1)
  {
    v3 = sub_23FB2D7B4();
    if (v2 || (v4 & 1) != 0)
      break;
    if (v3 == 1)
    {
      sub_23F6D3598();
      sub_23F8E52B8();
    }
    sub_23F6B6098();
  }
  sub_23F6D3C2C();
}

uint64_t sub_23F8E52B8()
{
  sub_23FB2D6DC();
  type metadata accessor for TranscriptProtoASTFlatValue(0);
  sub_23F6D3458(&qword_256EB2210, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
  sub_23F6D3458(&qword_256EB2218, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
  return sub_23FB2D79C();
}

void TranscriptProtoASTFlatValueDictVariant.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F923528();
  sub_23F923A58();
  if (!v1
    || (sub_23F923AE8(),
        sub_23F924A08(),
        sub_23F923750(&qword_256EB2210, v2, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue),
        sub_23F924678(&qword_256EB2218, v3, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue),
        sub_23F923A80(),
        !v0))
  {
    type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
    sub_23F6D3A68();
  }
  sub_23F6D3B40();
}

void static TranscriptProtoASTFlatValueDictVariant.== infix(_:_:)()
{
  sub_23F89AB14();
}

uint64_t TranscriptProtoASTFlatValueDictVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTFlatValueDictVariant, &qword_256EB22F8, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValueDictVariant);
}

unint64_t sub_23F8E5488()
{
  static TranscriptProtoASTFlatValueDictVariant.protoMessageName.getter();
  return 0xD000000000000022;
}

void sub_23F8E54AC(uint64_t a1, uint64_t a2)
{
  TranscriptProtoASTFlatValueDictVariant.decodeMessage<A>(decoder:)(a1, a2);
}

void sub_23F8E54C0()
{
  TranscriptProtoASTFlatValueDictVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F8E54D4()
{
  sub_23F6D3458(&qword_256EB3E28, type metadata accessor for TranscriptProtoASTFlatValueDictVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValueDictVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F8E5528()
{
  sub_23F6D3458(&qword_256EB33D0, type metadata accessor for TranscriptProtoASTFlatValueDictVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValueDictVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8E556C()
{
  sub_23F6D3458(&qword_256EB33D0, type metadata accessor for TranscriptProtoASTFlatValueDictVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValueDictVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTFlatExprIndexVariant.protoMessageName.getter()
{
  return sub_23F6D3738(34);
}

uint64_t sub_23F8E55D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB13D8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB13D8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "lhs";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "index";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoASTFlatExprIndexVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0FE0, (uint64_t)qword_256EB13D8, a1);
}

void TranscriptProtoASTFlatExprIndexVariant.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6D3DC4();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_23F92320C();
      }
      else if (v1 == 1)
      {
        sub_23F923648();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D3710();
}

void TranscriptProtoASTFlatExprIndexVariant.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F923460();
  sub_23F9234C0();
  if (!v0)
  {
    sub_23F9231F0();
    sub_23F8E5848(v1);
    type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
    sub_23F6D37BC();
  }
  sub_23F6D3674();
}

void sub_23F8E5848(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA84E8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA84E8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA84E8);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValue);
    sub_23F6D3458(&qword_256EB2210, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValue);
  }
}

void static TranscriptProtoASTFlatExprIndexVariant.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  v8 = sub_23F6B53A4();
  v63 = *(_QWORD *)(v8 - 8);
  v64 = v8;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v62 = (uint64_t)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  v12 = MEMORY[0x24BDAC7A8](v11);
  sub_23F9242C0(v12, v13, v14, v15, v16, v17, v18, v19, v61);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5420(v21, v61);
  v22 = sub_23F6916B8(&qword_256EB2298);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v23);
  v67 = (uint64_t)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F878DA4();
  sub_23F6B5D98();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v26);
  v65 = (char *)&v61 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F9232B0();
  MEMORY[0x24BDAC7A8](v29);
  v70 = (uint64_t)&v61 - v30;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F876D18();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F9231E0();
  MEMORY[0x24BDAC7A8](v33);
  v35 = (char *)&v61 - v34;
  v68 = v7;
  sub_23F923368(v7, (uint64_t)&v61 - v34);
  v69 = v5;
  sub_23F923368(v5, v3);
  v36 = v1 + *(int *)(v22 + 48);
  sub_23F923368((uint64_t)v35, v1);
  sub_23F923368(v3, v36);
  sub_23F9230E4(v1);
  if (v39)
  {
    sub_23F6B62DC(v3);
    sub_23F6B62DC((uint64_t)v35);
    v38 = sub_23F9230E4(v36);
    if (v39)
    {
      sub_23F923588(v38, &qword_256EA84E8);
      goto LABEL_11;
    }
LABEL_9:
    v41 = v1;
LABEL_20:
    sub_23F6B4F84(v41, &qword_256EB2298);
    goto LABEL_21;
  }
  sub_23F923CD0(v1, v37, &qword_256EA84E8);
  sub_23F9230E4(v36);
  if (v39)
  {
    sub_23F6B64F4(v3);
    sub_23F6B64F4((uint64_t)v35);
    sub_23F713FFC(v40, type metadata accessor for TranscriptProtoASTFlatValue);
    goto LABEL_9;
  }
  sub_23F924664();
  static TranscriptProtoASTFlatValue.== infix(_:_:)();
  v36 = v42;
  sub_23F923B20((uint64_t)&qword_256EA84E8);
  sub_23F6D387C(v3);
  sub_23F6D387C((uint64_t)v35);
  sub_23F923B20(v2);
  sub_23F6D387C(v1);
  if ((v36 & 1) == 0)
    goto LABEL_21;
LABEL_11:
  v43 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
  v44 = sub_23F924278(v43);
  v45 = v70;
  sub_23F923300(v44, v70);
  v46 = v69;
  sub_23F923300(v69 + *(int *)(v1 + 20), v0);
  v47 = v67;
  v48 = v67 + *(int *)(v22 + 48);
  sub_23F923300(v45, v67);
  sub_23F923300(v0, v48);
  sub_23F9230E4(v47);
  if (v39)
  {
    sub_23F6B6EF8(v0);
    sub_23F6B6EF8(v45);
    v50 = sub_23F9230E4(v48);
    if (v39)
    {
      sub_23F77DD64(v50, &qword_256EA84E8);
LABEL_23:
      v57 = v36 + *(int *)(v1 + 24);
      v58 = v61;
      sub_23F6D3818(v61, v57);
      v59 = v46 + *(int *)(v1 + 24);
      v60 = v62;
      sub_23F6D3818(v62, v59);
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6D37C8();
      sub_23F6D3874(v60);
      sub_23F6D3874(v58);
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  v51 = (uint64_t)v65;
  sub_23F923760(v47, v49, &qword_256EA84E8);
  sub_23F9230E4(v48);
  if (v52)
  {
    sub_23F6D3748(v0);
    sub_23F6D3748(v70);
    sub_23F77DB94(v53, type metadata accessor for TranscriptProtoASTFlatValue);
LABEL_19:
    v41 = v47;
    goto LABEL_20;
  }
  v54 = v66;
  sub_23F9238DC(v48);
  sub_23F9249A0();
  static TranscriptProtoASTFlatValue.== infix(_:_:)();
  v56 = v55;
  sub_23F6D3DAC(v54);
  sub_23F6B62DC(v0);
  sub_23F6B62DC(v70);
  sub_23F6D3DAC(v51);
  sub_23F6B62DC(v47);
  if ((v56 & 1) != 0)
    goto LABEL_23;
LABEL_21:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoASTFlatExprIndexVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTFlatExprIndexVariant, &qword_256EB2300, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprIndexVariant);
}

unint64_t sub_23F8E5E28()
{
  static TranscriptProtoASTFlatExprIndexVariant.protoMessageName.getter();
  return 0xD000000000000022;
}

void sub_23F8E5E4C()
{
  TranscriptProtoASTFlatExprIndexVariant.decodeMessage<A>(decoder:)();
}

void sub_23F8E5E60()
{
  TranscriptProtoASTFlatExprIndexVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F8E5E74()
{
  sub_23F6D3458(&qword_256EB3E20, type metadata accessor for TranscriptProtoASTFlatExprIndexVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprIndexVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F8E5EC8()
{
  sub_23F6D3458(&qword_256EB33E8, type metadata accessor for TranscriptProtoASTFlatExprIndexVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprIndexVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8E5F0C()
{
  sub_23F6D3458(&qword_256EB33E8, type metadata accessor for TranscriptProtoASTFlatExprIndexVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprIndexVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTFlatExprInfixVariant.protoMessageName.getter()
{
  return sub_23F6D3738(34);
}

uint64_t sub_23F8E5F78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB13F0);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB13F0);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "first";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "second";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "third";
  *((_QWORD *)v13 + 1) = 5;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoASTFlatExprInfixVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0FE8, (uint64_t)qword_256EB13F0, a1);
}

void TranscriptProtoASTFlatExprInfixVariant.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6D3DC4();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 3:
          sub_23F923390();
          break;
        case 2:
          sub_23F92320C();
          break;
        case 1:
          sub_23F924788();
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D3710();
}

void TranscriptProtoASTFlatExprInfixVariant.traverse<A>(visitor:)()
{
  sub_23F902C2C();
}

void sub_23F8E61D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA84E8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA84E8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA84E8);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValue);
    sub_23F6D3458(&qword_256EB2210, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValue);
  }
}

void sub_23F8E6348(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA84E8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_256EA84E8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA84E8);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValue);
    sub_23F6D3458(&qword_256EB2210, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValue);
  }
}

void static TranscriptProtoASTFlatExprInfixVariant.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;

  sub_23F6B50E8();
  v5 = v4;
  v6 = sub_23F6B53A4();
  v73 = *(_QWORD *)(v6 - 8);
  v74 = v6;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  v72 = (uint64_t)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F6B62E4();
  v75 = (uint64_t *)type metadata accessor for TranscriptProtoASTFlatValue(v10);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F693EB0();
  v12 = sub_23F6916B8(&qword_256EB2298);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F923EC8();
  sub_23F6916B8(&qword_256EA84E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F9235CC();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F924318();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F924304();
  v19 = MEMORY[0x24BDAC7A8](v18);
  v27 = sub_23F9242F0(v19, v20, v21, v22, v23, v24, v25, v26, v62);
  MEMORY[0x24BDAC7A8](v27);
  sub_23F9231E0();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F923C7C();
  if (v40)
  {
    v30 = sub_23F923AF8(v29);
    v31 = type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(v30);
    v32 = sub_23F9244EC(v31);
    sub_23F923368(v32, v3);
    v33 = *(int *)(v1 + 20);
    v66 = v5;
    sub_23F923368(v5 + v33, v2);
    v34 = v0 + *(int *)(v12 + 48);
    sub_23F923368(v3, v0);
    sub_23F923368(v2, v34);
    v35 = v75;
    sub_23F6B5164(v0, 1, (uint64_t)v75);
    v37 = v0;
    if (v40)
    {
      v63 = v12;
      sub_23F6B62DC(v2);
      sub_23F6B62DC(v3);
      v38 = sub_23F6B5164(v34, 1, (uint64_t)v35);
      if (v40)
      {
        sub_23F6B6034(v38, &qword_256EA84E8);
LABEL_13:
        v46 = sub_23F924804();
        v47 = v70;
        sub_23F92344C(v46, v70);
        v48 = v1;
        v49 = v66;
        v50 = v69;
        sub_23F92344C(v66 + *(int *)(v1 + 24), v69);
        v51 = v67;
        v52 = v67 + *(int *)(v63 + 48);
        sub_23F92344C(v47, v67);
        sub_23F92344C(v50, v52);
        sub_23F6B5164(v51, 1, (uint64_t)v35);
        if (v40)
        {
          sub_23F6D3C1C(v50);
          sub_23F6D3C1C(v47);
          v54 = sub_23F6B5164(v52, 1, (uint64_t)v35);
          if (v40)
          {
            sub_23F9239A0(v54, &qword_256EA84E8);
            goto LABEL_25;
          }
        }
        else
        {
          v55 = v65;
          sub_23F923BFC(v51, v53, &qword_256EA84E8);
          sub_23F6B5164(v52, 1, (uint64_t)v35);
          if (!v56)
          {
            v58 = v71;
            sub_23F923774(v52, v71);
            sub_23F72E3F8();
            static TranscriptProtoASTFlatValue.== infix(_:_:)();
            v60 = v59;
            sub_23F77DB60(v58);
            sub_23F6B62DC(v69);
            sub_23F6B62DC(v70);
            sub_23F77DB60(v55);
            sub_23F6B62DC(v51);
            if ((v60 & 1) == 0)
              goto LABEL_23;
LABEL_25:
            v61 = v64;
            sub_23F6D3818(v64, (uint64_t)v75 + *(int *)(v48 + 28));
            sub_23F6D3818(v72, v49 + *(int *)(v48 + 28));
            sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
            sub_23F923230();
            sub_23F9232DC();
            sub_23F6D3874(v61);
            goto LABEL_23;
          }
          sub_23F6D3748(v69);
          sub_23F6D3748(v70);
          sub_23F7E7834(v57, type metadata accessor for TranscriptProtoASTFlatValue);
        }
        v43 = v51;
LABEL_22:
        sub_23F6B4F84(v43, &qword_256EB2298);
        goto LABEL_23;
      }
    }
    else
    {
      v39 = v68;
      sub_23F923DD0(v0, v36, &qword_256EA84E8);
      sub_23F6B5164(v34, 1, (uint64_t)v35);
      v41 = v71;
      if (!v40)
      {
        v63 = v12;
        sub_23F923774(v34, v71);
        sub_23F6B5994();
        static TranscriptProtoASTFlatValue.== infix(_:_:)();
        v45 = v44;
        sub_23F77DB60(v41);
        v35 = &qword_256EA84E8;
        sub_23F6D387C(v2);
        sub_23F6D387C(v3);
        sub_23F77DB60(v39);
        sub_23F9241CC();
        if ((v45 & 1) == 0)
          goto LABEL_23;
        goto LABEL_13;
      }
      sub_23F6D3748(v2);
      sub_23F6D3748(v3);
      sub_23F714040(v42, type metadata accessor for TranscriptProtoASTFlatValue);
    }
    v43 = v37;
    goto LABEL_22;
  }
LABEL_23:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoASTFlatExprInfixVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTFlatExprInfixVariant, &qword_256EB2310, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprInfixVariant);
}

unint64_t sub_23F8E6940()
{
  static TranscriptProtoASTFlatExprInfixVariant.protoMessageName.getter();
  return 0xD000000000000022;
}

void sub_23F8E6964()
{
  TranscriptProtoASTFlatExprInfixVariant.decodeMessage<A>(decoder:)();
}

void sub_23F8E6978()
{
  TranscriptProtoASTFlatExprInfixVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F8E698C()
{
  sub_23F6D3458(&qword_256EB3E18, type metadata accessor for TranscriptProtoASTFlatExprInfixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprInfixVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F8E69E0()
{
  sub_23F6D3458(&qword_256EB3400, type metadata accessor for TranscriptProtoASTFlatExprInfixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprInfixVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8E6A24()
{
  sub_23F6D3458(&qword_256EB3400, type metadata accessor for TranscriptProtoASTFlatExprInfixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprInfixVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoExpression.protoMessageName.getter()
{
  return sub_23F6D3738(21);
}

uint64_t sub_23F8E6A90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);
  unint64_t v9;
  _QWORD *v10;
  char *v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  _QWORD *v38;
  char *v39;
  _QWORD *v40;
  char *v41;
  _QWORD *v42;
  char *v43;
  _QWORD *v44;
  char *v45;
  _QWORD *v46;
  char *v47;
  _QWORD *v48;
  char *v49;
  uint64_t v51;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1408);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1408);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = xmmword_23FB899B0;
  v5 = v51 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v51 + v4) = 1;
  *(_QWORD *)v5 = "value";
  *(_QWORD *)(v5 + 8) = 5;
  *(_BYTE *)(v5 + 16) = 2;
  v6 = *MEMORY[0x24BE5C318];
  v7 = sub_23FB2D9DC();
  v8 = *(void (**)(void))(*(_QWORD *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  v9 = v51 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v51 + v4 + v3) = 2;
  *(_QWORD *)v9 = "statementId";
  *(_QWORD *)(v9 + 8) = 11;
  *(_BYTE *)(v9 + 16) = 2;
  v8();
  v10 = (_QWORD *)(v51 + v4 + 2 * v3);
  v11 = (char *)v10 + *(int *)(v1 + 48);
  *v10 = 3;
  *(_QWORD *)v11 = "prefix";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v8();
  v12 = (_QWORD *)(v51 + v4 + 3 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 4;
  *(_QWORD *)v13 = "infix";
  *((_QWORD *)v13 + 1) = 5;
  v13[16] = 2;
  v8();
  v14 = (_QWORD *)(v51 + v4 + 4 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 5;
  *(_QWORD *)v15 = "dot";
  *((_QWORD *)v15 + 1) = 3;
  v15[16] = 2;
  v8();
  v16 = (_QWORD *)(v51 + v4 + 5 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 6;
  *(_QWORD *)v17 = "index";
  *((_QWORD *)v17 + 1) = 5;
  v17[16] = 2;
  v8();
  v18 = (_QWORD *)(v51 + v4 + 6 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 7;
  *(_QWORD *)v19 = "updateParameters";
  *((_QWORD *)v19 + 1) = 16;
  v19[16] = 2;
  v8();
  v20 = (_QWORD *)(v51 + v4 + 7 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 8;
  *(_QWORD *)v21 = "call";
  *((_QWORD *)v21 + 1) = 4;
  v21[16] = 2;
  v8();
  v22 = (_QWORD *)(v51 + v4 + 8 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 9;
  *(_QWORD *)v23 = "say";
  *((_QWORD *)v23 + 1) = 3;
  v23[16] = 2;
  v8();
  v24 = (_QWORD *)(v51 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 10;
  *(_QWORD *)v25 = "pick";
  *((_QWORD *)v25 + 1) = 4;
  v25[16] = 2;
  v8();
  v26 = (_QWORD *)(v51 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 12;
  *(_QWORD *)v27 = "confirm";
  *((_QWORD *)v27 + 1) = 7;
  v27[16] = 2;
  v8();
  v28 = (_QWORD *)(v51 + v4 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 13;
  *(_QWORD *)v29 = "search";
  *((_QWORD *)v29 + 1) = 6;
  v29[16] = 2;
  v8();
  v30 = (_QWORD *)(v51 + v4 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 14;
  *(_QWORD *)v31 = "pickOne";
  *((_QWORD *)v31 + 1) = 7;
  v31[16] = 2;
  v8();
  v32 = (_QWORD *)(v51 + v4 + 13 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 15;
  *(_QWORD *)v33 = "resolveTool";
  *((_QWORD *)v33 + 1) = 11;
  v33[16] = 2;
  v8();
  v34 = (_QWORD *)(v51 + v4 + 14 * v3);
  v35 = (char *)v34 + *(int *)(v1 + 48);
  *v34 = 16;
  *(_QWORD *)v35 = "undo";
  *((_QWORD *)v35 + 1) = 4;
  v35[16] = 2;
  v8();
  v36 = (_QWORD *)(v51 + v4 + 15 * v3);
  v37 = (char *)v36 + *(int *)(v1 + 48);
  *v36 = 17;
  *(_QWORD *)v37 = "reject";
  *((_QWORD *)v37 + 1) = 6;
  v37[16] = 2;
  v8();
  v38 = (_QWORD *)(v51 + v4 + 16 * v3);
  v39 = (char *)v38 + *(int *)(v1 + 48);
  *v38 = 18;
  *(_QWORD *)v39 = "cancel";
  *((_QWORD *)v39 + 1) = 6;
  v39[16] = 2;
  v8();
  v40 = (_QWORD *)(v51 + v4 + 17 * v3);
  v41 = (char *)v40 + *(int *)(v1 + 48);
  *v40 = 19;
  *(_QWORD *)v41 = "noMatchingTool";
  *((_QWORD *)v41 + 1) = 14;
  v41[16] = 2;
  v8();
  v42 = (_QWORD *)(v51 + v4 + 18 * v3);
  v43 = (char *)v42 + *(int *)(v1 + 48);
  *v42 = 20;
  *(_QWORD *)v43 = "continuePlanning";
  *((_QWORD *)v43 + 1) = 16;
  v43[16] = 2;
  v8();
  v44 = (_QWORD *)(v51 + v4 + 19 * v3);
  v45 = (char *)v44 + *(int *)(v1 + 48);
  *v44 = 21;
  *(_QWORD *)v45 = "endOfPlan";
  *((_QWORD *)v45 + 1) = 9;
  v45[16] = 2;
  v8();
  v46 = (_QWORD *)(v51 + v4 + 20 * v3);
  v47 = (char *)v46 + *(int *)(v1 + 48);
  *v46 = 22;
  *(_QWORD *)v47 = "getMentionedApps";
  *((_QWORD *)v47 + 1) = 16;
  v47[16] = 2;
  v8();
  v48 = (_QWORD *)(v51 + v4 + 21 * v3);
  v49 = (char *)v48 + *(int *)(v1 + 48);
  *v48 = 23;
  *(_QWORD *)v49 = "open";
  *((_QWORD *)v49 + 1) = 4;
  v49[16] = 2;
  v8();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0FF0, (uint64_t)qword_256EB1408, a1);
}

void TranscriptProtoExpression.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          v3 = sub_23F923100();
          sub_23F8E71CC(v3, v4, v5, v6);
          break;
        case 2:
          v7 = sub_23F923100();
          sub_23F8E75B4(v7, v8, v9, v10);
          break;
        case 3:
          v11 = sub_23F923100();
          sub_23F8E79A0(v11, v12, v13, v14);
          break;
        case 4:
          v15 = sub_23F923100();
          sub_23F8E7D8C(v15, v16, v17, v18);
          break;
        case 5:
          v19 = sub_23F923100();
          sub_23F8E8178(v19, v20, v21, v22);
          break;
        case 6:
          v23 = sub_23F923100();
          sub_23F8E8564(v23, v24, v25, v26);
          break;
        case 7:
          v27 = sub_23F923100();
          sub_23F8E8950(v27, v28, v29, v30);
          break;
        case 8:
          v31 = sub_23F923100();
          sub_23F8E8D3C(v31, v32, v33, v34);
          break;
        case 9:
          v35 = sub_23F923100();
          sub_23F8E9128(v35, v36, v37, v38);
          break;
        case 10:
          v39 = sub_23F923100();
          sub_23F8E9514(v39, v40, v41, v42);
          break;
        case 12:
          v43 = sub_23F923100();
          sub_23F8E9900(v43, v44, v45, v46);
          break;
        case 13:
          v47 = sub_23F923100();
          sub_23F8E9CEC(v47, v48, v49, v50);
          break;
        case 14:
          v51 = sub_23F923100();
          sub_23F8EA0D8(v51, v52, v53, v54);
          break;
        case 15:
          v55 = sub_23F923100();
          sub_23F8EA4C4(v55, v56, v57, v58);
          break;
        case 16:
          v59 = sub_23F923100();
          sub_23F8EA8B0(v59, v60, v61, v62);
          break;
        case 17:
          v63 = sub_23F923100();
          sub_23F8EAC9C(v63, v64, v65, v66);
          break;
        case 18:
          v67 = sub_23F923100();
          sub_23F8EB088(v67, v68, v69, v70);
          break;
        case 19:
          v71 = sub_23F923100();
          sub_23F8EB474(v71, v72, v73, v74);
          break;
        case 20:
          v75 = sub_23F923100();
          sub_23F8EB860(v75, v76, v77, v78);
          break;
        case 21:
          v79 = sub_23F923100();
          sub_23F8EBC4C(v79, v80, v81, v82);
          break;
        case 22:
          v83 = sub_23F923100();
          sub_23F8EC038(v83, v84, v85, v86);
          break;
        case 23:
          v87 = sub_23F923100();
          sub_23F8EC424(v87, v88, v89, v90);
          break;
        default:
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D377C();
}

void sub_23F8E71CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoValueExpression(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB43C0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2318);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2318);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    }
    else
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB43C0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoValueExpression);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoValueExpression);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3430, type metadata accessor for TranscriptProtoValueExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpression);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB43C0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB43C0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB43C0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoValueExpression);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB43C0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2318);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoValueExpression);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8E75B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EA25E0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2318);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2318);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EA25E0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoStatementID);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoStatementID);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EA25E0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EA25E0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoStatementID);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EA25E0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2318);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoStatementID);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8E79A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoPrefixExpression(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB43C8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2318);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2318);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB43C8);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoPrefixExpression);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoPrefixExpression);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3460, type metadata accessor for TranscriptProtoPrefixExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPrefixExpression);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB43C8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB43C8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB43C8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoPrefixExpression);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB43C8);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2318);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoPrefixExpression);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8E7D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoInfixExpression(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB43D0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2318);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2318);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB43D0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoInfixExpression);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoInfixExpression);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3478, type metadata accessor for TranscriptProtoInfixExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoInfixExpression);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB43D0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB43D0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB43D0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoInfixExpression);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB43D0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2318);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoInfixExpression);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8E8178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoDotExpression(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB43D8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2318);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2318);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB43D8);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoDotExpression);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoDotExpression);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB34A8, type metadata accessor for TranscriptProtoDotExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoDotExpression);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB43D8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB43D8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB43D8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoDotExpression);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB43D8);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2318);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoDotExpression);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8E8564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoIndexExpression(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB43E0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2318);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2318);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB43E0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoIndexExpression);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoIndexExpression);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB34C0, type metadata accessor for TranscriptProtoIndexExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoIndexExpression);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB43E0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB43E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB43E0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoIndexExpression);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB43E0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2318);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoIndexExpression);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8E8950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t updated;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
  v6 = MEMORY[0x24BDAC7A8](updated);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB43E8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, updated);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2318);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2318);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB43E8);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoUpdateParametersExpression);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoUpdateParametersExpression);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, updated);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB34D8, type metadata accessor for TranscriptProtoUpdateParametersExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoUpdateParametersExpression);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB43E8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB43E8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, updated) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB43E8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoUpdateParametersExpression);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB43E8);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2318);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoUpdateParametersExpression);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8E8D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoCallExpression(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB43F0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2318);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2318);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB43F0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoCallExpression);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoCallExpression);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3500, type metadata accessor for TranscriptProtoCallExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoCallExpression);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB43F0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB43F0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB43F0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoCallExpression);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB43F0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2318);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoCallExpression);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8E9128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoSayExpression(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB43F8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2318);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2318);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB43F8);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoSayExpression);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoSayExpression);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3518, type metadata accessor for TranscriptProtoSayExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoSayExpression);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB43F8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB43F8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB43F8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoSayExpression);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB43F8);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2318);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoSayExpression);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8E9514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoPickExpression(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4400);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2318);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2318);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4400);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoPickExpression);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoPickExpression);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3530, type metadata accessor for TranscriptProtoPickExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickExpression);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4400);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4400);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4400);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoPickExpression);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4400);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2318);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoPickExpression);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8E9900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoConfirmExpression(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4408);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2318);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2318);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 10)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4408);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoConfirmExpression);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoConfirmExpression);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3548, type metadata accessor for TranscriptProtoConfirmExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoConfirmExpression);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4408);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4408);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4408);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoConfirmExpression);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4408);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2318);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoConfirmExpression);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8E9CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoSearchExpression(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4410);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2318);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2318);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 11)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4410);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoSearchExpression);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoSearchExpression);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3560, type metadata accessor for TranscriptProtoSearchExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoSearchExpression);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4410);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4410);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4410);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoSearchExpression);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4410);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2318);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoSearchExpression);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8EA0D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoPickOneExpression(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4418);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2318);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2318);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 12)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4418);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoPickOneExpression);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoPickOneExpression);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3578, type metadata accessor for TranscriptProtoPickOneExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickOneExpression);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4418);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4418);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4418);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoPickOneExpression);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4418);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2318);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoPickOneExpression);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8EA4C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoResolveToolExpression(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4420);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2318);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2318);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 13)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4420);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoResolveToolExpression);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoResolveToolExpression);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3590, type metadata accessor for TranscriptProtoResolveToolExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoResolveToolExpression);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4420);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4420);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4420);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoResolveToolExpression);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4420);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2318);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoResolveToolExpression);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8EA8B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoUndoExpression(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4428);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2318);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2318);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 14)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4428);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoUndoExpression);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoUndoExpression);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB35A8, type metadata accessor for TranscriptProtoUndoExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoExpression);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4428);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4428);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4428);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoUndoExpression);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4428);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2318);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoUndoExpression);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8EAC9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoRejectExpression(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4430);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2318);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2318);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 15)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4430);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoRejectExpression);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoRejectExpression);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB35C0, type metadata accessor for TranscriptProtoRejectExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoRejectExpression);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4430);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4430);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4430);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoRejectExpression);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4430);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2318);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoRejectExpression);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8EB088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoCancelExpression(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4438);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2318);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2318);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 16)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4438);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoCancelExpression);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoCancelExpression);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB35D8, type metadata accessor for TranscriptProtoCancelExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoCancelExpression);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4438);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4438);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4438);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoCancelExpression);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4438);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2318);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoCancelExpression);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8EB474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoNoMatchingToolExpression(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4440);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2318);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2318);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 17)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4440);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoNoMatchingToolExpression);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoNoMatchingToolExpression);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB35F0, type metadata accessor for TranscriptProtoNoMatchingToolExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoNoMatchingToolExpression);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4440);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4440);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4440);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoNoMatchingToolExpression);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4440);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2318);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoNoMatchingToolExpression);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8EB860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoContinuePlanningExpression(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4448);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2318);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2318);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 18)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4448);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoContinuePlanningExpression);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoContinuePlanningExpression);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3608, type metadata accessor for TranscriptProtoContinuePlanningExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoContinuePlanningExpression);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4448);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4448);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4448);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoContinuePlanningExpression);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4448);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2318);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoContinuePlanningExpression);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8EBC4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoEndOfPlanExpression(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4450);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2318);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2318);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 19)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4450);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoEndOfPlanExpression);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoEndOfPlanExpression);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3620, type metadata accessor for TranscriptProtoEndOfPlanExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoEndOfPlanExpression);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4450);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4450);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4450);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoEndOfPlanExpression);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4450);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2318);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoEndOfPlanExpression);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8EC038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t MentionedAppsExpression;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  MentionedAppsExpression = type metadata accessor for TranscriptProtoGetMentionedAppsExpression(0);
  v6 = MEMORY[0x24BDAC7A8](MentionedAppsExpression);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4458);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, MentionedAppsExpression);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2318);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2318);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 20)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4458);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoGetMentionedAppsExpression);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoGetMentionedAppsExpression);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, MentionedAppsExpression);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3638, type metadata accessor for TranscriptProtoGetMentionedAppsExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoGetMentionedAppsExpression);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4458);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4458);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, MentionedAppsExpression) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4458);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoGetMentionedAppsExpression);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4458);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2318);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoGetMentionedAppsExpression);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8EC424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoOpenExpression(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4460);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2318);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2318);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 21)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4460);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoOpenExpression);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoOpenExpression);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3650, type metadata accessor for TranscriptProtoOpenExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoOpenExpression);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4460);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4460);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4460);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoOpenExpression);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4460);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2318);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoOpenExpression);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

#error "23F8EC844: call analysis failed (funcsize=32)"

void sub_23F8EC9D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoValueExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2318);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2318);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoValueExpression);
      sub_23F6D3458(&qword_256EB3430, type metadata accessor for TranscriptProtoValueExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpression);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoValueExpression);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  }
  __break(1u);
}

void sub_23F8ECB64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2318);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2318);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
      sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  }
  __break(1u);
}

void sub_23F8ECCFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoPrefixExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2318);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2318);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoPrefixExpression);
      sub_23F6D3458(&qword_256EB3460, type metadata accessor for TranscriptProtoPrefixExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPrefixExpression);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoPrefixExpression);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  }
  __break(1u);
}

void sub_23F8ECE94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoInfixExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2318);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2318);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoInfixExpression);
      sub_23F6D3458(&qword_256EB3478, type metadata accessor for TranscriptProtoInfixExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoInfixExpression);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoInfixExpression);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  }
  __break(1u);
}

void sub_23F8ED02C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoDotExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2318);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2318);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoDotExpression);
      sub_23F6D3458(&qword_256EB34A8, type metadata accessor for TranscriptProtoDotExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoDotExpression);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoDotExpression);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  }
  __break(1u);
}

void sub_23F8ED1C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoIndexExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2318);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2318);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoIndexExpression);
      sub_23F6D3458(&qword_256EB34C0, type metadata accessor for TranscriptProtoIndexExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoIndexExpression);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoIndexExpression);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  }
  __break(1u);
}

void sub_23F8ED35C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t updated;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
  MEMORY[0x24BDAC7A8](updated);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2318);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2318);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoUpdateParametersExpression);
      sub_23F6D3458(&qword_256EB34D8, type metadata accessor for TranscriptProtoUpdateParametersExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoUpdateParametersExpression);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoUpdateParametersExpression);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  }
  __break(1u);
}

void sub_23F8ED4F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoCallExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2318);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2318);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoCallExpression);
      sub_23F6D3458(&qword_256EB3500, type metadata accessor for TranscriptProtoCallExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoCallExpression);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoCallExpression);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  }
  __break(1u);
}

void sub_23F8ED68C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSayExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2318);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2318);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSayExpression);
      sub_23F6D3458(&qword_256EB3518, type metadata accessor for TranscriptProtoSayExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoSayExpression);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoSayExpression);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  }
  __break(1u);
}

void sub_23F8ED824(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoPickExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2318);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2318);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoPickExpression);
      sub_23F6D3458(&qword_256EB3530, type metadata accessor for TranscriptProtoPickExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickExpression);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoPickExpression);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  }
  __break(1u);
}

void sub_23F8ED9BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoConfirmExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2318);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2318);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 10)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoConfirmExpression);
      sub_23F6D3458(&qword_256EB3548, type metadata accessor for TranscriptProtoConfirmExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoConfirmExpression);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoConfirmExpression);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  }
  __break(1u);
}

void sub_23F8EDB54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSearchExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2318);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2318);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 11)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSearchExpression);
      sub_23F6D3458(&qword_256EB3560, type metadata accessor for TranscriptProtoSearchExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoSearchExpression);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoSearchExpression);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  }
  __break(1u);
}

void sub_23F8EDCEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoPickOneExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2318);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2318);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 12)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoPickOneExpression);
      sub_23F6D3458(&qword_256EB3578, type metadata accessor for TranscriptProtoPickOneExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickOneExpression);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoPickOneExpression);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  }
  __break(1u);
}

void sub_23F8EDE84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoResolveToolExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2318);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2318);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 13)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoResolveToolExpression);
      sub_23F6D3458(&qword_256EB3590, type metadata accessor for TranscriptProtoResolveToolExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoResolveToolExpression);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoResolveToolExpression);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  }
  __break(1u);
}

void sub_23F8EE01C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoUndoExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2318);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2318);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 14)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoUndoExpression);
      sub_23F6D3458(&qword_256EB35A8, type metadata accessor for TranscriptProtoUndoExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoExpression);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoUndoExpression);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  }
  __break(1u);
}

void sub_23F8EE1B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoRejectExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2318);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2318);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 15)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoRejectExpression);
      sub_23F6D3458(&qword_256EB35C0, type metadata accessor for TranscriptProtoRejectExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoRejectExpression);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoRejectExpression);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  }
  __break(1u);
}

void sub_23F8EE34C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoCancelExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2318);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2318);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 16)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoCancelExpression);
      sub_23F6D3458(&qword_256EB35D8, type metadata accessor for TranscriptProtoCancelExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoCancelExpression);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoCancelExpression);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  }
  __break(1u);
}

void sub_23F8EE4E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoNoMatchingToolExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2318);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2318);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 17)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoNoMatchingToolExpression);
      sub_23F6D3458(&qword_256EB35F0, type metadata accessor for TranscriptProtoNoMatchingToolExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoNoMatchingToolExpression);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoNoMatchingToolExpression);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  }
  __break(1u);
}

void sub_23F8EE67C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoContinuePlanningExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2318);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2318);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 18)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoContinuePlanningExpression);
      sub_23F6D3458(&qword_256EB3608, type metadata accessor for TranscriptProtoContinuePlanningExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoContinuePlanningExpression);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoContinuePlanningExpression);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  }
  __break(1u);
}

void sub_23F8EE814(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoEndOfPlanExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2318);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2318);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 19)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoEndOfPlanExpression);
      sub_23F6D3458(&qword_256EB3620, type metadata accessor for TranscriptProtoEndOfPlanExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoEndOfPlanExpression);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoEndOfPlanExpression);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  }
  __break(1u);
}

void sub_23F8EE9AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t MentionedAppsExpression;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MentionedAppsExpression = type metadata accessor for TranscriptProtoGetMentionedAppsExpression(0);
  MEMORY[0x24BDAC7A8](MentionedAppsExpression);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2318);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2318);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 20)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoGetMentionedAppsExpression);
      sub_23F6D3458(&qword_256EB3638, type metadata accessor for TranscriptProtoGetMentionedAppsExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoGetMentionedAppsExpression);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoGetMentionedAppsExpression);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  }
  __break(1u);
}

void sub_23F8EEB44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2318);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoOpenExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2318);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2318);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 21)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoOpenExpression);
      sub_23F6D3458(&qword_256EB3650, type metadata accessor for TranscriptProtoOpenExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoOpenExpression);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoOpenExpression);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  }
  __break(1u);
}

void static TranscriptProtoExpression.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F6B50E8();
  v5 = v4;
  v39 = sub_23F6B53A4();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v39);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = sub_23F6D38F8(v9, v10, v11, v12, v13, v14, v15, v16, v40);
  type metadata accessor for TranscriptProtoExpressionEnum(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B59E0();
  v19 = sub_23F6916B8(&qword_256EB2320);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6D3A70();
  v24 = MEMORY[0x24BDAC7A8](v23);
  sub_23F923124(v24, v25, v26, v27, v28, v29, v30, v31, v41);
  sub_23F923164(v5, v0);
  v32 = v1 + *(int *)(v19 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v32);
  v33 = sub_23F9230E4(v1);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v35 = sub_23F9230E4(v32);
    if (v36)
    {
      sub_23F6D378C(v35, &qword_256EB2318);
LABEL_11:
      v38 = type metadata accessor for TranscriptProtoExpression(0);
      sub_23F6D3794(v38);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v33, v34, &qword_256EB2318);
  sub_23F9230E4(v32);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v37, type metadata accessor for TranscriptProtoExpressionEnum);
LABEL_9:
    sub_23F6D378C(v35, &qword_256EB2320);
    goto LABEL_12;
  }
  sub_23F923270();
  sub_23F6D3D70();
  static TranscriptProtoExpressionEnum.== infix(_:_:)();
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoExpression.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoExpression, &qword_256EB2328, (uint64_t)&protocol conformance descriptor for TranscriptProtoExpression);
}

unint64_t sub_23F8EEF10()
{
  static TranscriptProtoExpression.protoMessageName.getter();
  return 0xD000000000000015;
}

void sub_23F8EEF34()
{
  TranscriptProtoExpression.decodeMessage<A>(decoder:)();
}

uint64_t sub_23F8EEF48()
{
  return TranscriptProtoExpression.traverse<A>(visitor:)();
}

uint64_t sub_23F8EEF5C()
{
  sub_23F6D3458(&qword_256EB3E10, type metadata accessor for TranscriptProtoExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoExpression);
  return sub_23FB2D784();
}

uint64_t sub_23F8EEFB0()
{
  sub_23F6D3458(&qword_256EB3418, type metadata accessor for TranscriptProtoExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoExpression);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8EEFF4()
{
  sub_23F6D3458(&qword_256EB3418, type metadata accessor for TranscriptProtoExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoExpression);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoValueExpression.protoMessageName.getter()
{
  return sub_23F6D3738(26);
}

uint64_t sub_23F8EF060()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1420);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1420);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1B0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "null";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "BOOL";
  *(_QWORD *)(v11 + 8) = 4;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "int";
  *((_QWORD *)v13 + 1) = 3;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "double";
  *((_QWORD *)v15 + 1) = 6;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "string";
  *((_QWORD *)v17 + 1) = 6;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "array";
  *((_QWORD *)v19 + 1) = 5;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "symbol";
  *((_QWORD *)v21 + 1) = 6;
  v21[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoValueExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA0FF8, (uint64_t)qword_256EB1420, a1);
}

void TranscriptProtoValueExpression.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;

  sub_23F6D3EA4();
  sub_23F6D356C();
  if (!v10)
  {
    while ((v11 & 1) == 0)
    {
      sub_23F924C4C();
      if (!(!v22 & v21))
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_23F8EF320 + 4 * byte_23FB74DBD[v20]))(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10);
        return;
      }
      sub_23F6D35E8();
    }
  }
  sub_23F6D3750();
}

uint64_t sub_23F8EF380(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  int v12;
  uint64_t v13;
  char v14;

  sub_23F713FB4(a1, (uint64_t)a2, a3, a4, a5);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B5268();
  sub_23F924AA4();
  result = sub_23FB2D868();
  if (!v5 && (v14 & 1) == 0)
  {
    sub_23F7A1EDC((uint64_t)a2, v6, a5);
    v11 = sub_23F924500();
    v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v6, 1, v11);
    sub_23F6B4F84(v6, a5);
    if (v12 != 1)
      sub_23FB2D7C0();
    sub_23F6B4F84((uint64_t)a2, a5);
    *a2 = v13;
    sub_23F77E668();
    swift_storeEnumTagMultiPayload();
    return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a2, 0, 1, v11);
  }
  return result;
}

void sub_23F8EF4B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2330);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB43B8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2330);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2330);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoValueExpressionEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoValueExpressionEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB43B8);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoValueExpressionArrayVariant);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoValueExpressionArrayVariant);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoValueExpressionEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3448, type metadata accessor for TranscriptProtoValueExpressionArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpressionArrayVariant);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB43B8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB43B8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB43B8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoValueExpressionArrayVariant);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB43B8);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2330);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoValueExpressionArrayVariant);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

#error "23F8EF8D0: call analysis failed (funcsize=35)"

void sub_23F8EF9EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  sub_23F6B5220();
  v7 = v1;
  sub_23F9239D4();
  sub_23F6B60BC();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F92414C();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F923D60(v4, v7);
  v5 = sub_23F924A10();
  sub_23F6B5164(v0, 1, v5);
  if (v6)
  {
    sub_23F924604();
  }
  else
  {
    sub_23F924A80();
    sub_23F924858();
    if ((_DWORD)v5 == 6)
      sub_23F923D0C();
  }
  __break(1u);
}

#error "23F8EFAE8: call analysis failed (funcsize=32)"

#error "23F8EFB68: call analysis failed (funcsize=35)"

#error "23F8EFBF4: call analysis failed (funcsize=38)"

void sub_23F8EFC64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2330);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2330);
  v8 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2330);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoValueExpressionArrayVariant);
      sub_23F6D3458(&qword_256EB3448, type metadata accessor for TranscriptProtoValueExpressionArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpressionArrayVariant);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoValueExpressionArrayVariant);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoValueExpressionEnum);
  }
  __break(1u);
}

void sub_23F8EFDFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_23F6916B8(&qword_256EB2330);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2330);
  v5 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2330);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_23FB2D9A0();
      swift_bridgeObjectRelease();
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoValueExpressionEnum);
  }
  __break(1u);
}

void static TranscriptProtoValueExpression.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F6B50E8();
  v5 = v4;
  v39 = sub_23F6B53A4();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v39);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = sub_23F6D38F8(v9, v10, v11, v12, v13, v14, v15, v16, v40);
  type metadata accessor for TranscriptProtoValueExpressionEnum(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B59E0();
  v19 = sub_23F6916B8(&qword_256EB2338);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6D3A70();
  v24 = MEMORY[0x24BDAC7A8](v23);
  sub_23F923124(v24, v25, v26, v27, v28, v29, v30, v31, v41);
  sub_23F923164(v5, v0);
  v32 = v1 + *(int *)(v19 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v32);
  v33 = sub_23F9230E4(v1);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v35 = sub_23F9230E4(v32);
    if (v36)
    {
      sub_23F6D378C(v35, &qword_256EB2330);
LABEL_11:
      v38 = type metadata accessor for TranscriptProtoValueExpression(0);
      sub_23F6D3794(v38);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v33, v34, &qword_256EB2330);
  sub_23F9230E4(v32);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v37, type metadata accessor for TranscriptProtoValueExpressionEnum);
LABEL_9:
    sub_23F6D378C(v35, &qword_256EB2338);
    goto LABEL_12;
  }
  sub_23F923270();
  sub_23F6D3D70();
  static TranscriptProtoValueExpressionEnum.== infix(_:_:)();
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoValueExpression.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoValueExpression, &qword_256EB2340, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpression);
}

unint64_t sub_23F8F0150()
{
  static TranscriptProtoValueExpression.protoMessageName.getter();
  return 0xD00000000000001ALL;
}

void sub_23F8F0174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  TranscriptProtoValueExpression.decodeMessage<A>(decoder:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_23F8F0188()
{
  return TranscriptProtoValueExpression.traverse<A>(visitor:)();
}

uint64_t sub_23F8F019C()
{
  sub_23F6D3458(&qword_256EB3E08, type metadata accessor for TranscriptProtoValueExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpression);
  return sub_23FB2D784();
}

uint64_t sub_23F8F01F0()
{
  sub_23F6D3458(&qword_256EB3430, type metadata accessor for TranscriptProtoValueExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpression);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8F0234()
{
  sub_23F6D3458(&qword_256EB3430, type metadata accessor for TranscriptProtoValueExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpression);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoValueExpressionArrayVariant.protoMessageName.getter()
{
  return sub_23F6D3738(38);
}

uint64_t sub_23F8F02A0()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoValueExpressionArrayVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1000, (uint64_t)&unk_256EB1438, a1);
}

void TranscriptProtoValueExpressionArrayVariant.decodeMessage<A>(decoder:)()
{
  sub_23F913C48();
}

void TranscriptProtoValueExpressionArrayVariant.traverse<A>(visitor:)()
{
  sub_23F8B4D24();
}

void static TranscriptProtoValueExpressionArrayVariant.== infix(_:_:)()
{
  sub_23F89AB14();
}

uint64_t TranscriptProtoValueExpressionArrayVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoValueExpressionArrayVariant, &qword_256EB2348, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpressionArrayVariant);
}

unint64_t sub_23F8F0374()
{
  static TranscriptProtoValueExpressionArrayVariant.protoMessageName.getter();
  return 0xD000000000000026;
}

void sub_23F8F0398()
{
  TranscriptProtoSayExpression.decodeMessage<A>(decoder:)();
}

void sub_23F8F03AC()
{
  TranscriptProtoValueExpressionArrayVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F8F03C0()
{
  sub_23F6D3458(&qword_256EB3E00, type metadata accessor for TranscriptProtoValueExpressionArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpressionArrayVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F8F0414()
{
  sub_23F6D3458(&qword_256EB3448, type metadata accessor for TranscriptProtoValueExpressionArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpressionArrayVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8F0458()
{
  sub_23F6D3458(&qword_256EB3448, type metadata accessor for TranscriptProtoValueExpressionArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpressionArrayVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoPrefixExpression.protoMessageName.getter()
{
  return sub_23F6D3738(27);
}

uint64_t sub_23F8F04C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1450);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1450);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "prefixOp";
  *(_QWORD *)(v7 + 8) = 8;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "value";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoPrefixExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1008, (uint64_t)qword_256EB1450, a1);
}

void TranscriptProtoPrefixExpression.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6D3DC4();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_23F92320C();
      }
      else if (v1 == 1)
      {
        sub_23F6D3598();
        sub_23F8F06AC();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D3710();
}

uint64_t sub_23F8F06AC()
{
  sub_23F918B18();
  return sub_23FB2D7FC();
}

void TranscriptProtoPrefixExpression.traverse<A>(visitor:)()
{
  sub_23F902338();
}

void sub_23F8F0744(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoPrefixExpression(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void static TranscriptProtoPrefixExpression.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_23F6B50E8();
  v7 = v6;
  v35 = sub_23F6B53A4();
  v37 = *(_QWORD *)(v35 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  v36 = (uint64_t)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v10);
  v38 = sub_23F9234D4();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B573C();
  v12 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F9235CC();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6D3BD8();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F923C60();
  if (v24)
  {
    v17 = sub_23F923CB4();
    v18 = type metadata accessor for TranscriptProtoPrefixExpression(v17);
    v19 = sub_23F923B3C(v18);
    sub_23F923300(v19, v2);
    v33 = v5;
    sub_23F923300(v4 + *(int *)(v5 + 20), v0);
    v20 = v1 + *(int *)(v12 + 48);
    sub_23F923300(v2, v1);
    sub_23F923300(v0, v20);
    sub_23F6B5164(v1, 1, v38);
    v22 = v3;
    if (v24)
    {
      sub_23F6B62DC(v0);
      sub_23F6B62DC(v2);
      v23 = sub_23F6B5164(v20, 1, v38);
      if (v24)
      {
        sub_23F6D378C(v23, &qword_256EA25E0);
        goto LABEL_13;
      }
    }
    else
    {
      sub_23F923DD0(v1, v21, &qword_256EA25E0);
      sub_23F6B5164(v20, 1, v38);
      if (!v24)
      {
        v26 = v32;
        sub_23F92380C(v20, v32);
        sub_23F923B28();
        v28 = v27;
        sub_23F77DAB0(v26);
        sub_23F6D387C(v0);
        sub_23F6D387C(v2);
        sub_23F77DAB0(v7);
        sub_23F6D387C(v1);
        if ((v28 & 1) == 0)
          goto LABEL_14;
LABEL_13:
        v29 = v33;
        v30 = v34;
        sub_23F923484(v34, v22 + *(int *)(v33 + 24));
        sub_23F923484(v36, v4 + *(int *)(v29 + 24));
        sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        sub_23F6B5624();
        sub_23F923790();
        sub_23F877930(v30);
        goto LABEL_14;
      }
      sub_23F6D3748(v0);
      sub_23F6D3748(v2);
      sub_23F714040(v25, type metadata accessor for TranscriptProtoStatementID);
    }
    sub_23F6D378C(v23, &qword_256EA25E8);
  }
LABEL_14:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoPrefixExpression.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoPrefixExpression, &qword_256EB2358, (uint64_t)&protocol conformance descriptor for TranscriptProtoPrefixExpression);
}

unint64_t sub_23F8F0B94()
{
  static TranscriptProtoPrefixExpression.protoMessageName.getter();
  return 0xD00000000000001BLL;
}

void sub_23F8F0BB8()
{
  TranscriptProtoPrefixExpression.decodeMessage<A>(decoder:)();
}

void sub_23F8F0BCC()
{
  TranscriptProtoPrefixExpression.traverse<A>(visitor:)();
}

uint64_t sub_23F8F0BE0()
{
  sub_23F6D3458(&qword_256EB3DF8, type metadata accessor for TranscriptProtoPrefixExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPrefixExpression);
  return sub_23FB2D784();
}

uint64_t sub_23F8F0C34()
{
  sub_23F6D3458(&qword_256EB3460, type metadata accessor for TranscriptProtoPrefixExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPrefixExpression);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8F0C78()
{
  sub_23F6D3458(&qword_256EB3460, type metadata accessor for TranscriptProtoPrefixExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPrefixExpression);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoInfixExpression.protoMessageName.getter()
{
  return sub_23F6D3738(26);
}

uint64_t sub_23F8F0CE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1468);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1468);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "infixOp";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "lhs";
  *((_QWORD *)v11 + 1) = 3;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "rhs";
  *((_QWORD *)v13 + 1) = 3;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoInfixExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1010, (uint64_t)qword_256EB1468, a1);
}

void TranscriptProtoInfixExpression.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6D3DC4();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 3:
          sub_23F923390();
          break;
        case 2:
          sub_23F92320C();
          break;
        case 1:
          sub_23F6D3598();
          sub_23F8F0F10();
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D3710();
}

uint64_t sub_23F8F0F10()
{
  sub_23F918B54();
  return sub_23FB2D7FC();
}

void TranscriptProtoInfixExpression.traverse<A>(visitor:)()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F924514();
  if (!*v0 || (sub_23F918B54(), sub_23F923630(), !v1))
  {
    v2 = sub_23F6D3D7C();
    sub_23F8F1018(v2);
    if (!v1)
    {
      v3 = sub_23F6D3D7C();
      sub_23F8F1188(v3);
      type metadata accessor for TranscriptProtoInfixExpression(0);
      sub_23F9231A8();
    }
  }
  sub_23F6D3C00();
}

void sub_23F8F1018(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoInfixExpression(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void sub_23F8F1188(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoInfixExpression(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void static TranscriptProtoInfixExpression.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;

  sub_23F6B50E8();
  v4 = v3;
  v5 = sub_23F6B53A4();
  v73 = *(_QWORD *)(v5 - 8);
  v74 = v5;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  v72 = (uint64_t)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v62 - v9;
  v75 = (uint64_t *)sub_23F9234D4();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F693EB0();
  v12 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F923EC8();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F9235CC();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F924318();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F924304();
  v19 = MEMORY[0x24BDAC7A8](v18);
  v27 = sub_23F9242F0(v19, v20, v21, v22, v23, v24, v25, v26, v62);
  MEMORY[0x24BDAC7A8](v27);
  sub_23F9231E0();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F923C7C();
  if (v40)
  {
    v30 = sub_23F923AF8(v29);
    v31 = type metadata accessor for TranscriptProtoInfixExpression(v30);
    v32 = sub_23F9244EC(v31);
    sub_23F923368(v32, v2);
    v33 = *((int *)v10 + 5);
    v66 = v4;
    sub_23F923368(v4 + v33, v1);
    v34 = v0 + *(int *)(v12 + 48);
    sub_23F923368(v2, v0);
    sub_23F923368(v1, v34);
    v35 = v75;
    sub_23F6B5164(v0, 1, (uint64_t)v75);
    v37 = v0;
    if (v40)
    {
      v63 = v12;
      sub_23F6B62DC(v1);
      sub_23F6B62DC(v2);
      v38 = sub_23F6B5164(v34, 1, (uint64_t)v35);
      if (v40)
      {
        sub_23F6B6034(v38, &qword_256EA25E0);
LABEL_13:
        v46 = sub_23F924804();
        v47 = v70;
        sub_23F92344C(v46, v70);
        v48 = v10;
        v49 = v66;
        v50 = v69;
        sub_23F92344C(v66 + *((int *)v10 + 6), v69);
        v51 = v67;
        v52 = v67 + *(int *)(v63 + 48);
        sub_23F92344C(v47, v67);
        sub_23F92344C(v50, v52);
        sub_23F6B5164(v51, 1, (uint64_t)v35);
        if (v40)
        {
          sub_23F6D3C1C(v50);
          sub_23F6D3C1C(v47);
          v54 = sub_23F6B5164(v52, 1, (uint64_t)v35);
          if (v40)
          {
            sub_23F9239A0(v54, &qword_256EA25E0);
            goto LABEL_25;
          }
        }
        else
        {
          v55 = v65;
          sub_23F923BFC(v51, v53, &qword_256EA25E0);
          sub_23F6B5164(v52, 1, (uint64_t)v35);
          if (!v56)
          {
            v58 = v71;
            sub_23F923774(v52, v71);
            sub_23F72E3F8();
            static TranscriptProtoStatementID.== infix(_:_:)();
            v60 = v59;
            sub_23F77DB60(v58);
            sub_23F6B62DC(v69);
            sub_23F6B62DC(v70);
            sub_23F77DB60(v55);
            sub_23F6B62DC(v51);
            if ((v60 & 1) == 0)
              goto LABEL_23;
LABEL_25:
            v61 = v64;
            sub_23F6D3818(v64, (uint64_t)v75 + *((int *)v48 + 7));
            sub_23F6D3818(v72, v49 + *((int *)v48 + 7));
            sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
            sub_23F923230();
            sub_23F9232DC();
            sub_23F6D3874(v61);
            goto LABEL_23;
          }
          sub_23F6D3748(v69);
          sub_23F6D3748(v70);
          sub_23F7E7834(v57, type metadata accessor for TranscriptProtoStatementID);
        }
        v43 = v51;
LABEL_22:
        sub_23F6B4F84(v43, &qword_256EA25E8);
        goto LABEL_23;
      }
    }
    else
    {
      v39 = v68;
      sub_23F923DD0(v0, v36, &qword_256EA25E0);
      sub_23F6B5164(v34, 1, (uint64_t)v35);
      v41 = v71;
      if (!v40)
      {
        v63 = v12;
        sub_23F923774(v34, v71);
        sub_23F6B5994();
        static TranscriptProtoStatementID.== infix(_:_:)();
        v45 = v44;
        sub_23F77DB60(v41);
        v35 = &qword_256EA25E0;
        sub_23F6D387C(v1);
        sub_23F6D387C(v2);
        sub_23F77DB60(v39);
        sub_23F9241CC();
        if ((v45 & 1) == 0)
          goto LABEL_23;
        goto LABEL_13;
      }
      sub_23F6D3748(v1);
      sub_23F6D3748(v2);
      sub_23F714040(v42, type metadata accessor for TranscriptProtoStatementID);
    }
    v43 = v37;
    goto LABEL_22;
  }
LABEL_23:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoInfixExpression.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoInfixExpression, &qword_256EB2368, (uint64_t)&protocol conformance descriptor for TranscriptProtoInfixExpression);
}

unint64_t sub_23F8F1788()
{
  static TranscriptProtoInfixExpression.protoMessageName.getter();
  return 0xD00000000000001ALL;
}

void sub_23F8F17AC()
{
  TranscriptProtoInfixExpression.decodeMessage<A>(decoder:)();
}

void sub_23F8F17C0()
{
  TranscriptProtoInfixExpression.traverse<A>(visitor:)();
}

uint64_t sub_23F8F17D4()
{
  sub_23F6D3458(&qword_256EB3DF0, type metadata accessor for TranscriptProtoInfixExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoInfixExpression);
  return sub_23FB2D784();
}

uint64_t sub_23F8F1828()
{
  sub_23F6D3458(&qword_256EB3478, type metadata accessor for TranscriptProtoInfixExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoInfixExpression);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8F186C()
{
  sub_23F6D3458(&qword_256EB3478, type metadata accessor for TranscriptProtoInfixExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoInfixExpression);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTFlatExprPrefixVariant.protoMessageName.getter()
{
  return sub_23F6D3738(35);
}

uint64_t sub_23F8F18D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1480);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1480);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "first";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "second";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoASTFlatExprPrefixVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1018, (uint64_t)qword_256EB1480, a1);
}

void TranscriptProtoASTFlatExprPrefixVariant.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6D3DC4();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_23F92320C();
      }
      else if (v1 == 1)
      {
        sub_23F924760();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D3710();
}

void TranscriptProtoASTFlatExprPrefixVariant.traverse<A>(visitor:)()
{
  sub_23F902338();
}

void sub_23F8F1AF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA84E8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA84E8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA84E8);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValue);
    sub_23F6D3458(&qword_256EB2210, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValue);
  }
}

void static TranscriptProtoASTFlatExprPrefixVariant.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_23F6B50E8();
  v7 = v6;
  v36 = sub_23F6B53A4();
  v38 = *(_QWORD *)(v36 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  v37 = (uint64_t)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_23F9242AC();
  v39 = type metadata accessor for TranscriptProtoASTFlatValue(v11);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B573C();
  v13 = sub_23F6916B8(&qword_256EB2298);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA84E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F9235CC();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6D3BD8();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F923C60();
  if (v25)
  {
    v18 = sub_23F923CB4();
    v19 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(v18);
    v20 = sub_23F923B3C(v19);
    sub_23F923300(v20, v2);
    v34 = v5;
    sub_23F923300(v4 + *(int *)(v5 + 20), v0);
    v21 = v1 + *(int *)(v13 + 48);
    sub_23F923300(v2, v1);
    sub_23F923300(v0, v21);
    sub_23F6B5164(v1, 1, v39);
    v23 = v3;
    if (v25)
    {
      sub_23F6B62DC(v0);
      sub_23F6B62DC(v2);
      v24 = sub_23F6B5164(v21, 1, v39);
      if (v25)
      {
        sub_23F6D378C(v24, &qword_256EA84E8);
        goto LABEL_13;
      }
    }
    else
    {
      sub_23F923DD0(v1, v22, &qword_256EA84E8);
      sub_23F6B5164(v21, 1, v39);
      if (!v25)
      {
        v27 = v33;
        sub_23F92380C(v21, v33);
        sub_23F77E668();
        static TranscriptProtoASTFlatValue.== infix(_:_:)();
        v29 = v28;
        sub_23F77DAB0(v27);
        sub_23F6D387C(v0);
        sub_23F6D387C(v2);
        sub_23F77DAB0(v7);
        sub_23F6D387C(v1);
        if ((v29 & 1) == 0)
          goto LABEL_14;
LABEL_13:
        v30 = v34;
        v31 = v35;
        sub_23F923484(v35, v23 + *(int *)(v34 + 24));
        sub_23F923484(v37, v4 + *(int *)(v30 + 24));
        sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        sub_23F6B5624();
        sub_23F923790();
        sub_23F877930(v31);
        goto LABEL_14;
      }
      sub_23F6D3748(v0);
      sub_23F6D3748(v2);
      sub_23F714040(v26, type metadata accessor for TranscriptProtoASTFlatValue);
    }
    sub_23F6D378C(v24, &qword_256EB2298);
  }
LABEL_14:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoASTFlatExprPrefixVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant, &qword_256EB2378, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPrefixVariant);
}

unint64_t sub_23F8F1F38()
{
  static TranscriptProtoASTFlatExprPrefixVariant.protoMessageName.getter();
  return 0xD000000000000023;
}

void sub_23F8F1F5C()
{
  TranscriptProtoASTFlatExprPrefixVariant.decodeMessage<A>(decoder:)();
}

void sub_23F8F1F70()
{
  TranscriptProtoASTFlatExprPrefixVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F8F1F84()
{
  sub_23F6D3458(&qword_256EB3DE8, type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPrefixVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F8F1FD8()
{
  sub_23F6D3458(&qword_256EB3490, type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPrefixVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8F201C()
{
  sub_23F6D3458(&qword_256EB3490, type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPrefixVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoDotExpression.protoMessageName.getter()
{
  return sub_23F6D3738(24);
}

uint64_t sub_23F8F2088()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1498);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1498);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "lhs";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "index";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoDotExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1020, (uint64_t)qword_256EB1498, a1);
}

void TranscriptProtoDotExpression.decodeMessage<A>(decoder:)()
{
  sub_23F90372C();
}

void TranscriptProtoDotExpression.traverse<A>(visitor:)()
{
  sub_23F8F224C();
}

void sub_23F8F224C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;

  sub_23F6D3EA4();
  v5(v0, v2, v3, v4);
  if (!v1)
  {
    sub_23F6D36FC();
    if (v6)
      sub_23F923758();
    sub_23F923AF0();
    sub_23F6B6F88();
    sub_23F923C10();
  }
  sub_23F6D3750();
}

void sub_23F8F22E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoDotExpression(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void static TranscriptProtoDotExpression.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  v37 = sub_23F6B53A4();
  v40 = *(_QWORD *)(v37 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  v39 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v10);
  v38 = (char *)&v35 - v11;
  v12 = sub_23F923344();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B57F4(v14, v35);
  v15 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B5208();
  v17 = (uint64_t (*)(uint64_t))&qword_256EA25E0;
  sub_23F72E4BC();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B65E0();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F6D3BD8();
  MEMORY[0x24BDAC7A8](v20);
  v21 = sub_23F9238C8();
  v22 = type metadata accessor for TranscriptProtoDotExpression(v21);
  v23 = *(int *)(v22 + 20);
  v41 = v7;
  sub_23F923300(v7 + v23, v0);
  v24 = *(int *)(v22 + 20);
  v42 = v5;
  sub_23F923300(v5 + v24, v1);
  v25 = v2 + *(int *)(v15 + 48);
  sub_23F923300(v0, v2);
  sub_23F923300(v1, v25);
  sub_23F6B5164(v2, 1, v12);
  if (!v28)
  {
    sub_23F923760(v2, v26, &qword_256EA25E0);
    sub_23F6B5164(v25, 1, v12);
    if (!v28)
    {
      v17 = type metadata accessor for TranscriptProtoStatementID;
      v5 = v36;
      sub_23F92380C(v25, v36);
      sub_23F9244E4();
      v31 = v30;
      sub_23F77DAB0(v5);
      sub_23F6D387C(v1);
      sub_23F6D387C(v0);
      sub_23F77DAB0(v3);
      sub_23F6D387C(v2);
      if ((v31 & 1) == 0)
        goto LABEL_18;
      goto LABEL_12;
    }
    sub_23F6D3748(v1);
    sub_23F6D3748(v0);
    sub_23F77DB94(v29, type metadata accessor for TranscriptProtoStatementID);
LABEL_9:
    sub_23F6D378C(v27, &qword_256EA25E8);
    goto LABEL_18;
  }
  sub_23F6B62DC(v1);
  sub_23F6B62DC(v0);
  v27 = sub_23F6B5164(v25, 1, v12);
  if (!v28)
    goto LABEL_9;
  sub_23F6D378C(v27, &qword_256EA25E0);
LABEL_12:
  sub_23F923B60();
  if (v28)
    v34 = v32 == v33;
  else
    v34 = 0;
  if (v34 || (sub_23F6B5280() & 1) != 0)
  {
    sub_23F9238A8();
    sub_23F878B18(v39, v5 + *(int *)(v22 + 24));
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F9235A4();
    sub_23F9237A4();
    sub_23F923C50((uint64_t)v17);
  }
LABEL_18:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoDotExpression.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoDotExpression, &qword_256EB2380, (uint64_t)&protocol conformance descriptor for TranscriptProtoDotExpression);
}

unint64_t sub_23F8F2714()
{
  static TranscriptProtoDotExpression.protoMessageName.getter();
  return 0xD000000000000018;
}

void sub_23F8F2738()
{
  TranscriptProtoDotExpression.decodeMessage<A>(decoder:)();
}

void sub_23F8F274C()
{
  TranscriptProtoDotExpression.traverse<A>(visitor:)();
}

uint64_t sub_23F8F2760()
{
  sub_23F6D3458(&qword_256EB3DE0, type metadata accessor for TranscriptProtoDotExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoDotExpression);
  return sub_23FB2D784();
}

uint64_t sub_23F8F27B4()
{
  sub_23F6D3458(&qword_256EB34A8, type metadata accessor for TranscriptProtoDotExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoDotExpression);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8F27F8()
{
  sub_23F6D3458(&qword_256EB34A8, type metadata accessor for TranscriptProtoDotExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoDotExpression);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoIndexExpression.protoMessageName.getter()
{
  return sub_23F6D3738(26);
}

uint64_t sub_23F8F2864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB14B0);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB14B0);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "lhs";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "index";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoIndexExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1028, (uint64_t)qword_256EB14B0, a1);
}

void TranscriptProtoIndexExpression.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6D3DC4();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_23F92320C();
      }
      else if (v1 == 1)
      {
        sub_23F923648();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D3710();
}

void TranscriptProtoIndexExpression.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F923460();
  sub_23F9234C0();
  if (!v0)
  {
    sub_23F9231F0();
    sub_23F8F2AD4(v1);
    type metadata accessor for TranscriptProtoIndexExpression(0);
    sub_23F6D37BC();
  }
  sub_23F6D3674();
}

void sub_23F8F2AD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoIndexExpression(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void static TranscriptProtoIndexExpression.== infix(_:_:)()
{
  sub_23F8F2C50();
}

void sub_23F8F2C50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t (*v63)(_QWORD);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  sub_23F6B50E8();
  v63 = v4;
  v6 = v5;
  v8 = v7;
  v9 = sub_23F6B53A4();
  v59 = *(_QWORD *)(v9 - 8);
  v60 = v9;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v58 = (uint64_t)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v12);
  v57 = (uint64_t)&v56 - v13;
  sub_23F923344();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B537C(v15, v56);
  v16 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  v64 = (uint64_t)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F878DA4();
  sub_23F6B5D98();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  v61 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F9232B0();
  MEMORY[0x24BDAC7A8](v23);
  v67 = (uint64_t)&v56 - v24;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F876D18();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F9231E0();
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v56 - v28;
  v65 = v8;
  sub_23F923368(v8, (uint64_t)&v56 - v28);
  v66 = v6;
  sub_23F923368(v6, v3);
  v30 = v1 + *(int *)(v16 + 48);
  sub_23F923368((uint64_t)v29, v1);
  sub_23F923368(v3, v30);
  sub_23F9230E4(v1);
  if (v33)
  {
    sub_23F6B62DC(v3);
    sub_23F6B62DC((uint64_t)v29);
    v32 = sub_23F9230E4(v30);
    if (v33)
    {
      sub_23F923588(v32, &qword_256EA25E0);
      goto LABEL_11;
    }
LABEL_9:
    v35 = v1;
LABEL_20:
    sub_23F6B4F84(v35, &qword_256EA25E8);
    goto LABEL_21;
  }
  sub_23F923CD0(v1, v31, &qword_256EA25E0);
  sub_23F9230E4(v30);
  if (v33)
  {
    sub_23F6B64F4(v3);
    sub_23F6B64F4((uint64_t)v29);
    sub_23F713FFC(v34, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_9;
  }
  v36 = v62;
  sub_23F7E76D0(v30, v62, type metadata accessor for TranscriptProtoStatementID);
  sub_23F923B28();
  v30 = v37;
  sub_23F923B20(v36);
  sub_23F6D387C(v3);
  sub_23F6D387C((uint64_t)v29);
  sub_23F923B20(v2);
  sub_23F6D387C(v1);
  if ((v30 & 1) == 0)
    goto LABEL_21;
LABEL_11:
  v38 = v63(0);
  v39 = sub_23F924278(v38);
  v40 = v67;
  sub_23F923300(v39, v67);
  v41 = v66;
  sub_23F923300(v66 + *(int *)(v1 + 20), v0);
  v42 = v64;
  v43 = v64 + *(int *)(v16 + 48);
  sub_23F923300(v40, v64);
  sub_23F923300(v0, v43);
  sub_23F9230E4(v42);
  if (v33)
  {
    sub_23F6B6EF8(v0);
    sub_23F6B6EF8(v40);
    v45 = sub_23F9230E4(v43);
    if (v33)
    {
      sub_23F77DD64(v45, &qword_256EA25E0);
LABEL_23:
      v52 = v30 + *(int *)(v1 + 24);
      v53 = v57;
      sub_23F6D3818(v57, v52);
      v54 = v41 + *(int *)(v1 + 24);
      v55 = v58;
      sub_23F6D3818(v58, v54);
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6D37C8();
      sub_23F6D3874(v55);
      sub_23F6D3874(v53);
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  v46 = (uint64_t)v61;
  sub_23F923760(v42, v44, &qword_256EA25E0);
  sub_23F9230E4(v43);
  if (v47)
  {
    sub_23F6D3748(v0);
    sub_23F6D3748(v67);
    sub_23F77DB94(v48, type metadata accessor for TranscriptProtoStatementID);
LABEL_19:
    v35 = v42;
    goto LABEL_20;
  }
  v49 = v62;
  sub_23F9238DC(v43);
  sub_23F9249A0();
  static TranscriptProtoStatementID.== infix(_:_:)();
  v51 = v50;
  sub_23F6D3DAC(v49);
  sub_23F6B62DC(v0);
  sub_23F6B62DC(v67);
  sub_23F6D3DAC(v46);
  sub_23F6B62DC(v42);
  if ((v51 & 1) != 0)
    goto LABEL_23;
LABEL_21:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoIndexExpression.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoIndexExpression, &qword_256EB2388, (uint64_t)&protocol conformance descriptor for TranscriptProtoIndexExpression);
}

unint64_t sub_23F8F30E0()
{
  static TranscriptProtoIndexExpression.protoMessageName.getter();
  return 0xD00000000000001ALL;
}

void sub_23F8F3104()
{
  TranscriptProtoIndexExpression.decodeMessage<A>(decoder:)();
}

void sub_23F8F3118()
{
  TranscriptProtoIndexExpression.traverse<A>(visitor:)();
}

uint64_t sub_23F8F312C()
{
  sub_23F6D3458(&qword_256EB3DD8, type metadata accessor for TranscriptProtoIndexExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoIndexExpression);
  return sub_23FB2D784();
}

uint64_t sub_23F8F3180()
{
  sub_23F6D3458(&qword_256EB34C0, type metadata accessor for TranscriptProtoIndexExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoIndexExpression);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8F31C4()
{
  sub_23F6D3458(&qword_256EB34C0, type metadata accessor for TranscriptProtoIndexExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoIndexExpression);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoUpdateParametersExpression.protoMessageName.getter()
{
  return sub_23F6D3738(37);
}

uint64_t sub_23F8F3230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB14C8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB14C8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "callStatementId";
  *(_QWORD *)(v7 + 8) = 15;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "updates";
  *((_QWORD *)v11 + 1) = 7;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoUpdateParametersExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1030, (uint64_t)qword_256EB14C8, a1);
}

void TranscriptProtoUpdateParametersExpression.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_23F6D3598();
        sub_23F924200();
      }
      else if (v1 == 1)
      {
        sub_23F923814();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoUpdateParametersExpression.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F6D3DC4();
  v2 = sub_23F924010();
  sub_23F8F34CC(v2);
  if (!v0)
  {
    if (*(_QWORD *)(*(_QWORD *)v1 + 16))
    {
      type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter(0);
      sub_23F6D3458(&qword_256EB2390, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
      sub_23F924360();
    }
    type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
    sub_23F923C10();
  }
  sub_23F6D3710();
}

void sub_23F8F34CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t updated;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
  sub_23F7A1EDC(a1 + *(int *)(updated + 20), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void static TranscriptProtoUpdateParametersExpression.== infix(_:_:)()
{
  sub_23F8F3650();
}

void sub_23F8F3650()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD, _QWORD);
  uint64_t (*v5)(uint64_t);
  uint64_t (*v6)(uint64_t);
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(_QWORD, _QWORD);
  _QWORD *v46;
  _QWORD *v47;

  sub_23F6B50E8();
  v45 = v4;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v40 = sub_23F6B53A4();
  v43 = *(_QWORD *)(v40 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  v42 = (uint64_t)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v13);
  v41 = (uint64_t)&v40 - v14;
  v15 = sub_23F923344();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B5C10(v17, v40);
  v18 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F6B53AC();
  sub_23F72E4BC();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F72E168();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6D3BD8();
  MEMORY[0x24BDAC7A8](v22);
  v23 = sub_23F9238C8();
  v24 = v6(v23);
  v25 = *(int *)(v24 + 20);
  v46 = v10;
  sub_23F923300((uint64_t)v10 + v25, v0);
  v26 = *(int *)(v24 + 20);
  v47 = v8;
  sub_23F923300((uint64_t)v8 + v26, v1);
  v27 = v3 + *(int *)(v18 + 48);
  sub_23F923300(v0, v3);
  sub_23F923300(v1, v27);
  v28 = sub_23F6B6468();
  sub_23F6B5164(v28, v29, v15);
  if (!v32)
  {
    sub_23F923BFC(v3, v30, &qword_256EA25E0);
    sub_23F6B5164(v27, 1, v15);
    if (!v32)
    {
      v34 = v44;
      sub_23F92380C(v27, v44);
      sub_23F9244E4();
      v36 = v35;
      sub_23F77DAB0(v34);
      sub_23F923DA8(v1);
      sub_23F923DA8(v0);
      sub_23F77DAB0(v2);
      sub_23F923DA8(v3);
      if ((v36 & 1) == 0)
        goto LABEL_13;
      goto LABEL_11;
    }
    sub_23F6D3748(v1);
    sub_23F6D3748(v0);
    sub_23F7E7834(v33, type metadata accessor for TranscriptProtoStatementID);
LABEL_9:
    sub_23F6B6034(v31, &qword_256EA25E8);
    goto LABEL_13;
  }
  sub_23F6B62DC(v1);
  sub_23F6B62DC(v0);
  v31 = sub_23F6B5164(v27, 1, v15);
  if (!v32)
    goto LABEL_9;
  sub_23F6B6034(v31, &qword_256EA25E0);
LABEL_11:
  v37 = v46;
  v38 = v47;
  if ((v45(*v46, *v47) & 1) != 0)
  {
    v39 = v41;
    sub_23F878B18(v41, (uint64_t)v37 + *(int *)(v24 + 24));
    sub_23F878B18(v42, (uint64_t)v38 + *(int *)(v24 + 24));
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F9235A4();
    sub_23F9237A4();
    sub_23F923C50(v39);
  }
LABEL_13:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoUpdateParametersExpression.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoUpdateParametersExpression, &qword_256EB2398, (uint64_t)&protocol conformance descriptor for TranscriptProtoUpdateParametersExpression);
}

unint64_t sub_23F8F3940()
{
  static TranscriptProtoUpdateParametersExpression.protoMessageName.getter();
  return 0xD000000000000025;
}

void sub_23F8F3964()
{
  TranscriptProtoUpdateParametersExpression.decodeMessage<A>(decoder:)();
}

void sub_23F8F3978()
{
  TranscriptProtoUpdateParametersExpression.traverse<A>(visitor:)();
}

uint64_t sub_23F8F398C()
{
  sub_23F6D3458(&qword_256EB3DD0, type metadata accessor for TranscriptProtoUpdateParametersExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoUpdateParametersExpression);
  return sub_23FB2D784();
}

uint64_t sub_23F8F39E0()
{
  sub_23F6D3458(&qword_256EB34D8, type metadata accessor for TranscriptProtoUpdateParametersExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoUpdateParametersExpression);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8F3A24()
{
  sub_23F6D3458(&qword_256EB34D8, type metadata accessor for TranscriptProtoUpdateParametersExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoUpdateParametersExpression);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoUpdateParameterExpression_UpdateParameter.protoMessageName.getter()
{
  return sub_23F6D3738(52);
}

uint64_t sub_23F8F3A90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB14E0);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB14E0);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "parameterId";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "kind";
  *((_QWORD *)v11 + 1) = 4;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "value";
  *((_QWORD *)v13 + 1) = 5;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoUpdateParameterExpression_UpdateParameter._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1038, (uint64_t)qword_256EB14E0, a1);
}

void TranscriptProtoUpdateParameterExpression_UpdateParameter.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 3:
          sub_23F6D3598();
          sub_23F9235BC();
          break;
        case 2:
          sub_23F90F2F4();
          break;
        case 1:
          sub_23F923334();
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoUpdateParameterExpression_UpdateParameter.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  sub_23F924514();
  sub_23F6D36FC();
  if (!v1 || (sub_23F923258(), !v0))
  {
    sub_23F9246F4();
    if (!v2 || (sub_23F918BCC(), sub_23F923630(), !v0))
    {
      v3 = sub_23F6D3D7C();
      sub_23F8F3DA0(v3);
      if (!v0)
      {
        type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter(0);
        sub_23F9231A8();
      }
    }
  }
  sub_23F6D3C00();
}

void sub_23F8F3DA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t updated;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter(0);
  sub_23F7A1EDC(a1 + *(int *)(updated + 24), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void static TranscriptProtoUpdateParameterExpression_UpdateParameter.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t updated;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  sub_23F6B50E8();
  v5 = sub_23F6D35C0();
  v42 = *(_QWORD *)(v5 - 8);
  v43 = v5;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  v41 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v8);
  v40 = (uint64_t)&v38 - v9;
  sub_23F923344();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B59E0();
  v11 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6D3BD8();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v38 - v16;
  sub_23F6B6754();
  v20 = v20 && v18 == v19;
  if (v20 || (sub_23F6B5280() & 1) != 0)
  {
    sub_23F923CD8();
    if (v20)
    {
      v21 = sub_23F924508();
      updated = type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter(v21);
      v23 = sub_23F9247F8(updated);
      sub_23F923268(v23, (uint64_t)v17);
      v39 = updated;
      sub_23F923268(v1 + *(int *)(updated + 24), v0);
      v24 = sub_23F924A38();
      sub_23F923268(v24, v25);
      sub_23F923268(v0, v11);
      v26 = sub_23F9230E4(v3);
      if (v20)
      {
        sub_23F6D3748(v0);
        sub_23F6D3748((uint64_t)v17);
        v28 = sub_23F9230E4(v11);
        if (v20)
        {
          sub_23F6D378C(v28, &qword_256EA25E0);
          goto LABEL_18;
        }
      }
      else
      {
        sub_23F9232A4(v26, v27, &qword_256EA25E0);
        sub_23F9230E4(v11);
        if (!v29)
        {
          v31 = v38;
          sub_23F7F6534(v11, v38);
          sub_23F924684();
          v33 = v32;
          sub_23F6D38A0(v31);
          sub_23F6D38A8(v0);
          sub_23F6D38A8((uint64_t)v17);
          sub_23F6D38A0(v4);
          sub_23F6D38A8(v3);
          if ((v33 & 1) == 0)
            goto LABEL_19;
LABEL_18:
          v34 = v39;
          v35 = v40;
          sub_23F6D3818(v40, v2 + *(int *)(v39 + 28));
          v36 = v1 + *(int *)(v34 + 28);
          v37 = v41;
          sub_23F6D3818(v41, v36);
          sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          sub_23F6D37C8();
          sub_23F6D3DA4(v37);
          sub_23F6D3DA4(v35);
          goto LABEL_19;
        }
        sub_23F6B64F4(v0);
        sub_23F6B64F4((uint64_t)v17);
        sub_23F6D3C24(v30, type metadata accessor for TranscriptProtoStatementID);
      }
      sub_23F6D378C(v28, &qword_256EA25E8);
    }
  }
LABEL_19:
  sub_23F6B5694();
  sub_23F693DDC();
}

uint64_t TranscriptProtoUpdateParameterExpression_UpdateParameter.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter, &qword_256EB23A8, (uint64_t)&protocol conformance descriptor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
}

unint64_t sub_23F8F41E8()
{
  static TranscriptProtoUpdateParameterExpression_UpdateParameter.protoMessageName.getter();
  return 0xD000000000000034;
}

void sub_23F8F420C()
{
  TranscriptProtoUpdateParameterExpression_UpdateParameter.decodeMessage<A>(decoder:)();
}

void sub_23F8F4220()
{
  TranscriptProtoUpdateParameterExpression_UpdateParameter.traverse<A>(visitor:)();
}

uint64_t sub_23F8F4234()
{
  sub_23F6D3458(&qword_256EB3DC8, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
  return sub_23FB2D784();
}

uint64_t sub_23F8F4288()
{
  sub_23F6D3458(&qword_256EB2390, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8F42CC()
{
  sub_23F6D3458(&qword_256EB2390, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoCallExpression.protoMessageName.getter()
{
  return sub_23F6D3738(25);
}

uint64_t sub_23F8F4338()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB14F8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB14F8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "fn";
  *(_QWORD *)(v7 + 8) = 2;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "parameters";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoCallExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1040, (uint64_t)qword_256EB14F8, a1);
}

void TranscriptProtoCallExpression.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F904868(a1, a2);
}

uint64_t sub_23F8F44BC()
{
  sub_23FB2D6DC();
  type metadata accessor for TranscriptProtoStatementID(0);
  sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_23F6D3458(&qword_256EB23B0, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  return sub_23FB2D79C();
}

void TranscriptProtoCallExpression.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F923528();
  sub_23F6D36FC();
  if (!v1 || (sub_23F923258(), !v0))
  {
    sub_23F924550();
    if (!v2
      || (sub_23F923AE8(),
          v3 = sub_23F924924(),
          type metadata accessor for TranscriptProtoStatementID(v3),
          sub_23F923750(&qword_256EB2020, v4, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID),
          sub_23F923750(&qword_256EB23B0, v5, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID),
          sub_23F924910(),
          sub_23F923544(),
          !v0))
    {
      type metadata accessor for TranscriptProtoCallExpression(0);
      sub_23F9231A8();
    }
  }
  sub_23F6D3B40();
}

void static TranscriptProtoCallExpression.== infix(_:_:)()
{
  sub_23F8D477C();
}

uint64_t TranscriptProtoCallExpression.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoCallExpression, &qword_256EB23B8, (uint64_t)&protocol conformance descriptor for TranscriptProtoCallExpression);
}

unint64_t sub_23F8F4690()
{
  static TranscriptProtoCallExpression.protoMessageName.getter();
  return 0xD000000000000019;
}

void sub_23F8F46B4(uint64_t a1, uint64_t a2)
{
  TranscriptProtoCallExpression.decodeMessage<A>(decoder:)(a1, a2);
}

void sub_23F8F46C8()
{
  TranscriptProtoCallExpression.traverse<A>(visitor:)();
}

uint64_t sub_23F8F46DC()
{
  sub_23F6D3458(&qword_256EB3DC0, type metadata accessor for TranscriptProtoCallExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoCallExpression);
  return sub_23FB2D784();
}

uint64_t sub_23F8F4730()
{
  sub_23F6D3458(&qword_256EB3500, type metadata accessor for TranscriptProtoCallExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoCallExpression);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8F4774()
{
  sub_23F6D3458(&qword_256EB3500, type metadata accessor for TranscriptProtoCallExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoCallExpression);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoSayExpression.protoMessageName.getter()
{
  return sub_23F6D3738(24);
}

uint64_t sub_23F8F47E0()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoSayExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1048, (uint64_t)&unk_256EB1510, a1);
}

void TranscriptProtoSayExpression.decodeMessage<A>(decoder:)()
{
  sub_23F913C48();
}

void TranscriptProtoSayExpression.traverse<A>(visitor:)()
{
  sub_23F8B4D24();
}

void static TranscriptProtoSayExpression.== infix(_:_:)()
{
  sub_23F89AB14();
}

uint64_t TranscriptProtoSayExpression.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoSayExpression, &qword_256EB23C0, (uint64_t)&protocol conformance descriptor for TranscriptProtoSayExpression);
}

unint64_t sub_23F8F48B4()
{
  static TranscriptProtoSayExpression.protoMessageName.getter();
  return 0xD000000000000018;
}

void sub_23F8F48D8()
{
  TranscriptProtoSayExpression.traverse<A>(visitor:)();
}

uint64_t sub_23F8F48EC()
{
  sub_23F6D3458(&qword_256EB3DB8, type metadata accessor for TranscriptProtoSayExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoSayExpression);
  return sub_23FB2D784();
}

uint64_t sub_23F8F4940()
{
  sub_23F6D3458(&qword_256EB3518, type metadata accessor for TranscriptProtoSayExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoSayExpression);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8F4984()
{
  sub_23F6D3458(&qword_256EB3518, type metadata accessor for TranscriptProtoSayExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoSayExpression);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoPickExpression.protoMessageName.getter()
{
  return sub_23F6D3738(25);
}

uint64_t sub_23F8F49F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1528);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1528);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "statementId";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "index";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoPickExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1050, (uint64_t)qword_256EB1528, a1);
}

void TranscriptProtoPickExpression.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6D3DC4();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_23F924BCC();
      }
      else if (v1 == 1)
      {
        sub_23F92320C();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D3710();
}

void TranscriptProtoPickExpression.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F8F4C5C((uint64_t)v0);
  if (!v1)
  {
    if (*v0)
      sub_23F9249B8();
    type metadata accessor for TranscriptProtoPickExpression(0);
    sub_23F72E430();
    sub_23F923C10();
  }
  sub_23F6D3674();
}

void sub_23F8F4C5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoPickExpression(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void static TranscriptProtoPickExpression.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  v35 = sub_23F6B53A4();
  v38 = *(_QWORD *)(v35 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  v37 = (uint64_t)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v10);
  v36 = (uint64_t)&v34 - v11;
  v12 = sub_23F923344();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B5BD8(v14, v34);
  v15 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B5208();
  sub_23F72E4BC();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B65E0();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6D3BD8();
  MEMORY[0x24BDAC7A8](v19);
  v20 = sub_23F9238C8();
  v21 = type metadata accessor for TranscriptProtoPickExpression(v20);
  v22 = *(int *)(v21 + 20);
  v40 = v7;
  sub_23F923300((uint64_t)v7 + v22, v0);
  v23 = *(int *)(v21 + 20);
  v41 = v5;
  sub_23F923300((uint64_t)v5 + v23, v1);
  v24 = v2 + *(int *)(v15 + 48);
  sub_23F923300(v0, v2);
  sub_23F923300(v1, v24);
  sub_23F6B5164(v2, 1, v12);
  if (!v27)
  {
    sub_23F923760(v2, v25, &qword_256EA25E0);
    sub_23F6B5164(v24, 1, v12);
    if (!v27)
    {
      v29 = v39;
      sub_23F92380C(v24, v39);
      sub_23F9244E4();
      v31 = v30;
      sub_23F77DAB0(v29);
      sub_23F6D387C(v1);
      sub_23F6D387C(v0);
      sub_23F77DAB0(v3);
      sub_23F6D387C(v2);
      if ((v31 & 1) == 0)
        goto LABEL_13;
      goto LABEL_11;
    }
    sub_23F6D3748(v1);
    sub_23F6D3748(v0);
    sub_23F77DB94(v28, type metadata accessor for TranscriptProtoStatementID);
LABEL_9:
    sub_23F6D378C(v26, &qword_256EA25E8);
    goto LABEL_13;
  }
  sub_23F6B62DC(v1);
  sub_23F6B62DC(v0);
  v26 = sub_23F6B5164(v24, 1, v12);
  if (!v27)
    goto LABEL_9;
  sub_23F6D378C(v26, &qword_256EA25E0);
LABEL_11:
  v32 = v41;
  if (*v40 == *v41)
  {
    v33 = v36;
    sub_23F878B18(v36, (uint64_t)v40 + *(int *)(v21 + 24));
    sub_23F878B18(v37, (uint64_t)v32 + *(int *)(v21 + 24));
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F9235A4();
    sub_23F9237A4();
    sub_23F923C50(v33);
  }
LABEL_13:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoPickExpression.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoPickExpression, &qword_256EB23C8, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickExpression);
}

unint64_t sub_23F8F50A8()
{
  static TranscriptProtoPickExpression.protoMessageName.getter();
  return 0xD000000000000019;
}

void sub_23F8F50CC()
{
  TranscriptProtoPickExpression.decodeMessage<A>(decoder:)();
}

void sub_23F8F50E0()
{
  TranscriptProtoPickExpression.traverse<A>(visitor:)();
}

uint64_t sub_23F8F50F4()
{
  sub_23F6D3458(&qword_256EB3DB0, type metadata accessor for TranscriptProtoPickExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickExpression);
  return sub_23FB2D784();
}

uint64_t sub_23F8F5148()
{
  sub_23F6D3458(&qword_256EB3530, type metadata accessor for TranscriptProtoPickExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickExpression);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8F518C()
{
  sub_23F6D3458(&qword_256EB3530, type metadata accessor for TranscriptProtoPickExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickExpression);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoConfirmExpression.protoMessageName.getter()
{
  return sub_23F6D3738(28);
}

uint64_t sub_23F8F51F8()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoConfirmExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1058, (uint64_t)&unk_256EB1540, a1);
}

void TranscriptProtoConfirmExpression.decodeMessage<A>(decoder:)()
{
  sub_23F913C48();
}

void TranscriptProtoConfirmExpression.traverse<A>(visitor:)()
{
  uint64_t v0;

  sub_23F923668();
  sub_23F92351C();
  if (!v0)
  {
    type metadata accessor for TranscriptProtoConfirmExpression(0);
    sub_23F923428();
  }
  sub_23F6D3674();
}

void static TranscriptProtoConfirmExpression.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[6];

  sub_23F6B50E8();
  v5 = v4;
  v31[0] = sub_23F6B53A4();
  v31[5] = *(_QWORD *)(v31[0] - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v31[0]);
  MEMORY[0x24BDAC7A8](v8);
  v31[2] = (uint64_t)v31 - v9;
  sub_23F923344();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B59E0();
  v11 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6D3A70();
  v16 = MEMORY[0x24BDAC7A8](v15);
  sub_23F923124(v16, v17, v18, v19, v20, v21, v22, v23, v31[0]);
  v31[3] = v5;
  sub_23F923164(v5, v0);
  v24 = v1 + *(int *)(v11 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v24);
  v25 = sub_23F9230E4(v1);
  if (v28)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v27 = sub_23F9230E4(v24);
    if (v28)
    {
      sub_23F6D378C(v27, &qword_256EA25E0);
LABEL_11:
      v30 = type metadata accessor for TranscriptProtoConfirmExpression(0);
      sub_23F6D3794(v30);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v25, v26, &qword_256EA25E0);
  sub_23F9230E4(v24);
  if (v28)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v29, type metadata accessor for TranscriptProtoStatementID);
LABEL_9:
    sub_23F6D378C(v27, &qword_256EA25E8);
    goto LABEL_12;
  }
  sub_23F923270();
  sub_23F9238E8();
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v24 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoConfirmExpression.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoConfirmExpression, &qword_256EB23D0, (uint64_t)&protocol conformance descriptor for TranscriptProtoConfirmExpression);
}

unint64_t sub_23F8F5504()
{
  static TranscriptProtoConfirmExpression.protoMessageName.getter();
  return 0xD00000000000001CLL;
}

void sub_23F8F5528()
{
  TranscriptProtoOpenExpression.decodeMessage<A>(decoder:)();
}

void sub_23F8F553C()
{
  TranscriptProtoConfirmExpression.traverse<A>(visitor:)();
}

uint64_t sub_23F8F5550()
{
  sub_23F6D3458(&qword_256EB3DA8, type metadata accessor for TranscriptProtoConfirmExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoConfirmExpression);
  return sub_23FB2D784();
}

uint64_t sub_23F8F55A4()
{
  sub_23F6D3458(&qword_256EB3548, type metadata accessor for TranscriptProtoConfirmExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoConfirmExpression);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8F55E8()
{
  sub_23F6D3458(&qword_256EB3548, type metadata accessor for TranscriptProtoConfirmExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoConfirmExpression);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoSearchExpression.protoMessageName.getter()
{
  return sub_23F6D3738(27);
}

uint64_t sub_23F8F5654()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1558);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1558);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "query";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "isLowConfidenceKnowledge";
  *((_QWORD *)v11 + 1) = 24;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "pickOne";
  *((_QWORD *)v13 + 1) = 7;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoSearchExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1060, (uint64_t)qword_256EB1558, a1);
}

void TranscriptProtoSearchExpression.decodeMessage<A>(decoder:)()
{
  sub_23F905C4C();
}

void TranscriptProtoSearchExpression.traverse<A>(visitor:)()
{
  sub_23F905CDC();
}

void static TranscriptProtoSearchExpression.== infix(_:_:)()
{
  sub_23F8F5834();
}

void sub_23F8F5834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F923590();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6D3834();
  v8 = v8 && v6 == v7;
  if (v8 || (sub_23F6B5280() & 1) != 0)
  {
    sub_23F923CD8();
    if (v8 && *(unsigned __int8 *)(v3 + 17) == *(unsigned __int8 *)(v2 + 17))
    {
      v9 = sub_23F923C1C();
      sub_23F923308(v1, v3 + *(int *)(v9 + 28));
      sub_23F6D36AC(*(int *)(v9 + 28));
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6D3600();
      sub_23F6D3820(v0);
      sub_23F6D3820(v1);
    }
  }
  sub_23F924700();
  sub_23F6B69E0();
}

uint64_t TranscriptProtoSearchExpression.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoSearchExpression, &qword_256EB23D8, (uint64_t)&protocol conformance descriptor for TranscriptProtoSearchExpression);
}

unint64_t sub_23F8F5930()
{
  static TranscriptProtoSearchExpression.protoMessageName.getter();
  return 0xD00000000000001BLL;
}

void sub_23F8F5954()
{
  TranscriptProtoSearchExpression.traverse<A>(visitor:)();
}

uint64_t sub_23F8F5968()
{
  sub_23F6D3458(&qword_256EB3DA0, type metadata accessor for TranscriptProtoSearchExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoSearchExpression);
  return sub_23FB2D784();
}

uint64_t sub_23F8F59BC()
{
  sub_23F6D3458(&qword_256EB3560, type metadata accessor for TranscriptProtoSearchExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoSearchExpression);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8F5A00()
{
  sub_23F6D3458(&qword_256EB3560, type metadata accessor for TranscriptProtoSearchExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoSearchExpression);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoPickOneExpression.protoMessageName.getter()
{
  return sub_23F6D3738(28);
}

uint64_t sub_23F8F5A6C()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoPickOneExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1068, (uint64_t)&unk_256EB1570, a1);
}

void TranscriptProtoPickOneExpression.decodeMessage<A>(decoder:)()
{
  sub_23F913C48();
}

void TranscriptProtoPickOneExpression.traverse<A>(visitor:)()
{
  uint64_t v0;

  sub_23F923668();
  sub_23F92351C();
  if (!v0)
  {
    type metadata accessor for TranscriptProtoPickOneExpression(0);
    sub_23F923428();
  }
  sub_23F6D3674();
}

void static TranscriptProtoPickOneExpression.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[6];

  sub_23F6B50E8();
  v5 = v4;
  v31[0] = sub_23F6B53A4();
  v31[5] = *(_QWORD *)(v31[0] - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v31[0]);
  MEMORY[0x24BDAC7A8](v8);
  v31[2] = (uint64_t)v31 - v9;
  sub_23F923344();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B59E0();
  v11 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6D3A70();
  v16 = MEMORY[0x24BDAC7A8](v15);
  sub_23F923124(v16, v17, v18, v19, v20, v21, v22, v23, v31[0]);
  v31[3] = v5;
  sub_23F923164(v5, v0);
  v24 = v1 + *(int *)(v11 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v24);
  v25 = sub_23F9230E4(v1);
  if (v28)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v27 = sub_23F9230E4(v24);
    if (v28)
    {
      sub_23F6D378C(v27, &qword_256EA25E0);
LABEL_11:
      v30 = type metadata accessor for TranscriptProtoPickOneExpression(0);
      sub_23F6D3794(v30);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v25, v26, &qword_256EA25E0);
  sub_23F9230E4(v24);
  if (v28)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v29, type metadata accessor for TranscriptProtoStatementID);
LABEL_9:
    sub_23F6D378C(v27, &qword_256EA25E8);
    goto LABEL_12;
  }
  sub_23F923270();
  sub_23F9238E8();
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v24 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoPickOneExpression.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoPickOneExpression, &qword_256EB23E0, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickOneExpression);
}

unint64_t sub_23F8F5D78()
{
  static TranscriptProtoPickOneExpression.protoMessageName.getter();
  return 0xD00000000000001CLL;
}

void sub_23F8F5D9C()
{
  TranscriptProtoPickOneExpression.traverse<A>(visitor:)();
}

uint64_t sub_23F8F5DB0()
{
  sub_23F6D3458(&qword_256EB3D98, type metadata accessor for TranscriptProtoPickOneExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickOneExpression);
  return sub_23FB2D784();
}

uint64_t sub_23F8F5E04()
{
  sub_23F6D3458(&qword_256EB3578, type metadata accessor for TranscriptProtoPickOneExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickOneExpression);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8F5E48()
{
  sub_23F6D3458(&qword_256EB3578, type metadata accessor for TranscriptProtoPickOneExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickOneExpression);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoResolveToolExpression.protoMessageName.getter()
{
  return sub_23F6D3738(32);
}

uint64_t sub_23F8F5EB4()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoResolveToolExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1070, (uint64_t)&unk_256EB1588, a1);
}

void TranscriptProtoResolveToolExpression.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F9062A8(a1, a2);
}

void TranscriptProtoResolveToolExpression.traverse<A>(visitor:)()
{
  sub_23F913080();
}

void static TranscriptProtoResolveToolExpression.== infix(_:_:)()
{
  sub_23F89AB14();
}

uint64_t TranscriptProtoResolveToolExpression.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoResolveToolExpression, &qword_256EB23E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoResolveToolExpression);
}

unint64_t sub_23F8F5F58()
{
  static TranscriptProtoResolveToolExpression.protoMessageName.getter();
  return 0xD000000000000020;
}

void sub_23F8F5F7C()
{
  TranscriptProtoResolveToolExpression.traverse<A>(visitor:)();
}

uint64_t sub_23F8F5F90()
{
  sub_23F6D3458(&qword_256EB3D90, type metadata accessor for TranscriptProtoResolveToolExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoResolveToolExpression);
  return sub_23FB2D784();
}

uint64_t sub_23F8F5FE4()
{
  sub_23F6D3458(&qword_256EB3590, type metadata accessor for TranscriptProtoResolveToolExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoResolveToolExpression);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8F6028()
{
  sub_23F6D3458(&qword_256EB3590, type metadata accessor for TranscriptProtoResolveToolExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoResolveToolExpression);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoUndoExpression.protoMessageName.getter()
{
  return sub_23F6D3738(25);
}

uint64_t sub_23F8F6094()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoUndoExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1078, (uint64_t)&unk_256EB15A0, a1);
}

void TranscriptProtoUndoExpression.decodeMessage<A>(decoder:)()
{
  sub_23F913C48();
}

void TranscriptProtoUndoExpression.traverse<A>(visitor:)()
{
  uint64_t v0;

  sub_23F923668();
  sub_23F92351C();
  if (!v0)
  {
    type metadata accessor for TranscriptProtoUndoExpression(0);
    sub_23F923428();
  }
  sub_23F6D3674();
}

void static TranscriptProtoUndoExpression.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[6];

  sub_23F6B50E8();
  v5 = v4;
  v31[0] = sub_23F6B53A4();
  v31[5] = *(_QWORD *)(v31[0] - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v31[0]);
  MEMORY[0x24BDAC7A8](v8);
  v31[2] = (uint64_t)v31 - v9;
  sub_23F923344();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B59E0();
  v11 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6D3A70();
  v16 = MEMORY[0x24BDAC7A8](v15);
  sub_23F923124(v16, v17, v18, v19, v20, v21, v22, v23, v31[0]);
  v31[3] = v5;
  sub_23F923164(v5, v0);
  v24 = v1 + *(int *)(v11 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v24);
  v25 = sub_23F9230E4(v1);
  if (v28)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v27 = sub_23F9230E4(v24);
    if (v28)
    {
      sub_23F6D378C(v27, &qword_256EA25E0);
LABEL_11:
      v30 = type metadata accessor for TranscriptProtoUndoExpression(0);
      sub_23F6D3794(v30);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v25, v26, &qword_256EA25E0);
  sub_23F9230E4(v24);
  if (v28)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v29, type metadata accessor for TranscriptProtoStatementID);
LABEL_9:
    sub_23F6D378C(v27, &qword_256EA25E8);
    goto LABEL_12;
  }
  sub_23F923270();
  sub_23F9238E8();
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v24 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoUndoExpression.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoUndoExpression, &qword_256EB23F0, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoExpression);
}

unint64_t sub_23F8F63A0()
{
  static TranscriptProtoUndoExpression.protoMessageName.getter();
  return 0xD000000000000019;
}

void sub_23F8F63C4()
{
  TranscriptProtoUndoExpression.traverse<A>(visitor:)();
}

uint64_t sub_23F8F63D8()
{
  sub_23F6D3458(&qword_256EB3D88, type metadata accessor for TranscriptProtoUndoExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoExpression);
  return sub_23FB2D784();
}

uint64_t sub_23F8F642C()
{
  sub_23F6D3458(&qword_256EB35A8, type metadata accessor for TranscriptProtoUndoExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoExpression);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8F6470()
{
  sub_23F6D3458(&qword_256EB35A8, type metadata accessor for TranscriptProtoUndoExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoExpression);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoRejectExpression.protoMessageName.getter()
{
  return sub_23F6D3738(27);
}

uint64_t sub_23F8F64DC()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoRejectExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1080, (uint64_t)&unk_256EB15B8, a1);
}

void TranscriptProtoRejectExpression.decodeMessage<A>(decoder:)()
{
  sub_23F913C48();
}

void TranscriptProtoRejectExpression.traverse<A>(visitor:)()
{
  uint64_t v0;

  sub_23F923668();
  sub_23F92351C();
  if (!v0)
  {
    type metadata accessor for TranscriptProtoRejectExpression(0);
    sub_23F923428();
  }
  sub_23F6D3674();
}

void static TranscriptProtoRejectExpression.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[6];

  sub_23F6B50E8();
  v5 = v4;
  v31[0] = sub_23F6B53A4();
  v31[5] = *(_QWORD *)(v31[0] - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v31[0]);
  MEMORY[0x24BDAC7A8](v8);
  v31[2] = (uint64_t)v31 - v9;
  sub_23F923344();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B59E0();
  v11 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6D3A70();
  v16 = MEMORY[0x24BDAC7A8](v15);
  sub_23F923124(v16, v17, v18, v19, v20, v21, v22, v23, v31[0]);
  v31[3] = v5;
  sub_23F923164(v5, v0);
  v24 = v1 + *(int *)(v11 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v24);
  v25 = sub_23F9230E4(v1);
  if (v28)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v27 = sub_23F9230E4(v24);
    if (v28)
    {
      sub_23F6D378C(v27, &qword_256EA25E0);
LABEL_11:
      v30 = type metadata accessor for TranscriptProtoRejectExpression(0);
      sub_23F6D3794(v30);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v25, v26, &qword_256EA25E0);
  sub_23F9230E4(v24);
  if (v28)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v29, type metadata accessor for TranscriptProtoStatementID);
LABEL_9:
    sub_23F6D378C(v27, &qword_256EA25E8);
    goto LABEL_12;
  }
  sub_23F923270();
  sub_23F9238E8();
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v24 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoRejectExpression.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoRejectExpression, &qword_256EB23F8, (uint64_t)&protocol conformance descriptor for TranscriptProtoRejectExpression);
}

unint64_t sub_23F8F67E8()
{
  static TranscriptProtoRejectExpression.protoMessageName.getter();
  return 0xD00000000000001BLL;
}

void sub_23F8F680C()
{
  TranscriptProtoRejectExpression.traverse<A>(visitor:)();
}

uint64_t sub_23F8F6820()
{
  sub_23F6D3458(&qword_256EB3D80, type metadata accessor for TranscriptProtoRejectExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoRejectExpression);
  return sub_23FB2D784();
}

uint64_t sub_23F8F6874()
{
  sub_23F6D3458(&qword_256EB35C0, type metadata accessor for TranscriptProtoRejectExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoRejectExpression);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8F68B8()
{
  sub_23F6D3458(&qword_256EB35C0, type metadata accessor for TranscriptProtoRejectExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoRejectExpression);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoCancelExpression.protoMessageName.getter()
{
  return sub_23F6D3738(27);
}

uint64_t sub_23F8F6924()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoCancelExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1088, (uint64_t)&unk_256EB15D0, a1);
}

void TranscriptProtoCancelExpression.decodeMessage<A>(decoder:)()
{
  sub_23F913C48();
}

void TranscriptProtoCancelExpression.traverse<A>(visitor:)()
{
  uint64_t v0;

  sub_23F923668();
  sub_23F92351C();
  if (!v0)
  {
    type metadata accessor for TranscriptProtoCancelExpression(0);
    sub_23F923428();
  }
  sub_23F6D3674();
}

void static TranscriptProtoCancelExpression.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[6];

  sub_23F6B50E8();
  v5 = v4;
  v31[0] = sub_23F6B53A4();
  v31[5] = *(_QWORD *)(v31[0] - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v31[0]);
  MEMORY[0x24BDAC7A8](v8);
  v31[2] = (uint64_t)v31 - v9;
  sub_23F923344();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B59E0();
  v11 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6D3A70();
  v16 = MEMORY[0x24BDAC7A8](v15);
  sub_23F923124(v16, v17, v18, v19, v20, v21, v22, v23, v31[0]);
  v31[3] = v5;
  sub_23F923164(v5, v0);
  v24 = v1 + *(int *)(v11 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v24);
  v25 = sub_23F9230E4(v1);
  if (v28)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v27 = sub_23F9230E4(v24);
    if (v28)
    {
      sub_23F6D378C(v27, &qword_256EA25E0);
LABEL_11:
      v30 = type metadata accessor for TranscriptProtoCancelExpression(0);
      sub_23F6D3794(v30);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v25, v26, &qword_256EA25E0);
  sub_23F9230E4(v24);
  if (v28)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v29, type metadata accessor for TranscriptProtoStatementID);
LABEL_9:
    sub_23F6D378C(v27, &qword_256EA25E8);
    goto LABEL_12;
  }
  sub_23F923270();
  sub_23F9238E8();
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v24 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoCancelExpression.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoCancelExpression, &qword_256EB2400, (uint64_t)&protocol conformance descriptor for TranscriptProtoCancelExpression);
}

unint64_t sub_23F8F6C30()
{
  static TranscriptProtoCancelExpression.protoMessageName.getter();
  return 0xD00000000000001BLL;
}

void sub_23F8F6C54()
{
  TranscriptProtoCancelExpression.traverse<A>(visitor:)();
}

uint64_t sub_23F8F6C68()
{
  sub_23F6D3458(&qword_256EB3D78, type metadata accessor for TranscriptProtoCancelExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoCancelExpression);
  return sub_23FB2D784();
}

uint64_t sub_23F8F6CBC()
{
  sub_23F6D3458(&qword_256EB35D8, type metadata accessor for TranscriptProtoCancelExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoCancelExpression);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8F6D00()
{
  sub_23F6D3458(&qword_256EB35D8, type metadata accessor for TranscriptProtoCancelExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoCancelExpression);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoNoMatchingToolExpression.protoMessageName.getter()
{
  return sub_23F6D3738(35);
}

uint64_t sub_23F8F6D6C(uint64_t a1)
{
  return sub_23F9187D8(a1, qword_256EB15E8);
}

uint64_t static TranscriptProtoNoMatchingToolExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1090, (uint64_t)qword_256EB15E8, a1);
}

uint64_t TranscriptProtoNoMatchingToolExpression.decodeMessage<A>(decoder:)()
{
  return sub_23F918844();
}

uint64_t TranscriptProtoNoMatchingToolExpression.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoNoMatchingToolExpression, &qword_256EB2408, (uint64_t)&protocol conformance descriptor for TranscriptProtoNoMatchingToolExpression);
}

unint64_t sub_23F8F6DCC()
{
  static TranscriptProtoNoMatchingToolExpression.protoMessageName.getter();
  return 0xD000000000000023;
}

uint64_t sub_23F8F6DF0()
{
  sub_23F6D3458(&qword_256EB3D70, type metadata accessor for TranscriptProtoNoMatchingToolExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoNoMatchingToolExpression);
  return sub_23FB2D784();
}

uint64_t sub_23F8F6E44()
{
  sub_23F6D3458(&qword_256EB35F0, type metadata accessor for TranscriptProtoNoMatchingToolExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoNoMatchingToolExpression);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8F6E88()
{
  sub_23F6D3458(&qword_256EB35F0, type metadata accessor for TranscriptProtoNoMatchingToolExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoNoMatchingToolExpression);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoContinuePlanningExpression.protoMessageName.getter()
{
  return sub_23F6D3738(37);
}

uint64_t sub_23F8F6EF0(uint64_t a1)
{
  return sub_23F9187D8(a1, qword_256EB1600);
}

uint64_t static TranscriptProtoContinuePlanningExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1098, (uint64_t)qword_256EB1600, a1);
}

uint64_t TranscriptProtoContinuePlanningExpression.decodeMessage<A>(decoder:)()
{
  return sub_23F918844();
}

uint64_t TranscriptProtoContinuePlanningExpression.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoContinuePlanningExpression, &qword_256EB2410, (uint64_t)&protocol conformance descriptor for TranscriptProtoContinuePlanningExpression);
}

unint64_t sub_23F8F6F50()
{
  static TranscriptProtoContinuePlanningExpression.protoMessageName.getter();
  return 0xD000000000000025;
}

uint64_t sub_23F8F6F74()
{
  sub_23F6D3458(&qword_256EB3D68, type metadata accessor for TranscriptProtoContinuePlanningExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoContinuePlanningExpression);
  return sub_23FB2D784();
}

uint64_t sub_23F8F6FC8()
{
  sub_23F6D3458(&qword_256EB3608, type metadata accessor for TranscriptProtoContinuePlanningExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoContinuePlanningExpression);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8F700C()
{
  sub_23F6D3458(&qword_256EB3608, type metadata accessor for TranscriptProtoContinuePlanningExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoContinuePlanningExpression);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoEndOfPlanExpression.protoMessageName.getter()
{
  return sub_23F6D3738(30);
}

uint64_t sub_23F8F7074(uint64_t a1)
{
  return sub_23F9187D8(a1, qword_256EB1618);
}

uint64_t static TranscriptProtoEndOfPlanExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA10A0, (uint64_t)qword_256EB1618, a1);
}

uint64_t TranscriptProtoEndOfPlanExpression.decodeMessage<A>(decoder:)()
{
  return sub_23F918844();
}

uint64_t TranscriptProtoEndOfPlanExpression.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoEndOfPlanExpression, &qword_256EB2418, (uint64_t)&protocol conformance descriptor for TranscriptProtoEndOfPlanExpression);
}

unint64_t sub_23F8F70D4()
{
  static TranscriptProtoEndOfPlanExpression.protoMessageName.getter();
  return 0xD00000000000001ELL;
}

uint64_t sub_23F8F70F8()
{
  sub_23F6D3458(&qword_256EB3D60, type metadata accessor for TranscriptProtoEndOfPlanExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoEndOfPlanExpression);
  return sub_23FB2D784();
}

uint64_t sub_23F8F714C()
{
  sub_23F6D3458(&qword_256EB3620, type metadata accessor for TranscriptProtoEndOfPlanExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoEndOfPlanExpression);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8F7190()
{
  sub_23F6D3458(&qword_256EB3620, type metadata accessor for TranscriptProtoEndOfPlanExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoEndOfPlanExpression);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoGetMentionedAppsExpression.protoMessageName.getter()
{
  return sub_23F6D3738(37);
}

uint64_t sub_23F8F71F8(uint64_t a1)
{
  return sub_23F9187D8(a1, qword_256EB1630);
}

uint64_t static TranscriptProtoGetMentionedAppsExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA10A8, (uint64_t)qword_256EB1630, a1);
}

uint64_t TranscriptProtoGetMentionedAppsExpression.decodeMessage<A>(decoder:)()
{
  return sub_23F918844();
}

uint64_t TranscriptProtoGetMentionedAppsExpression.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoGetMentionedAppsExpression, &qword_256EB2420, (uint64_t)&protocol conformance descriptor for TranscriptProtoGetMentionedAppsExpression);
}

unint64_t sub_23F8F7258()
{
  static TranscriptProtoGetMentionedAppsExpression.protoMessageName.getter();
  return 0xD000000000000025;
}

uint64_t sub_23F8F727C()
{
  sub_23F6D3458(&qword_256EB3D58, type metadata accessor for TranscriptProtoGetMentionedAppsExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoGetMentionedAppsExpression);
  return sub_23FB2D784();
}

uint64_t sub_23F8F72D0()
{
  sub_23F6D3458(&qword_256EB3638, type metadata accessor for TranscriptProtoGetMentionedAppsExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoGetMentionedAppsExpression);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8F7314()
{
  sub_23F6D3458(&qword_256EB3638, type metadata accessor for TranscriptProtoGetMentionedAppsExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoGetMentionedAppsExpression);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoOpenExpression.protoMessageName.getter()
{
  return sub_23F6D3738(25);
}

uint64_t sub_23F8F737C()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoOpenExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA10B0, (uint64_t)&unk_256EB1648, a1);
}

void TranscriptProtoOpenExpression.decodeMessage<A>(decoder:)()
{
  sub_23F913C48();
}

void TranscriptProtoOpenExpression.traverse<A>(visitor:)()
{
  uint64_t v0;

  sub_23F923668();
  sub_23F92351C();
  if (!v0)
  {
    type metadata accessor for TranscriptProtoOpenExpression(0);
    sub_23F923428();
  }
  sub_23F6D3674();
}

void static TranscriptProtoOpenExpression.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[6];

  sub_23F6B50E8();
  v5 = v4;
  v31[0] = sub_23F6B53A4();
  v31[5] = *(_QWORD *)(v31[0] - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v31[0]);
  MEMORY[0x24BDAC7A8](v8);
  v31[2] = (uint64_t)v31 - v9;
  sub_23F923344();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F6B59E0();
  v11 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6D3A70();
  v16 = MEMORY[0x24BDAC7A8](v15);
  sub_23F923124(v16, v17, v18, v19, v20, v21, v22, v23, v31[0]);
  v31[3] = v5;
  sub_23F923164(v5, v0);
  v24 = v1 + *(int *)(v11 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v24);
  v25 = sub_23F9230E4(v1);
  if (v28)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v27 = sub_23F9230E4(v24);
    if (v28)
    {
      sub_23F6D378C(v27, &qword_256EA25E0);
LABEL_11:
      v30 = type metadata accessor for TranscriptProtoOpenExpression(0);
      sub_23F6D3794(v30);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v25, v26, &qword_256EA25E0);
  sub_23F9230E4(v24);
  if (v28)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v29, type metadata accessor for TranscriptProtoStatementID);
LABEL_9:
    sub_23F6D378C(v27, &qword_256EA25E8);
    goto LABEL_12;
  }
  sub_23F923270();
  sub_23F9238E8();
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v24 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoOpenExpression.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoOpenExpression, &qword_256EB2428, (uint64_t)&protocol conformance descriptor for TranscriptProtoOpenExpression);
}

unint64_t sub_23F8F7688()
{
  static TranscriptProtoOpenExpression.protoMessageName.getter();
  return 0xD000000000000019;
}

void sub_23F8F76AC()
{
  TranscriptProtoOpenExpression.traverse<A>(visitor:)();
}

uint64_t sub_23F8F76C0()
{
  sub_23F6D3458(&qword_256EB3D50, type metadata accessor for TranscriptProtoOpenExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoOpenExpression);
  return sub_23FB2D784();
}

uint64_t sub_23F8F7714()
{
  sub_23F6D3458(&qword_256EB3650, type metadata accessor for TranscriptProtoOpenExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoOpenExpression);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8F7758()
{
  sub_23F6D3458(&qword_256EB3650, type metadata accessor for TranscriptProtoOpenExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoOpenExpression);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTProgram.protoMessageName.getter()
{
  return sub_23F6D3738(21);
}

uint64_t sub_23F8F77C4()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoASTProgram._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA10B8, (uint64_t)&unk_256EB1660, a1);
}

void TranscriptProtoASTProgram.decodeMessage<A>(decoder:)()
{
  sub_23F913C48();
}

void TranscriptProtoASTProgram.traverse<A>(visitor:)()
{
  sub_23F8B4D24();
}

void static TranscriptProtoASTProgram.== infix(_:_:)()
{
  sub_23F89AB14();
}

uint64_t TranscriptProtoASTProgram.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTProgram, &qword_256EB2438, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTProgram);
}

unint64_t sub_23F8F7898()
{
  static TranscriptProtoASTProgram.protoMessageName.getter();
  return 0xD000000000000015;
}

void sub_23F8F78BC()
{
  TranscriptProtoASTProgram.decodeMessage<A>(decoder:)();
}

void sub_23F8F78D0()
{
  TranscriptProtoASTProgram.traverse<A>(visitor:)();
}

uint64_t sub_23F8F78E4()
{
  sub_23F6D3458(&qword_256EB3D48, type metadata accessor for TranscriptProtoASTProgram, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTProgram);
  return sub_23FB2D784();
}

uint64_t sub_23F8F7938()
{
  sub_23F6D3458(&qword_256EB3668, type metadata accessor for TranscriptProtoASTProgram, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTProgram);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8F797C()
{
  sub_23F6D3458(&qword_256EB3668, type metadata accessor for TranscriptProtoASTProgram, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTProgram);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTStmt.protoMessageName.getter()
{
  return sub_23F6D3738(18);
}

uint64_t sub_23F8F79E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1678);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1678);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "expr";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "if";
  *((_QWORD *)v11 + 1) = 2;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "for";
  *((_QWORD *)v13 + 1) = 3;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoASTStmt._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA10C0, (uint64_t)qword_256EB1678, a1);
}

void TranscriptProtoASTStmt.decodeMessage<A>(decoder:)()
{
  sub_23F8BEBD0();
}

void sub_23F8F7BB0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;

  v28 = a4;
  v7 = type metadata accessor for TranscriptProtoASTExpr(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v26 = (uint64_t)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v25 - v10;
  v12 = sub_23F6916B8(&qword_256EA25A0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v25 - v16;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v25 - v16, 1, 1, v7);
  v18 = *a1;
  v27 = *a1 & 0xF000000000000007;
  if (!(v18 >> 62) && v27 != 0xF000000000000007)
  {
    swift_retain();
    sub_23F6B4F84((uint64_t)v17, &qword_256EA25A0);
    v19 = swift_projectBox();
    sub_23F7E7704(v19, (uint64_t)v11, type metadata accessor for TranscriptProtoASTExpr);
    sub_23F6B4E2C(v18);
    sub_23F7E76D0((uint64_t)v11, (uint64_t)v17, type metadata accessor for TranscriptProtoASTExpr);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v17, 0, 1, v7);
  }
  sub_23F6D3458(&qword_256EB2480, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
  sub_23FB2D8B0();
  if (v4)
  {
    v20 = (uint64_t)v17;
LABEL_8:
    sub_23F6B4F84(v20, &qword_256EA25A0);
    return;
  }
  v25[1] = a3;
  sub_23F7A1EDC((uint64_t)v17, (uint64_t)v15, &qword_256EA25A0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, v7) == 1)
  {
    sub_23F6B4F84((uint64_t)v17, &qword_256EA25A0);
    v20 = (uint64_t)v15;
    goto LABEL_8;
  }
  v21 = v26;
  sub_23F7E76D0((uint64_t)v15, v26, type metadata accessor for TranscriptProtoASTExpr);
  if (v27 != 0xF000000000000007)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v17, &qword_256EA25A0);
  v22 = swift_allocBox();
  sub_23F7E76D0(v21, v23, type metadata accessor for TranscriptProtoASTExpr);
  v24 = *a1;
  *a1 = v22;
  sub_23F6B4E2C(v24);
}

void sub_23F8F7E84(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = type metadata accessor for TranscriptProtoASTIfStmt(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v27 = (uint64_t)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v25 - v7;
  v9 = sub_23F6916B8(&qword_256EB43A8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v25 - v13;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v25 - v13, 1, 1, v4);
  v15 = *a1;
  v16 = *a1 & 0xC000000000000000;
  v26 = *a1 & 0xF000000000000007;
  if (v26 != 0xF000000000000007 && v16 == 0x4000000000000000)
  {
    v25[1] = a2;
    swift_retain();
    sub_23F6B4F84((uint64_t)v14, &qword_256EB43A8);
    v18 = swift_projectBox();
    sub_23F7E7704(v18, (uint64_t)v8, type metadata accessor for TranscriptProtoASTIfStmt);
    sub_23F6B4E2C(v15);
    sub_23F7E76D0((uint64_t)v8, (uint64_t)v14, type metadata accessor for TranscriptProtoASTIfStmt);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v14, 0, 1, v4);
  }
  sub_23F6D3458(&qword_256EB3690, type metadata accessor for TranscriptProtoASTIfStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTIfStmt);
  v19 = v28;
  sub_23FB2D8B0();
  if (v19)
  {
    v20 = (uint64_t)v14;
LABEL_11:
    sub_23F6B4F84(v20, &qword_256EB43A8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v14, (uint64_t)v12, &qword_256EB43A8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v4) == 1)
  {
    sub_23F6B4F84((uint64_t)v14, &qword_256EB43A8);
    v20 = (uint64_t)v12;
    goto LABEL_11;
  }
  v21 = v27;
  sub_23F7E76D0((uint64_t)v12, v27, type metadata accessor for TranscriptProtoASTIfStmt);
  if (v26 != 0xF000000000000007)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v14, &qword_256EB43A8);
  v22 = swift_allocBox();
  sub_23F7E76D0(v21, v23, type metadata accessor for TranscriptProtoASTIfStmt);
  v24 = *a1;
  *a1 = v22 | 0x4000000000000000;
  sub_23F6B4E2C(v24);
}

void sub_23F8F8170(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = type metadata accessor for TranscriptProtoASTForInStmt(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v27 = (uint64_t)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v25 - v7;
  v9 = sub_23F6916B8(&qword_256EB43B0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v25 - v13;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v25 - v13, 1, 1, v4);
  v15 = *a1;
  v16 = *a1 & 0xC000000000000000;
  v26 = *a1 & 0xF000000000000007;
  if (v26 != 0xF000000000000007 && v16 == 0x8000000000000000)
  {
    v25[1] = a2;
    swift_retain();
    sub_23F6B4F84((uint64_t)v14, &qword_256EB43B0);
    v18 = swift_projectBox();
    sub_23F7E7704(v18, (uint64_t)v8, type metadata accessor for TranscriptProtoASTForInStmt);
    sub_23F6B4E2C(v15);
    sub_23F7E76D0((uint64_t)v8, (uint64_t)v14, type metadata accessor for TranscriptProtoASTForInStmt);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v14, 0, 1, v4);
  }
  sub_23F6D3458(&qword_256EB36A8, type metadata accessor for TranscriptProtoASTForInStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTForInStmt);
  v19 = v28;
  sub_23FB2D8B0();
  if (v19)
  {
    v20 = (uint64_t)v14;
LABEL_11:
    sub_23F6B4F84(v20, &qword_256EB43B0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v14, (uint64_t)v12, &qword_256EB43B0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v4) == 1)
  {
    sub_23F6B4F84((uint64_t)v14, &qword_256EB43B0);
    v20 = (uint64_t)v12;
    goto LABEL_11;
  }
  v21 = v27;
  sub_23F7E76D0((uint64_t)v12, v27, type metadata accessor for TranscriptProtoASTForInStmt);
  if (v26 != 0xF000000000000007)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v14, &qword_256EB43B0);
  v22 = swift_allocBox();
  sub_23F7E76D0(v21, v23, type metadata accessor for TranscriptProtoASTForInStmt);
  v24 = *a1;
  *a1 = v22 | 0x8000000000000000;
  sub_23F6B4E2C(v24);
}

void TranscriptProtoASTStmt.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;

  sub_23F923768();
  if ((~*v0 & 0xF000000000000007) == 0)
    goto LABEL_8;
  v2 = (_QWORD *)sub_23F92371C();
  v4 = v3 >> 62;
  if ((_DWORD)v4)
  {
    if ((_DWORD)v4 == 1)
      sub_23F8F85F0(v2);
    else
      sub_23F8F86FC(v2);
  }
  else
  {
    sub_23F8F84EC(v2);
  }
  if (!v1)
  {
LABEL_8:
    type metadata accessor for TranscriptProtoASTStmt(0);
    sub_23F6D3A68();
  }
  sub_23F6D377C();
}

void sub_23F8F84EC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for TranscriptProtoASTExpr(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 >> 62)
    v5 = 1;
  else
    v5 = (*a1 & 0xF000000000000007) == 0xF000000000000007;
  if (v5)
  {
    __break(1u);
  }
  else
  {
    v6 = swift_projectBox();
    sub_23F7E7704(v6, (uint64_t)v4, type metadata accessor for TranscriptProtoASTExpr);
    sub_23F6D3458(&qword_256EB2480, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoASTExpr);
  }
}

void sub_23F8F85F0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for TranscriptProtoASTIfStmt(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && (*a1 & 0xC000000000000000) == 0x4000000000000000)
  {
    v6 = swift_projectBox();
    sub_23F7E7704(v6, (uint64_t)v4, type metadata accessor for TranscriptProtoASTIfStmt);
    sub_23F6D3458(&qword_256EB3690, type metadata accessor for TranscriptProtoASTIfStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTIfStmt);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoASTIfStmt);
  }
  else
  {
    __break(1u);
  }
}

void sub_23F8F86FC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for TranscriptProtoASTForInStmt(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && (*a1 & 0xC000000000000000) == 0x8000000000000000)
  {
    v6 = swift_projectBox();
    sub_23F7E7704(v6, (uint64_t)v4, type metadata accessor for TranscriptProtoASTForInStmt);
    sub_23F6D3458(&qword_256EB36A8, type metadata accessor for TranscriptProtoASTForInStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTForInStmt);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoASTForInStmt);
  }
  else
  {
    __break(1u);
  }
}

void static TranscriptProtoASTStmt.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  uint64_t v11;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F923590();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F92428C();
  if (!v8)
  {
    if ((v7 & ~v4) == 0)
    {
      sub_23F6B4E14(v3);
      goto LABEL_7;
    }
    sub_23F6B4E14(v3);
    swift_retain();
    static TranscriptProtoAststmtEnum.== infix(_:_:)();
    v10 = v9;
    swift_release();
    sub_23F6B4E2C(v3);
    if ((v10 & 1) == 0)
      goto LABEL_10;
LABEL_9:
    v11 = type metadata accessor for TranscriptProtoASTStmt(0);
    sub_23F923308(v1, v2 + *(int *)(v11 + 20));
    sub_23F6D36AC(*(int *)(v11 + 20));
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F6D3600();
    sub_23F6D3BD0(v0);
    sub_23F6D3BD0(v1);
    goto LABEL_10;
  }
  if ((v7 & ~v4) == 0)
    goto LABEL_9;
LABEL_7:
  sub_23F6B4E14(v4);
  sub_23F6B4E2C(v3);
  sub_23F6B4E2C(v4);
LABEL_10:
  sub_23F923E3C();
  sub_23F6B69E0();
}

uint64_t TranscriptProtoASTStmt.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTStmt, &qword_256EB2440, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTStmt);
}

unint64_t sub_23F8F8958()
{
  static TranscriptProtoASTStmt.protoMessageName.getter();
  return 0xD000000000000012;
}

void sub_23F8F897C()
{
  TranscriptProtoASTStmt.decodeMessage<A>(decoder:)();
}

void sub_23F8F8990()
{
  TranscriptProtoASTStmt.traverse<A>(visitor:)();
}

uint64_t sub_23F8F89A4()
{
  sub_23F6D3458(&qword_256EB3D40, type metadata accessor for TranscriptProtoASTStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTStmt);
  return sub_23FB2D784();
}

uint64_t sub_23F8F89F8()
{
  sub_23F6D3458(&qword_256EB2430, type metadata accessor for TranscriptProtoASTStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTStmt);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8F8A3C()
{
  sub_23F6D3458(&qword_256EB2430, type metadata accessor for TranscriptProtoASTStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTStmt);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTIfStmt.protoMessageName.getter()
{
  return sub_23F6D3738(20);
}

uint64_t sub_23F8F8AA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1690);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1690);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "condition";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "thenBlock";
  *((_QWORD *)v11 + 1) = 9;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "elseBlock";
  *((_QWORD *)v13 + 1) = 9;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoASTIfStmt._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA10C8, (uint64_t)qword_256EB1690, a1);
}

void TranscriptProtoASTIfStmt.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 3:
          sub_23F923390();
          break;
        case 2:
          sub_23F92320C();
          break;
        case 1:
          sub_23F6D3598();
          sub_23F6CEB4C();
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoASTIfStmt.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F923460();
  sub_23F9234C0();
  if (!v0)
  {
    sub_23F9231F0();
    sub_23F8F8DA0(v1);
    sub_23F9231F0();
    sub_23F8F8F10(v2);
    type metadata accessor for TranscriptProtoASTIfStmt(0);
    sub_23F6D37BC();
  }
  sub_23F6D3674();
}

void sub_23F8F8DA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA84F8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTIfStmt(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA84F8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA84F8);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTBlockStmt);
    sub_23F6D3458(&qword_256EB36C0, type metadata accessor for TranscriptProtoASTBlockStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTBlockStmt);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTBlockStmt);
  }
}

void sub_23F8F8F10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA84F8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTIfStmt(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_256EA84F8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA84F8);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTBlockStmt);
    sub_23F6D3458(&qword_256EB36C0, type metadata accessor for TranscriptProtoASTBlockStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTBlockStmt);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTBlockStmt);
  }
}

void static TranscriptProtoASTIfStmt.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  char v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  char v94;
  _QWORD *v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;

  sub_23F6B50E8();
  v6 = v5;
  v8 = v7;
  v110 = sub_23F6B53A4();
  v107 = *(_QWORD *)(v110 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v106 = (uint64_t)&v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v20 = sub_23F9248E8(v12, v13, v14, v15, v16, v17, v18, v19, v103);
  v118 = type metadata accessor for TranscriptProtoASTBlockStmt(v20);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  v104 = (char *)&v103 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v23);
  v109 = (char *)&v103 - v24;
  v117 = sub_23F6916B8(&qword_256EB2448);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v25);
  v113 = (uint64_t)&v103 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v27);
  v116 = (uint64_t)&v103 - v28;
  sub_23F6916B8(&qword_256EA84F8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v29);
  v108 = (char *)&v103 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v31);
  v111 = (uint64_t)&v103 - v32;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v33);
  v112 = (uint64_t)&v103 - v34;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v35);
  v114 = (char *)&v103 - v36;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v37);
  v121 = (uint64_t)&v103 - v38;
  sub_23F6B5664();
  v40 = MEMORY[0x24BDAC7A8](v39);
  v48 = sub_23F923890(v40, v41, v42, v43, v44, v45, v46, v47, v103);
  v49 = type metadata accessor for TranscriptProtoASTExpr(v48);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v50);
  sub_23F6B5298();
  v51 = sub_23F6916B8(&qword_256EA25A8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v52);
  sub_23F6B59F8();
  sub_23F6916B8(&qword_256EA25A0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v53);
  sub_23F9233F4();
  MEMORY[0x24BDAC7A8](v54);
  sub_23F6D3A70();
  MEMORY[0x24BDAC7A8](v55);
  sub_23F77E490();
  v119 = v8;
  sub_23F923848(v8, v4);
  v120 = v6;
  v56 = sub_23F6B6098();
  sub_23F923848(v56, v57);
  v58 = v1 + *(int *)(v51 + 48);
  sub_23F923848(v4, v1);
  sub_23F923848(v3, v58);
  sub_23F6B5164(v1, 1, v49);
  if (v61)
  {
    sub_23F6B64F4(v3);
    sub_23F6B64F4(v4);
    v60 = sub_23F6B5164(v58, 1, v49);
    if (v61)
    {
      sub_23F77DC10(v60, &qword_256EA25A0);
      goto LABEL_11;
    }
LABEL_9:
    v63 = &qword_256EA25A8;
    v64 = v1;
LABEL_38:
    sub_23F6B4F84(v64, v63);
    goto LABEL_39;
  }
  sub_23F924698(v1, v59, &qword_256EA25A0);
  sub_23F6B5164(v58, 1, v49);
  if (v61)
  {
    sub_23F6B64F4(v3);
    sub_23F6B64F4(v4);
    sub_23F924AF4(v62, type metadata accessor for TranscriptProtoASTExpr);
    goto LABEL_9;
  }
  sub_23F7E76D0(v58, v0, type metadata accessor for TranscriptProtoASTExpr);
  static TranscriptProtoASTExpr.== infix(_:_:)();
  v66 = v65;
  sub_23F77E330(v0);
  sub_23F6B64F4(v3);
  sub_23F6B64F4(v4);
  sub_23F77E330(v2);
  sub_23F6B64F4(v1);
  if ((v66 & 1) == 0)
    goto LABEL_39;
LABEL_11:
  type metadata accessor for TranscriptProtoASTIfStmt(0);
  sub_23F924BA4();
  v67 = v119;
  v69 = v115;
  sub_23F923268(v119 + v68, v115);
  v71 = v120;
  v70 = v121;
  sub_23F923268(v120 + *(int *)(v4 + 20), v121);
  v73 = v116;
  v72 = v117;
  v74 = v116 + *(int *)(v117 + 48);
  sub_23F923268(v69, v116);
  sub_23F923268(v70, v74);
  v75 = sub_23F6B6468();
  v76 = v118;
  sub_23F6B5164(v75, v77, v118);
  if (v61)
  {
    sub_23F6D3748(v70);
    sub_23F6D3748(v69);
    v79 = sub_23F6B5164(v74, 1, v76);
    if (v61)
    {
      sub_23F6B6034(v79, &qword_256EA84F8);
      goto LABEL_16;
    }
    goto LABEL_24;
  }
  v103 = v4;
  v89 = v114;
  sub_23F923370(v73, v78, &qword_256EA84F8);
  sub_23F6B5164(v74, 1, v76);
  if (v90)
  {
    sub_23F6B64F4(v70);
    sub_23F6B64F4(v69);
    sub_23F6D3C24(v92, type metadata accessor for TranscriptProtoASTBlockStmt);
LABEL_24:
    v63 = &qword_256EB2448;
    v64 = v73;
    goto LABEL_38;
  }
  v93 = v109;
  sub_23F924AFC(v74, v91, type metadata accessor for TranscriptProtoASTBlockStmt);
  if ((sub_23F697FF4(*v89, *v93) & 1) == 0)
  {
    sub_23F6D3928((uint64_t)v93);
    sub_23F6D3748(v121);
    sub_23F6D3748(v69);
    sub_23F6D3928((uint64_t)v89);
    v64 = v73;
LABEL_37:
    v63 = &qword_256EA84F8;
    goto LABEL_38;
  }
  sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v94 = sub_23F923CF8();
  sub_23F6D38A0((uint64_t)v93);
  sub_23F6B6EF8(v121);
  sub_23F6B6EF8(v69);
  sub_23F6D38A0((uint64_t)v89);
  sub_23F6B6EF8(v73);
  v4 = v103;
  if ((v94 & 1) == 0)
    goto LABEL_39;
LABEL_16:
  v80 = v67 + *(int *)(v4 + 24);
  v81 = v4;
  v82 = v112;
  sub_23F923268(v80, v112);
  v103 = v81;
  v83 = v111;
  sub_23F923268(v71 + *(int *)(v81 + 24), v111);
  v84 = *(int *)(v72 + 48);
  v85 = v113;
  v86 = v113 + v84;
  sub_23F923268(v82, v113);
  sub_23F923268(v83, v86);
  sub_23F6B5164(v85, 1, v76);
  if (v61)
  {
    sub_23F6D3748(v83);
    sub_23F6D3748(v82);
    v88 = sub_23F6B5164(v86, 1, v76);
    if (v61)
    {
      sub_23F6D378C(v88, &qword_256EA84F8);
LABEL_35:
      v101 = v103;
      v102 = v105;
      sub_23F6D3818(v105, v67 + *(int *)(v103 + 28));
      sub_23F6D3818(v106, v71 + *(int *)(v101 + 28));
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F923230();
      sub_23F9232DC();
      sub_23F6D3874(v102);
      goto LABEL_39;
    }
    goto LABEL_31;
  }
  v95 = v108;
  sub_23F923A50(v85, v87, &qword_256EA84F8);
  sub_23F6B5164(v86, 1, v76);
  if (v96)
  {
    sub_23F6B64F4(v83);
    sub_23F6B64F4(v82);
    sub_23F6D3D20(v98, type metadata accessor for TranscriptProtoASTBlockStmt);
LABEL_31:
    v63 = &qword_256EB2448;
    v64 = v85;
    goto LABEL_38;
  }
  v99 = v104;
  sub_23F924AFC(v86, v97, type metadata accessor for TranscriptProtoASTBlockStmt);
  if ((sub_23F697FF4(*v95, *v99) & 1) == 0)
  {
    sub_23F6D3928((uint64_t)v99);
    sub_23F6D3748(v83);
    sub_23F6D3748(v82);
    sub_23F6D3928((uint64_t)v95);
    v64 = v85;
    goto LABEL_37;
  }
  sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v100 = sub_23F923CF8();
  sub_23F6D38A0((uint64_t)v99);
  sub_23F6B6EF8(v83);
  sub_23F6B6EF8(v82);
  sub_23F6D38A0((uint64_t)v95);
  sub_23F6B6EF8(v85);
  if ((v100 & 1) != 0)
    goto LABEL_35;
LABEL_39:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoASTIfStmt.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTIfStmt, &qword_256EB2450, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTIfStmt);
}

unint64_t sub_23F8F9854()
{
  static TranscriptProtoASTIfStmt.protoMessageName.getter();
  return 0xD000000000000014;
}

void sub_23F8F9878()
{
  TranscriptProtoASTIfStmt.decodeMessage<A>(decoder:)();
}

void sub_23F8F988C()
{
  TranscriptProtoASTIfStmt.traverse<A>(visitor:)();
}

uint64_t sub_23F8F98A0()
{
  sub_23F6D3458(&qword_256EB3D38, type metadata accessor for TranscriptProtoASTIfStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTIfStmt);
  return sub_23FB2D784();
}

uint64_t sub_23F8F98F4()
{
  sub_23F6D3458(&qword_256EB3690, type metadata accessor for TranscriptProtoASTIfStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTIfStmt);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8F9938()
{
  sub_23F6D3458(&qword_256EB3690, type metadata accessor for TranscriptProtoASTIfStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTIfStmt);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTForInStmt.protoMessageName.getter()
{
  return sub_23F6D3738(23);
}

uint64_t sub_23F8F99A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB16A8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB16A8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "elementIdent";
  *(_QWORD *)(v7 + 8) = 12;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "iterable";
  *((_QWORD *)v11 + 1) = 8;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "block";
  *((_QWORD *)v13 + 1) = 5;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoASTForInStmt._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA10D0, (uint64_t)qword_256EB16A8, a1);
}

void TranscriptProtoASTForInStmt.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 3:
          sub_23F6D38E0();
          sub_23F923998();
          break;
        case 2:
          sub_23F92360C();
          break;
        case 1:
          sub_23F923334();
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoASTForInStmt.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F6D36FC();
  if (!v1 || (sub_23F923258(), !v0))
  {
    v2 = sub_23F6D3D7C();
    sub_23F8F9C80(v2);
    if (!v0)
    {
      v3 = sub_23F6D3D7C();
      sub_23F8F9DF0(v3);
      type metadata accessor for TranscriptProtoASTForInStmt(0);
      sub_23F9231A8();
    }
  }
  sub_23F6D3674();
}

void sub_23F8F9C80(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTExpr(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTForInStmt(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA25A0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25A0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTExpr);
    sub_23F6D3458(&qword_256EB2480, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTExpr);
  }
}

void sub_23F8F9DF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA84F8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTForInStmt(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_256EA84F8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA84F8);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTBlockStmt);
    sub_23F6D3458(&qword_256EB36C0, type metadata accessor for TranscriptProtoASTBlockStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTBlockStmt);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTBlockStmt);
  }
}

void static TranscriptProtoASTForInStmt.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  int *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  char v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  char v76;
  uint64_t v77;
  _QWORD *v78;
  char v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  v8 = sub_23F6B53A4();
  v87 = *(_QWORD *)(v8 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v86 = (uint64_t)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v20 = sub_23F923878(v12, v13, v14, v15, v16, v17, v18, v19, v84);
  v92 = type metadata accessor for TranscriptProtoASTBlockStmt(v20);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B5404(v22, v84);
  v89 = sub_23F6916B8(&qword_256EB2448);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F70D7A4(v24, v84);
  sub_23F6916B8(&qword_256EA84F8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v25);
  v88 = (char *)&v84 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v27);
  v90 = (uint64_t)&v84 - v28;
  sub_23F6B5664();
  v30 = MEMORY[0x24BDAC7A8](v29);
  v38 = sub_23F6D38F8(v30, v31, v32, v33, v34, v35, v36, v37, v84);
  type metadata accessor for TranscriptProtoASTExpr(v38);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F6B5268();
  v40 = sub_23F6916B8(&qword_256EA25A8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F6B59E0();
  sub_23F6916B8(&qword_256EA25A0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F72E168();
  MEMORY[0x24BDAC7A8](v43);
  sub_23F6D3F60();
  MEMORY[0x24BDAC7A8](v44);
  v46 = (char *)&v84 - v45;
  v47 = *v7;
  v48 = v7[1];
  v49 = *v5;
  v50 = v5[1];
  v94 = v5;
  v51 = v47 == v49 && v48 == v50;
  if (!v51 && (sub_23F6B5280() & 1) == 0)
    goto LABEL_30;
  v84 = v8;
  v52 = (int *)type metadata accessor for TranscriptProtoASTForInStmt(0);
  sub_23F92344C((uint64_t)v7 + v52[5], (uint64_t)v46);
  sub_23F92344C((uint64_t)v94 + v52[5], v0);
  v53 = v2 + *(int *)(v40 + 48);
  v54 = sub_23F78F5B0();
  sub_23F92344C(v54, v55);
  v56 = sub_23F6B6190();
  sub_23F92344C(v56, v57);
  sub_23F9230E4(v2);
  if (v51)
  {
    sub_23F6D3C1C(v0);
    sub_23F6D3C1C((uint64_t)v46);
    v59 = sub_23F9230E4(v53);
    if (v51)
    {
      sub_23F77E3DC(v59, &qword_256EA25A0);
      goto LABEL_16;
    }
LABEL_14:
    v62 = &qword_256EA25A8;
    v63 = v2;
LABEL_29:
    sub_23F6B4F84(v63, v62);
    goto LABEL_30;
  }
  sub_23F923BFC(v2, v58, &qword_256EA25A0);
  sub_23F9230E4(v53);
  if (v60)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4((uint64_t)v46);
    sub_23F7E7834(v61, type metadata accessor for TranscriptProtoASTExpr);
    goto LABEL_14;
  }
  sub_23F923774(v53, v3);
  static TranscriptProtoASTExpr.== infix(_:_:)();
  v65 = v64;
  sub_23F77DB60(v3);
  sub_23F6D38A8(v0);
  sub_23F6D38A8((uint64_t)v46);
  sub_23F77DB60(v1);
  sub_23F6D38A8(v2);
  if ((v65 & 1) == 0)
    goto LABEL_30;
LABEL_16:
  v66 = v91;
  sub_23F923268((uint64_t)v7 + v52[6], v91);
  v67 = v90;
  sub_23F923268((uint64_t)v94 + v52[6], v90);
  v68 = v93;
  v69 = v93 + *(int *)(v89 + 48);
  sub_23F923268(v66, v93);
  sub_23F923268(v67, v69);
  v70 = sub_23F6D3CB4();
  v71 = v92;
  sub_23F6B5164(v70, v72, v92);
  if (v51)
  {
    sub_23F6D3748(v67);
    sub_23F6D3748(v66);
    v74 = sub_23F6B5164(v69, 1, v71);
    if (v51)
    {
      sub_23F6D378C(v74, &qword_256EA84F8);
LABEL_27:
      v81 = sub_23F924B10();
      sub_23F923484(v81, v82);
      v83 = v86;
      sub_23F923484(v86, (uint64_t)v94 + v52[7]);
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6B5624();
      sub_23F6D39FC(v83);
      sub_23F6D39FC(v68);
      goto LABEL_30;
    }
    goto LABEL_24;
  }
  v75 = v88;
  sub_23F923A50(v68, v73, &qword_256EA84F8);
  sub_23F6B5164(v69, 1, v71);
  if (v76)
  {
    sub_23F6B64F4(v67);
    sub_23F6B64F4(v66);
    sub_23F6D3D20(v77, type metadata accessor for TranscriptProtoASTBlockStmt);
LABEL_24:
    v62 = &qword_256EB2448;
    v63 = v68;
    goto LABEL_29;
  }
  v78 = v85;
  sub_23F7E76D0(v69, (uint64_t)v85, type metadata accessor for TranscriptProtoASTBlockStmt);
  v79 = sub_23F697FF4(*v75, *v78);
  if ((v79 & 1) == 0)
  {
    sub_23F6D3928((uint64_t)v78);
    sub_23F6D3748(v67);
    sub_23F6D3748(v66);
    sub_23F6D3928((uint64_t)v75);
    v63 = v68;
    v62 = &qword_256EA84F8;
    goto LABEL_29;
  }
  sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  sub_23F6B5994();
  v80 = sub_23F923CF8();
  sub_23F6D38A0((uint64_t)v78);
  sub_23F6D3C1C(v67);
  sub_23F6D3C1C(v66);
  sub_23F6D38A0((uint64_t)v75);
  sub_23F6D3C1C(v68);
  if ((v80 & 1) != 0)
    goto LABEL_27;
LABEL_30:
  sub_23F693DDC();
}

uint64_t TranscriptProtoASTForInStmt.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTForInStmt, &qword_256EB2458, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTForInStmt);
}

unint64_t sub_23F8FA4D0()
{
  static TranscriptProtoASTForInStmt.protoMessageName.getter();
  return 0xD000000000000017;
}

void sub_23F8FA4F4()
{
  TranscriptProtoASTForInStmt.decodeMessage<A>(decoder:)();
}

void sub_23F8FA508()
{
  TranscriptProtoASTForInStmt.traverse<A>(visitor:)();
}

uint64_t sub_23F8FA51C()
{
  sub_23F6D3458(&qword_256EB3D30, type metadata accessor for TranscriptProtoASTForInStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTForInStmt);
  return sub_23FB2D784();
}

uint64_t sub_23F8FA570()
{
  sub_23F6D3458(&qword_256EB36A8, type metadata accessor for TranscriptProtoASTForInStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTForInStmt);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8FA5B4()
{
  sub_23F6D3458(&qword_256EB36A8, type metadata accessor for TranscriptProtoASTForInStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTForInStmt);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTBlockStmt.protoMessageName.getter()
{
  return sub_23F6D3738(23);
}

uint64_t sub_23F8FA620()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoASTBlockStmt._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA10D8, (uint64_t)&unk_256EB16C0, a1);
}

void TranscriptProtoASTBlockStmt.decodeMessage<A>(decoder:)()
{
  sub_23F913C48();
}

void TranscriptProtoASTBlockStmt.traverse<A>(visitor:)()
{
  sub_23F8B4D24();
}

void static TranscriptProtoASTBlockStmt.== infix(_:_:)()
{
  sub_23F89AB14();
}

uint64_t TranscriptProtoASTBlockStmt.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTBlockStmt, &qword_256EB2460, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTBlockStmt);
}

unint64_t sub_23F8FA6F4()
{
  static TranscriptProtoASTBlockStmt.protoMessageName.getter();
  return 0xD000000000000017;
}

void sub_23F8FA718()
{
  TranscriptProtoASTBlockStmt.traverse<A>(visitor:)();
}

uint64_t sub_23F8FA72C()
{
  sub_23F6D3458(&qword_256EB3D28, type metadata accessor for TranscriptProtoASTBlockStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTBlockStmt);
  return sub_23FB2D784();
}

uint64_t sub_23F8FA780()
{
  sub_23F6D3458(&qword_256EB36C0, type metadata accessor for TranscriptProtoASTBlockStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTBlockStmt);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8FA7C4()
{
  sub_23F6D3458(&qword_256EB36C0, type metadata accessor for TranscriptProtoASTBlockStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTBlockStmt);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTLiteral.protoMessageName.getter()
{
  return sub_23F6D3738(21);
}

uint64_t sub_23F8FA830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB16D8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB16D8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1B0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "null";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "BOOL";
  *(_QWORD *)(v11 + 8) = 4;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "int";
  *((_QWORD *)v13 + 1) = 3;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "double";
  *((_QWORD *)v15 + 1) = 6;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "string";
  *((_QWORD *)v17 + 1) = 6;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "array";
  *((_QWORD *)v19 + 1) = 5;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "dict";
  *((_QWORD *)v21 + 1) = 4;
  v21[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoASTLiteral._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA10E0, (uint64_t)qword_256EB16D8, a1);
}

void TranscriptProtoASTLiteral.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;

  sub_23F6D3EA4();
  sub_23F6D356C();
  if (!v10)
  {
    while ((v11 & 1) == 0)
    {
      sub_23F924C4C();
      if (!(!v22 & v21))
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_23F8FAAF8 + 4 * byte_23FB74DCB[v20]))(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10);
        return;
      }
      sub_23F6D35E8();
    }
  }
  sub_23F6D3750();
}

void sub_23F8FAB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2468);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoAstliteralEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB4398);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2468);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2468);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoAstliteralEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoAstliteralEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB4398);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoASTLiteralArrayVariant);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoASTLiteralArrayVariant);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoAstliteralEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB36F0, type metadata accessor for TranscriptProtoASTLiteralArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteralArrayVariant);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB4398);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB4398);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB4398);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoASTLiteralArrayVariant);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB4398);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2468);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoASTLiteralArrayVariant);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F8FAF4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for TranscriptProtoASTLiteralDictVariant(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2468);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoAstliteralEnum(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB43A0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2468);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2468);
    v25 = v13;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoAstliteralEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoAstliteralEnum);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB43A0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoASTLiteralDictVariant);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoASTLiteralDictVariant);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoAstliteralEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3708, type metadata accessor for TranscriptProtoASTLiteralDictVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteralDictVariant);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB43A0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB43A0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB43A0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoASTLiteralDictVariant);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB43A0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2468);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoASTLiteralDictVariant);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

#error "23F8FB36C: call analysis failed (funcsize=35)"

void sub_23F8FB47C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2468);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2468);
  v8 = type metadata accessor for TranscriptProtoAstliteralEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2468);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTLiteralArrayVariant);
      sub_23F6D3458(&qword_256EB36F0, type metadata accessor for TranscriptProtoASTLiteralArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteralArrayVariant);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTLiteralArrayVariant);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoAstliteralEnum);
  }
  __break(1u);
}

void sub_23F8FB614(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2468);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTLiteralDictVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2468);
  v8 = type metadata accessor for TranscriptProtoAstliteralEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2468);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTLiteralDictVariant);
      sub_23F6D3458(&qword_256EB3708, type metadata accessor for TranscriptProtoASTLiteralDictVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteralDictVariant);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTLiteralDictVariant);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoAstliteralEnum);
  }
  __break(1u);
}

void static TranscriptProtoASTLiteral.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F6B50E8();
  v5 = v4;
  v39 = sub_23F6B53A4();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v39);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = sub_23F6D38F8(v9, v10, v11, v12, v13, v14, v15, v16, v40);
  type metadata accessor for TranscriptProtoAstliteralEnum(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B59E0();
  v19 = sub_23F6916B8(&qword_256EB2470);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6D3A70();
  v24 = MEMORY[0x24BDAC7A8](v23);
  sub_23F923124(v24, v25, v26, v27, v28, v29, v30, v31, v41);
  sub_23F923164(v5, v0);
  v32 = v1 + *(int *)(v19 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v32);
  v33 = sub_23F9230E4(v1);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v35 = sub_23F9230E4(v32);
    if (v36)
    {
      sub_23F6D378C(v35, &qword_256EB2468);
LABEL_11:
      v38 = type metadata accessor for TranscriptProtoASTLiteral(0);
      sub_23F6D3794(v38);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v33, v34, &qword_256EB2468);
  sub_23F9230E4(v32);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v37, type metadata accessor for TranscriptProtoAstliteralEnum);
LABEL_9:
    sub_23F6D378C(v35, &qword_256EB2470);
    goto LABEL_12;
  }
  sub_23F923270();
  sub_23F6D3D70();
  static TranscriptProtoAstliteralEnum.== infix(_:_:)();
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoASTLiteral.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTLiteral, &qword_256EB2478, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteral);
}

unint64_t sub_23F8FB9E0()
{
  static TranscriptProtoASTLiteral.protoMessageName.getter();
  return 0xD000000000000015;
}

void sub_23F8FBA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  TranscriptProtoASTLiteral.decodeMessage<A>(decoder:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_23F8FBA18()
{
  return TranscriptProtoASTLiteral.traverse<A>(visitor:)();
}

uint64_t sub_23F8FBA2C()
{
  sub_23F6D3458(&qword_256EB3D20, type metadata accessor for TranscriptProtoASTLiteral, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteral);
  return sub_23FB2D784();
}

uint64_t sub_23F8FBA80()
{
  sub_23F6D3458(&qword_256EB36D8, type metadata accessor for TranscriptProtoASTLiteral, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteral);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8FBAC4()
{
  sub_23F6D3458(&qword_256EB36D8, type metadata accessor for TranscriptProtoASTLiteral, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteral);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTLiteralArrayVariant.protoMessageName.getter()
{
  return sub_23F6D3738(33);
}

uint64_t sub_23F8FBB30()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoASTLiteralArrayVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA10E8, (uint64_t)&unk_256EB16F0, a1);
}

void TranscriptProtoASTLiteralArrayVariant.decodeMessage<A>(decoder:)()
{
  sub_23F913C48();
}

void TranscriptProtoASTLiteralArrayVariant.traverse<A>(visitor:)()
{
  sub_23F8B4D24();
}

void static TranscriptProtoASTLiteralArrayVariant.== infix(_:_:)()
{
  sub_23F89AB14();
}

uint64_t TranscriptProtoASTLiteralArrayVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTLiteralArrayVariant, &qword_256EB2488, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteralArrayVariant);
}

unint64_t sub_23F8FBC04()
{
  static TranscriptProtoASTLiteralArrayVariant.protoMessageName.getter();
  return 0xD000000000000021;
}

void sub_23F8FBC28()
{
  TranscriptProtoASTLiteralArrayVariant.decodeMessage<A>(decoder:)();
}

void sub_23F8FBC3C()
{
  TranscriptProtoASTLiteralArrayVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F8FBC50()
{
  sub_23F6D3458(&qword_256EB3D18, type metadata accessor for TranscriptProtoASTLiteralArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteralArrayVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F8FBCA4()
{
  sub_23F6D3458(&qword_256EB36F0, type metadata accessor for TranscriptProtoASTLiteralArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteralArrayVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8FBCE8()
{
  sub_23F6D3458(&qword_256EB36F0, type metadata accessor for TranscriptProtoASTLiteralArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteralArrayVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTLiteralDictVariant.protoMessageName.getter()
{
  return sub_23F6D3738(32);
}

uint64_t sub_23F8FBD54()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoASTLiteralDictVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA10F0, (uint64_t)&unk_256EB1708, a1);
}

void TranscriptProtoASTLiteralDictVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_23F6D39E0(a1, a2);
  while (1)
  {
    v3 = sub_23FB2D7B4();
    if (v2 || (v4 & 1) != 0)
      break;
    if (v3 == 2)
    {
      sub_23F6D3598();
      sub_23F8FBDD0();
    }
    sub_23F6B6098();
  }
  sub_23F6D3C2C();
}

uint64_t sub_23F8FBDD0()
{
  sub_23FB2D6DC();
  type metadata accessor for TranscriptProtoASTExpr(0);
  sub_23F6D3458(&qword_256EB2480, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
  sub_23F6D3458(&qword_256EB2490, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
  return sub_23FB2D79C();
}

void TranscriptProtoASTLiteralDictVariant.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F923528();
  sub_23F923A58();
  if (!v1
    || (sub_23F923AE8(),
        sub_23F924B98(),
        sub_23F923750(&qword_256EB2480, v2, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr),
        sub_23F924678(&qword_256EB2490, v3, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr),
        sub_23F923A80(),
        !v0))
  {
    type metadata accessor for TranscriptProtoASTLiteralDictVariant(0);
    sub_23F6D3A68();
  }
  sub_23F6D3B40();
}

void static TranscriptProtoASTLiteralDictVariant.== infix(_:_:)()
{
  sub_23F89AB14();
}

uint64_t TranscriptProtoASTLiteralDictVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTLiteralDictVariant, &qword_256EB2498, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteralDictVariant);
}

unint64_t sub_23F8FBF9C()
{
  static TranscriptProtoASTLiteralDictVariant.protoMessageName.getter();
  return 0xD000000000000020;
}

void sub_23F8FBFC0(uint64_t a1, uint64_t a2)
{
  TranscriptProtoASTLiteralDictVariant.decodeMessage<A>(decoder:)(a1, a2);
}

void sub_23F8FBFD4()
{
  TranscriptProtoASTLiteralDictVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F8FBFE8()
{
  sub_23F6D3458(&qword_256EB3D10, type metadata accessor for TranscriptProtoASTLiteralDictVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteralDictVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F8FC03C()
{
  sub_23F6D3458(&qword_256EB3708, type metadata accessor for TranscriptProtoASTLiteralDictVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteralDictVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F8FC080()
{
  sub_23F6D3458(&qword_256EB3708, type metadata accessor for TranscriptProtoASTLiteralDictVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteralDictVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTExpr.protoMessageName.getter()
{
  return sub_23F6D3738(18);
}

uint64_t sub_23F8FC0EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);
  unint64_t v9;
  _QWORD *v10;
  char *v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  _QWORD *v38;
  char *v39;
  _QWORD *v40;
  char *v41;
  _QWORD *v42;
  char *v43;
  _QWORD *v44;
  char *v45;
  _QWORD *v46;
  char *v47;
  _QWORD *v48;
  char *v49;
  uint64_t v51;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1720);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1720);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = xmmword_23FB899B0;
  v5 = v51 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v51 + v4) = 1;
  *(_QWORD *)v5 = "ident";
  *(_QWORD *)(v5 + 8) = 5;
  *(_BYTE *)(v5 + 16) = 2;
  v6 = *MEMORY[0x24BE5C318];
  v7 = sub_23FB2D9DC();
  v8 = *(void (**)(void))(*(_QWORD *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  v9 = v51 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v51 + v4 + v3) = 2;
  *(_QWORD *)v9 = "literal";
  *(_QWORD *)(v9 + 8) = 7;
  *(_BYTE *)(v9 + 16) = 2;
  v8();
  v10 = (_QWORD *)(v51 + v4 + 2 * v3);
  v11 = (char *)v10 + *(int *)(v1 + 48);
  *v10 = 3;
  *(_QWORD *)v11 = "prefix";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v8();
  v12 = (_QWORD *)(v51 + v4 + 3 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 4;
  *(_QWORD *)v13 = "infix";
  *((_QWORD *)v13 + 1) = 5;
  v13[16] = 2;
  v8();
  v14 = (_QWORD *)(v51 + v4 + 4 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 5;
  *(_QWORD *)v15 = "dot";
  *((_QWORD *)v15 + 1) = 3;
  v15[16] = 2;
  v8();
  v16 = (_QWORD *)(v51 + v4 + 5 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 6;
  *(_QWORD *)v17 = "index";
  *((_QWORD *)v17 + 1) = 5;
  v17[16] = 2;
  v8();
  v18 = (_QWORD *)(v51 + v4 + 6 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 7;
  *(_QWORD *)v19 = "call";
  *((_QWORD *)v19 + 1) = 4;
  v19[16] = 2;
  v8();
  v20 = (_QWORD *)(v51 + v4 + 7 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 8;
  *(_QWORD *)v21 = "endOfPlan";
  *((_QWORD *)v21 + 1) = 9;
  v21[16] = 2;
  v8();
  v22 = (_QWORD *)(v51 + v4 + 8 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 9;
  *(_QWORD *)v23 = "say";
  *((_QWORD *)v23 + 1) = 3;
  v23[16] = 2;
  v8();
  v24 = (_QWORD *)(v51 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 10;
  *(_QWORD *)v25 = "pick";
  *((_QWORD *)v25 + 1) = 4;
  v25[16] = 2;
  v8();
  v26 = (_QWORD *)(v51 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 11;
  *(_QWORD *)v27 = "confirm";
  *((_QWORD *)v27 + 1) = 7;
  v27[16] = 2;
  v8();
  v28 = (_QWORD *)(v51 + v4 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 12;
  *(_QWORD *)v29 = "statementId";
  *((_QWORD *)v29 + 1) = 11;
  v29[16] = 2;
  v8();
  v30 = (_QWORD *)(v51 + v4 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 13;
  *(_QWORD *)v31 = "search";
  *((_QWORD *)v31 + 1) = 6;
  v31[16] = 2;
  v8();
  v32 = (_QWORD *)(v51 + v4 + 13 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 14;
  *(_QWORD *)v33 = "pickOne";
  *((_QWORD *)v33 + 1) = 7;
  v33[16] = 2;
  v8();
  v34 = (_QWORD *)(v51 + v4 + 14 * v3);
  v35 = (char *)v34 + *(int *)(v1 + 48);
  *v34 = 15;
  *(_QWORD *)v35 = "noMatchingTool";
  *((_QWORD *)v35 + 1) = 14;
  v35[16] = 2;
  v8();
  v36 = (_QWORD *)(v51 + v4 + 15 * v3);
  v37 = (char *)v36 + *(int *)(v1 + 48);
  *v36 = 16;
  *(_QWORD *)v37 = "undo";
  *((_QWORD *)v37 + 1) = 4;
  v37[16] = 2;
  v8();
  v38 = (_QWORD *)(v51 + v4 + 16 * v3);
  v39 = (char *)v38 + *(int *)(v1 + 48);
  *v38 = 17;
  *(_QWORD *)v39 = "resolveTool";
  *((_QWORD *)v39 + 1) = 11;
  v39[16] = 2;
  v8();
  v40 = (_QWORD *)(v51 + v4 + 17 * v3);
  v41 = (char *)v40 + *(int *)(v1 + 48);
  *v40 = 18;
  *(_QWORD *)v41 = "reject";
  *((_QWORD *)v41 + 1) = 6;
  v41[16] = 2;
  v8();
  v42 = (_QWORD *)(v51 + v4 + 18 * v3);
  v43 = (char *)v42 + *(int *)(v1 + 48);
  *v42 = 19;
  *(_QWORD *)v43 = "cancel";
  *((_QWORD *)v43 + 1) = 6;
  v43[16] = 2;
  v8();
  v44 = (_QWORD *)(v51 + v4 + 19 * v3);
  v45 = (char *)v44 + *(int *)(v1 + 48);
  *v44 = 20;
  *(_QWORD *)v45 = "continuePlanning";
  *((_QWORD *)v45 + 1) = 16;
  v45[16] = 2;
  v8();
  v46 = (_QWORD *)(v51 + v4 + 20 * v3);
  v47 = (char *)v46 + *(int *)(v1 + 48);
  *v46 = 21;
  *(_QWORD *)v47 = "updateParameters";
  *((_QWORD *)v47 + 1) = 16;
  v47[16] = 2;
  v8();
  v48 = (_QWORD *)(v51 + v4 + 21 * v3);
  v49 = (char *)v48 + *(int *)(v1 + 48);
  *v48 = 22;
  *(_QWORD *)v49 = "getMentionedApps";
  *((_QWORD *)v49 + 1) = 16;
  v49[16] = 2;
  v8();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoASTExpr._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA10F8, (uint64_t)qword_256EB1720, a1);
}

void TranscriptProtoASTExpr.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t *v4;
  unint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  unint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          v3 = sub_23F6D3598();
          sub_23F8FC80C(v3, v4);
          break;
        case 2:
          v5 = (unint64_t *)sub_23F923100();
          sub_23F8FC8E4(v5, v6, v7, v8);
          break;
        case 3:
          v9 = (unint64_t *)sub_23F923100();
          sub_23F8FCBC8(v9, v10, v11, v12);
          break;
        case 4:
          v13 = (unint64_t *)sub_23F923100();
          sub_23F8FCEAC(v13, v14, v15, v16);
          break;
        case 5:
          v17 = (unint64_t *)sub_23F923100();
          sub_23F8FD19C(v17, v18, v19, v20);
          break;
        case 6:
          v21 = (unint64_t *)sub_23F923100();
          sub_23F8FD480(v21, v22, v23, v24);
          break;
        case 7:
          v25 = (unint64_t *)sub_23F923100();
          sub_23F8FD76C(v25, v26, v27, v28);
          break;
        case 8:
          v29 = sub_23F6D3598();
          sub_23F8FDA50(v29, v30);
          break;
        case 9:
          v31 = (unint64_t *)sub_23F923100();
          sub_23F8FDBFC(v31, v32, v33, v34);
          break;
        case 10:
          v35 = (unint64_t *)sub_23F923100();
          sub_23F8FDEE8(v35, v36, v37, v38);
          break;
        case 11:
          v39 = (unint64_t *)sub_23F923100();
          sub_23F8FE1CC(v39, v40, v41, v42);
          break;
        case 12:
          v43 = (unint64_t *)sub_23F923100();
          sub_23F8FE4B8(v43, v44, v45, v46);
          break;
        case 13:
          v47 = (unint64_t *)sub_23F923100();
          sub_23F8FE7A0(v47, v48, v49, v50);
          break;
        case 14:
          v51 = (unint64_t *)sub_23F923100();
          sub_23F8FEA8C(v51, v52, v53, v54);
          break;
        case 15:
          v55 = (unint64_t *)sub_23F923100();
          sub_23F8FED70(v55, v56, v57, v58);
          break;
        case 16:
          v59 = (unint64_t *)sub_23F923100();
          sub_23F8FF05C(v59, v60, v61, v62);
          break;
        case 17:
          v63 = (unint64_t *)sub_23F923100();
          sub_23F8FF340(v63, v64, v65, v66);
          break;
        case 18:
          v67 = (unint64_t *)sub_23F923100();
          sub_23F8FF62C(v67, v68, v69, v70);
          break;
        case 19:
          v71 = (unint64_t *)sub_23F923100();
          sub_23F8FF910(v71, v72, v73, v74);
          break;
        case 20:
          v75 = (unint64_t *)sub_23F923100();
          sub_23F8FFBFC(v75, v76, v77, v78);
          break;
        case 21:
          v79 = (unint64_t *)sub_23F923100();
          sub_23F8FFEE4(v79, v80, v81, v82);
          break;
        case 22:
          v83 = (unint64_t *)sub_23F923100();
          sub_23F9001D0(v83, v84, v85, v86);
          break;
        default:
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D377C();
}

uint64_t sub_23F8FC80C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_23FB2D874();
  if (v2)
    return swift_bridgeObjectRelease();
  if (v7)
  {
    if ((~*a2 & 0xF000000000000007) != 0)
      sub_23FB2D7C0();
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = 0;
    *(_QWORD *)(v5 + 24) = v7;
    v6 = *a2;
    *a2 = v5;
    return sub_23F6B4DF8(v6);
  }
  return result;
}

void sub_23F8FC8E4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a4;
  v6 = type metadata accessor for TranscriptProtoASTLiteral(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v28 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - v9;
  v11 = sub_23F6916B8(&qword_256EB42F8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - v15;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v25 - v15, 1, 1, v6);
  v17 = *a1;
  v27 = *a1 & 0xF000000000000007;
  if (v27 != 0xF000000000000007 && ((v17 >> 59) & 0x1E | (v17 >> 2) & 1) == 1)
  {
    v26 = a1;
    swift_retain();
    sub_23F6B4F84((uint64_t)v16, &qword_256EB42F8);
    v19 = swift_projectBox();
    sub_23F7E7704(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTLiteral);
    sub_23F6B4DF8(v17);
    a1 = v26;
    sub_23F7E76D0((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTLiteral);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v6);
  }
  sub_23F6D3458(&qword_256EB36D8, type metadata accessor for TranscriptProtoASTLiteral, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteral);
  sub_23FB2D8B0();
  if (v4)
  {
    v20 = (uint64_t)v16;
LABEL_11:
    sub_23F6B4F84(v20, &qword_256EB42F8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v16, (uint64_t)v14, &qword_256EB42F8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v6) == 1)
  {
    sub_23F6B4F84((uint64_t)v16, &qword_256EB42F8);
    v20 = (uint64_t)v14;
    goto LABEL_11;
  }
  v21 = v28;
  sub_23F7E76D0((uint64_t)v14, v28, type metadata accessor for TranscriptProtoASTLiteral);
  if (v27 != 0xF000000000000007)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v16, &qword_256EB42F8);
  v22 = swift_allocBox();
  sub_23F7E76D0(v21, v23, type metadata accessor for TranscriptProtoASTLiteral);
  v24 = *a1;
  *a1 = v22 | 4;
  sub_23F6B4DF8(v24);
}

void sub_23F8FCBC8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a4;
  v6 = type metadata accessor for TranscriptProtoASTExprPrefixVariant(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v28 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - v9;
  v11 = sub_23F6916B8(&qword_256EB4300);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - v15;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v25 - v15, 1, 1, v6);
  v17 = *a1;
  v27 = *a1 & 0xF000000000000007;
  if (v27 != 0xF000000000000007 && ((v17 >> 59) & 0x1E | (v17 >> 2) & 1) == 2)
  {
    v26 = a1;
    swift_retain();
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4300);
    v19 = swift_projectBox();
    sub_23F7E7704(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprPrefixVariant);
    sub_23F6B4DF8(v17);
    a1 = v26;
    sub_23F7E76D0((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprPrefixVariant);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v6);
  }
  sub_23F6D3458(&qword_256EB3730, type metadata accessor for TranscriptProtoASTExprPrefixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPrefixVariant);
  sub_23FB2D8B0();
  if (v4)
  {
    v20 = (uint64_t)v16;
LABEL_11:
    sub_23F6B4F84(v20, &qword_256EB4300);
    return;
  }
  sub_23F7A1EDC((uint64_t)v16, (uint64_t)v14, &qword_256EB4300);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v6) == 1)
  {
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4300);
    v20 = (uint64_t)v14;
    goto LABEL_11;
  }
  v21 = v28;
  sub_23F7E76D0((uint64_t)v14, v28, type metadata accessor for TranscriptProtoASTExprPrefixVariant);
  if (v27 != 0xF000000000000007)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v16, &qword_256EB4300);
  v22 = swift_allocBox();
  sub_23F7E76D0(v21, v23, type metadata accessor for TranscriptProtoASTExprPrefixVariant);
  v24 = *a1;
  *a1 = v22 | 0x1000000000000000;
  sub_23F6B4DF8(v24);
}

void sub_23F8FCEAC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a4;
  v6 = type metadata accessor for TranscriptProtoASTExprInfixVariant(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v28 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - v9;
  v11 = sub_23F6916B8(&qword_256EB4308);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - v15;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v25 - v15, 1, 1, v6);
  v17 = *a1;
  v27 = *a1 & 0xF000000000000007;
  if (v27 != 0xF000000000000007 && ((v17 >> 59) & 0x1E | (v17 >> 2) & 1) == 3)
  {
    v26 = a1;
    swift_retain();
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4308);
    v19 = swift_projectBox();
    sub_23F7E7704(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprInfixVariant);
    sub_23F6B4DF8(v17);
    a1 = v26;
    sub_23F7E76D0((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprInfixVariant);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v6);
  }
  sub_23F6D3458(&qword_256EB3748, type metadata accessor for TranscriptProtoASTExprInfixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprInfixVariant);
  sub_23FB2D8B0();
  if (v4)
  {
    v20 = (uint64_t)v16;
LABEL_11:
    sub_23F6B4F84(v20, &qword_256EB4308);
    return;
  }
  sub_23F7A1EDC((uint64_t)v16, (uint64_t)v14, &qword_256EB4308);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v6) == 1)
  {
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4308);
    v20 = (uint64_t)v14;
    goto LABEL_11;
  }
  v21 = v28;
  sub_23F7E76D0((uint64_t)v14, v28, type metadata accessor for TranscriptProtoASTExprInfixVariant);
  if (v27 != 0xF000000000000007)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v16, &qword_256EB4308);
  v22 = swift_allocBox();
  sub_23F7E76D0(v21, v23, type metadata accessor for TranscriptProtoASTExprInfixVariant);
  v24 = *a1;
  *a1 = v22 | 0x1000000000000004;
  sub_23F6B4DF8(v24);
}

void sub_23F8FD19C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a4;
  v6 = type metadata accessor for TranscriptProtoASTExprDotVariant(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v28 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - v9;
  v11 = sub_23F6916B8(&qword_256EB4310);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - v15;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v25 - v15, 1, 1, v6);
  v17 = *a1;
  v27 = *a1 & 0xF000000000000007;
  if (v27 != 0xF000000000000007 && ((v17 >> 59) & 0x1E | (v17 >> 2) & 1) == 4)
  {
    v26 = a1;
    swift_retain();
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4310);
    v19 = swift_projectBox();
    sub_23F7E7704(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprDotVariant);
    sub_23F6B4DF8(v17);
    a1 = v26;
    sub_23F7E76D0((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprDotVariant);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v6);
  }
  sub_23F6D3458(&qword_256EB3760, type metadata accessor for TranscriptProtoASTExprDotVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprDotVariant);
  sub_23FB2D8B0();
  if (v4)
  {
    v20 = (uint64_t)v16;
LABEL_11:
    sub_23F6B4F84(v20, &qword_256EB4310);
    return;
  }
  sub_23F7A1EDC((uint64_t)v16, (uint64_t)v14, &qword_256EB4310);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v6) == 1)
  {
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4310);
    v20 = (uint64_t)v14;
    goto LABEL_11;
  }
  v21 = v28;
  sub_23F7E76D0((uint64_t)v14, v28, type metadata accessor for TranscriptProtoASTExprDotVariant);
  if (v27 != 0xF000000000000007)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v16, &qword_256EB4310);
  v22 = swift_allocBox();
  sub_23F7E76D0(v21, v23, type metadata accessor for TranscriptProtoASTExprDotVariant);
  v24 = *a1;
  *a1 = v22 | 0x2000000000000000;
  sub_23F6B4DF8(v24);
}

void sub_23F8FD480(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a4;
  v6 = type metadata accessor for TranscriptProtoASTExprIndexVariant(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v28 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - v9;
  v11 = sub_23F6916B8(&qword_256EB4318);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - v15;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v25 - v15, 1, 1, v6);
  v17 = *a1;
  v27 = *a1 & 0xF000000000000007;
  if (v27 != 0xF000000000000007 && ((v17 >> 59) & 0x1E | (v17 >> 2) & 1) == 5)
  {
    v26 = a1;
    swift_retain();
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4318);
    v19 = swift_projectBox();
    sub_23F7E7704(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprIndexVariant);
    sub_23F6B4DF8(v17);
    a1 = v26;
    sub_23F7E76D0((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprIndexVariant);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v6);
  }
  sub_23F6D3458(&qword_256EB3778, type metadata accessor for TranscriptProtoASTExprIndexVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprIndexVariant);
  sub_23FB2D8B0();
  if (v4)
  {
    v20 = (uint64_t)v16;
LABEL_11:
    sub_23F6B4F84(v20, &qword_256EB4318);
    return;
  }
  sub_23F7A1EDC((uint64_t)v16, (uint64_t)v14, &qword_256EB4318);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v6) == 1)
  {
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4318);
    v20 = (uint64_t)v14;
    goto LABEL_11;
  }
  v21 = v28;
  sub_23F7E76D0((uint64_t)v14, v28, type metadata accessor for TranscriptProtoASTExprIndexVariant);
  if (v27 != 0xF000000000000007)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v16, &qword_256EB4318);
  v22 = swift_allocBox();
  sub_23F7E76D0(v21, v23, type metadata accessor for TranscriptProtoASTExprIndexVariant);
  v24 = *a1;
  *a1 = v22 | 0x2000000000000004;
  sub_23F6B4DF8(v24);
}

void sub_23F8FD76C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a4;
  v6 = type metadata accessor for TranscriptProtoASTExprCallVariant(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v28 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - v9;
  v11 = sub_23F6916B8(&qword_256EB4320);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - v15;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v25 - v15, 1, 1, v6);
  v17 = *a1;
  v27 = *a1 & 0xF000000000000007;
  if (v27 != 0xF000000000000007 && ((v17 >> 59) & 0x1E | (v17 >> 2) & 1) == 6)
  {
    v26 = a1;
    swift_retain();
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4320);
    v19 = swift_projectBox();
    sub_23F7E7704(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprCallVariant);
    sub_23F6B4DF8(v17);
    a1 = v26;
    sub_23F7E76D0((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprCallVariant);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v6);
  }
  sub_23F6D3458(&qword_256EB3790, type metadata accessor for TranscriptProtoASTExprCallVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprCallVariant);
  sub_23FB2D8B0();
  if (v4)
  {
    v20 = (uint64_t)v16;
LABEL_11:
    sub_23F6B4F84(v20, &qword_256EB4320);
    return;
  }
  sub_23F7A1EDC((uint64_t)v16, (uint64_t)v14, &qword_256EB4320);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v6) == 1)
  {
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4320);
    v20 = (uint64_t)v14;
    goto LABEL_11;
  }
  v21 = v28;
  sub_23F7E76D0((uint64_t)v14, v28, type metadata accessor for TranscriptProtoASTExprCallVariant);
  if (v27 != 0xF000000000000007)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v16, &qword_256EB4320);
  v22 = swift_allocBox();
  sub_23F7E76D0(v21, v23, type metadata accessor for TranscriptProtoASTExprCallVariant);
  v24 = *a1;
  *a1 = v22 | 0x3000000000000000;
  sub_23F6B4DF8(v24);
}

void sub_23F8FDA50(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  int v12;
  uint64_t v13;
  _QWORD v14[2];

  v4 = sub_23F6916B8(&qword_256EB4328);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v14 - v8;
  v10 = sub_23FB2D6AC();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 1, 1, v10);
  sub_23F6D3458(&qword_256EB42F0, v11, MEMORY[0x24BE5B938]);
  sub_23FB2D7F0();
  if (v2
    || (sub_23F7A1EDC((uint64_t)v9, (uint64_t)v7, &qword_256EB4328),
        v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v10), sub_23F6B4F84((uint64_t)v7, &qword_256EB4328), v12 == 1))
  {
    sub_23F6B4F84((uint64_t)v9, &qword_256EB4328);
  }
  else
  {
    if ((~*a2 & 0xF000000000000007) != 0)
      sub_23FB2D7C0();
    sub_23F6B4F84((uint64_t)v9, &qword_256EB4328);
    v13 = *a2;
    *a2 = 0xA000000000000004;
    sub_23F6B4DF8(v13);
  }
}

void sub_23F8FDBFC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a4;
  v6 = type metadata accessor for TranscriptProtoASTExprSayVariant(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v28 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - v9;
  v11 = sub_23F6916B8(&qword_256EB4330);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - v15;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v25 - v15, 1, 1, v6);
  v17 = *a1;
  v27 = *a1 & 0xF000000000000007;
  if (v27 != 0xF000000000000007 && ((v17 >> 59) & 0x1E | (v17 >> 2) & 1) == 7)
  {
    v26 = a1;
    swift_retain();
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4330);
    v19 = swift_projectBox();
    sub_23F7E7704(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprSayVariant);
    sub_23F6B4DF8(v17);
    a1 = v26;
    sub_23F7E76D0((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprSayVariant);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v6);
  }
  sub_23F6D3458(&qword_256EB37A8, type metadata accessor for TranscriptProtoASTExprSayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprSayVariant);
  sub_23FB2D8B0();
  if (v4)
  {
    v20 = (uint64_t)v16;
LABEL_11:
    sub_23F6B4F84(v20, &qword_256EB4330);
    return;
  }
  sub_23F7A1EDC((uint64_t)v16, (uint64_t)v14, &qword_256EB4330);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v6) == 1)
  {
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4330);
    v20 = (uint64_t)v14;
    goto LABEL_11;
  }
  v21 = v28;
  sub_23F7E76D0((uint64_t)v14, v28, type metadata accessor for TranscriptProtoASTExprSayVariant);
  if (v27 != 0xF000000000000007)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v16, &qword_256EB4330);
  v22 = swift_allocBox();
  sub_23F7E76D0(v21, v23, type metadata accessor for TranscriptProtoASTExprSayVariant);
  v24 = *a1;
  *a1 = v22 | 0x3000000000000004;
  sub_23F6B4DF8(v24);
}

void sub_23F8FDEE8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a4;
  v6 = type metadata accessor for TranscriptProtoASTExprPickVariant(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v28 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - v9;
  v11 = sub_23F6916B8(&qword_256EB4338);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - v15;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v25 - v15, 1, 1, v6);
  v17 = *a1;
  v27 = *a1 & 0xF000000000000007;
  if (v27 != 0xF000000000000007 && ((v17 >> 59) & 0x1E | (v17 >> 2) & 1) == 8)
  {
    v26 = a1;
    swift_retain();
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4338);
    v19 = swift_projectBox();
    sub_23F7E7704(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprPickVariant);
    sub_23F6B4DF8(v17);
    a1 = v26;
    sub_23F7E76D0((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprPickVariant);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v6);
  }
  sub_23F6D3458(&qword_256EB37C0, type metadata accessor for TranscriptProtoASTExprPickVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPickVariant);
  sub_23FB2D8B0();
  if (v4)
  {
    v20 = (uint64_t)v16;
LABEL_11:
    sub_23F6B4F84(v20, &qword_256EB4338);
    return;
  }
  sub_23F7A1EDC((uint64_t)v16, (uint64_t)v14, &qword_256EB4338);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v6) == 1)
  {
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4338);
    v20 = (uint64_t)v14;
    goto LABEL_11;
  }
  v21 = v28;
  sub_23F7E76D0((uint64_t)v14, v28, type metadata accessor for TranscriptProtoASTExprPickVariant);
  if (v27 != 0xF000000000000007)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v16, &qword_256EB4338);
  v22 = swift_allocBox();
  sub_23F7E76D0(v21, v23, type metadata accessor for TranscriptProtoASTExprPickVariant);
  v24 = *a1;
  *a1 = v22 | 0x4000000000000000;
  sub_23F6B4DF8(v24);
}

void sub_23F8FE1CC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a4;
  v6 = type metadata accessor for TranscriptProtoASTExprConfirmVariant(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v28 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - v9;
  v11 = sub_23F6916B8(&qword_256EB4340);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - v15;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v25 - v15, 1, 1, v6);
  v17 = *a1;
  v27 = *a1 & 0xF000000000000007;
  if (v27 != 0xF000000000000007 && ((v17 >> 59) & 0x1E | (v17 >> 2) & 1) == 9)
  {
    v26 = a1;
    swift_retain();
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4340);
    v19 = swift_projectBox();
    sub_23F7E7704(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprConfirmVariant);
    sub_23F6B4DF8(v17);
    a1 = v26;
    sub_23F7E76D0((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprConfirmVariant);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v6);
  }
  sub_23F6D3458(&qword_256EB37D8, type metadata accessor for TranscriptProtoASTExprConfirmVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprConfirmVariant);
  sub_23FB2D8B0();
  if (v4)
  {
    v20 = (uint64_t)v16;
LABEL_11:
    sub_23F6B4F84(v20, &qword_256EB4340);
    return;
  }
  sub_23F7A1EDC((uint64_t)v16, (uint64_t)v14, &qword_256EB4340);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v6) == 1)
  {
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4340);
    v20 = (uint64_t)v14;
    goto LABEL_11;
  }
  v21 = v28;
  sub_23F7E76D0((uint64_t)v14, v28, type metadata accessor for TranscriptProtoASTExprConfirmVariant);
  if (v27 != 0xF000000000000007)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v16, &qword_256EB4340);
  v22 = swift_allocBox();
  sub_23F7E76D0(v21, v23, type metadata accessor for TranscriptProtoASTExprConfirmVariant);
  v24 = *a1;
  *a1 = v22 | 0x4000000000000004;
  sub_23F6B4DF8(v24);
}

void sub_23F8FE4B8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a4;
  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v28 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - v9;
  v11 = sub_23F6916B8(&qword_256EA25E0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - v15;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v25 - v15, 1, 1, v6);
  v17 = *a1;
  v27 = *a1 & 0xF000000000000007;
  if (v27 != 0xF000000000000007 && ((v17 >> 59) & 0x1E | (v17 >> 2) & 1) == 10)
  {
    v26 = a1;
    swift_retain();
    sub_23F6B4F84((uint64_t)v16, &qword_256EA25E0);
    v19 = swift_projectBox();
    sub_23F7E7704(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6B4DF8(v17);
    a1 = v26;
    sub_23F7E76D0((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoStatementID);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v6);
  }
  sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_23FB2D8B0();
  if (v4)
  {
    v20 = (uint64_t)v16;
LABEL_11:
    sub_23F6B4F84(v20, &qword_256EA25E0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v16, (uint64_t)v14, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v6) == 1)
  {
    sub_23F6B4F84((uint64_t)v16, &qword_256EA25E0);
    v20 = (uint64_t)v14;
    goto LABEL_11;
  }
  v21 = v28;
  sub_23F7E76D0((uint64_t)v14, v28, type metadata accessor for TranscriptProtoStatementID);
  if (v27 != 0xF000000000000007)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v16, &qword_256EA25E0);
  v22 = swift_allocBox();
  sub_23F7E76D0(v21, v23, type metadata accessor for TranscriptProtoStatementID);
  v24 = *a1;
  *a1 = v22 | 0x5000000000000000;
  sub_23F6B4DF8(v24);
}

void sub_23F8FE7A0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a4;
  v6 = type metadata accessor for TranscriptProtoASTExprSearchVariant(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v28 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - v9;
  v11 = sub_23F6916B8(&qword_256EB4348);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - v15;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v25 - v15, 1, 1, v6);
  v17 = *a1;
  v27 = *a1 & 0xF000000000000007;
  if (v27 != 0xF000000000000007 && ((v17 >> 59) & 0x1E | (v17 >> 2) & 1) == 11)
  {
    v26 = a1;
    swift_retain();
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4348);
    v19 = swift_projectBox();
    sub_23F7E7704(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprSearchVariant);
    sub_23F6B4DF8(v17);
    a1 = v26;
    sub_23F7E76D0((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprSearchVariant);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v6);
  }
  sub_23F6D3458(&qword_256EB3820, type metadata accessor for TranscriptProtoASTExprSearchVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprSearchVariant);
  sub_23FB2D8B0();
  if (v4)
  {
    v20 = (uint64_t)v16;
LABEL_11:
    sub_23F6B4F84(v20, &qword_256EB4348);
    return;
  }
  sub_23F7A1EDC((uint64_t)v16, (uint64_t)v14, &qword_256EB4348);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v6) == 1)
  {
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4348);
    v20 = (uint64_t)v14;
    goto LABEL_11;
  }
  v21 = v28;
  sub_23F7E76D0((uint64_t)v14, v28, type metadata accessor for TranscriptProtoASTExprSearchVariant);
  if (v27 != 0xF000000000000007)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v16, &qword_256EB4348);
  v22 = swift_allocBox();
  sub_23F7E76D0(v21, v23, type metadata accessor for TranscriptProtoASTExprSearchVariant);
  v24 = *a1;
  *a1 = v22 | 0x5000000000000004;
  sub_23F6B4DF8(v24);
}

void sub_23F8FEA8C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a4;
  v6 = type metadata accessor for TranscriptProtoASTExprPickOneVariant(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v28 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - v9;
  v11 = sub_23F6916B8(&qword_256EB4350);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - v15;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v25 - v15, 1, 1, v6);
  v17 = *a1;
  v27 = *a1 & 0xF000000000000007;
  if (v27 != 0xF000000000000007 && ((v17 >> 59) & 0x1E | (v17 >> 2) & 1) == 12)
  {
    v26 = a1;
    swift_retain();
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4350);
    v19 = swift_projectBox();
    sub_23F7E7704(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprPickOneVariant);
    sub_23F6B4DF8(v17);
    a1 = v26;
    sub_23F7E76D0((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprPickOneVariant);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v6);
  }
  sub_23F6D3458(&qword_256EB3838, type metadata accessor for TranscriptProtoASTExprPickOneVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPickOneVariant);
  sub_23FB2D8B0();
  if (v4)
  {
    v20 = (uint64_t)v16;
LABEL_11:
    sub_23F6B4F84(v20, &qword_256EB4350);
    return;
  }
  sub_23F7A1EDC((uint64_t)v16, (uint64_t)v14, &qword_256EB4350);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v6) == 1)
  {
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4350);
    v20 = (uint64_t)v14;
    goto LABEL_11;
  }
  v21 = v28;
  sub_23F7E76D0((uint64_t)v14, v28, type metadata accessor for TranscriptProtoASTExprPickOneVariant);
  if (v27 != 0xF000000000000007)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v16, &qword_256EB4350);
  v22 = swift_allocBox();
  sub_23F7E76D0(v21, v23, type metadata accessor for TranscriptProtoASTExprPickOneVariant);
  v24 = *a1;
  *a1 = v22 | 0x6000000000000000;
  sub_23F6B4DF8(v24);
}

void sub_23F8FED70(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a4;
  v6 = type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v28 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - v9;
  v11 = sub_23F6916B8(&qword_256EB4358);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - v15;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v25 - v15, 1, 1, v6);
  v17 = *a1;
  v27 = *a1 & 0xF000000000000007;
  if (v27 != 0xF000000000000007 && ((v17 >> 59) & 0x1E | (v17 >> 2) & 1) == 13)
  {
    v26 = a1;
    swift_retain();
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4358);
    v19 = swift_projectBox();
    sub_23F7E7704(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant);
    sub_23F6B4DF8(v17);
    a1 = v26;
    sub_23F7E76D0((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v6);
  }
  sub_23F6D3458(&qword_256EB3850, type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprNoMatchingToolVariant);
  sub_23FB2D8B0();
  if (v4)
  {
    v20 = (uint64_t)v16;
LABEL_11:
    sub_23F6B4F84(v20, &qword_256EB4358);
    return;
  }
  sub_23F7A1EDC((uint64_t)v16, (uint64_t)v14, &qword_256EB4358);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v6) == 1)
  {
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4358);
    v20 = (uint64_t)v14;
    goto LABEL_11;
  }
  v21 = v28;
  sub_23F7E76D0((uint64_t)v14, v28, type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant);
  if (v27 != 0xF000000000000007)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v16, &qword_256EB4358);
  v22 = swift_allocBox();
  sub_23F7E76D0(v21, v23, type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant);
  v24 = *a1;
  *a1 = v22 | 0x6000000000000004;
  sub_23F6B4DF8(v24);
}

void sub_23F8FF05C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a4;
  v6 = type metadata accessor for TranscriptProtoASTExprUndoVariant(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v28 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - v9;
  v11 = sub_23F6916B8(&qword_256EB4360);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - v15;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v25 - v15, 1, 1, v6);
  v17 = *a1;
  v27 = *a1 & 0xF000000000000007;
  if (v27 != 0xF000000000000007 && ((v17 >> 59) & 0x1E | (v17 >> 2) & 1) == 14)
  {
    v26 = a1;
    swift_retain();
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4360);
    v19 = swift_projectBox();
    sub_23F7E7704(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprUndoVariant);
    sub_23F6B4DF8(v17);
    a1 = v26;
    sub_23F7E76D0((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprUndoVariant);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v6);
  }
  sub_23F6D3458(&qword_256EB37F0, type metadata accessor for TranscriptProtoASTExprUndoVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprUndoVariant);
  sub_23FB2D8B0();
  if (v4)
  {
    v20 = (uint64_t)v16;
LABEL_11:
    sub_23F6B4F84(v20, &qword_256EB4360);
    return;
  }
  sub_23F7A1EDC((uint64_t)v16, (uint64_t)v14, &qword_256EB4360);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v6) == 1)
  {
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4360);
    v20 = (uint64_t)v14;
    goto LABEL_11;
  }
  v21 = v28;
  sub_23F7E76D0((uint64_t)v14, v28, type metadata accessor for TranscriptProtoASTExprUndoVariant);
  if (v27 != 0xF000000000000007)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v16, &qword_256EB4360);
  v22 = swift_allocBox();
  sub_23F7E76D0(v21, v23, type metadata accessor for TranscriptProtoASTExprUndoVariant);
  v24 = *a1;
  *a1 = v22 | 0x7000000000000000;
  sub_23F6B4DF8(v24);
}

void sub_23F8FF340(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a4;
  v6 = type metadata accessor for TranscriptProtoASTExprResolveToolVariant(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v28 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - v9;
  v11 = sub_23F6916B8(&qword_256EB4368);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - v15;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v25 - v15, 1, 1, v6);
  v17 = *a1;
  v27 = *a1 & 0xF000000000000007;
  if (v27 != 0xF000000000000007 && ((v17 >> 59) & 0x1E | (v17 >> 2) & 1) == 15)
  {
    v26 = a1;
    swift_retain();
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4368);
    v19 = swift_projectBox();
    sub_23F7E7704(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprResolveToolVariant);
    sub_23F6B4DF8(v17);
    a1 = v26;
    sub_23F7E76D0((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprResolveToolVariant);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v6);
  }
  sub_23F6D3458(&qword_256EB3880, type metadata accessor for TranscriptProtoASTExprResolveToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprResolveToolVariant);
  sub_23FB2D8B0();
  if (v4)
  {
    v20 = (uint64_t)v16;
LABEL_11:
    sub_23F6B4F84(v20, &qword_256EB4368);
    return;
  }
  sub_23F7A1EDC((uint64_t)v16, (uint64_t)v14, &qword_256EB4368);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v6) == 1)
  {
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4368);
    v20 = (uint64_t)v14;
    goto LABEL_11;
  }
  v21 = v28;
  sub_23F7E76D0((uint64_t)v14, v28, type metadata accessor for TranscriptProtoASTExprResolveToolVariant);
  if (v27 != 0xF000000000000007)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v16, &qword_256EB4368);
  v22 = swift_allocBox();
  sub_23F7E76D0(v21, v23, type metadata accessor for TranscriptProtoASTExprResolveToolVariant);
  v24 = *a1;
  *a1 = v22 | 0x7000000000000004;
  sub_23F6B4DF8(v24);
}

void sub_23F8FF62C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a4;
  v6 = type metadata accessor for TranscriptProtoASTExprRejectVariant(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v28 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - v9;
  v11 = sub_23F6916B8(&qword_256EB4370);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - v15;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v25 - v15, 1, 1, v6);
  v17 = *a1;
  v27 = *a1 & 0xF000000000000007;
  if (v27 != 0xF000000000000007 && ((v17 >> 59) & 0x1E | (v17 >> 2) & 1) == 16)
  {
    v26 = a1;
    swift_retain();
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4370);
    v19 = swift_projectBox();
    sub_23F7E7704(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprRejectVariant);
    sub_23F6B4DF8(v17);
    a1 = v26;
    sub_23F7E76D0((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprRejectVariant);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v6);
  }
  sub_23F6D3458(&qword_256EB3868, type metadata accessor for TranscriptProtoASTExprRejectVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprRejectVariant);
  sub_23FB2D8B0();
  if (v4)
  {
    v20 = (uint64_t)v16;
LABEL_11:
    sub_23F6B4F84(v20, &qword_256EB4370);
    return;
  }
  sub_23F7A1EDC((uint64_t)v16, (uint64_t)v14, &qword_256EB4370);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v6) == 1)
  {
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4370);
    v20 = (uint64_t)v14;
    goto LABEL_11;
  }
  v21 = v28;
  sub_23F7E76D0((uint64_t)v14, v28, type metadata accessor for TranscriptProtoASTExprRejectVariant);
  if (v27 != 0xF000000000000007)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v16, &qword_256EB4370);
  v22 = swift_allocBox();
  sub_23F7E76D0(v21, v23, type metadata accessor for TranscriptProtoASTExprRejectVariant);
  v24 = *a1;
  *a1 = v22 | 0x8000000000000000;
  sub_23F6B4DF8(v24);
}

void sub_23F8FF910(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a4;
  v6 = type metadata accessor for TranscriptProtoASTExprCancelVariant(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v28 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - v9;
  v11 = sub_23F6916B8(&qword_256EB4378);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - v15;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v25 - v15, 1, 1, v6);
  v17 = *a1;
  v27 = *a1 & 0xF000000000000007;
  if (v27 != 0xF000000000000007 && ((v17 >> 59) & 0x1E | (v17 >> 2) & 1) == 17)
  {
    v26 = a1;
    swift_retain();
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4378);
    v19 = swift_projectBox();
    sub_23F7E7704(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprCancelVariant);
    sub_23F6B4DF8(v17);
    a1 = v26;
    sub_23F7E76D0((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprCancelVariant);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v6);
  }
  sub_23F6D3458(&qword_256EB3808, type metadata accessor for TranscriptProtoASTExprCancelVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprCancelVariant);
  sub_23FB2D8B0();
  if (v4)
  {
    v20 = (uint64_t)v16;
LABEL_11:
    sub_23F6B4F84(v20, &qword_256EB4378);
    return;
  }
  sub_23F7A1EDC((uint64_t)v16, (uint64_t)v14, &qword_256EB4378);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v6) == 1)
  {
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4378);
    v20 = (uint64_t)v14;
    goto LABEL_11;
  }
  v21 = v28;
  sub_23F7E76D0((uint64_t)v14, v28, type metadata accessor for TranscriptProtoASTExprCancelVariant);
  if (v27 != 0xF000000000000007)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v16, &qword_256EB4378);
  v22 = swift_allocBox();
  sub_23F7E76D0(v21, v23, type metadata accessor for TranscriptProtoASTExprCancelVariant);
  v24 = *a1;
  *a1 = v22 | 0x8000000000000004;
  sub_23F6B4DF8(v24);
}

void sub_23F8FFBFC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a4;
  v6 = type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v28 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - v9;
  v11 = sub_23F6916B8(&qword_256EB4380);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - v15;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v25 - v15, 1, 1, v6);
  v17 = *a1;
  v27 = *a1 & 0xF000000000000007;
  if (v27 != 0xF000000000000007 && ((v17 >> 59) & 0x1E | (v17 >> 2) & 1) == 18)
  {
    v26 = a1;
    swift_retain();
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4380);
    v19 = swift_projectBox();
    sub_23F7E7704(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant);
    sub_23F6B4DF8(v17);
    a1 = v26;
    sub_23F7E76D0((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v6);
  }
  sub_23F6D3458(&qword_256EB3898, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprContinuePlanningVariant);
  sub_23FB2D8B0();
  if (v4)
  {
    v20 = (uint64_t)v16;
LABEL_11:
    sub_23F6B4F84(v20, &qword_256EB4380);
    return;
  }
  sub_23F7A1EDC((uint64_t)v16, (uint64_t)v14, &qword_256EB4380);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v6) == 1)
  {
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4380);
    v20 = (uint64_t)v14;
    goto LABEL_11;
  }
  v21 = v28;
  sub_23F7E76D0((uint64_t)v14, v28, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant);
  if (v27 != 0xF000000000000007)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v16, &qword_256EB4380);
  v22 = swift_allocBox();
  sub_23F7E76D0(v21, v23, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant);
  v24 = *a1;
  *a1 = v22 | 0x9000000000000000;
  sub_23F6B4DF8(v24);
}

void sub_23F8FFEE4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t updated;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a4;
  updated = type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant(0);
  v7 = MEMORY[0x24BDAC7A8](updated);
  v28 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - v9;
  v11 = sub_23F6916B8(&qword_256EB4388);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - v15;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v25 - v15, 1, 1, updated);
  v17 = *a1;
  v27 = *a1 & 0xF000000000000007;
  if (v27 != 0xF000000000000007 && ((v17 >> 59) & 0x1E | (v17 >> 2) & 1) == 19)
  {
    v26 = a1;
    swift_retain();
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4388);
    v19 = swift_projectBox();
    sub_23F7E7704(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant);
    sub_23F6B4DF8(v17);
    a1 = v26;
    sub_23F7E76D0((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, updated);
  }
  sub_23F6D3458(&qword_256EB38B0, type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprUpdateParametersVariant);
  sub_23FB2D8B0();
  if (v4)
  {
    v20 = (uint64_t)v16;
LABEL_11:
    sub_23F6B4F84(v20, &qword_256EB4388);
    return;
  }
  sub_23F7A1EDC((uint64_t)v16, (uint64_t)v14, &qword_256EB4388);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, updated) == 1)
  {
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4388);
    v20 = (uint64_t)v14;
    goto LABEL_11;
  }
  v21 = v28;
  sub_23F7E76D0((uint64_t)v14, v28, type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant);
  if (v27 != 0xF000000000000007)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v16, &qword_256EB4388);
  v22 = swift_allocBox();
  sub_23F7E76D0(v21, v23, type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant);
  v24 = *a1;
  *a1 = v22 | 0x9000000000000004;
  sub_23F6B4DF8(v24);
}

void sub_23F9001D0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t MentionedApps;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a4;
  MentionedApps = type metadata accessor for TranscriptProtoASTExprGetMentionedApps(0);
  v7 = MEMORY[0x24BDAC7A8](MentionedApps);
  v28 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - v9;
  v11 = sub_23F6916B8(&qword_256EB4390);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - v15;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v25 - v15, 1, 1, MentionedApps);
  v17 = *a1;
  v27 = *a1 & 0xF000000000000007;
  if (v27 != 0xF000000000000007 && ((v17 >> 59) & 0x1E | (v17 >> 2) & 1) == 20)
  {
    v26 = a1;
    swift_retain();
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4390);
    v19 = swift_projectBox();
    sub_23F7E7704(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprGetMentionedApps);
    sub_23F6B4DF8(v17);
    a1 = v26;
    sub_23F7E76D0((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprGetMentionedApps);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, MentionedApps);
  }
  sub_23F6D3458(&qword_256EB38C8, type metadata accessor for TranscriptProtoASTExprGetMentionedApps, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprGetMentionedApps);
  sub_23FB2D8B0();
  if (v4)
  {
    v20 = (uint64_t)v16;
LABEL_11:
    sub_23F6B4F84(v20, &qword_256EB4390);
    return;
  }
  sub_23F7A1EDC((uint64_t)v16, (uint64_t)v14, &qword_256EB4390);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, MentionedApps) == 1)
  {
    sub_23F6B4F84((uint64_t)v16, &qword_256EB4390);
    v20 = (uint64_t)v14;
    goto LABEL_11;
  }
  v21 = v28;
  sub_23F7E76D0((uint64_t)v14, v28, type metadata accessor for TranscriptProtoASTExprGetMentionedApps);
  if (v27 != 0xF000000000000007)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v16, &qword_256EB4390);
  v22 = swift_allocBox();
  sub_23F7E76D0(v21, v23, type metadata accessor for TranscriptProtoASTExprGetMentionedApps);
  v24 = *a1;
  *a1 = v22 | 0xA000000000000000;
  sub_23F6B4DF8(v24);
}

void TranscriptProtoASTExpr.traverse<A>(visitor:)()
{
  _QWORD *v0;

  sub_23F924BB0();
  if ((~*v0 & 0xF000000000000007) != 0)
    __asm { BR              X10 }
  type metadata accessor for TranscriptProtoASTExpr(0);
  sub_23F6D37BC();
  sub_23F6D377C();
}

_QWORD *sub_23F9006EC(_QWORD *result)
{
  if ((~*result & 0xF000000000000007) == 0 || (*result >> 59) & 0x1E | (*result >> 2) & 1)
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_23FB2D9A0();
    return (_QWORD *)swift_bridgeObjectRelease();
  }
  return result;
}

void sub_23F900778(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for TranscriptProtoASTLiteral(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 1)
  {
    v6 = swift_projectBox();
    sub_23F7E7704(v6, (uint64_t)v4, type metadata accessor for TranscriptProtoASTLiteral);
    sub_23F6D3458(&qword_256EB36D8, type metadata accessor for TranscriptProtoASTLiteral, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteral);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoASTLiteral);
  }
  else
  {
    __break(1u);
  }
}

void sub_23F90088C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for TranscriptProtoASTExprPrefixVariant(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 2)
  {
    v6 = swift_projectBox();
    sub_23F7E7704(v6, (uint64_t)v4, type metadata accessor for TranscriptProtoASTExprPrefixVariant);
    sub_23F6D3458(&qword_256EB3730, type metadata accessor for TranscriptProtoASTExprPrefixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPrefixVariant);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoASTExprPrefixVariant);
  }
  else
  {
    __break(1u);
  }
}

void sub_23F9009A0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for TranscriptProtoASTExprInfixVariant(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 3)
  {
    v6 = swift_projectBox();
    sub_23F7E7704(v6, (uint64_t)v4, type metadata accessor for TranscriptProtoASTExprInfixVariant);
    sub_23F6D3458(&qword_256EB3748, type metadata accessor for TranscriptProtoASTExprInfixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprInfixVariant);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoASTExprInfixVariant);
  }
  else
  {
    __break(1u);
  }
}

void sub_23F900AB4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for TranscriptProtoASTExprDotVariant(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 4)
  {
    v6 = swift_projectBox();
    sub_23F7E7704(v6, (uint64_t)v4, type metadata accessor for TranscriptProtoASTExprDotVariant);
    sub_23F6D3458(&qword_256EB3760, type metadata accessor for TranscriptProtoASTExprDotVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprDotVariant);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoASTExprDotVariant);
  }
  else
  {
    __break(1u);
  }
}

void sub_23F900BC8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for TranscriptProtoASTExprIndexVariant(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 5)
  {
    v6 = swift_projectBox();
    sub_23F7E7704(v6, (uint64_t)v4, type metadata accessor for TranscriptProtoASTExprIndexVariant);
    sub_23F6D3458(&qword_256EB3778, type metadata accessor for TranscriptProtoASTExprIndexVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprIndexVariant);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoASTExprIndexVariant);
  }
  else
  {
    __break(1u);
  }
}

void sub_23F900CDC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for TranscriptProtoASTExprCallVariant(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 6)
  {
    v6 = swift_projectBox();
    sub_23F7E7704(v6, (uint64_t)v4, type metadata accessor for TranscriptProtoASTExprCallVariant);
    sub_23F6D3458(&qword_256EB3790, type metadata accessor for TranscriptProtoASTExprCallVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprCallVariant);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoASTExprCallVariant);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23F900DF0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v9;

  v2 = sub_23FB2D6AC();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0
    && *a1 == 0xA000000000000004
    && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 21)
  {
    MEMORY[0x242672324](result);
    sub_23F6D3458(&qword_256EB42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_23FB2D94C();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_23F900F00(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for TranscriptProtoASTExprSayVariant(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 7)
  {
    v6 = swift_projectBox();
    sub_23F7E7704(v6, (uint64_t)v4, type metadata accessor for TranscriptProtoASTExprSayVariant);
    sub_23F6D3458(&qword_256EB37A8, type metadata accessor for TranscriptProtoASTExprSayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprSayVariant);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoASTExprSayVariant);
  }
  else
  {
    __break(1u);
  }
}

void sub_23F901014(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for TranscriptProtoASTExprPickVariant(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 8)
  {
    v6 = swift_projectBox();
    sub_23F7E7704(v6, (uint64_t)v4, type metadata accessor for TranscriptProtoASTExprPickVariant);
    sub_23F6D3458(&qword_256EB37C0, type metadata accessor for TranscriptProtoASTExprPickVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPickVariant);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoASTExprPickVariant);
  }
  else
  {
    __break(1u);
  }
}

void sub_23F901128(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for TranscriptProtoASTExprConfirmVariant(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 9)
  {
    v6 = swift_projectBox();
    sub_23F7E7704(v6, (uint64_t)v4, type metadata accessor for TranscriptProtoASTExprConfirmVariant);
    sub_23F6D3458(&qword_256EB37D8, type metadata accessor for TranscriptProtoASTExprConfirmVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprConfirmVariant);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoASTExprConfirmVariant);
  }
  else
  {
    __break(1u);
  }
}

void sub_23F90123C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 10)
  {
    v6 = swift_projectBox();
    sub_23F7E7704(v6, (uint64_t)v4, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoStatementID);
  }
  else
  {
    __break(1u);
  }
}

void sub_23F901350(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for TranscriptProtoASTExprSearchVariant(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 11)
  {
    v6 = swift_projectBox();
    sub_23F7E7704(v6, (uint64_t)v4, type metadata accessor for TranscriptProtoASTExprSearchVariant);
    sub_23F6D3458(&qword_256EB3820, type metadata accessor for TranscriptProtoASTExprSearchVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprSearchVariant);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoASTExprSearchVariant);
  }
  else
  {
    __break(1u);
  }
}

void sub_23F901464(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for TranscriptProtoASTExprPickOneVariant(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 12)
  {
    v6 = swift_projectBox();
    sub_23F7E7704(v6, (uint64_t)v4, type metadata accessor for TranscriptProtoASTExprPickOneVariant);
    sub_23F6D3458(&qword_256EB3838, type metadata accessor for TranscriptProtoASTExprPickOneVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPickOneVariant);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoASTExprPickOneVariant);
  }
  else
  {
    __break(1u);
  }
}

void sub_23F901578(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 13)
  {
    v6 = swift_projectBox();
    sub_23F7E7704(v6, (uint64_t)v4, type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant);
    sub_23F6D3458(&qword_256EB3850, type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprNoMatchingToolVariant);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant);
  }
  else
  {
    __break(1u);
  }
}

void sub_23F90168C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for TranscriptProtoASTExprUndoVariant(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 14)
  {
    v6 = swift_projectBox();
    sub_23F7E7704(v6, (uint64_t)v4, type metadata accessor for TranscriptProtoASTExprUndoVariant);
    sub_23F6D3458(&qword_256EB37F0, type metadata accessor for TranscriptProtoASTExprUndoVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprUndoVariant);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoASTExprUndoVariant);
  }
  else
  {
    __break(1u);
  }
}

void sub_23F9017A0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for TranscriptProtoASTExprResolveToolVariant(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 15)
  {
    v6 = swift_projectBox();
    sub_23F7E7704(v6, (uint64_t)v4, type metadata accessor for TranscriptProtoASTExprResolveToolVariant);
    sub_23F6D3458(&qword_256EB3880, type metadata accessor for TranscriptProtoASTExprResolveToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprResolveToolVariant);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoASTExprResolveToolVariant);
  }
  else
  {
    __break(1u);
  }
}

void sub_23F9018B4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for TranscriptProtoASTExprRejectVariant(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 16)
  {
    v6 = swift_projectBox();
    sub_23F7E7704(v6, (uint64_t)v4, type metadata accessor for TranscriptProtoASTExprRejectVariant);
    sub_23F6D3458(&qword_256EB3868, type metadata accessor for TranscriptProtoASTExprRejectVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprRejectVariant);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoASTExprRejectVariant);
  }
  else
  {
    __break(1u);
  }
}

void sub_23F9019C8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for TranscriptProtoASTExprCancelVariant(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 17)
  {
    v6 = swift_projectBox();
    sub_23F7E7704(v6, (uint64_t)v4, type metadata accessor for TranscriptProtoASTExprCancelVariant);
    sub_23F6D3458(&qword_256EB3808, type metadata accessor for TranscriptProtoASTExprCancelVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprCancelVariant);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoASTExprCancelVariant);
  }
  else
  {
    __break(1u);
  }
}

void sub_23F901ADC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 18)
  {
    v6 = swift_projectBox();
    sub_23F7E7704(v6, (uint64_t)v4, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant);
    sub_23F6D3458(&qword_256EB3898, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprContinuePlanningVariant);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant);
  }
  else
  {
    __break(1u);
  }
}

void sub_23F901BF0(_QWORD *a1)
{
  uint64_t updated;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;

  updated = type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant(0);
  MEMORY[0x24BDAC7A8](updated);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 19)
  {
    v6 = swift_projectBox();
    sub_23F7E7704(v6, (uint64_t)v4, type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant);
    sub_23F6D3458(&qword_256EB38B0, type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprUpdateParametersVariant);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant);
  }
  else
  {
    __break(1u);
  }
}

void sub_23F901D04(_QWORD *a1)
{
  uint64_t MentionedApps;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;

  MentionedApps = type metadata accessor for TranscriptProtoASTExprGetMentionedApps(0);
  MEMORY[0x24BDAC7A8](MentionedApps);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 20)
  {
    v6 = swift_projectBox();
    sub_23F7E7704(v6, (uint64_t)v4, type metadata accessor for TranscriptProtoASTExprGetMentionedApps);
    sub_23F6D3458(&qword_256EB38C8, type metadata accessor for TranscriptProtoASTExprGetMentionedApps, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprGetMentionedApps);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoASTExprGetMentionedApps);
  }
  else
  {
    __break(1u);
  }
}

void static TranscriptProtoASTExpr.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F6B50E8();
  sub_23F6D35C0();
  sub_23F923590();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F92428C();
  if (!v8)
  {
    v12 = v3;
    if ((v7 & ~v4) == 0)
    {
      sub_23F6B4DDC(v3);
      goto LABEL_7;
    }
    v11 = v4;
    sub_23F6B4DDC(v3);
    swift_retain();
    v9 = static TranscriptProtoAstexprEnum.== infix(_:_:)(&v12, &v11);
    swift_release();
    sub_23F6B4DF8(v3);
    if ((v9 & 1) == 0)
      goto LABEL_10;
LABEL_9:
    v10 = sub_23F923FBC();
    sub_23F923308(v1, v2 + *(int *)(v10 + 20));
    sub_23F6D36AC(*(int *)(v10 + 20));
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F6D3600();
    sub_23F6D3BD0(v0);
    sub_23F6D3BD0(v1);
    goto LABEL_10;
  }
  if ((v7 & ~v4) == 0)
    goto LABEL_9;
LABEL_7:
  sub_23F6B4DDC(v4);
  sub_23F6B4DF8(v3);
  sub_23F6B4DF8(v4);
LABEL_10:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoASTExpr.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTExpr, &qword_256EB2490, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
}

unint64_t sub_23F901F6C()
{
  static TranscriptProtoASTExpr.protoMessageName.getter();
  return 0xD000000000000012;
}

void sub_23F901F90()
{
  TranscriptProtoASTExpr.decodeMessage<A>(decoder:)();
}

void sub_23F901FA4()
{
  TranscriptProtoASTExpr.traverse<A>(visitor:)();
}

uint64_t sub_23F901FB8()
{
  sub_23F6D3458(&qword_256EB3D08, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
  return sub_23FB2D784();
}

uint64_t sub_23F90200C()
{
  sub_23F6D3458(&qword_256EB2480, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
  return sub_23FB2D8F8();
}

uint64_t sub_23F902050()
{
  sub_23F6D3458(&qword_256EB2480, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTExprPrefixVariant.protoMessageName.getter()
{
  return sub_23F6D3738(31);
}

uint64_t sub_23F9020BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1738);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1738);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "first";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "second";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoASTExprPrefixVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1100, (uint64_t)qword_256EB1738, a1);
}

void TranscriptProtoASTExprPrefixVariant.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6D3DC4();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_23F92320C();
      }
      else if (v1 == 1)
      {
        sub_23F924760();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D3710();
}

uint64_t sub_23F9022A0()
{
  sub_23F918B90();
  return sub_23FB2D7FC();
}

void TranscriptProtoASTExprPrefixVariant.traverse<A>(visitor:)()
{
  sub_23F902338();
}

void sub_23F902338()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(void);
  uint64_t v4;
  uint64_t v5;

  sub_23F6B5220();
  sub_23F924A60();
  v5 = v4;
  if (!*v0 || (v3(), sub_23F923630(), !v1))
  {
    sub_23F923CE8(v2, v5);
    if (!v1)
    {
      sub_23F923C1C();
      sub_23F9231A8();
    }
  }
  sub_23F6B5100();
}

void sub_23F9023C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTExpr(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTExprPrefixVariant(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA25A0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25A0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTExpr);
    sub_23F6D3458(&qword_256EB2480, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTExpr);
  }
}

void static TranscriptProtoASTExprPrefixVariant.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_23F6B50E8();
  v7 = v6;
  v35 = sub_23F6B53A4();
  v37 = *(_QWORD *)(v35 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  v36 = (uint64_t)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v10);
  v38 = sub_23F923FBC();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B573C();
  v12 = sub_23F6916B8(&qword_256EA25A8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA25A0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F9235CC();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6D3BD8();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F923C60();
  if (v24)
  {
    v17 = sub_23F923CB4();
    v18 = type metadata accessor for TranscriptProtoASTExprPrefixVariant(v17);
    v19 = sub_23F923B3C(v18);
    sub_23F923300(v19, v2);
    v33 = v5;
    sub_23F923300(v4 + *(int *)(v5 + 20), v0);
    v20 = v1 + *(int *)(v12 + 48);
    sub_23F923300(v2, v1);
    sub_23F923300(v0, v20);
    sub_23F6B5164(v1, 1, v38);
    v22 = v3;
    if (v24)
    {
      sub_23F6B62DC(v0);
      sub_23F6B62DC(v2);
      v23 = sub_23F6B5164(v20, 1, v38);
      if (v24)
      {
        sub_23F6D378C(v23, &qword_256EA25A0);
        goto LABEL_13;
      }
    }
    else
    {
      sub_23F923DD0(v1, v21, &qword_256EA25A0);
      sub_23F6B5164(v20, 1, v38);
      if (!v24)
      {
        v26 = v32;
        sub_23F92380C(v20, v32);
        sub_23F77E668();
        static TranscriptProtoASTExpr.== infix(_:_:)();
        v28 = v27;
        sub_23F77DAB0(v26);
        sub_23F6D387C(v0);
        sub_23F6D387C(v2);
        sub_23F77DAB0(v7);
        sub_23F6D387C(v1);
        if ((v28 & 1) == 0)
          goto LABEL_14;
LABEL_13:
        v29 = v33;
        v30 = v34;
        sub_23F923484(v34, v22 + *(int *)(v33 + 24));
        sub_23F923484(v36, v4 + *(int *)(v29 + 24));
        sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        sub_23F6B5624();
        sub_23F923790();
        sub_23F877930(v30);
        goto LABEL_14;
      }
      sub_23F6D3748(v0);
      sub_23F6D3748(v2);
      sub_23F714040(v25, type metadata accessor for TranscriptProtoASTExpr);
    }
    sub_23F6D378C(v23, &qword_256EA25A8);
  }
LABEL_14:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoASTExprPrefixVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTExprPrefixVariant, &qword_256EB24A0, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPrefixVariant);
}

unint64_t sub_23F902818()
{
  static TranscriptProtoASTExprPrefixVariant.protoMessageName.getter();
  return 0xD00000000000001FLL;
}

void sub_23F90283C()
{
  TranscriptProtoASTExprPrefixVariant.decodeMessage<A>(decoder:)();
}

void sub_23F902850()
{
  TranscriptProtoASTExprPrefixVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F902864()
{
  sub_23F6D3458(&qword_256EB3D00, type metadata accessor for TranscriptProtoASTExprPrefixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPrefixVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F9028B8()
{
  sub_23F6D3458(&qword_256EB3730, type metadata accessor for TranscriptProtoASTExprPrefixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPrefixVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F9028FC()
{
  sub_23F6D3458(&qword_256EB3730, type metadata accessor for TranscriptProtoASTExprPrefixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPrefixVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTExprInfixVariant.protoMessageName.getter()
{
  return sub_23F6D3738(30);
}

uint64_t sub_23F902968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1750);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1750);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "first";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "second";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "third";
  *((_QWORD *)v13 + 1) = 5;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoASTExprInfixVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1108, (uint64_t)qword_256EB1750, a1);
}

void TranscriptProtoASTExprInfixVariant.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6D3DC4();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 3:
          sub_23F923390();
          break;
        case 2:
          sub_23F92320C();
          break;
        case 1:
          sub_23F924788();
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D3710();
}

uint64_t sub_23F902B9C()
{
  sub_23F918ADC();
  return sub_23FB2D7FC();
}

void TranscriptProtoASTExprInfixVariant.traverse<A>(visitor:)()
{
  sub_23F902C2C();
}

void sub_23F902C2C()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void);
  void (*v5)(void);

  sub_23F6B5220();
  v5 = v4;
  sub_23F923E48();
  if (!*v0 || (sub_23F918ADC(), sub_23F923630(), !v1))
  {
    sub_23F9231FC();
    v5();
    if (!v1)
    {
      sub_23F923CE8(v2, v3);
      sub_23F923AF0();
      sub_23F9231A8();
    }
  }
  sub_23F6B5100();
}

void sub_23F902CD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTExpr(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTExprInfixVariant(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA25A0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25A0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTExpr);
    sub_23F6D3458(&qword_256EB2480, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTExpr);
  }
}

void sub_23F902E44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTExpr(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTExprInfixVariant(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_256EA25A0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25A0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTExpr);
    sub_23F6D3458(&qword_256EB2480, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTExpr);
  }
}

void static TranscriptProtoASTExprInfixVariant.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;

  sub_23F6B50E8();
  v5 = v4;
  v6 = sub_23F6B53A4();
  v73 = *(_QWORD *)(v6 - 8);
  v74 = v6;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  v72 = (uint64_t)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F6B62E4();
  v75 = (uint64_t *)type metadata accessor for TranscriptProtoASTExpr(v10);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F693EB0();
  v12 = sub_23F6916B8(&qword_256EA25A8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F923EC8();
  sub_23F6916B8(&qword_256EA25A0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F9235CC();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F924318();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F924304();
  v19 = MEMORY[0x24BDAC7A8](v18);
  v27 = sub_23F9242F0(v19, v20, v21, v22, v23, v24, v25, v26, v62);
  MEMORY[0x24BDAC7A8](v27);
  sub_23F9231E0();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F923C7C();
  if (v40)
  {
    v30 = sub_23F923AF8(v29);
    v31 = type metadata accessor for TranscriptProtoASTExprInfixVariant(v30);
    v32 = sub_23F9244EC(v31);
    sub_23F923368(v32, v3);
    v33 = *(int *)(v1 + 20);
    v66 = v5;
    sub_23F923368(v5 + v33, v2);
    v34 = v0 + *(int *)(v12 + 48);
    sub_23F923368(v3, v0);
    sub_23F923368(v2, v34);
    v35 = v75;
    sub_23F6B5164(v0, 1, (uint64_t)v75);
    v37 = v0;
    if (v40)
    {
      v63 = v12;
      sub_23F6B62DC(v2);
      sub_23F6B62DC(v3);
      v38 = sub_23F6B5164(v34, 1, (uint64_t)v35);
      if (v40)
      {
        sub_23F6B6034(v38, &qword_256EA25A0);
LABEL_13:
        v46 = sub_23F924804();
        v47 = v70;
        sub_23F92344C(v46, v70);
        v48 = v1;
        v49 = v66;
        v50 = v69;
        sub_23F92344C(v66 + *(int *)(v1 + 24), v69);
        v51 = v67;
        v52 = v67 + *(int *)(v63 + 48);
        sub_23F92344C(v47, v67);
        sub_23F92344C(v50, v52);
        sub_23F6B5164(v51, 1, (uint64_t)v35);
        if (v40)
        {
          sub_23F6D3C1C(v50);
          sub_23F6D3C1C(v47);
          v54 = sub_23F6B5164(v52, 1, (uint64_t)v35);
          if (v40)
          {
            sub_23F9239A0(v54, &qword_256EA25A0);
            goto LABEL_25;
          }
        }
        else
        {
          v55 = v65;
          sub_23F923BFC(v51, v53, &qword_256EA25A0);
          sub_23F6B5164(v52, 1, (uint64_t)v35);
          if (!v56)
          {
            v58 = v71;
            sub_23F923774(v52, v71);
            sub_23F72E3F8();
            static TranscriptProtoASTExpr.== infix(_:_:)();
            v60 = v59;
            sub_23F77DB60(v58);
            sub_23F6B62DC(v69);
            sub_23F6B62DC(v70);
            sub_23F77DB60(v55);
            sub_23F6B62DC(v51);
            if ((v60 & 1) == 0)
              goto LABEL_23;
LABEL_25:
            v61 = v64;
            sub_23F6D3818(v64, (uint64_t)v75 + *(int *)(v48 + 28));
            sub_23F6D3818(v72, v49 + *(int *)(v48 + 28));
            sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
            sub_23F923230();
            sub_23F9232DC();
            sub_23F6D3874(v61);
            goto LABEL_23;
          }
          sub_23F6D3748(v69);
          sub_23F6D3748(v70);
          sub_23F7E7834(v57, type metadata accessor for TranscriptProtoASTExpr);
        }
        v43 = v51;
LABEL_22:
        sub_23F6B4F84(v43, &qword_256EA25A8);
        goto LABEL_23;
      }
    }
    else
    {
      v39 = v68;
      sub_23F923DD0(v0, v36, &qword_256EA25A0);
      sub_23F6B5164(v34, 1, (uint64_t)v35);
      v41 = v71;
      if (!v40)
      {
        v63 = v12;
        sub_23F923774(v34, v71);
        sub_23F6B5994();
        static TranscriptProtoASTExpr.== infix(_:_:)();
        v45 = v44;
        sub_23F77DB60(v41);
        v35 = &qword_256EA25A0;
        sub_23F6D387C(v2);
        sub_23F6D387C(v3);
        sub_23F77DB60(v39);
        sub_23F9241CC();
        if ((v45 & 1) == 0)
          goto LABEL_23;
        goto LABEL_13;
      }
      sub_23F6D3748(v2);
      sub_23F6D3748(v3);
      sub_23F714040(v42, type metadata accessor for TranscriptProtoASTExpr);
    }
    v43 = v37;
    goto LABEL_22;
  }
LABEL_23:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoASTExprInfixVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTExprInfixVariant, &qword_256EB24A8, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprInfixVariant);
}

unint64_t sub_23F90343C()
{
  static TranscriptProtoASTExprInfixVariant.protoMessageName.getter();
  return 0xD00000000000001ELL;
}

void sub_23F903460()
{
  TranscriptProtoASTExprInfixVariant.decodeMessage<A>(decoder:)();
}

void sub_23F903474()
{
  TranscriptProtoASTExprInfixVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F903488()
{
  sub_23F6D3458(&qword_256EB3CF8, type metadata accessor for TranscriptProtoASTExprInfixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprInfixVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F9034DC()
{
  sub_23F6D3458(&qword_256EB3748, type metadata accessor for TranscriptProtoASTExprInfixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprInfixVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F903520()
{
  sub_23F6D3458(&qword_256EB3748, type metadata accessor for TranscriptProtoASTExprInfixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprInfixVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTExprDotVariant.protoMessageName.getter()
{
  return sub_23F6D3738(28);
}

uint64_t sub_23F90358C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1768);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1768);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "lhs";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "index";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoASTExprDotVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1110, (uint64_t)qword_256EB1768, a1);
}

void TranscriptProtoASTExprDotVariant.decodeMessage<A>(decoder:)()
{
  sub_23F90372C();
}

void sub_23F90372C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_23F6D3DC4();
  sub_23F923474(v1, v2);
  while (1)
  {
    v3 = sub_23FB2D7B4();
    if (v0 || (v4 & 1) != 0)
      break;
    if (v3 == 2)
    {
      sub_23F924938();
    }
    else if (v3 == 1)
    {
      sub_23F923DD8();
    }
    sub_23F6D3D70();
  }
  sub_23F6D3710();
}

void TranscriptProtoASTExprDotVariant.traverse<A>(visitor:)()
{
  sub_23F8F224C();
}

void sub_23F9037C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTExpr(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTExprDotVariant(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA25A0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25A0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTExpr);
    sub_23F6D3458(&qword_256EB2480, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTExpr);
  }
}

void static TranscriptProtoASTExprDotVariant.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  v45 = sub_23F6B53A4();
  v47 = *(_QWORD *)(v45 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v8);
  v46 = (uint64_t)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v19 = sub_23F9234E4(v11, v12, v13, v14, v15, v16, v17, v18, v43);
  v20 = type metadata accessor for TranscriptProtoASTExpr(v19);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B57F4(v22, v43);
  v23 = sub_23F6916B8(&qword_256EA25A8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6B5208();
  v25 = (uint64_t (*)(uint64_t))&qword_256EA25A0;
  sub_23F72E4BC();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F6B65E0();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F6D3BD8();
  MEMORY[0x24BDAC7A8](v28);
  v29 = sub_23F9238C8();
  v30 = type metadata accessor for TranscriptProtoASTExprDotVariant(v29);
  v31 = *(int *)(v30 + 20);
  v48 = v7;
  sub_23F923300(v7 + v31, v0);
  v32 = *(int *)(v30 + 20);
  v49 = v5;
  sub_23F923300(v5 + v32, v1);
  v33 = v2 + *(int *)(v23 + 48);
  sub_23F923300(v0, v2);
  sub_23F923300(v1, v33);
  sub_23F6B5164(v2, 1, v20);
  if (!v36)
  {
    sub_23F923760(v2, v34, &qword_256EA25A0);
    sub_23F6B5164(v33, 1, v20);
    if (!v36)
    {
      v25 = type metadata accessor for TranscriptProtoASTExpr;
      v5 = v44;
      sub_23F92380C(v33, v44);
      sub_23F7F64A8();
      static TranscriptProtoASTExpr.== infix(_:_:)();
      v39 = v38;
      sub_23F77DAB0(v5);
      sub_23F6D387C(v1);
      sub_23F6D387C(v0);
      sub_23F77DAB0(v3);
      sub_23F6D387C(v2);
      if ((v39 & 1) == 0)
        goto LABEL_18;
      goto LABEL_12;
    }
    sub_23F6D3748(v1);
    sub_23F6D3748(v0);
    sub_23F77DB94(v37, type metadata accessor for TranscriptProtoASTExpr);
LABEL_9:
    sub_23F6D378C(v35, &qword_256EA25A8);
    goto LABEL_18;
  }
  sub_23F6B62DC(v1);
  sub_23F6B62DC(v0);
  v35 = sub_23F6B5164(v33, 1, v20);
  if (!v36)
    goto LABEL_9;
  sub_23F6D378C(v35, &qword_256EA25A0);
LABEL_12:
  sub_23F923B60();
  if (v36)
    v42 = v40 == v41;
  else
    v42 = 0;
  if (v42 || (sub_23F6B5280() & 1) != 0)
  {
    sub_23F9238A8();
    sub_23F878B18(v46, v5 + *(int *)(v30 + 24));
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F9235A4();
    sub_23F9237A4();
    sub_23F923C50((uint64_t)v25);
  }
LABEL_18:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoASTExprDotVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTExprDotVariant, &qword_256EB24B0, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprDotVariant);
}

unint64_t sub_23F903BF0()
{
  static TranscriptProtoASTExprDotVariant.protoMessageName.getter();
  return 0xD00000000000001CLL;
}

void sub_23F903C14()
{
  TranscriptProtoASTExprDotVariant.decodeMessage<A>(decoder:)();
}

void sub_23F903C28()
{
  TranscriptProtoASTExprDotVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F903C3C()
{
  sub_23F6D3458(&qword_256EB3CF0, type metadata accessor for TranscriptProtoASTExprDotVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprDotVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F903C90()
{
  sub_23F6D3458(&qword_256EB3760, type metadata accessor for TranscriptProtoASTExprDotVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprDotVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F903CD4()
{
  sub_23F6D3458(&qword_256EB3760, type metadata accessor for TranscriptProtoASTExprDotVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprDotVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTExprIndexVariant.protoMessageName.getter()
{
  return sub_23F6D3738(30);
}

uint64_t sub_23F903D40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1780);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1780);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "lhs";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "index";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoASTExprIndexVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1118, (uint64_t)qword_256EB1780, a1);
}

void TranscriptProtoASTExprIndexVariant.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6D3DC4();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_23F92320C();
      }
      else if (v1 == 1)
      {
        sub_23F923648();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D3710();
}

void TranscriptProtoASTExprIndexVariant.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F923460();
  sub_23F9234C0();
  if (!v0)
  {
    sub_23F9231F0();
    sub_23F903FB0(v1);
    type metadata accessor for TranscriptProtoASTExprIndexVariant(0);
    sub_23F6D37BC();
  }
  sub_23F6D3674();
}

void sub_23F903FB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTExpr(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTExprIndexVariant(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA25A0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25A0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTExpr);
    sub_23F6D3458(&qword_256EB2480, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTExpr);
  }
}

void static TranscriptProtoASTExprIndexVariant.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  sub_23F6B50E8();
  v5 = v4;
  v7 = v6;
  v8 = sub_23F6B53A4();
  v64 = *(_QWORD *)(v8 - 8);
  v65 = v8;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v63 = (uint64_t)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v20 = sub_23F923878(v12, v13, v14, v15, v16, v17, v18, v19, v62);
  type metadata accessor for TranscriptProtoASTExpr(v20);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B5420(v22, v62);
  v23 = sub_23F6916B8(&qword_256EA25A8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v24);
  v68 = (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F878DA4();
  sub_23F6B5D98();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v27);
  v66 = (char *)&v62 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F9232B0();
  MEMORY[0x24BDAC7A8](v30);
  v71 = (uint64_t)&v62 - v31;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F876D18();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F9231E0();
  MEMORY[0x24BDAC7A8](v34);
  v36 = (char *)&v62 - v35;
  v69 = v7;
  sub_23F923368(v7, (uint64_t)&v62 - v35);
  v70 = v5;
  sub_23F923368(v5, v3);
  v37 = v1 + *(int *)(v23 + 48);
  sub_23F923368((uint64_t)v36, v1);
  sub_23F923368(v3, v37);
  sub_23F9230E4(v1);
  if (v40)
  {
    sub_23F6B62DC(v3);
    sub_23F6B62DC((uint64_t)v36);
    v39 = sub_23F9230E4(v37);
    if (v40)
    {
      sub_23F923588(v39, &qword_256EA25A0);
      goto LABEL_11;
    }
LABEL_9:
    v42 = v1;
LABEL_20:
    sub_23F6B4F84(v42, &qword_256EA25A8);
    goto LABEL_21;
  }
  sub_23F923CD0(v1, v38, &qword_256EA25A0);
  sub_23F9230E4(v37);
  if (v40)
  {
    sub_23F6B64F4(v3);
    sub_23F6B64F4((uint64_t)v36);
    sub_23F713FFC(v41, type metadata accessor for TranscriptProtoASTExpr);
    goto LABEL_9;
  }
  sub_23F924664();
  static TranscriptProtoASTExpr.== infix(_:_:)();
  v37 = v43;
  sub_23F923B20((uint64_t)&qword_256EA25A0);
  sub_23F6D387C(v3);
  sub_23F6D387C((uint64_t)v36);
  sub_23F923B20(v2);
  sub_23F6D387C(v1);
  if ((v37 & 1) == 0)
    goto LABEL_21;
LABEL_11:
  v44 = type metadata accessor for TranscriptProtoASTExprIndexVariant(0);
  v45 = sub_23F924278(v44);
  v46 = v71;
  sub_23F923300(v45, v71);
  v47 = v70;
  sub_23F923300(v70 + *(int *)(v1 + 20), v0);
  v48 = v68;
  v49 = v68 + *(int *)(v23 + 48);
  sub_23F923300(v46, v68);
  sub_23F923300(v0, v49);
  sub_23F9230E4(v48);
  if (v40)
  {
    sub_23F6B6EF8(v0);
    sub_23F6B6EF8(v46);
    v51 = sub_23F9230E4(v49);
    if (v40)
    {
      sub_23F77DD64(v51, &qword_256EA25A0);
LABEL_23:
      v58 = v37 + *(int *)(v1 + 24);
      v59 = v62;
      sub_23F6D3818(v62, v58);
      v60 = v47 + *(int *)(v1 + 24);
      v61 = v63;
      sub_23F6D3818(v63, v60);
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6D37C8();
      sub_23F6D3874(v61);
      sub_23F6D3874(v59);
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  v52 = (uint64_t)v66;
  sub_23F923760(v48, v50, &qword_256EA25A0);
  sub_23F9230E4(v49);
  if (v53)
  {
    sub_23F6D3748(v0);
    sub_23F6D3748(v71);
    sub_23F77DB94(v54, type metadata accessor for TranscriptProtoASTExpr);
LABEL_19:
    v42 = v48;
    goto LABEL_20;
  }
  v55 = v67;
  sub_23F9238DC(v49);
  sub_23F9249A0();
  static TranscriptProtoASTExpr.== infix(_:_:)();
  v57 = v56;
  sub_23F6D3DAC(v55);
  sub_23F6B62DC(v0);
  sub_23F6B62DC(v71);
  sub_23F6D3DAC(v52);
  sub_23F6B62DC(v48);
  if ((v57 & 1) != 0)
    goto LABEL_23;
LABEL_21:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoASTExprIndexVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTExprIndexVariant, &qword_256EB24B8, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprIndexVariant);
}

unint64_t sub_23F904594()
{
  static TranscriptProtoASTExprIndexVariant.protoMessageName.getter();
  return 0xD00000000000001ELL;
}

void sub_23F9045B8()
{
  TranscriptProtoASTExprIndexVariant.decodeMessage<A>(decoder:)();
}

void sub_23F9045CC()
{
  TranscriptProtoASTExprIndexVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F9045E0()
{
  sub_23F6D3458(&qword_256EB3CE8, type metadata accessor for TranscriptProtoASTExprIndexVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprIndexVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F904634()
{
  sub_23F6D3458(&qword_256EB3778, type metadata accessor for TranscriptProtoASTExprIndexVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprIndexVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F904678()
{
  sub_23F6D3458(&qword_256EB3778, type metadata accessor for TranscriptProtoASTExprIndexVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprIndexVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTExprCallVariant.protoMessageName.getter()
{
  return sub_23F6D3738(29);
}

uint64_t sub_23F9046E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1798);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1798);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "fn";
  *(_QWORD *)(v7 + 8) = 2;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "parameters";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoASTExprCallVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1120, (uint64_t)qword_256EB1798, a1);
}

void TranscriptProtoASTExprCallVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F904868(a1, a2);
}

void sub_23F904868(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  sub_23F923474(a1, a2);
  while (1)
  {
    v4 = sub_23FB2D7B4();
    if (v3 || (v5 & 1) != 0)
      break;
    if (v4 == 2)
    {
      sub_23F924A8C(v2, v2);
    }
    else if (v4 == 1)
    {
      sub_23F924610();
    }
    sub_23F72E3F8();
  }
  sub_23F6D377C();
}

uint64_t sub_23F9048DC()
{
  sub_23FB2D6DC();
  type metadata accessor for TranscriptProtoASTExpr(0);
  sub_23F6D3458(&qword_256EB2480, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
  sub_23F6D3458(&qword_256EB2490, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
  return sub_23FB2D79C();
}

void TranscriptProtoASTExprCallVariant.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F923528();
  sub_23F6D36FC();
  if (!v1 || (sub_23F923258(), !v0))
  {
    sub_23F924550();
    if (!v2
      || (sub_23F923AE8(),
          sub_23F924B98(),
          sub_23F923750(&qword_256EB2480, v3, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr),
          sub_23F923750(&qword_256EB2490, v4, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr),
          sub_23F924910(),
          sub_23F923544(),
          !v0))
    {
      type metadata accessor for TranscriptProtoASTExprCallVariant(0);
      sub_23F9231A8();
    }
  }
  sub_23F6D3B40();
}

void static TranscriptProtoASTExprCallVariant.== infix(_:_:)()
{
  sub_23F8D477C();
}

uint64_t TranscriptProtoASTExprCallVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTExprCallVariant, &qword_256EB24C0, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprCallVariant);
}

unint64_t sub_23F904AAC()
{
  static TranscriptProtoASTExprCallVariant.protoMessageName.getter();
  return 0xD00000000000001DLL;
}

void sub_23F904AD0(uint64_t a1, uint64_t a2)
{
  TranscriptProtoASTExprCallVariant.decodeMessage<A>(decoder:)(a1, a2);
}

void sub_23F904AE4()
{
  TranscriptProtoASTExprCallVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F904AF8()
{
  sub_23F6D3458(&qword_256EB3CE0, type metadata accessor for TranscriptProtoASTExprCallVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprCallVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F904B4C()
{
  sub_23F6D3458(&qword_256EB3790, type metadata accessor for TranscriptProtoASTExprCallVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprCallVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F904B90()
{
  sub_23F6D3458(&qword_256EB3790, type metadata accessor for TranscriptProtoASTExprCallVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprCallVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTExprSayVariant.protoMessageName.getter()
{
  return sub_23F6D3738(28);
}

uint64_t sub_23F904BFC()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoASTExprSayVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1128, (uint64_t)&unk_256EB17B0, a1);
}

void TranscriptProtoASTExprSayVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F9062A8(a1, a2);
}

void TranscriptProtoASTExprSayVariant.traverse<A>(visitor:)()
{
  sub_23F913080();
}

void static TranscriptProtoASTExprSayVariant.== infix(_:_:)()
{
  sub_23F89AB14();
}

uint64_t TranscriptProtoASTExprSayVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTExprSayVariant, &qword_256EB24C8, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprSayVariant);
}

unint64_t sub_23F904CA0()
{
  static TranscriptProtoASTExprSayVariant.protoMessageName.getter();
  return 0xD00000000000001CLL;
}

void sub_23F904CC4()
{
  TranscriptProtoASTExprSayVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F904CD8()
{
  sub_23F6D3458(&qword_256EB3CD8, type metadata accessor for TranscriptProtoASTExprSayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprSayVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F904D2C()
{
  sub_23F6D3458(&qword_256EB37A8, type metadata accessor for TranscriptProtoASTExprSayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprSayVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F904D70()
{
  sub_23F6D3458(&qword_256EB37A8, type metadata accessor for TranscriptProtoASTExprSayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprSayVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTExprPickVariant.protoMessageName.getter()
{
  return sub_23F6D3738(29);
}

uint64_t sub_23F904DDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB17C8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB17C8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "rawEventId";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "pickType";
  *((_QWORD *)v11 + 1) = 8;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoASTExprPickVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1130, (uint64_t)qword_256EB17C8, a1);
}

void TranscriptProtoASTExprPickVariant.decodeMessage<A>(decoder:)()
{
  sub_23F90C870();
}

void TranscriptProtoASTExprPickVariant.traverse<A>(visitor:)()
{
  sub_23F90C908();
}

void sub_23F904FA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA8510);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTPickType(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTExprPickVariant(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA8510);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA8510);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTPickType);
    sub_23F6D3458(&qword_256EB32C0, type metadata accessor for TranscriptProtoASTPickType, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTPickType);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTPickType);
  }
}

void static TranscriptProtoASTExprPickVariant.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  sub_23F6B50E8();
  v45 = *(_QWORD *)(sub_23F6D35C0() - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v42);
  v9 = MEMORY[0x24BDAC7A8](v8);
  sub_23F9242D8(v9, v10, v11, v12, v13, v14, v15, v16, v42);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B5C10(v18, v42);
  v19 = sub_23F6916B8(&qword_256EB2230);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA8510);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6D3BD8();
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v42 - v24;
  sub_23F6B6754();
  v28 = v28 && v26 == v27;
  if (!v28)
  {
    v5 = 0;
    if ((sub_23F6B5280() & 1) == 0)
      goto LABEL_17;
  }
  v29 = sub_23F924AC4();
  v30 = type metadata accessor for TranscriptProtoASTExprPickVariant(v29);
  v31 = sub_23F923B3C(v30);
  sub_23F923368(v31, (uint64_t)v25);
  sub_23F923368(v1 + *(int *)(v5 + 20), v0);
  v32 = v3 + *(int *)(v19 + 48);
  sub_23F923368((uint64_t)v25, v3);
  sub_23F923368(v0, v32);
  v33 = sub_23F9230E4(v3);
  if (v28)
  {
    sub_23F6D387C(v0);
    sub_23F6D387C((uint64_t)v25);
    v35 = sub_23F9230E4(v32);
    if (v28)
    {
      sub_23F6D378C(v35, &qword_256EA8510);
LABEL_16:
      v38 = v2 + *(int *)(v5 + 24);
      v39 = v43;
      sub_23F923484(v43, v38);
      v40 = v1 + *(int *)(v5 + 24);
      v41 = v44;
      sub_23F923484(v44, v40);
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6B5624();
      sub_23F6D39FC(v41);
      sub_23F6D39FC(v39);
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  sub_23F9232A4(v33, v34, &qword_256EA8510);
  sub_23F9230E4(v32);
  if (v36)
  {
    sub_23F6D3748(v0);
    sub_23F6D3748((uint64_t)v25);
    sub_23F6D3C24(v37, type metadata accessor for TranscriptProtoASTPickType);
LABEL_14:
    sub_23F6D378C(v35, &qword_256EB2230);
    goto LABEL_17;
  }
  sub_23F923C04(v32);
  sub_23F924C20();
  sub_23F923838();
  sub_23F6D387C(v0);
  sub_23F6D387C((uint64_t)v25);
  sub_23F77E330(v4);
  sub_23F6D387C(v3);
  if ((v32 & 1) != 0)
    goto LABEL_16;
LABEL_17:
  sub_23F923FC4();
  sub_23F693DDC();
}

uint64_t TranscriptProtoASTExprPickVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTExprPickVariant, &qword_256EB24D0, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPickVariant);
}

unint64_t sub_23F9053BC()
{
  static TranscriptProtoASTExprPickVariant.protoMessageName.getter();
  return 0xD00000000000001DLL;
}

void sub_23F9053E0()
{
  TranscriptProtoASTExprPickVariant.decodeMessage<A>(decoder:)();
}

void sub_23F9053F4()
{
  TranscriptProtoASTExprPickVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F905408()
{
  sub_23F6D3458(&qword_256EB3CD0, type metadata accessor for TranscriptProtoASTExprPickVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPickVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F90545C()
{
  sub_23F6D3458(&qword_256EB37C0, type metadata accessor for TranscriptProtoASTExprPickVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPickVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F9054A0()
{
  sub_23F6D3458(&qword_256EB37C0, type metadata accessor for TranscriptProtoASTExprPickVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPickVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTExprConfirmVariant.protoMessageName.getter()
{
  return sub_23F6D3738(32);
}

uint64_t sub_23F90550C()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoASTExprConfirmVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1138, (uint64_t)&unk_256EB17E0, a1);
}

void TranscriptProtoASTExprConfirmVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F9062A8(a1, a2);
}

void TranscriptProtoASTExprConfirmVariant.traverse<A>(visitor:)()
{
  sub_23F906318();
}

void static TranscriptProtoASTExprConfirmVariant.== infix(_:_:)()
{
  sub_23F8AB6CC();
}

uint64_t TranscriptProtoASTExprConfirmVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTExprConfirmVariant, &qword_256EB24D8, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprConfirmVariant);
}

unint64_t sub_23F9055A8()
{
  static TranscriptProtoASTExprConfirmVariant.protoMessageName.getter();
  return 0xD000000000000020;
}

void sub_23F9055CC()
{
  TranscriptProtoASTExprConfirmVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F9055E0()
{
  sub_23F6D3458(&qword_256EB3CC8, type metadata accessor for TranscriptProtoASTExprConfirmVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprConfirmVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F905634()
{
  sub_23F6D3458(&qword_256EB37D8, type metadata accessor for TranscriptProtoASTExprConfirmVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprConfirmVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F905678()
{
  sub_23F6D3458(&qword_256EB37D8, type metadata accessor for TranscriptProtoASTExprConfirmVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprConfirmVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTExprUndoVariant.protoMessageName.getter()
{
  return sub_23F6D3738(29);
}

uint64_t sub_23F9056E4()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoASTExprUndoVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1140, (uint64_t)&unk_256EB17F8, a1);
}

void TranscriptProtoASTExprUndoVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F9062A8(a1, a2);
}

void TranscriptProtoASTExprUndoVariant.traverse<A>(visitor:)()
{
  sub_23F8D36A0();
}

void static TranscriptProtoASTExprUndoVariant.== infix(_:_:)()
{
  sub_23F8D89B0();
}

uint64_t TranscriptProtoASTExprUndoVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTExprUndoVariant, &qword_256EB24E0, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprUndoVariant);
}

unint64_t sub_23F905780()
{
  static TranscriptProtoASTExprUndoVariant.protoMessageName.getter();
  return 0xD00000000000001DLL;
}

void sub_23F9057A4()
{
  TranscriptProtoASTExprUndoVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F9057B8()
{
  sub_23F6D3458(&qword_256EB3CC0, type metadata accessor for TranscriptProtoASTExprUndoVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprUndoVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F90580C()
{
  sub_23F6D3458(&qword_256EB37F0, type metadata accessor for TranscriptProtoASTExprUndoVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprUndoVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F905850()
{
  sub_23F6D3458(&qword_256EB37F0, type metadata accessor for TranscriptProtoASTExprUndoVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprUndoVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTExprCancelVariant.protoMessageName.getter()
{
  return sub_23F6D3738(31);
}

uint64_t sub_23F9058BC()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoASTExprCancelVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1148, (uint64_t)&unk_256EB1810, a1);
}

void TranscriptProtoASTExprCancelVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F9062A8(a1, a2);
}

void TranscriptProtoASTExprCancelVariant.traverse<A>(visitor:)()
{
  sub_23F906318();
}

void static TranscriptProtoASTExprCancelVariant.== infix(_:_:)()
{
  sub_23F8AB6CC();
}

uint64_t TranscriptProtoASTExprCancelVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTExprCancelVariant, &qword_256EB24E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprCancelVariant);
}

unint64_t sub_23F905958()
{
  static TranscriptProtoASTExprCancelVariant.protoMessageName.getter();
  return 0xD00000000000001FLL;
}

void sub_23F90597C()
{
  TranscriptProtoASTExprCancelVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F905990()
{
  sub_23F6D3458(&qword_256EB3CB8, type metadata accessor for TranscriptProtoASTExprCancelVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprCancelVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F9059E4()
{
  sub_23F6D3458(&qword_256EB3808, type metadata accessor for TranscriptProtoASTExprCancelVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprCancelVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F905A28()
{
  sub_23F6D3458(&qword_256EB3808, type metadata accessor for TranscriptProtoASTExprCancelVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprCancelVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTExprSearchVariant.protoMessageName.getter()
{
  return sub_23F6D3738(31);
}

uint64_t sub_23F905A94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1828);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1828);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "query";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "isLowConfidenceKnowledge";
  *((_QWORD *)v11 + 1) = 24;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "pickOne";
  *((_QWORD *)v13 + 1) = 7;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoASTExprSearchVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1150, (uint64_t)qword_256EB1828, a1);
}

void TranscriptProtoASTExprSearchVariant.decodeMessage<A>(decoder:)()
{
  sub_23F905C4C();
}

void sub_23F905C4C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 3 || v1 == 2)
      {
        sub_23F6D3F00();
      }
      else if (v1 == 1)
      {
        sub_23F923334();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D3674();
}

void TranscriptProtoASTExprSearchVariant.traverse<A>(visitor:)()
{
  sub_23F905CDC();
}

void sub_23F905CDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  sub_23F6D3EA4();
  sub_23F6D36FC();
  if (!v2 || (sub_23F923258(), !v1))
  {
    sub_23F9246F4();
    if (!v3 || (sub_23F923850(), !v1))
    {
      if (*(_BYTE *)(v0 + 17) != 1 || (sub_23F923850(), !v1))
      {
        sub_23F923AF0();
        sub_23F9231A8();
      }
    }
  }
  sub_23F6D3750();
}

void static TranscriptProtoASTExprSearchVariant.== infix(_:_:)()
{
  sub_23F8F5834();
}

uint64_t TranscriptProtoASTExprSearchVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTExprSearchVariant, &qword_256EB24F0, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprSearchVariant);
}

unint64_t sub_23F905DBC()
{
  static TranscriptProtoASTExprSearchVariant.protoMessageName.getter();
  return 0xD00000000000001FLL;
}

void sub_23F905DE0()
{
  TranscriptProtoASTExprSearchVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F905DF4()
{
  sub_23F6D3458(&qword_256EB3CB0, type metadata accessor for TranscriptProtoASTExprSearchVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprSearchVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F905E48()
{
  sub_23F6D3458(&qword_256EB3820, type metadata accessor for TranscriptProtoASTExprSearchVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprSearchVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F905E8C()
{
  sub_23F6D3458(&qword_256EB3820, type metadata accessor for TranscriptProtoASTExprSearchVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprSearchVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTExprPickOneVariant.protoMessageName.getter()
{
  return sub_23F6D3738(32);
}

uint64_t sub_23F905EF8()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoASTExprPickOneVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1158, (uint64_t)&unk_256EB1840, a1);
}

void TranscriptProtoASTExprPickOneVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F9062A8(a1, a2);
}

void TranscriptProtoASTExprPickOneVariant.traverse<A>(visitor:)()
{
  sub_23F906318();
}

void static TranscriptProtoASTExprPickOneVariant.== infix(_:_:)()
{
  sub_23F8AB6CC();
}

uint64_t TranscriptProtoASTExprPickOneVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTExprPickOneVariant, &qword_256EB24F8, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPickOneVariant);
}

unint64_t sub_23F905F94()
{
  static TranscriptProtoASTExprPickOneVariant.protoMessageName.getter();
  return 0xD000000000000020;
}

void sub_23F905FB8()
{
  TranscriptProtoASTExprPickOneVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F905FCC()
{
  sub_23F6D3458(&qword_256EB3CA8, type metadata accessor for TranscriptProtoASTExprPickOneVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPickOneVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F906020()
{
  sub_23F6D3458(&qword_256EB3838, type metadata accessor for TranscriptProtoASTExprPickOneVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPickOneVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F906064()
{
  sub_23F6D3458(&qword_256EB3838, type metadata accessor for TranscriptProtoASTExprPickOneVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPickOneVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTExprNoMatchingToolVariant.protoMessageName.getter()
{
  return sub_23F6D3738(39);
}

uint64_t sub_23F9060D0(uint64_t a1)
{
  return sub_23F9187D8(a1, qword_256EB1858);
}

uint64_t static TranscriptProtoASTExprNoMatchingToolVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1160, (uint64_t)qword_256EB1858, a1);
}

uint64_t TranscriptProtoASTExprNoMatchingToolVariant.decodeMessage<A>(decoder:)()
{
  return sub_23F918844();
}

uint64_t TranscriptProtoASTExprNoMatchingToolVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant, &qword_256EB2500, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprNoMatchingToolVariant);
}

unint64_t sub_23F906130()
{
  static TranscriptProtoASTExprNoMatchingToolVariant.protoMessageName.getter();
  return 0xD000000000000027;
}

uint64_t sub_23F906154()
{
  sub_23F6D3458(&qword_256EB3CA0, type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprNoMatchingToolVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F9061A8()
{
  sub_23F6D3458(&qword_256EB3850, type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprNoMatchingToolVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F9061EC()
{
  sub_23F6D3458(&qword_256EB3850, type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprNoMatchingToolVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTExprRejectVariant.protoMessageName.getter()
{
  return sub_23F6D3738(31);
}

uint64_t sub_23F906254()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoASTExprRejectVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1168, (uint64_t)&unk_256EB1870, a1);
}

void TranscriptProtoASTExprRejectVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F9062A8(a1, a2);
}

void sub_23F9062A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_23F923474(a1, a2);
  while (1)
  {
    v3 = sub_23FB2D7B4();
    if (v2 || (v4 & 1) != 0)
      break;
    if (v3 == 1)
      sub_23F92407C();
    sub_23F72E3F8();
  }
  sub_23F6D377C();
}

void TranscriptProtoASTExprRejectVariant.traverse<A>(visitor:)()
{
  sub_23F906318();
}

void sub_23F906318()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F6D3EA4();
  sub_23F6D36FC();
  if (!v1 || (sub_23F923258(), !v0))
  {
    sub_23F923AF0();
    sub_23F9231A8();
  }
  sub_23F6D3750();
}

void static TranscriptProtoASTExprRejectVariant.== infix(_:_:)()
{
  sub_23F8AB6CC();
}

uint64_t TranscriptProtoASTExprRejectVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTExprRejectVariant, &qword_256EB2508, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprRejectVariant);
}

unint64_t sub_23F9063B4()
{
  static TranscriptProtoASTExprRejectVariant.protoMessageName.getter();
  return 0xD00000000000001FLL;
}

void sub_23F9063D8()
{
  TranscriptProtoASTExprRejectVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F9063EC()
{
  sub_23F6D3458(&qword_256EB3C98, type metadata accessor for TranscriptProtoASTExprRejectVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprRejectVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F906440()
{
  sub_23F6D3458(&qword_256EB3868, type metadata accessor for TranscriptProtoASTExprRejectVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprRejectVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F906484()
{
  sub_23F6D3458(&qword_256EB3868, type metadata accessor for TranscriptProtoASTExprRejectVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprRejectVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTExprResolveToolVariant.protoMessageName.getter()
{
  return sub_23F6D3738(36);
}

uint64_t sub_23F9064F0()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoASTExprResolveToolVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1170, (uint64_t)&unk_256EB1888, a1);
}

void TranscriptProtoASTExprResolveToolVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F9062A8(a1, a2);
}

void TranscriptProtoASTExprResolveToolVariant.traverse<A>(visitor:)()
{
  sub_23F913080();
}

void static TranscriptProtoASTExprResolveToolVariant.== infix(_:_:)()
{
  sub_23F89AB14();
}

uint64_t TranscriptProtoASTExprResolveToolVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTExprResolveToolVariant, &qword_256EB2510, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprResolveToolVariant);
}

unint64_t sub_23F906594()
{
  static TranscriptProtoASTExprResolveToolVariant.protoMessageName.getter();
  return 0xD000000000000024;
}

void sub_23F9065B8()
{
  TranscriptProtoASTExprResolveToolVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F9065CC()
{
  sub_23F6D3458(&qword_256EB3C90, type metadata accessor for TranscriptProtoASTExprResolveToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprResolveToolVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F906620()
{
  sub_23F6D3458(&qword_256EB3880, type metadata accessor for TranscriptProtoASTExprResolveToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprResolveToolVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F906664()
{
  sub_23F6D3458(&qword_256EB3880, type metadata accessor for TranscriptProtoASTExprResolveToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprResolveToolVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTExprContinuePlanningVariant.protoMessageName.getter()
{
  return sub_23F6D3738(41);
}

uint64_t sub_23F9066D0(uint64_t a1)
{
  return sub_23F9187D8(a1, qword_256EB18A0);
}

uint64_t static TranscriptProtoASTExprContinuePlanningVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1178, (uint64_t)qword_256EB18A0, a1);
}

uint64_t TranscriptProtoASTExprContinuePlanningVariant.decodeMessage<A>(decoder:)()
{
  return sub_23F918844();
}

uint64_t TranscriptProtoASTExprContinuePlanningVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant, &qword_256EB2518, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprContinuePlanningVariant);
}

unint64_t sub_23F906730()
{
  static TranscriptProtoASTExprContinuePlanningVariant.protoMessageName.getter();
  return 0xD000000000000029;
}

uint64_t sub_23F906754()
{
  sub_23F6D3458(&qword_256EB3C88, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprContinuePlanningVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F9067A8()
{
  sub_23F6D3458(&qword_256EB3898, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprContinuePlanningVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F9067EC()
{
  sub_23F6D3458(&qword_256EB3898, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprContinuePlanningVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTExprUpdateParametersVariant.protoMessageName.getter()
{
  return sub_23F6D3738(41);
}

uint64_t sub_23F906854()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB18B8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB18B8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "statementId";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "parameters";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoASTExprUpdateParametersVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1180, (uint64_t)qword_256EB18B8, a1);
}

void TranscriptProtoASTExprUpdateParametersVariant.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6D3DC4();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_23F6D3598();
        sub_23F906A3C();
      }
      else if (v1 == 1)
      {
        sub_23F92320C();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D3710();
}

uint64_t sub_23F906A3C()
{
  sub_23FB2D6DC();
  type metadata accessor for TranscriptProtoASTUpdateExpr(0);
  sub_23F6D3458(&qword_256EB2520, type metadata accessor for TranscriptProtoASTUpdateExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTUpdateExpr);
  sub_23F6D3458(&qword_256EB2528, type metadata accessor for TranscriptProtoASTUpdateExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTUpdateExpr);
  return sub_23FB2D79C();
}

void TranscriptProtoASTExprUpdateParametersVariant.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F923528();
  sub_23F924A4C();
  sub_23F6D35F4();
  sub_23F906BCC(v2);
  if (!v0)
  {
    if (*(_QWORD *)(*(_QWORD *)v1 + 16))
    {
      sub_23F923AE8();
      v3 = sub_23F924924();
      type metadata accessor for TranscriptProtoASTUpdateExpr(v3);
      sub_23F923750(&qword_256EB2520, v4, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTUpdateExpr);
      sub_23F923750(&qword_256EB2528, v5, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTUpdateExpr);
      sub_23F924910();
      sub_23F923544();
    }
    type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant(0);
    sub_23F9231A8();
  }
  sub_23F6D3B40();
}

void sub_23F906BCC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t updated;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant(0);
  sub_23F7A1EDC(a1 + *(int *)(updated + 20), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void static TranscriptProtoASTExprUpdateParametersVariant.== infix(_:_:)()
{
  sub_23F8F3650();
}

uint64_t TranscriptProtoASTExprUpdateParametersVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant, &qword_256EB2530, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprUpdateParametersVariant);
}

unint64_t sub_23F906D70()
{
  static TranscriptProtoASTExprUpdateParametersVariant.protoMessageName.getter();
  return 0xD000000000000029;
}

void sub_23F906D94()
{
  TranscriptProtoASTExprUpdateParametersVariant.decodeMessage<A>(decoder:)();
}

void sub_23F906DA8()
{
  TranscriptProtoASTExprUpdateParametersVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F906DBC()
{
  sub_23F6D3458(&qword_256EB3C80, type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprUpdateParametersVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F906E10()
{
  sub_23F6D3458(&qword_256EB38B0, type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprUpdateParametersVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F906E54()
{
  sub_23F6D3458(&qword_256EB38B0, type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprUpdateParametersVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTExprGetMentionedApps.protoMessageName.getter()
{
  return sub_23F6D3738(34);
}

uint64_t sub_23F906EC0(uint64_t a1)
{
  return sub_23F9187D8(a1, qword_256EB18D0);
}

uint64_t static TranscriptProtoASTExprGetMentionedApps._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1188, (uint64_t)qword_256EB18D0, a1);
}

uint64_t TranscriptProtoASTExprGetMentionedApps.decodeMessage<A>(decoder:)()
{
  return sub_23F918844();
}

uint64_t TranscriptProtoASTExprGetMentionedApps.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTExprGetMentionedApps, &qword_256EB2538, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprGetMentionedApps);
}

unint64_t sub_23F906F20()
{
  static TranscriptProtoASTExprGetMentionedApps.protoMessageName.getter();
  return 0xD000000000000022;
}

uint64_t sub_23F906F44()
{
  sub_23F6D3458(&qword_256EB3C78, type metadata accessor for TranscriptProtoASTExprGetMentionedApps, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprGetMentionedApps);
  return sub_23FB2D784();
}

uint64_t sub_23F906F98()
{
  sub_23F6D3458(&qword_256EB38C8, type metadata accessor for TranscriptProtoASTExprGetMentionedApps, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprGetMentionedApps);
  return sub_23FB2D8F8();
}

uint64_t sub_23F906FDC()
{
  sub_23F6D3458(&qword_256EB38C8, type metadata accessor for TranscriptProtoASTExprGetMentionedApps, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprGetMentionedApps);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoASTUpdateExpr.protoMessageName.getter()
{
  return sub_23F6D3738(24);
}

uint64_t sub_23F907044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB18E8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB18E8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "kind";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "expr";
  *((_QWORD *)v11 + 1) = 4;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoASTUpdateExpr._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1190, (uint64_t)qword_256EB18E8, a1);
}

void TranscriptProtoASTUpdateExpr.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6D3DC4();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_23F92320C();
      }
      else if (v1 == 1)
      {
        sub_23F6D3598();
        sub_23F907230();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D3710();
}

uint64_t sub_23F907230()
{
  sub_23F918AA0();
  return sub_23FB2D7FC();
}

void TranscriptProtoASTUpdateExpr.traverse<A>(visitor:)()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  sub_23F924514();
  sub_23F924218();
  if (!v1 || (sub_23F918AA0(), sub_23F923630(), !v0))
  {
    v2 = sub_23F6D3D7C();
    sub_23F907318(v2);
    if (!v0)
    {
      type metadata accessor for TranscriptProtoASTUpdateExpr(0);
      sub_23F9231A8();
    }
  }
  sub_23F6D3C00();
}

void sub_23F907318(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTExpr(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTUpdateExpr(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA25A0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25A0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTExpr);
    sub_23F6D3458(&qword_256EB2480, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoASTExpr);
  }
}

void static TranscriptProtoASTUpdateExpr.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  unsigned __int8 *v19;
  uint64_t v20;
  char *v21;
  unsigned __int8 *v22;
  unsigned __int8 *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  _QWORD v35[2];
  unsigned __int8 *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_23F6B50E8();
  v6 = v5;
  v7 = sub_23F6B53A4();
  sub_23F6B58B8();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F6B6580();
  v39 = v10;
  v11 = sub_23F923FBC();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5268();
  v13 = sub_23F6916B8(&qword_256EA25A8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA25A0);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B65E0();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6D3BD8();
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)v35 - v20;
  if (*v19 != *v18)
    goto LABEL_13;
  v35[1] = v7;
  v37 = v2;
  v38 = v0;
  v22 = v19;
  v23 = v18;
  v24 = type metadata accessor for TranscriptProtoASTUpdateExpr(0);
  v25 = *(int *)(v24 + 20);
  v35[0] = v22;
  sub_23F923300((uint64_t)&v22[v25], (uint64_t)v21);
  v26 = *(int *)(v24 + 20);
  v36 = v23;
  sub_23F923300((uint64_t)&v23[v26], v6);
  v27 = v1 + *(int *)(v13 + 48);
  sub_23F923300((uint64_t)v21, v1);
  sub_23F923300(v6, v27);
  sub_23F6B5164(v1, 1, v11);
  if (v30)
  {
    sub_23F6B62DC(v6);
    sub_23F6B62DC((uint64_t)v21);
    v29 = sub_23F6B5164(v27, 1, v11);
    if (v30)
    {
      sub_23F6D378C(v29, &qword_256EA25A0);
LABEL_12:
      v34 = v39;
      sub_23F923484(v39, v35[0] + *(int *)(v24 + 24));
      sub_23F923484(v37, (uint64_t)&v36[*(int *)(v24 + 24)]);
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6B5624();
      sub_23F923790();
      sub_23F877930(v34);
      goto LABEL_13;
    }
    goto LABEL_10;
  }
  sub_23F923760(v1, v28, &qword_256EA25A0);
  sub_23F6B5164(v27, 1, v11);
  if (v30)
  {
    sub_23F6D3748(v6);
    sub_23F6D3748((uint64_t)v21);
    sub_23F77DB94(v31, type metadata accessor for TranscriptProtoASTExpr);
LABEL_10:
    sub_23F6D378C(v29, &qword_256EA25A8);
    goto LABEL_13;
  }
  sub_23F92380C(v27, v3);
  sub_23F6D3F0C();
  static TranscriptProtoASTExpr.== infix(_:_:)();
  v33 = v32;
  sub_23F77DAB0(v3);
  sub_23F6D387C(v6);
  sub_23F6D387C((uint64_t)v21);
  sub_23F77DAB0(v4);
  sub_23F6D387C(v1);
  if ((v33 & 1) != 0)
    goto LABEL_12;
LABEL_13:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoASTUpdateExpr.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoASTUpdateExpr, &qword_256EB2528, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTUpdateExpr);
}

unint64_t sub_23F90777C()
{
  static TranscriptProtoASTUpdateExpr.protoMessageName.getter();
  return 0xD000000000000018;
}

void sub_23F9077A0()
{
  TranscriptProtoASTUpdateExpr.decodeMessage<A>(decoder:)();
}

void sub_23F9077B4()
{
  TranscriptProtoASTUpdateExpr.traverse<A>(visitor:)();
}

uint64_t sub_23F9077C8()
{
  sub_23F6D3458(&qword_256EB3C70, type metadata accessor for TranscriptProtoASTUpdateExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTUpdateExpr);
  return sub_23FB2D784();
}

uint64_t sub_23F90781C()
{
  sub_23F6D3458(&qword_256EB2520, type metadata accessor for TranscriptProtoASTUpdateExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTUpdateExpr);
  return sub_23FB2D8F8();
}

uint64_t sub_23F907860()
{
  sub_23F6D3458(&qword_256EB2520, type metadata accessor for TranscriptProtoASTUpdateExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTUpdateExpr);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoToolParameterValue.protoMessageName.getter()
{
  return sub_23F6D3738(29);
}

uint64_t sub_23F9078CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1900);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1900);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "reference";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "value";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoToolParameterValue._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1198, (uint64_t)qword_256EB1900, a1);
}

void TranscriptProtoToolParameterValue.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_23F923100();
        sub_23F907AC8();
      }
      else if (v1 == 1)
      {
        sub_23F8E33C0();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D3674();
}

void sub_23F907AC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t EnumCaseMultiPayload;
  void (*v39)(void);
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(_QWORD);
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(_QWORD);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  sub_23F6B5220();
  v4 = v3;
  v62 = v0;
  v63 = v5;
  v64 = v6;
  v8 = v7;
  v9 = sub_23F6B632C();
  v60 = *(_QWORD *)(v9 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v58 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  v13 = MEMORY[0x24BDAC7A8](v12);
  sub_23F924B48(v13, v14, v15, v16, v17, v18, v19, v20, v54);
  sub_23F6B5D98();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  v22 = sub_23F70D7F8();
  v61 = v4;
  v23 = v4(v22);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6B6618();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F6B6B3C();
  sub_23F6916B8(&qword_256EA2610);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v26);
  v59 = (uint64_t)&v54 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v54 - v29;
  v31 = v9;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v54 - v29, 1, 1, v9);
  v57 = v8;
  sub_23F923368(v8, v1);
  v32 = sub_23F77DCB8();
  v34 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v32, v33, v23);
  v35 = v34;
  v56 = v23;
  if (v34 == 1)
  {
    sub_23F6D3930(v1);
    sub_23F924830();
  }
  else
  {
    v55 = v34;
    sub_23F923444(v1, v2);
    v36 = sub_23F9249A0();
    sub_23F923444(v36, v37);
    sub_23F77E680();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if ((_DWORD)EnumCaseMultiPayload == 1)
    {
      sub_23F6B6034(EnumCaseMultiPayload, &qword_256EA2610);
      v39 = *(void (**)(void))(v60 + 32);
      sub_23F9241C0();
      v39();
      v40 = sub_23F6B6224();
      ((void (*)(uint64_t))v39)(v40);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v30, 0, 1, v31);
    }
    else
    {
      v41 = sub_23F7D2958();
      sub_23F6D3508(v41, v42);
    }
    sub_23F924830();
    v35 = v55;
  }
  sub_23F6D3458(&qword_256EA3248, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95B0], MEMORY[0x24BEB95A0]);
  sub_23F72E2E0();
  sub_23F924868();
  if (v0)
  {
    v43 = &qword_256EA2610;
    v44 = (uint64_t)v30;
LABEL_12:
    sub_23F6B4F84(v44, v43);
    goto LABEL_13;
  }
  v45 = v59;
  sub_23F7A1EDC((uint64_t)v30, v59, &qword_256EA2610);
  sub_23F6B5164(v45, 1, v31);
  if (v46)
  {
    sub_23F924BE4();
    v44 = sub_23F6B6AB8();
    goto LABEL_12;
  }
  v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v60 + 32);
  v48 = v47(v58, v45, v31);
  if (v35 != 1)
    v48 = sub_23F9245F0();
  sub_23F6B6034(v48, &qword_256EA2610);
  v49 = v57;
  sub_23F6D3930(v57);
  v47((char *)v49, (uint64_t)v58, v31);
  v50 = v56;
  swift_storeEnumTagMultiPayload();
  v51 = sub_23F9244B4();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v51, v52, v53, v50);
LABEL_13:
  sub_23F77DB18();
  sub_23F6B5100();
}

#error "23F907E00: call analysis failed (funcsize=44)"

void sub_23F907E8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_23F6916B8(&qword_256EAB768);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EAB768);
  v5 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EAB768);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_23FB2D9A0();
      swift_bridgeObjectRelease();
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoToolParameterValueEnum);
  }
  __break(1u);
}

void sub_23F907FAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD);

  sub_23F6B5220();
  sub_23F713FB4(v2, v3, v4, v5, v6);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_23F923A64();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  sub_23F923D3C();
  v10 = sub_23F924500();
  v11 = sub_23F77DCB8();
  sub_23F6B5164(v11, v12, v10);
  if (v13)
  {
    sub_23F924C08();
  }
  else
  {
    sub_23F924C14();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v0, v1, v8);
      sub_23F6D3458(&qword_256EA3248, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95B0], MEMORY[0x24BEB95A0]);
      sub_23F92410C();
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0, v8);
      sub_23F77DB18();
      sub_23F6B5100();
      return;
    }
    v14 = sub_23F6D3D70();
    sub_23F6D3508(v14, v15);
  }
  __break(1u);
}

void static TranscriptProtoToolParameterValue.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F6B50E8();
  v5 = v4;
  v39 = sub_23F6B53A4();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v39);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = sub_23F6D38F8(v9, v10, v11, v12, v13, v14, v15, v16, v40);
  type metadata accessor for TranscriptProtoToolParameterValueEnum(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B59E0();
  v19 = sub_23F6916B8(&qword_256EB2540);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6D3A70();
  v24 = MEMORY[0x24BDAC7A8](v23);
  sub_23F923124(v24, v25, v26, v27, v28, v29, v30, v31, v41);
  sub_23F923164(v5, v0);
  v32 = v1 + *(int *)(v19 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v32);
  v33 = sub_23F9230E4(v1);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v35 = sub_23F9230E4(v32);
    if (v36)
    {
      sub_23F6D378C(v35, &qword_256EAB768);
LABEL_11:
      v38 = type metadata accessor for TranscriptProtoToolParameterValue(0);
      sub_23F6D3794(v38);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v33, v34, &qword_256EAB768);
  sub_23F9230E4(v32);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v37, type metadata accessor for TranscriptProtoToolParameterValueEnum);
LABEL_9:
    sub_23F6D378C(v35, &qword_256EB2540);
    goto LABEL_12;
  }
  sub_23F923270();
  sub_23F6D3D70();
  static TranscriptProtoToolParameterValueEnum.== infix(_:_:)();
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoToolParameterValue.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoToolParameterValue, &qword_256EB2548, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolParameterValue);
}

unint64_t sub_23F9082F4()
{
  static TranscriptProtoToolParameterValue.protoMessageName.getter();
  return 0xD00000000000001DLL;
}

void sub_23F908318()
{
  TranscriptProtoToolParameterValue.decodeMessage<A>(decoder:)();
}

uint64_t sub_23F90832C()
{
  return TranscriptProtoToolParameterValue.traverse<A>(visitor:)();
}

uint64_t sub_23F908340()
{
  sub_23F6D3458(&qword_256EB3C68, type metadata accessor for TranscriptProtoToolParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolParameterValue);
  return sub_23FB2D784();
}

uint64_t sub_23F908394()
{
  sub_23F6D3458(&qword_256EB38F0, type metadata accessor for TranscriptProtoToolParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolParameterValue);
  return sub_23FB2D8F8();
}

uint64_t sub_23F9083D8()
{
  sub_23F6D3458(&qword_256EB38F0, type metadata accessor for TranscriptProtoToolParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolParameterValue);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoEntitySpanMatchResult.protoMessageName.getter()
{
  return sub_23F6D3738(32);
}

uint64_t sub_23F908444()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoEntitySpanMatchResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA11A0, (uint64_t)&unk_256EB1918, a1);
}

void TranscriptProtoEntitySpanMatchResult.decodeMessage<A>(decoder:)()
{
  sub_23F913C48();
}

void TranscriptProtoEntitySpanMatchResult.traverse<A>(visitor:)()
{
  sub_23F8B4D24();
}

void static TranscriptProtoEntitySpanMatchResult.== infix(_:_:)()
{
  sub_23F89AB14();
}

uint64_t TranscriptProtoEntitySpanMatchResult.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoEntitySpanMatchResult, &qword_256EB2550, (uint64_t)&protocol conformance descriptor for TranscriptProtoEntitySpanMatchResult);
}

unint64_t sub_23F908518()
{
  static TranscriptProtoEntitySpanMatchResult.protoMessageName.getter();
  return 0xD000000000000020;
}

void sub_23F90853C()
{
  TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant.decodeMessage<A>(decoder:)();
}

void sub_23F908550()
{
  TranscriptProtoEntitySpanMatchResult.traverse<A>(visitor:)();
}

uint64_t sub_23F908564()
{
  sub_23F6D3458(&qword_256EB3C60, type metadata accessor for TranscriptProtoEntitySpanMatchResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoEntitySpanMatchResult);
  return sub_23FB2D784();
}

uint64_t sub_23F9085B8()
{
  sub_23F6D3458(&qword_256EB3908, type metadata accessor for TranscriptProtoEntitySpanMatchResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoEntitySpanMatchResult);
  return sub_23FB2D8F8();
}

uint64_t sub_23F9085FC()
{
  sub_23F6D3458(&qword_256EB3908, type metadata accessor for TranscriptProtoEntitySpanMatchResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoEntitySpanMatchResult);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoToolRetrievalResponse.protoMessageName.getter()
{
  return sub_23F6D3738(32);
}

uint64_t sub_23F908668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1930);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1930);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F190;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "originalSubQuery";
  *(_QWORD *)(v7 + 8) = 16;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "rewrittenQuery";
  *(_QWORD *)(v11 + 8) = 14;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "confidence";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "retrievedTools";
  *((_QWORD *)v15 + 1) = 14;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "types";
  *((_QWORD *)v17 + 1) = 5;
  v17[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoToolRetrievalResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA11A8, (uint64_t)qword_256EB1930, a1);
}

void TranscriptProtoToolRetrievalResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;

  sub_23F6D3EA4();
  sub_23F6D356C();
  if (!v10)
  {
    while ((v11 & 1) == 0)
    {
      sub_23F923FB0();
      if (!(!v22 & v21))
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_23F9088C0 + 4 * byte_23FB74E05[v20]))(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10);
        return;
      }
      sub_23F6D35E8();
    }
  }
  sub_23F6D3750();
}

uint64_t sub_23F908914()
{
  type metadata accessor for ContextProtoRetrievedTool(0);
  sub_23F6D3458(&qword_256EA2E80, type metadata accessor for ContextProtoRetrievedTool, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool);
  return sub_23FB2D8A4();
}

uint64_t sub_23F908994()
{
  type metadata accessor for ContextProtoToolRetrievalType(0);
  sub_23F6D3458(&qword_256EA2E88, type metadata accessor for ContextProtoToolRetrievalType, (uint64_t)&protocol conformance descriptor for ContextProtoToolRetrievalType);
  return sub_23FB2D8A4();
}

void TranscriptProtoToolRetrievalResponse.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F6D3EA4();
  v2 = v1;
  sub_23F6D36FC();
  if (!v3 || (sub_23F6D376C(), (v2 = v1) == 0))
  {
    sub_23F6D36FC();
    if (!v4 || (sub_23F6D376C(), (v2 = v1) == 0))
    {
      if (*(float *)(v0 + 32) == 0.0 || (v1 = v2, sub_23FB2D964(), !v2))
      {
        if (!*(_QWORD *)(*(_QWORD *)(v0 + 40) + 16)
          || (type metadata accessor for ContextProtoRetrievedTool(0),
              sub_23F6D3458(&qword_256EA2E80, type metadata accessor for ContextProtoRetrievedTool, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool), sub_23F6D36E4(), !v1))
        {
          if (!*(_QWORD *)(*(_QWORD *)(v0 + 48) + 16)
            || (type metadata accessor for ContextProtoToolRetrievalType(0),
                sub_23F6D3458(&qword_256EA2E88, type metadata accessor for ContextProtoToolRetrievalType, (uint64_t)&protocol conformance descriptor for ContextProtoToolRetrievalType), sub_23F6D36E4(), !v1))
          {
            type metadata accessor for TranscriptProtoToolRetrievalResponse(0);
            sub_23F9233EC();
          }
        }
      }
    }
  }
  sub_23F6D3750();
}

#error "23F908BF4: call analysis failed (funcsize=60)"

uint64_t TranscriptProtoToolRetrievalResponse.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoToolRetrievalResponse, &qword_256EB2558, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolRetrievalResponse);
}

unint64_t sub_23F908C88()
{
  static TranscriptProtoToolRetrievalResponse.protoMessageName.getter();
  return 0xD000000000000020;
}

void sub_23F908CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  TranscriptProtoToolRetrievalResponse.decodeMessage<A>(decoder:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F908CC0()
{
  TranscriptProtoToolRetrievalResponse.traverse<A>(visitor:)();
}

uint64_t sub_23F908CD4()
{
  sub_23F6D3458(&qword_256EB3C58, type metadata accessor for TranscriptProtoToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolRetrievalResponse);
  return sub_23FB2D784();
}

uint64_t sub_23F908D28()
{
  sub_23F6D3458(&qword_256EB3920, type metadata accessor for TranscriptProtoToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolRetrievalResponse);
  return sub_23FB2D8F8();
}

uint64_t sub_23F908D6C()
{
  sub_23F6D3458(&qword_256EB3920, type metadata accessor for TranscriptProtoToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolRetrievalResponse);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoSystemResponse.protoMessageName.getter()
{
  return sub_23F6D3738(25);
}

uint64_t sub_23F908DD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1948);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1948);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1B0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "actionEventId";
  *(_QWORD *)(v7 + 8) = 13;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "toolId";
  *(_QWORD *)(v11 + 8) = 6;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "outcome";
  *((_QWORD *)v13 + 1) = 7;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 5;
  *(_QWORD *)v15 = "responseOutput";
  *((_QWORD *)v15 + 1) = 14;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 6;
  *(_QWORD *)v17 = "statementId";
  *((_QWORD *)v17 + 1) = 11;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 7;
  *(_QWORD *)v19 = "clientQueryId";
  *((_QWORD *)v19 + 1) = 13;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 8;
  *(_QWORD *)v21 = "interpretedStatementResults";
  *((_QWORD *)v21 + 1) = 27;
  v21[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoSystemResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA11B0, (uint64_t)qword_256EB1948, a1);
}

void TranscriptProtoSystemResponse.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          sub_23F6D37D4();
          break;
        case 2:
          sub_23F923334();
          break;
        case 3:
          sub_23F9233D4();
          sub_23F89883C();
          break;
        case 5:
          sub_23F9233D4();
          sub_23F89DCE4();
          break;
        case 6:
          sub_23F9233D4();
          sub_23F8A092C();
          break;
        case 7:
          sub_23F924454();
          break;
        case 8:
          sub_23F6D3598();
          sub_23F8B4908();
          break;
        default:
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoSystemResponse.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;

  sub_23F6D3DC4();
  v1 = sub_23F923F20();
  sub_23F90E71C(v1);
  if (!v0)
  {
    sub_23F6D36FC();
    if (v2)
      sub_23F6D376C();
    sub_23F6D3664();
    sub_23F9092C0(v3);
    sub_23F6D3664();
    sub_23F909430(v4);
    sub_23F6D3664();
    sub_23F8A0B2C();
    sub_23F6D3664();
    sub_23F9095A0(v5, v6, v7, v8, v9);
    sub_23F924890();
    if (v10)
    {
      type metadata accessor for TranscriptProtoInterpretedStatementResult(0);
      sub_23F6D3458(&qword_256EB2560, type metadata accessor for TranscriptProtoInterpretedStatementResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoInterpretedStatementResult);
      sub_23F6D36E4();
    }
    type metadata accessor for TranscriptProtoSystemResponse(0);
    sub_23F6D37BC();
  }
  sub_23F6D3710();
}

void sub_23F9092C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA7E70);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoSystemResponse(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 28), (uint64_t)v4, &qword_256EA7E70);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA7E70);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementOutcome);
    sub_23F6D3458(&qword_256EA7F00, type metadata accessor for TranscriptProtoStatementOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementOutcome);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementOutcome);
  }
}

void sub_23F909430(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2570);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoResponseOutput(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoSystemResponse(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 32), (uint64_t)v4, &qword_256EB2570);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2570);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoResponseOutput);
    sub_23F6D3458(&qword_256EB2E90, type metadata accessor for TranscriptProtoResponseOutput, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseOutput);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoResponseOutput);
  }
}

void sub_23F9095A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  if (*(_QWORD *)(a1 + *(int *)(sub_23F923990(a1, a2, a3, a4, a5) + 40) + 8))
    sub_23F923258();
  sub_23F6D3674();
}

void static TranscriptProtoSystemResponse.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  char v45;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  char v65;
  char v66;
  int *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;

  sub_23F6B50E8();
  v6 = v5;
  v8 = v7;
  v9 = sub_23F6B53A4();
  v121 = *(_QWORD *)(v9 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v120 = (uint64_t)&v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v12);
  v119 = (uint64_t)&v114 - v13;
  v128 = sub_23F923344();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B5544(v15, (uint64_t)v114);
  v125 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B57F4(v17, (uint64_t)v114);
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  v123 = (uint64_t)&v114 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v20);
  v126 = (uint64_t)&v114 - v21;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v22);
  v127 = (uint64_t)&v114 - v23;
  v24 = sub_23F6D398C();
  v134 = type metadata accessor for TranscriptProtoResponseOutput(v24);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F6B57A0(v26, (uint64_t)v114);
  v131 = sub_23F6916B8(&qword_256EB2568);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F6B573C();
  sub_23F6916B8(&qword_256EB2570);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v28);
  v130 = (char *)&v114 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v30);
  v132 = (uint64_t)&v114 - v31;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v32);
  v133 = (uint64_t)&v114 - v33;
  v34 = sub_23F924124();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F693EB0();
  v36 = sub_23F6916B8(&qword_256EA7E68);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F6B5298();
  sub_23F6916B8(&qword_256EA7E70);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F72E168();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F77E490();
  v42 = v8[4];
  v43 = v41[4];
  if (!v42)
  {
    v118 = v9;
    if (v43)
      goto LABEL_45;
LABEL_10:
    if (*v8 != *v41 || v8[1] != v41[1])
    {
      v47 = sub_23F924B04();
      v41 = (_QWORD *)v9;
      if ((v47 & 1) == 0)
        goto LABEL_45;
    }
    v117 = v4;
    v48 = (uint64_t)v8;
    v49 = (uint64_t)v41;
    v50 = type metadata accessor for TranscriptProtoSystemResponse(0);
    v51 = *(int *)(v50 + 28);
    v115 = v48;
    sub_23F923848(v48 + v51, v6);
    v114 = (int *)v50;
    v52 = *(int *)(v50 + 28);
    v116 = v49;
    sub_23F923848(v49 + v52, v3);
    v53 = v0 + *(int *)(v36 + 48);
    v54 = sub_23F924C14();
    sub_23F923848(v54, v55);
    v56 = sub_23F8790C8();
    sub_23F923848(v56, v57);
    sub_23F6B5164(v0, 1, v34);
    if (v44)
    {
      sub_23F6B62DC(v3);
      sub_23F6B62DC(v6);
      v59 = sub_23F6B5164(v53, 1, v34);
      v60 = v117;
      if (v44)
      {
        sub_23F77E660(v59, &qword_256EA7E70);
        goto LABEL_25;
      }
    }
    else
    {
      sub_23F923BFC(v0, v58, &qword_256EA7E70);
      sub_23F6B5164(v53, 1, v34);
      v60 = v117;
      if (!v61)
      {
        sub_23F923774(v53, v1);
        sub_23F72E3F8();
        static TranscriptProtoStatementOutcome.== infix(_:_:)();
        v66 = v65;
        sub_23F77DB60(v1);
        sub_23F6B62DC(v3);
        sub_23F6B62DC(v6);
        sub_23F77DB60(v2);
        sub_23F6B62DC(v0);
        if ((v66 & 1) == 0)
          goto LABEL_45;
LABEL_25:
        v67 = v114;
        v68 = v133;
        sub_23F92332C(v115 + v114[8], v133);
        v69 = v132;
        sub_23F92332C(v116 + v67[8], v132);
        v70 = v60 + *(int *)(v131 + 48);
        sub_23F92332C(v68, v60);
        sub_23F92332C(v69, v70);
        v71 = sub_23F6B6468();
        v72 = v134;
        sub_23F6B5164(v71, v73, v134);
        if (v44)
        {
          sub_23F6D3748(v69);
          sub_23F6D3748(v68);
          v75 = sub_23F6B5164(v70, 1, v72);
          if (v44)
          {
            sub_23F6B6034(v75, &qword_256EB2570);
LABEL_35:
            v81 = v127;
            sub_23F923268(v115 + v67[9], v127);
            v82 = v126;
            sub_23F923268(v116 + v67[9], v126);
            v83 = v129;
            v84 = v129 + *(int *)(v125 + 48);
            sub_23F923268(v81, v129);
            sub_23F923268(v82, v84);
            v85 = sub_23F923D00();
            v86 = v128;
            sub_23F6B5164(v85, v87, v128);
            if (v44)
            {
              sub_23F6D3748(v82);
              sub_23F6D3748(v81);
              v89 = sub_23F6B5164(v84, 1, v86);
              if (v44)
              {
                sub_23F923588(v89, &qword_256EA25E0);
                goto LABEL_47;
              }
            }
            else
            {
              v90 = v123;
              sub_23F923CD0(v83, v88, &qword_256EA25E0);
              sub_23F6B5164(v84, 1, v86);
              if (!v91)
              {
                v93 = v122;
                sub_23F7F6534(v84, v122);
                sub_23F923C58();
                v95 = v94;
                sub_23F6D38A0(v93);
                sub_23F6B6EF8(v82);
                sub_23F6B6EF8(v81);
                sub_23F6D38A0(v90);
                sub_23F6B6EF8(v83);
                if ((v95 & 1) == 0)
                  goto LABEL_45;
LABEL_47:
                v96 = v115;
                sub_23F924258();
                if (v105)
                {
                  if (!v98)
                    goto LABEL_45;
                  sub_23F6D3998(v103);
                  if (!v44 || v106 != v98)
                  {
                    v108 = sub_23F6B5280();
                    v104 = v116;
                    if ((v108 & 1) == 0)
                      goto LABEL_45;
                  }
                }
                else if (v98)
                {
                  goto LABEL_45;
                }
                v109 = v104;
                sub_23F6972AC(*(_QWORD *)(v96 + 16), *(_QWORD *)(v104 + 16), v97, v98, v99, v100, v101, v102, (uint64_t)v114, v115, v116, v117, v118, v119, v120, v121, v122, v123, v124,
                  v125);
                if ((v110 & 1) != 0)
                {
                  v111 = v119;
                  sub_23F923484(v119, v96 + v67[11]);
                  v112 = v109 + v67[11];
                  v113 = v120;
                  sub_23F923484(v120, v112);
                  sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
                  sub_23F6B5624();
                  sub_23F6D39FC(v113);
                  sub_23F6D39FC(v111);
                }
                goto LABEL_45;
              }
              sub_23F6B64F4(v82);
              sub_23F6B64F4(v81);
              sub_23F713FFC(v92, type metadata accessor for TranscriptProtoStatementID);
            }
            v63 = &qword_256EA25E8;
            v64 = v83;
LABEL_44:
            sub_23F6B4F84(v64, v63);
            goto LABEL_45;
          }
        }
        else
        {
          v76 = (uint64_t)v130;
          sub_23F924BC4(v60, v74, &qword_256EB2570);
          sub_23F6B5164(v70, 1, v72);
          if (!v77)
          {
            v78 = v124;
            sub_23F7F6534(v70, v124);
            sub_23F78F478();
            static TranscriptProtoResponseOutput.== infix(_:_:)();
            v80 = v79;
            sub_23F6D38A0(v78);
            sub_23F6B6EF8(v69);
            sub_23F6B6EF8(v68);
            sub_23F6D38A0(v76);
            sub_23F6B6EF8(v60);
            if ((v80 & 1) == 0)
              goto LABEL_45;
            goto LABEL_35;
          }
          sub_23F6B64F4(v69);
          sub_23F6B64F4(v68);
          sub_23F6D3508(v76, type metadata accessor for TranscriptProtoResponseOutput);
        }
        v63 = &qword_256EB2568;
        v64 = v60;
        goto LABEL_44;
      }
      sub_23F6D3748(v3);
      sub_23F6D3748(v6);
      sub_23F7E7834(v62, type metadata accessor for TranscriptProtoStatementOutcome);
    }
    v63 = &qword_256EA7E68;
    v64 = v0;
    goto LABEL_44;
  }
  if (v43)
  {
    v118 = v9;
    v44 = v8[3] == v41[3] && v42 == v43;
    if (v44)
      goto LABEL_10;
    v45 = sub_23F924B04();
    v41 = (_QWORD *)v9;
    v9 = 0;
    if ((v45 & 1) != 0)
      goto LABEL_10;
  }
LABEL_45:
  sub_23F693DDC();
}

uint64_t TranscriptProtoSystemResponse.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoSystemResponse, &qword_256EB2578, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemResponse);
}

unint64_t sub_23F909DE4()
{
  static TranscriptProtoSystemResponse.protoMessageName.getter();
  return 0xD000000000000019;
}

void sub_23F909E08()
{
  TranscriptProtoSystemResponse.decodeMessage<A>(decoder:)();
}

void sub_23F909E1C()
{
  TranscriptProtoSystemResponse.traverse<A>(visitor:)();
}

uint64_t sub_23F909E30()
{
  sub_23F6D3458(&qword_256EB3C50, type metadata accessor for TranscriptProtoSystemResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemResponse);
  return sub_23FB2D784();
}

uint64_t sub_23F909E84()
{
  sub_23F6D3458(&qword_256EB3938, type metadata accessor for TranscriptProtoSystemResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemResponse);
  return sub_23FB2D8F8();
}

uint64_t sub_23F909EC8()
{
  sub_23F6D3458(&qword_256EB3938, type metadata accessor for TranscriptProtoSystemResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemResponse);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoInterpretedStatementResult.protoMessageName.getter()
{
  return sub_23F6D3738(37);
}

uint64_t sub_23F909F34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1960);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1960);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1E0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "outcome";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "resultStatementId";
  *(_QWORD *)(v11 + 8) = 17;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "originProgramStatementId";
  *((_QWORD *)v13 + 1) = 24;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "actionEventId";
  *((_QWORD *)v15 + 1) = 13;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "toolId";
  *((_QWORD *)v17 + 1) = 6;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "originTaskStatementId";
  *((_QWORD *)v19 + 1) = 21;
  v19[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoInterpretedStatementResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA11B8, (uint64_t)qword_256EB1960, a1);
}

void TranscriptProtoInterpretedStatementResult.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;

  sub_23F6B5220();
  sub_23F6D356C();
  if (!v12)
  {
    while ((v13 & 1) == 0)
    {
      sub_23F9249AC();
      if (!(!v24 & v23))
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_23F90A1E4 + 4 * byte_23FB74E12[v22]))(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10, a11, a12);
        return;
      }
      sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void sub_23F90A258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  sub_23F6D3B5C(a1, a2, a3, a4, a5);
  sub_23F6D37D4();
  sub_23F6D377C();
}

void TranscriptProtoInterpretedStatementResult.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);

  sub_23F923460();
  sub_23F9234C0();
  if (!v0)
  {
    sub_23F9231F0();
    sub_23F90A37C(v1);
    sub_23F9231F0();
    sub_23F90A4EC(v2);
    v3 = sub_23F6D3684();
    sub_23F916BE0(v3, v4, v5, v6, v7);
    v8 = sub_23F6D3684();
    sub_23F90A65C(v8, v9, v10, v11, v12);
    sub_23F924044();
    type metadata accessor for TranscriptProtoInterpretedStatementResult(0);
    sub_23F6D37BC();
  }
  sub_23F6D3674();
}

void sub_23F90A37C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoInterpretedStatementResult(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void sub_23F90A4EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoInterpretedStatementResult(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void sub_23F90A65C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  if (*(_QWORD *)(a1 + *(int *)(sub_23F923990(a1, a2, a3, a4, a5) + 32) + 8))
    sub_23F923258();
  sub_23F6D3674();
}

void static TranscriptProtoInterpretedStatementResult.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  char v55;
  char v56;
  int *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  BOOL v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  int *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;

  sub_23F6B50E8();
  v6 = v5;
  v8 = v7;
  v9 = sub_23F6B53A4();
  v128 = *(_QWORD *)(v9 - 8);
  v129 = v9;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F693E0C();
  v127 = v11;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v12);
  v126 = (uint64_t)&v124 - v13;
  v143 = sub_23F923344();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B582C(v15, v124);
  v144 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  v132 = (uint64_t *)((char *)&v124 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v18);
  v136 = (uint64_t)&v124 - v19;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v20);
  v140 = (uint64_t)&v124 - v21;
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v22);
  v130 = (char *)&v124 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F6D3D14();
  v131 = v25;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v26);
  v133 = (uint64_t)&v124 - v27;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v28);
  v134 = (char *)&v124 - v29;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v30);
  v141 = (char *)&v124 - v31;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v32);
  v142 = (char *)&v124 - v33;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v34);
  v137 = (char *)&v124 - v35;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v36);
  v138 = (uint64_t)&v124 - v37;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v38);
  v139 = (uint64_t)&v124 - v39;
  sub_23F924124();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F6B5268();
  v41 = sub_23F6916B8(&qword_256EA7E68);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F6B5298();
  sub_23F878A54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v43);
  sub_23F9233F4();
  MEMORY[0x24BDAC7A8](v44);
  sub_23F6D3F60();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F6B6B3C();
  v145 = v8;
  sub_23F9234DC(v8, v4);
  v146 = v6;
  v46 = sub_23F77E680();
  sub_23F9234DC(v46, v47);
  v48 = v0 + *(int *)(v41 + 48);
  sub_23F9234DC(v4, v0);
  sub_23F9234DC(v1, v48);
  sub_23F9230E4(v0);
  if (v51)
  {
    sub_23F6B6EF8(v1);
    sub_23F6B6EF8(v4);
    v50 = sub_23F9230E4(v48);
    if (v51)
    {
      sub_23F77E660(v50, &qword_256EA7E70);
      goto LABEL_11;
    }
LABEL_9:
    v53 = &qword_256EA7E68;
    v54 = v0;
LABEL_30:
    sub_23F6B4F84(v54, v53);
    goto LABEL_31;
  }
  sub_23F924698(v0, v49, &qword_256EA7E70);
  sub_23F9230E4(v48);
  if (v51)
  {
    sub_23F6D3C1C(v1);
    sub_23F6D3C1C(v4);
    sub_23F924AF4(v52, type metadata accessor for TranscriptProtoStatementOutcome);
    goto LABEL_9;
  }
  sub_23F7E76D0(v48, v3, type metadata accessor for TranscriptProtoStatementOutcome);
  static TranscriptProtoStatementOutcome.== infix(_:_:)();
  v56 = v55;
  sub_23F6D3508(v3, type metadata accessor for TranscriptProtoStatementOutcome);
  sub_23F6D38A8(v1);
  sub_23F6D38A8(v4);
  sub_23F6D3508(v2, type metadata accessor for TranscriptProtoStatementOutcome);
  sub_23F6D38A8(v0);
  if ((v56 & 1) == 0)
    goto LABEL_31;
LABEL_11:
  v57 = (int *)type metadata accessor for TranscriptProtoInterpretedStatementResult(0);
  v58 = sub_23F92489C(v57[5]);
  v59 = v139;
  sub_23F923268(v58, v139);
  v60 = sub_23F923B30(v57[5]);
  v61 = v138;
  sub_23F923268(v60, v138);
  sub_23F924ADC();
  v62 = v140;
  v64 = v140 + v63;
  sub_23F923268(v59, v140);
  sub_23F923268(v61, v64);
  v65 = sub_23F6B6F68();
  v66 = v143;
  sub_23F6B5164(v65, v67, v143);
  if (v51)
  {
    sub_23F6D3748(v61);
    sub_23F6D3748(v59);
    v69 = sub_23F6B5164(v64, 1, v66);
    v71 = (uint64_t)v141;
    v70 = (uint64_t)v142;
    if (v51)
    {
      sub_23F9239A0(v69, &qword_256EA25E0);
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  v72 = (uint64_t)v137;
  sub_23F923E34(v62, v68, &qword_256EA25E0);
  sub_23F6B5164(v64, 1, v66);
  v71 = (uint64_t)v141;
  v70 = (uint64_t)v142;
  if (v73)
  {
    sub_23F6B64F4(v61);
    sub_23F6B64F4(v59);
    sub_23F78F204(v74, type metadata accessor for TranscriptProtoStatementID);
LABEL_19:
    v53 = &qword_256EA25E8;
    v54 = v62;
    goto LABEL_30;
  }
  v125 = v57;
  v75 = v62;
  v76 = v135;
  sub_23F923774(v64, v135);
  sub_23F923C58();
  v78 = v77;
  sub_23F77DB60(v76);
  sub_23F6B6EF8(v61);
  sub_23F6B6EF8(v59);
  sub_23F77DB60(v72);
  v79 = v75;
  v57 = v125;
  sub_23F6B6EF8(v79);
  if ((v78 & 1) == 0)
    goto LABEL_31;
LABEL_21:
  v80 = sub_23F92489C(v57[6]);
  sub_23F923268(v80, v70);
  v81 = sub_23F923B30(v57[6]);
  sub_23F923268(v81, v71);
  sub_23F924ADC();
  v82 = v136;
  v84 = v136 + v83;
  sub_23F923268(v70, v136);
  sub_23F923268(v71, v84);
  sub_23F6B5164(v82, 1, v66);
  if (v51)
  {
    sub_23F6D3748(v71);
    sub_23F6D3748(v70);
    v86 = sub_23F6B5164(v84, 1, v66);
    if (v51)
    {
      sub_23F923588(v86, &qword_256EA25E0);
      goto LABEL_33;
    }
    goto LABEL_29;
  }
  v87 = (uint64_t)v134;
  sub_23F923E34(v82, v85, &qword_256EA25E0);
  sub_23F6B5164(v84, 1, v66);
  if (v88)
  {
    sub_23F6B64F4(v71);
    sub_23F6B64F4(v70);
    sub_23F78F204(v89, type metadata accessor for TranscriptProtoStatementID);
LABEL_29:
    v53 = &qword_256EA25E8;
    v54 = v82;
    goto LABEL_30;
  }
  v90 = v135;
  sub_23F92380C(v84, v135);
  sub_23F923C58();
  v92 = v91;
  sub_23F77DAB0(v90);
  sub_23F6B6EF8(v71);
  sub_23F6B6EF8(v70);
  sub_23F77DAB0(v87);
  sub_23F6B6EF8(v82);
  if ((v92 & 1) == 0)
    goto LABEL_31;
LABEL_33:
  sub_23F924258();
  if (v95)
  {
    if (!v93)
      goto LABEL_31;
    sub_23F6D3998(v94);
    v98 = v51 && v96 == v97;
    v99 = v133;
    if (!v98 && (sub_23F6B5280() & 1) == 0)
      goto LABEL_31;
  }
  else
  {
    v99 = v133;
    if (v93)
      goto LABEL_31;
  }
  sub_23F924258();
  if (v102)
  {
    if (!v100)
      goto LABEL_31;
    sub_23F6D3998(v101);
    v105 = v51 && v103 == v104;
    if (!v105 && (sub_23F6B5280() & 1) == 0)
      goto LABEL_31;
  }
  else if (v100)
  {
    goto LABEL_31;
  }
  v106 = sub_23F92489C(v57[9]);
  v107 = &qword_256EA25E0;
  sub_23F923268(v106, v99);
  v108 = sub_23F923B30(v57[9]);
  v109 = v131;
  sub_23F923268(v108, v131);
  sub_23F924ADC();
  v110 = (uint64_t)v132;
  v112 = (uint64_t)v132 + v111;
  sub_23F923268(v99, (uint64_t)v132);
  sub_23F924948(v109);
  sub_23F6B5164(v110, 1, v66);
  if (v51)
  {
    sub_23F6D3748(v109);
    v114 = sub_23F6B69B8();
    v107 = v132;
    sub_23F6B4F84(v114, v115);
    v116 = sub_23F6B5164(v112, 1, v66);
    if (v51)
    {
      sub_23F77DC10(v116, &qword_256EA25E0);
LABEL_61:
      v123 = v126;
      sub_23F6D3818(v126, v145 + v57[10]);
      sub_23F6D3818(v127, v146 + v57[10]);
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F923230();
      sub_23F9232DC();
      sub_23F6D3874(v123);
      goto LABEL_31;
    }
    goto LABEL_59;
  }
  v117 = (uint64_t)v130;
  sub_23F923A50((uint64_t)&qword_256EA25E0, v113, &qword_256EA25E0);
  sub_23F6B5164(v112, 1, v66);
  if (v118)
  {
    sub_23F6B64F4(v131);
    sub_23F6B64F4(v133);
    sub_23F6D3D20(v119, type metadata accessor for TranscriptProtoStatementID);
LABEL_59:
    v53 = &qword_256EA25E8;
    v54 = (uint64_t)v107;
    goto LABEL_30;
  }
  v120 = v135;
  sub_23F7F6534(v112, v135);
  sub_23F923C58();
  v122 = v121;
  sub_23F6D38A0(v120);
  sub_23F6B6EF8(v131);
  sub_23F6B6EF8(v133);
  sub_23F6D38A0(v117);
  sub_23F6B6EF8((uint64_t)&qword_256EA25E0);
  if ((v122 & 1) != 0)
    goto LABEL_61;
LABEL_31:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoInterpretedStatementResult.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoInterpretedStatementResult, &qword_256EB2580, (uint64_t)&protocol conformance descriptor for TranscriptProtoInterpretedStatementResult);
}

unint64_t sub_23F90AF98()
{
  static TranscriptProtoInterpretedStatementResult.protoMessageName.getter();
  return 0xD000000000000025;
}

#error "23F90AFC4: call analysis failed (funcsize=5)"

void sub_23F90AFD0()
{
  TranscriptProtoInterpretedStatementResult.traverse<A>(visitor:)();
}

uint64_t sub_23F90AFE4()
{
  sub_23F6D3458(&qword_256EB3C48, type metadata accessor for TranscriptProtoInterpretedStatementResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoInterpretedStatementResult);
  return sub_23FB2D784();
}

uint64_t sub_23F90B038()
{
  sub_23F6D3458(&qword_256EB2560, type metadata accessor for TranscriptProtoInterpretedStatementResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoInterpretedStatementResult);
  return sub_23FB2D8F8();
}

uint64_t sub_23F90B07C()
{
  sub_23F6D3458(&qword_256EB2560, type metadata accessor for TranscriptProtoInterpretedStatementResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoInterpretedStatementResult);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoProgramStatement.protoMessageName.getter()
{
  return sub_23F6D3738(27);
}

uint64_t sub_23F90B0E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1978);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1978);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "id";
  *(_QWORD *)(v7 + 8) = 2;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 4;
  *(_QWORD *)v11 = "expression";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "targetType";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoProgramStatement._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA11C0, (uint64_t)qword_256EB1978, a1);
}

void TranscriptProtoProgramStatement.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 4:
          sub_23F6D38E0();
          sub_23F88FD7C();
          break;
        case 3:
          sub_23F6D38E0();
          sub_23F88FDAC();
          break;
        case 1:
          sub_23F6CEB4C();
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoProgramStatement.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F923460();
  sub_23F9234C0();
  if (!v0)
  {
    sub_23F9231F0();
    sub_23F90B414(v1, v2, v3, v4);
    sub_23F9231F0();
    sub_23F90B588(v5);
    type metadata accessor for TranscriptProtoProgramStatement(0);
    sub_23F6D37BC();
  }
  sub_23F6D3674();
}

void sub_23F90B414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v13[2];

  v13[1] = a4;
  v5 = sub_23F6916B8(&qword_256EA2E00);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23FB2EB28();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoProgramStatement(0);
  sub_23F7A1EDC(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256EA2E00);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v7, &qword_256EA2E00);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    sub_23F6D3458(&qword_256EA3278, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95D8], MEMORY[0x24BEB95D0]);
    sub_23FB2D9D0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

void sub_23F90B588(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA8578);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoProgramStatement(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA8578);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA8578);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoExpression);
    sub_23F6D3458(&qword_256EB3418, type metadata accessor for TranscriptProtoExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoExpression);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoExpression);
  }
}

void static TranscriptProtoProgramStatement.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  char v49;
  char v50;
  int *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;

  sub_23F6B50E8();
  v6 = v5;
  v8 = v7;
  v9 = sub_23F6B53A4();
  v89 = *(_QWORD *)(v9 - 8);
  v90 = v9;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v10);
  v88 = (uint64_t)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v12);
  v87 = (uint64_t)&v86 - v13;
  v96 = sub_23FB2EB28();
  v91 = *(_QWORD *)(v96 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F70D7DC(v15, v86);
  v94 = sub_23F6916B8(&qword_256EA2DF8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B582C(v17, v86);
  sub_23F6916B8(&qword_256EA2E00);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  v93 = (char *)&v86 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v20);
  v104 = (uint64_t)&v86 - v21;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v22);
  v103 = (char *)&v86 - v23;
  v24 = sub_23F6D398C();
  v99 = type metadata accessor for TranscriptProtoExpression(v24);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F6B5848(v26, v86);
  v98 = sub_23F6916B8(&qword_256EB2588);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F6B57BC(v28, v86);
  sub_23F6916B8(&qword_256EA8578);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v29);
  v97 = (char *)&v86 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v31);
  v105 = (uint64_t)&v86 - v32;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v33);
  v106 = (uint64_t)&v86 - v34;
  v35 = sub_23F923344();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F6B6B5C();
  v37 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F6B53AC();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F6B6618();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F77E490();
  v101 = v8;
  sub_23F923164(v8, v4);
  v102 = v6;
  sub_23F923164(v6, v3);
  v42 = v2 + *(int *)(v37 + 48);
  sub_23F923164(v4, v2);
  sub_23F923164(v3, v42);
  sub_23F6B5164(v2, 1, v35);
  if (v45)
  {
    sub_23F6B64F4(v3);
    sub_23F6B64F4(v4);
    v44 = sub_23F6B5164(v42, 1, v35);
    if (v45)
    {
      sub_23F6B6034(v44, &qword_256EA25E0);
      goto LABEL_11;
    }
LABEL_9:
    v47 = &qword_256EA25E8;
    v48 = v2;
LABEL_30:
    sub_23F6B4F84(v48, v47);
    goto LABEL_31;
  }
  sub_23F923CD0(v2, v43, &qword_256EA25E0);
  sub_23F6B5164(v42, 1, v35);
  if (v45)
  {
    sub_23F6B64F4(v3);
    sub_23F6B64F4(v4);
    sub_23F713FFC(v46, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_9;
  }
  sub_23F923444(v42, v0);
  sub_23F923C58();
  v50 = v49;
  sub_23F6D3928(v0);
  sub_23F6B6EF8(v3);
  sub_23F6B6EF8(v4);
  sub_23F6D3928(v1);
  sub_23F6B6EF8(v2);
  if ((v50 & 1) == 0)
    goto LABEL_31;
LABEL_11:
  v51 = (int *)type metadata accessor for TranscriptProtoProgramStatement(0);
  v52 = v101;
  v53 = v106;
  sub_23F923164(v101 + v51[5], v106);
  v54 = v102;
  v55 = v105;
  sub_23F923164(v102 + v51[5], v105);
  v56 = v100;
  v57 = v100 + *(int *)(v98 + 48);
  v58 = sub_23F6B6F9C();
  sub_23F923164(v58, v59);
  sub_23F923164(v55, v57);
  v60 = v99;
  sub_23F6B5164(v56, 1, v99);
  if (v45)
  {
    sub_23F6B64F4(v55);
    sub_23F6B64F4(v53);
    v62 = sub_23F6B5164(v57, 1, v60);
    v63 = (uint64_t)v103;
    v64 = v104;
    if (v45)
    {
      sub_23F77DC10(v62, &qword_256EA8578);
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  v65 = (uint64_t)v97;
  sub_23F923760(v56, v61, &qword_256EA8578);
  sub_23F6B5164(v57, 1, v60);
  v63 = (uint64_t)v103;
  v64 = v104;
  if (v66)
  {
    sub_23F6B64F4(v105);
    sub_23F6B64F4(v106);
    sub_23F77DB94(v67, type metadata accessor for TranscriptProtoExpression);
LABEL_19:
    v47 = &qword_256EB2588;
    v48 = v56;
    goto LABEL_30;
  }
  v68 = v92;
  sub_23F923444(v57, v92);
  sub_23F8783E8();
  static TranscriptProtoExpression.== infix(_:_:)();
  v70 = v69;
  sub_23F6D3928(v68);
  sub_23F6D3C1C(v105);
  sub_23F6D3C1C(v106);
  sub_23F6D3928(v65);
  sub_23F6D3C1C(v56);
  if ((v70 & 1) == 0)
    goto LABEL_31;
LABEL_21:
  sub_23F923268(v52 + v51[6], v63);
  sub_23F923268(v54 + v51[6], v64);
  v71 = v95;
  v72 = v95 + *(int *)(v94 + 48);
  sub_23F923268(v63, v95);
  sub_23F923268(v64, v72);
  v73 = sub_23F6B6F68();
  v74 = v96;
  sub_23F6B5164(v73, v75, v96);
  if (v45)
  {
    sub_23F6D3748(v64);
    sub_23F6D3748(v63);
    v77 = sub_23F6B5164(v72, 1, v74);
    if (v45)
    {
      sub_23F9239A0(v77, &qword_256EA2E00);
LABEL_33:
      v84 = v52 + v51[7];
      v85 = v87;
      sub_23F6D3818(v87, v84);
      sub_23F6D3818(v88, v54 + v51[7]);
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F923230();
      sub_23F9232DC();
      sub_23F6D3874(v85);
      goto LABEL_31;
    }
    goto LABEL_29;
  }
  v78 = v93;
  sub_23F923E34(v71, v76, &qword_256EA2E00);
  sub_23F6B5164(v72, 1, v74);
  if (v79)
  {
    sub_23F6B64F4(v64);
    sub_23F6B64F4(v63);
    (*(void (**)(char *, uint64_t))(v91 + 8))(v78, v74);
LABEL_29:
    v47 = &qword_256EA2DF8;
    v48 = v71;
    goto LABEL_30;
  }
  v80 = v91;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v91 + 32))(v86, v72, v74);
  sub_23F6D3458(&qword_256EA2E08, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95D8], MEMORY[0x24BEB95E8]);
  LODWORD(v106) = sub_23F6B6060();
  v81 = v71;
  v82 = *(void (**)(uint64_t))(v80 + 8);
  v83 = sub_23F8783E8();
  v82(v83);
  sub_23F6D3748(v104);
  sub_23F6D3748(v63);
  ((void (*)(char *, uint64_t))v82)(v93, v74);
  sub_23F6D3748(v81);
  if ((v106 & 1) != 0)
    goto LABEL_33;
LABEL_31:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoProgramStatement.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoProgramStatement, &qword_256EB2590, (uint64_t)&protocol conformance descriptor for TranscriptProtoProgramStatement);
}

unint64_t sub_23F90BDF8()
{
  static TranscriptProtoProgramStatement.protoMessageName.getter();
  return 0xD00000000000001BLL;
}

void sub_23F90BE1C()
{
  TranscriptProtoProgramStatement.decodeMessage<A>(decoder:)();
}

void sub_23F90BE30()
{
  TranscriptProtoProgramStatement.traverse<A>(visitor:)();
}

uint64_t sub_23F90BE44()
{
  sub_23F6D3458(&qword_256EB3C40, type metadata accessor for TranscriptProtoProgramStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoProgramStatement);
  return sub_23FB2D784();
}

uint64_t sub_23F90BE98()
{
  sub_23F6D3458(&qword_256EB1F30, type metadata accessor for TranscriptProtoProgramStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoProgramStatement);
  return sub_23FB2D8F8();
}

uint64_t sub_23F90BEDC()
{
  sub_23F6D3458(&qword_256EB1F30, type metadata accessor for TranscriptProtoProgramStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoProgramStatement);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoLocaleSettings.protoMessageName.getter()
{
  return sub_23F6D3738(25);
}

uint64_t sub_23F90BF48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1990);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1990);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "deviceLocale";
  *(_QWORD *)(v7 + 8) = 12;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "userLocale";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "responseLocale";
  *((_QWORD *)v13 + 1) = 14;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoLocaleSettings._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA11C8, (uint64_t)qword_256EB1990, a1);
}

void TranscriptProtoLocaleSettings.decodeMessage<A>(decoder:)()
{
  sub_23F924568();
}

void sub_23F90C108()
{
  uint64_t v0;
  void (*v1)(void);
  void (*v2)(void);
  void (*v3)(void);
  void (*v4)(void);
  void (*v5)(void);
  void (*v6)(void);
  uint64_t v7;
  char v8;

  sub_23F6B5220();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v7 = sub_23F923114();
  if (!v0)
  {
    while ((v8 & 1) == 0)
    {
      switch(v7)
      {
        case 3:
          sub_23F9246A0();
          v2();
          break;
        case 2:
          sub_23F9246A0();
          v4();
          break;
        case 1:
          sub_23F9246A0();
          v6();
          break;
      }
      sub_23F7A1280();
      v7 = sub_23FB2D7B4();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoLocaleSettings.traverse<A>(visitor:)()
{
  sub_23F90C1CC();
}

void sub_23F90C1CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F6D3EA4();
  sub_23F6D36FC();
  if (!v1 || (sub_23F923258(), !v0))
  {
    sub_23F6D36FC();
    if (!v2 || (sub_23F923258(), !v0))
    {
      sub_23F6D36FC();
      if (!v3 || (sub_23F923258(), !v0))
      {
        sub_23F923AF0();
        sub_23F9231A8();
      }
    }
  }
  sub_23F6D3750();
}

void static TranscriptProtoLocaleSettings.== infix(_:_:)()
{
  sub_23F8BC804();
}

uint64_t TranscriptProtoLocaleSettings.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoLocaleSettings, &qword_256EB2598, (uint64_t)&protocol conformance descriptor for TranscriptProtoLocaleSettings);
}

unint64_t sub_23F90C2A8()
{
  static TranscriptProtoLocaleSettings.protoMessageName.getter();
  return 0xD000000000000019;
}

void sub_23F90C2CC()
{
  TranscriptProtoLocaleSettings.traverse<A>(visitor:)();
}

uint64_t sub_23F90C2E0()
{
  sub_23F6D3458(&qword_256EB3C38, type metadata accessor for TranscriptProtoLocaleSettings, (uint64_t)&protocol conformance descriptor for TranscriptProtoLocaleSettings);
  return sub_23FB2D784();
}

uint64_t sub_23F90C334()
{
  sub_23F6D3458(&qword_256EB3970, type metadata accessor for TranscriptProtoLocaleSettings, (uint64_t)&protocol conformance descriptor for TranscriptProtoLocaleSettings);
  return sub_23FB2D8F8();
}

uint64_t sub_23F90C378()
{
  sub_23F6D3458(&qword_256EB3970, type metadata accessor for TranscriptProtoLocaleSettings, (uint64_t)&protocol conformance descriptor for TranscriptProtoLocaleSettings);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoDeviceDetailsDeviceType.protoMessageName.getter()
{
  return sub_23F6D3738(34);
}

uint64_t sub_23F90C3E4()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoDeviceDetailsDeviceType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA11D0, (uint64_t)&unk_256EB19A8, a1);
}

void TranscriptProtoDeviceDetailsDeviceType.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_23F6D39E0(a1, a2);
  while (1)
  {
    v3 = sub_23FB2D7B4();
    if (v2 || (v4 & 1) != 0)
      break;
    if (v3 == 1)
    {
      sub_23F9241C0();
      sub_23FB2D838();
    }
    sub_23F6B6098();
  }
  sub_23F6D3C2C();
}

void TranscriptProtoDeviceDetailsDeviceType.traverse<A>(visitor:)()
{
  uint64_t v0;

  if (!sub_23F9245B8() || (sub_23F6D35F4(), sub_23FB2D970(), !v0))
  {
    type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
    sub_23F9231A8();
  }
  sub_23F6D3674();
}

void static TranscriptProtoDeviceDetailsDeviceType.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F6D36BC();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F9246B8();
  if (v3)
  {
    v4 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
    sub_23F6D3614(*(int *)(v4 + 20));
    sub_23F6D36AC(*(int *)(v4 + 20));
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F6D3600();
    sub_23F6D3A04();
    sub_23F6D3BD0(v0);
  }
  sub_23F923E3C();
  sub_23F6B69E0();
}

uint64_t TranscriptProtoDeviceDetailsDeviceType.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoDeviceDetailsDeviceType, &qword_256EB25A0, (uint64_t)&protocol conformance descriptor for TranscriptProtoDeviceDetailsDeviceType);
}

unint64_t sub_23F90C580()
{
  static TranscriptProtoDeviceDetailsDeviceType.protoMessageName.getter();
  return 0xD000000000000022;
}

void sub_23F90C5A4(uint64_t a1, uint64_t a2)
{
  TranscriptProtoDeviceDetailsDeviceType.decodeMessage<A>(decoder:)(a1, a2);
}

void sub_23F90C5B8()
{
  TranscriptProtoDeviceDetailsDeviceType.traverse<A>(visitor:)();
}

uint64_t sub_23F90C5CC()
{
  sub_23F6D3458(&qword_256EB3C30, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType, (uint64_t)&protocol conformance descriptor for TranscriptProtoDeviceDetailsDeviceType);
  return sub_23FB2D784();
}

uint64_t sub_23F90C620()
{
  sub_23F6D3458(&qword_256EB3988, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType, (uint64_t)&protocol conformance descriptor for TranscriptProtoDeviceDetailsDeviceType);
  return sub_23FB2D8F8();
}

uint64_t sub_23F90C664()
{
  sub_23F6D3458(&qword_256EB3988, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType, (uint64_t)&protocol conformance descriptor for TranscriptProtoDeviceDetailsDeviceType);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoDeviceDetails.protoMessageName.getter()
{
  return sub_23F6D3738(24);
}

uint64_t sub_23F90C6D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB19C0);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB19C0);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "deviceIdsId";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "type";
  *((_QWORD *)v11 + 1) = 4;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoDeviceDetails._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA11D8, (uint64_t)qword_256EB19C0, a1);
}

void TranscriptProtoDeviceDetails.decodeMessage<A>(decoder:)()
{
  sub_23F90C870();
}

void sub_23F90C870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_23F6D3DC4();
  sub_23F923474(v1, v2);
  while (1)
  {
    v3 = sub_23FB2D7B4();
    if (v0 || (v4 & 1) != 0)
      break;
    if (v3 == 2)
    {
      sub_23F923DD8();
    }
    else if (v3 == 1)
    {
      sub_23F924938();
    }
    sub_23F6D3D70();
  }
  sub_23F6D3710();
}

void TranscriptProtoDeviceDetails.traverse<A>(visitor:)()
{
  sub_23F90C908();
}

void sub_23F90C908()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;

  sub_23F6D3DC4();
  v2 = v1;
  sub_23F6D36FC();
  if (!v3 || (sub_23F923258(), !v0))
  {
    v4 = sub_23F9236C4();
    v2(v4);
    if (!v0)
    {
      sub_23F923AF0();
      sub_23F9231A8();
    }
  }
  sub_23F6D3710();
}

void sub_23F90C98C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA86B0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoDeviceDetails(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA86B0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA86B0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
    sub_23F6D3458(&qword_256EB3988, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType, (uint64_t)&protocol conformance descriptor for TranscriptProtoDeviceDetailsDeviceType);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
  }
}

void static TranscriptProtoDeviceDetails.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _DWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  _DWORD *v34;
  char v35;
  uint64_t v36;
  uint64_t (*v37)(_QWORD);
  uint64_t v38;
  uint64_t (*v39)(_QWORD);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[2];
  _DWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  sub_23F6B50E8();
  v47 = *(_QWORD *)(sub_23F6D35C0() - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F923144(v6, v43[0]);
  MEMORY[0x24BDAC7A8](v7);
  v45 = (uint64_t)v43 - v8;
  v9 = sub_23F6D398C();
  v10 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(v9);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B5C10(v12, v43[0]);
  v13 = sub_23F6916B8(&qword_256EB25A8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA86B0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B52C8();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F9232B0();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v43 - v18;
  sub_23F6B6754();
  v22 = v22 && v20 == v21;
  if (!v22 && (sub_23F6B5280() & 1) == 0)
    goto LABEL_20;
  v23 = sub_23F924AC4();
  v24 = type metadata accessor for TranscriptProtoDeviceDetails(v23);
  sub_23F923368(v2 + *(int *)(v24 + 20), (uint64_t)v19);
  sub_23F923368(v1 + *(int *)(v24 + 20), v0);
  v25 = v3 + *(int *)(v13 + 48);
  sub_23F923368((uint64_t)v19, v3);
  v26 = sub_23F6B5994();
  sub_23F923368(v26, v27);
  sub_23F6B5164(v3, 1, v10);
  if (v22)
  {
    sub_23F6D38A8(v0);
    sub_23F6D38A8((uint64_t)v19);
    v29 = sub_23F6B5164(v25, 1, v10);
    if (v22)
    {
      sub_23F6D378C(v29, &qword_256EA86B0);
LABEL_17:
      v40 = v45;
      sub_23F923484(v45, v2 + *(int *)(v24 + 24));
      v41 = v1 + *(int *)(v24 + 24);
      v42 = v46;
      sub_23F923484(v46, v41);
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6B5624();
      sub_23F6D39FC(v42);
      sub_23F6D39FC(v40);
      goto LABEL_20;
    }
    goto LABEL_14;
  }
  sub_23F923A50(v3, v28, &qword_256EA86B0);
  sub_23F6B5164(v25, 1, v10);
  if (v30)
  {
    sub_23F6D3748(v0);
    sub_23F6D3748((uint64_t)v19);
    sub_23F6D3D20(v31, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
LABEL_14:
    v32 = &qword_256EB25A8;
    v33 = v3;
LABEL_19:
    sub_23F6B4F84(v33, v32);
    goto LABEL_20;
  }
  v34 = v44;
  sub_23F7E76D0(v25, (uint64_t)v44, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
  if (*v4 != *v34)
  {
    sub_23F6D38A0((uint64_t)v34);
    sub_23F6B6EF8(v0);
    sub_23F6B6EF8((uint64_t)v19);
    sub_23F6D38A0((uint64_t)v4);
    v33 = v3;
    v32 = &qword_256EA86B0;
    goto LABEL_19;
  }
  sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v35 = sub_23F923CF8();
  v36 = sub_23F6D3D70();
  sub_23F6D3508(v36, v37);
  sub_23F923DA8(v0);
  sub_23F923DA8((uint64_t)v19);
  v38 = sub_23F6B6224();
  sub_23F6D3508(v38, v39);
  sub_23F923DA8(v3);
  if ((v35 & 1) != 0)
    goto LABEL_17;
LABEL_20:
  sub_23F693DDC();
}

uint64_t TranscriptProtoDeviceDetails.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoDeviceDetails, &qword_256EB25B0, (uint64_t)&protocol conformance descriptor for TranscriptProtoDeviceDetails);
}

unint64_t sub_23F90CE84()
{
  static TranscriptProtoDeviceDetails.protoMessageName.getter();
  return 0xD000000000000018;
}

void sub_23F90CEA8()
{
  TranscriptProtoDeviceDetails.decodeMessage<A>(decoder:)();
}

void sub_23F90CEBC()
{
  TranscriptProtoDeviceDetails.traverse<A>(visitor:)();
}

uint64_t sub_23F90CED0()
{
  sub_23F6D3458(&qword_256EB3C28, type metadata accessor for TranscriptProtoDeviceDetails, (uint64_t)&protocol conformance descriptor for TranscriptProtoDeviceDetails);
  return sub_23FB2D784();
}

uint64_t sub_23F90CF24()
{
  sub_23F6D3458(&qword_256EB39A0, type metadata accessor for TranscriptProtoDeviceDetails, (uint64_t)&protocol conformance descriptor for TranscriptProtoDeviceDetails);
  return sub_23FB2D8F8();
}

uint64_t sub_23F90CF68()
{
  sub_23F6D3458(&qword_256EB39A0, type metadata accessor for TranscriptProtoDeviceDetails, (uint64_t)&protocol conformance descriptor for TranscriptProtoDeviceDetails);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoStatementID.protoMessageName.getter()
{
  return sub_23F6D3738(22);
}

uint64_t sub_23F90CFD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB19D8);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB19D8);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB47020;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "index";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "name";
  *((_QWORD *)v11 + 1) = 4;
  v11[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoStatementID._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA11E0, (uint64_t)qword_256EB19D8, a1);
}

void TranscriptProtoStatementID.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_23F6D37D4();
      }
      else if (v1 == 1)
      {
        sub_23F9241C0();
        sub_23FB2D88C();
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6D377C();
}

void TranscriptProtoStatementID.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;

  if (!sub_23F9245B8() || (sub_23F6D35F4(), sub_23FB2D9AC(), !v0))
  {
    sub_23F6C74C4(v1);
    if (!v0)
    {
      type metadata accessor for TranscriptProtoStatementID(0);
      sub_23F9231A8();
    }
  }
  sub_23F6D3674();
}

void static TranscriptProtoStatementID.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F6D36BC();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F9246B8();
  if (!v7)
    goto LABEL_14;
  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v1 + 16);
  if (!v5)
  {
    if (v6)
      goto LABEL_14;
    goto LABEL_13;
  }
  if (v6)
  {
    v7 = *(_QWORD *)(v2 + 8) == *(_QWORD *)(v1 + 8) && v5 == v6;
    if (v7 || (sub_23F6B5280() & 1) != 0)
    {
LABEL_13:
      v8 = sub_23F9234D4();
      sub_23F6D3614(*(int *)(v8 + 24));
      sub_23F6D36AC(*(int *)(v8 + 24));
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6D3600();
      sub_23F6D36D0();
      sub_23F6D3820(v0);
    }
  }
LABEL_14:
  sub_23F6D3B34();
  sub_23F6B69E0();
}

uint64_t TranscriptProtoStatementID.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoStatementID, &qword_256EB23B0, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
}

unint64_t sub_23F90D31C()
{
  static TranscriptProtoStatementID.protoMessageName.getter();
  return 0xD000000000000016;
}

void sub_23F90D340()
{
  TranscriptProtoStatementID.decodeMessage<A>(decoder:)();
}

void sub_23F90D354()
{
  TranscriptProtoStatementID.traverse<A>(visitor:)();
}

uint64_t sub_23F90D368()
{
  sub_23F6D3458(&qword_256EB3C20, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  return sub_23FB2D784();
}

uint64_t sub_23F90D3BC()
{
  sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  return sub_23FB2D8F8();
}

uint64_t sub_23F90D400()
{
  sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoToolResolution.protoMessageName.getter()
{
  return sub_23F6D3738(25);
}

uint64_t sub_23F90D46C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB19F0);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB19F0);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "tool";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "statementId";
  *((_QWORD *)v11 + 1) = 11;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "originProgramStatementId";
  *((_QWORD *)v13 + 1) = 24;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoToolResolution._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA11E8, (uint64_t)qword_256EB19F0, a1);
}

void TranscriptProtoToolResolution.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 3:
          sub_23F923390();
          break;
        case 2:
          sub_23F92320C();
          break;
        case 1:
          sub_23F6D3598();
          sub_23F6CEB4C();
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoToolResolution.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F923460();
  sub_23F923AD4();
  if (!v0)
  {
    sub_23F9231F0();
    sub_23F90D868(v1);
    sub_23F9231F0();
    sub_23F90D9D8(v2);
    type metadata accessor for TranscriptProtoToolResolution(0);
    sub_23F6D37BC();
  }
  sub_23F6D3674();
}

void sub_23F90D764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  char v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  unint64_t *v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_23F6B5220();
  v23 = v2;
  v24 = v1;
  v25 = v3;
  sub_23F713FB4(v4, v1, v3, v5, v6);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F924500();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  sub_23F924B70();
  sub_23F9241C0();
  sub_23F7A1EDC(v12, v13, v14);
  sub_23F6B5164((uint64_t)v9, 1, v10);
  if (v15)
  {
    v16 = sub_23F6B6098();
    sub_23F6B4F84(v16, v17);
  }
  else
  {
    v18 = sub_23F9249A0();
    v19(v18);
    v20 = (unint64_t *)sub_23F6D3D70();
    sub_23F6D3458(v20, v21, v23);
    sub_23F924004();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0, v10);
  }
  sub_23F77DB18();
  sub_23F6B5100();
}

void sub_23F90D868(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoToolResolution(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void sub_23F90D9D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoToolResolution(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void static TranscriptProtoToolResolution.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t *v51;
  uint64_t v52;
  char v53;
  int *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  sub_23F6B50E8();
  v100 = v5;
  v7 = v6;
  v8 = sub_23F6B53A4();
  v86 = *(_QWORD *)(v8 - 8);
  v87 = v8;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v85 = (uint64_t)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v11);
  v84 = (uint64_t)&v83 - v12;
  v95 = sub_23F923344();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B57A0(v14, v83);
  v94 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  v90 = (uint64_t)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  v18 = MEMORY[0x24BDAC7A8](v17);
  sub_23F924B5C(v18, v19, v20, v21, v22, v23, v24, v25, v83);
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v26);
  v88 = (char *)&v83 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v28);
  v96 = (char *)&v83 - v29;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v30);
  v97 = (char *)&v83 - v31;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v32);
  v91 = (char *)&v83 - v33;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v34);
  v92 = (uint64_t)&v83 - v35;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v36);
  v93 = (uint64_t)&v83 - v37;
  sub_23F6D398C();
  v38 = sub_23FB2EBC4();
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F6B6B5C();
  v40 = sub_23F6916B8(&qword_256EA7E88);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F6B53AC();
  sub_23F72E4BC();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F70D958();
  MEMORY[0x24BDAC7A8](v43);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v44);
  v46 = (char *)&v83 - v45;
  v99 = v7;
  sub_23F923300(v7, (uint64_t)&v83 - v45);
  sub_23F923300(v100, v3);
  v47 = v2 + *(int *)(v40 + 48);
  sub_23F923300((uint64_t)v46, v2);
  sub_23F923300(v3, v47);
  sub_23F6B5164(v2, 1, v38);
  if (v50)
  {
    sub_23F6B6EF8(v3);
    sub_23F6B6EF8((uint64_t)v46);
    v49 = sub_23F6B5164(v47, 1, v38);
    if (v50)
    {
      sub_23F6B6034(v49, &qword_256EA3268);
      goto LABEL_11;
    }
LABEL_9:
    v51 = &qword_256EA7E88;
    v52 = v2;
LABEL_30:
    sub_23F6B4F84(v52, v51);
    goto LABEL_31;
  }
  sub_23F924BC4(v2, v48, &qword_256EA3268);
  sub_23F6B5164(v47, 1, v38);
  if (v50)
  {
    sub_23F6B6EF8(v3);
    sub_23F6B6EF8((uint64_t)v46);
    sub_23F7B0990(v1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    goto LABEL_9;
  }
  sub_23F6D3ECC(v0, v47, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
  sub_23F6D3458(&qword_256EA26B8, (uint64_t (*)(uint64_t))MEMORY[0x24BEB96E0], MEMORY[0x24BEB96F0]);
  v53 = sub_23F6B5624();
  sub_23F9244DC(v0);
  sub_23F6B6EF8(v3);
  sub_23F6B6EF8((uint64_t)v46);
  sub_23F9244DC(v1);
  sub_23F6B6EF8(v2);
  if ((v53 & 1) == 0)
    goto LABEL_31;
LABEL_11:
  v54 = (int *)type metadata accessor for TranscriptProtoToolResolution(0);
  v55 = sub_23F923B30(v54[5]);
  v56 = v93;
  sub_23F92332C(v55, v93);
  v57 = v92;
  sub_23F92332C(v100 + v54[5], v92);
  v58 = v94;
  v59 = v98;
  v60 = v98 + *(int *)(v94 + 48);
  sub_23F92332C(v56, v98);
  sub_23F92332C(v57, v60);
  sub_23F6B5164(v59, 1, v95);
  if (v50)
  {
    sub_23F6B6EF8(v57);
    sub_23F6B6EF8(v56);
    v62 = sub_23F9230E4(v60);
    v64 = (uint64_t)v96;
    v63 = (uint64_t)v97;
    if (!v50)
      goto LABEL_29;
    sub_23F923588(v62, &qword_256EA25E0);
  }
  else
  {
    v65 = (uint64_t)v91;
    sub_23F924698(v59, v61, &qword_256EA25E0);
    sub_23F9230E4(v60);
    v64 = (uint64_t)v96;
    v63 = (uint64_t)v97;
    if (v66)
    {
      sub_23F6B64F4(v57);
      sub_23F6B64F4(v56);
      v68 = v65;
LABEL_28:
      sub_23F6D3508(v68, type metadata accessor for TranscriptProtoStatementID);
LABEL_29:
      v51 = &qword_256EA25E8;
      v52 = v59;
      goto LABEL_30;
    }
    v69 = v89;
    sub_23F9246E8(v60, v67, type metadata accessor for TranscriptProtoStatementID);
    sub_23F924930();
    HIDWORD(v83) = v70;
    sub_23F6D3928(v69);
    sub_23F6D3C1C(v57);
    sub_23F6D3C1C(v56);
    sub_23F6D3928(v65);
    sub_23F6D3C1C(v98);
    if ((v83 & 0x100000000) == 0)
      goto LABEL_31;
  }
  v71 = v99;
  sub_23F92332C(v99 + v54[6], v63);
  v72 = v100;
  sub_23F92332C(v100 + v54[6], v64);
  v59 = v90;
  v73 = v90 + *(int *)(v58 + 48);
  sub_23F92332C(v63, v90);
  sub_23F92332C(v64, v73);
  sub_23F9230E4(v59);
  if (v50)
  {
    sub_23F6B6EF8(v64);
    sub_23F6B6EF8(v63);
    v75 = sub_23F9230E4(v73);
    if (v50)
    {
      sub_23F923588(v75, &qword_256EA25E0);
LABEL_33:
      v81 = v71 + v54[7];
      v82 = v84;
      sub_23F6D3818(v84, v81);
      sub_23F6D3818(v85, v72 + v54[7]);
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F923230();
      sub_23F9232DC();
      sub_23F6D3874(v82);
      goto LABEL_31;
    }
    goto LABEL_29;
  }
  v76 = (uint64_t)v88;
  sub_23F923640(v59, v74, &qword_256EA25E0);
  sub_23F9230E4(v73);
  if (v77)
  {
    sub_23F6B64F4(v64);
    sub_23F6B64F4(v63);
    v68 = v76;
    goto LABEL_28;
  }
  v78 = v89;
  sub_23F9239CC(v73, v89);
  sub_23F924684();
  v80 = v79;
  sub_23F6D3DAC(v78);
  sub_23F6D3C1C(v64);
  sub_23F6D3C1C(v63);
  sub_23F6D3DAC(v76);
  sub_23F6D3C1C(v59);
  if ((v80 & 1) != 0)
    goto LABEL_33;
LABEL_31:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoToolResolution.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoToolResolution, &qword_256EB25B8, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolResolution);
}

unint64_t sub_23F90E1F0()
{
  static TranscriptProtoToolResolution.protoMessageName.getter();
  return 0xD000000000000019;
}

void sub_23F90E214()
{
  TranscriptProtoToolResolution.decodeMessage<A>(decoder:)();
}

void sub_23F90E228()
{
  TranscriptProtoToolResolution.traverse<A>(visitor:)();
}

uint64_t sub_23F90E23C()
{
  sub_23F6D3458(&qword_256EB3C18, type metadata accessor for TranscriptProtoToolResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolResolution);
  return sub_23FB2D784();
}

uint64_t sub_23F90E290()
{
  sub_23F6D3458(&qword_256EB39C8, type metadata accessor for TranscriptProtoToolResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolResolution);
  return sub_23FB2D8F8();
}

uint64_t sub_23F90E2D4()
{
  sub_23F6D3458(&qword_256EB39C8, type metadata accessor for TranscriptProtoToolResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolResolution);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoUndoRedoRequest.protoMessageName.getter()
{
  return sub_23F6D3738(26);
}

uint64_t sub_23F90E340()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1A08);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1A08);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F190;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "bundleIdentifier";
  *(_QWORD *)(v7 + 8) = 16;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "token";
  *(_QWORD *)(v11 + 8) = 5;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "operation";
  *((_QWORD *)v13 + 1) = 9;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "statementId";
  *((_QWORD *)v15 + 1) = 11;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "statementIdToUndo";
  *((_QWORD *)v17 + 1) = 17;
  v17[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoUndoRedoRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA11F0, (uint64_t)qword_256EB1A08, a1);
}

void TranscriptProtoUndoRedoRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;

  sub_23F6B5220();
  sub_23F6D356C();
  if (!v12)
  {
    while ((v13 & 1) == 0)
    {
      sub_23F923FB0();
      if (!(!v24 & v23))
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_23F90E5B0 + 4 * byte_23FB74E18[v22]))(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10, a11, a12);
        return;
      }
      sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoUndoRedoRequest.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F924514();
  sub_23F6D36FC();
  if (!v1 || (sub_23F923758(), !v0))
  {
    v2 = sub_23F923E80();
    sub_23F90E71C(v2);
    if (!v0)
    {
      sub_23F9246F4();
      if (v3)
      {
        sub_23F761394();
        sub_23F923FE8();
      }
      v4 = sub_23F923E80();
      sub_23F90E748(v4);
      v5 = sub_23F923E80();
      sub_23F90E8B8(v5);
      type metadata accessor for TranscriptProtoUndoRedoRequest(0);
      sub_23FB2D700();
    }
  }
  sub_23F6D3C00();
}

void sub_23F90E71C(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 32))
  {
    sub_23F6D3CE0();
    sub_23F6D3968();
  }
  sub_23F6D3ABC();
}

void sub_23F90E748(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoUndoRedoRequest(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 28), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void sub_23F90E8B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoUndoRedoRequest(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 32), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void static TranscriptProtoUndoRedoRequest.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  sub_23F6B50E8();
  v6 = sub_23F6D35C0();
  v66 = *(_QWORD *)(v6 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  v65 = (uint64_t)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v9);
  v64 = (uint64_t)&v60 - v10;
  sub_23F923344();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B5C10(v12, v60);
  v13 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  v71 = (uint64_t)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6D3DD8();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  v67 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v19);
  v69 = (uint64_t)&v60 - v20;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v21);
  v70 = (uint64_t)&v60 - v22;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F72E168();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F77E490();
  sub_23F6B6754();
  v28 = v28 && v26 == v27;
  if (!v28 && (sub_23F6B5280() & 1) == 0)
    goto LABEL_37;
  v29 = *(_QWORD *)(v2 + 32);
  v30 = *(_QWORD *)(v1 + 32);
  if (!v29)
  {
    if (v30)
      goto LABEL_37;
LABEL_15:
    sub_23F923CD8();
    if (!v28)
      goto LABEL_37;
    v62 = v6;
    v32 = type metadata accessor for TranscriptProtoUndoRedoRequest(0);
    sub_23F923164(v2 + *(int *)(v32 + 28), v5);
    v63 = v32;
    sub_23F923164(v1 + *(int *)(v32 + 28), v4);
    v33 = v0 + *(int *)(v13 + 48);
    sub_23F923164(v5, v0);
    sub_23F923164(v4, v33);
    sub_23F9230E4(v0);
    if (v28)
    {
      sub_23F6B64F4(v4);
      sub_23F6B64F4(v5);
      v35 = sub_23F9230E4(v33);
      if (v28)
      {
        sub_23F9239A0(v35, &qword_256EA25E0);
LABEL_27:
        v42 = v63;
        v43 = v70;
        sub_23F923164(v2 + *(int *)(v63 + 32), v70);
        v44 = v69;
        sub_23F923164(v1 + *(int *)(v42 + 32), v69);
        v45 = v71;
        v46 = v71 + *(int *)(v13 + 48);
        sub_23F923164(v43, v71);
        sub_23F923164(v44, v46);
        sub_23F9230E4(v45);
        if (v28)
        {
          sub_23F6B64F4(v44);
          sub_23F6B64F4(v43);
          v48 = sub_23F9230E4(v46);
          if (v28)
          {
            sub_23F6D378C(v48, &qword_256EA25E0);
            goto LABEL_39;
          }
        }
        else
        {
          v49 = (uint64_t)v67;
          sub_23F923640(v45, v47, &qword_256EA25E0);
          sub_23F9230E4(v46);
          if (!v50)
          {
            v52 = v68;
            sub_23F923444(v46, v68);
            sub_23F923C58();
            v54 = v53;
            sub_23F6D3928(v52);
            sub_23F6B6EF8(v44);
            sub_23F6B6EF8(v43);
            sub_23F6D3928(v49);
            sub_23F6B6EF8(v45);
            if ((v54 & 1) == 0)
              goto LABEL_37;
LABEL_39:
            v55 = v63;
            v56 = v2 + *(int *)(v63 + 36);
            v57 = v64;
            sub_23F923484(v64, v56);
            v58 = v1 + *(int *)(v55 + 36);
            v59 = v65;
            sub_23F923484(v65, v58);
            sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
            sub_23F6B5624();
            sub_23F6D39FC(v59);
            sub_23F6D39FC(v57);
            goto LABEL_37;
          }
          sub_23F6B64F4(v44);
          sub_23F6B64F4(v43);
          sub_23F72E404(v51, type metadata accessor for TranscriptProtoStatementID);
        }
        v40 = v45;
LABEL_36:
        sub_23F6B4F84(v40, &qword_256EA25E8);
        goto LABEL_37;
      }
    }
    else
    {
      sub_23F923BFC(v0, v34, &qword_256EA25E0);
      v37 = sub_23F9230E4(v33);
      if (!v36)
      {
        sub_23F9247D4(v37, v38, type metadata accessor for TranscriptProtoStatementID);
        static TranscriptProtoStatementID.== infix(_:_:)();
        v61 = v41;
        sub_23F923B20((uint64_t)&qword_256EA25E0);
        sub_23F6B64F4(v4);
        sub_23F6B64F4(v5);
        sub_23F923B20(v3);
        sub_23F6B64F4(v0);
        if ((v61 & 1) == 0)
          goto LABEL_37;
        goto LABEL_27;
      }
      sub_23F6B64F4(v4);
      sub_23F6B64F4(v5);
      sub_23F7E7834(v39, type metadata accessor for TranscriptProtoStatementID);
    }
    v40 = v0;
    goto LABEL_36;
  }
  if (v30)
  {
    v31 = *(_QWORD *)(v2 + 24) == *(_QWORD *)(v1 + 24) && v29 == v30;
    if (v31 || (sub_23F6B5280() & 1) != 0)
      goto LABEL_15;
  }
LABEL_37:
  sub_23F923FC4();
  sub_23F693DDC();
}

uint64_t TranscriptProtoUndoRedoRequest.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoUndoRedoRequest, &qword_256EB25C0, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoRedoRequest);
}

unint64_t sub_23F90EEF8()
{
  static TranscriptProtoUndoRedoRequest.protoMessageName.getter();
  return 0xD00000000000001ALL;
}

#error "23F90EF24: call analysis failed (funcsize=5)"

void sub_23F90EF30()
{
  TranscriptProtoUndoRedoRequest.traverse<A>(visitor:)();
}

uint64_t sub_23F90EF44()
{
  sub_23F6D3458(&qword_256EB3C10, type metadata accessor for TranscriptProtoUndoRedoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoRedoRequest);
  return sub_23FB2D784();
}

uint64_t sub_23F90EF98()
{
  sub_23F6D3458(&qword_256EB39E0, type metadata accessor for TranscriptProtoUndoRedoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoRedoRequest);
  return sub_23FB2D8F8();
}

uint64_t sub_23F90EFDC()
{
  sub_23F6D3458(&qword_256EB39E0, type metadata accessor for TranscriptProtoUndoRedoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoRedoRequest);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoClientUndoRedoRequest.protoMessageName.getter()
{
  return sub_23F6D3738(32);
}

uint64_t sub_23F90F048()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1A20);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1A20);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1C0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "token";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "operation";
  *(_QWORD *)(v11 + 8) = 9;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "statementId";
  *((_QWORD *)v13 + 1) = 11;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "statementIdToUndo";
  *((_QWORD *)v15 + 1) = 17;
  v15[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoClientUndoRedoRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA11F8, (uint64_t)qword_256EB1A20, a1);
}

void TranscriptProtoClientUndoRedoRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;

  sub_23F6B5220();
  sub_23F6D356C();
  if (!v12)
  {
    while ((v13 & 1) == 0)
    {
      sub_23F6D3E98();
      if (!(!v24 & v23))
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_23F90F288 + 4 * byte_23FB74E1D[v22]))(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10, a11, a12);
        return;
      }
      sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void sub_23F90F2F4()
{
  void (*v0)(void);

  sub_23F924840();
  v0();
  sub_23F92408C();
  sub_23F6D3674();
}

void TranscriptProtoClientUndoRedoRequest.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F924514();
  sub_23F6D36FC();
  if (!v1 || (sub_23F923258(), !v0))
  {
    sub_23F9246F4();
    if (!v2 || (sub_23F761394(), sub_23F923630(), !v0))
    {
      v3 = sub_23F6D3D7C();
      sub_23F90F3E4(v3);
      if (!v0)
      {
        v4 = sub_23F6D3D7C();
        sub_23F90F554(v4);
        type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
        sub_23F9231A8();
      }
    }
  }
  sub_23F6D3C00();
}

void sub_23F90F3E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void sub_23F90F554(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 28), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void static TranscriptProtoClientUndoRedoRequest.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  sub_23F6B50E8();
  v6 = sub_23F6D35C0();
  v64 = *(_QWORD *)(v6 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  v63 = (uint64_t)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v9);
  v62 = (uint64_t)&v58 - v10;
  sub_23F923344();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F6B5C10(v12, v58);
  v13 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  v69 = (uint64_t)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6D3DD8();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  v65 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v19);
  v67 = (uint64_t)&v58 - v20;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v21);
  v68 = (uint64_t)&v58 - v22;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F9231E0();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F6B5F6C();
  sub_23F6B6754();
  v28 = v28 && v26 == v27;
  if (v28 || (sub_23F6B5280() & 1) != 0)
  {
    sub_23F923CD8();
    if (v28)
    {
      v60 = v6;
      v29 = type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
      v30 = sub_23F9247F8(v29);
      sub_23F923164(v30, v3);
      v61 = v29;
      sub_23F923164(v1 + *(int *)(v29 + 24), v4);
      v31 = v0 + *(int *)(v13 + 48);
      sub_23F923164(v3, v0);
      sub_23F923164(v4, v31);
      sub_23F9230E4(v0);
      if (v28)
      {
        sub_23F6B64F4(v4);
        sub_23F6B64F4(v3);
        v33 = sub_23F9230E4(v31);
        if (v28)
        {
          sub_23F9239A0(v33, &qword_256EA25E0);
LABEL_18:
          v40 = v61;
          v41 = v68;
          sub_23F923164(v2 + *(int *)(v61 + 28), v68);
          v42 = v67;
          sub_23F923164(v1 + *(int *)(v40 + 28), v67);
          v43 = v69;
          v44 = v69 + *(int *)(v13 + 48);
          sub_23F923164(v41, v69);
          sub_23F923164(v42, v44);
          sub_23F9230E4(v43);
          if (v28)
          {
            sub_23F6B64F4(v42);
            sub_23F6B64F4(v41);
            v46 = sub_23F9230E4(v44);
            if (v28)
            {
              sub_23F6D378C(v46, &qword_256EA25E0);
              goto LABEL_30;
            }
          }
          else
          {
            v47 = (uint64_t)v65;
            sub_23F923640(v43, v45, &qword_256EA25E0);
            sub_23F9230E4(v44);
            if (!v48)
            {
              v50 = v66;
              sub_23F923444(v44, v66);
              sub_23F923C58();
              v52 = v51;
              sub_23F6D3928(v50);
              sub_23F6B6EF8(v42);
              sub_23F6B6EF8(v41);
              sub_23F6D3928(v47);
              sub_23F6B6EF8(v43);
              if ((v52 & 1) == 0)
                goto LABEL_28;
LABEL_30:
              v53 = v61;
              v54 = v2 + *(int *)(v61 + 32);
              v55 = v62;
              sub_23F923484(v62, v54);
              v56 = v1 + *(int *)(v53 + 32);
              v57 = v63;
              sub_23F923484(v63, v56);
              sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
              sub_23F6B5624();
              sub_23F6D39FC(v57);
              sub_23F6D39FC(v55);
              goto LABEL_28;
            }
            sub_23F6B64F4(v42);
            sub_23F6B64F4(v41);
            sub_23F72E404(v49, type metadata accessor for TranscriptProtoStatementID);
          }
          v38 = v43;
LABEL_27:
          sub_23F6B4F84(v38, &qword_256EA25E8);
          goto LABEL_28;
        }
      }
      else
      {
        sub_23F923370(v0, v32, &qword_256EA25E0);
        v35 = sub_23F9230E4(v31);
        if (!v34)
        {
          sub_23F9247D4(v35, v36, type metadata accessor for TranscriptProtoStatementID);
          sub_23F924C14();
          static TranscriptProtoStatementID.== infix(_:_:)();
          v59 = v39;
          sub_23F923B20((uint64_t)&qword_256EA25E0);
          sub_23F6B64F4(v4);
          sub_23F6B64F4(v3);
          sub_23F923B20(v5);
          sub_23F6B64F4(v0);
          if ((v59 & 1) == 0)
            goto LABEL_28;
          goto LABEL_18;
        }
        sub_23F6B64F4(v4);
        sub_23F6B64F4(v3);
        sub_23F6D3C24(v37, type metadata accessor for TranscriptProtoStatementID);
      }
      v38 = v0;
      goto LABEL_27;
    }
  }
LABEL_28:
  sub_23F923FC4();
  sub_23F693DDC();
}

uint64_t TranscriptProtoClientUndoRedoRequest.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoClientUndoRedoRequest, &qword_256EB25C8, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientUndoRedoRequest);
}

unint64_t sub_23F90FB54()
{
  static TranscriptProtoClientUndoRedoRequest.protoMessageName.getter();
  return 0xD000000000000020;
}

#error "23F90FB80: call analysis failed (funcsize=5)"

void sub_23F90FB8C()
{
  TranscriptProtoClientUndoRedoRequest.traverse<A>(visitor:)();
}

uint64_t sub_23F90FBA0()
{
  sub_23F6D3458(&qword_256EB3C08, type metadata accessor for TranscriptProtoClientUndoRedoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientUndoRedoRequest);
  return sub_23FB2D784();
}

uint64_t sub_23F90FBF4()
{
  sub_23F6D3458(&qword_256EB39F8, type metadata accessor for TranscriptProtoClientUndoRedoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientUndoRedoRequest);
  return sub_23FB2D8F8();
}

uint64_t sub_23F90FC38()
{
  sub_23F6D3458(&qword_256EB39F8, type metadata accessor for TranscriptProtoClientUndoRedoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientUndoRedoRequest);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoTypeConversionRequest.protoMessageName.getter()
{
  return sub_23F6D3738(32);
}

uint64_t sub_23F90FCA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1A38);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1A38);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "value";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "target";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "statementId";
  *((_QWORD *)v13 + 1) = 11;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoTypeConversionRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1200, (uint64_t)qword_256EB1A38, a1);
}

void TranscriptProtoTypeConversionRequest.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 3:
          sub_23F6D38E0();
          sub_23F88FDAC();
          break;
        case 2:
          sub_23F6D38E0();
          sub_23F88FD7C();
          break;
        case 1:
          sub_23F923B94();
          sub_23F6CEB4C();
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoTypeConversionRequest.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F923460();
  sub_23F923AD4();
  if (!v0)
  {
    sub_23F9231F0();
    sub_23F90FFC4(v1, v2, v3, v4);
    sub_23F9231F0();
    sub_23F910138(v5);
    type metadata accessor for TranscriptProtoTypeConversionRequest(0);
    sub_23F6D37BC();
  }
  sub_23F6D3674();
}

void sub_23F90FFC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v13[2];

  v13[1] = a4;
  v5 = sub_23F6916B8(&qword_256EA2E00);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23FB2EB28();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoTypeConversionRequest(0);
  sub_23F7A1EDC(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256EA2E00);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v8) == 1)
  {
    sub_23F6B4F84((uint64_t)v7, &qword_256EA2E00);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    sub_23F6D3458(&qword_256EA3278, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95D8], MEMORY[0x24BEB95D0]);
    sub_23FB2D9D0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

void sub_23F910138(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoTypeConversionRequest(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void static TranscriptProtoTypeConversionRequest.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t *v52;
  uint64_t v53;
  char v54;
  int *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  void (*v71)(uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t);
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;

  sub_23F6B50E8();
  v111 = v7;
  v9 = v8;
  v10 = sub_23F6B53A4();
  v94 = *(_QWORD *)(v10 - 8);
  v95 = v10;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  v93 = (uint64_t)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v13);
  v92 = (uint64_t)&v91 - v14;
  v98 = sub_23F923344();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F70D7DC(v16, v91);
  v97 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F6B5544(v18, v91);
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v19);
  v102 = (char *)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v21);
  v107 = (char *)&v91 - v22;
  sub_23F6B5664();
  v24 = MEMORY[0x24BDAC7A8](v23);
  sub_23F9234E4(v24, v25, v26, v27, v28, v29, v30, v31, v91);
  v106 = sub_23FB2EB28();
  v100 = *(_QWORD *)(v106 - 8);
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F6B658C(v33, v91);
  v103 = sub_23F6916B8(&qword_256EA2DF8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F6B57BC(v35, v91);
  sub_23F6916B8(&qword_256EA2E00);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v36);
  v101 = (char *)&v91 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v38);
  v104 = (uint64_t)&v91 - v39;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v40);
  v109 = (uint64_t)&v91 - v41;
  sub_23F6D3D08();
  sub_23F923590();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F6B52B0();
  v43 = sub_23F6916B8(&qword_256EA2618);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v44);
  sub_23F6B5298();
  sub_23F72E4BC();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F6B65E0();
  MEMORY[0x24BDAC7A8](v46);
  sub_23F9231E0();
  MEMORY[0x24BDAC7A8](v47);
  sub_23F6B5F6C();
  v110 = v9;
  sub_23F923300(v9, v3);
  sub_23F923300(v111, v5);
  v48 = v0 + *(int *)(v43 + 48);
  sub_23F923300(v3, v0);
  sub_23F923300(v5, v48);
  sub_23F6B5164(v0, 1, v1);
  if (v51)
  {
    sub_23F6D3C1C(v5);
    sub_23F6D3C1C(v3);
    v50 = sub_23F6B5164(v48, 1, v1);
    if (v51)
    {
      sub_23F77E660(v50, &qword_256EA2610);
      goto LABEL_11;
    }
LABEL_9:
    v52 = &qword_256EA2618;
    v53 = v0;
LABEL_31:
    sub_23F6B4F84(v53, v52);
    goto LABEL_32;
  }
  sub_23F923760(v0, v49, &qword_256EA2610);
  sub_23F6B5164(v48, 1, v1);
  if (v51)
  {
    sub_23F6B6EF8(v5);
    sub_23F6B6EF8(v3);
    sub_23F7B0990(v6, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    goto LABEL_9;
  }
  sub_23F6D3ECC(v2, v48, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
  sub_23F6D3458(&qword_256EA2620, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95B0], MEMORY[0x24BEB95C8]);
  v54 = sub_23F6B5624();
  sub_23F6D3BD0(v2);
  sub_23F6D3C1C(v5);
  sub_23F6D3C1C(v3);
  sub_23F6D3BD0(v6);
  sub_23F6D3C1C(v0);
  if ((v54 & 1) == 0)
    goto LABEL_32;
LABEL_11:
  v55 = (int *)type metadata accessor for TranscriptProtoTypeConversionRequest(0);
  v56 = v109;
  sub_23F92332C(v110 + v55[5], v109);
  v57 = v111;
  v58 = v104;
  sub_23F92332C(v111 + v55[5], v104);
  v59 = v105;
  v60 = v105 + *(int *)(v103 + 48);
  sub_23F92332C(v56, v105);
  sub_23F92332C(v58, v60);
  v61 = sub_23F923D00();
  v62 = v106;
  sub_23F6B5164(v61, v63, v106);
  if (v51)
  {
    sub_23F6B6EF8(v58);
    sub_23F6B6EF8(v56);
    v65 = sub_23F9230E4(v60);
    v66 = (uint64_t)v102;
    v68 = (uint64_t)v107;
    v67 = v108;
    if (v51)
    {
      sub_23F923588(v65, &qword_256EA2E00);
      goto LABEL_21;
    }
LABEL_19:
    v52 = &qword_256EA2DF8;
LABEL_30:
    v53 = v59;
    goto LABEL_31;
  }
  sub_23F923640(v59, v64, &qword_256EA2E00);
  sub_23F9230E4(v60);
  v68 = (uint64_t)v107;
  v67 = v108;
  if (v69)
  {
    sub_23F6B64F4(v58);
    sub_23F6B64F4(v56);
    v70 = sub_23F7A1280();
    v71(v70);
    goto LABEL_19;
  }
  v72 = v100;
  v73 = v96;
  v74 = sub_23F77E680();
  v75(v74);
  sub_23F6D3458(&qword_256EA2E08, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95D8], MEMORY[0x24BEB95E8]);
  sub_23F6B6F88();
  LODWORD(v103) = sub_23FB2F11C();
  v76 = v59;
  v77 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
  v77(v73, v62);
  sub_23F6B6EF8(v58);
  sub_23F6B6EF8(v109);
  v78 = sub_23F7A1280();
  ((void (*)(uint64_t))v77)(v78);
  sub_23F6B6EF8(v76);
  v57 = v111;
  v66 = (uint64_t)v102;
  if ((v103 & 1) == 0)
    goto LABEL_32;
LABEL_21:
  v79 = v110;
  sub_23F92332C(v110 + v55[6], v67);
  sub_23F92332C(v57 + v55[6], v68);
  v59 = v99;
  v80 = v99 + *(int *)(v97 + 48);
  sub_23F92332C(v67, v99);
  sub_23F92332C(v68, v80);
  v81 = sub_23F923D00();
  sub_23F6B5164(v81, v82, v98);
  if (v51)
  {
    sub_23F6B6EF8(v68);
    sub_23F6B6EF8(v67);
    v84 = sub_23F9230E4(v80);
    if (v51)
    {
      sub_23F923588(v84, &qword_256EA25E0);
LABEL_34:
      v90 = v92;
      sub_23F9249C8(v92, v79 + v55[7]);
      sub_23F9249C8(v93, v57 + v55[7]);
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F923230();
      sub_23F9232DC();
      sub_23F6D3874(v90);
      goto LABEL_32;
    }
    goto LABEL_29;
  }
  sub_23F923BFC(v59, v83, &qword_256EA25E0);
  sub_23F9230E4(v80);
  if (v85)
  {
    sub_23F6B64F4(v68);
    sub_23F6B64F4(v67);
    sub_23F7E7834(v86, type metadata accessor for TranscriptProtoStatementID);
LABEL_29:
    v52 = &qword_256EA25E8;
    goto LABEL_30;
  }
  v87 = v91;
  sub_23F9239CC(v80, v91);
  sub_23F924684();
  v89 = v88;
  sub_23F6D3DAC(v87);
  sub_23F6D3C1C(v68);
  sub_23F6D3C1C(v67);
  sub_23F6D3DAC(v66);
  sub_23F6D3C1C(v59);
  if ((v89 & 1) != 0)
    goto LABEL_34;
LABEL_32:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoTypeConversionRequest.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoTypeConversionRequest, &qword_256EB25D0, (uint64_t)&protocol conformance descriptor for TranscriptProtoTypeConversionRequest);
}

unint64_t sub_23F9109B0()
{
  static TranscriptProtoTypeConversionRequest.protoMessageName.getter();
  return 0xD000000000000020;
}

void sub_23F9109D4()
{
  TranscriptProtoTypeConversionRequest.decodeMessage<A>(decoder:)();
}

void sub_23F9109E8()
{
  TranscriptProtoTypeConversionRequest.traverse<A>(visitor:)();
}

uint64_t sub_23F9109FC()
{
  sub_23F6D3458(&qword_256EB3C00, type metadata accessor for TranscriptProtoTypeConversionRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoTypeConversionRequest);
  return sub_23FB2D784();
}

uint64_t sub_23F910A50()
{
  sub_23F6D3458(&qword_256EB3A10, type metadata accessor for TranscriptProtoTypeConversionRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoTypeConversionRequest);
  return sub_23FB2D8F8();
}

uint64_t sub_23F910A94()
{
  sub_23F6D3458(&qword_256EB3A10, type metadata accessor for TranscriptProtoTypeConversionRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoTypeConversionRequest);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoTypeConversionResult.protoMessageName.getter()
{
  return sub_23F6D3738(31);
}

uint64_t sub_23F910B00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1A50);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1A50);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "value";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "statementId";
  *((_QWORD *)v11 + 1) = 11;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "originStatementId";
  *((_QWORD *)v13 + 1) = 17;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoTypeConversionResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1208, (uint64_t)qword_256EB1A50, a1);
}

void TranscriptProtoTypeConversionResult.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 3:
          sub_23F923390();
          break;
        case 2:
          sub_23F92320C();
          break;
        case 1:
          sub_23F6D3598();
          sub_23F6CEB4C();
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoTypeConversionResult.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F923460();
  sub_23F923AD4();
  if (!v0)
  {
    sub_23F9231F0();
    sub_23F910DF8(v1);
    sub_23F9231F0();
    sub_23F910F68(v2);
    type metadata accessor for TranscriptProtoTypeConversionResult(0);
    sub_23F6D37BC();
  }
  sub_23F6D3674();
}

void sub_23F910DF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoTypeConversionResult(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void sub_23F910F68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoTypeConversionResult(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void static TranscriptProtoTypeConversionResult.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t *v51;
  uint64_t v52;
  char v53;
  int *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  sub_23F6B50E8();
  v100 = v5;
  v7 = v6;
  v8 = sub_23F6B53A4();
  v86 = *(_QWORD *)(v8 - 8);
  v87 = v8;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v85 = (uint64_t)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v11);
  v84 = (uint64_t)&v83 - v12;
  v95 = sub_23F923344();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F6B57A0(v14, v83);
  v94 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  v90 = (uint64_t)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  v18 = MEMORY[0x24BDAC7A8](v17);
  sub_23F924B5C(v18, v19, v20, v21, v22, v23, v24, v25, v83);
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v26);
  v88 = (char *)&v83 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v28);
  v96 = (char *)&v83 - v29;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v30);
  v97 = (char *)&v83 - v31;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v32);
  v91 = (char *)&v83 - v33;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v34);
  v92 = (uint64_t)&v83 - v35;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v36);
  v93 = (uint64_t)&v83 - v37;
  v38 = sub_23F6D3D08();
  sub_23F6B562C();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F6B6B5C();
  v40 = sub_23F6916B8(&qword_256EA2618);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F6B53AC();
  sub_23F72E4BC();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F70D958();
  MEMORY[0x24BDAC7A8](v43);
  sub_23F77DA54();
  MEMORY[0x24BDAC7A8](v44);
  v46 = (char *)&v83 - v45;
  v99 = v7;
  sub_23F923300(v7, (uint64_t)&v83 - v45);
  sub_23F923300(v100, v3);
  v47 = v2 + *(int *)(v40 + 48);
  sub_23F923300((uint64_t)v46, v2);
  sub_23F923300(v3, v47);
  sub_23F6B5164(v2, 1, v38);
  if (v50)
  {
    sub_23F6B6EF8(v3);
    sub_23F6B6EF8((uint64_t)v46);
    v49 = sub_23F6B5164(v47, 1, v38);
    if (v50)
    {
      sub_23F6B6034(v49, &qword_256EA2610);
      goto LABEL_11;
    }
LABEL_9:
    v51 = &qword_256EA2618;
    v52 = v2;
LABEL_30:
    sub_23F6B4F84(v52, v51);
    goto LABEL_31;
  }
  sub_23F924BC4(v2, v48, &qword_256EA2610);
  sub_23F6B5164(v47, 1, v38);
  if (v50)
  {
    sub_23F6B6EF8(v3);
    sub_23F6B6EF8((uint64_t)v46);
    sub_23F7B0990(v1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    goto LABEL_9;
  }
  sub_23F6D3ECC(v0, v47, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
  sub_23F6D3458(&qword_256EA2620, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95B0], MEMORY[0x24BEB95C8]);
  v53 = sub_23F6B5624();
  sub_23F9244DC(v0);
  sub_23F6B6EF8(v3);
  sub_23F6B6EF8((uint64_t)v46);
  sub_23F9244DC(v1);
  sub_23F6B6EF8(v2);
  if ((v53 & 1) == 0)
    goto LABEL_31;
LABEL_11:
  v54 = (int *)type metadata accessor for TranscriptProtoTypeConversionResult(0);
  v55 = sub_23F923B30(v54[5]);
  v56 = v93;
  sub_23F92332C(v55, v93);
  v57 = v92;
  sub_23F92332C(v100 + v54[5], v92);
  v58 = v94;
  v59 = v98;
  v60 = v98 + *(int *)(v94 + 48);
  sub_23F92332C(v56, v98);
  sub_23F92332C(v57, v60);
  sub_23F6B5164(v59, 1, v95);
  if (v50)
  {
    sub_23F6B6EF8(v57);
    sub_23F6B6EF8(v56);
    v62 = sub_23F9230E4(v60);
    v64 = (uint64_t)v96;
    v63 = (uint64_t)v97;
    if (!v50)
      goto LABEL_29;
    sub_23F923588(v62, &qword_256EA25E0);
  }
  else
  {
    v65 = (uint64_t)v91;
    sub_23F924698(v59, v61, &qword_256EA25E0);
    sub_23F9230E4(v60);
    v64 = (uint64_t)v96;
    v63 = (uint64_t)v97;
    if (v66)
    {
      sub_23F6B64F4(v57);
      sub_23F6B64F4(v56);
      v68 = v65;
LABEL_28:
      sub_23F6D3508(v68, type metadata accessor for TranscriptProtoStatementID);
LABEL_29:
      v51 = &qword_256EA25E8;
      v52 = v59;
      goto LABEL_30;
    }
    v69 = v89;
    sub_23F9246E8(v60, v67, type metadata accessor for TranscriptProtoStatementID);
    sub_23F924930();
    HIDWORD(v83) = v70;
    sub_23F6D3928(v69);
    sub_23F6D3C1C(v57);
    sub_23F6D3C1C(v56);
    sub_23F6D3928(v65);
    sub_23F6D3C1C(v98);
    if ((v83 & 0x100000000) == 0)
      goto LABEL_31;
  }
  v71 = v99;
  sub_23F92332C(v99 + v54[6], v63);
  v72 = v100;
  sub_23F92332C(v100 + v54[6], v64);
  v59 = v90;
  v73 = v90 + *(int *)(v58 + 48);
  sub_23F92332C(v63, v90);
  sub_23F92332C(v64, v73);
  sub_23F9230E4(v59);
  if (v50)
  {
    sub_23F6B6EF8(v64);
    sub_23F6B6EF8(v63);
    v75 = sub_23F9230E4(v73);
    if (v50)
    {
      sub_23F923588(v75, &qword_256EA25E0);
LABEL_33:
      v81 = v71 + v54[7];
      v82 = v84;
      sub_23F6D3818(v84, v81);
      sub_23F6D3818(v85, v72 + v54[7]);
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F923230();
      sub_23F9232DC();
      sub_23F6D3874(v82);
      goto LABEL_31;
    }
    goto LABEL_29;
  }
  v76 = (uint64_t)v88;
  sub_23F923640(v59, v74, &qword_256EA25E0);
  sub_23F9230E4(v73);
  if (v77)
  {
    sub_23F6B64F4(v64);
    sub_23F6B64F4(v63);
    v68 = v76;
    goto LABEL_28;
  }
  v78 = v89;
  sub_23F9239CC(v73, v89);
  sub_23F924684();
  v80 = v79;
  sub_23F6D3DAC(v78);
  sub_23F6D3C1C(v64);
  sub_23F6D3C1C(v63);
  sub_23F6D3DAC(v76);
  sub_23F6D3C1C(v59);
  if ((v80 & 1) != 0)
    goto LABEL_33;
LABEL_31:
  sub_23F6D3B1C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoTypeConversionResult.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoTypeConversionResult, &qword_256EB25D8, (uint64_t)&protocol conformance descriptor for TranscriptProtoTypeConversionResult);
}

unint64_t sub_23F91177C()
{
  static TranscriptProtoTypeConversionResult.protoMessageName.getter();
  return 0xD00000000000001FLL;
}

void sub_23F9117A0()
{
  TranscriptProtoTypeConversionResult.decodeMessage<A>(decoder:)();
}

void sub_23F9117B4()
{
  TranscriptProtoTypeConversionResult.traverse<A>(visitor:)();
}

uint64_t sub_23F9117C8()
{
  sub_23F6D3458(&qword_256EB3BF8, type metadata accessor for TranscriptProtoTypeConversionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoTypeConversionResult);
  return sub_23FB2D784();
}

uint64_t sub_23F91181C()
{
  sub_23F6D3458(&qword_256EB3A28, type metadata accessor for TranscriptProtoTypeConversionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoTypeConversionResult);
  return sub_23FB2D8F8();
}

uint64_t sub_23F911860()
{
  sub_23F6D3458(&qword_256EB3A28, type metadata accessor for TranscriptProtoTypeConversionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoTypeConversionResult);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoQueryDecorationResult.protoMessageName.getter()
{
  return sub_23F6D3738(32);
}

uint64_t sub_23F9118CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1A68);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1A68);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F190;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "spans";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "requiredContext";
  *(_QWORD *)(v11 + 8) = 15;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "utteranceContext";
  *((_QWORD *)v13 + 1) = 16;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "toolRetrievalResponse";
  *((_QWORD *)v15 + 1) = 21;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "dynamicEnumerationEntities";
  *((_QWORD *)v17 + 1) = 26;
  v17[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoQueryDecorationResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1210, (uint64_t)qword_256EB1A68, a1);
}

void TranscriptProtoQueryDecorationResult.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;

  sub_23F6B5220();
  sub_23F6D356C();
  if (!v12)
  {
    while ((v13 & 1) == 0)
    {
      sub_23F923FB0();
      if (!(!v24 & v23))
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_23F911B48 + 4 * byte_23FB74E21[v22]))(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10, a11, a12);
        return;
      }
      sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

uint64_t sub_23F911BD4()
{
  type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement(0);
  sub_23F6D3458(&qword_256EB25E0, type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoDynamicEnumerationEntityStatement);
  return sub_23FB2D8A4();
}

void TranscriptProtoQueryDecorationResult.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F6D3EA4();
  sub_23F924378();
  sub_23F92468C();
  if (!v2
    || (type metadata accessor for ContextProtoSpanMatchedEntity(0),
        sub_23F6D3458(&qword_256EA2DB8, type metadata accessor for ContextProtoSpanMatchedEntity, (uint64_t)&protocol conformance descriptor for ContextProtoSpanMatchedEntity), sub_23F924B84(), sub_23F6D36E4(), !v1))
  {
    if (!*(_QWORD *)(*(_QWORD *)(v0 + 8) + 16)
      || (sub_23F9247F0(),
          sub_23F6D3458(&qword_256EB2168, type metadata accessor for TranscriptProtoRetrievedContextStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoRetrievedContextStatement), sub_23F6D36E4(), !v1))
    {
      sub_23F924890();
      if (!v3
        || (sub_23F9247F0(),
            sub_23F6D3458(&qword_256EB2168, type metadata accessor for TranscriptProtoRetrievedContextStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoRetrievedContextStatement), sub_23F6D36E4(), !v1))
      {
        sub_23F6D3664();
        sub_23F911DE8(v4);
        if (!v1)
        {
          if (*(_QWORD *)(*(_QWORD *)(v0 + 24) + 16))
          {
            type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement(0);
            sub_23F6D3458(&qword_256EB25E0, type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoDynamicEnumerationEntityStatement);
            sub_23F6D36E4();
          }
          type metadata accessor for TranscriptProtoQueryDecorationResult(0);
          sub_23F9233EC();
        }
      }
    }
  }
  sub_23F6D3750();
}

void sub_23F911DE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v6;
  char *v7;
  uint64_t DecorationResult;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA2DD0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  MEMORY[0x24BDAC7A8](DecorationToolRetrievalResponse);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationResult = type metadata accessor for TranscriptProtoQueryDecorationResult(0);
  sub_23F7A1EDC(a1 + *(int *)(DecorationResult + 32), (uint64_t)v4, &qword_256EA2DD0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, DecorationToolRetrievalResponse) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA2DD0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
    sub_23F6D3458(&qword_256EA3110, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationToolRetrievalResponse);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
  }
}

#error "23F912064: call analysis failed (funcsize=188)"

uint64_t TranscriptProtoQueryDecorationResult.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoQueryDecorationResult, &qword_256EB25E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationResult);
}

unint64_t sub_23F912298()
{
  static TranscriptProtoQueryDecorationResult.protoMessageName.getter();
  return 0xD000000000000020;
}

#error "23F9122C4: call analysis failed (funcsize=5)"

void sub_23F9122D0()
{
  TranscriptProtoQueryDecorationResult.traverse<A>(visitor:)();
}

uint64_t sub_23F9122E4()
{
  sub_23F6D3458(&qword_256EB3BF0, type metadata accessor for TranscriptProtoQueryDecorationResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationResult);
  return sub_23FB2D784();
}

uint64_t sub_23F912338()
{
  sub_23F6D3458(&qword_256EB3A40, type metadata accessor for TranscriptProtoQueryDecorationResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationResult);
  return sub_23FB2D8F8();
}

uint64_t sub_23F91237C()
{
  sub_23F6D3458(&qword_256EB3A40, type metadata accessor for TranscriptProtoQueryDecorationResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationResult);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoQueryDecorationPrePlannerResult.protoMessageName.getter()
{
  return sub_23F6D3738(42);
}

uint64_t sub_23F9123E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1A80);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1A80);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "statementId";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "dataSource";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "payload";
  *((_QWORD *)v13 + 1) = 7;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoQueryDecorationPrePlannerResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1218, (uint64_t)qword_256EB1A80, a1);
}

void TranscriptProtoQueryDecorationPrePlannerResult.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 3:
          sub_23F6D38E0();
          sub_23F923998();
          break;
        case 2:
          sub_23F923334();
          break;
        case 1:
          sub_23F92360C();
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoQueryDecorationPrePlannerResult.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F92367C();
  sub_23F9126C0(v1);
  if (!v0)
  {
    sub_23F6D36FC();
    if (v2)
      sub_23F6D376C();
    sub_23F6D3664();
    sub_23F912830(v3);
    type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
    sub_23F6D37BC();
  }
  sub_23F6D3674();
}

void sub_23F9126C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t DecorationPrePlannerResult;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationPrePlannerResult = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
  sub_23F7A1EDC(a1 + *(int *)(DecorationPrePlannerResult + 20), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void sub_23F912830(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t DecorationPrePlannerResultPayload;
  uint64_t v6;
  char *v7;
  uint64_t DecorationPrePlannerResult;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA8608);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
  MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayload);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationPrePlannerResult = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
  sub_23F7A1EDC(a1 + *(int *)(DecorationPrePlannerResult + 24), (uint64_t)v4, &qword_256EA8608);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, DecorationPrePlannerResultPayload) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA8608);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
    sub_23F6D3458(&qword_256EB3B00, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
  }
}

void static TranscriptProtoQueryDecorationPrePlannerResult.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t DecorationPrePlannerResult;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  char v44;
  char v45;
  _QWORD *v46;
  _QWORD *v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t DecorationPrePlannerResultPayload;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;

  sub_23F6B50E8();
  v81 = v5;
  v7 = v6;
  v8 = sub_23F6B53A4();
  v72 = *(_QWORD *)(v8 - 8);
  v73 = v8;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v9);
  v71 = (uint64_t)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v11);
  v70 = (uint64_t)&v68 - v12;
  v13 = sub_23F6D398C();
  DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(v13);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B582C(v15, v68);
  v75 = sub_23F6916B8(&qword_256EB25F0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B5BD8(v17, v68);
  sub_23F6916B8(&qword_256EA8608);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  v74 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v20);
  v76 = (uint64_t)&v68 - v21;
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v22);
  v77 = (uint64_t)&v68 - v23;
  v24 = sub_23F923344();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F6B52B0();
  v26 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F6B59E0();
  sub_23F6B5D90();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F6B6618();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F6D3F60();
  MEMORY[0x24BDAC7A8](v30);
  v31 = sub_23F923B4C();
  DecorationPrePlannerResult = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(v31);
  v33 = *(int *)(DecorationPrePlannerResult + 20);
  v80 = v7;
  sub_23F923B18((uint64_t)v7 + v33, v3);
  v34 = DecorationPrePlannerResult;
  sub_23F923B18((uint64_t)v81 + *(int *)(DecorationPrePlannerResult + 20), v0);
  v35 = v4 + *(int *)(v26 + 48);
  v36 = sub_23F6B6224();
  sub_23F923B18(v36, v37);
  sub_23F923B18(v0, v35);
  sub_23F6B5164(v4, 1, v24);
  if (v40)
  {
    sub_23F6D3C1C(v0);
    sub_23F6D3C1C(v3);
    v39 = sub_23F6B5164(v35, 1, v24);
    if (v40)
    {
      sub_23F77E3DC(v39, &qword_256EA25E0);
      goto LABEL_11;
    }
LABEL_9:
    v42 = &qword_256EA25E8;
    v43 = v4;
LABEL_25:
    sub_23F6B4F84(v43, v42);
    goto LABEL_26;
  }
  sub_23F923CD0(v4, v38, &qword_256EA25E0);
  sub_23F6B5164(v35, 1, v24);
  if (v40)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F713FFC(v41, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_9;
  }
  sub_23F7E76D0(v35, v1, type metadata accessor for TranscriptProtoStatementID);
  sub_23F924930();
  v45 = v44;
  sub_23F6D3508(v1, type metadata accessor for TranscriptProtoStatementID);
  sub_23F6D3C1C(v0);
  sub_23F6D3C1C(v3);
  sub_23F6D3508(v2, type metadata accessor for TranscriptProtoStatementID);
  sub_23F6D3C1C(v4);
  if ((v45 & 1) == 0)
    goto LABEL_26;
LABEL_11:
  v46 = v80;
  v47 = v81;
  v48 = *v80 == *v81 && v80[1] == v81[1];
  if (!v48 && (sub_23F6B5280() & 1) == 0)
    goto LABEL_26;
  v49 = v34;
  v50 = v77;
  sub_23F92344C((uint64_t)v46 + *(int *)(v34 + 24), v77);
  v51 = v76;
  sub_23F92344C((uint64_t)v47 + *(int *)(v34 + 24), v76);
  v52 = v79;
  v53 = v79 + *(int *)(v75 + 48);
  sub_23F92344C(v50, v79);
  sub_23F92344C(v51, v53);
  v54 = DecorationPrePlannerResultPayload;
  sub_23F6B5164(v52, 1, DecorationPrePlannerResultPayload);
  if (v40)
  {
    sub_23F6D3C1C(v51);
    sub_23F6D3C1C(v50);
    v56 = sub_23F6B5164(v53, 1, v54);
    if (v40)
    {
      sub_23F9239A0(v56, &qword_256EA8608);
LABEL_28:
      v64 = v72;
      v63 = v73;
      v65 = v70;
      sub_23F713F84(v70, (uint64_t)v46 + *(int *)(v49 + 28));
      v66 = v71;
      sub_23F713F84(v71, (uint64_t)v47 + *(int *)(v49 + 28));
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F6B6060();
      v67 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
      v67(v66, v63);
      v67(v65, v63);
      goto LABEL_26;
    }
    goto LABEL_24;
  }
  v57 = (uint64_t)v74;
  sub_23F923BFC(v52, v55, &qword_256EA8608);
  sub_23F6B5164(v53, 1, v54);
  if (v58)
  {
    sub_23F6D3748(v51);
    sub_23F6D3748(v50);
    sub_23F7E7834(v59, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
LABEL_24:
    v42 = &qword_256EB25F0;
    v43 = v52;
    goto LABEL_25;
  }
  v60 = v69;
  sub_23F923774(v53, v69);
  sub_23F72E3F8();
  static TranscriptProtoQueryDecorationPrePlannerResultPayload.== infix(_:_:)();
  v62 = v61;
  sub_23F77DB60(v60);
  sub_23F6B62DC(v51);
  sub_23F6B62DC(v50);
  sub_23F77DB60(v57);
  sub_23F6B62DC(v52);
  if ((v62 & 1) != 0)
    goto LABEL_28;
LABEL_26:
  sub_23F6B5694();
  sub_23F693DDC();
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResult.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult, &qword_256EB25F8, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResult);
}

unint64_t sub_23F912EC0()
{
  static TranscriptProtoQueryDecorationPrePlannerResult.protoMessageName.getter();
  return 0xD00000000000002ALL;
}

void sub_23F912EE4()
{
  TranscriptProtoQueryDecorationPrePlannerResult.decodeMessage<A>(decoder:)();
}

void sub_23F912EF8()
{
  TranscriptProtoQueryDecorationPrePlannerResult.traverse<A>(visitor:)();
}

uint64_t sub_23F912F0C()
{
  sub_23F6D3458(&qword_256EB3BE8, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResult);
  return sub_23FB2D784();
}

uint64_t sub_23F912F60()
{
  sub_23F6D3458(&qword_256EB3A58, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResult);
  return sub_23FB2D8F8();
}

uint64_t sub_23F912FA4()
{
  sub_23F6D3458(&qword_256EB3A58, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResult);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant.protoMessageName.getter()
{
  return sub_23F6D3738(70);
}

uint64_t sub_23F913010()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1220, (uint64_t)&unk_256EB1A98, a1);
}

void TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_23F9062A8(a1, a2);
}

void TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant.traverse<A>(visitor:)()
{
  sub_23F913080();
}

void sub_23F913080()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F6D3EA4();
  if (!*(_QWORD *)(*(_QWORD *)v0 + 16) || (sub_23F923FF4(), !v1))
  {
    sub_23F923AF0();
    sub_23F9231A8();
  }
  sub_23F6D3750();
}

void static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant.== infix(_:_:)()
{
  sub_23F89AB14();
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant, &qword_256EB2600, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
}

unint64_t sub_23F913124()
{
  static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant.protoMessageName.getter();
  return 0xD000000000000046;
}

void sub_23F913148()
{
  TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F91315C()
{
  sub_23F6D3458(&qword_256EB3BE0, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F9131B0()
{
  sub_23F6D3458(&qword_256EB3A70, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F9131F4()
{
  sub_23F6D3458(&qword_256EB3A70, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant.protoMessageName.getter()
{
  return sub_23F6D3738(74);
}

uint64_t sub_23F913260()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1228, (uint64_t)&unk_256EB1AB0, a1);
}

void TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant.decodeMessage<A>(decoder:)()
{
  sub_23F913C48();
}

void TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant.traverse<A>(visitor:)()
{
  sub_23F8B4D24();
}

void static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant.== infix(_:_:)()
{
  sub_23F89AB14();
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant, &qword_256EB2608, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
}

unint64_t sub_23F913334()
{
  static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant.protoMessageName.getter();
  return 0xD00000000000004ALL;
}

void sub_23F913358()
{
  TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant.decodeMessage<A>(decoder:)();
}

void sub_23F91336C()
{
  TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F913380()
{
  sub_23F6D3458(&qword_256EB3BD8, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F9133D4()
{
  sub_23F6D3458(&qword_256EB3A88, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F913418()
{
  sub_23F6D3458(&qword_256EB3A88, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant.protoMessageName.getter()
{
  return sub_23F6D3738(80);
}

uint64_t sub_23F913484()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1230, (uint64_t)&unk_256EB1AC8, a1);
}

void TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant.decodeMessage<A>(decoder:)()
{
  sub_23F913C48();
}

void TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant.traverse<A>(visitor:)()
{
  sub_23F8B4D24();
}

void static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant.== infix(_:_:)()
{
  sub_23F89AB14();
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant, &qword_256EB2610, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
}

unint64_t sub_23F913558()
{
  static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant.protoMessageName.getter();
  return 0xD000000000000050;
}

void sub_23F91357C()
{
  TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant.decodeMessage<A>(decoder:)();
}

void sub_23F913590()
{
  TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F9135A4()
{
  sub_23F6D3458(&qword_256EB3BD0, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F9135F8()
{
  sub_23F6D3458(&qword_256EB3AA0, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F91363C()
{
  sub_23F6D3458(&qword_256EB3AA0, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant.protoMessageName.getter()
{
  return sub_23F6D3738(81);
}

uint64_t sub_23F9136A8()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1238, (uint64_t)&unk_256EB1AE0, a1);
}

void TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant.decodeMessage<A>(decoder:)()
{
  sub_23F913C48();
}

void TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant.traverse<A>(visitor:)()
{
  sub_23F8B4D24();
}

void static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant.== infix(_:_:)()
{
  sub_23F89AB14();
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant, &qword_256EB2618, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
}

unint64_t sub_23F91377C()
{
  static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant.protoMessageName.getter();
  return 0xD000000000000051;
}

void sub_23F9137A0()
{
  TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F9137B4()
{
  sub_23F6D3458(&qword_256EB3BC8, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F913808()
{
  sub_23F6D3458(&qword_256EB3AB8, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F91384C()
{
  sub_23F6D3458(&qword_256EB3AB8, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant.protoMessageName.getter()
{
  return sub_23F6D3738(77);
}

uint64_t sub_23F9138B8()
{
  return sub_23F913AF8();
}

uint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1240, (uint64_t)&unk_256EB1AF8, a1);
}

void TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant.decodeMessage<A>(decoder:)()
{
  sub_23F913C48();
}

void TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant.traverse<A>(visitor:)()
{
  sub_23F8B4D24();
}

void static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant.== infix(_:_:)()
{
  sub_23F89AB14();
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant, &qword_256EB2620, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
}

unint64_t sub_23F91398C()
{
  static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant.protoMessageName.getter();
  return 0xD00000000000004DLL;
}

void sub_23F9139B0()
{
  TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant.decodeMessage<A>(decoder:)();
}

void sub_23F9139C4()
{
  TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F9139D8()
{
  sub_23F6D3458(&qword_256EB3BC0, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F913A2C()
{
  sub_23F6D3458(&qword_256EB3AD0, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F913A70()
{
  sub_23F6D3458(&qword_256EB3AD0, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant.protoMessageName.getter()
{
  return sub_23F6D3738(79);
}

uint64_t sub_23F913ADC()
{
  return sub_23F913AF8();
}

uint64_t sub_23F913AF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_23F6D3A90();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = sub_23F924C64();
  sub_23F6D3418(v8, v7);
  v9 = sub_23F6B6098();
  sub_23F6BF1A4(v9, v10);
  sub_23F6916B8(&qword_256EA3238);
  v11 = sub_23F6916B8(&qword_256EA3240);
  v12 = *(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80);
  v13 = (v12 + 32) & ~v12;
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_23FB47010;
  v15 = v14 + v13 + *(int *)(v11 + 48);
  *(_QWORD *)(v14 + v13) = v5;
  *(_QWORD *)v15 = v3;
  *(_QWORD *)(v15 + 8) = v1;
  *(_BYTE *)(v15 + 16) = 2;
  v16 = *MEMORY[0x24BE5C318];
  v17 = sub_23FB2D9DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v15, v16, v17);
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1248, (uint64_t)&unk_256EB1B10, a1);
}

void TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant.decodeMessage<A>(decoder:)()
{
  sub_23F913C48();
}

void sub_23F913C48()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  sub_23F6D3DC4();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  sub_23F923474(v14, v12);
  while (1)
  {
    v15 = sub_23FB2D7B4();
    if (v1 || (v16 & 1) != 0)
      break;
    if (v15 == 1)
      v3(v0, v0, v13, v11, v9, v7, v5);
    sub_23F6D3D70();
  }
  sub_23F6D3710();
}

void TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant.traverse<A>(visitor:)()
{
  sub_23F8B4D24();
}

void static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant.== infix(_:_:)()
{
  sub_23F89AB14();
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant, &qword_256EB2628, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
}

unint64_t sub_23F913D2C()
{
  static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant.protoMessageName.getter();
  return 0xD00000000000004FLL;
}

void sub_23F913D50()
{
  TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant.decodeMessage<A>(decoder:)();
}

void sub_23F913D64()
{
  TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant.traverse<A>(visitor:)();
}

uint64_t sub_23F913D78()
{
  sub_23F6D3458(&qword_256EB3BB8, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
  return sub_23FB2D784();
}

uint64_t sub_23F913DCC()
{
  sub_23F6D3458(&qword_256EB3AE8, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
  return sub_23FB2D8F8();
}

uint64_t sub_23F913E10()
{
  sub_23F6D3458(&qword_256EB3AE8, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayload.protoMessageName.getter()
{
  return sub_23F6D3738(49);
}

uint64_t sub_23F913E7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1B28);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1B28);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1E0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "strings";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "typedValues";
  *(_QWORD *)(v11 + 8) = 11;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "retrievedContexts";
  *((_QWORD *)v13 + 1) = 17;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "entitySpanMatchResults";
  *((_QWORD *)v15 + 1) = 22;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "retrievedTools";
  *((_QWORD *)v17 + 1) = 14;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "toolQueryOutputs";
  *((_QWORD *)v19 + 1) = 16;
  v19[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayload._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1250, (uint64_t)qword_256EB1B28, a1);
}

void TranscriptProtoQueryDecorationPrePlannerResultPayload.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  char v1;
  char v3;
  char v4;

  sub_23F6D356C();
  if (!v0)
  {
    while ((v1 & 1) == 0)
    {
      sub_23F9249AC();
      if (!(!v4 & v3))
        __asm { BR              X9 }
      sub_23F6D35E8();
    }
  }
  sub_23F6D377C();
}

void sub_23F914174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
  v6 = MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayloadRepeatedStringVariant);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2630);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](DecorationPrePlannerPayloadEnum);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB42C0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, DecorationPrePlannerResultPayloadRepeatedStringVariant);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2630);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, DecorationPrePlannerPayloadEnum);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2630);
    v25 = DecorationPrePlannerPayloadEnum;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    v25 = DecorationPrePlannerPayloadEnum;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    }
    else
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB42C0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, DecorationPrePlannerResultPayloadRepeatedStringVariant);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3A70, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB42C0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB42C0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, DecorationPrePlannerResultPayloadRepeatedStringVariant) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB42C0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB42C0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2630);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F91455C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
  v6 = MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2630);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](DecorationPrePlannerPayloadEnum);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB42C8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, DecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2630);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, DecorationPrePlannerPayloadEnum);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2630);
    v25 = DecorationPrePlannerPayloadEnum;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    v25 = DecorationPrePlannerPayloadEnum;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB42C8);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, DecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3A88, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB42C8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB42C8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, DecorationPrePlannerResultPayloadRepeatedTypedValueVariant) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB42C8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB42C8);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2630);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F914948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
  v6 = MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2630);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](DecorationPrePlannerPayloadEnum);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB42D0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2630);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, DecorationPrePlannerPayloadEnum);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2630);
    v25 = DecorationPrePlannerPayloadEnum;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    v25 = DecorationPrePlannerPayloadEnum;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB42D0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3AA0, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB42D0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB42D0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB42D0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB42D0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2630);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F914D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t DecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  DecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
  v6 = MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2630);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](DecorationPrePlannerPayloadEnum);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB42D8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, DecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2630);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, DecorationPrePlannerPayloadEnum);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2630);
    v25 = DecorationPrePlannerPayloadEnum;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    v25 = DecorationPrePlannerPayloadEnum;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB42D8);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, DecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3AB8, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB42D8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB42D8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, DecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB42D8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB42D8);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2630);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F915120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t DecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  DecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
  v6 = MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2630);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](DecorationPrePlannerPayloadEnum);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB42E0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, DecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2630);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, DecorationPrePlannerPayloadEnum);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2630);
    v25 = DecorationPrePlannerPayloadEnum;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    v25 = DecorationPrePlannerPayloadEnum;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB42E0);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, DecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3AD0, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB42E0);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB42E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, DecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB42E0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB42E0);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2630);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

void sub_23F91550C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t DecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  DecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
  v6 = MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F6916B8(&qword_256EB2630);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  v14 = MEMORY[0x24BDAC7A8](DecorationPrePlannerPayloadEnum);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F6916B8(&qword_256EB42E8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)&v30 - v23, 1, 1, DecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
  v30 = a1;
  sub_23F7A1EDC(a1, (uint64_t)v12, &qword_256EB2630);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, DecorationPrePlannerPayloadEnum);
  if (v31 == 1)
  {
    sub_23F6B4F84((uint64_t)v12, &qword_256EB2630);
    v25 = DecorationPrePlannerPayloadEnum;
  }
  else
  {
    sub_23F7E76D0((uint64_t)v12, (uint64_t)v18, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    sub_23F7E76D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    v25 = DecorationPrePlannerPayloadEnum;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_23F6B4F84((uint64_t)v24, &qword_256EB42E8);
      sub_23F7E76D0((uint64_t)v16, (uint64_t)v9, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
      sub_23F7E76D0((uint64_t)v9, (uint64_t)v24, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, DecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
    }
    else
    {
      sub_23F6D3508((uint64_t)v16, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    }
  }
  v26 = v33;
  sub_23F6D3458(&qword_256EB3AE8, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
  sub_23FB2D8B0();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F6B4F84(v27, &qword_256EB42E8);
    return;
  }
  sub_23F7A1EDC((uint64_t)v24, (uint64_t)v22, &qword_256EB42E8);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, DecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant) == 1)
  {
    sub_23F6B4F84((uint64_t)v24, &qword_256EB42E8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F7E76D0((uint64_t)v22, v32, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
  if (v31 != 1)
    sub_23FB2D7C0();
  sub_23F6B4F84((uint64_t)v24, &qword_256EB42E8);
  v29 = v30;
  sub_23F6B4F84(v30, &qword_256EB2630);
  sub_23F7E76D0(v28, v29, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v29, 0, 1, v25);
}

#error "23F91592C: call analysis failed (funcsize=36)"

void sub_23F9159E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant;
  uint64_t v6;
  char *v7;
  uint64_t DecorationPrePlannerPayloadEnum;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2630);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
  MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayloadRepeatedStringVariant);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2630);
  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, DecorationPrePlannerPayloadEnum) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2630);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
      sub_23F6D3458(&qword_256EB3A70, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
  }
  __break(1u);
}

void sub_23F915B7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant;
  uint64_t v6;
  char *v7;
  uint64_t DecorationPrePlannerPayloadEnum;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2630);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
  MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2630);
  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, DecorationPrePlannerPayloadEnum) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2630);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
      sub_23F6D3458(&qword_256EB3A88, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
  }
  __break(1u);
}

void sub_23F915D14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant;
  uint64_t v6;
  char *v7;
  uint64_t DecorationPrePlannerPayloadEnum;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2630);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
  MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2630);
  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, DecorationPrePlannerPayloadEnum) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2630);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
      sub_23F6D3458(&qword_256EB3AA0, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
  }
  __break(1u);
}

void sub_23F915EAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t DecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant;
  uint64_t v6;
  char *v7;
  uint64_t DecorationPrePlannerPayloadEnum;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2630);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
  MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2630);
  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, DecorationPrePlannerPayloadEnum) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2630);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
      sub_23F6D3458(&qword_256EB3AB8, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
  }
  __break(1u);
}

void sub_23F916044(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t DecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant;
  uint64_t v6;
  char *v7;
  uint64_t DecorationPrePlannerPayloadEnum;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2630);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
  MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2630);
  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, DecorationPrePlannerPayloadEnum) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2630);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
      sub_23F6D3458(&qword_256EB3AD0, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
  }
  __break(1u);
}

void sub_23F9161DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t DecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant;
  uint64_t v6;
  char *v7;
  uint64_t DecorationPrePlannerPayloadEnum;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB2630);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
  MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F7A1EDC(a1, (uint64_t)v4, &qword_256EB2630);
  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, DecorationPrePlannerPayloadEnum) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB2630);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
      sub_23F6D3458(&qword_256EB3AE8, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
      sub_23FB2D9D0();
      sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
      return;
    }
    sub_23F6D3508((uint64_t)v4, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
  }
  __break(1u);
}

void static TranscriptProtoQueryDecorationPrePlannerResultPayload.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t DecorationPrePlannerResultPayload;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F6B50E8();
  v5 = v4;
  v39 = sub_23F6B53A4();
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F923144(v7, v39);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = sub_23F6D38F8(v9, v10, v11, v12, v13, v14, v15, v16, v40);
  type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B59E0();
  v19 = sub_23F6916B8(&qword_256EB2638);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5208();
  sub_23F6B6E54();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F6D3A70();
  v24 = MEMORY[0x24BDAC7A8](v23);
  sub_23F923124(v24, v25, v26, v27, v28, v29, v30, v31, v41);
  sub_23F923164(v5, v0);
  v32 = v1 + *(int *)(v19 + 48);
  sub_23F923164(v3, v1);
  sub_23F923164(v0, v32);
  v33 = sub_23F9230E4(v1);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    v35 = sub_23F9230E4(v32);
    if (v36)
    {
      sub_23F6D378C(v35, &qword_256EB2630);
LABEL_11:
      DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
      sub_23F6D3794(DecorationPrePlannerResultPayload);
      sub_23F6D3974();
      sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F9231CC();
      sub_23F9231B8();
      sub_23F6D39FC(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F9232A4(v33, v34, &qword_256EB2630);
  sub_23F9230E4(v32);
  if (v36)
  {
    sub_23F6B64F4(v0);
    sub_23F6B64F4(v3);
    sub_23F6D3C24(v37, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
LABEL_9:
    sub_23F6D378C(v35, &qword_256EB2638);
    goto LABEL_12;
  }
  sub_23F923270();
  sub_23F6D3D70();
  static TranscriptProtoQueryDecorationPrePlannerPayloadEnum.== infix(_:_:)();
  sub_23F923248();
  sub_23F6D38A8(v0);
  sub_23F6D38A8(v3);
  sub_23F6D3928(v2);
  sub_23F6D38A8(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F92348C();
  sub_23F693DDC();
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayload.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload, &qword_256EB2640, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
}

unint64_t sub_23F9165A8()
{
  static TranscriptProtoQueryDecorationPrePlannerResultPayload.protoMessageName.getter();
  return 0xD000000000000031;
}

void sub_23F9165CC()
{
  TranscriptProtoQueryDecorationPrePlannerResultPayload.decodeMessage<A>(decoder:)();
}

uint64_t sub_23F9165E0()
{
  return TranscriptProtoQueryDecorationPrePlannerResultPayload.traverse<A>(visitor:)();
}

uint64_t sub_23F9165F4()
{
  sub_23F6D3458(&qword_256EB3BB0, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
  return sub_23FB2D784();
}

uint64_t sub_23F916648()
{
  sub_23F6D3458(&qword_256EB3B00, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
  return sub_23FB2D8F8();
}

uint64_t sub_23F91668C()
{
  sub_23F6D3458(&qword_256EB3B00, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoTextQuery.protoMessageName.getter()
{
  return sub_23F6D3738(20);
}

uint64_t sub_23F9166F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1B40);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1B40);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1C0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "query";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "safetyMode";
  *(_QWORD *)(v11 + 8) = 10;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "statementId";
  *((_QWORD *)v13 + 1) = 11;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "clientQueryId";
  *((_QWORD *)v15 + 1) = 13;
  v15[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoTextQuery._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1258, (uint64_t)qword_256EB1B40, a1);
}

void TranscriptProtoTextQuery.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;

  sub_23F6B5220();
  sub_23F6D356C();
  if (!v12)
  {
    while ((v13 & 1) == 0)
    {
      sub_23F6D3E98();
      if (!(!v24 & v23))
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_23F916934 + 4 * byte_23FB74E32[v22]))(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10, a11, a12);
        return;
      }
      sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void sub_23F916984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  sub_23F6D3B5C(a1, a2, a3, a4, a5);
  sub_23F6D37D4();
  sub_23F6D377C();
}

void TranscriptProtoTextQuery.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);

  sub_23F6D36FC();
  if (!v1 || (sub_23F923258(), !v0))
  {
    sub_23F9246F4();
    if (!v2 || (sub_23F923850(), !v0))
    {
      v3 = sub_23F6D3D7C();
      sub_23F916A70(v3);
      if (!v0)
      {
        v4 = sub_23F6D3D7C();
        sub_23F916BE0(v4, v5, v6, v7, v8);
        type metadata accessor for TranscriptProtoTextQuery(0);
        sub_23F9231A8();
      }
    }
  }
  sub_23F6D3674();
}

void sub_23F916A70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EA25E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoTextQuery(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_256EA25E0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EA25E0);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_23F6D3458(&qword_256EB2020, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
}

void sub_23F916BE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;

  if (*(_QWORD *)(v5 + *(int *)(sub_23F6D3B5C(a1, a2, a3, a4, a5) + 28) + 8))
    sub_23F923258();
  sub_23F6D377C();
}

void static TranscriptProtoTextQuery.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  sub_23F6B50E8();
  v6 = sub_23F6D35C0();
  v44 = *(_QWORD *)(v6 - 8);
  v45 = v6;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v7);
  v43 = (uint64_t)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v9);
  v42 = (uint64_t)&v40 - v10;
  v11 = sub_23F923344();
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F6B5268();
  v13 = sub_23F6916B8(&qword_256EA25E8);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F6B65E0();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6D3BD8();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v40 - v18;
  sub_23F6B6754();
  v22 = v22 && v20 == v21;
  if (v22 || (sub_23F6B5280() & 1) != 0)
  {
    sub_23F923CD8();
    if (v22)
    {
      v40 = v4;
      v23 = type metadata accessor for TranscriptProtoTextQuery(0);
      v24 = sub_23F9247F8(v23);
      sub_23F923848(v24, (uint64_t)v19);
      v41 = v23;
      sub_23F923848(v1 + *(int *)(v23 + 24), v0);
      v25 = v3 + *(int *)(v13 + 48);
      sub_23F923848((uint64_t)v19, v3);
      sub_23F923848(v0, v25);
      sub_23F6B5164(v3, 1, v11);
      if (v22)
      {
        sub_23F6D38A8(v0);
        sub_23F6D38A8((uint64_t)v19);
        v27 = sub_23F6B5164(v25, 1, v11);
        if (v22)
        {
          sub_23F6D378C(v27, &qword_256EA25E0);
          goto LABEL_18;
        }
      }
      else
      {
        sub_23F923760(v3, v26, &qword_256EA25E0);
        sub_23F6B5164(v25, 1, v11);
        if (!v28)
        {
          sub_23F923C04(v25);
          sub_23F923B28();
          sub_23F923838();
          sub_23F6D387C(v0);
          sub_23F6D387C((uint64_t)v19);
          sub_23F77E330(v5);
          sub_23F6D387C(v3);
          if ((v25 & 1) == 0)
            goto LABEL_27;
LABEL_18:
          v30 = v41;
          v31 = *(int *)(v41 + 28);
          v32 = *(_QWORD *)(v1 + v31 + 8);
          if (*(_QWORD *)(v2 + v31 + 8))
          {
            if (!v32)
              goto LABEL_27;
            sub_23F6D3998(v2 + v31);
            v35 = v22 && v33 == v34;
            if (!v35 && (sub_23F6B5280() & 1) == 0)
              goto LABEL_27;
          }
          else if (v32)
          {
            goto LABEL_27;
          }
          v36 = v2 + *(int *)(v30 + 32);
          v37 = v42;
          sub_23F923484(v42, v36);
          v38 = v1 + *(int *)(v30 + 32);
          v39 = v43;
          sub_23F923484(v43, v38);
          sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          sub_23F6B5624();
          sub_23F6D39FC(v39);
          sub_23F6D39FC(v37);
          goto LABEL_27;
        }
        sub_23F6D3748(v0);
        sub_23F6D3748((uint64_t)v19);
        sub_23F77DB94(v29, type metadata accessor for TranscriptProtoStatementID);
      }
      sub_23F6D378C(v27, &qword_256EA25E8);
    }
  }
LABEL_27:
  sub_23F693DDC();
}

uint64_t TranscriptProtoTextQuery.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoTextQuery, &qword_256EB2648, (uint64_t)&protocol conformance descriptor for TranscriptProtoTextQuery);
}

unint64_t sub_23F916F60()
{
  static TranscriptProtoTextQuery.protoMessageName.getter();
  return 0xD000000000000014;
}

#error "23F916F8C: call analysis failed (funcsize=5)"

void sub_23F916F98()
{
  TranscriptProtoTextQuery.traverse<A>(visitor:)();
}

uint64_t sub_23F916FAC()
{
  sub_23F6D3458(&qword_256EB3BA8, type metadata accessor for TranscriptProtoTextQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoTextQuery);
  return sub_23FB2D784();
}

uint64_t sub_23F917000()
{
  sub_23F6D3458(&qword_256EB3B18, type metadata accessor for TranscriptProtoTextQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoTextQuery);
  return sub_23FB2D8F8();
}

uint64_t sub_23F917044()
{
  sub_23F6D3458(&qword_256EB3B18, type metadata accessor for TranscriptProtoTextQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoTextQuery);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoExternalAgentTextQuery.protoMessageName.getter()
{
  return sub_23F6D3738(33);
}

uint64_t sub_23F9170B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1B58);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1B58);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "query";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "queryRewriteMetadataEventId";
  *((_QWORD *)v11 + 1) = 27;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "queryRewriteMetadataInlined";
  *((_QWORD *)v13 + 1) = 27;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoExternalAgentTextQuery._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1260, (uint64_t)qword_256EB1B58, a1);
}

void TranscriptProtoExternalAgentTextQuery.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 3:
          sub_23F9235E8();
          break;
        case 2:
          sub_23F6D37D4();
          break;
        case 1:
          sub_23F923334();
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoExternalAgentTextQuery.traverse<A>(visitor:)()
{
  sub_23F8D3DAC();
}

void sub_23F917310(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB1C30);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_256EB1C30);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB1C30);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    sub_23F6D3458(&qword_256EB27E8, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  }
}

void static TranscriptProtoExternalAgentTextQuery.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  sub_23F6B50E8();
  v5 = sub_23F6D35C0();
  v54 = *(_QWORD *)(v5 - 8);
  v55 = v5;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v6);
  v53 = (uint64_t)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = sub_23F6D38F8(v9, v10, v11, v12, v13, v14, v15, v16, v50);
  type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(v17);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B59E0();
  v19 = sub_23F6916B8(&qword_256EB1C28);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6B5208();
  sub_23F6916B8(&qword_256EB1C30);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F6B65FC();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F9232B0();
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v50 - v24;
  sub_23F6B6754();
  v28 = v28 && v26 == v27;
  if (!v28 && (sub_23F6B5280() & 1) == 0)
    goto LABEL_26;
  sub_23F924BD8();
  if (!v30)
  {
    if (v29)
      goto LABEL_26;
LABEL_15:
    v34 = sub_23F924508();
    v35 = type metadata accessor for TranscriptProtoExternalAgentTextQuery(v34);
    v36 = sub_23F9247F8(v35);
    sub_23F923268(v36, (uint64_t)v25);
    v51 = v35;
    sub_23F923268(v1 + *(int *)(v35 + 24), v0);
    v37 = v3 + *(int *)(v19 + 48);
    sub_23F923268((uint64_t)v25, v3);
    sub_23F923268(v0, v37);
    v38 = sub_23F9230E4(v3);
    if (v28)
    {
      sub_23F6D3748(v0);
      sub_23F6D3748((uint64_t)v25);
      v40 = sub_23F9230E4(v37);
      if (v28)
      {
        sub_23F6D378C(v40, &qword_256EB1C30);
        goto LABEL_25;
      }
    }
    else
    {
      sub_23F9232A4(v38, v39, &qword_256EB1C30);
      sub_23F9230E4(v37);
      if (!v41)
      {
        v43 = v50;
        sub_23F7F6534(v37, v50);
        static TranscriptProtoExternalAgentRequestRewriteMetadata.== infix(_:_:)();
        v45 = v44;
        sub_23F6D38A0(v43);
        sub_23F6D38A8(v0);
        sub_23F6D38A8((uint64_t)v25);
        sub_23F6D38A0(v4);
        sub_23F6D38A8(v3);
        if ((v45 & 1) == 0)
          goto LABEL_26;
LABEL_25:
        v46 = v51;
        v47 = v52;
        sub_23F6D3818(v52, v2 + *(int *)(v51 + 28));
        v48 = v1 + *(int *)(v46 + 28);
        v49 = v53;
        sub_23F6D3818(v53, v48);
        sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        sub_23F6D37C8();
        sub_23F6D3DA4(v49);
        sub_23F6D3DA4(v47);
        goto LABEL_26;
      }
      sub_23F6D3748(v0);
      sub_23F6D3748((uint64_t)v25);
      sub_23F6D3C24(v42, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    }
    sub_23F6D378C(v40, &qword_256EB1C28);
    goto LABEL_26;
  }
  if (v29)
  {
    sub_23F924208();
    v33 = v28 && v31 == v32;
    if (v33 || (sub_23F6B5280() & 1) != 0)
      goto LABEL_15;
  }
LABEL_26:
  sub_23F6B5694();
  sub_23F693DDC();
}

uint64_t TranscriptProtoExternalAgentTextQuery.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoExternalAgentTextQuery, &qword_256EB2650, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentTextQuery);
}

unint64_t sub_23F917780()
{
  static TranscriptProtoExternalAgentTextQuery.protoMessageName.getter();
  return 0xD000000000000021;
}

void sub_23F9177A4()
{
  TranscriptProtoExternalAgentTextQuery.decodeMessage<A>(decoder:)();
}

void sub_23F9177B8()
{
  TranscriptProtoExternalAgentTextQuery.traverse<A>(visitor:)();
}

uint64_t sub_23F9177CC()
{
  sub_23F6D3458(&qword_256EB3BA0, type metadata accessor for TranscriptProtoExternalAgentTextQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentTextQuery);
  return sub_23FB2D784();
}

uint64_t sub_23F917820()
{
  sub_23F6D3458(&qword_256EB3B30, type metadata accessor for TranscriptProtoExternalAgentTextQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentTextQuery);
  return sub_23FB2D8F8();
}

uint64_t sub_23F917864()
{
  sub_23F6D3458(&qword_256EB3B30, type metadata accessor for TranscriptProtoExternalAgentTextQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentTextQuery);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoSpeechQuery.protoMessageName.getter()
{
  return sub_23F6D3738(22);
}

uint64_t sub_23F9178D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1B70);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1B70);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "candidates";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "safetyMode";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "clientQueryId";
  *((_QWORD *)v13 + 1) = 13;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoSpeechQuery._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1268, (uint64_t)qword_256EB1B70, a1);
}

void TranscriptProtoSpeechQuery.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 3:
          sub_23F6D37D4();
          break;
        case 2:
          sub_23F6D3F00();
          break;
        case 1:
          sub_23F6C7398();
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoSpeechQuery.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F6D3DC4();
  sub_23F9233B4();
  if (!v2
    || (type metadata accessor for TranscriptProtoSpeechRequestCandidate(0),
        sub_23F6D3458(&qword_256EB1C78, type metadata accessor for TranscriptProtoSpeechRequestCandidate, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechRequestCandidate), sub_23F923350(), !v0))
  {
    if (*(_BYTE *)(v1 + 8) != 1 || (sub_23F923850(), !v0))
    {
      v3 = sub_23F9236C4();
      sub_23F6C7C88(v3);
      if (!v0)
      {
        type metadata accessor for TranscriptProtoSpeechQuery(0);
        sub_23F9231A8();
      }
    }
  }
  sub_23F6D3710();
}

void static TranscriptProtoSpeechQuery.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  sub_23F6D3A90();
  sub_23F6D35C0();
  sub_23F6D36BC();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F6B5CB8();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F923E98();
  sub_23F695E2C();
  if ((v5 & 1) == 0 || *(unsigned __int8 *)(v2 + 8) != *(unsigned __int8 *)(v1 + 8))
    goto LABEL_3;
  sub_23F924BD8();
  if (!v7)
  {
    if (v6)
      goto LABEL_3;
LABEL_13:
    v11 = type metadata accessor for TranscriptProtoSpeechQuery(0);
    sub_23F6D3614(*(int *)(v11 + 28));
    sub_23F6D36AC(*(int *)(v11 + 28));
    sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F6D3600();
    sub_23F6D36D0();
    sub_23F6D3820(v0);
    goto LABEL_3;
  }
  if (v6)
  {
    sub_23F924208();
    v10 = v10 && v8 == v9;
    if (v10 || (sub_23F6B5280() & 1) != 0)
      goto LABEL_13;
  }
LABEL_3:
  sub_23F6D3B34();
  sub_23F6B69E0();
}

uint64_t TranscriptProtoSpeechQuery.hashValue.getter()
{
  return sub_23F6C2504(type metadata accessor for TranscriptProtoSpeechQuery, &qword_256EB2658, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechQuery);
}

unint64_t sub_23F917CE0()
{
  static TranscriptProtoSpeechQuery.protoMessageName.getter();
  return 0xD000000000000016;
}

void sub_23F917D04()
{
  TranscriptProtoSpeechQuery.decodeMessage<A>(decoder:)();
}

void sub_23F917D18()
{
  TranscriptProtoSpeechQuery.traverse<A>(visitor:)();
}

uint64_t sub_23F917D2C()
{
  sub_23F6D3458(&qword_256EB3B98, type metadata accessor for TranscriptProtoSpeechQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechQuery);
  return sub_23FB2D784();
}

uint64_t sub_23F917D80()
{
  sub_23F6D3458(&qword_256EB3B48, type metadata accessor for TranscriptProtoSpeechQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechQuery);
  return sub_23FB2D8F8();
}

uint64_t sub_23F917DC4()
{
  sub_23F6D3458(&qword_256EB3B48, type metadata accessor for TranscriptProtoSpeechQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechQuery);
  return sub_23FB2D904();
}

unint64_t static TranscriptProtoExternalAgentSpeechQuery.protoMessageName.getter()
{
  return sub_23F6D3738(35);
}

uint64_t sub_23F917E30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23FB2DA00();
  sub_23F6D3418(v0, qword_256EB1B88);
  sub_23F6BF1A4(v0, (uint64_t)qword_256EB1B88);
  sub_23F6916B8(&qword_256EA3238);
  v1 = sub_23F6916B8(&qword_256EA3240);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23FB4F1A0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "candidates";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23FB2D9DC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "queryRewriteMetadataEventId";
  *((_QWORD *)v11 + 1) = 27;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "queryRewriteMetadataInlined";
  *((_QWORD *)v13 + 1) = 27;
  v13[16] = 2;
  v10();
  return sub_23FB2D9E8();
}

uint64_t static TranscriptProtoExternalAgentSpeechQuery._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F879EC0(&qword_256EA1270, (uint64_t)qword_256EB1B88, a1);
}

void TranscriptProtoExternalAgentSpeechQuery.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F6B5220();
  v1 = sub_23F6D356C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 3:
          sub_23F6D3598();
          sub_23F923FE0();
          break;
        case 2:
          sub_23F6D37D4();
          break;
        case 1:
          sub_23F9238F4();
          break;
      }
      v1 = sub_23F6D35E8();
    }
  }
  sub_23F6B5100();
}

void TranscriptProtoExternalAgentSpeechQuery.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F6D3DC4();
  sub_23F9233B4();
  if (!v1
    || (type metadata accessor for TranscriptProtoSpeechRequestCandidate(0),
        sub_23F6D3458(&qword_256EB1C78, type metadata accessor for TranscriptProtoSpeechRequestCandidate, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechRequestCandidate), sub_23F923350(), !v0))
  {
    v2 = sub_23F924648();
    sub_23F6C74C4(v2);
    if (!v0)
    {
      sub_23F9231FC();
      sub_23F91812C(v3);
      type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
      sub_23F9231A8();
    }
  }
  sub_23F6D3710();
}

void sub_23F91812C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F6916B8(&qword_256EB1C30);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
  sub_23F7A1EDC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_256EB1C30);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F6B4F84((uint64_t)v4, &qword_256EB1C30);
  }
  else
  {
    sub_23F7E76D0((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    sub_23F6D3458(&qword_256EB27E8, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    sub_23FB2D9D0();
    sub_23F6D3508((uint64_t)v7, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  }
}

void static TranscriptProtoExternalAgentSpeechQuery.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  sub_23F6B50E8();
  v7 = v6;
  v9 = v8;
  v10 = sub_23F6B53A4();
  v59 = *(_QWORD *)(v10 - 8);
  v60 = v10;
  sub_23F693E20();
  MEMORY[0x24BDAC7A8](v11);
  v58 = (uint64_t)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6B5664();
  MEMORY[0x24BDAC7A8](v13);
  v14 = sub_23F6B6308();
  v15 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(v14);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F6B5298();
  v17 = sub_23F6916B8(&qword_256EB1C28);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F6B5268();
  sub_23F6916B8(&qword_256EB1C30);
  sub_23F6D3588();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F6B65E0();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F6D3A70();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F923EC8();
  sub_23F695E2C();
  if ((v22 & 1) == 0)
    goto LABEL_31;
  v23 = v17;
  v56 = v4;
  v57 = v1;
  v54 = v5;
  v55 = v15;
  v53 = v0;
  v24 = *(_QWORD *)(v9 + 16);
  v25 = *(_QWORD *)(v7 + 16);
  if (!v24)
  {
    v26 = v3;
    v27 = v2;
    v28 = v23;
    if (v25)
      goto LABEL_31;
LABEL_11:
    v30 = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
    v31 = sub_23F924A2C(v30);
    v32 = v57;
    sub_23F923268(v31, v57);
    sub_23F923268(v7 + *(int *)(v30 + 24), v27);
    v33 = v56;
    v34 = v56 + *(int *)(v28 + 48);
    sub_23F923268(v32, v56);
    sub_23F923268(v27, v34);
    v35 = sub_23F923D00();
    v36 = v55;
    sub_23F6B5164(v35, v37, v55);
    if (v29)
    {
      sub_23F6D3748(v27);
      sub_23F6D3748(v32);
      v39 = sub_23F6B5164(v34, 1, v36);
      if (v29)
      {
        sub_23F923588(v39, &qword_256EB1C30);
LABEL_16:
        sub_23F6D3818(v26, v9 + *(int *)(v30 + 28));
        v40 = v26;
        v41 = v58;
        sub_23F6D3818(v58, v7 + *(int *)(v30 + 28));
        sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        sub_23F923230();
        sub_23F6D3DA4(v41);
        sub_23F6D3DA4(v40);
        goto LABEL_31;
      }
    }
    else
    {
      v42 = v54;
      sub_23F923640(v33, v38, &qword_256EB1C30);
      sub_23F6B5164(v34, 1, v36);
      if (!v43)
      {
        v48 = v34;
        v49 = v53;
        sub_23F924AFC(v48, v44, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
        v50 = *(_QWORD *)v42 == *(_QWORD *)v49 && *(_QWORD *)(v42 + 8) == *(_QWORD *)(v49 + 8);
        if (v50 || (sub_23F6B5280() & 1) != 0)
        {
          sub_23F6957CC(*(_QWORD **)(v42 + 16), *(_QWORD **)(v49 + 16));
          if ((v51 & 1) != 0)
          {
            sub_23F6D3458((unint64_t *)&qword_256EA2598, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
            sub_23F924900();
            v52 = sub_23F923CF8();
            sub_23F6D3DAC(v49);
            sub_23F6D387C(v27);
            sub_23F6D387C(v57);
            sub_23F6D3DAC(v42);
            sub_23F6D387C(v33);
            if ((v52 & 1) == 0)
              goto LABEL_31;
            goto LABEL_16;
          }
        }
        sub_23F6D38A0(v49);
        sub_23F6B6EF8(v27);
        sub_23F6B6EF8(v57);
        sub_23F6D38A0(v42);
        v47 = sub_23F78F478();
LABEL_30:
        sub_23F6B4F84(v47, v46);
        goto LABEL_31;
      }
      sub_23F6D3748(v27);
      sub_23F6D3748(v57);
      sub_23F72E404(v45, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    }
    v46 = &qword_256EB1C28;
    v47 = v33;
    goto LABEL_30;
  }
  if (v25)
  {
    v26 = v3;
    v27 = v2;
    v28 = v23;
    v29 = *(_QWORD *)(v9 + 8) == *(_QWORD *)(v7 + 8) && v24 == v25;
    if (v29 || (sub_23F6B5280() & 1) != 0)
      goto LABEL_11;
  }
LABEL_31:
  sub_23F6B5694();
  sub_23F693DDC();
}

